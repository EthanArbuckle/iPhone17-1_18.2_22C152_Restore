uint64_t sub_1C227B898(uint64_t a1, char a2)
{
  return sub_1C227B8B0(a1, a2, (void (*)(void))sub_1C2284D50);
}

uint64_t sub_1C227B8B0(uint64_t a1, char a2, void (*a3)(void))
{
  v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  uint64_t v7 = sub_1C2550660();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  v37 = v3;
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v37;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    v32 = *(void **)(*(void *)(v6 + 48) + v31);
    v33 = *(void **)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      id v35 = v33;
    }
    uint64_t result = sub_1C254FF60();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  v4 = v37;
  v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_1C227BB84(uint64_t a1, char a2)
{
  return sub_1C227F57C(a1, a2, (void (*)(void))sub_1C2284CB4);
}

uint64_t sub_1C227BB9C(uint64_t a1, char a2)
{
  return sub_1C2280128(a1, a2, (void (*)(void))sub_1C2284680);
}

uint64_t sub_1C227BBB4(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2206AFC();
  char v35 = a2;
  uint64_t v6 = sub_1C2550660();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    unint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_1C2206B9C(v22, v36);
    }
    else
    {
      sub_1C21A9A38((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_1C254F470();
    sub_1C25509C0();
    sub_1C254F570();
    uint64_t v24 = sub_1C2550A10();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_1C2206B9C(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C227BEEC(uint64_t a1, char a2)
{
  return sub_1C227E0BC(a1, a2, &qword_1EA2DE480, (unint64_t *)&qword_1EA2DE010);
}

uint64_t sub_1C227BF08(uint64_t a1, int a2)
{
  v3 = v2;
  uint64_t v5 = type metadata accessor for BrowseCategory();
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1C22850CC(0, (unint64_t *)&qword_1EBB6D8D0, (void (*)(uint64_t))sub_1C2285800);
  int v40 = a2;
  uint64_t v9 = sub_1C2550660();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v36 = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v38 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    unint64_t v22 = v38;
    unint64_t v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = v38[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = v38[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v39 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v40)
    {
      sub_1C22848A0(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
    }
    else
    {
      sub_1C2285178(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
      swift_bridgeObjectRetain();
    }
    sub_1C25509C0();
    BrowseCategory.rawValue.getter();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C2550A10();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_1C22848A0((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  v3 = v36;
  unint64_t v22 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_1C227C31C(uint64_t a1, int a2)
{
  v3 = v2;
  uint64_t v5 = type metadata accessor for BrowseCategory();
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1C220823C();
  int v40 = a2;
  uint64_t v9 = sub_1C2550660();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v38 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v36 = v2;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    unint64_t v22 = v38;
    unint64_t v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = v38[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = v38[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v39 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v40) {
      sub_1C22848A0(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    }
    else {
      sub_1C2285178(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    }
    uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
    sub_1C25509C0();
    BrowseCategory.rawValue.getter();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C2550A10();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_1C22848A0((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  v3 = v36;
  unint64_t v22 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_1C227C700(uint64_t a1, int a2)
{
  v3 = v2;
  uint64_t v5 = sub_1C254CB40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1C2207F78();
  int v46 = a2;
  uint64_t v10 = sub_1C2550660();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  int64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    uint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_1C2283A0C((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1C254F370();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  v3 = v40;
  uint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_1C227CB20(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2283FDC(0, &qword_1EBB6DD90, (void (*)(uint64_t))sub_1C228541C);
  char v36 = a2;
  uint64_t v6 = sub_1C2550660();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1C25509C0();
    sub_1C254F570();
    uint64_t result = sub_1C2550A10();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C227CE60(uint64_t a1, char a2)
{
  return sub_1C227E0BC(a1, a2, &qword_1EBB6DD98, &qword_1EBB6DD88);
}

uint64_t sub_1C227CE7C(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C228529C();
  uint64_t result = sub_1C2550660();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v32 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v31 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v31) {
          goto LABEL_33;
        }
        unint64_t v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v21 = v32[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v32 = -1 << v30;
              }
              v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v31) {
                  goto LABEL_33;
                }
                unint64_t v21 = v32[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = 8 * v19;
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + v27);
      uint64_t v29 = *(void *)(*(void *)(v5 + 56) + v27);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1C25509C0();
      sub_1C25509D0();
      uint64_t result = sub_1C2550A10();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v7 + 48) + v17) = v28;
      *(void *)(*(void *)(v7 + 56) + v17) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C227D154(uint64_t a1, int a2)
{
  v3 = v2;
  uint64_t v5 = sub_1C254CAD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1C22851E0();
  int v46 = a2;
  uint64_t v10 = sub_1C2550660();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  int v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    BOOL v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_1C2283A0C(&qword_1EA2DD9B0, MEMORY[0x1E4F27928]);
    uint64_t result = sub_1C254F370();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  v3 = v40;
  BOOL v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_1C227D574(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2285580();
  uint64_t result = sub_1C2550660();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    id v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *id v30 = -1 << v28;
              }
              v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1C25509C0();
      sub_1C25509D0();
      uint64_t result = sub_1C2550A10();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C227D844(uint64_t a1, int a2)
{
  v3 = v2;
  uint64_t v5 = type metadata accessor for BrowseCategory();
  uint64_t v46 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1C22850CC(0, (unint64_t *)&qword_1EA2DE5B0, (void (*)(uint64_t))sub_1C2207C80);
  int v47 = a2;
  uint64_t v9 = sub_1C2550660();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  v43 = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v45 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v44 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v23 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v24 = v23 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44) {
      break;
    }
    char v26 = v45;
    unint64_t v27 = v45[v25];
    ++v17;
    if (!v27)
    {
      int64_t v17 = v25 + 1;
      if (v25 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v27 = v45[v17];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          v3 = v43;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v17 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v44) {
              goto LABEL_34;
            }
            unint64_t v27 = v45[v17];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v28;
      }
    }
LABEL_21:
    unint64_t v14 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v46 + 72);
    uint64_t v30 = *(void *)(v8 + 48) + v29 * v24;
    if (v47)
    {
      sub_1C22848A0(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      uint64_t v31 = *(void *)(v8 + 56) + 72 * v24;
      long long v33 = *(_OWORD *)(v31 + 16);
      long long v32 = *(_OWORD *)(v31 + 32);
      uint64_t v34 = *(void *)(v31 + 64);
      long long v51 = *(_OWORD *)(v31 + 48);
      uint64_t v52 = v34;
      long long v48 = *(_OWORD *)v31;
      long long v49 = v33;
      long long v50 = v32;
    }
    else
    {
      sub_1C2285178(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      sub_1C2285178(*(void *)(v8 + 56) + 72 * v24, (uint64_t)&v48, (uint64_t (*)(void))sub_1C2207C80);
    }
    sub_1C25509C0();
    BrowseCategory.rawValue.getter();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C2550A10();
    uint64_t v35 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v15 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v36) & ~*(void *)(v15 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v15 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v18 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_1C22848A0((uint64_t)v7, *(void *)(v10 + 48) + v29 * v18, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    uint64_t v19 = *(void *)(v10 + 56) + 72 * v18;
    long long v20 = v49;
    long long v21 = v50;
    long long v22 = v51;
    *(void *)(v19 + 64) = v52;
    *(_OWORD *)(v19 + 32) = v21;
    *(_OWORD *)(v19 + 48) = v22;
    *(_OWORD *)(v19 + 16) = v20;
    *(_OWORD *)uint64_t v19 = v48;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  v3 = v43;
  char v26 = v45;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v8 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v26 = -1 << v42;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_1C227DCC4(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2207B64();
  char v43 = a2;
  uint64_t result = sub_1C2550660();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    unint64_t v39 = v2;
    int64_t v8 = 0;
    uint64_t v41 = (void *)(v5 + 64);
    uint64_t v42 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v40 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        int64_t v44 = v8;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v41;
        if (v18 >= v40) {
          goto LABEL_35;
        }
        unint64_t v19 = v41[v18];
        int64_t v20 = v8 + 1;
        if (!v19)
        {
          int64_t v20 = v18 + 1;
          if (v18 + 1 >= v40) {
            goto LABEL_35;
          }
          unint64_t v19 = v41[v20];
          if (!v19)
          {
            int64_t v21 = v18 + 2;
            if (v21 >= v40)
            {
LABEL_35:
              if ((v43 & 1) == 0)
              {
                uint64_t result = swift_release();
                v3 = v39;
                goto LABEL_42;
              }
              uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
              if (v38 >= 64) {
                bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v41 = -1 << v38;
              }
              v3 = v39;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v41[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_44;
                }
                if (v20 >= v40) {
                  goto LABEL_35;
                }
                unint64_t v19 = v41[v20];
                ++v21;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v20 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v19 - 1) & v19;
        int64_t v44 = v20;
        unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
      }
      uint64_t v22 = *(void *)(v5 + 48) + 32 * v17;
      uint64_t v24 = *(void *)v22;
      uint64_t v23 = *(void *)(v22 + 8);
      uint64_t v25 = *(void *)(v22 + 16);
      int v26 = *(unsigned __int8 *)(v22 + 24);
      uint64_t v27 = *(void *)(v5 + 56) + 48 * v17;
      int64_t v28 = *(void **)v27;
      uint64_t v29 = *(void *)(v27 + 24);
      uint64_t v45 = *(void **)(v27 + 8);
      uint64_t v46 = *(void *)(v27 + 16);
      uint64_t v30 = *(void *)(v27 + 32);
      int v47 = *(void **)(v27 + 40);
      if ((v43 & 1) == 0) {
        sub_1C2207BC8(v28, v45, v46, v29, v30, v47);
      }
      sub_1C25509C0();
      sub_1C25509D0();
      if (!v26)
      {
        sub_1C2550A00();
        sub_1C2550A00();
        sub_1C2550A00();
      }
      uint64_t result = sub_1C2550A10();
      uint64_t v31 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v12 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v32) & ~*(void *)(v12 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v12 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v13 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 32 * v13;
      *(void *)uint64_t v14 = v24;
      *(void *)(v14 + 8) = v23;
      *(void *)(v14 + 16) = v25;
      *(unsigned char *)(v14 + 24) = v26;
      uint64_t v15 = (void *)(*(void *)(v7 + 56) + 48 * v13);
      *uint64_t v15 = v28;
      v15[1] = v45;
      v15[2] = v46;
      v15[3] = v29;
      int64_t v8 = v44;
      v15[4] = v30;
      v15[5] = v47;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v42;
    }
  }
  uint64_t result = swift_release();
LABEL_42:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C227E0A0(uint64_t a1, char a2)
{
  return sub_1C227E0BC(a1, a2, &qword_1EBB6EEC8, (unint64_t *)&qword_1EBB6F510);
}

uint64_t sub_1C227E0BC(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = *v4;
  sub_1C2205EE8(0, a3, a4);
  char v40 = a2;
  uint64_t v8 = sub_1C2550660();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_40;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v39 = v7 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v7 + 64);
  uint64_t v37 = v4;
  int64_t v38 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v38) {
      break;
    }
    uint64_t v24 = (void *)(v7 + 64);
    unint64_t v25 = *(void *)(v39 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v38) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v39 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v38)
        {
LABEL_33:
          swift_release();
          uint64_t v5 = v37;
          if ((v40 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v39 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v38) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v39 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v22);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    char v34 = *(void **)(*(void *)(v7 + 56) + 8 * v22);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v35 = v34;
    }
    sub_1C25509C0();
    sub_1C254F570();
    uint64_t result = sub_1C2550A10();
    uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    int64_t v20 = (void *)(*(void *)(v9 + 48) + 16 * v19);
    *int64_t v20 = v33;
    v20[1] = v32;
    *(void *)(*(void *)(v9 + 56) + 8 * v19) = v34;
    ++*(void *)(v9 + 16);
  }
  swift_release();
  uint64_t v5 = v37;
  uint64_t v24 = (void *)(v7 + 64);
  if ((v40 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v7 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v36;
  }
  *(void *)(v7 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v5 = v9;
  return result;
}

uint64_t sub_1C227E3D4(uint64_t a1, char a2)
{
  return sub_1C227E3EC(a1, a2, (void (*)(void))sub_1C2284F78);
}

uint64_t sub_1C227E3EC(uint64_t a1, char a2, void (*a3)(void))
{
  v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  char v37 = a2;
  uint64_t v7 = sub_1C2550660();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    int64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C25509C0();
    sub_1C254F570();
    uint64_t result = sub_1C2550A10();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  int64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_1C227E704(uint64_t a1, int a2)
{
  v3 = v2;
  uint64_t v53 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1C2207998();
  int v54 = a2;
  uint64_t v9 = sub_1C2550660();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  long long v49 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int v47 = v2;
  int64_t v48 = (unint64_t)(v11 + 63) >> 6;
  long long v50 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  v55 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  uint64_t v51 = v8;
  uint64_t v52 = v7;
  while (1)
  {
    if (v14)
    {
      unint64_t v23 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v24 = v23 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v48) {
      break;
    }
    char v26 = v49;
    unint64_t v27 = v49[v25];
    ++v17;
    if (!v27)
    {
      int64_t v17 = v25 + 1;
      if (v25 + 1 >= v48) {
        goto LABEL_34;
      }
      unint64_t v27 = v49[v17];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v48)
        {
LABEL_34:
          swift_release();
          v3 = v47;
          if ((v54 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v49[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v17 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v48) {
              goto LABEL_34;
            }
            unint64_t v27 = v49[v17];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v28;
      }
    }
LABEL_21:
    unint64_t v14 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v17 << 6);
LABEL_22:
    uint64_t v29 = v5;
    uint64_t v30 = *(void *)(v5 + 72);
    unint64_t v31 = *(void *)(v8 + 48) + v30 * v24;
    uint64_t v32 = v52;
    uint64_t v33 = v53;
    if (v54)
    {
      (*v55)(v52, v31, v53);
      uint64_t v34 = *(void *)(v8 + 56) + 72 * v24;
      long long v36 = *(_OWORD *)(v34 + 16);
      long long v35 = *(_OWORD *)(v34 + 32);
      uint64_t v37 = *(void *)(v34 + 64);
      long long v59 = *(_OWORD *)(v34 + 48);
      uint64_t v60 = v37;
      long long v56 = *(_OWORD *)v34;
      long long v57 = v36;
      long long v58 = v35;
    }
    else
    {
      (*v50)(v52, v31, v53);
      sub_1C2285178(*(void *)(v8 + 56) + 72 * v24, (uint64_t)&v56, (uint64_t (*)(void))sub_1C2207934);
    }
    sub_1C2283A0C((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1C254F370();
    uint64_t v38 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v39 = result & ~v38;
    unint64_t v40 = v39 >> 6;
    if (((-1 << v39) & ~*(void *)(v15 + 8 * (v39 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v39) & ~*(void *)(v15 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v41 = 0;
      unint64_t v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v43 = v40 == v42;
        if (v40 == v42) {
          unint64_t v40 = 0;
        }
        v41 |= v43;
        uint64_t v44 = *(void *)(v15 + 8 * v40);
      }
      while (v44 == -1);
      unint64_t v18 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v55)(*(void *)(v10 + 48) + v30 * v18, v32, v33);
    uint64_t v19 = *(void *)(v10 + 56) + 72 * v18;
    long long v20 = v57;
    long long v21 = v58;
    long long v22 = v59;
    *(void *)(v19 + 64) = v60;
    *(_OWORD *)(v19 + 32) = v21;
    *(_OWORD *)(v19 + 48) = v22;
    *(_OWORD *)(v19 + 16) = v20;
    *(_OWORD *)uint64_t v19 = v56;
    ++*(void *)(v10 + 16);
    uint64_t v5 = v29;
    uint64_t v8 = v51;
  }
  swift_release();
  v3 = v47;
  char v26 = v49;
  if ((v54 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v45 = 1 << *(unsigned char *)(v8 + 32);
  if (v45 >= 64) {
    bzero(v26, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v26 = -1 << v45;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v10;
  return result;
}

uint64_t sub_1C227EB94(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C220761C();
  char v41 = a2;
  uint64_t result = sub_1C2550660();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v39 = (void *)(v5 + 64);
    uint64_t v40 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v38 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v18 >= v38) {
          goto LABEL_35;
        }
        unint64_t v19 = v39[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v38) {
            goto LABEL_35;
          }
          unint64_t v19 = v39[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v38)
            {
LABEL_35:
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                v3 = v2;
                goto LABEL_42;
              }
              uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
              if (v37 >= 64) {
                bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v39 = -1 << v37;
              }
              v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v39[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_44;
                }
                if (v8 >= v38) {
                  goto LABEL_35;
                }
                unint64_t v19 = v39[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(v5 + 56);
      uint64_t v22 = *(void *)(v5 + 48) + 32 * v17;
      uint64_t v23 = *(void *)v22;
      uint64_t v24 = *(void *)(v22 + 8);
      uint64_t v25 = *(void *)(v22 + 16);
      int v26 = *(unsigned __int8 *)(v22 + 24);
      unint64_t v27 = (char *)(v21 + 48 * v17);
      char v42 = *v27;
      long long v43 = *(_OWORD *)(v27 + 8);
      uint64_t v44 = *((void *)v27 + 3);
      char v45 = v27[32];
      int64_t v28 = (void *)*((void *)v27 + 5);
      if ((v41 & 1) == 0) {
        id v29 = v28;
      }
      sub_1C25509C0();
      sub_1C25509D0();
      if (!v26)
      {
        sub_1C2550A00();
        sub_1C2550A00();
        sub_1C2550A00();
      }
      uint64_t result = sub_1C2550A10();
      uint64_t v30 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v31 = result & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v12 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v31) & ~*(void *)(v12 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          BOOL v35 = v32 == v34;
          if (v32 == v34) {
            unint64_t v32 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v12 + 8 * v32);
        }
        while (v36 == -1);
        unint64_t v13 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 32 * v13;
      *(void *)uint64_t v14 = v23;
      *(void *)(v14 + 8) = v24;
      *(void *)(v14 + 16) = v25;
      *(unsigned char *)(v14 + 24) = v26;
      uint64_t v15 = *(void *)(v7 + 56) + 48 * v13;
      *(unsigned char *)uint64_t v15 = v42;
      *(_OWORD *)(v15 + 8) = v43;
      *(void *)(v15 + 24) = v44;
      *(unsigned char *)(v15 + 32) = v45;
      *(void *)(v15 + 40) = v28;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v40;
    }
  }
  uint64_t result = swift_release();
LABEL_42:
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_1C227EF5C(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_1C2283A54(0, &qword_1EBB70040, (void (*)(uint64_t))type metadata accessor for CategoryCountProvider, (void (*)(void))sub_1C220732C);
  char v50 = a2;
  uint64_t v5 = sub_1C2550660();
  uint64_t v6 = (void *)v5;
  if (!*(void *)(v4 + 16)) {
    goto LABEL_55;
  }
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  int v47 = (void *)(v4 + 64);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v4 + 64);
  int64_t v46 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v49 = v5 + 64;
  unint64_t result = swift_retain();
  int64_t v11 = 0;
  uint64_t v48 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      int64_t v53 = v11;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_21;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_58;
    }
    if (v16 >= v46) {
      break;
    }
    unint64_t v17 = v47;
    unint64_t v18 = v47[v16];
    int64_t v19 = v11 + 1;
    if (!v18)
    {
      int64_t v19 = v11 + 2;
      if (v11 + 2 >= v46) {
        goto LABEL_48;
      }
      unint64_t v18 = v47[v19];
      if (!v18)
      {
        uint64_t v20 = v11 + 3;
        if (v11 + 3 >= v46)
        {
LABEL_48:
          swift_release();
          if ((v50 & 1) == 0) {
            goto LABEL_55;
          }
          goto LABEL_51;
        }
        unint64_t v18 = v47[v20];
        if (!v18)
        {
          while (1)
          {
            int64_t v19 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_59;
            }
            if (v19 >= v46) {
              goto LABEL_48;
            }
            unint64_t v18 = v47[v19];
            ++v20;
            if (v18) {
              goto LABEL_20;
            }
          }
        }
        int64_t v19 = v11 + 3;
      }
    }
LABEL_20:
    unint64_t v9 = (v18 - 1) & v18;
    int64_t v53 = v19;
    unint64_t v15 = __clz(__rbit64(v18)) + (v19 << 6);
LABEL_21:
    uint64_t v21 = *(void *)(v4 + 48) + 72 * v15;
    char v22 = *(unsigned char *)v21;
    uint64_t v23 = *(void **)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    uint64_t v26 = *(void *)(v21 + 24);
    uint64_t v25 = *(void *)(v21 + 32);
    uint64_t v27 = *(void *)(*(void *)(v4 + 56) + 8 * v15);
    long long v55 = *(_OWORD *)(v21 + 56);
    long long v56 = *(_OWORD *)(v21 + 40);
    unint64_t v28 = *(void *)(v21 + 48);
    id v29 = *(void **)(v21 + 64);
    if ((v50 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v30 = v29;
      swift_retain();
      id v31 = v23;
    }
    uint64_t v51 = v29;
    sub_1C25509C0();
    sub_1C25509D0();
    id v32 = v23;
    sub_1C254FF80();

    sub_1C25509E0();
    if (v26)
    {
      swift_bridgeObjectRetain();
      sub_1C254F570();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    uint64_t v52 = v25;
    uint64_t v54 = v24;
    uint64_t v33 = v27;
    if (v28 >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1C2550620();
      swift_bridgeObjectRelease();
      sub_1C25509D0();
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1C2550620();
      unint64_t result = swift_bridgeObjectRelease();
      if (!v34) {
        goto LABEL_34;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t result = sub_1C25509D0();
      uint64_t v34 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v34) {
        goto LABEL_34;
      }
    }
    if (v34 < 1)
    {
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      return result;
    }
    if ((v28 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v34; ++i)
      {
        MEMORY[0x1C87588E0](i, v28);
        sub_1C254FF80();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v36 = 0;
      do
      {
        uint64_t v37 = *(void **)(v28 + 8 * v36++ + 32);
        id v38 = v37;
        sub_1C254FF80();
      }
      while (v34 != v36);
    }
LABEL_34:
    swift_bridgeObjectRelease();
    if ((unint64_t)v55 >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1C2550620();
      swift_bridgeObjectRelease();
      sub_1C25509D0();
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1C2550620();
      unint64_t result = swift_bridgeObjectRelease();
      if (!v39) {
        goto LABEL_6;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t result = sub_1C25509D0();
      uint64_t v39 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v39) {
        goto LABEL_6;
      }
    }
    if (v39 < 1) {
      goto LABEL_57;
    }
    if ((v55 & 0xC000000000000001) != 0)
    {
      for (uint64_t j = 0; j != v39; ++j)
      {
        MEMORY[0x1C87588E0](j, v55);
        sub_1C254FF80();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v41 = 0;
      do
      {
        char v42 = *(void **)(v55 + 8 * v41++ + 32);
        id v43 = v42;
        sub_1C254FF80();
      }
      while (v39 != v41);
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v4 = v48;
    id v12 = v51;
    sub_1C254FF80();

    sub_1C2550A10();
    unint64_t result = sub_1C2550230();
    *(void *)(v49 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v13 = v6[6] + 72 * result;
    int64_t v11 = v53;
    *(unsigned char *)uint64_t v13 = v22;
    *(void *)(v13 + 8) = v32;
    *(void *)(v13 + 16) = v54;
    *(void *)(v13 + 24) = v26;
    *(void *)(v13 + 32) = v52;
    *(_OWORD *)(v13 + 40) = v56;
    *(_OWORD *)(v13 + 56) = v55;
    *(void *)(v6[7] + 8 * result) = v33;
    ++v6[2];
  }
  swift_release();
  unint64_t v17 = v47;
  if ((v50 & 1) == 0) {
    goto LABEL_55;
  }
LABEL_51:
  uint64_t v44 = 1 << *(unsigned char *)(v4 + 32);
  if (v44 >= 64) {
    bzero(v17, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v17 = -1 << v44;
  }
  *(void *)(v4 + 16) = 0;
LABEL_55:
  unint64_t result = swift_release();
  *char v45 = v6;
  return result;
}

uint64_t sub_1C227F564(uint64_t a1, char a2)
{
  return sub_1C227F57C(a1, a2, (void (*)(void))sub_1C2283B3C);
}

uint64_t sub_1C227F57C(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  uint64_t v7 = sub_1C2550660();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v3;
  uint64_t v37 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    uint64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    id v32 = *(void **)(*(void *)(v6 + 48) + v31);
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0) {
      id v34 = v32;
    }
    uint64_t result = sub_1C254FF60();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  uint64_t v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

unint64_t sub_1C227F84C(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_1C22072C8();
  char v48 = a2;
  uint64_t v5 = sub_1C2550660();
  uint64_t v6 = (void *)v5;
  if (!*(void *)(v4 + 16)) {
    goto LABEL_55;
  }
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  char v45 = (void *)(v4 + 64);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v4 + 64);
  int64_t v44 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v47 = v5 + 64;
  unint64_t result = swift_retain();
  int64_t v11 = 0;
  uint64_t v46 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_21;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_58;
    }
    if (v16 >= v44) {
      break;
    }
    unint64_t v17 = v45;
    unint64_t v18 = v45[v16];
    ++v11;
    if (!v18)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v44) {
        goto LABEL_48;
      }
      unint64_t v18 = v45[v11];
      if (!v18)
      {
        int64_t v19 = v16 + 2;
        if (v19 >= v44)
        {
LABEL_48:
          swift_release();
          if ((v48 & 1) == 0) {
            goto LABEL_55;
          }
          goto LABEL_51;
        }
        unint64_t v18 = v45[v19];
        if (!v18)
        {
          while (1)
          {
            int64_t v11 = v19 + 1;
            if (__OFADD__(v19, 1)) {
              goto LABEL_59;
            }
            if (v11 >= v44) {
              goto LABEL_48;
            }
            unint64_t v18 = v45[v11];
            ++v19;
            if (v18) {
              goto LABEL_20;
            }
          }
        }
        int64_t v11 = v19;
      }
    }
LABEL_20:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_21:
    uint64_t v20 = *(void *)(v4 + 56);
    uint64_t v21 = *(void *)(v4 + 48) + 72 * v15;
    char v22 = *(unsigned char *)v21;
    int64_t v23 = *(void **)(v21 + 8);
    uint64_t v52 = *(void *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    uint64_t v24 = *(void *)(v21 + 32);
    uint64_t v26 = *(void *)(v20 + 8 * v15);
    long long v53 = *(_OWORD *)(v21 + 56);
    long long v54 = *(_OWORD *)(v21 + 40);
    unint64_t v27 = *(void *)(v21 + 48);
    unint64_t v28 = *(void **)(v21 + 64);
    if ((v48 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v29 = v28;
      id v30 = v23;
    }
    uint64_t v49 = v28;
    sub_1C25509C0();
    char v51 = v22;
    sub_1C25509D0();
    id v31 = v23;
    sub_1C254FF80();

    sub_1C25509E0();
    if (v25)
    {
      swift_bridgeObjectRetain();
      sub_1C254F570();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    uint64_t v50 = v24;
    if (v27 >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1C2550620();
      swift_bridgeObjectRelease();
      sub_1C25509D0();
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1C2550620();
      unint64_t result = swift_bridgeObjectRelease();
      if (!v32) {
        goto LABEL_34;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t result = sub_1C25509D0();
      uint64_t v32 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v32) {
        goto LABEL_34;
      }
    }
    if (v32 < 1)
    {
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      return result;
    }
    if ((v27 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v32; ++i)
      {
        MEMORY[0x1C87588E0](i, v27);
        sub_1C254FF80();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v34 = 0;
      do
      {
        uint64_t v35 = *(void **)(v27 + 8 * v34++ + 32);
        id v36 = v35;
        sub_1C254FF80();
      }
      while (v32 != v34);
    }
LABEL_34:
    swift_bridgeObjectRelease();
    if ((unint64_t)v53 >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1C2550620();
      swift_bridgeObjectRelease();
      sub_1C25509D0();
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1C2550620();
      unint64_t result = swift_bridgeObjectRelease();
      if (!v37) {
        goto LABEL_6;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t result = sub_1C25509D0();
      uint64_t v37 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v37) {
        goto LABEL_6;
      }
    }
    if (v37 < 1) {
      goto LABEL_57;
    }
    if ((v53 & 0xC000000000000001) != 0)
    {
      for (uint64_t j = 0; j != v37; ++j)
      {
        MEMORY[0x1C87588E0](j, v53);
        sub_1C254FF80();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v39 = 0;
      do
      {
        uint64_t v40 = *(void **)(v53 + 8 * v39++ + 32);
        id v41 = v40;
        sub_1C254FF80();
      }
      while (v37 != v39);
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v4 = v46;
    id v12 = v49;
    sub_1C254FF80();

    sub_1C2550A10();
    unint64_t result = sub_1C2550230();
    *(void *)(v47 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v13 = v6[6] + 72 * result;
    *(unsigned char *)uint64_t v13 = v51;
    *(void *)(v13 + 8) = v31;
    *(void *)(v13 + 16) = v52;
    *(void *)(v13 + 24) = v25;
    *(void *)(v13 + 32) = v50;
    *(_OWORD *)(v13 + 40) = v54;
    *(_OWORD *)(v13 + 56) = v53;
    *(void *)(v6[7] + 8 * result) = v26;
    ++v6[2];
  }
  swift_release();
  unint64_t v17 = v45;
  if ((v48 & 1) == 0) {
    goto LABEL_55;
  }
LABEL_51:
  uint64_t v42 = 1 << *(unsigned char *)(v4 + 32);
  if (v42 >= 64) {
    bzero(v17, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v17 = -1 << v42;
  }
  *(void *)(v4 + 16) = 0;
LABEL_55:
  unint64_t result = swift_release();
  void *v43 = v6;
  return result;
}

uint64_t sub_1C227FE08(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2283A54(0, (unint64_t *)&qword_1EA2DE4B8, (void (*)(uint64_t))sub_1C2283AD4, (void (*)(void))sub_1C2206AA8);
  uint64_t result = sub_1C2550660();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    id v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *id v30 = -1 << v28;
              }
              v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1C25509C0();
      sub_1C25509D0();
      uint64_t result = sub_1C2550A10();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C2280110(uint64_t a1, char a2)
{
  return sub_1C2280128(a1, a2, (void (*)(void))sub_1C2284AA0);
}

uint64_t sub_1C2280128(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  uint64_t result = sub_1C2550660();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    id v31 = (void *)(v6 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v30 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v19 = v18 | (v9 << 6);
      }
      else
      {
        int64_t v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v6 + 64;
        if (v20 >= v30) {
          goto LABEL_33;
        }
        unint64_t v21 = v31[v20];
        ++v9;
        if (!v21)
        {
          int64_t v9 = v20 + 1;
          if (v20 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v21 = v31[v9];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v6 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *id v31 = -1 << v29;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v9 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v21 = v31[v9];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v22;
          }
        }
LABEL_30:
        unint64_t v12 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v6 + 48) + v19);
      uint64_t v28 = *(void *)(*(void *)(v6 + 56) + 8 * v19);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1C25509C0();
      sub_1C25509D0();
      uint64_t result = sub_1C2550A10();
      uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v8 + 48) + v17) = v27;
      *(void *)(*(void *)(v8 + 56) + 8 * v17) = v28;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_1C22803FC(uint64_t a1, char a2)
{
  v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2284948();
  uint64_t v6 = sub_1C2550660();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    char v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    int64_t v30 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    id v31 = (long long *)(*(void *)(v5 + 56) + 48 * v21);
    long long v38 = v31[1];
    long long v39 = *v31;
    long long v37 = v31[2];
    if ((a2 & 1) == 0)
    {
      id v32 = v30;
      id v33 = (id)v39;
      swift_retain();
      swift_retain();
      id v34 = *((id *)&v38 + 1);
      swift_retain();
      swift_retain();
    }
    uint64_t result = sub_1C254FF60();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v30;
    unint64_t v19 = (_OWORD *)(*(void *)(v7 + 56) + 48 * v18);
    *unint64_t v19 = v39;
    v19[1] = v38;
    v19[2] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C2280734(uint64_t a1, char a2)
{
  return sub_1C227B8B0(a1, a2, (void (*)(void))sub_1C22849E4);
}

unint64_t sub_1C228074C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  sub_1C25509C0();
  if (a2)
  {
    sub_1C25509E0();
    swift_bridgeObjectRetain();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    if (a3) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1C25509E0();
    if (a4) {
      goto LABEL_4;
    }
LABEL_7:
    sub_1C25509E0();
    goto LABEL_8;
  }
  sub_1C25509E0();
  if (!a3) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1C25509E0();
  id v12 = a3;
  sub_1C254FF80();

  if (!a4) {
    goto LABEL_7;
  }
LABEL_4:
  sub_1C25509E0();
  id v13 = a4;
  sub_1C254FF80();

LABEL_8:
  sub_1C2550A10();
  unint64_t result = sub_1C2550230();
  *(void *)((char *)a6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v15 = (void *)(a6[6] + 32 * result);
  *uint64_t v15 = a1;
  v15[1] = a2;
  v15[2] = a3;
  v15[3] = a4;
  *(void *)(a6[7] + 8 * result) = a5;
  ++a6[2];
  return result;
}

__n128 sub_1C22808B8(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1C25509C0();
  sub_1C2284124(a1, (uint64_t)v10);
  sub_1C2284124((uint64_t)v10, (uint64_t)&v11);
  if ((v12 & 1) == 0)
  {
    sub_1C25509E0();
    sub_1C25509D0();
    sub_1C25509D0();
    sub_1C25509D0();
    if (*(void *)(a1 + 40)) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1C25509E0();
    goto LABEL_6;
  }
  sub_1C25509E0();
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1C25509E0();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  sub_1C22841AC(a1);
LABEL_6:
  sub_1C2550A10();
  unint64_t v6 = sub_1C2550230();
  *(void *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  uint64_t v7 = a3[6] + 48 * v6;
  long long v9 = *(_OWORD *)(a1 + 16);
  __n128 result = *(__n128 *)(a1 + 32);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 16) = v9;
  *(__n128 *)(v7 + 32) = result;
  *(void *)(a3[7] + 8 * v6) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_1C2280A34()
{
  uint64_t v1 = *v0;
  sub_1C2284E0C(0, (unint64_t *)&qword_1EA2DF888, (void (*)(void))sub_1C220732C);
  uint64_t v2 = sub_1C2550350();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v35 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v36 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v38 = v2 + 56;
    unint64_t result = swift_retain();
    int64_t v8 = 0;
    uint64_t v37 = v1;
    while (1)
    {
      if (v6)
      {
        unint64_t v11 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        unint64_t v12 = v11 | (v8 << 6);
      }
      else
      {
        int64_t v13 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_55;
        }
        if (v13 >= v36)
        {
LABEL_48:
          swift_release();
          uint64_t v33 = 1 << *(unsigned char *)(v1 + 32);
          if (v33 > 63) {
            bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          }
          else {
            *uint64_t v35 = -1 << v33;
          }
          *(void *)(v1 + 16) = 0;
          break;
        }
        unint64_t v14 = v35[v13];
        ++v8;
        if (!v14)
        {
          int64_t v8 = v13 + 1;
          if (v13 + 1 >= v36) {
            goto LABEL_48;
          }
          unint64_t v14 = v35[v8];
          if (!v14)
          {
            int64_t v8 = v13 + 2;
            if (v13 + 2 >= v36) {
              goto LABEL_48;
            }
            unint64_t v14 = v35[v8];
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v36) {
                goto LABEL_48;
              }
              unint64_t v14 = v35[v15];
              if (!v14)
              {
                while (1)
                {
                  int64_t v8 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_56;
                  }
                  if (v8 >= v36) {
                    goto LABEL_48;
                  }
                  unint64_t v14 = v35[v8];
                  ++v15;
                  if (v14) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v8 = v15;
            }
          }
        }
LABEL_22:
        unint64_t v6 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v8 << 6);
      }
      uint64_t v16 = *(void *)(v1 + 48) + 72 * v12;
      char v17 = *(unsigned char *)v16;
      unint64_t v18 = *(void **)(v16 + 8);
      uint64_t v19 = *(void *)(v16 + 16);
      uint64_t v20 = *(void *)(v16 + 24);
      uint64_t v21 = *(void *)(v16 + 32);
      long long v40 = *(_OWORD *)(v16 + 56);
      long long v41 = *(_OWORD *)(v16 + 40);
      sub_1C25509C0();
      sub_1C25509D0();
      id v22 = v18;
      sub_1C254FF80();

      sub_1C25509E0();
      if (v20)
      {
        swift_bridgeObjectRetain();
        sub_1C254F570();
        swift_bridgeObjectRelease();
      }
      int64_t v39 = v8;
      swift_bridgeObjectRetain();
      sub_1C254F570();
      swift_bridgeObjectRelease();
      if (*((void *)&v41 + 1) >> 62)
      {
        swift_bridgeObjectRetain_n();
        sub_1C2550620();
        swift_bridgeObjectRelease();
        sub_1C25509D0();
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_1C2550620();
        unint64_t result = swift_bridgeObjectRelease();
        if (!v23) {
          goto LABEL_34;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        unint64_t result = sub_1C25509D0();
        uint64_t v23 = *(void *)((*((void *)&v41 + 1) & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v23) {
          goto LABEL_34;
        }
      }
      if (v23 < 1)
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
        return result;
      }
      if ((*((void *)&v41 + 1) & 0xC000000000000001) != 0)
      {
        for (uint64_t i = 0; i != v23; ++i)
        {
          MEMORY[0x1C87588E0](i, *((void *)&v41 + 1));
          sub_1C254FF80();
          swift_unknownObjectRelease();
        }
      }
      else
      {
        uint64_t v25 = 0;
        do
        {
          char v26 = *(void **)(*((void *)&v41 + 1) + 8 * v25++ + 32);
          id v27 = v26;
          sub_1C254FF80();
        }
        while (v23 != v25);
      }
LABEL_34:
      swift_bridgeObjectRelease();
      if ((unint64_t)v40 >> 62)
      {
        swift_bridgeObjectRetain_n();
        sub_1C2550620();
        swift_bridgeObjectRelease();
        sub_1C25509D0();
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_1C2550620();
        unint64_t result = swift_bridgeObjectRelease();
        if (!v28) {
          goto LABEL_6;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        unint64_t result = sub_1C25509D0();
        uint64_t v28 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v28) {
          goto LABEL_6;
        }
      }
      if (v28 < 1) {
        goto LABEL_54;
      }
      if ((v40 & 0xC000000000000001) != 0)
      {
        for (uint64_t j = 0; j != v28; ++j)
        {
          MEMORY[0x1C87588E0](j, v40);
          sub_1C254FF80();
          swift_unknownObjectRelease();
        }
      }
      else
      {
        uint64_t v30 = 0;
        do
        {
          id v31 = *(void **)(v40 + 8 * v30++ + 32);
          id v32 = v31;
          sub_1C254FF80();
        }
        while (v28 != v30);
      }
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t v1 = v37;
      int64_t v8 = v39;
      id v9 = *((id *)&v40 + 1);
      sub_1C254FF80();

      sub_1C2550A10();
      unint64_t result = sub_1C2550230();
      *(void *)(v38 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v10 = *(void *)(v3 + 48) + 72 * result;
      *(unsigned char *)uint64_t v10 = v17;
      *(void *)(v10 + 8) = v22;
      *(void *)(v10 + 16) = v19;
      *(void *)(v10 + 24) = v20;
      *(void *)(v10 + 32) = v21;
      *(_OWORD *)(v10 + 40) = v41;
      *(_OWORD *)(v10 + 56) = v40;
      ++*(void *)(v3 + 16);
    }
  }
  unint64_t result = swift_release();
  *id v34 = v3;
  return result;
}

uint64_t sub_1C2280FDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C228480C();
  uint64_t v7 = sub_1C2550350();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v10 = *(void *)(v6 + 56);
    uint64_t v33 = (void *)(v6 + 56);
    if (v9 < 64) {
      uint64_t v11 = ~(-1 << v9);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & v10;
    id v31 = v0;
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = v7 + 56;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v15 << 6);
      }
      else
      {
        int64_t v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = v33[v19];
        ++v15;
        if (!v20)
        {
          int64_t v15 = v19 + 1;
          if (v19 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v20 = v33[v15];
          if (!v20)
          {
            int64_t v15 = v19 + 2;
            if (v19 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v20 = v33[v15];
            if (!v20)
            {
              int64_t v21 = v19 + 3;
              if (v21 >= v32)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v31;
                uint64_t v30 = 1 << *(unsigned char *)(v6 + 32);
                if (v30 > 63) {
                  bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v33 = -1 << v30;
                }
                *(void *)(v6 + 16) = 0;
                break;
              }
              unint64_t v20 = v33[v21];
              if (!v20)
              {
                while (1)
                {
                  int64_t v15 = v21 + 1;
                  if (__OFADD__(v21, 1)) {
                    goto LABEL_39;
                  }
                  if (v15 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v33[v15];
                  ++v21;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v15 = v21;
            }
          }
        }
LABEL_23:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      uint64_t v22 = *(void *)(v3 + 72);
      sub_1C22848A0(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C25509C0();
      sub_1C254F570();
      sub_1C254F570();
      uint64_t result = sub_1C2550A10();
      uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = sub_1C22848A0((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_1C2281380()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1C254E220();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  long long v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1C2283978();
  uint64_t v5 = sub_1C2550350();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      char v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1C2283A0C(&qword_1EA2DF688, MEMORY[0x1E4F66840]);
      uint64_t result = sub_1C254F370();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1C2281778()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1C254CCB0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  long long v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1C2285C24();
  uint64_t v5 = sub_1C2550350();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      char v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1C2283A0C(&qword_1EA2DF9E8, MEMORY[0x1E4F27C88]);
      uint64_t result = sub_1C254F370();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1C2281B70(uint64_t a1)
{
  return sub_1C2282538(a1, (void (*)(void))sub_1C2283C6C);
}

uint64_t sub_1C2281B88()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C2285004(0, &qword_1EA2DF6F8);
  uint64_t result = sub_1C2550350();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_1C25509B0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C2281E20(uint64_t a1)
{
  return sub_1C2282538(a1, (void (*)(void))sub_1C2285A5C);
}

uint64_t sub_1C2281E38(uint64_t a1)
{
  return sub_1C2282538(a1, (void (*)(void))sub_1C2285960);
}

uint64_t sub_1C2281E50()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C2285868();
  uint64_t v3 = sub_1C2550350();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    unint64_t v29 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v29;
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v28;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      sub_1C25509C0();
      BrowseCategory.rawValue.getter();
      sub_1C254F570();
      swift_bridgeObjectRelease();
      id v20 = *(id *)(v19 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
      sub_1C254FF80();

      uint64_t result = sub_1C2550A10();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C2282154(uint64_t a1)
{
  return sub_1C2282538(a1, (void (*)(void))sub_1C2283BD8);
}

uint64_t sub_1C228216C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BrowseCategory();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C228576C();
  uint64_t v7 = sub_1C2550350();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v10 = *(void *)(v6 + 56);
    uint64_t v33 = (void *)(v6 + 56);
    if (v9 < 64) {
      uint64_t v11 = ~(-1 << v9);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & v10;
    unint64_t v31 = v0;
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = v7 + 56;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v15 << 6);
      }
      else
      {
        int64_t v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = v33[v19];
        ++v15;
        if (!v20)
        {
          int64_t v15 = v19 + 1;
          if (v19 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v20 = v33[v15];
          if (!v20)
          {
            int64_t v15 = v19 + 2;
            if (v19 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v20 = v33[v15];
            if (!v20)
            {
              int64_t v21 = v19 + 3;
              if (v21 >= v32)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v31;
                uint64_t v30 = 1 << *(unsigned char *)(v6 + 32);
                if (v30 > 63) {
                  bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v33 = -1 << v30;
                }
                *(void *)(v6 + 16) = 0;
                break;
              }
              unint64_t v20 = v33[v21];
              if (!v20)
              {
                while (1)
                {
                  int64_t v15 = v21 + 1;
                  if (__OFADD__(v21, 1)) {
                    goto LABEL_39;
                  }
                  if (v15 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v33[v15];
                  ++v21;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v15 = v21;
            }
          }
        }
LABEL_23:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      uint64_t v22 = *(void *)(v3 + 72);
      sub_1C22848A0(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      sub_1C25509C0();
      BrowseCategory.rawValue.getter();
      sub_1C254F570();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C2550A10();
      uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = sub_1C22848A0((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_1C2282520(uint64_t a1)
{
  return sub_1C2282538(a1, (void (*)(void))sub_1C22854EC);
}

uint64_t sub_1C2282538(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  a2(0);
  uint64_t v5 = sub_1C2550350();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_1C254FF60();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v6;
  return result;
}

uint64_t sub_1C22827D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UserDomainConceptViewData();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C2285670();
  uint64_t v7 = sub_1C2550350();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v10 = *(void *)(v6 + 56);
    unint64_t v24 = v0;
    char v25 = (void *)(v6 + 56);
    if (v9 < 64) {
      uint64_t v11 = ~(-1 << v9);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & v10;
    int64_t v26 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = v7 + 56;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v15 << 6);
      }
      else
      {
        int64_t v20 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v20 >= v26) {
          goto LABEL_23;
        }
        unint64_t v21 = v25[v20];
        ++v15;
        if (!v21)
        {
          int64_t v15 = v20 + 1;
          if (v20 + 1 >= v26) {
            goto LABEL_23;
          }
          unint64_t v21 = v25[v15];
          if (!v21)
          {
            int64_t v15 = v20 + 2;
            if (v20 + 2 >= v26) {
              goto LABEL_23;
            }
            unint64_t v21 = v25[v15];
            if (!v21)
            {
              int64_t v22 = v20 + 3;
              if (v22 >= v26)
              {
LABEL_23:
                swift_release();
                uint64_t v23 = 1 << *(unsigned char *)(v6 + 32);
                if (v23 > 63) {
                  bzero(v25, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v25 = -1 << v23;
                }
                uint64_t v1 = v24;
                *(void *)(v6 + 16) = 0;
                break;
              }
              unint64_t v21 = v25[v22];
              if (!v21)
              {
                while (1)
                {
                  int64_t v15 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_29;
                  }
                  if (v15 >= v26) {
                    goto LABEL_23;
                  }
                  unint64_t v21 = v25[v15];
                  ++v22;
                  if (v21) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v15 = v22;
            }
          }
        }
LABEL_22:
        unint64_t v12 = (v21 - 1) & v21;
        unint64_t v17 = __clz(__rbit64(v21)) + (v15 << 6);
      }
      uint64_t v18 = *(void *)(v3 + 72);
      sub_1C22848A0(*(void *)(v6 + 48) + v18 * v17, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      sub_1C25509C0();
      UserDomainConceptViewData.hash(into:)();
      sub_1C2550A10();
      unint64_t v19 = sub_1C2550230();
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = sub_1C22848A0((uint64_t)v5, *(void *)(v8 + 48) + v19 * v18, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_1C2282AF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C2285004(0, &qword_1EA2DF900);
  uint64_t v3 = sub_1C2550350();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1C25509C0();
      sub_1C254F570();
      uint64_t result = sub_1C2550A10();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C2282DE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C2284E0C(0, &qword_1EA2DF8E8, (void (*)(void))sub_1C2206AA8);
  uint64_t result = sub_1C2550350();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_1C25509C0();
      sub_1C25509D0();
      uint64_t result = sub_1C2550A10();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1C22830B8(uint64_t a1, uint64_t a2)
{
  sub_1C25509C0();
  BrowseCategory.rawValue.getter();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  id v4 = *(id *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
  sub_1C254FF80();

  sub_1C2550A10();
  unint64_t result = sub_1C2550230();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1C22831A8(uint64_t a1, uint64_t a2)
{
  sub_1C254FF60();
  unint64_t result = sub_1C2550230();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1C228322C(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E4F143B8];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_1C2283390((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_1C2283390((uint64_t)v7, v4, v2);
    swift_release();
    MEMORY[0x1C875A0B0](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_1C2283390(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v23 = (unint64_t *)result;
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 56);
  int64_t v26 = (unint64_t)(v6 + 63) >> 6;
LABEL_4:
  uint64_t v24 = v4;
  while (v8)
  {
    unint64_t v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v10 = v9 | (v5 << 6);
LABEL_19:
    id v14 = *(id *)(*(void *)(a3 + 48) + 8 * v10);
    id v15 = objc_msgSend(v14, sel_identifier);
    uint64_t v16 = sub_1C254F470();
    uint64_t v18 = v17;

    if (v16 == sub_1C254F470() && v18 == v19)
    {

      unint64_t result = swift_bridgeObjectRelease_n();
    }
    else
    {
      char v21 = sub_1C2550870();

      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        *(unint64_t *)((char *)v23 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v4 = v24 + 1;
        if (!__OFADD__(v24, 1)) {
          goto LABEL_4;
        }
        __break(1u);
LABEL_32:
        swift_retain();
        return sub_1C22BE148(v23, a2, v24, a3);
      }
    }
  }
  if (__OFADD__(v5++, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v5 >= v26) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v25 + 8 * v5);
  if (v12)
  {
LABEL_18:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v5 << 6);
    goto LABEL_19;
  }
  int64_t v13 = v5 + 1;
  if (v5 + 1 >= v26) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v25 + 8 * v13);
  if (v12) {
    goto LABEL_17;
  }
  int64_t v13 = v5 + 2;
  if (v5 + 2 >= v26) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v25 + 8 * v13);
  if (v12) {
    goto LABEL_17;
  }
  int64_t v13 = v5 + 3;
  if (v5 + 3 >= v26) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v25 + 8 * v13);
  if (v12)
  {
LABEL_17:
    int64_t v5 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v26) {
      goto LABEL_32;
    }
    unint64_t v12 = *(void *)(v25 + 8 * v5);
    ++v13;
    if (v12) {
      goto LABEL_18;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

void sub_1C22835EC(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  sub_1C2273AEC(a1, a2, a3, a4, *(void (**)(void *, uint64_t))(v4 + 16));
}

uint64_t sub_1C22835F4(uint64_t a1, uint64_t a2)
{
  unint64_t v20 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_1C25502A0();
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v4) {
      return result;
    }
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C2550490();
    uint64_t v22 = sub_1C2550240();
    uint64_t v23 = v6;
    unsigned __int8 v24 = 1;
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
    __break(1u);
  }
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C2550490();
    uint64_t v22 = sub_1C2486520(a1);
    uint64_t v23 = v7;
    unsigned __int8 v24 = v8 & 1;
    while (1)
    {
LABEL_9:
      while (1)
      {
        uint64_t v14 = v22;
        uint64_t v15 = v23;
        uint64_t v16 = v24;
        sub_1C2486288(v22, v23, v24, a1);
        uint64_t v18 = v17;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B3D0]), sel_initWithSampleType_predicate_, v17, a2);

        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        uint64_t result = sub_1C2550470();
        if (v20) {
          break;
        }
        uint64_t v9 = sub_1C24861A0(v14, v15, v16, a1);
        uint64_t v11 = v10;
        char v13 = v12;
        sub_1C220012C(v14, v15, v16);
        uint64_t v22 = v9;
        uint64_t v23 = v11;
        unsigned __int8 v24 = v13 & 1;
        if (!--v4) {
          goto LABEL_14;
        }
      }
      if ((v16 & 1) == 0) {
        break;
      }
      if (sub_1C2550260()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1C2285B44();
      uint64_t v19 = (void (*)(unsigned char *, void))sub_1C254F920();
      sub_1C2550300();
      v19(v21, 0);
      if (!--v4)
      {
LABEL_14:
        sub_1C220012C(v22, v23, v24);
        return v25;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_1C2283838(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  sub_1C22741FC(a1, a2, a3, a4, *(void (**)(void *, uint64_t))(v4 + 16));
}

void sub_1C2283840(void *a1, char a2)
{
  sub_1C2274374(a1, a2 & 1, *(void (**)(uint64_t, id))(v2 + 16));
}

unint64_t sub_1C2283850()
{
  unint64_t result = qword_1EA2DF670;
  if (!qword_1EA2DF670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF670);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RecordLookupError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2283940);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordLookupError()
{
  return &type metadata for RecordLookupError;
}

void sub_1C2283978()
{
  if (!qword_1EA2DF680)
  {
    sub_1C254E220();
    sub_1C2283A0C(&qword_1EA2DF688, MEMORY[0x1E4F66840]);
    unint64_t v0 = sub_1C2550380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF680);
    }
  }
}

uint64_t sub_1C2283A0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2283A54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1C2550690();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C2283AD4()
{
  if (!qword_1EA2DE4C0)
  {
    sub_1C21AB51C(255, &qword_1EBB6F978);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE4C0);
    }
  }
}

void sub_1C2283B3C()
{
  if (!qword_1EBB6F4D8)
  {
    sub_1C21AB51C(255, &qword_1EBB6EF58);
    sub_1C21A818C((unint64_t *)&qword_1EBB6EFD8, &qword_1EBB6EF58);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F4D8);
    }
  }
}

void sub_1C2283BD8()
{
  if (!qword_1EBB6EFE0)
  {
    sub_1C21AB51C(255, &qword_1EBB6EF58);
    sub_1C21A818C((unint64_t *)&qword_1EBB6EFD8, &qword_1EBB6EF58);
    unint64_t v0 = sub_1C2550380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6EFE0);
    }
  }
}

void sub_1C2283C6C()
{
  if (!qword_1EA2DF690)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EA2E1530);
    sub_1C21A818C(&qword_1EA2DF698, (unint64_t *)&qword_1EA2E1530);
    unint64_t v0 = sub_1C2550380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF690);
    }
  }
}

void sub_1C2283D00()
{
  if (!qword_1EA2DF6B0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DF6B0);
    }
  }
}

void sub_1C2283D68()
{
  if (!qword_1EA2DF6C0)
  {
    sub_1C21ABCB4(255, &qword_1EA2DF6C8);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF6C0);
    }
  }
}

void sub_1C2283DD8()
{
  if (!qword_1EA2DF6D8)
  {
    sub_1C2285BD8(255, &qword_1EA2DF6E0, MEMORY[0x1E4FBC958], MEMORY[0x1E4FBB320]);
    sub_1C2270AE4(255, &qword_1EA2DF6E8);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA2DF6D8);
    }
  }
}

void sub_1C2283E88()
{
  if (!qword_1EA2DF6F0)
  {
    sub_1C2285BD8(255, &qword_1EA2DF6E0, MEMORY[0x1E4FBC958], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF6F0);
    }
  }
}

void sub_1C2283F04(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1C2285BD8(255, a3, a4, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C2283F80(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_1C2283F04(255, a3, a4, a5);
    unint64_t v6 = sub_1C2550820();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C2283FDC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550690();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2284048()
{
  if (!qword_1EA2DF788)
  {
    sub_1C21ABCB4(255, (unint64_t *)&qword_1EA2DE7C0);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF788);
    }
  }
}

void sub_1C22840B4()
{
  if (!qword_1EA2DF798)
  {
    sub_1C21ABCB4(255, &qword_1EA2DE7D0);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF798);
    }
  }
}

uint64_t sub_1C2284124(uint64_t a1, uint64_t a2)
{
  sub_1C2285BD8(0, &qword_1EA2DF7A0, (uint64_t)&_s22FormattedRecordKeyDateVN, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C22841AC(uint64_t a1)
{
  return a1;
}

void sub_1C22841D8()
{
  if (!qword_1EA2DF7A8)
  {
    sub_1C22845A0(255, &qword_1EA2DF7B0);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF7A8);
    }
  }
}

void sub_1C2284240()
{
  if (!qword_1EA2DF7C0)
  {
    sub_1C21ABCB4(255, &qword_1EA2DE7F8);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF7C0);
    }
  }
}

void sub_1C22842B0()
{
  if (!qword_1EA2DF7C8)
  {
    sub_1C22845A0(255, &qword_1EA2DF7D0);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF7C8);
    }
  }
}

void sub_1C2284318()
{
  if (!qword_1EA2DF7E0)
  {
    sub_1C21ABCB4(255, &qword_1EA2DE818);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF7E0);
    }
  }
}

void sub_1C2284388()
{
  if (!qword_1EA2DF7E8)
  {
    sub_1C22845A0(255, &qword_1EA2DF7F0);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF7E8);
    }
  }
}

void sub_1C22843F0()
{
  if (!qword_1EA2DF800)
  {
    sub_1C21ABCB4(255, &qword_1EA2DE840);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF800);
    }
  }
}

void sub_1C2284460()
{
  if (!qword_1EA2DF808)
  {
    sub_1C22845A0(255, &qword_1EA2DF810);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF808);
    }
  }
}

void sub_1C22844C8()
{
  if (!qword_1EA2DF820)
  {
    sub_1C21ABCB4(255, &qword_1EA2DE878);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF820);
    }
  }
}

void sub_1C2284538()
{
  if (!qword_1EA2DF828)
  {
    sub_1C22845A0(255, &qword_1EA2DF830);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF828);
    }
  }
}

void sub_1C22845A0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v4) {
      atomic_store(TupleTypeMetadata, a2);
    }
  }
}

void sub_1C2284614(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C2270AE4(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C2284680()
{
  if (!qword_1EA2DF858)
  {
    sub_1C22858FC(255, &qword_1EA2DF250, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, MEMORY[0x1E4FBB320]);
    sub_1C228471C();
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF858);
    }
  }
}

unint64_t sub_1C228471C()
{
  unint64_t result = qword_1EA2DF860;
  if (!qword_1EA2DF860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF860);
  }
  return result;
}

void sub_1C2284770()
{
  if (!qword_1EA2DF870)
  {
    sub_1C22858FC(255, &qword_1EA2DF250, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DF870);
    }
  }
}

void sub_1C228480C()
{
  if (!qword_1EA2DF878)
  {
    type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
    sub_1C2283A0C(&qword_1EA2DF880, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    unint64_t v0 = sub_1C2550380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF878);
    }
  }
}

uint64_t sub_1C22848A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2284908()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2284940(uint64_t a1, uint64_t a2)
{
  sub_1C2274560(a1, a2, *(void *)(v2 + 16));
}

void sub_1C2284948()
{
  if (!qword_1EBB6F038)
  {
    sub_1C21AB51C(255, &qword_1EBB6FFA0);
    sub_1C21A818C(&qword_1EBB6FFA8, &qword_1EBB6FFA0);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F038);
    }
  }
}

void sub_1C22849E4()
{
  if (!qword_1EBB70048)
  {
    sub_1C21AB51C(255, &qword_1EBB6FFA0);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB70038);
    sub_1C21A818C(&qword_1EBB6FFA8, &qword_1EBB6FFA0);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB70048);
    }
  }
}

void sub_1C2284AA0()
{
  if (!qword_1EA2DF890)
  {
    sub_1C22858FC(255, &qword_1EBB6F960, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordKind, MEMORY[0x1E4FBB320]);
    sub_1C2206AA8();
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF890);
    }
  }
}

void sub_1C2284B3C()
{
  if (!qword_1EA2DF8A8)
  {
    sub_1C2284614(255, (unint64_t *)&qword_1EA2DF8B0, (unint64_t *)&qword_1EA2DF5E0, (uint64_t)&protocol descriptor for LocalizedEducationSection, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF8A8);
    }
  }
}

void sub_1C2284BD0()
{
  if (!qword_1EA2DF8B8)
  {
    sub_1C21AB51C(255, &qword_1EA2DE3F0);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF8B8);
    }
  }
}

void sub_1C2284C38()
{
  if (!qword_1EA2DF8C0)
  {
    sub_1C2285BD8(255, (unint64_t *)&qword_1EA2DE090, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF8C0);
    }
  }
}

void sub_1C2284CB4()
{
  if (!qword_1EA2DF8C8)
  {
    sub_1C21AB51C(255, (unint64_t *)&unk_1EA2DE0C0);
    sub_1C21A818C(&qword_1EA2DF8D0, (unint64_t *)&unk_1EA2DE0C0);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF8C8);
    }
  }
}

void sub_1C2284D50()
{
  if (!qword_1EA2DF8D8)
  {
    sub_1C21AB51C(255, (unint64_t *)&unk_1EA2DE0C0);
    sub_1C21AB51C(255, &qword_1EA2DF8E0);
    sub_1C21A818C(&qword_1EA2DF8D0, (unint64_t *)&unk_1EA2DE0C0);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF8D8);
    }
  }
}

void sub_1C2284E0C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1C2550380();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2284E6C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, void, uint64_t, unint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C21AB51C(255, a3);
    unint64_t v9 = sub_1C2207750();
    unint64_t v10 = a5(a1, MEMORY[0x1E4FBC958], v8, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C2284EE8(uint64_t a1, uint64_t a2)
{
  sub_1C2284E6C(0, (unint64_t *)&qword_1EBB6E940, (unint64_t *)&qword_1EBB6EEB8, 0x1E4FB1818, (uint64_t (*)(uint64_t, void, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C2284F78()
{
  if (!qword_1EA2DF8F0)
  {
    sub_1C2285BD8(255, (unint64_t *)&qword_1EA2DF8F8, (uint64_t)&type metadata for GatewayIdentifiedClinicalAccount, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF8F0);
    }
  }
}

void sub_1C2285004(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C2550380();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1C2285050()
{
  if (!qword_1EA2DF908)
  {
    sub_1C2285BD8(255, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF908);
    }
  }
}

void sub_1C22850CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    type metadata accessor for BrowseCategory();
    a3(255);
    sub_1C2283A0C(&qword_1EBB6FAD8, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
    unint64_t v5 = sub_1C2550690();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C2285178(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C22851E0()
{
  if (!qword_1EA2DF920)
  {
    sub_1C254CAD0();
    sub_1C21AB51C(255, &qword_1EA2DF928);
    sub_1C2283A0C(&qword_1EA2DD9B0, MEMORY[0x1E4F27928]);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF920);
    }
  }
}

void sub_1C228529C()
{
  if (!qword_1EA2DF930)
  {
    type metadata accessor for HKTimeScope(255);
    sub_1C2285348();
    sub_1C2283A0C(&qword_1EA2DF940, type metadata accessor for HKTimeScope);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF930);
    }
  }
}

void sub_1C2285348()
{
  if (!qword_1EA2DF938)
  {
    sub_1C21AB51C(255, &qword_1EA2DF928);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF938);
    }
  }
}

void sub_1C22853B0()
{
  if (!qword_1EA2DF958)
  {
    type metadata accessor for BrowseCategory();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DF958);
    }
  }
}

void sub_1C228541C()
{
  if (!qword_1EBB6DCA8)
  {
    sub_1C2285484();
    unint64_t v0 = sub_1C254E9E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6DCA8);
    }
  }
}

void sub_1C2285484()
{
  if (!qword_1EBB6DD70)
  {
    sub_1C21AB51C(255, &qword_1EBB6DD68);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6DD70);
    }
  }
}

void sub_1C22854EC()
{
  if (!qword_1EA2DF960)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB70030);
    sub_1C21A818C((unint64_t *)&qword_1EBB6F990, (unint64_t *)&qword_1EBB70030);
    unint64_t v0 = sub_1C2550380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF960);
    }
  }
}

void sub_1C2285580()
{
  if (!qword_1EA2DF968)
  {
    sub_1C22858FC(255, &qword_1EA2DF970, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, MEMORY[0x1E4FBB320]);
    sub_1C228561C();
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF968);
    }
  }
}

unint64_t sub_1C228561C()
{
  unint64_t result = qword_1EA2DF978;
  if (!qword_1EA2DF978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF978);
  }
  return result;
}

void sub_1C2285670()
{
  if (!qword_1EA2DF980)
  {
    type metadata accessor for UserDomainConceptViewData();
    sub_1C2283A0C(&qword_1EA2DF988, (void (*)(uint64_t))type metadata accessor for UserDomainConceptViewData);
    unint64_t v0 = sub_1C2550380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF980);
    }
  }
}

void sub_1C2285704()
{
  if (!qword_1EBB6F570)
  {
    type metadata accessor for BrowseCategory();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB6F570);
    }
  }
}

void sub_1C228576C()
{
  if (!qword_1EA2DF990)
  {
    type metadata accessor for BrowseCategory();
    sub_1C2283A0C(&qword_1EBB6FAD8, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
    unint64_t v0 = sub_1C2550380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF990);
    }
  }
}

void sub_1C2285800()
{
  if (!qword_1EBB6D8C8)
  {
    sub_1C21AB51C(255, &qword_1EBB6EF58);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6D8C8);
    }
  }
}

void sub_1C2285868()
{
  if (!qword_1EA2DF998)
  {
    type metadata accessor for CategoryRecordQueryDescription();
    sub_1C2283A0C(&qword_1EBB6F878, (void (*)(uint64_t))type metadata accessor for CategoryRecordQueryDescription);
    unint64_t v0 = sub_1C2550380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF998);
    }
  }
}

void sub_1C22858FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2285960()
{
  if (!qword_1EA2DF9A8)
  {
    sub_1C21AB51C(255, &qword_1EA2DF9B0);
    sub_1C21A818C(&qword_1EA2DF9B8, &qword_1EA2DF9B0);
    unint64_t v0 = sub_1C2550380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF9A8);
    }
  }
}

uint64_t sub_1C22859F4(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C2285A50(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

void sub_1C2285A5C()
{
  if (!qword_1EBB6E608[0])
  {
    sub_1C21AB51C(255, &qword_1EBB6FF78);
    sub_1C21A818C((unint64_t *)&qword_1EBB6FF80, &qword_1EBB6FF78);
    unint64_t v0 = sub_1C2550380();
    if (!v1) {
      atomic_store(v0, qword_1EBB6E608);
    }
  }
}

unint64_t sub_1C2285AF0()
{
  unint64_t result = qword_1EA2DF9C8;
  if (!qword_1EA2DF9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF9C8);
  }
  return result;
}

void sub_1C2285B44()
{
  if (!qword_1EA2DF9D0)
  {
    sub_1C21AB51C(255, &qword_1EBB6FF78);
    sub_1C21A818C((unint64_t *)&qword_1EBB6FF80, &qword_1EBB6FF78);
    unint64_t v0 = sub_1C254F930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF9D0);
    }
  }
}

void sub_1C2285BD8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C2285C24()
{
  if (!qword_1EA2DF9E0)
  {
    sub_1C254CCB0();
    sub_1C2283A0C(&qword_1EA2DF9E8, MEMORY[0x1E4F27C88]);
    unint64_t v0 = sub_1C2550380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF9E0);
    }
  }
}

id sub_1C2285CDC()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v1 = objc_msgSend(self, sel_whiteColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  objc_msgSend(v0, sel_setBackgroundColor_, 0);
  objc_msgSend(v0, sel_setOpaque_, 0);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setTextAlignment_, 1);
  objc_msgSend(v0, sel_setLineBreakMode_, 0);
  id v2 = objc_msgSend(self, sel_boldSystemFontOfSize_, 24.0);
  objc_msgSend(v0, sel_setFont_, v2);

  return v0;
}

char *sub_1C2285DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressIndicator;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1400]);
  uint64_t v7 = v2;
  id v8 = objc_msgSend(v6, sel_initWithActivityIndicatorStyle_, 101);
  id v9 = objc_msgSend(self, sel_whiteColor);
  objc_msgSend(v8, sel_setColor_, v9);

  *(void *)&v2[v5] = v8;
  uint64_t v10 = OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel;
  *(void *)&v7[v10] = sub_1C2285CDC();
  uint64_t v11 = OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_backgroundEffect;
  id v12 = objc_msgSend(self, sel_effectWithStyle_, 20);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v12);

  *(void *)&v7[v11] = v13;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_fontSize] = 0x4038000000000000;
  uint64_t v14 = &v7[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_text];
  *(void *)uint64_t v14 = a1;
  *((void *)v14 + 1) = a2;

  swift_bridgeObjectRelease();
  v19.receiver = v7;
  v19.super_class = (Class)type metadata accessor for ProgressHUD();
  uint64_t v15 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, sel_setOpaque_, 0);
  objc_msgSend(v15, sel_setNeedsDisplayOnBoundsChange_, 1);
  uint64_t v16 = *(void **)&v15[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_backgroundEffect];
  objc_msgSend(v16, sel_setAutoresizingMask_, 18);
  objc_msgSend(v15, sel_bounds);
  objc_msgSend(v16, sel_setFrame_);
  objc_msgSend(v15, sel_addSubview_, v16);
  objc_msgSend(v15, sel_addSubview_, *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressIndicator]);
  objc_msgSend(v15, sel_addSubview_, *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel]);
  id v17 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C254FE70();

  return v15;
}

id sub_1C2286070()
{
  id result = objc_msgSend(v0, sel_superview);
  if (!result) {
    return result;
  }
  id v2 = result;
  objc_msgSend(result, sel_bounds);
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  objc_msgSend(self, sel_defaultSizeForStyle_, 101);
  v55.origin.CGFloat x = v4;
  v55.origin.CGFloat y = v6;
  v55.size.CGFloat width = v8;
  v55.size.CGFloat height = v10;
  CGRect v56 = CGRectInset(v55, 20.0, 20.0);
  CGFloat x = v56.origin.x;
  CGFloat y = v56.origin.y;
  CGFloat width = v56.size.width;
  CGFloat height = v56.size.height;
  objc_msgSend(v0, sel_frame);
  double v54 = 0.0;
  if (!*(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_text + 8]) {
    goto LABEL_7;
  }
  uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel];
  swift_bridgeObjectRetain();
  id v16 = objc_msgSend(v15, sel_font);
  if (!v16)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    double v53 = 0.0;
    goto LABEL_8;
  }
  id v17 = v16;
  uint64_t v18 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  sub_1C21F0F90();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
  unint64_t v20 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  *(void *)(inited + 64) = sub_1C2286664();
  *(void *)(inited + 40) = v17;
  id v21 = v20;
  id v22 = v17;
  sub_1C2203C38(inited);
  type metadata accessor for Key(0);
  sub_1C21F1054();
  uint64_t v23 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_sizeWithAttributes_, v23);
  double v25 = v24;
  double v54 = v26;

  v57.origin.CGFloat x = x;
  v57.origin.CGFloat y = y;
  v57.size.CGFloat width = width;
  v57.size.CGFloat height = height;
  double v53 = v25;
  CGRectGetWidth(v57);
  v58.origin.CGFloat x = x;
  v58.origin.CGFloat y = y;
  v58.size.CGFloat width = width;
  v58.size.CGFloat height = height;
  CGRectGetHeight(v58);

LABEL_8:
  UIRectCenteredIntegralRect();
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  objc_msgSend(v0, sel_setFrame_);
  uint64_t v35 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressIndicator];
  objc_msgSend(v35, sel_frame);
  CGFloat v37 = v36;
  CGFloat v39 = v38;
  double v41 = v40;
  double v43 = v42;
  CGFloat v52 = v28;
  v59.origin.CGFloat x = v28;
  v59.origin.CGFloat y = v30;
  v59.size.CGFloat width = v32;
  v59.size.CGFloat height = v34;
  double v44 = CGRectGetWidth(v59);
  v60.origin.CGFloat x = v37;
  v60.origin.CGFloat y = v39;
  v60.size.CGFloat width = v41;
  v60.size.CGFloat height = v43;
  CGFloat v45 = CGRectGetWidth(v60);
  double v46 = CGRound((v44 - v45) * 0.5);
  objc_msgSend(v35, sel_setFrame_, v46, 26.0, v41, v43);
  if (v53 == 0.0 && v54 == 0.0) {
    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel], sel_setFrame_, 0.0, 0.0, 0.0, 0.0);
  }
  v61.origin.CGFloat x = v52;
  v61.origin.CGFloat y = v30;
  v61.size.CGFloat width = v32;
  v61.size.CGFloat height = v34;
  CGFloat v47 = CGRectGetWidth(v61);
  double v51 = CGRound((v47 - v53) * 0.5);
  v62.origin.CGFloat y = 26.0;
  v62.origin.CGFloat x = v46;
  v62.size.CGFloat width = v41;
  v62.size.CGFloat height = v43;
  double v48 = CGRectGetHeight(v62);
  v63.origin.CGFloat x = v52;
  v63.origin.CGFloat y = v30;
  v63.size.CGFloat width = v32;
  v63.size.CGFloat height = v34;
  double v49 = CGRectGetWidth(v63) + -20.0;
  if (v49 >= v53) {
    double v50 = v53;
  }
  else {
    double v50 = v49;
  }
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel], sel_setFrame_, v51, v48 + 26.0 + 8.0, v50, v54);
}

id sub_1C2286594()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProgressHUD();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ProgressHUD()
{
  return self;
}

double CGRound(double a1)
{
  return round(a1);
}

unint64_t sub_1C2286664()
{
  unint64_t result = qword_1EA2E3570;
  if (!qword_1EA2E3570)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E3570);
  }
  return result;
}

void sub_1C22866A4()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressIndicator;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 101);
  id v3 = objc_msgSend(self, sel_whiteColor);
  objc_msgSend(v2, sel_setColor_, v3);

  *(void *)&v0[v1] = v2;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel;
  *(void *)&v0[v4] = sub_1C2285CDC();
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_backgroundEffect;
  id v6 = objc_msgSend(self, sel_effectWithStyle_, 20);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v6);

  *(void *)&v0[v5] = v7;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_fontSize] = 0x4038000000000000;
  CGFloat v8 = &v0[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_text];
  *(void *)CGFloat v8 = 0;
  *((void *)v8 + 1) = 0;

  sub_1C25505F0();
  __break(1u);
}

id ConditionRecordFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store);
}

uint64_t ConditionRecordFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context);
}

id ConditionRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id ConditionRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for ConditionRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for ConditionRecordFormatter()
{
  return self;
}

unint64_t sub_1C22868F4(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context);
  if (v2 == 1)
  {
    return sub_1C2286BB0(a1);
  }
  else if (v2)
  {
    unint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C2286978(a1);
  }
  return result;
}

uint64_t sub_1C2286978(void *a1)
{
  sub_1C224F4C8(0, (unint64_t *)&qword_1EA2DF0E8, (uint64_t (*)(uint64_t))sub_1C224F494, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255FB80;
  *(void *)(inited + 32) = sub_1C230FA28(a1);
  *(void *)(inited + 40) = sub_1C230FC54(a1);
  sub_1C224F52C();
  objc_super v4 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store);
  id v5 = a1;
  uint64_t v6 = sub_1C23F6374(v5);

  uint64_t v7 = Array<A>.newlineJoined.getter(v6);
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = sub_1C23871C0(v7, v9);
  *(void *)(inited + 56) = sub_1C2287160(v5);
  *(void *)(inited + 64) = sub_1C228734C(v5);
  *(void *)(inited + 72) = sub_1C22874B4(v5);
  *(void *)(inited + 80) = sub_1C22878F8(v5);
  id v10 = v5;
  id v11 = v4;
  uint64_t v12 = sub_1C23F6558(v10);

  uint64_t v13 = Array<A>.newlineJoined.getter(v12);
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  *(void *)(inited + 88) = sub_1C23873A0(v13, v15);
  *(void *)(inited + 96) = sub_1C2422FE8(v10);
  *(void *)(inited + 104) = sub_1C243F974(v10);
  sub_1C254F730();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  for (uint64_t i = 32; i != 112; i += 8)
  {
    id v17 = *(void **)(inited + i);
    if (v17)
    {
      id v18 = v17;
      MEMORY[0x1C8757C00]();
      if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }
  }
  swift_bridgeObjectRelease();
  return v20;
}

unint64_t sub_1C2286BB0(void *a1)
{
  id v3 = sub_1C2287160(a1);
  sub_1C224F52C();
  objc_super v4 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store);
  id v5 = a1;
  id v6 = v4;
  uint64_t v7 = sub_1C23F6558(v5);

  uint64_t v8 = Array<A>.newlineJoined.getter(v7);
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  id v11 = sub_1C23873A0(v8, v10);
  unint64_t v22 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    id v12 = v3;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  if (v11)
  {
    id v13 = v11;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  unint64_t v14 = v22;

  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v20 >= 2) {
      goto LABEL_15;
    }
  }
  else if (*(uint64_t *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
    goto LABEL_15;
  }
  unint64_t v15 = (void *)sub_1C243F974(v5);
  if (v15)
  {
    id v16 = v15;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    unint64_t v14 = v22;
  }
LABEL_15:
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v21 > 1) {
      return v14;
    }
  }
  else if (*(uint64_t *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    return v14;
  }
  id v17 = (void *)sub_1C2422FE8(v5);
  if (v17)
  {
    id v18 = v17;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    return v22;
  }
  return v14;
}

id ConditionRecordFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ConditionRecordFormatter.init()()
{
}

id ConditionRecordFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConditionRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C2286F78()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store);
}

uint64_t sub_1C2286F8C()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context);
}

id sub_1C2286FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = (objc_class *)type metadata accessor for ConditionRecordFormatter();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

unint64_t sub_1C2287014(void *a1)
{
  uint64_t v2 = *(void *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context);
  if (v2 == 1) {
    return sub_1C2286BB0(a1);
  }
  if (!v2) {
    return sub_1C2286978(a1);
  }
  unint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

unint64_t sub_1C2287084(uint64_t a1)
{
  unint64_t result = sub_1C22870AC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C22870AC()
{
  unint64_t result = qword_1EA2DFA28;
  if (!qword_1EA2DFA28)
  {
    type metadata accessor for ConditionRecordFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DFA28);
  }
  return result;
}

uint64_t method lookup function for ConditionRecordFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConditionRecordFormatter);
}

uint64_t dispatch thunk of ConditionRecordFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ConditionRecordFormatter.displayItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

id sub_1C2287160(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1C23F6328(v1);
  unint64_t v4 = v3;

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    id v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    objc_super v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

id sub_1C228734C(void *a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C224F52C();
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(a1, sel_recordedDate, 0xE000000000000000);
  id v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  id v11 = sub_1C23898E0(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1C22874B4(void *a1)
{
  id v2 = objc_msgSend(a1, sel_onset);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  if (objc_msgSend(v2, sel_valueType) == (id)3)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C254C730();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();

    id v8 = objc_msgSend(v3, sel_medicalDateIntervalValue);
    unint64_t v39 = sub_1C224F52C();
    id v37 = objc_msgSend(v8, sel_startDate);
    id v9 = objc_msgSend(v8, sel_endDate);
    double v38 = &v36;
    uint64_t v10 = MEMORY[0x1F4188790](v9);
    unint64_t v34 = v5;
    uint64_t v35 = v7;
    uint64_t v11 = MEMORY[0x1F4188790](v10);
    v32[2] = v5;
    v32[3] = v7;
    MEMORY[0x1F4188790](v11);
    v31[2] = v5;
    v31[3] = v7;
    id v12 = objc_msgSend(a1, sel_meaningfulDateTitle);
    uint64_t v13 = sub_1C254F470();
    uint64_t v15 = v14;

    id v16 = sub_1C2388D90(v37, v9, sub_1C22659DC, (uint64_t)&v33, sub_1C2287CA0, (uint64_t)v32, (void (*)(id))sub_1C2287CA0, (uint64_t)v31, v13, v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v17 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    unint64_t v34 = 0xE000000000000000;
    uint64_t v18 = sub_1C254C730();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();

    id v21 = objc_msgSend(a1, sel_meaningfulDateTitle);
    uint64_t v22 = sub_1C254F470();
    uint64_t v24 = v23;

    if (v18 == v22 && v20 == v24)
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    else
    {
      char v25 = sub_1C2550870();
      swift_bridgeObjectRelease();
      if (v25)
      {

        swift_bridgeObjectRelease();
        return 0;
      }
      else
      {
        sub_1C224F52C();
        swift_bridgeObjectRetain();
        id v26 = objc_msgSend(v3, sel_displayString);
        uint64_t v27 = sub_1C254F470();
        unint64_t v29 = v28;

        id v16 = sub_1C2389A40(v27, v29);
        swift_bridgeObjectRelease_n();
      }
    }
  }
  return v16;
}

id sub_1C22878F8(void *a1)
{
  id v2 = objc_msgSend(a1, sel_abatement);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  unint64_t v30 = 0xE000000000000000;
  uint64_t v5 = sub_1C254C730();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();

  if (objc_msgSend(v3, sel_valueType) == (id)3)
  {
    id v8 = objc_msgSend(v3, sel_medicalDateIntervalValue);
    unint64_t v35 = sub_1C224F52C();
    id v33 = objc_msgSend(v8, sel_startDate);
    id v9 = objc_msgSend(v8, sel_endDate);
    unint64_t v34 = &v32;
    uint64_t v10 = MEMORY[0x1F4188790](v9);
    unint64_t v30 = v5;
    uint64_t v31 = v7;
    uint64_t v11 = MEMORY[0x1F4188790](v10);
    v28[2] = v5;
    v28[3] = v7;
    MEMORY[0x1F4188790](v11);
    v27[2] = v5;
    v27[3] = v7;
    id v12 = objc_msgSend(a1, sel_meaningfulDateTitle);
    uint64_t v13 = sub_1C254F470();
    uint64_t v15 = v14;

    id v16 = sub_1C2388D90(v33, v9, sub_1C2287CA0, (uint64_t)&v29, sub_1C2287CA0, (uint64_t)v28, (void (*)(id))sub_1C2287CA0, (uint64_t)v27, v13, v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v17 = objc_msgSend(a1, sel_meaningfulDateTitle);
    uint64_t v18 = sub_1C254F470();
    uint64_t v20 = v19;

    if (v5 == v18 && v7 == v20)
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    else
    {
      char v21 = sub_1C2550870();
      swift_bridgeObjectRelease();
      if (v21)
      {

        swift_bridgeObjectRelease();
        return 0;
      }
      else
      {
        sub_1C224F52C();
        swift_bridgeObjectRetain();
        id v22 = objc_msgSend(v3, sel_displayString);
        uint64_t v23 = sub_1C254F470();
        unint64_t v25 = v24;

        id v16 = sub_1C2389A40(v23, v25);
        swift_bridgeObjectRelease_n();
      }
    }
  }
  return v16;
}

void sub_1C2287CA4()
{
  qword_1EA2DFA30 = 0x4028000000000000;
}

uint64_t sub_1C2287D60()
{
  uint64_t v1 = v0 + OBJC_IVAR___HRTimelineHeaderView_delegate;
  swift_beginAccess();
  return MEMORY[0x1C875A200](v1);
}

uint64_t sub_1C2287E00()
{
  return swift_unknownObjectRelease();
}

void (*sub_1C2287E5C(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HRTimelineHeaderView_delegate;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1C875A200](v5);
  return sub_1C2287EE0;
}

void sub_1C2287EE0(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_1C2287FA8()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden);
  swift_beginAccess();
  return *v1;
}

void sub_1C2288070(unsigned __int8 a1)
{
  uint64_t v3 = (unsigned __int8 *)(v1 + OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden);
  swift_beginAccess();
  unsigned __int8 *v3 = a1;
  id v4 = sub_1C228852C();
  objc_msgSend(v4, sel_setHidden_, *v3);
}

void sub_1C22880E0(unsigned __int8 *a1, void *a2)
{
  unsigned __int8 v2 = *a1;
  uint64_t v3 = (unsigned __int8 *)(*a2 + OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden);
  swift_beginAccess();
  unsigned __int8 *v3 = v2;
  id v4 = sub_1C228852C();
  objc_msgSend(v4, sel_setHidden_, *v3);
}

void (*sub_1C2288154(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C22881C0;
}

void sub_1C22881C0(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    id v6 = sub_1C228852C();
    objc_msgSend(v6, sel_setHidden_, *(unsigned __int8 *)(v4 + v5));
  }
  free(v3);
}

id sub_1C228822C()
{
  uint64_t v1 = OBJC_IVAR___HRTimelineHeaderView____lazy_storage___titleLabel;
  unsigned __int8 v2 = *(void **)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___titleLabel);
LABEL_5:
    id v8 = v2;
    return v3;
  }
  id result = objc_msgSend(self, sel__preferredFontForTextStyle_variant_maximumContentSizeCategory_, *MEMORY[0x1E4FB2990], 1024, *MEMORY[0x1E4FB27B0]);
  if (result)
  {
    uint64_t v5 = result;
    id v6 = objc_msgSend(self, sel_labelColor);
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v3, sel_setFont_, v5);
    objc_msgSend(v3, sel_setNumberOfLines_, 1);
    objc_msgSend(v3, sel_setTextColor_, v6);

    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    unsigned __int8 v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_1C2288354()
{
  uint64_t v1 = OBJC_IVAR___HRTimelineHeaderView____lazy_storage___subtitleLabel;
  unsigned __int8 v2 = *(void **)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___subtitleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___subtitleLabel);
LABEL_5:
    id v8 = v2;
    return v3;
  }
  id result = objc_msgSend(self, sel__preferredFontForTextStyle_variant_maximumContentSizeCategory_, *MEMORY[0x1E4FB28F0], 1024, *MEMORY[0x1E4FB27B0]);
  if (result)
  {
    uint64_t v5 = result;
    id v6 = objc_msgSend(self, sel_secondaryLabelColor);
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v3, sel_setFont_, v5);
    objc_msgSend(v3, sel_setNumberOfLines_, 0);
    objc_msgSend(v3, sel_setTextColor_, v6);

    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    unsigned __int8 v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_1C228847C()
{
  uint64_t v1 = OBJC_IVAR___HRTimelineHeaderView____lazy_storage___backgroundEffectView;
  unsigned __int8 v2 = *(void **)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___backgroundEffectView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___backgroundEffectView);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_effectWithStyle_, 10);
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F00]), sel_initWithEffect_, v4);

    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    unsigned __int8 v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C228852C()
{
  uint64_t v1 = OBJC_IVAR___HRTimelineHeaderView____lazy_storage___separatorView;
  unsigned __int8 v2 = *(void **)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___separatorView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HRTimelineHeaderView____lazy_storage___separatorView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
    id v5 = objc_msgSend(self, sel_opaqueSeparatorColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);

    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unsigned __int8 v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id TimelineHeaderView.__allocating_init(reuseIdentifier:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = 0;
  }
  id v4 = objc_msgSend(objc_allocWithZone(v2), sel_initWithReuseIdentifier_, v3);

  return v4;
}

id TimelineHeaderView.init(reuseIdentifier:)(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakInit();
  v2[OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden] = 0;
  *(void *)&v2[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___titleLabel] = 0;
  *(void *)&v2[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___subtitleLabel] = 0;
  *(void *)&v2[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___backgroundEffectView] = 0;
  *(void *)&v2[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___separatorView] = 0;
  if (a2)
  {
    id v4 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for TimelineHeaderView();
  id v5 = objc_msgSendSuper2(&v8, sel_initWithReuseIdentifier_, v4);

  id v6 = v5;
  sub_1C22888B0();

  return v6;
}

uint64_t type metadata accessor for TimelineHeaderView()
{
  return self;
}

id TimelineHeaderView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id TimelineHeaderView.init(coder:)(void *a1)
{
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden] = 0;
  *(void *)&v1[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___titleLabel] = 0;
  *(void *)&v1[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___subtitleLabel] = 0;
  *(void *)&v1[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___backgroundEffectView] = 0;
  *(void *)&v1[OBJC_IVAR___HRTimelineHeaderView____lazy_storage___separatorView] = 0;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for TimelineHeaderView();
  id v3 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);
  id v4 = v3;
  if (v3)
  {
    id v5 = v3;
    sub_1C22888B0();
  }
  return v4;
}

void sub_1C22888B0()
{
  id v1 = sub_1C228847C();
  objc_msgSend(v1, sel_setHidden_, objc_msgSend(v0, sel_floating) ^ 1);

  id v2 = sub_1C228847C();
  objc_msgSend(v0, sel_setBackgroundView_, v2);

  id v3 = objc_msgSend(v0, sel_contentView);
  id v4 = sub_1C228822C();
  objc_msgSend(v3, sel_addSubview_, v4);

  id v5 = objc_msgSend(v0, sel_contentView);
  id v6 = sub_1C2288354();
  objc_msgSend(v5, sel_addSubview_, v6);

  id v7 = objc_msgSend(v0, sel_contentView);
  id v8 = sub_1C228852C();
  objc_msgSend(v7, sel_addSubview_, v8);
}

void sub_1C22889F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = sub_1C228822C();
  id v7 = (void *)sub_1C254F430();
  objc_msgSend(v6, sel_setText_, v7);

  id v8 = sub_1C2288354();
  sub_1C2218914();
  sub_1C2550150();
  id v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setText_, v9, a3, a4);
}

void sub_1C2288B4C(void *a1)
{
  id v2 = sub_1C228847C();
  if (a1 && (id v3 = objc_msgSend(a1, sel__backdropViewLayerGroupName)) != 0)
  {
    id v4 = v3;
    sub_1C254F470();

    id v6 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v5 = v6;
  }
  else
  {
    id v5 = 0;
  }
  id v7 = v5;
  objc_msgSend(v2, sel__setGroupName_);
}

void sub_1C2288CE4()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for TimelineHeaderView();
  objc_msgSendSuper2(&v4, sel_prepareForReuse);
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  objc_msgSend(v0, sel_setFloating_, 0);
  id v1 = (unsigned __int8 *)&v0[OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden];
  swift_beginAccess();
  *id v1 = 0;
  id v2 = sub_1C228852C();
  objc_msgSend(v2, sel_setHidden_, *v1);

  id v3 = sub_1C228847C();
  objc_msgSend(v3, sel__setGroupName_, 0);
}

id sub_1C2288ED0(char a1)
{
  int v2 = a1 & 1;
  id result = objc_msgSend(v1, sel_floating);
  if (result != v2)
  {
    id v4 = sub_1C228822C();
    id result = objc_msgSend(self, sel__preferredFontForTextStyle_variant_maximumContentSizeCategory_, *MEMORY[0x1E4FB2990], 1024, *MEMORY[0x1E4FB27B0]);
    if (!result)
    {
      __break(1u);
      return result;
    }
    id v5 = result;
    objc_msgSend(v4, sel_setFont_, result);

    id v6 = sub_1C2288354();
    objc_msgSend(v6, sel_setNumberOfLines_, objc_msgSend(v1, sel_floating));

    id v7 = objc_msgSend(v1, sel_backgroundView);
    if (v7)
    {
      id v8 = v7;
      objc_msgSend(v7, sel_setHidden_, objc_msgSend(v1, sel_floating) ^ 1);
    }
    objc_msgSend(v1, sel_setNeedsLayout);
    unsigned int v9 = objc_msgSend(v1, sel_floating);
    uint64_t v10 = &v1[OBJC_IVAR___HRTimelineHeaderView_delegate];
    if (v9)
    {
      swift_beginAccess();
      id result = (id)MEMORY[0x1C875A200](v10);
      if (!result) {
        return result;
      }
      uint64_t v11 = result;
      id v12 = &selRef_headerViewDidBeginFloating_;
    }
    else
    {
      swift_beginAccess();
      id result = (id)MEMORY[0x1C875A200](v10);
      if (!result) {
        return result;
      }
      uint64_t v11 = result;
      id v12 = &selRef_headerViewDidEndFloating_;
    }
    objc_msgSend(v11, *v12, v1);
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

void sub_1C2289090()
{
  uint64_t v1 = sub_1C2550850();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (objc_class *)type metadata accessor for TimelineHeaderView();
  v51.receiver = v0;
  v51.super_class = v5;
  objc_msgSendSuper2(&v51, sel_layoutSubviews);
  objc_msgSend(v0, sel_bounds);
  double Width = CGRectGetWidth(v52);
  objc_msgSend(v0, sel_layoutMargins);
  double v8 = v7;
  objc_msgSend(v0, sel_layoutMargins);
  double v10 = v9;
  objc_msgSend(v0, sel_layoutMargins);
  double v12 = v11;
  if (qword_1EA2DD4E8 != -1) {
    swift_once();
  }
  double v13 = *(double *)&qword_1EA2DFA30;
  id v14 = sub_1C228822C();
  id v15 = objc_msgSend(v14, sel_font);

  if (v15)
  {
    double v16 = Width - v8 - v10;
    objc_msgSend(v15, sel_lineHeight);

    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBBEA8], v1);
    id v17 = objc_msgSend(v0, sel_traitCollection);
    sub_1C254CDD0();
    double v19 = v18;

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    id v20 = sub_1C228822C();
    objc_msgSend(v20, sel_setFrame_, v12, v13, v16, v19);

    objc_msgSend(v0, sel_layoutMargins);
    double v22 = v21;
    v53.origin.CGFloat x = v12;
    v53.origin.CGFloat y = v13;
    v53.size.CGFloat width = v16;
    v53.size.CGFloat height = v19;
    double MaxY = CGRectGetMaxY(v53);
    id v24 = sub_1C2288354();
    objc_msgSend(v24, sel_sizeThatFits_, v16, 1.79769313e308);
    double v26 = v25;

    id v27 = sub_1C2288354();
    objc_msgSend(v27, sel_setFrame_, v22, MaxY, v16, v26);

    id v28 = objc_msgSend(v0, sel_traitCollection);
    objc_msgSend(v28, sel_displayPixel);
    double v30 = v29;

    double v31 = 0.0;
    if ((objc_msgSend(v0, sel_floating) & 1) == 0)
    {
      objc_msgSend(v0, sel_layoutMargins);
      double v31 = v32;
    }
    v54.origin.CGFloat x = v22;
    v54.origin.CGFloat y = MaxY;
    v54.size.CGFloat width = v16;
    v54.size.CGFloat height = v26;
    double v33 = CGRectGetMaxY(v54);
    double v34 = *(double *)&qword_1EA2DFA30;
    if (objc_msgSend(v0, sel_floating))
    {
      objc_msgSend(v0, sel_bounds);
      double v16 = CGRectGetWidth(v55);
    }
    double v35 = v33 + v34 - v30;
    id v36 = sub_1C228852C();
    objc_msgSend(v36, sel_setFrame_, v31, v35, v16, v30);

    id v37 = sub_1C228847C();
    unsigned __int8 v38 = objc_msgSend(v37, sel_isHidden);

    if ((v38 & 1) == 0)
    {
      id v39 = sub_1C228847C();
      objc_msgSend(v39, sel_frame);
      double v41 = v40;
      double v43 = v42;
      double v45 = v44;
      double v47 = v46;

      v56.origin.CGFloat x = v31;
      v56.origin.CGFloat y = v35;
      v56.size.CGFloat width = v16;
      v56.size.CGFloat height = v30;
      double v48 = CGRectGetMaxY(v56);
      if (v48 >= v47) {
        double v49 = v47;
      }
      else {
        double v49 = v48;
      }
      id v50 = sub_1C228847C();
      objc_msgSend(v50, sel_setFrame_, v41, v43, v45, v49);
    }
  }
  else
  {
    __break(1u);
  }
}

double sub_1C22894F4(double a1)
{
  objc_msgSend(v1, sel_layoutMargins);
  double v4 = v3;
  objc_msgSend(v1, sel_layoutMargins);
  double v6 = v5;
  if (qword_1EA2DD4E8 != -1) {
    swift_once();
  }
  double v7 = a1 - v4 - v6;
  id v8 = sub_1C228822C();
  objc_msgSend(v8, sel_sizeThatFits_, v7, 1.79769313e308);

  id v9 = sub_1C2288354();
  objc_msgSend(v9, sel_sizeThatFits_, v7, 1.79769313e308);

  return a1;
}

void sub_1C2289644(void *a1)
{
  v25.receiver = v1;
  v25.super_class = (Class)type metadata accessor for TimelineHeaderView();
  objc_msgSendSuper2(&v25, sel_traitCollectionDidChange_, a1);
  if (a1) {
    id v3 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  }
  else {
    id v3 = 0;
  }
  id v4 = objc_msgSend(v1, sel_traitCollection);
  id v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  if (!v3)
  {

    goto LABEL_12;
  }
  uint64_t v6 = sub_1C254F470();
  uint64_t v8 = v7;
  if (v6 == sub_1C254F470() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
    if (a1) {
      goto LABEL_16;
    }
LABEL_18:
    double v21 = 0.0;
    goto LABEL_19;
  }
  char v11 = sub_1C2550870();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
  {
LABEL_12:
    id v12 = sub_1C228822C();
    double v13 = self;
    uint64_t v14 = *MEMORY[0x1E4FB27B0];
    id v15 = objc_msgSend(v13, sel__preferredFontForTextStyle_variant_maximumContentSizeCategory_, *MEMORY[0x1E4FB2990], 1024, *MEMORY[0x1E4FB27B0]);
    if (v15)
    {
      double v16 = v15;
      objc_msgSend(v12, sel_setFont_, v15);

      id v17 = sub_1C2288354();
      id v18 = objc_msgSend(v13, sel__preferredFontForTextStyle_variant_maximumContentSizeCategory_, *MEMORY[0x1E4FB28F0], 1024, v14);
      if (v18)
      {
        double v19 = v18;
        objc_msgSend(v17, sel_setFont_, v18);

        objc_msgSend(v1, sel_setNeedsLayout);
        goto LABEL_15;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }
LABEL_15:
  if (!a1) {
    goto LABEL_18;
  }
LABEL_16:
  objc_msgSend(a1, sel_displayScale);
  double v21 = v20;
LABEL_19:
  id v22 = objc_msgSend(v1, sel_traitCollection);
  objc_msgSend(v22, sel_displayScale);
  double v24 = v23;

  if (!a1 || v21 != v24) {
    objc_msgSend(v1, sel_setNeedsLayout);
  }
}

id TimelineHeaderView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TimelineHeaderView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C22899E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR___HRTimelineHeaderView_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C875A200](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1C2289A40()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1C2289A98@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR___HRTimelineHeaderView_separatorViewHidden);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t method lookup function for TimelineHeaderView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TimelineHeaderView);
}

uint64_t dispatch thunk of static TimelineHeaderView.reuseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of TimelineHeaderView.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TimelineHeaderView.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TimelineHeaderView.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of TimelineHeaderView.separatorViewHidden.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of TimelineHeaderView.separatorViewHidden.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of TimelineHeaderView.separatorViewHidden.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of TimelineHeaderView.apply(title:subtitle:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of TimelineHeaderView.applyStyle(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

void *TextItem.init(labelText:font:textColor:backgroundColor:accessories:accessibilityIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  type metadata accessor for TextItemCell();
  sub_1C228A23C(&qword_1EA2DE790, 255, (void (*)(uint64_t))type metadata accessor for TextItemCell);
  v8[10] = sub_1C254D330();
  v8[11] = v17;
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  v8[6] = a5;
  v8[7] = a6;
  v8[8] = a7;
  v8[9] = a8;
  return v8;
}

id *TextItem.deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1C2289DE4()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  objc_super v2 = *(void **)(v0 + 32);
  if (!v2)
  {
    sub_1C25509E0();
    id v4 = *(void **)(v0 + 40);
    if (v4) {
      goto LABEL_3;
    }
LABEL_7:
    sub_1C25509E0();
    return;
  }
  sub_1C25509E0();
  id v3 = v2;
  sub_1C254FF80();

  id v4 = *(void **)(v1 + 40);
  if (!v4) {
    goto LABEL_7;
  }
LABEL_3:
  sub_1C25509E0();
  id v5 = v4;
  sub_1C254FF80();
}

uint64_t sub_1C2289F00()
{
  return sub_1C2550A10();
}

uint64_t TextItem.labelText.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void *TextItem.labelFont.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void *TextItem.labelTextColor.getter()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

void *TextItem.backgroundColor.getter()
{
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

uint64_t TextItem.accessories.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TextItem.accessibilityIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

void *TextItem.__allocating_init(labelText:font:textColor:backgroundColor:accessories:accessibilityIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double v16 = (void *)swift_allocObject();
  type metadata accessor for TextItemCell();
  sub_1C228A23C(&qword_1EA2DE790, 255, (void (*)(uint64_t))type metadata accessor for TextItemCell);
  v16[10] = sub_1C254D330();
  v16[11] = v17;
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  v16[6] = a5;
  v16[7] = a6;
  v16[8] = a7;
  v16[9] = a8;
  return v16;
}

uint64_t TextItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static TextItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1C2550870();
  }
}

uint64_t TextItem.__deallocating_deinit()
{
  TextItem.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C228A18C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

void sub_1C228A1D0()
{
}

uint64_t sub_1C228A1F4(uint64_t a1, uint64_t a2)
{
  return sub_1C228A23C(&qword_1EA2DFA68, a2, (void (*)(uint64_t))type metadata accessor for TextItem);
}

uint64_t sub_1C228A23C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for TextItem()
{
  return self;
}

uint64_t sub_1C228A2A8()
{
  return sub_1C2550A10();
}

uint64_t sub_1C228A2E8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C228A31C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C228A350(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)a1 + 16) == *(void *)(*(void *)a2 + 16)
    && *(void *)(*(void *)a1 + 24) == *(void *)(*(void *)a2 + 24))
  {
    return 1;
  }
  else
  {
    return sub_1C2550870();
  }
}

uint64_t method lookup function for TextItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TextItem);
}

uint64_t dispatch thunk of TextItem.__allocating_init(labelText:font:textColor:backgroundColor:accessories:accessibilityIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of TextItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of TextItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of TextItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t sub_1C228A418(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)MEMORY[0x1C87588E0](v8, v4);
LABEL_9:
        double v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        uint64_t v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_1C2550460();
          sub_1C25504A0();
          unint64_t v4 = v15;
          sub_1C25504B0();
          sub_1C2550470();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_1C2550620();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C228A5C4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C22747A4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      uint64_t v6 = MEMORY[0x1E4F66470];
      do
      {
        uint64_t v7 = MEMORY[0x1C87588E0](v5, a1);
        unint64_t v9 = *(void *)(v18 + 16);
        unint64_t v8 = *(void *)(v18 + 24);
        if (v9 >= v8 >> 1) {
          sub_1C22747A4(v8 > 1, v9 + 1, 1);
        }
        ++v5;
        *(void *)(v18 + 16) = v9 + 1;
        uint64_t v10 = v18 + 16 * v9;
        *(void *)(v10 + 32) = v7;
        *(void *)(v10 + 40) = v6;
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v11 = (uint64_t *)(a1 + 32);
      unint64_t v12 = *(void *)(v18 + 16);
      uint64_t v13 = 16 * v12;
      uint64_t v14 = MEMORY[0x1E4F66470];
      do
      {
        uint64_t v15 = *v11;
        unint64_t v16 = *(void *)(v18 + 24);
        swift_retain();
        if (v12 >= v16 >> 1) {
          sub_1C22747A4(v16 > 1, v12 + 1, 1);
        }
        *(void *)(v18 + 16) = v12 + 1;
        uint64_t v17 = v18 + v13;
        *(void *)(v17 + 32) = v15;
        *(void *)(v17 + 40) = v14;
        v13 += 16;
        ++v11;
        ++v12;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C228A768(unint64_t a1)
{
  return sub_1C228B7C4(a1, type metadata accessor for AccountLoginItem, &qword_1EA2DFAD0, (void (*)(uint64_t))type metadata accessor for AccountLoginItem);
}

uint64_t sub_1C228A7B0(unint64_t a1)
{
  return sub_1C228B7C4(a1, type metadata accessor for TitleSubtitleDetailItem, &qword_1EA2DF188, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItem);
}

uint64_t sub_1C228A7F8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C2274B30(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = MEMORY[0x1C87588E0](v5, a1);
        uint64_t v17 = v3;
        unint64_t v8 = *(void *)(v3 + 16);
        unint64_t v7 = *(void *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1C2274B30(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DFBA0);
        unint64_t v16 = &protocol witness table for HKOntologyLocalizedEducationContentSection;
        *(void *)&long long v14 = v6;
        *(void *)(v3 + 16) = v8 + 1;
        sub_1C21F44EC(&v14, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v9 = (void **)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v17 = v3;
        unint64_t v12 = *(void *)(v3 + 16);
        unint64_t v11 = *(void *)(v3 + 24);
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1C2274B30(v11 > 1, v12 + 1, 1);
          uint64_t v3 = v17;
        }
        uint64_t v15 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DFBA0);
        unint64_t v16 = &protocol witness table for HKOntologyLocalizedEducationContentSection;
        *(void *)&long long v14 = v13;
        *(void *)(v3 + 16) = v12 + 1;
        sub_1C21F44EC(&v14, v3 + 40 * v12 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C228A9EC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C2274B88(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = MEMORY[0x1C87588E0](v5, a1);
        uint64_t v17 = v3;
        unint64_t v8 = *(void *)(v3 + 16);
        unint64_t v7 = *(void *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1C2274B88(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = sub_1C21AB51C(0, &qword_1EBB6F978);
        unint64_t v16 = &protocol witness table for HKMedicalRecord;
        *(void *)&long long v14 = v6;
        *(void *)(v3 + 16) = v8 + 1;
        sub_1C21F44EC(&v14, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v9 = (void **)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v17 = v3;
        unint64_t v12 = *(void *)(v3 + 16);
        unint64_t v11 = *(void *)(v3 + 24);
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1C2274B88(v11 > 1, v12 + 1, 1);
          uint64_t v3 = v17;
        }
        uint64_t v15 = sub_1C21AB51C(0, &qword_1EBB6F978);
        unint64_t v16 = &protocol witness table for HKMedicalRecord;
        *(void *)&long long v14 = v13;
        *(void *)(v3 + 16) = v12 + 1;
        sub_1C21F44EC(&v14, v3 + 40 * v12 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C228ABE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C2274A34(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1C22667C4(v8, (uint64_t)v5);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1C2274A34(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_1C229882C(&qword_1EA2DFAF0, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
      sub_1C22667C4((uint64_t)v5, (uint64_t)boxed_opaque_existential_1);
      *(void *)(v7 + 16) = v11 + 1;
      sub_1C21F44EC(&v14, v7 + 40 * v11 + 32);
      sub_1C2266828((uint64_t)v5);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1C228ADA8(unint64_t a1)
{
  return sub_1C228B7C4(a1, (uint64_t (*)(void))type metadata accessor for ChartItem, &qword_1EA2DFB70, (void (*)(uint64_t))type metadata accessor for ChartItem);
}

uint64_t sub_1C228ADF0(unint64_t a1)
{
  return sub_1C228B7C4(a1, (uint64_t (*)(void))type metadata accessor for UDCRecentItem, &qword_1EA2DFB98, (void (*)(uint64_t))type metadata accessor for UDCRecentItem);
}

uint64_t sub_1C228AE38(unint64_t a1)
{
  return sub_1C228B7C4(a1, (uint64_t (*)(void))type metadata accessor for NavigationItem, &qword_1EA2DFB88, (void (*)(uint64_t))type metadata accessor for NavigationItem);
}

uint64_t sub_1C228AE80(unint64_t a1)
{
  return sub_1C228B7C4(a1, (uint64_t (*)(void))type metadata accessor for UDCAlphabeticalItem, &qword_1EA2DFB90, (void (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
}

uint64_t sub_1C228AEC8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C2274CF0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = MEMORY[0x1C87588E0](v5, a1);
        uint64_t v17 = v3;
        unint64_t v8 = *(void *)(v3 + 16);
        unint64_t v7 = *(void *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1C2274CF0(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DFBC8);
        uint64_t v16 = &protocol witness table for HKCodedValue;
        *(void *)&long long v14 = v6;
        *(void *)(v3 + 16) = v8 + 1;
        sub_1C21F44EC(&v14, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (void **)(a1 + 32);
      do
      {
        unint64_t v10 = *v9;
        uint64_t v17 = v3;
        unint64_t v12 = *(void *)(v3 + 16);
        unint64_t v11 = *(void *)(v3 + 24);
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1C2274CF0(v11 > 1, v12 + 1, 1);
          uint64_t v3 = v17;
        }
        uint64_t v15 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DFBC8);
        uint64_t v16 = &protocol witness table for HKCodedValue;
        *(void *)&long long v14 = v13;
        *(void *)(v3 + 16) = v12 + 1;
        sub_1C21F44EC(&v14, v3 + 40 * v12 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C228B0BC(unint64_t a1)
{
  return sub_1C228B7C4(a1, (uint64_t (*)(void))type metadata accessor for EducationItem, &qword_1EA2DFB80, (void (*)(uint64_t))type metadata accessor for EducationItem);
}

uint64_t sub_1C228B104(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C2274A34(0, v1, 0);
    uint64_t v2 = v21;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = v4[1];
      uint64_t v16 = *v4;
      uint64_t v17 = *(v4 - 2);
      uint64_t v7 = v4[3];
      uint64_t v8 = v4[5];
      uint64_t v14 = v4[4];
      uint64_t v15 = v4[2];
      char v13 = *((unsigned char *)v4 + 48);
      unint64_t v9 = *(void *)(v2 + 16);
      unint64_t v10 = *(void *)(v2 + 24);
      uint64_t v21 = v2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1)
      {
        sub_1C2274A34(v10 > 1, v9 + 1, 1);
        uint64_t v2 = v21;
      }
      uint64_t v19 = &type metadata for RecordTitleWithSubtitleItem;
      unint64_t v20 = sub_1C22989D8();
      uint64_t v11 = swift_allocObject();
      *(void *)&long long v18 = v11;
      *(void *)(v11 + 16) = v17;
      *(void *)(v11 + 24) = v5;
      *(void *)(v11 + 32) = v16;
      *(void *)(v11 + 40) = v6;
      *(void *)(v11 + 48) = v15;
      *(void *)(v11 + 56) = v7;
      *(void *)(v11 + 64) = v14;
      *(void *)(v11 + 72) = v8;
      *(unsigned char *)(v11 + 80) = v13;
      *(void *)(v2 + 16) = v9 + 1;
      sub_1C21F44EC(&v18, v2 + 40 * v9 + 32);
      v4 += 9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C228B270(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1C2274814(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C2274814(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C2274814(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_1C2206B9C(&v8, (_OWORD *)(v2 + 32 * v6 + 32));
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C228B394(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C2274F88(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = MEMORY[0x1C87588E0](v5, a1);
        uint64_t v17 = v3;
        unint64_t v8 = *(void *)(v3 + 16);
        unint64_t v7 = *(void *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1C2274F88(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DFB78);
        uint64_t v16 = &protocol witness table for HKDiagnosticTestResult;
        *(void *)&long long v14 = v6;
        *(void *)(v3 + 16) = v8 + 1;
        sub_1C21F44EC(&v14, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (void **)(a1 + 32);
      do
      {
        unint64_t v10 = *v9;
        uint64_t v17 = v3;
        unint64_t v12 = *(void *)(v3 + 16);
        unint64_t v11 = *(void *)(v3 + 24);
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1C2274F88(v11 > 1, v12 + 1, 1);
          uint64_t v3 = v17;
        }
        uint64_t v15 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DFB78);
        uint64_t v16 = &protocol witness table for HKDiagnosticTestResult;
        *(void *)&long long v14 = v13;
        *(void *)(v3 + 16) = v12 + 1;
        sub_1C21F44EC(&v14, v3 + 40 * v12 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C228B588(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C2274B88(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = MEMORY[0x1C87588E0](v5, a1);
        uint64_t v17 = v3;
        unint64_t v8 = *(void *)(v3 + 16);
        unint64_t v7 = *(void *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1C2274B88(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DFB78);
        uint64_t v16 = &protocol witness table for HKMedicalRecord;
        *(void *)&long long v14 = v6;
        *(void *)(v3 + 16) = v8 + 1;
        sub_1C21F44EC(&v14, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (void **)(a1 + 32);
      do
      {
        unint64_t v10 = *v9;
        uint64_t v17 = v3;
        unint64_t v12 = *(void *)(v3 + 16);
        unint64_t v11 = *(void *)(v3 + 24);
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1C2274B88(v11 > 1, v12 + 1, 1);
          uint64_t v3 = v17;
        }
        uint64_t v15 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DFB78);
        uint64_t v16 = &protocol witness table for HKMedicalRecord;
        *(void *)&long long v14 = v13;
        *(void *)(v3 + 16) = v12 + 1;
        sub_1C21F44EC(&v14, v3 + 40 * v12 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C228B77C(unint64_t a1)
{
  return sub_1C228B7C4(a1, (uint64_t (*)(void))type metadata accessor for WalletIntegrationItem, &qword_1EA2DFAD8, (void (*)(uint64_t))type metadata accessor for WalletIntegrationItem);
}

uint64_t sub_1C228B7C4(unint64_t a1, uint64_t (*a2)(void), unint64_t *a3, void (*a4)(uint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!v8) {
    return v9;
  }
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C2274A34(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = v22;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = 0;
      do
      {
        uint64_t v12 = MEMORY[0x1C87588E0](v11, a1);
        uint64_t v22 = v9;
        unint64_t v14 = *(void *)(v9 + 16);
        unint64_t v13 = *(void *)(v9 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_1C2274A34(v13 > 1, v14 + 1, 1);
          uint64_t v9 = v22;
        }
        ++v11;
        uint64_t v20 = a2(0);
        uint64_t v21 = sub_1C229882C(a3, a4);
        *(void *)&long long v19 = v12;
        *(void *)(v9 + 16) = v14 + 1;
        sub_1C21F44EC(&v19, v9 + 40 * v14 + 32);
      }
      while (v8 != v11);
    }
    else
    {
      uint64_t v15 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v16 = *v15;
        uint64_t v22 = v9;
        unint64_t v18 = *(void *)(v9 + 16);
        unint64_t v17 = *(void *)(v9 + 24);
        swift_retain();
        if (v18 >= v17 >> 1)
        {
          sub_1C2274A34(v17 > 1, v18 + 1, 1);
          uint64_t v9 = v22;
        }
        uint64_t v20 = a2(0);
        uint64_t v21 = sub_1C229882C(a3, a4);
        *(void *)&long long v19 = v16;
        *(void *)(v9 + 16) = v18 + 1;
        sub_1C21F44EC(&v19, v9 + 40 * v18 + 32);
        ++v15;
        --v8;
      }
      while (v8);
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t MedicalRecordChartabilityResult.configuration.getter()
{
  return swift_unknownObjectRetain();
}

id MedicalRecordChartabilityResult.masterDataSource.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_masterDataSource);
}

uint64_t MedicalRecordChartabilityResult.seriesDataSources.getter()
{
  return swift_bridgeObjectRetain();
}

void *MedicalRecordChartabilityResult.outOfRangeDataSource.getter()
{
  int64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource);
  id v2 = v1;
  return v1;
}

void *MedicalRecordChartabilityResult.noRangeDataSource.getter()
{
  int64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource);
  id v2 = v1;
  return v1;
}

uint64_t MedicalRecordChartabilityResult.latestChartableDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C21EA654(v1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_latestChartableDate, a1);
}

BOOL sub_1C228BD20()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource)
    || *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource))
  {
    return 1;
  }
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_seriesDataSources);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  return v3 > 1;
}

id MedicalRecordChartabilityResult.__allocating_init(configuration:masterDataSource:seriesDataSources:outOfRangeDataSource:noRangeDataSource:latestChartableDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v13 = (char *)objc_allocWithZone(v6);
  *(void *)&v13[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_configuration] = a1;
  *(void *)&v13[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_masterDataSource] = a2;
  *(void *)&v13[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_seriesDataSources] = a3;
  *(void *)&v13[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource] = a4;
  *(void *)&v13[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource] = a5;
  sub_1C21EA654(a6, (uint64_t)&v13[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_latestChartableDate]);
  v16.receiver = v13;
  v16.super_class = v6;
  id v14 = objc_msgSendSuper2(&v16, sel_init);
  sub_1C22178C0(a6);
  return v14;
}

id MedicalRecordChartabilityResult.init(configuration:masterDataSource:seriesDataSources:outOfRangeDataSource:noRangeDataSource:latestChartableDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_configuration] = a1;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_masterDataSource] = a2;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_seriesDataSources] = a3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource] = a4;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource] = a5;
  sub_1C21EA654(a6, (uint64_t)&v6[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_latestChartableDate]);
  v10.receiver = v6;
  v10.super_class = (Class)type metadata accessor for MedicalRecordChartabilityResult();
  id v8 = objc_msgSendSuper2(&v10, sel_init);
  sub_1C22178C0(a6);
  return v8;
}

uint64_t type metadata accessor for MedicalRecordChartabilityResult()
{
  uint64_t result = qword_1EA2DFAC0;
  if (!qword_1EA2DFAC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void MedicalRecordChartabilityResult.init()()
{
}

id MedicalRecordChartabilityResult.__deallocating_deinit()
{
  return sub_1C228F898(0, type metadata accessor for MedicalRecordChartabilityResult);
}

uint64_t sub_1C228C080(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C228C200(a1, a2, a3, a4, (unint64_t *)&qword_1EA2DE378, 0x1E4F2ADD8, (uint64_t)&protocol witness table for HKConcept);
}

uint64_t sub_1C228C1E4(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C228C200(a1, a2, a3, a4, (unint64_t *)&qword_1EBB6EFF0, 0x1E4F2B1B8, (uint64_t)&protocol witness table for HKMedicalUserDomainConcept);
}

uint64_t sub_1C228C200(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, uint64_t a7)
{
  v16[3] = sub_1C21AB51C(0, a5);
  v16[4] = a7;
  v16[0] = a1;
  id v13 = a1;
  uint64_t v14 = sub_1C228A9EC(a2);
  (*(void (**)(void *, uint64_t, uint64_t, void, uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v7) + 0x60))(v16, v14, 1, 0, a3, a4);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
}

void sub_1C228C414(void *a1, void (*a2)(char *, uint64_t), unint64_t a3, int a4, void (*a5)(id), uint64_t a6)
{
  LODWORD(v172) = a4;
  unint64_t v173 = a3;
  sub_1C2298A7C(0, (unint64_t *)&qword_1EBB6F550, 255, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v145 - v11;
  uint64_t v13 = sub_1C254CAD0();
  uint64_t v162 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v164 = (uint64_t)&v145 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C254E560();
  unint64_t v171 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  v170 = (char *)&v145 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  long long v19 = (char *)&v145 - v18;
  sub_1C254E4F0();
  sub_1C21F4424((uint64_t)a1, (uint64_t)&v180);
  uint64_t v20 = sub_1C254E550();
  os_log_type_t v21 = sub_1C254FA10();
  BOOL v22 = os_log_type_enabled(v20, v21);
  v169 = a5;
  uint64_t v168 = a6;
  uint64_t v163 = v13;
  v161 = v12;
  if (v22)
  {
    uint64_t v23 = swift_slowAlloc();
    v165 = a2;
    double v24 = (uint8_t *)v23;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v179 = v25;
    uint64_t v166 = (uint64_t)a1;
    *(_DWORD *)double v24 = 136446210;
    v160 = (char **)(v24 + 4);
    sub_1C21F4424((uint64_t)&v180, (uint64_t)&v176);
    sub_1C21F4424((uint64_t)&v176, (uint64_t)&v175);
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DFA98);
    sub_1C25508F0();
    id v26 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v27 = sub_1C254F4F0();
    uint64_t v28 = v15;
    unint64_t v30 = v29;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v176);
    *(void *)&long long v176 = sub_1C21AD354(v27, v30, &v179);
    a1 = (void *)v166;
    sub_1C2550120();
    uint64_t v15 = v28;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v180);
    _os_log_impl(&dword_1C21A1000, v20, v21, "Determining chartability for concept %{public}s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v25, -1, -1);
    double v31 = v24;
    a2 = v165;
    MEMORY[0x1C875A0B0](v31, -1, -1);

    double v32 = *(void (**)(char *, uint64_t))(v171 + 8);
    v32(v19, v28);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v180);

    double v32 = *(void (**)(char *, uint64_t))(v171 + 8);
    v32(v19, v15);
  }
  if (v172) {
    int64_t v33 = 1;
  }
  else {
    int64_t v33 = v173;
  }
  uint64_t v34 = a1[3];
  uint64_t v35 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v34);
  char v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
  v167 = (char **)v15;
  if (v36) {
    id v37 = (objc_class *)type metadata accessor for BloodPressureChartConfiguration();
  }
  else {
    id v37 = (objc_class *)type metadata accessor for SingleValueChartConfiguration();
  }
  unsigned __int8 v38 = (char **)objc_msgSend(objc_allocWithZone(v37), sel_init);
  unint64_t v39 = 0;
  int64_t v40 = (int64_t)sub_1C2297E2C((uint64_t)a2, v33);
  v165 = v32;
  uint64_t v166 = (uint64_t)a1;
  v160 = v38;
  type metadata accessor for MedicalRecordUnitCollector();
  unint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = MEMORY[0x1E4FBC868];
  if ((unint64_t)v40 >> 62)
  {
    if (v40 < 0) {
      unsigned __int8 v38 = (char **)v40;
    }
    else {
      unsigned __int8 v38 = (char **)(v40 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1C2550620();
    if (!v42) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v42 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v42) {
      goto LABEL_22;
    }
  }
  if (v42 < 1)
  {
LABEL_148:
    __break(1u);
    goto LABEL_149;
  }
  uint64_t v43 = 0;
  a2 = (void (*)(char *, uint64_t))(v40 & 0xC000000000000001);
  do
  {
    if (a2) {
      MEMORY[0x1C87588E0](v43, v40);
    }
    else {
      swift_retain();
    }
    ++v43;
    unint64_t v44 = sub_1C228E63C();
    sub_1C24AA1F8(v44);
    swift_release();
    swift_bridgeObjectRelease();
  }
  while (v42 != v43);
LABEL_22:
  swift_bridgeObjectRelease();
  unint64_t v39 = 0;
  unsigned __int8 v38 = (char **)(id)sub_1C24AA8A8();
  unint64_t v45 = sub_1C22976C4(v40, v38);

  unint64_t v173 = v45;
  unint64_t v156 = v45 >> 62;
  if (!(v45 >> 62))
  {
    uint64_t v46 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v47 = v46;
    goto LABEL_24;
  }
LABEL_149:
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_1C2550620();
LABEL_24:
  unint64_t v158 = inited;
  uint64_t v172 = v47;
  unint64_t v157 = v39;
  v159 = v38;
  if (!v47)
  {
    int64_t v49 = 0;
LABEL_37:
    swift_bridgeObjectRelease();
    if (v49 < v33)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C22982E4();
      CGRect v56 = (void *)swift_allocError();
      *(void *)uint64_t v57 = v49;
      *(unsigned char *)(v57 + 8) = 0;
      swift_willThrow();

      swift_setDeallocating();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v58 = v166;
      CGRect v59 = v170;
      CGRect v60 = v165;
      sub_1C254E4F0();
      sub_1C21F4424(v58, (uint64_t)&v180);
      id v61 = v56;
      id v62 = v56;
      CGRect v63 = sub_1C254E550();
      os_log_type_t v64 = sub_1C254FA20();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        uint64_t v179 = v66;
        *(_DWORD *)uint64_t v65 = 136446466;
        v165 = v60;
        sub_1C21F4424((uint64_t)&v180, (uint64_t)&v176);
        sub_1C21F4424((uint64_t)&v176, (uint64_t)&v175);
        sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DFA98);
        sub_1C25508F0();
        id v67 = (id)HKSensitiveLogItem();
        swift_unknownObjectRelease();
        sub_1C25501E0();
        swift_unknownObjectRelease();
        uint64_t v68 = sub_1C254F4F0();
        unint64_t v70 = v69;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v176);
        *(void *)&long long v176 = sub_1C21AD354(v68, v70, &v179);
        sub_1C2550120();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v180);
        *(_WORD *)(v65 + 12) = 2082;
        *(void *)&long long v176 = v56;
        id v71 = v56;
        sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
        uint64_t v72 = sub_1C254F4F0();
        *(void *)&long long v176 = sub_1C21AD354(v72, v73, &v179);
        sub_1C2550120();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C21A1000, v63, v64, "Cannot chart concept: %{public}s because: %{public}s", (uint8_t *)v65, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v66, -1, -1);
        MEMORY[0x1C875A0B0](v65, -1, -1);

        v165(v170, (uint64_t)v167);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v180);

        v60(v59, (uint64_t)v167);
      }
      v169(0);

      return;
    }
    a2 = (void (*)(char *, uint64_t))v166;
    if (v42)
    {
      if ((v40 & 0xC000000000000001) != 0) {
        goto LABEL_153;
      }
      if (*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v74 = *(void *)(v40 + 32);
        swift_retain();
        goto LABEL_46;
      }
LABEL_155:
      __break(1u);
      goto LABEL_156;
    }
    swift_bridgeObjectRelease();
    int64_t v40 = 0;
    v75 = v160;
LABEL_48:
    sub_1C21F4424((uint64_t)a2, (uint64_t)&v180);
    id v77 = objc_msgSend(v75, sel_dataTransformer);
    Class v149 = (Class)type metadata accessor for MedicalRecordChartDataSource();
    id v78 = objc_allocWithZone(v149);
    id v79 = (id)v40;
    v80 = v159;
    v150 = (void *)v40;
    v159 = sub_1C2398E4C((uint64_t)&v180, (uint64_t)v77, v80, (void *)v40, 1, 0);
    swift_unknownObjectRelease();
    id v152 = v80;

    id v153 = v79;
    unint64_t v39 = MEMORY[0x1E4FBC860];
    unint64_t v180 = MEMORY[0x1E4FBC860];
    if (v172)
    {
      if (v172 < 1)
      {
        __break(1u);
        goto LABEL_155;
      }
      unint64_t v81 = v173 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      uint64_t v82 = 0;
      do
      {
        if (v81) {
          v83 = (char *)MEMORY[0x1C87588E0](v82, v173);
        }
        else {
          v83 = (char *)*(id *)(v173 + 8 * v82 + 32);
        }
        v84 = v83;
        ++v82;
        unint64_t v85 = *(void *)&v83[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
        swift_bridgeObjectRetain();

        sub_1C2272650(v85);
      }
      while (v172 != v82);
      swift_bridgeObjectRelease();
      unint64_t v39 = v180;
      v75 = v160;
    }
    (*(void (**)(unint64_t))((*MEMORY[0x1E4FBC8C8] & *v159) + 0x168))(v39);
    swift_bridgeObjectRelease();
    unsigned __int8 v86 = objc_msgSend(v75, sel_shouldShowOutOfRangeOverlay);
    sub_1C21F4424((uint64_t)a2, (uint64_t)&v180);
    if ((v86 & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v180);
LABEL_93:
      v100 = 0;
      v155 = 0;
      goto LABEL_94;
    }
    uint64_t v87 = v181;
    uint64_t v88 = v182;
    __swift_project_boxed_opaque_existential_1Tm(&v180, v181);
    char v89 = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 24))(v87, v88);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v180);
    if (v89) {
      goto LABEL_93;
    }
    unint64_t v39 = MEMORY[0x1E4FBC860];
    *(void *)&long long v176 = MEMORY[0x1E4FBC860];
    if (!v172) {
      goto LABEL_100;
    }
    id v151 = (id)(v173 & 0xC000000000000001);
    v148 = (char *)(v173 + 32);
    swift_bridgeObjectRetain();
    v90 = 0;
    v75 = &selRef_setActionTitle_;
    while (1)
    {
      if (v151)
      {
        v91 = (char *)MEMORY[0x1C87588E0](v90, v173);
        BOOL v55 = __OFADD__(v90, 1);
        v92 = (void *)((char *)v90 + 1);
        if (v55) {
          goto LABEL_151;
        }
      }
      else
      {
        v91 = (char *)*(id *)&v148[8 * (void)v90];
        BOOL v55 = __OFADD__(v90, 1);
        v92 = (void *)((char *)v90 + 1);
        if (v55) {
          goto LABEL_151;
        }
      }
      v155 = v92;
      id v154 = v91;
      unint64_t v93 = *(void *)&v91[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
      unint64_t v175 = v39;
      if (v93 >> 62)
      {
        swift_bridgeObjectRetain();
        unsigned __int8 v38 = (char **)sub_1C2550620();
        if (v38)
        {
LABEL_69:
          unint64_t v39 = 0;
          unint64_t v171 = v93 & 0xC000000000000001;
          uint64_t v166 = v93 & 0xFFFFFFFFFFFFFF8;
          v165 = (void (*)(char *, uint64_t))(v93 + 32);
          v170 = (char *)v93;
          v167 = v38;
          while (1)
          {
            if (v171)
            {
              v94 = (void (*)(char *, uint64_t))MEMORY[0x1C87588E0](v39, v93);
            }
            else
            {
              if (v39 >= *(void *)(v166 + 16)) {
                goto LABEL_146;
              }
              v94 = (void (*)(char *, uint64_t))*((id *)v165 + v39);
            }
            a2 = v94;
            BOOL v55 = __OFADD__(v39++, 1);
            if (v55)
            {
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
              goto LABEL_148;
            }
            id v95 = objc_msgSend(v94, sel_quantities);
            sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E21B0);
            unint64_t v96 = sub_1C254F710();

            if (v96 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v97 = sub_1C2550620();
              if (v97)
              {
LABEL_79:
                int64_t v33 = v96 & 0xC000000000000001;
                unint64_t inited = 4;
                while (1)
                {
                  id v98 = v33 ? (id)MEMORY[0x1C87588E0](inited - 4, v96) : *(id *)(v96 + 8 * inited);
                  int64_t v40 = (int64_t)v98;
                  uint64_t v42 = inited - 3;
                  if (__OFADD__(inited - 4, 1)) {
                    break;
                  }
                  unsigned int v99 = objc_msgSend(v98, sel_isInRange);

                  if (!v99)
                  {
                    swift_bridgeObjectRelease_n();
                    sub_1C2550460();
                    sub_1C25504A0();
                    sub_1C25504B0();
                    sub_1C2550470();
                    goto LABEL_71;
                  }
                  ++inited;
                  if (v42 == v97) {
                    goto LABEL_70;
                  }
                }
                __break(1u);
LABEL_100:
                unint64_t v121 = v39;
LABEL_102:
                uint64_t v178 = 0;
                long long v176 = 0u;
                long long v177 = 0u;
                id v122 = objc_msgSend(v75, sel_dataTransformer);
                id v123 = objc_allocWithZone(v149);
                a2 = (void (*)(char *, uint64_t))v152;
                int64_t v33 = (int64_t)v153;
                v124 = sub_1C2398E4C((uint64_t)&v176, (uint64_t)v122, a2, v150, 1, 1);
                swift_unknownObjectRelease();

                v125 = *(void (**)(unint64_t))((*MEMORY[0x1E4FBC8C8] & *v124) + 0x168);
                v155 = v124;
                v126 = v124;
                v125(v39);

                swift_bridgeObjectRelease();
                *(void *)&long long v176 = v121;
                unint64_t v39 = v121;
                if (!v172) {
                  goto LABEL_141;
                }
                int64_t v145 = v33;
                v146 = a2;
                v148 = (char *)(v173 & 0xC000000000000001);
                v147 = (char *)(v173 + 32);
                swift_bridgeObjectRetain();
                id v127 = 0;
                uint64_t v42 = (uint64_t)&selRef_setActionTitle_;
                while (1)
                {
                  v128 = v148
                       ? (char *)MEMORY[0x1C87588E0](v127, v173)
                       : (char *)*(id *)&v147[8 * (void)v127];
                  BOOL v55 = __OFADD__(v127, 1);
                  v129 = (char *)v127 + 1;
                  if (v55) {
                    break;
                  }
                  id v154 = v129;
                  id v151 = v128;
                  unint64_t v130 = *(void *)&v128[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
                  unint64_t v175 = v39;
                  if (v130 >> 62)
                  {
                    swift_bridgeObjectRetain();
                    unsigned __int8 v38 = (char **)sub_1C2550620();
                    if (v38)
                    {
LABEL_112:
                      unint64_t v39 = 0;
                      unint64_t v171 = v130 & 0xC000000000000001;
                      uint64_t v166 = v130 & 0xFFFFFFFFFFFFFF8;
                      v165 = (void (*)(char *, uint64_t))(v130 + 32);
                      v170 = (char *)v130;
                      v167 = v38;
                      while (1)
                      {
                        if (v171)
                        {
                          id v131 = (id)MEMORY[0x1C87588E0](v39, v130);
                        }
                        else
                        {
                          if (v39 >= *(void *)(v166 + 16)) {
                            goto LABEL_147;
                          }
                          id v131 = *((id *)v165 + v39);
                        }
                        v132 = v131;
                        BOOL v55 = __OFADD__(v39++, 1);
                        if (v55) {
                          goto LABEL_145;
                        }
                        int64_t v40 = (int64_t)objc_msgSend(v131, sel_quantities);
                        sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E21B0);
                        uint64_t v133 = sub_1C254F710();

                        if ((unint64_t)v133 >> 62)
                        {
                          if (v133 < 0) {
                            int64_t v40 = v133;
                          }
                          else {
                            int64_t v40 = v133 & 0xFFFFFFFFFFFFFF8;
                          }
                          swift_bridgeObjectRetain();
                          a2 = (void (*)(char *, uint64_t))sub_1C2550620();
                          if (a2)
                          {
LABEL_122:
                            unint64_t inited = v133 & 0xC000000000000001;
                            uint64_t v134 = 4;
                            while (1)
                            {
                              id v135 = inited
                                   ? (id)MEMORY[0x1C87588E0](v134 - 4, v133)
                                   : *(id *)(v133 + 8 * v134);
                              int64_t v40 = (int64_t)v135;
                              v136 = (void (*)(char *, uint64_t))(v134 - 3);
                              if (__OFADD__(v134 - 4, 1)) {
                                break;
                              }
                              int64_t v33 = (int64_t)objc_msgSend(v135, sel_hasRange);

                              if (!v33)
                              {
                                swift_bridgeObjectRelease_n();
                                sub_1C2550460();
                                int64_t v40 = *(void *)(v175 + 16);
                                sub_1C25504A0();
                                sub_1C25504B0();
                                sub_1C2550470();
                                goto LABEL_114;
                              }
                              ++v134;
                              if (v136 == a2) {
                                goto LABEL_113;
                              }
                            }
                            __break(1u);
                            goto LABEL_139;
                          }
                        }
                        else
                        {
                          a2 = *(void (**)(char *, uint64_t))((v133 & 0xFFFFFFFFFFFFFF8) + 0x10);
                          swift_bridgeObjectRetain();
                          if (a2) {
                            goto LABEL_122;
                          }
                        }
LABEL_113:
                        swift_bridgeObjectRelease_n();

LABEL_114:
                        unsigned __int8 v38 = v167;
                        unint64_t v130 = (unint64_t)v170;
                        if ((char **)v39 == v167)
                        {
                          swift_bridgeObjectRelease();
                          unint64_t v39 = v175;
                          goto LABEL_105;
                        }
                      }
                    }
                  }
                  else
                  {
                    unsigned __int8 v38 = *(char ***)((v130 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    swift_bridgeObjectRetain();
                    if (v38) {
                      goto LABEL_112;
                    }
                  }
                  swift_bridgeObjectRelease();
LABEL_105:

                  sub_1C2272650(v39);
                  id v127 = v154;
                  unint64_t v39 = MEMORY[0x1E4FBC860];
                  if (v154 == (id)v172) {
                    goto LABEL_140;
                  }
                }
LABEL_152:
                __break(1u);
LABEL_153:
                uint64_t v74 = MEMORY[0x1C87588E0](0, v40);
LABEL_46:
                v75 = v160;
                swift_bridgeObjectRelease();
                int64_t v40 = *(void *)(v74 + 56);
                id v76 = (id)v40;
                swift_release();
                goto LABEL_48;
              }
            }
            else
            {
              uint64_t v97 = *(void *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v97) {
                goto LABEL_79;
              }
            }
LABEL_70:
            swift_bridgeObjectRelease_n();

LABEL_71:
            unsigned __int8 v38 = v167;
            unint64_t v93 = (unint64_t)v170;
            if ((char **)v39 == v167)
            {
              swift_bridgeObjectRelease();
              unint64_t v39 = v175;
              goto LABEL_61;
            }
          }
        }
      }
      else
      {
        unsigned __int8 v38 = *(char ***)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v38) {
          goto LABEL_69;
        }
      }
      swift_bridgeObjectRelease();
LABEL_61:

      sub_1C2272650(v39);
      v90 = v155;
      unint64_t v39 = MEMORY[0x1E4FBC860];
      if (v155 == (void *)v172)
      {
        swift_bridgeObjectRelease();
        unint64_t v121 = v39;
        unint64_t v39 = v176;
        v75 = v160;
        goto LABEL_102;
      }
    }
  }
  double v48 = (id *)v173;
  if (v47 < 1)
  {
    __break(1u);
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
  unint64_t v39 = 0;
  int64_t v49 = 0;
  unint64_t v50 = v173 & 0xC000000000000001;
  unint64_t inited = (unint64_t)&qword_1EA2DF000;
  while (1)
  {
    objc_super v51 = v50 ? (char *)MEMORY[0x1C87588E0](v39, v48) : (char *)v48[v39 + 4];
    CGRect v52 = v51;
    unint64_t v53 = *(void *)&v51[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
    if (v53 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_1C2550620();

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v54 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    BOOL v55 = __OFADD__(v49, v54);
    v49 += v54;
    double v48 = (id *)v173;
    if (v55) {
      break;
    }
    if (v172 == ++v39) {
      goto LABEL_37;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  swift_bridgeObjectRelease();
  unint64_t v39 = v176;
  a2 = v146;
  int64_t v33 = v145;
LABEL_141:
  if (v39 >> 62)
  {
LABEL_156:
    swift_bridgeObjectRetain();
    uint64_t v144 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v144) {
      goto LABEL_143;
    }
LABEL_157:
    swift_bridgeObjectRelease();
    v100 = 0;
    goto LABEL_94;
  }
  if (!*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_157;
  }
LABEL_143:
  uint64_t v178 = 0;
  long long v176 = 0u;
  long long v177 = 0u;
  unint64_t v137 = v39;
  id v138 = objc_msgSend(v160, sel_dataTransformer);
  id v139 = objc_allocWithZone(v149);
  v140 = a2;
  id v141 = (id)v33;
  v100 = sub_1C2398E4C((uint64_t)&v176, (uint64_t)v138, v140, v150, 1, 2);
  swift_unknownObjectRelease();

  v142 = *(void (**)(unint64_t))((*MEMORY[0x1E4FBC8C8] & *v100) + 0x168);
  v143 = v100;
  v142(v137);

  swift_bridgeObjectRelease();
LABEL_94:
  unint64_t v101 = v156;
  sub_1C254C9D0();
  if (v101)
  {
    unint64_t v103 = swift_bridgeObjectRetain();
    unint64_t v102 = (unint64_t)sub_1C2290964(v103, (void (*)(void *, uint64_t, unint64_t))sub_1C2295B3C);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v102 = v173 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  unint64_t v104 = v157;
  *(void *)&long long v176 = v102;
  sub_1C228F92C((uint64_t *)&v176, (uint64_t (*)(uint64_t))sub_1C23F36FC, sub_1C2290A7C);
  if (v104)
  {
    swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v105 = v176;
    id v106 = v152;
    unint64_t v173 = (unint64_t)v106;
    v107 = v160;
    swift_unknownObjectRetain();
    uint64_t v108 = v164;
    uint64_t v109 = sub_1C22973B8(v105, v107, v106, v164);
    swift_release();
    swift_unknownObjectRelease();

    uint64_t v110 = v162;
    uint64_t v111 = (uint64_t)v161;
    uint64_t v112 = v163;
    (*(void (**)(char *, uint64_t, uint64_t))(v162 + 16))(v161, v108, v163);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v110 + 56))(v111, 0, 1, v112);
    v113 = (objc_class *)type metadata accessor for MedicalRecordChartabilityResult();
    v114 = (char *)objc_allocWithZone(v113);
    *(void *)&v114[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_configuration] = v107;
    id v115 = v159;
    *(void *)&v114[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_masterDataSource] = v159;
    *(void *)&v114[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_seriesDataSources] = v109;
    v116 = v155;
    *(void *)&v114[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource] = v155;
    *(void *)&v114[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource] = v100;
    sub_1C21EA654(v111, (uint64_t)&v114[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_latestChartableDate]);
    v174.receiver = v114;
    v174.super_class = v113;
    swift_unknownObjectRetain();
    id v117 = v115;
    id v118 = v116;
    v119 = v100;
    id v120 = objc_msgSendSuper2(&v174, sel_init);
    sub_1C22178C0(v111);
    v169(v120);

    swift_release();
    swift_unknownObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v108, v112);
  }
}

uint64_t sub_1C228DCC4@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v35 = a4;
  id v37 = a5;
  sub_1C2298A7C(0, (unint64_t *)&qword_1EBB6F550, 255, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = sub_1C254CAD0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  char v36 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v34 = (char *)&v33 - v15;
  uint64_t v16 = *a1;
  sub_1C21F4424(*a1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartDefining, (uint64_t)v38);
  id v17 = objc_msgSend(a2, sel_dataTransformer);
  uint64_t v18 = *(void **)(v16 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_preferredColors);
  id v19 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordChartDataSource());
  id v20 = v18;
  id v21 = a3;
  BOOL v22 = sub_1C2398E4C((uint64_t)v38, (uint64_t)v17, v21, v18, 1, 0);
  swift_unknownObjectRelease();

  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v22) + 0x168))(*(void *)(v16
                                                                                       + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets));
  uint64_t v23 = (id *)((char *)v22 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange);
  swift_beginAccess();
  id v24 = objc_msgSend(*v23, sel_maxValue);
  if (!v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_6;
  }
  uint64_t v25 = v24;
  id v26 = v36;
  sub_1C254CA80();

  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v27(v10, v26, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_6:
    uint64_t result = sub_1C22178C0((uint64_t)v10);
    goto LABEL_7;
  }
  uint64_t v28 = v34;
  v27(v34, v10, v11);
  uint64_t v29 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v26, v35, v11);
  char v30 = sub_1C254CA60();
  double v31 = *(void (**)(char *, uint64_t))(v12 + 8);
  v31(v26, v11);
  if (v30) {
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 40))(v29, v28, v11);
  }
  else {
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v31)(v28, v11);
  }
LABEL_7:
  void *v37 = v22;
  return result;
}

uint64_t *MedicalRecordChartableSeriesCollector.__allocating_init(chartDefining:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v6 = sub_1C2298338(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

id MedicalRecordChartabilityDeterminer.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordChartabilityDeterminer();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MedicalRecordChartabilityDeterminer.__deallocating_deinit(uint64_t a1)
{
  return sub_1C228F898(a1, type metadata accessor for MedicalRecordChartabilityDeterminer);
}

uint64_t *MedicalRecordChartableSeriesCollector.init(chartDefining:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  uint64_t v9 = sub_1C22972A4((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v9;
}

void sub_1C228E280(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 32))(v8, v9);
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    swift_beginAccess();
    id v12 = v11;
    MEMORY[0x1C8757C00]();
    if (*(void *)((*(void *)(v1 + 64) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v1 + 64) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
      sub_1C254F760();
    sub_1C254F790();
    sub_1C254F730();
    swift_endAccess();
    uint64_t v13 = *(void **)(v1 + 56);
    sub_1C21F4424((uint64_t)a1, (uint64_t)v33);
    id v14 = v13;
    if (!v13)
    {
      uint64_t v15 = v34;
      uint64_t v16 = v35;
      __swift_project_boxed_opaque_existential_1Tm(v33, v34);
      id v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
      id v14 = HKMedicalRecordCategoryType.categoryColors()(v17);
    }
    id v18 = v13;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
    id v19 = *(void **)(v2 + 56);
    *(void *)(v2 + 56) = v14;
  }
  else
  {
    sub_1C254E4F0();
    sub_1C21F4424((uint64_t)a1, (uint64_t)v33);
    id v20 = sub_1C254E550();
    os_log_type_t v21 = sub_1C254FA00();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v29 = v5;
      BOOL v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v32 = v23;
      *(_DWORD *)BOOL v22 = 136446210;
      uint64_t v28 = v22 + 4;
      sub_1C21F4424((uint64_t)v33, (uint64_t)v31);
      sub_1C21F4424((uint64_t)v31, (uint64_t)v30);
      sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DF840);
      sub_1C25508F0();
      id v24 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v25 = sub_1C254F4F0();
      unint64_t v27 = v26;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
      v31[0] = sub_1C21AD354(v25, v27, &v32);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
      _os_log_impl(&dword_1C21A1000, v20, v21, "There are no chartable coded quantities in record %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v23, -1, -1);
      MEMORY[0x1C875A0B0](v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v4);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
}

uint64_t sub_1C228E63C()
{
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 64);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  if (v1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; uint64_t v2 = sub_1C2550620())
  {
    uint64_t v3 = 0;
    unint64_t v19 = v1;
    unint64_t v20 = v1 & 0xC000000000000001;
    uint64_t v17 = v1 + 32;
    uint64_t v18 = v2;
    while (1)
    {
      id v5 = v20 ? (id)MEMORY[0x1C87588E0](v3, v1) : *(id *)(v17 + 8 * v3);
      uint64_t v6 = v5;
      if (__OFADD__(v3++, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_quantities);
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E21B0);
      unint64_t v9 = sub_1C254F710();

      if (v9 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = sub_1C2550620();
        swift_bridgeObjectRelease();
        if (!v10)
        {
LABEL_19:

          swift_bridgeObjectRelease();
          unint64_t v4 = MEMORY[0x1E4FBC860];
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v10) {
          goto LABEL_19;
        }
      }
      unint64_t v21 = MEMORY[0x1E4FBC860];
      sub_1C2550490();
      if (v10 < 0) {
        goto LABEL_22;
      }
      uint64_t v11 = 0;
      do
      {
        if ((v9 & 0xC000000000000001) != 0) {
          id v12 = (id)MEMORY[0x1C87588E0](v11, v9);
        }
        else {
          id v12 = *(id *)(v9 + 8 * v11 + 32);
        }
        uint64_t v13 = v12;
        ++v11;
        id v14 = objc_msgSend(v12, sel_quantity, v17);
        id v15 = objc_msgSend(v14, sel__unit);

        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
      }
      while (v10 != v11);
      unint64_t v4 = v21;

      swift_bridgeObjectRelease();
      uint64_t v2 = v18;
      unint64_t v1 = v19;
LABEL_5:
      sub_1C2272638(v4);
      if (v3 == v2)
      {
        swift_bridgeObjectRelease_n();
        return v22;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain_n();
  }
  swift_bridgeObjectRelease_n();
  return MEMORY[0x1E4FBC860];
}

id sub_1C228E8F4(void *a1)
{
  swift_beginAccess();
  id v3 = a1;
  unint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_1C2297528(v4, (uint64_t)v3);
  swift_bridgeObjectRelease();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
LABEL_5:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1C21F4424(v1 + 16, (uint64_t)v14);
  uint64_t v6 = *(void **)(v1 + 56);
  unint64_t v7 = (objc_class *)type metadata accessor for MedicalRecordChartableSeries();
  id v8 = (char *)objc_allocWithZone(v7);
  sub_1C21F4424((uint64_t)v14, (uint64_t)&v8[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartDefining]);
  *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets] = v5;
  *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_preferredColors] = v6;
  v13.receiver = v8;
  v13.super_class = v7;
  id v9 = v6;
  id v10 = objc_msgSendSuper2(&v13, sel_init);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v10;
}

id sub_1C228EA38@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  v40[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *a1;
  v40[0] = 0;
  id v11 = objc_msgSend(v10, sel_chartableCodedQuantitySetConvertedToUnit_error_, a2, v40);
  id v12 = v40[0];
  if (v11)
  {
    *a3 = v11;
    return v12;
  }
  else
  {
    id v14 = v40[0];
    id v15 = (void *)sub_1C254C820();

    swift_willThrow();
    sub_1C254E4F0();
    id v16 = v10;
    id v17 = v15;
    id v18 = v16;
    id v19 = v15;
    unint64_t v20 = sub_1C254E550();
    os_log_type_t v21 = sub_1C254FA00();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v33 = (void *)swift_slowAlloc();
      char v36 = (void *)swift_slowAlloc();
      uint64_t v39 = (uint64_t)v18;
      v40[0] = v36;
      *(_DWORD *)uint64_t v23 = 138543618;
      uint64_t v38 = v6;
      os_log_t v35 = v20;
      int v34 = v22;
      id v24 = v18;
      uint64_t v37 = v7;
      id v25 = v24;
      sub_1C2550120();
      unint64_t v26 = v33;
      void *v33 = v18;

      *(_WORD *)(v23 + 12) = 2082;
      uint64_t v39 = (uint64_t)v15;
      id v27 = v15;
      sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
      uint64_t v28 = sub_1C254F4F0();
      uint64_t v39 = sub_1C21AD354(v28, v29, (uint64_t *)v40);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      os_log_t v30 = v35;
      _os_log_impl(&dword_1C21A1000, v35, (os_log_type_t)v34, "Unable to convert chartable coded quantity set %{public}@: %{public}s", (uint8_t *)v23, 0x16u);
      sub_1C22988D8(0, (unint64_t *)&qword_1EBB6F230, (unint64_t *)&qword_1EBB6F510, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v26, -1, -1);
      double v31 = v36;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v31, -1, -1);
      MEMORY[0x1C875A0B0](v23, -1, -1);

      id result = (id)(*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v9, v38);
    }
    else
    {

      id result = (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    *a3 = 0;
  }
  return result;
}

id MedicalRecordChartableSeries.__allocating_init(chartDefining:chartableQuantities:unit:preferredColors:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v9 = (char *)objc_allocWithZone(v4);
  sub_1C21F4424(a1, (uint64_t)&v9[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartDefining]);
  *(void *)&v9[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets] = a2;
  *(void *)&v9[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_preferredColors] = a4;
  v12.receiver = v9;
  v12.super_class = v4;
  id v10 = objc_msgSendSuper2(&v12, sel_init);

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v10;
}

uint64_t MedicalRecordChartableSeriesCollector.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordChartableSeriesCollector.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C228EF40@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets);
  if ((v3 & 0x8000000000000000) != 0 || (v3 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v4 = (uint64_t)sub_1C2290964(v3, (void (*)(void *, uint64_t, unint64_t))sub_1C2295D80);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  uint64_t v17 = v4;
  sub_1C228F92C(&v17, (uint64_t (*)(uint64_t))sub_1C23F5310, sub_1C2291EA0);
  swift_bridgeObjectRelease();
  uint64_t v5 = v17;
  if (v17 < 0 || (v17 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1C2550620();
    swift_release();
    if (v14) {
      goto LABEL_7;
    }
LABEL_13:
    swift_release();
    uint64_t v15 = sub_1C254CAD0();
    id v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v11 = v15;
    uint64_t v12 = a1;
    uint64_t v13 = 1;
    goto LABEL_14;
  }
  if (!*(void *)(v17 + 16)) {
    goto LABEL_13;
  }
LABEL_7:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x1C87588E0](0, v5);
  }
  else
  {
    if (!*(void *)(v5 + 16))
    {
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    id v6 = *(id *)(v5 + 32);
  }
  uint64_t v7 = v6;
  swift_release();
  id v8 = objc_msgSend(v7, sel_date);

  sub_1C254CA80();
  uint64_t v9 = sub_1C254CAD0();
  id v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  uint64_t v11 = v9;
  uint64_t v12 = a1;
  uint64_t v13 = 0;
LABEL_14:
  return v10(v12, v13, 1, v11);
}

id MedicalRecordChartableSeries.init(chartDefining:chartableQuantities:unit:preferredColors:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1C21F4424(a1, (uint64_t)&v4[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartDefining]);
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets] = a2;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_preferredColors] = a4;
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for MedicalRecordChartableSeries();
  id v9 = objc_msgSendSuper2(&v11, sel_init);

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v9;
}

void *sub_1C228F1D4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  sub_1C21F4424(v3 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartDefining, (uint64_t)v12);
  id v6 = objc_msgSend(a1, sel_dataTransformer);
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_preferredColors);
  objc_allocWithZone((Class)type metadata accessor for MedicalRecordChartDataSource());
  id v8 = v7;
  id v9 = a2;
  id v10 = sub_1C2398E4C((uint64_t)v12, (uint64_t)v6, v9, v7, 1, 0);
  swift_unknownObjectRelease();

  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v10) + 0x168))(*(void *)(v3
                                                                                       + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets));
  return v10;
}

uint64_t sub_1C228F304()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets);
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (v1 >> 62) {
    goto LABEL_28;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1C2550620())
  {
    unint64_t v3 = 0;
    uint64_t v19 = v2;
    unint64_t v20 = v1 & 0xC000000000000001;
    uint64_t v17 = v1 & 0xFFFFFFFFFFFFFF8;
    unint64_t v18 = v1;
    unint64_t v16 = v1 + 32;
    while (1)
    {
      if (v20)
      {
        id v4 = (id)MEMORY[0x1C87588E0](v3, v18);
      }
      else
      {
        if (v3 >= *(void *)(v17 + 16)) {
          goto LABEL_27;
        }
        id v4 = *(id *)(v16 + 8 * v3);
      }
      uint64_t v5 = v4;
      if (__OFADD__(v3++, 1)) {
        break;
      }
      id v7 = objc_msgSend(v4, sel_quantities);
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E21B0);
      unint64_t v8 = sub_1C254F710();

      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_1C2550620();
        if (v9)
        {
LABEL_13:
          unint64_t v1 = v8 & 0xC000000000000001;
          uint64_t v10 = 4;
          while (1)
          {
            id v11 = v1 ? (id)MEMORY[0x1C87588E0](v10 - 4, v8) : *(id *)(v8 + 8 * v10);
            uint64_t v12 = v11;
            uint64_t v13 = v10 - 3;
            if (__OFADD__(v10 - 4, 1)) {
              break;
            }
            unsigned int v14 = objc_msgSend(v11, sel_isInRange);

            if (!v14)
            {
              swift_bridgeObjectRelease_n();
              sub_1C2550460();
              sub_1C25504A0();
              sub_1C25504B0();
              sub_1C2550470();
              goto LABEL_5;
            }
            ++v10;
            if (v13 == v9) {
              goto LABEL_4;
            }
          }
          __break(1u);
          break;
        }
      }
      else
      {
        uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v9) {
          goto LABEL_13;
        }
      }
LABEL_4:
      swift_bridgeObjectRelease_n();

LABEL_5:
      if (v3 == v19)
      {
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C228F578()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets);
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (v1 >> 62) {
    goto LABEL_28;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1C2550620())
  {
    unint64_t v3 = 0;
    uint64_t v19 = v2;
    unint64_t v20 = v1 & 0xC000000000000001;
    uint64_t v17 = v1 & 0xFFFFFFFFFFFFFF8;
    unint64_t v18 = v1;
    unint64_t v16 = v1 + 32;
    while (1)
    {
      if (v20)
      {
        id v4 = (id)MEMORY[0x1C87588E0](v3, v18);
      }
      else
      {
        if (v3 >= *(void *)(v17 + 16)) {
          goto LABEL_27;
        }
        id v4 = *(id *)(v16 + 8 * v3);
      }
      uint64_t v5 = v4;
      if (__OFADD__(v3++, 1)) {
        break;
      }
      id v7 = objc_msgSend(v4, sel_quantities);
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E21B0);
      unint64_t v8 = sub_1C254F710();

      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = sub_1C2550620();
        if (v9)
        {
LABEL_13:
          unint64_t v1 = v8 & 0xC000000000000001;
          uint64_t v10 = 4;
          while (1)
          {
            id v11 = v1 ? (id)MEMORY[0x1C87588E0](v10 - 4, v8) : *(id *)(v8 + 8 * v10);
            uint64_t v12 = v11;
            uint64_t v13 = v10 - 3;
            if (__OFADD__(v10 - 4, 1)) {
              break;
            }
            unsigned int v14 = objc_msgSend(v11, sel_hasRange);

            if (!v14)
            {
              swift_bridgeObjectRelease_n();
              sub_1C2550460();
              sub_1C25504A0();
              sub_1C25504B0();
              sub_1C2550470();
              goto LABEL_5;
            }
            ++v10;
            if (v13 == v9) {
              goto LABEL_4;
            }
          }
          __break(1u);
          break;
        }
      }
      else
      {
        uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v9) {
          goto LABEL_13;
        }
      }
LABEL_4:
      swift_bridgeObjectRelease_n();

LABEL_5:
      if (v3 == v19)
      {
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

id MedicalRecordChartableSeries.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MedicalRecordChartableSeries.init()()
{
}

id MedicalRecordChartableSeries.__deallocating_deinit(uint64_t a1)
{
  return sub_1C228F898(a1, type metadata accessor for MedicalRecordChartableSeries);
}

id sub_1C228F898(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1C228F92C(uint64_t *a1, uint64_t (*a2)(uint64_t), void (*a3)(void *))
{
  uint64_t v6 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v6 = a2(v6);
    *a1 = v6;
  }
  uint64_t v8 = *(void *)(v6 + 16);
  v10[0] = v6 + 32;
  v10[1] = v8;
  a3(v10);
  return sub_1C2550470();
}

void *sub_1C228F9C0(unint64_t a1)
{
  return sub_1C2290964(a1, (void (*)(void *, uint64_t, unint64_t))sub_1C22943E0);
}

void *sub_1C228F9D8(unint64_t a1)
{
  return sub_1C2290964(a1, (void (*)(void *, uint64_t, unint64_t))sub_1C2294630);
}

size_t sub_1C228F9F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C2298A7C(0, &qword_1EA2DF3D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = *(void *)(type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_1C23C81D4(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1C21ABD08();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1C228FB74(unint64_t a1)
{
  return sub_1C2290964(a1, (void (*)(void *, uint64_t, unint64_t))sub_1C2294AE8);
}

uint64_t sub_1C228FB8C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1C228FBBC(a1, a2, a3, a4, (void (*)(void))_s11SizedRecordCMa);
}

uint64_t sub_1C228FBA4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1C228FBBC(a1, a2, a3, a4, (void (*)(void))_s12SizedSectionCMa);
}

uint64_t sub_1C228FBBC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void))
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v10 = v6;
    if (v6 <= 0)
    {
      id v11 = (void *)MEMORY[0x1E4FBC860];
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0) {
          goto LABEL_19;
        }
        unint64_t v14 = a2 + 8 * a3;
        if (v14 < (unint64_t)&v11[v10 + 4] && (unint64_t)(v11 + 4) < v14 + v10 * 8) {
          goto LABEL_19;
        }
        a5(0);
        swift_arrayInitWithCopy();
        return (uint64_t)v11;
      }
    }
    else
    {
      sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
      id v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v6;
      v11[3] = (2 * (v13 >> 3)) | 1;
      if (v5 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C228FD60(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1C228FBBC(a1, a2, a3, a4, (void (*)(void))_s15SizedValueGroupCMa);
}

uint64_t sub_1C228FD78(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1C228FBBC(a1, a2, a3, a4, (void (*)(void))_s10SizedValueCMa);
}

void *sub_1C228FD90(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB70050);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 72);
  unint64_t v5 = sub_1C23C84F8(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1C21ABD08();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1C228FE98(uint64_t a1)
{
  return sub_1C228FEB0(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1C23C87A8);
}

void *sub_1C228FEB0(uint64_t a1, uint64_t (*a2)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6FA60);
  unint64_t v5 = (void *)swift_allocObject();
  int64_t v6 = _swift_stdlib_malloc_size(v5);
  uint64_t v7 = v6 - 32;
  if (v6 < 32) {
    uint64_t v7 = v6 - 17;
  }
  v5[2] = v2;
  v5[3] = 2 * (v7 >> 4);
  uint64_t v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_1C21ABD08();
  if (v8 != v2)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v5;
}

void *sub_1C228FFAC(unint64_t a1)
{
  return sub_1C2290964(a1, (void (*)(void *, uint64_t, unint64_t))sub_1C2295D80);
}

uint64_t sub_1C228FFC4(uint64_t a1)
{
  return sub_1C2290290(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1C23C8BA8);
}

size_t sub_1C228FFDC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C2298A7C(0, &qword_1EA2DF4C8, 255, MEMORY[0x1E4F66840], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = *(void *)(sub_1C254E220() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      uint64_t v9 = sub_1C23C8BC4(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_1C21ABD08();
      if (v9 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1C2290160(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C2298A7C(0, &qword_1EA2DF868, 255, (uint64_t (*)(uint64_t))sub_1C2284770, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1C23C8F0C((uint64_t)&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1C21ABD08();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1C2290278(uint64_t a1)
{
  return sub_1C2290290(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1C23C9110);
}

uint64_t sub_1C2290290(uint64_t a1, uint64_t (*a2)(uint64_t *, void *, uint64_t, uint64_t))
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_1C25502A0();
    if (v4) {
      goto LABEL_3;
    }
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_3:
  if (v4 <= 0)
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
    uint64_t v5 = (void *)swift_allocObject();
    int64_t v6 = _swift_stdlib_malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 25;
    }
    v5[2] = v4;
    v5[3] = (2 * (v7 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = a2(&v10, v5 + 4, v4, a1);
  uint64_t result = sub_1C21ABD08();
  if (v8 == v4) {
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C22903AC(uint64_t result, int64_t a2)
{
  int64_t v2 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v2 == -1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = result;
  if (v3 <= 0)
  {
    int64_t v6 = (int64_t *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1C22259B4(0, &qword_1EBB6DDA8);
    int64_t v6 = (int64_t *)swift_allocObject();
    int64_t v7 = _swift_stdlib_malloc_size(v6);
    uint64_t v8 = v7 - 32;
    if (v7 < 32) {
      uint64_t v8 = v7 - 25;
    }
    v6[2] = v3;
    v6[3] = 2 * (v8 >> 3);
  }
  uint64_t result = sub_1C23C9428((uint64_t)&v9, v6 + 4, v3, v5, a2);
  if (result == v3) {
    return (uint64_t)v6;
  }
LABEL_14:
  __break(1u);
  return result;
}

void *sub_1C229048C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C2298940();
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  uint64_t v6 = sub_1C23C9558((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1C21ABD08();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

size_t sub_1C2290570(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C2298A7C(0, &qword_1EA2DF950, 255, (uint64_t (*)(uint64_t))sub_1C22853B0, MEMORY[0x1E4FBBE00]);
  sub_1C22853B0();
  uint64_t v4 = *(void *)(*(void *)(v3 - 8) + 72);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_1C23C9754(&v11, (uint64_t)v6 + v5, v1, a1);
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      sub_1C21ABD08();
      if (v10 == v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1C22906F4(uint64_t a1)
{
  return sub_1C229070C(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1C23C9AAC);
}

void *sub_1C229070C(uint64_t a1, uint64_t (*a2)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  unint64_t v5 = (void *)swift_allocObject();
  int64_t v6 = _swift_stdlib_malloc_size(v5);
  uint64_t v7 = v6 - 32;
  if (v6 < 32) {
    uint64_t v7 = v6 - 25;
  }
  v5[2] = v2;
  v5[3] = (2 * (v7 >> 3)) | 1;
  uint64_t v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_1C21ABD08();
  if (v8 != v2)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v5;
}

void *sub_1C2290810(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6FA60);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1C23C9CA8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1C21ABD08();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1C2290904(unint64_t a1)
{
  return sub_1C2290964(a1, (void (*)(void *, uint64_t, unint64_t))sub_1C22966E4);
}

void *sub_1C229091C(unint64_t a1)
{
  return sub_1C2290964(a1, (void (*)(void *, uint64_t, unint64_t))sub_1C2296B90);
}

void *sub_1C2290934(unint64_t a1)
{
  return sub_1C2290964(a1, (void (*)(void *, uint64_t, unint64_t))sub_1C2296DEC);
}

void *sub_1C229094C(unint64_t a1)
{
  return sub_1C2290964(a1, (void (*)(void *, uint64_t, unint64_t))sub_1C2297048);
}

void *sub_1C2290964(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
      uint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v5;
}

void sub_1C2290A7C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_1C2298A7C(0, (unint64_t *)&qword_1EBB6F550, 255, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v189 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v189 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  v200 = (char *)&v189 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v201 = (char *)&v189 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v189 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v193 = (uint64_t)&v189 - v18;
  uint64_t v19 = sub_1C254CAD0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  v210 = (char *)&v189 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  v216 = (char *)&v189 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  id v27 = (char *)&v189 - v26;
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  v206 = (char *)&v189 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v189 - v31;
  MEMORY[0x1F4188790](v30);
  v195 = (char *)&v189 - v33;
  v194 = a1;
  uint64_t v34 = a1[1];
  uint64_t v204 = sub_1C2550800();
  if (v204 >= v34)
  {
    if ((v34 & 0x8000000000000000) == 0)
    {
      if (v34) {
        sub_1C2292838(0, v34, 1, v194);
      }
      return;
    }
    goto LABEL_213;
  }
  if (v34 >= 0) {
    uint64_t v35 = v34;
  }
  else {
    uint64_t v35 = v34 + 1;
  }
  if (v34 < -1) {
    goto LABEL_222;
  }
  v191 = v32;
  v197 = v27;
  v208 = v7;
  v209 = v10;
  v192 = v17;
  if (v34 < 2)
  {
    int64_t v40 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v220 = MEMORY[0x1E4FBC860];
    v205 = (void *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v38 = (char *)v34;
    uint64_t v39 = v204;
    if (v34 != 1)
    {
      unint64_t v130 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_175:
      if (v130 < 2)
      {
LABEL_186:
        swift_bridgeObjectRelease();
        *(void *)((v220 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
        sub_1C254F730();
        swift_bridgeObjectRelease();
        return;
      }
      uint64_t v183 = *v194;
      while (1)
      {
        unint64_t v184 = v130 - 2;
        if (v130 < 2) {
          goto LABEL_207;
        }
        if (!v183) {
          goto LABEL_220;
        }
        uint64_t v185 = *(void *)&v40[16 * v184 + 32];
        uint64_t v186 = *(void *)&v40[16 * v130 + 24];
        sub_1C2293114((void **)(v183 + 8 * v185), (id *)(v183 + 8 * *(void *)&v40[16 * v130 + 16]), v183 + 8 * v186, v205);
        if (v2) {
          goto LABEL_186;
        }
        if (v186 < v185) {
          goto LABEL_208;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v40 = sub_1C23F321C((uint64_t)v40);
        }
        if (v184 >= *((void *)v40 + 2)) {
          goto LABEL_209;
        }
        v187 = &v40[16 * v184 + 32];
        *(void *)v187 = v185;
        *((void *)v187 + 1) = v186;
        unint64_t v188 = *((void *)v40 + 2);
        if (v130 > v188) {
          goto LABEL_210;
        }
        memmove(&v40[16 * v130 + 16], &v40[16 * v130 + 32], 16 * (v188 - v130));
        *((void *)v40 + 2) = v188 - 1;
        unint64_t v130 = v188 - 1;
        if (v188 <= 2) {
          goto LABEL_186;
        }
      }
    }
  }
  else
  {
    uint64_t v36 = v35 >> 1;
    type metadata accessor for MedicalRecordChartableSeries();
    uint64_t v37 = sub_1C254F780();
    *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) = v36;
    v205 = (void *)((v37 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v220 = v37;
    uint64_t v38 = (char *)v34;
    uint64_t v39 = v204;
  }
  uint64_t v41 = 0;
  uint64_t v42 = *v194;
  v214 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  v207 = (void (**)(char *, uint64_t, uint64_t))(v20 + 32);
  v211 = (void (**)(char *, uint64_t))(v20 + 8);
  v217 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v190 = v42 + 16;
  uint64_t v189 = v42 - 8;
  int64_t v40 = (char *)MEMORY[0x1E4FBC860];
  v202 = v38;
  uint64_t v212 = v42;
LABEL_13:
  uint64_t v43 = v41;
  unint64_t v44 = (char *)(v41 + 1);
  uint64_t v199 = v41;
  if (v41 + 1 >= (uint64_t)v38) {
    goto LABEL_71;
  }
  unint64_t v45 = *(void **)(v42 + 8 * (void)v44);
  uint64_t v46 = *(void **)(v42 + 8 * v41);
  uint64_t v47 = v45;
  double v48 = v46;
  uint64_t v49 = v193;
  sub_1C228EF40(v193);
  v218 = *v214;
  if (v218(v49, 1, v19) == 1)
  {
    sub_1C254C9D0();
    sub_1C22178C0(v49);
  }
  else
  {
    (*v207)(v195, v49, v19);
  }
  uint64_t v50 = (uint64_t)v192;
  sub_1C228EF40((uint64_t)v192);
  unsigned int v51 = v218(v50, 1, v19);
  v213 = v47;
  v198 = v48;
  CGRect v52 = v191;
  if (v51 == 1)
  {
    sub_1C254C9D0();
    sub_1C22178C0(v50);
  }
  else
  {
    (*v207)(v191, v50, v19);
  }
  unint64_t v53 = v195;
  LODWORD(v215) = sub_1C254CA60();
  uint64_t v54 = (char *)*v211;
  (*v211)(v52, v19);
  v203 = v54;
  ((void (*)(char *, uint64_t))v54)(v53, v19);

  uint64_t v43 = v199;
  unint64_t v44 = (char *)(v199 + 2);
  if (v199 + 2 >= (uint64_t)v38)
  {
    uint64_t v42 = v212;
    if (v215) {
      goto LABEL_63;
    }
LABEL_71:
    if ((uint64_t)v44 >= (uint64_t)v38) {
      goto LABEL_122;
    }
    if (__OFSUB__(v44, v43)) {
      goto LABEL_212;
    }
    if ((uint64_t)&v44[-v43] >= v39) {
      goto LABEL_122;
    }
    if (__OFADD__(v43, v39)) {
      goto LABEL_214;
    }
    if (v43 + v39 >= (uint64_t)v38) {
      char v89 = v38;
    }
    else {
      char v89 = (char *)(v43 + v39);
    }
    if ((uint64_t)v89 < v43) {
      goto LABEL_215;
    }
    if (v44 == v89) {
      goto LABEL_122;
    }
    v198 = v40;
    v90 = (char *)(v189 + 8 * (void)v44);
    v218 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v19;
    v196 = v89;
LABEL_83:
    v92 = *(char **)(v42 + 8 * (void)v44);
    v203 = v90;
    v213 = v44;
    while (1)
    {
      unint64_t v93 = *(char **)v90;
      unint64_t v94 = *(void *)&v92[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
      if ((v94 & 0x8000000000000000) != 0 || (v94 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain_n();
        unint64_t v104 = v92;
        unint64_t v105 = v93;
        uint64_t v95 = (uint64_t)sub_1C2290964(v94, (void (*)(void *, uint64_t, unint64_t))sub_1C2295D80);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v95 = v94 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n();
        unint64_t v96 = v92;
        uint64_t v97 = v93;
      }
      v219[0] = v95;
      sub_1C228F92C(v219, (uint64_t (*)(uint64_t))sub_1C23F5310, sub_1C2291EA0);
      if (v2) {
        goto LABEL_221;
      }
      swift_bridgeObjectRelease();
      uint64_t v98 = v219[0];
      if (v219[0] < 0 || (v219[0] & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v106 = sub_1C2550620();
        swift_release();
        if (!v106)
        {
LABEL_98:
          swift_release();
          unint64_t v103 = *v217;
          uint64_t v102 = (uint64_t)v209;
          (*v217)(v209, 1, 1, v19);
LABEL_99:
          sub_1C254C9D0();
          sub_1C22178C0(v102);
          goto LABEL_100;
        }
      }
      else if (!*(void *)(v219[0] + 16))
      {
        goto LABEL_98;
      }
      if ((v98 & 0xC000000000000001) != 0)
      {
        id v99 = (id)MEMORY[0x1C87588E0](0, v98);
      }
      else
      {
        if (!*(void *)(v98 + 16))
        {
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          __break(1u);
LABEL_215:
          __break(1u);
          goto LABEL_216;
        }
        id v99 = *(id *)(v98 + 32);
      }
      v100 = v99;
      swift_release();
      id v101 = objc_msgSend(v100, sel_date);

      uint64_t v102 = (uint64_t)v209;
      sub_1C254CA80();

      unint64_t v103 = *v217;
      (*v217)((char *)v102, 0, 1, v19);
      if ((*v214)(v102, 1, v19) == 1) {
        goto LABEL_99;
      }
      (*v207)(v216, v102, v19);
LABEL_100:
      unint64_t v107 = *(void *)&v93[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
      if ((v107 & 0x8000000000000000) != 0 || (v107 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v108 = (uint64_t)sub_1C2290964(v107, (void (*)(void *, uint64_t, unint64_t))sub_1C2295D80);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v108 = v107 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n();
      }
      v219[0] = v108;
      sub_1C228F92C(v219, (uint64_t (*)(uint64_t))sub_1C23F5310, sub_1C2291EA0);
      swift_bridgeObjectRelease();
      uint64_t v109 = v219[0];
      if (v219[0] < 0 || (v219[0] & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v118 = sub_1C2550620();
        swift_release();
        id v215 = v92;
        if (!v118)
        {
LABEL_113:
          uint64_t v113 = v43;
          swift_release();
          uint64_t v115 = (uint64_t)v208;
          v103(v208, 1, 1, v19);
          goto LABEL_114;
        }
      }
      else
      {
        uint64_t v110 = *(void *)(v219[0] + 16);
        id v215 = v92;
        if (!v110) {
          goto LABEL_113;
        }
      }
      if ((v109 & 0xC000000000000001) != 0)
      {
        id v111 = (id)MEMORY[0x1C87588E0](0, v109);
      }
      else
      {
        if (!*(void *)(v109 + 16)) {
          goto LABEL_189;
        }
        id v111 = *(id *)(v109 + 32);
      }
      uint64_t v112 = v111;
      swift_release();
      uint64_t v113 = v43;
      id v114 = objc_msgSend(v112, sel_date);

      uint64_t v115 = (uint64_t)v208;
      sub_1C254CA80();

      v103((char *)v115, 0, 1, v19);
      if ((*v214)(v115, 1, v19) != 1)
      {
        v116 = v93;
        id v117 = v210;
        (*v207)(v210, v115, (uint64_t)v218);
        goto LABEL_115;
      }
LABEL_114:
      v116 = v93;
      id v117 = v210;
      sub_1C254C9D0();
      sub_1C22178C0(v115);
LABEL_115:
      v119 = v216;
      char v120 = sub_1C254CA60();
      unint64_t v121 = v117;
      id v122 = *v211;
      id v123 = v218;
      (*v211)(v121, (uint64_t)v218);
      v122(v119, (uint64_t)v123);

      if ((v120 & 1) == 0)
      {
        uint64_t v42 = v212;
        v91 = v213;
        uint64_t v2 = 0;
        uint64_t v19 = (uint64_t)v218;
LABEL_82:
        unint64_t v44 = v91 + 1;
        v90 = v203 + 8;
        uint64_t v43 = v199;
        if (v44 != v196) {
          goto LABEL_83;
        }
        unint64_t v44 = v196;
        int64_t v40 = v198;
        uint64_t v39 = v204;
LABEL_122:
        if ((uint64_t)v44 < v43) {
          goto LABEL_211;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v213 = v44;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          int64_t v40 = sub_1C23F277C(0, *((void *)v40 + 2) + 1, 1, v40);
        }
        unint64_t v129 = *((void *)v40 + 2);
        unint64_t v128 = *((void *)v40 + 3);
        unint64_t v130 = v129 + 1;
        uint64_t v42 = v212;
        if (v129 >= v128 >> 1)
        {
          uint64_t v182 = sub_1C23F277C((char *)(v128 > 1), v129 + 1, 1, v40);
          uint64_t v42 = v212;
          int64_t v40 = v182;
        }
        *((void *)v40 + 2) = v130;
        v218 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(v40 + 32);
        id v131 = &v40[16 * v129 + 32];
        v132 = v213;
        *(void *)id v131 = v43;
        *((void *)v131 + 1) = v132;
        if (v129)
        {
          uint64_t v133 = v218;
          while (1)
          {
            unint64_t v134 = v130 - 1;
            if (v130 >= 4)
            {
              id v139 = (void *)((char *)v133 + 16 * v130);
              uint64_t v140 = *(v139 - 8);
              uint64_t v141 = *(v139 - 7);
              BOOL v145 = __OFSUB__(v141, v140);
              uint64_t v142 = v141 - v140;
              if (v145) {
                goto LABEL_194;
              }
              uint64_t v144 = *(v139 - 6);
              uint64_t v143 = *(v139 - 5);
              BOOL v145 = __OFSUB__(v143, v144);
              uint64_t v137 = v143 - v144;
              char v138 = v145;
              if (v145) {
                goto LABEL_195;
              }
              unint64_t v146 = v130 - 2;
              v147 = (uint64_t *)((char *)v133 + 16 * v130 - 32);
              uint64_t v149 = *v147;
              uint64_t v148 = v147[1];
              BOOL v145 = __OFSUB__(v148, v149);
              uint64_t v150 = v148 - v149;
              if (v145) {
                goto LABEL_197;
              }
              BOOL v145 = __OFADD__(v137, v150);
              uint64_t v151 = v137 + v150;
              if (v145) {
                goto LABEL_200;
              }
              if (v151 >= v142)
              {
                v169 = (uint64_t *)((char *)v133 + 16 * v134);
                uint64_t v171 = *v169;
                uint64_t v170 = v169[1];
                BOOL v145 = __OFSUB__(v170, v171);
                uint64_t v172 = v170 - v171;
                if (v145) {
                  goto LABEL_206;
                }
                BOOL v162 = v137 < v172;
                goto LABEL_160;
              }
            }
            else
            {
              if (v130 != 3)
              {
                uint64_t v163 = *((void *)v40 + 4);
                uint64_t v164 = *((void *)v40 + 5);
                BOOL v145 = __OFSUB__(v164, v163);
                uint64_t v156 = v164 - v163;
                char v157 = v145;
                goto LABEL_154;
              }
              uint64_t v136 = *((void *)v40 + 4);
              uint64_t v135 = *((void *)v40 + 5);
              BOOL v145 = __OFSUB__(v135, v136);
              uint64_t v137 = v135 - v136;
              char v138 = v145;
            }
            if (v138) {
              goto LABEL_196;
            }
            unint64_t v146 = v130 - 2;
            id v152 = (uint64_t *)((char *)v133 + 16 * v130 - 32);
            uint64_t v154 = *v152;
            uint64_t v153 = v152[1];
            BOOL v155 = __OFSUB__(v153, v154);
            uint64_t v156 = v153 - v154;
            char v157 = v155;
            if (v155) {
              goto LABEL_199;
            }
            unint64_t v158 = (uint64_t *)((char *)v133 + 16 * v134);
            uint64_t v160 = *v158;
            uint64_t v159 = v158[1];
            BOOL v145 = __OFSUB__(v159, v160);
            uint64_t v161 = v159 - v160;
            if (v145) {
              goto LABEL_202;
            }
            if (__OFADD__(v156, v161)) {
              goto LABEL_203;
            }
            if (v156 + v161 >= v137)
            {
              BOOL v162 = v137 < v161;
LABEL_160:
              if (v162) {
                unint64_t v134 = v146;
              }
              goto LABEL_162;
            }
LABEL_154:
            if (v157) {
              goto LABEL_198;
            }
            v165 = (uint64_t *)((char *)v133 + 16 * v134);
            uint64_t v167 = *v165;
            uint64_t v166 = v165[1];
            BOOL v145 = __OFSUB__(v166, v167);
            uint64_t v168 = v166 - v167;
            if (v145) {
              goto LABEL_201;
            }
            if (v168 < v156) {
              goto LABEL_171;
            }
LABEL_162:
            unint64_t v173 = v134 - 1;
            if (v134 - 1 >= v130) {
              goto LABEL_190;
            }
            if (!v42) {
              goto LABEL_218;
            }
            uint64_t v174 = v19;
            unint64_t v175 = v40;
            long long v176 = (uint64_t *)((char *)v133 + 16 * v173);
            long long v177 = v133;
            uint64_t v178 = *v176;
            uint64_t v179 = (void *)((char *)v177 + 16 * v134);
            uint64_t v180 = v179[1];
            sub_1C2293114((void **)(v42 + 8 * *v176), (id *)(v42 + 8 * *v179), v42 + 8 * v180, v205);
            if (v2) {
              goto LABEL_186;
            }
            if (v180 < v178) {
              goto LABEL_191;
            }
            if (v134 > *((void *)v175 + 2)) {
              goto LABEL_192;
            }
            *long long v176 = v178;
            uint64_t v133 = v218;
            *((void *)v218 + 2 * v173 + 1) = v180;
            unint64_t v181 = *((void *)v175 + 2);
            if (v134 >= v181) {
              goto LABEL_193;
            }
            int64_t v40 = v175;
            unint64_t v130 = v181 - 1;
            memmove(v179, v179 + 2, 16 * (v181 - 1 - v134));
            *((void *)v175 + 2) = v181 - 1;
            BOOL v162 = v181 > 2;
            uint64_t v19 = v174;
            uint64_t v39 = v204;
            uint64_t v42 = v212;
            if (!v162) {
              goto LABEL_171;
            }
          }
        }
        unint64_t v130 = 1;
LABEL_171:
        uint64_t v38 = v202;
        uint64_t v41 = (uint64_t)v213;
        if ((uint64_t)v213 >= (uint64_t)v202) {
          goto LABEL_175;
        }
        goto LABEL_13;
      }
      uint64_t v42 = v212;
      if (!v212) {
        goto LABEL_217;
      }
      uint64_t v2 = 0;
      uint64_t v124 = *(void *)v90;
      v125 = (char *)*((void *)v90 + 1);
      *(void *)v90 = v125;
      *((void *)v90 + 1) = v124;
      v90 -= 8;
      uint64_t v126 = v113;
      v92 = v125;
      uint64_t v43 = v126 + 1;
      v91 = v213;
      uint64_t v19 = (uint64_t)v218;
      if (v213 == (char *)v43) {
        goto LABEL_82;
      }
    }
  }
  BOOL v55 = (void **)(v190 + 8 * v199);
  v198 = v40;
  do
  {
    v213 = v44;
    CGRect v56 = (char *)*(v55 - 1);
    uint64_t v57 = *v55;
    unint64_t v58 = *(void *)((char *)*v55
                    + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets);
    if ((v58 & 0x8000000000000000) != 0 || (v58 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain_n();
      id v68 = v57;
      unint64_t v69 = v56;
      uint64_t v59 = (uint64_t)sub_1C2290964(v58, (void (*)(void *, uint64_t, unint64_t))sub_1C2295D80);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v59 = v58 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
      id v60 = v57;
      id v61 = v56;
    }
    v219[0] = v59;
    sub_1C228F92C(v219, (uint64_t (*)(uint64_t))sub_1C23F5310, sub_1C2291EA0);
    if (v2) {
      goto LABEL_221;
    }
    swift_bridgeObjectRelease();
    uint64_t v62 = v219[0];
    if (v219[0] < 0 || (v219[0] & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v70 = sub_1C2550620();
      swift_release();
      if (!v70)
      {
LABEL_36:
        swift_release();
        id v67 = *v217;
        uint64_t v66 = (uint64_t)v201;
        (*v217)(v201, 1, 1, v19);
LABEL_37:
        sub_1C254C9D0();
        sub_1C22178C0(v66);
        goto LABEL_38;
      }
    }
    else if (!*(void *)(v219[0] + 16))
    {
      goto LABEL_36;
    }
    if ((v62 & 0xC000000000000001) != 0)
    {
      id v63 = (id)MEMORY[0x1C87588E0](0, v62);
    }
    else
    {
      if (!*(void *)(v62 + 16)) {
        goto LABEL_204;
      }
      id v63 = *(id *)(v62 + 32);
    }
    os_log_type_t v64 = v63;
    swift_release();
    id v65 = objc_msgSend(v64, sel_date);

    uint64_t v66 = (uint64_t)v201;
    sub_1C254CA80();

    id v67 = *v217;
    (*v217)((char *)v66, 0, 1, v19);
    if (v218(v66, 1, v19) == 1) {
      goto LABEL_37;
    }
    (*v207)(v206, v66, v19);
LABEL_38:
    unint64_t v71 = *(void *)&v56[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
    if ((v71 & 0x8000000000000000) != 0 || (v71 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v72 = (uint64_t)sub_1C2290964(v71, (void (*)(void *, uint64_t, unint64_t))sub_1C2295D80);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v72 = v71 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
    }
    v219[0] = v72;
    sub_1C228F92C(v219, (uint64_t (*)(uint64_t))sub_1C23F5310, sub_1C2291EA0);
    uint64_t v2 = 0;
    swift_bridgeObjectRelease();
    uint64_t v73 = v219[0];
    if (v219[0] < 0 || (v219[0] & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v80 = sub_1C2550620();
      swift_release();
      if (!v80)
      {
LABEL_51:
        swift_release();
        uint64_t v77 = (uint64_t)v200;
        v67(v200, 1, 1, v19);
        goto LABEL_52;
      }
    }
    else if (!*(void *)(v219[0] + 16))
    {
      goto LABEL_51;
    }
    if ((v73 & 0xC000000000000001) != 0)
    {
      id v74 = (id)MEMORY[0x1C87588E0](0, v73);
    }
    else
    {
      if (!*(void *)(v73 + 16)) {
        goto LABEL_205;
      }
      id v74 = *(id *)(v73 + 32);
    }
    v75 = v74;
    swift_release();
    id v76 = objc_msgSend(v75, sel_date);

    uint64_t v77 = (uint64_t)v200;
    sub_1C254CA80();

    v67((char *)v77, 0, 1, v19);
    if (v218(v77, 1, v19) != 1)
    {
      id v78 = v56;
      id v79 = v197;
      (*v207)(v197, v77, v19);
      goto LABEL_53;
    }
LABEL_52:
    id v78 = v56;
    id v79 = v197;
    sub_1C254C9D0();
    sub_1C22178C0(v77);
LABEL_53:
    unint64_t v81 = v206;
    int v82 = sub_1C254CA60();
    v83 = (void (*)(char *, uint64_t))v203;
    ((void (*)(char *, uint64_t))v203)(v79, v19);
    v83(v81, v19);

    if ((v215 ^ v82))
    {
      uint64_t v38 = v202;
      uint64_t v39 = v204;
      uint64_t v42 = v212;
      unint64_t v44 = v213;
      uint64_t v43 = v199;
      int64_t v40 = v198;
      if (v215) {
        goto LABEL_63;
      }
      goto LABEL_71;
    }
    uint64_t v42 = v212;
    unint64_t v44 = v213 + 1;
    ++v55;
    int64_t v40 = v198;
  }
  while (v202 != v213 + 1);
  uint64_t v38 = v202;
  unint64_t v44 = v202;
  uint64_t v39 = v204;
  uint64_t v43 = v199;
  if ((v215 & 1) == 0) {
    goto LABEL_71;
  }
LABEL_63:
  if ((uint64_t)v44 >= v43)
  {
    if (v43 < (uint64_t)v44)
    {
      v84 = (uint64_t *)(v189 + 8 * (void)v44);
      unint64_t v85 = v44;
      uint64_t v86 = v43;
      uint64_t v87 = (uint64_t *)(v42 + 8 * v43);
      while (1)
      {
        if ((char *)v86 != --v85)
        {
          if (!v42) {
            goto LABEL_219;
          }
          uint64_t v88 = *v87;
          *uint64_t v87 = *v84;
          uint64_t *v84 = v88;
        }
        ++v86;
        --v84;
        ++v87;
        if (v86 >= (uint64_t)v85) {
          goto LABEL_71;
        }
      }
    }
    goto LABEL_71;
  }
LABEL_216:
  __break(1u);
LABEL_217:
  __break(1u);
LABEL_218:
  __break(1u);
LABEL_219:
  __break(1u);
LABEL_220:
  __break(1u);
LABEL_221:
  swift_release();
  __break(1u);
LABEL_222:
  sub_1C25505E0();
  __break(1u);
}

void sub_1C2291EA0(uint64_t *a1)
{
  uint64_t v136 = sub_1C254CAD0();
  uint64_t v2 = *(void *)(v136 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v136);
  uint64_t v135 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  unint64_t v134 = (char *)&v121 - v5;
  uint64_t v6 = a1[1];
  uint64_t v7 = sub_1C2550800();
  if (v7 >= v6)
  {
    if (v6 < 0) {
      goto LABEL_134;
    }
    if (v6) {
      sub_1C2292EDC(0, v6, 1, a1);
    }
    return;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_142;
  }
  uint64_t v126 = v7;
  if (v6 < 2)
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v139 = MEMORY[0x1E4FBC860];
    id v131 = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      unint64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_100:
      uint64_t v112 = v132;
      if (v14 >= 2)
      {
        uint64_t v113 = *a1;
        do
        {
          unint64_t v114 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_129;
          }
          if (!v113) {
            goto LABEL_141;
          }
          uint64_t v115 = v11;
          v116 = v11 + 32;
          uint64_t v117 = *(void *)&v11[16 * v114 + 32];
          uint64_t v118 = *(void *)&v11[16 * v14 + 24];
          sub_1C2293878(v113 + 8 * v117, (id *)(v113 + 8 * *(void *)&v116[16 * v14 - 16]), (id *)(v113 + 8 * v118), v131);
          if (v112) {
            break;
          }
          if (v118 < v117) {
            goto LABEL_130;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v115 = sub_1C23F321C((uint64_t)v115);
          }
          if (v114 >= *((void *)v115 + 2)) {
            goto LABEL_131;
          }
          v119 = &v115[16 * v114 + 32];
          *(void *)v119 = v117;
          *((void *)v119 + 1) = v118;
          unint64_t v120 = *((void *)v115 + 2);
          if (v14 > v120) {
            goto LABEL_132;
          }
          uint64_t v11 = v115;
          memmove(&v115[16 * v14 + 16], &v115[16 * v14 + 32], 16 * (v120 - v14));
          *((void *)v115 + 2) = v120 - 1;
          unint64_t v14 = v120 - 1;
        }
        while (v120 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C254F730();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1C21AB51C(0, &qword_1EA2DF928);
    uint64_t v10 = sub_1C254F780();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    id v131 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v139 = v10;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v133 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v124 = v13 + 16;
  id v122 = a1;
  uint64_t v123 = v13 - 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v129 = v6;
  uint64_t v137 = v13;
  while (1)
  {
    uint64_t v15 = v12;
    uint64_t v16 = v12 + 1;
    uint64_t v128 = v12;
    if (v12 + 1 < v6)
    {
      uint64_t v17 = *(void **)(v13 + 8 * v12);
      id v18 = *(id *)(v13 + 8 * v16);
      id v19 = v17;
      id v20 = objc_msgSend(v18, sel_date);
      uint64_t v21 = v134;
      sub_1C254CA80();

      id v22 = objc_msgSend(v19, sel_date);
      uint64_t v23 = v135;
      sub_1C254CA80();

      LODWORD(v138) = sub_1C254CA60();
      uint64_t v24 = *v133;
      uint64_t v25 = v23;
      uint64_t v26 = v136;
      (*v133)(v25, v136);
      v24(v21, v26);

      uint64_t v6 = v129;
      uint64_t v16 = v15 + 2;
      if (v15 + 2 < v6)
      {
        v125 = v11;
        id v27 = (id *)(v124 + 8 * v15);
        while (1)
        {
          uint64_t v28 = *(v27 - 1);
          id v29 = *v27;
          id v30 = v28;
          id v31 = objc_msgSend(v29, sel_date);
          uint64_t v32 = v134;
          sub_1C254CA80();

          id v33 = objc_msgSend(v30, sel_date);
          uint64_t v34 = v135;
          sub_1C254CA80();

          LODWORD(v33) = sub_1C254CA60();
          uint64_t v35 = v34;
          uint64_t v36 = v136;
          v24(v35, v136);
          v24(v32, v36);

          if ((v138 ^ v33)) {
            break;
          }
          ++v27;
          uint64_t v6 = v129;
          if (v129 == ++v16)
          {
            uint64_t v16 = v129;
            uint64_t v11 = v125;
            goto LABEL_22;
          }
        }
        uint64_t v11 = v125;
        uint64_t v6 = v129;
LABEL_22:
        uint64_t v15 = v128;
      }
      uint64_t v13 = v137;
      if (v138)
      {
        if (v16 < v15) {
          goto LABEL_135;
        }
        if (v15 < v16)
        {
          uint64_t v37 = (uint64_t *)(v123 + 8 * v16);
          uint64_t v38 = v16;
          uint64_t v39 = v15;
          int64_t v40 = (uint64_t *)(v137 + 8 * v15);
          do
          {
            if (v39 != --v38)
            {
              if (!v13) {
                goto LABEL_140;
              }
              uint64_t v41 = *v40;
              *int64_t v40 = *v37;
              uint64_t *v37 = v41;
            }
            ++v39;
            --v37;
            ++v40;
          }
          while (v39 < v38);
        }
      }
    }
    if (v16 >= v6) {
      goto LABEL_50;
    }
    if (__OFSUB__(v16, v15)) {
      goto LABEL_133;
    }
    if (v16 - v15 >= v126) {
      goto LABEL_50;
    }
    if (__OFADD__(v15, v126)) {
      goto LABEL_136;
    }
    uint64_t v42 = v15 + v126 >= v6 ? v6 : v15 + v126;
    if (v42 < v15) {
      break;
    }
    if (v16 != v42)
    {
      v125 = v11;
      uint64_t v43 = v123 + 8 * v16;
      uint64_t v127 = v42;
      do
      {
        unint64_t v44 = *(void **)(v13 + 8 * v16);
        uint64_t v45 = v15;
        uint64_t v130 = v43;
        while (1)
        {
          uint64_t v46 = v16;
          uint64_t v47 = *(void **)v43;
          id v48 = v44;
          id v138 = v48;
          id v49 = v47;
          id v50 = objc_msgSend(v48, sel_date);
          unsigned int v51 = v134;
          sub_1C254CA80();

          id v52 = objc_msgSend(v49, sel_date);
          unint64_t v53 = v135;
          sub_1C254CA80();

          LOBYTE(v52) = sub_1C254CA60();
          uint64_t v54 = *v133;
          BOOL v55 = v53;
          uint64_t v56 = v136;
          (*v133)(v55, v136);
          v54(v51, v56);

          if ((v52 & 1) == 0) {
            break;
          }
          uint64_t v13 = v137;
          if (!v137) {
            goto LABEL_138;
          }
          uint64_t v16 = v46;
          uint64_t v57 = *(void **)v43;
          unint64_t v44 = *(void **)(v43 + 8);
          *(void *)uint64_t v43 = v44;
          *(void *)(v43 + 8) = v57;
          v43 -= 8;
          if (v46 == ++v45) {
            goto LABEL_43;
          }
        }
        uint64_t v13 = v137;
        uint64_t v16 = v46;
LABEL_43:
        ++v16;
        uint64_t v43 = v130 + 8;
        uint64_t v15 = v128;
      }
      while (v16 != v127);
      uint64_t v16 = v127;
      uint64_t v11 = v125;
    }
LABEL_50:
    if (v16 < v15) {
      goto LABEL_128;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v138 = (id)v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v11 = sub_1C23F277C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v60 = *((void *)v11 + 2);
    unint64_t v59 = *((void *)v11 + 3);
    unint64_t v14 = v60 + 1;
    uint64_t v13 = v137;
    if (v60 >= v59 >> 1)
    {
      id v111 = sub_1C23F277C((char *)(v59 > 1), v60 + 1, 1, v11);
      uint64_t v13 = v137;
      uint64_t v11 = v111;
    }
    *((void *)v11 + 2) = v14;
    id v61 = v11 + 32;
    uint64_t v62 = &v11[16 * v60 + 32];
    id v63 = v138;
    *(void *)uint64_t v62 = v15;
    *((void *)v62 + 1) = v63;
    if (v60)
    {
      while (1)
      {
        unint64_t v64 = v14 - 1;
        if (v14 >= 4)
        {
          unint64_t v69 = &v61[16 * v14];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_117;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_118;
          }
          unint64_t v76 = v14 - 2;
          uint64_t v77 = &v61[16 * v14 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_120;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_123;
          }
          if (v81 >= v72)
          {
            id v99 = &v61[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_127;
            }
            BOOL v92 = v67 < v102;
            goto LABEL_87;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v93 = *((void *)v11 + 4);
            uint64_t v94 = *((void *)v11 + 5);
            BOOL v75 = __OFSUB__(v94, v93);
            uint64_t v86 = v94 - v93;
            char v87 = v75;
            goto LABEL_81;
          }
          uint64_t v66 = *((void *)v11 + 4);
          uint64_t v65 = *((void *)v11 + 5);
          BOOL v75 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          char v68 = v75;
        }
        if (v68) {
          goto LABEL_119;
        }
        unint64_t v76 = v14 - 2;
        int v82 = &v61[16 * v14 - 32];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v85 = __OFSUB__(v83, v84);
        uint64_t v86 = v83 - v84;
        char v87 = v85;
        if (v85) {
          goto LABEL_122;
        }
        uint64_t v88 = &v61[16 * v64];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_125;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_126;
        }
        if (v86 + v91 >= v67)
        {
          BOOL v92 = v67 < v91;
LABEL_87:
          if (v92) {
            unint64_t v64 = v76;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v87) {
          goto LABEL_121;
        }
        uint64_t v95 = &v61[16 * v64];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v75 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_124;
        }
        if (v98 < v86) {
          goto LABEL_14;
        }
LABEL_89:
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v14)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        if (!v13) {
          goto LABEL_139;
        }
        unint64_t v104 = v11;
        unint64_t v105 = &v61[16 * v103];
        uint64_t v106 = *(void *)v105;
        unint64_t v107 = &v61[16 * v64];
        uint64_t v108 = *((void *)v107 + 1);
        uint64_t v109 = v132;
        sub_1C2293878(v13 + 8 * *(void *)v105, (id *)(v13 + 8 * *(void *)v107), (id *)(v13 + 8 * v108), v131);
        uint64_t v132 = v109;
        if (v109) {
          goto LABEL_111;
        }
        if (v108 < v106) {
          goto LABEL_114;
        }
        if (v64 > *((void *)v104 + 2)) {
          goto LABEL_115;
        }
        *(void *)unint64_t v105 = v106;
        *(void *)&v61[16 * v103 + 8] = v108;
        unint64_t v110 = *((void *)v104 + 2);
        if (v64 >= v110) {
          goto LABEL_116;
        }
        uint64_t v11 = v104;
        unint64_t v14 = v110 - 1;
        memmove(&v61[16 * v64], v107 + 16, 16 * (v110 - 1 - v64));
        *((void *)v104 + 2) = v110 - 1;
        uint64_t v13 = v137;
        if (v110 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_14:
    uint64_t v6 = v129;
    uint64_t v12 = (uint64_t)v138;
    if ((uint64_t)v138 >= v129)
    {
      a1 = v122;
      goto LABEL_100;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  sub_1C25505E0();
  __break(1u);
}

void sub_1C2292838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = v4;
  uint64_t v56 = a1;
  sub_1C2298A7C(0, (unint64_t *)&qword_1EBB6F550, 255, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v63 = (char *)&v55 - v13;
  uint64_t v14 = sub_1C254CAD0();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  MEMORY[0x1F4188790](v15);
  unint64_t v69 = (char *)&v55 - v18;
  uint64_t v55 = a2;
  if (a3 != a2)
  {
    unint64_t v60 = v17;
    id v61 = v12;
    uint64_t v19 = *a4;
    id v20 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    uint64_t v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    unint64_t v58 = (void (**)(char *, uint64_t, uint64_t))(v16 + 32);
    unint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    uint64_t v62 = (void (**)(uint64_t, uint64_t))(v16 + 8);
    uint64_t v64 = v19;
    uint64_t v21 = v19 + 8 * a3 - 8;
    uint64_t v68 = v14;
LABEL_6:
    uint64_t v65 = a3;
    id v22 = *(char **)(v64 + 8 * a3);
    uint64_t v23 = v56;
    uint64_t v57 = v21;
    while (1)
    {
      uint64_t v67 = v23;
      uint64_t v24 = *(char **)v21;
      unint64_t v25 = *(void *)&v22[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
      if ((v25 & 0x8000000000000000) != 0 || (v25 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v36 = v22;
        uint64_t v37 = v24;
        uint64_t v26 = (uint64_t)sub_1C2290964(v25, (void (*)(void *, uint64_t, unint64_t))sub_1C2295D80);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v26 = v25 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n();
        id v27 = v22;
        uint64_t v28 = v24;
      }
      uint64_t v71 = v26;
      sub_1C228F92C(&v71, (uint64_t (*)(uint64_t))sub_1C23F5310, sub_1C2291EA0);
      if (v5)
      {
LABEL_47:
        swift_release();
        __break(1u);
        return;
      }
      swift_bridgeObjectRelease();
      uint64_t v29 = v71;
      if (v71 < 0 || (v71 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_1C2550620();
        swift_release();
        uint64_t v70 = v24;
        if (!v38)
        {
LABEL_21:
          swift_release();
          uint64_t v35 = *v20;
          uint64_t v34 = (uint64_t)v63;
          (*v20)(v63, 1, 1, v14);
LABEL_22:
          sub_1C254C9D0();
          sub_1C22178C0(v34);
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v30 = *(void *)(v71 + 16);
        uint64_t v70 = v24;
        if (!v30) {
          goto LABEL_21;
        }
      }
      if ((v29 & 0xC000000000000001) != 0)
      {
        id v31 = (id)MEMORY[0x1C87588E0](0, v29);
      }
      else
      {
        if (!*(void *)(v29 + 16))
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        id v31 = *(id *)(v29 + 32);
      }
      uint64_t v32 = v31;
      swift_release();
      id v33 = objc_msgSend(v32, sel_date);

      uint64_t v34 = (uint64_t)v63;
      sub_1C254CA80();

      uint64_t v35 = *v20;
      (*v20)((char *)v34, 0, 1, v14);
      if ((*v66)(v34, 1, v14) == 1) {
        goto LABEL_22;
      }
      (*v58)(v69, v34, v14);
LABEL_23:
      unint64_t v39 = *(void *)&v70[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets];
      if ((v39 & 0x8000000000000000) != 0 || (v39 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v40 = (uint64_t)sub_1C2290964(v39, (void (*)(void *, uint64_t, unint64_t))sub_1C2295D80);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v40 = v39 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain_n();
      }
      uint64_t v71 = v40;
      sub_1C228F92C(&v71, (uint64_t (*)(uint64_t))sub_1C23F5310, sub_1C2291EA0);
      swift_bridgeObjectRelease();
      uint64_t v41 = v71;
      if (v71 < 0 || (v71 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v47 = sub_1C2550620();
        swift_release();
        if (!v47)
        {
LABEL_36:
          swift_release();
          uint64_t v45 = (uint64_t)v61;
          v35(v61, 1, 1, v14);
          goto LABEL_37;
        }
      }
      else if (!*(void *)(v71 + 16))
      {
        goto LABEL_36;
      }
      if ((v41 & 0xC000000000000001) != 0)
      {
        id v42 = (id)MEMORY[0x1C87588E0](0, v41);
      }
      else
      {
        if (!*(void *)(v41 + 16)) {
          goto LABEL_45;
        }
        id v42 = *(id *)(v41 + 32);
      }
      uint64_t v43 = v42;
      swift_release();
      id v44 = objc_msgSend(v43, sel_date);

      uint64_t v45 = (uint64_t)v61;
      sub_1C254CA80();

      v35((char *)v45, 0, 1, v14);
      if ((*v66)(v45, 1, v14) != 1)
      {
        uint64_t v46 = v60;
        (*v58)(v60, v45, v14);
        goto LABEL_38;
      }
LABEL_37:
      uint64_t v46 = v60;
      sub_1C254C9D0();
      sub_1C22178C0(v45);
LABEL_38:
      uint64_t v48 = v65;
      id v49 = v69;
      char v50 = sub_1C254CA60();
      unsigned int v51 = v46;
      id v52 = *v62;
      uint64_t v53 = v68;
      (*v62)((uint64_t)v51, v68);
      v52((uint64_t)v49, v53);

      if ((v50 & 1) == 0)
      {
        id v20 = v59;
        uint64_t v14 = v68;
        uint64_t v5 = 0;
LABEL_5:
        a3 = v48 + 1;
        uint64_t v21 = v57 + 8;
        if (a3 == v55) {
          return;
        }
        goto LABEL_6;
      }
      if (!v64) {
        goto LABEL_46;
      }
      uint64_t v5 = 0;
      uint64_t v54 = *(char **)v21;
      id v22 = *(char **)(v21 + 8);
      *(void *)uint64_t v21 = v22;
      *(void *)(v21 + 8) = v54;
      v21 -= 8;
      uint64_t v14 = v68;
      uint64_t v23 = v67 + 1;
      id v20 = v59;
      if (v48 == v67 + 1) {
        goto LABEL_5;
      }
    }
  }
}

void sub_1C2292EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v30 = a1;
  uint64_t v35 = sub_1C254CAD0();
  uint64_t v7 = MEMORY[0x1F4188790](v35);
  uint64_t v34 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v33 = (char *)&v28 - v10;
  uint64_t v29 = a2;
  if (a3 != a2)
  {
    uint64_t v11 = *a4;
    uint64_t v32 = v9 + 8;
    uint64_t v36 = v11;
    uint64_t v12 = v11 + 8 * a3 - 8;
    uint64_t v13 = (void (**)(char *, uint64_t))(v9 + 8);
LABEL_5:
    uint64_t v14 = *(void **)(v36 + 8 * a3);
    uint64_t v15 = v30;
    uint64_t v31 = v12;
    while (1)
    {
      uint64_t v16 = *(void **)v12;
      id v17 = v14;
      id v37 = v17;
      id v18 = v16;
      id v19 = objc_msgSend(v17, sel_date);
      id v20 = v33;
      sub_1C254CA80();

      id v21 = objc_msgSend(v18, sel_date);
      id v22 = v34;
      sub_1C254CA80();

      LOBYTE(v21) = sub_1C254CA60();
      uint64_t v23 = a3;
      uint64_t v24 = *v13;
      unint64_t v25 = v22;
      uint64_t v26 = v35;
      (*v13)(v25, v35);
      v24(v20, v26);
      a3 = v23;

      if ((v21 & 1) == 0)
      {
LABEL_4:
        a3 = v23 + 1;
        uint64_t v12 = v31 + 8;
        if (v23 + 1 == v29) {
          return;
        }
        goto LABEL_5;
      }
      if (!v36) {
        break;
      }
      id v27 = *(void **)v12;
      uint64_t v14 = *(void **)(v12 + 8);
      *(void *)uint64_t v12 = v14;
      *(void *)(v12 + 8) = v27;
      v12 -= 8;
      if (v23 == ++v15) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C2293114(void **a1, id *a2, unint64_t a3, void *a4)
{
  sub_1C2298A7C(0, (unint64_t *)&qword_1EBB6F550, 255, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v80 = (void (**)(char *, uint64_t, uint64_t))((char *)&v73 - v13);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v81 = (char *)&v73 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v79 = (void **)((char *)&v73 - v16);
  uint64_t v84 = sub_1C254CAD0();
  uint64_t v17 = *(void *)(v84 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v84);
  uint64_t v78 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v83 = (void **)((char *)&v73 - v21);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v77 = (char *)&v73 - v23;
  MEMORY[0x1F4188790](v22);
  BOOL v85 = (char *)&v73 - v25;
  uint64_t v26 = (char *)a2 - (char *)a1;
  uint64_t v27 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0) {
    uint64_t v27 = (char *)a2 - (char *)a1;
  }
  uint64_t v28 = v27 >> 3;
  unint64_t v82 = a3;
  uint64_t v29 = a3 - (void)a2;
  uint64_t v30 = v29 / 8;
  uint64_t v90 = a1;
  uint64_t v89 = a4;
  if (v27 >> 3 >= v29 / 8)
  {
    if (v29 < -7) {
      goto LABEL_56;
    }
    if (v24 != a2 || &a2[v30] <= v24)
    {
      char v50 = v24;
      memmove(v24, a2, 8 * v30);
      uint64_t v24 = v50;
    }
    unsigned int v51 = &v24[v30];
    uint64_t v88 = v51;
    uint64_t v90 = a2;
    if (v29 < 8 || a1 >= a2) {
      goto LABEL_55;
    }
    id v52 = (uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    uint64_t v74 = (void (**)(char *, uint64_t))(v17 + 8);
    BOOL v75 = (void (**)(void **, char *, uint64_t))(v17 + 32);
    uint64_t v53 = (id *)(v82 - 8);
    uint64_t v54 = a2;
    uint64_t v79 = v24;
    unint64_t v76 = (uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
    uint64_t v77 = v11;
    uint64_t v86 = a1;
    while (1)
    {
      char v87 = a2;
      uint64_t v55 = v51 - 1;
      uint64_t v56 = *--v54;
      uint64_t v57 = *(v51 - 1);
      BOOL v85 = v56;
      unint64_t v58 = v80;
      uint64_t v81 = v57;
      sub_1C228EF40((uint64_t)v80);
      unint64_t v59 = *v52;
      uint64_t v60 = v84;
      if ((*v52)((char *)v58, 1, v84) == 1)
      {
        sub_1C254C9D0();
        sub_1C22178C0((uint64_t)v58);
      }
      else
      {
        (*v75)(v83, (char *)v58, v60);
      }
      uint64_t v61 = v60;
      sub_1C228EF40((uint64_t)v11);
      int v62 = v59(v11, 1, v60);
      unint64_t v82 = (unint64_t)v51;
      id v63 = v78;
      if (v62 == 1)
      {
        sub_1C254C9D0();
        sub_1C22178C0((uint64_t)v11);
      }
      else
      {
        (*v75)((void **)v78, v11, v61);
      }
      uint64_t v64 = v53 + 1;
      uint64_t v65 = v83;
      char v66 = sub_1C254CA60();
      uint64_t v67 = v63;
      char v68 = v66;
      unint64_t v69 = *v74;
      (*v74)(v67, v61);
      v69((char *)v65, v61);

      if (v68)
      {
        unint64_t v70 = (unint64_t)v79;
        unsigned int v51 = (void **)v82;
        if (v64 != v87 || v53 >= v87) {
          *uint64_t v53 = *v54;
        }
        uint64_t v90 = v54;
      }
      else
      {
        uint64_t v88 = v55;
        unint64_t v70 = (unint64_t)v79;
        uint64_t v54 = v87;
        if ((unint64_t)v64 >= v82 && (unint64_t)v53 < v82)
        {
          uint64_t v11 = v77;
          if (v64 != (id *)v82) {
            *uint64_t v53 = *v55;
          }
          unsigned int v51 = v55;
          uint64_t v71 = v86;
          goto LABEL_53;
        }
        *uint64_t v53 = *v55;
        unsigned int v51 = v55;
      }
      uint64_t v71 = v86;
      uint64_t v11 = v77;
LABEL_53:
      id v52 = v76;
      if ((unint64_t)v51 > v70)
      {
        --v53;
        a2 = v54;
        if (v54 > v71) {
          continue;
        }
      }
      goto LABEL_55;
    }
  }
  if (v26 >= -7)
  {
    if (v24 != a1 || &a1[v28] <= v24)
    {
      uint64_t v31 = v24;
      memmove(v24, a1, 8 * v28);
      uint64_t v24 = v31;
    }
    uint64_t v83 = &v24[v28];
    uint64_t v88 = v83;
    if (v26 >= 8 && (unint64_t)a2 < v82)
    {
      uint64_t v32 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      uint64_t v80 = (void (**)(char *, uint64_t, uint64_t))(v17 + 32);
      id v33 = (void (**)(char *, uint64_t))(v17 + 8);
      do
      {
        uint64_t v86 = a1;
        char v87 = a2;
        uint64_t v34 = v24;
        uint64_t v35 = *v24;
        id v36 = *a2;
        id v37 = v35;
        uint64_t v38 = (uint64_t)v79;
        sub_1C228EF40((uint64_t)v79);
        unint64_t v39 = *v32;
        uint64_t v40 = v84;
        if ((*v32)(v38, 1, v84) == 1)
        {
          sub_1C254C9D0();
          sub_1C22178C0(v38);
        }
        else
        {
          (*v80)(v85, v38, v40);
        }
        uint64_t v41 = (uint64_t)v81;
        sub_1C228EF40((uint64_t)v81);
        if (v39(v41, 1, v40) == 1)
        {
          id v42 = v77;
          sub_1C254C9D0();
          sub_1C22178C0(v41);
        }
        else
        {
          id v42 = v77;
          (*v80)(v77, v41, v40);
        }
        uint64_t v43 = v85;
        char v44 = sub_1C254CA60();
        uint64_t v45 = v42;
        uint64_t v46 = *v33;
        (*v33)(v45, v40);
        v46(v43, v40);

        if (v44)
        {
          uint64_t v47 = v86;
          uint64_t v48 = v87 + 1;
          uint64_t v24 = v34;
          if (v86 < v87 || v86 >= v48 || v86 != v87) {
            *uint64_t v86 = *v87;
          }
        }
        else
        {
          uint64_t v47 = v86;
          id v49 = v87;
          if (v86 != v34) {
            *uint64_t v86 = *v34;
          }
          uint64_t v24 = v34 + 1;
          uint64_t v89 = v34 + 1;
          uint64_t v48 = v49;
        }
        a1 = v47 + 1;
        uint64_t v90 = a1;
        if (v24 >= v83) {
          break;
        }
        a2 = v48;
      }
      while ((unint64_t)v48 < v82);
    }
LABEL_55:
    sub_1C23F2978(&v90, &v89, &v88);
    return 1;
  }
LABEL_56:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2293878(uint64_t a1, id *a2, id *a3, void **a4)
{
  uint64_t v57 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v57 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v57);
  uint64_t v56 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v54 = a3;
  uint64_t v55 = (char *)&v48 - v12;
  uint64_t v13 = (uint64_t)a2 - a1;
  uint64_t v14 = v13 / 8;
  uint64_t v15 = a2;
  uint64_t v16 = (char *)a3 - (char *)a2;
  uint64_t v17 = v16 / 8;
  uint64_t v61 = v11;
  uint64_t v60 = a4;
  unint64_t v58 = v11;
  if (v13 / 8 >= v16 / 8)
  {
    if (v16 < -7) {
      goto LABEL_41;
    }
    if (a4 != v15 || &v15[v17] <= a4)
    {
      memmove(a4, v15, 8 * v17);
      uint64_t v11 = v58;
    }
    uint64_t v31 = &a4[v17];
    unint64_t v59 = v31;
    uint64_t v61 = v15;
    if (v16 < 8 || v11 >= v15) {
      goto LABEL_40;
    }
    id v49 = (void (**)(char *, uint64_t))(v8 + 8);
    char v50 = a4;
    uint64_t v32 = v54 - 1;
    id v33 = v15;
    while (1)
    {
      uint64_t v54 = v15;
      id v52 = v31;
      uint64_t v53 = v32 + 1;
      uint64_t v35 = v31 - 1;
      id v36 = *--v33;
      id v37 = *(v31 - 1);
      id v51 = v37;
      id v38 = v36;
      id v39 = objc_msgSend(v37, sel_date);
      uint64_t v40 = v55;
      sub_1C254CA80();

      id v41 = objc_msgSend(v38, sel_date);
      id v42 = v56;
      sub_1C254CA80();

      LOBYTE(v41) = sub_1C254CA60();
      uint64_t v43 = *v49;
      char v44 = v42;
      uint64_t v45 = v57;
      (*v49)(v44, v57);
      v43(v40, v45);

      if (v41) {
        break;
      }
      unint64_t v59 = v35;
      if (v53 < v52 || v32 >= v52)
      {
        id *v32 = *v35;
        id v33 = v54;
        uint64_t v31 = v35;
        goto LABEL_28;
      }
      unint64_t v46 = (unint64_t)v50;
      uint64_t v34 = v58;
      id v33 = v54;
      if (v53 != v52) {
        id *v32 = *v35;
      }
      uint64_t v31 = v35;
      if ((unint64_t)v35 <= v46) {
        goto LABEL_40;
      }
LABEL_29:
      --v32;
      uint64_t v15 = v33;
      if (v33 <= v34) {
        goto LABEL_40;
      }
    }
    uint64_t v31 = v52;
    if (v53 != v54 || v32 >= v54) {
      id *v32 = *v33;
    }
    uint64_t v61 = v33;
LABEL_28:
    uint64_t v34 = v58;
    if (v31 <= v50) {
      goto LABEL_40;
    }
    goto LABEL_29;
  }
  if (v13 >= -7)
  {
    if (a4 != v11 || &v11[v14] <= a4)
    {
      memmove(a4, v58, 8 * v14);
      uint64_t v11 = v58;
    }
    uint64_t v53 = &a4[v14];
    unint64_t v59 = v53;
    if (v13 >= 8 && v15 < v54)
    {
      id v52 = (void **)(v8 + 8);
      uint64_t v18 = v55;
      do
      {
        unint64_t v58 = v11;
        uint64_t v19 = *a4;
        id v20 = *v15;
        id v21 = v19;
        uint64_t v22 = a4;
        id v23 = objc_msgSend(v20, sel_date);
        sub_1C254CA80();

        id v24 = objc_msgSend(v21, sel_date);
        uint64_t v25 = v56;
        sub_1C254CA80();

        LOBYTE(v24) = sub_1C254CA60();
        uint64_t v26 = (void (*)(char *, uint64_t))*v52;
        uint64_t v27 = v25;
        uint64_t v28 = v57;
        ((void (*)(char *, uint64_t))*v52)(v27, v57);
        v26(v18, v28);

        if (v24)
        {
          a4 = v22;
          unint64_t v29 = (unint64_t)(v15 + 1);
          uint64_t v30 = v58;
          if (v58 < v15 || (unint64_t)v58 >= v29 || v58 != v15) {
            *unint64_t v58 = *v15;
          }
        }
        else
        {
          uint64_t v30 = v58;
          if (v58 != v22) {
            *unint64_t v58 = *v22;
          }
          a4 = v22 + 1;
          uint64_t v60 = v22 + 1;
          unint64_t v29 = (unint64_t)v15;
        }
        uint64_t v11 = v30 + 1;
        uint64_t v61 = v11;
        if (a4 >= v53) {
          break;
        }
        uint64_t v15 = (id *)v29;
      }
      while (v29 < (unint64_t)v54);
    }
LABEL_40:
    sub_1C23F2978(&v61, &v60, &v59);
    return 1;
  }
LABEL_41:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t (*sub_1C2293D88(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C2293F74(v6, a2, a3);
  return sub_1C2293DF0;
}

uint64_t (*sub_1C2293DF4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C2293FF4(v6, a2, a3);
  return sub_1C2293DF0;
}

uint64_t (*sub_1C2293E5C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C2294074(v6, a2, a3);
  return sub_1C2293DF0;
}

uint64_t (*sub_1C2293EC4(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C22940FC(v6, a2, a3);
  return sub_1C2293DF0;
}

void sub_1C2293F2C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1C2293F74(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C87588E0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s15HealthRecordsUI28HealthRecordsSupportedChangeVwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1C2293FF4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1C87588E0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    uint64_t *v3 = v4;
    return j__s15HealthRecordsUI12RegistryListVwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1C2294074(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1C87588E0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    uint64_t *v3 = v4;
    return destroy for RegistryList;
  }
  __break(1u);
  return result;
}

uint64_t destroy for RegistryList()
{
  return swift_release();
}

void (*sub_1C22940FC(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C87588E0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for HealthRecordsSupportedChange;
  }
  __break(1u);
  return result;
}

void destroy for HealthRecordsSupportedChange(id *a1)
{
}

uint64_t sub_1C2294184(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C22988D8(0, &qword_1EA2DFC38, (unint64_t *)&qword_1EA2DE020, 0x1E4F28DC8, MEMORY[0x1E4FBB320]);
        sub_1C2298BC8(&qword_1EA2DFC40, &qword_1EA2DFC38, (unint64_t *)&qword_1EA2DE020, 0x1E4F28DC8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293D88(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22943E0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C2298A7C(0, &qword_1EA2DFAE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableDatatypesDataSource, MEMORY[0x1E4FBB320]);
        sub_1C2298874(&qword_1EA2DFAE8, &qword_1EA2DFAE0, 255, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableDatatypesDataSource);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293DF4(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2294630(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C22988D8(0, (unint64_t *)&qword_1EA2DE4C0, &qword_1EBB6F978, 0x1E4F2B1A0, MEMORY[0x1E4FBB320]);
        sub_1C2298BC8(&qword_1EA2DFB10, (unint64_t *)&qword_1EA2DE4C0, &qword_1EBB6F978, 0x1E4F2B1A0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293D88(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C21AB51C(0, &qword_1EBB6F978);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C229488C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C22988D8(0, (unint64_t *)&qword_1EA2DF648, (unint64_t *)&qword_1EA2DE708, (uint64_t)off_1E644A2F0, MEMORY[0x1E4FBB320]);
        sub_1C2298BC8(&qword_1EA2DFB28, (unint64_t *)&qword_1EA2DF648, (unint64_t *)&qword_1EA2DE708, (uint64_t)off_1E644A2F0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293D88(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2294AE8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C22988D8(0, &qword_1EA2DFC18, &qword_1EA2DFC10, 0x1E4F2B1E8, MEMORY[0x1E4FBB320]);
        sub_1C2298BC8(&qword_1EA2DFC20, &qword_1EA2DFC18, &qword_1EA2DFC10, 0x1E4F2B1E8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293D88(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C21AB51C(0, &qword_1EA2DFC10);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2294D44(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C22988D8(0, (unint64_t *)&qword_1EBB6D8C8, &qword_1EBB6EF58, 0x1E4F2B3D0, MEMORY[0x1E4FBB320]);
        sub_1C2298BC8(&qword_1EA2DFC70, (unint64_t *)&qword_1EBB6D8C8, &qword_1EBB6EF58, 0x1E4F2B3D0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293D88(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2294FA0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C2298A7C(0, &qword_1EA2DFB40, 255, (uint64_t (*)(uint64_t))_s12SizedSectionCMa, MEMORY[0x1E4FBB320]);
        sub_1C2298874(&qword_1EA2DFB48, &qword_1EA2DFB40, 255, (uint64_t (*)(uint64_t))_s12SizedSectionCMa);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293DF4(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    _s12SizedSectionCMa();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22951F0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C2298A7C(0, &qword_1EA2DFB50, 255, (uint64_t (*)(uint64_t))_s11SizedRecordCMa, MEMORY[0x1E4FBB320]);
        sub_1C2298874((unint64_t *)&qword_1EA2DFB58, &qword_1EA2DFB50, 255, (uint64_t (*)(uint64_t))_s11SizedRecordCMa);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293DF4(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    _s11SizedRecordCMa();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2295440(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C2298A7C(0, &qword_1EA2DFB60, 255, (uint64_t (*)(uint64_t))_s15SizedValueGroupCMa, MEMORY[0x1E4FBB320]);
        sub_1C2298874((unint64_t *)&qword_1EA2DFB68, &qword_1EA2DFB60, 255, (uint64_t (*)(uint64_t))_s15SizedValueGroupCMa);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293DF4(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    _s15SizedValueGroupCMa();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2295690(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C2298A7C(0, &qword_1EA2E1D30, 255, (uint64_t (*)(uint64_t))type metadata accessor for InternalStateSection, MEMORY[0x1E4FBB320]);
        sub_1C2298874(&qword_1EA2DFBF8, &qword_1EA2E1D30, 255, (uint64_t (*)(uint64_t))type metadata accessor for InternalStateSection);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293E5C(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for InternalStateSection();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22958E0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C22988D8(0, &qword_1EA2DFC48, (unint64_t *)&unk_1EA2DE0C0, 0x1E4F2B618, MEMORY[0x1E4FBB320]);
        sub_1C2298BC8(&qword_1EA2DFC50, &qword_1EA2DFC48, (unint64_t *)&unk_1EA2DE0C0, 0x1E4F2B618);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293D88(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C21AB51C(0, (unint64_t *)&unk_1EA2DE0C0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2295B3C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C2298A7C(0, &qword_1EA2DFC58, v11, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordChartableSeries, MEMORY[0x1E4FBB320]);
        sub_1C2298874(&qword_1EA2DFC60, &qword_1EA2DFC58, v12, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordChartableSeries);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          id v14 = sub_1C2293EC4(v18, i, a3);
          id v16 = *v15;
          ((void (*)(void (**)(id *), void))v14)(v18, 0);
          *(void *)(a1 + 8 * i) = v16;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for MedicalRecordChartableSeries();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2295D80(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C22988D8(0, (unint64_t *)&qword_1EA2DF938, &qword_1EA2DF928, 0x1E4F2ACD8, MEMORY[0x1E4FBB320]);
        sub_1C2298BC8(&qword_1EA2DFBF0, (unint64_t *)&qword_1EA2DF938, &qword_1EA2DF928, 0x1E4F2ACD8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293D88(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C21AB51C(0, &qword_1EA2DF928);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2295FDC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C2298A7C(0, &qword_1EA2DFC28, 255, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordQueryDescription, MEMORY[0x1E4FBB320]);
        sub_1C2298874(&qword_1EA2DFC30, &qword_1EA2DFC28, 255, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordQueryDescription);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293DF4(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for CategoryRecordQueryDescription();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C229622C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C22988D8(0, &qword_1EA2DFC00, &qword_1EA2DF420, 0x1E4F2B630, MEMORY[0x1E4FBB320]);
        sub_1C2298BC8(&qword_1EA2DFC08, &qword_1EA2DFC00, &qword_1EA2DF420, 0x1E4F2B630);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293D88(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C21AB51C(0, &qword_1EA2DF420);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2296488(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C22988D8(0, (unint64_t *)&qword_1EA2DF8B8, &qword_1EA2DE3F0, 0x1E4FB1EC0, MEMORY[0x1E4FBB320]);
        sub_1C2298BC8(&qword_1EA2DFBA8, (unint64_t *)&qword_1EA2DF8B8, &qword_1EA2DE3F0, 0x1E4FB1EC0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293D88(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C21AB51C(0, &qword_1EA2DE3F0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22966E4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C22988D8(0, (unint64_t *)&qword_1EA2DF338, (unint64_t *)&qword_1EA2E1530, 0x1E4F67708, MEMORY[0x1E4FBB320]);
        sub_1C2298BC8(&qword_1EA2DFB20, (unint64_t *)&qword_1EA2DF338, (unint64_t *)&qword_1EA2E1530, 0x1E4F67708);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293D88(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2296940(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C2298A7C(0, &qword_1EA2DFB30, 255, (uint64_t (*)(uint64_t))_s10SizedValueCMa, MEMORY[0x1E4FBB320]);
        sub_1C2298874((unint64_t *)&qword_1EA2DFB38, &qword_1EA2DFB30, 255, (uint64_t (*)(uint64_t))_s10SizedValueCMa);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293DF4(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    _s10SizedValueCMa();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2296B90(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C22988D8(0, &qword_1EA2DFBD8, (unint64_t *)&qword_1EA2DFBD0, 0x1E4F2B2F8, MEMORY[0x1E4FBB320]);
        sub_1C2298BC8(&qword_1EA2DFBE0, &qword_1EA2DFBD8, (unint64_t *)&qword_1EA2DFBD0, 0x1E4F2B2F8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293D88(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DFBD0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2296DEC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C22988D8(0, &qword_1EA2DFB00, (unint64_t *)&qword_1EA2DFAF8, 0x1E4F2B510, MEMORY[0x1E4FBB320]);
        sub_1C2298BC8(&qword_1EA2DFB08, &qword_1EA2DFB00, (unint64_t *)&qword_1EA2DFAF8, 0x1E4F2B510);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293D88(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DFAF8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2297048(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C22988D8(0, &qword_1EA2DFBB8, &qword_1EA2DFBB0, 0x1E4F2B508, MEMORY[0x1E4FBB320]);
        sub_1C2298BC8(&qword_1EA2DFBC0, &qword_1EA2DFBB8, &qword_1EA2DFBB0, 0x1E4F2B508);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2293D88(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C21AB51C(0, &qword_1EA2DFBB0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t *sub_1C22972A4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  a2[5] = a3;
  a2[6] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a2 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  a2[7] = 0;
  a2[8] = v8;
  return a2;
}

uint64_t sub_1C2297320(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1C21F44EC(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1C22973B8(unint64_t a1, void *a2, void *a3, uint64_t a4)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v7) {
      break;
    }
    uint64_t v16 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2550490();
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = 0;
    while (v7 != v9)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1C87588E0](v9, a1);
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      id v14 = v10;
      sub_1C228DCC4((uint64_t *)&v14, a2, a3, a4, &v15);

      if (v4) {
        return swift_release();
      }
      ++v9;
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      if (v7 == v9) {
        return v16;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2297528(unint64_t a1, uint64_t a2)
{
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1C2550620())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87588E0](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v7 = v6;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      long long v12 = v6;
      sub_1C228EA38(&v12, a2, &v11);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v11)
      {
        MEMORY[0x1C8757C00]();
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C22976C4(unint64_t a1, void *a2)
{
  id v63 = a2;
  v68[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v59 = sub_1C254E560();
  unint64_t v3 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_40;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_1C2550620())
  {
    uint64_t v8 = 0;
    unint64_t v49 = a1 & 0xC000000000000001;
    unint64_t v46 = a1 + 32;
    unint64_t v58 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v9 = &selRef_setActionTitle_;
    *(void *)&long long v7 = 138543618;
    long long v54 = v7;
    uint64_t v53 = MEMORY[0x1E4FBC840] + 8;
    unint64_t v48 = a1;
    uint64_t v47 = v6;
    id v52 = v5;
    while (1)
    {
      if (v49)
      {
        uint64_t v51 = MEMORY[0x1C87588E0](v8, a1);
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10) {
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v51 = *(void *)(v46 + 8 * v8);
        swift_retain();
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10) {
          goto LABEL_39;
        }
      }
      uint64_t v11 = v51;
      swift_beginAccess();
      unint64_t v12 = *(void *)(v11 + 64);
      v67[0] = MEMORY[0x1E4FBC860];
      if (v12 >> 62) {
        break;
      }
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      id v14 = v63;
      if (v13) {
        goto LABEL_13;
      }
LABEL_29:
      swift_bridgeObjectRelease();
      unint64_t v3 = MEMORY[0x1E4FBC860];
LABEL_30:
      swift_bridgeObjectRelease();

      if (v3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v44 = sub_1C2550620();
        swift_bridgeObjectRelease();
        if (v44)
        {
LABEL_32:
          uint64_t v37 = v8;
          uint64_t v38 = v51;
          sub_1C21F4424(v51 + 16, (uint64_t)v67);
          id v39 = *(void **)(v38 + 56);
          uint64_t v40 = (objc_class *)type metadata accessor for MedicalRecordChartableSeries();
          id v41 = (char *)objc_allocWithZone(v40);
          sub_1C21F4424((uint64_t)v67, (uint64_t)&v41[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartDefining]);
          *(void *)&v41[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_chartableQuantitySets] = v3;
          *(void *)&v41[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartableSeries_preferredColors] = v39;
          v65.receiver = v41;
          v65.super_class = v40;
          id v42 = v39;
          unint64_t v3 = (unint64_t)objc_msgSendSuper2(&v65, sel_init);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v67);
          uint64_t v43 = swift_release();
          MEMORY[0x1C8757C00](v43);
          if (*(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C254F760();
          }
          sub_1C254F790();
          sub_1C254F730();
          uint64_t v8 = v37;
          uint64_t v9 = &selRef_setActionTitle_;
          goto LABEL_5;
        }
      }
      else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_32;
      }
      swift_release();
      swift_bridgeObjectRelease();
LABEL_5:
      a1 = v48;
      if (v8 == v47)
      {
        swift_bridgeObjectRelease();
        return v66;
      }
    }
    swift_bridgeObjectRetain_n();
    id v36 = v63;
    uint64_t v13 = sub_1C2550620();
    if (!v13) {
      goto LABEL_29;
    }
LABEL_13:
    uint64_t v50 = v8;
    unint64_t v61 = v12;
    unint64_t v62 = v12 & 0xC000000000000001;
    uint64_t v15 = 4;
    uint64_t v60 = v13;
    while (1)
    {
      a1 = v15 - 4;
      id v16 = v62 ? (id)MEMORY[0x1C87588E0](v15 - 4, v12) : *(id *)(v12 + 8 * v15);
      unint64_t v3 = (unint64_t)v16;
      uint64_t v17 = v15 - 3;
      if (__OFADD__(a1, 1)) {
        break;
      }
      v68[0] = 0;
      if (objc_msgSend(v16, v9[372], v63, v68))
      {
        id v18 = v68[0];

        MEMORY[0x1C8757C00]();
        if (*(void *)((v67[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();
      }
      else
      {
        id v19 = v68[0];
        id v20 = (void *)sub_1C254C820();

        swift_willThrow();
        sub_1C254E4F0();
        id v21 = (id)v3;
        id v22 = v20;
        id v23 = v21;
        id v24 = v20;
        uint64_t v25 = sub_1C254E550();
        uint64_t v26 = v5;
        os_log_type_t v27 = sub_1C254FA00();
        if (os_log_type_enabled(v25, v27))
        {
          uint64_t v28 = swift_slowAlloc();
          uint64_t v57 = 0;
          uint64_t v29 = v28;
          uint64_t v30 = (void *)swift_slowAlloc();
          uint64_t v55 = v30;
          uint64_t v56 = (void *)swift_slowAlloc();
          v68[0] = v56;
          *(_DWORD *)uint64_t v29 = v54;
          *(void *)(v29 + 4) = v23;
          *uint64_t v30 = v23;

          *(_WORD *)(v29 + 12) = 2082;
          uint64_t v64 = v20;
          id v31 = v20;
          sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
          uint64_t v32 = sub_1C254F4F0();
          *(void *)(v29 + 14) = sub_1C21AD354(v32, v33, (uint64_t *)v68);
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1C21A1000, v25, v27, "Unable to convert chartable coded quantity set %{public}@: %{public}s", (uint8_t *)v29, 0x16u);
          sub_1C22988D8(0, (unint64_t *)&qword_1EBB6F230, (unint64_t *)&qword_1EBB6F510, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
          uint64_t v34 = v55;
          swift_arrayDestroy();
          MEMORY[0x1C875A0B0](v34, -1, -1);
          uint64_t v35 = v56;
          swift_arrayDestroy();
          MEMORY[0x1C875A0B0](v35, -1, -1);
          MEMORY[0x1C875A0B0](v29, -1, -1);

          uint64_t v5 = v52;
          (*v58)(v52, v59);
        }
        else
        {

          (*v58)(v26, v59);
          uint64_t v5 = v26;
        }
        uint64_t v9 = &selRef_setActionTitle_;
      }
      unint64_t v12 = v61;
      ++v15;
      if (v17 == v60)
      {
        swift_bridgeObjectRelease();
        unint64_t v3 = v67[0];
        uint64_t v8 = v50;
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

void *sub_1C2297E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  v41[0] = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v6 = a1 + 32;
    do
    {
      sub_1C21F4424(v6, (uint64_t)&v42);
      uint64_t v7 = v44;
      uint64_t v8 = v45;
      __swift_project_boxed_opaque_existential_1Tm(&v42, v44);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8))
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v42);
      }
      else
      {
        sub_1C21F44EC(&v42, (uint64_t)v48);
        uint64_t v9 = v41[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C2274B88(0, *(void *)(v9 + 16) + 1, 1);
          uint64_t v9 = v41[0];
        }
        unint64_t v11 = *(void *)(v9 + 16);
        unint64_t v10 = *(void *)(v9 + 24);
        if (v11 >= v10 >> 1) {
          sub_1C2274B88(v10 > 1, v11 + 1, 1);
        }
        uint64_t v12 = v49;
        uint64_t v13 = v50;
        uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v48, v49);
        MEMORY[0x1F4188790](v14);
        id v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v17 + 16))(v16);
        sub_1C2297320(v11, (uint64_t)v16, v41, v12, v13);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      }
      v6 += 40;
      --v5;
    }
    while (v5);
    uint64_t v4 = (void *)v41[0];
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v4[2];
  if (v18 >= a2)
  {
    if (v18)
    {
      v38[1] = v4;
      uint64_t v20 = (uint64_t)(v4 + 4);
      unint64_t v51 = MEMORY[0x1E4FBC868];
      do
      {
        uint64_t v39 = v20;
        uint64_t v40 = v18;
        sub_1C21F4424(v20, (uint64_t)v48);
        uint64_t v25 = v49;
        uint64_t v26 = v50;
        __swift_project_boxed_opaque_existential_1Tm(v48, v49);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v26 + 16))(&v42, v25, v26);
        long long v27 = v42;
        char v28 = v43;
        uint64_t v29 = v44;
        uint64_t v30 = v45;
        char v31 = v46;
        char v32 = v47;
        unint64_t v33 = sub_1C2298AE0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C2550330();
        unint64_t v34 = v51;
        if (*(void *)(v51 + 16) && (sub_1C2457670((uint64_t)v41), unint64_t v34 = v51, (v35 & 1) != 0))
        {
          swift_retain();
          sub_1C2298B34((uint64_t)v41);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1C2298B34((uint64_t)v41);
          type metadata accessor for MedicalRecordChartableSeriesCollector();
          uint64_t v21 = swift_allocObject();
          unint64_t v51 = v33;
          id v22 = (void *)v21;
          *(void *)(v21 + 40) = &type metadata for TransientConceptForChart;
          *(void *)(v21 + 48) = &protocol witness table for TransientConceptForChart;
          uint64_t v23 = swift_allocObject();
          v22[2] = v23;
          *(_OWORD *)(v23 + 16) = v27;
          *(unsigned char *)(v23 + 32) = v28;
          *(void *)(v23 + 40) = v29;
          *(void *)(v23 + 48) = v30;
          *(unsigned char *)(v23 + 56) = v31;
          *(unsigned char *)(v23 + 57) = v32;
          v22[7] = 0;
          v22[8] = MEMORY[0x1E4FBC860];
          long long v42 = v27;
          char v43 = v28;
          uint64_t v44 = v29;
          uint64_t v45 = v30;
          char v46 = v31;
          char v47 = v32;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C2550330();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v42 = v34;
          sub_1C2365954((uint64_t)v22, (uint64_t)v41, isUniquelyReferenced_nonNull_native);
          unint64_t v51 = v42;
          swift_bridgeObjectRelease();
          sub_1C2298B34((uint64_t)v41);
        }
        sub_1C228E280(v48);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
        uint64_t v20 = v39 + 40;
        uint64_t v18 = v40 - 1;
      }
      while (v40 != 1);
    }
    swift_release();
    uint64_t v36 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C229070C(v36, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1C23C89AC);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_release();
    sub_1C22982E4();
    swift_allocError();
    *(void *)uint64_t v19 = 0;
    *(unsigned char *)(v19 + 8) = 1;
    swift_willThrow();
  }
  return v4;
}

unint64_t sub_1C22982E4()
{
  unint64_t result = qword_1EA2DFAA8;
  if (!qword_1EA2DFAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DFAA8);
  }
  return result;
}

uint64_t *sub_1C2298338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MedicalRecordChartableSeriesCollector();
  unint64_t v10 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  v10[5] = a3;
  v10[6] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10 + 2);
  (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v9, a3);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  v10[7] = 0;
  v10[8] = v12;
  return v10;
}

uint64_t type metadata accessor for MedicalRecordChartabilityDeterminer()
{
  return self;
}

uint64_t type metadata accessor for MedicalRecordChartableSeries()
{
  return self;
}

uint64_t sub_1C2298490()
{
  return type metadata accessor for MedicalRecordChartabilityResult();
}

void sub_1C2298498()
{
  sub_1C2298A7C(319, (unint64_t *)&qword_1EBB6F550, 255, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedicalRecordChartabilityResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordChartabilityResult);
}

uint64_t dispatch thunk of MedicalRecordChartabilityResult.shouldProduceAtLeastOneOverlay.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordChartabilityResult.__allocating_init(configuration:masterDataSource:seriesDataSources:outOfRangeDataSource:noRangeDataSource:latestChartableDate:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for MedicalRecordChartabilityDeterminer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordChartabilityDeterminer);
}

uint64_t dispatch thunk of MedicalRecordChartabilityDeterminer.determineChartability(for:records:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of MedicalRecordChartabilityDeterminer.determineChartability(for:chartPointRepresentables:chartSetSize:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))((*MEMORY[0x1E4FBC8C8] & *v4) + 0x60))(a1, a2, a3, a4 & 1);
}

uint64_t type metadata accessor for MedicalRecordChartableSeriesCollector()
{
  return self;
}

uint64_t method lookup function for MedicalRecordChartableSeriesCollector(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordChartableSeriesCollector);
}

uint64_t dispatch thunk of MedicalRecordChartableSeriesCollector.__allocating_init(chartDefining:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of MedicalRecordChartableSeriesCollector.collect(record:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of MedicalRecordChartableSeriesCollector.allUnits.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of MedicalRecordChartableSeriesCollector.chartDataSourceSeries(compatibleWith:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t method lookup function for MedicalRecordChartableSeries(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordChartableSeries);
}

uint64_t dispatch thunk of MedicalRecordChartableSeries.__allocating_init(chartDefining:chartableQuantities:unit:preferredColors:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of MedicalRecordChartableSeries.createDataSource(with:unit:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordChartableSeries.outOfRangeQuantitySets()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordChartableSeries.noRangeQuantitySets()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t sub_1C229882C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2298874(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2298A7C(255, a2, a3, a4, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C22988D8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C21AB51C(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C2298940()
{
  if (!qword_1EA2DFB18)
  {
    sub_1C22988D8(255, (unint64_t *)&qword_1EA2DE4C0, &qword_1EBB6F978, 0x1E4F2B1A0, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DFB18);
    }
  }
}

uint64_t sub_1C22989C4()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

unint64_t sub_1C22989D8()
{
  unint64_t result = qword_1EA2DFBE8;
  if (!qword_1EA2DFBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DFBE8);
  }
  return result;
}

uint64_t sub_1C2298A2C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 81, 7);
}

void sub_1C2298A7C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = a4(a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C2298AE0()
{
  unint64_t result = qword_1EA2DFC68;
  if (!qword_1EA2DFC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DFC68);
  }
  return result;
}

uint64_t sub_1C2298B34(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C2298B88()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 58, 7);
}

uint64_t sub_1C2298BC8(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C22988D8(255, a2, a3, a4, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t UnboundedCache.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_1C254F340();
  type metadata accessor for Box();
  swift_getTupleTypeMetadata2();
  sub_1C254F770();
  *(void *)&long long v23 = sub_1C254F300();
  *a4 = Box.__allocating_init(value:)((uint64_t)&v23);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  unint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = v8;
  uint64_t v10 = (void *)*MEMORY[0x1E4FB2650];
  long long v23 = 0u;
  long long v24 = 0u;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1C2299890;
  *(void *)(v11 + 24) = v9;
  uint64_t v12 = self;
  swift_retain();
  id v13 = v10;
  swift_retain();
  id v14 = objc_msgSend(v12, sel_defaultCenter);
  uint64_t v15 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  id v16 = sub_1C22998DC(v13, (uint64_t)&v23, v14, (uint64_t)sub_1C22998D4, v11, (char *)objc_allocWithZone(v15));

  swift_release();
  a4[4] = (uint64_t)v15;
  a4[1] = (uint64_t)v16;
  uint64_t v17 = (void *)*MEMORY[0x1E4FB2640];
  long long v23 = 0u;
  long long v24 = 0u;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1C2299890;
  *(void *)(v18 + 24) = v9;
  swift_retain();
  id v19 = v17;
  id v20 = objc_msgSend(v12, sel_defaultCenter);
  id v21 = sub_1C22998DC(v19, (uint64_t)&v23, v20, (uint64_t)sub_1C2299B04, v18, (char *)objc_allocWithZone(v15));

  swift_release();
  a4[8] = (uint64_t)v15;
  swift_release();
  uint64_t result = swift_release();
  a4[5] = (uint64_t)v21;
  return result;
}

uint64_t sub_1C2298EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    MEMORY[0x1F4188790](result);
    v8[2] = a2;
    v8[3] = a3;
    v8[4] = a4;
    Box.write<A>(with:)((uint64_t)sub_1C2299BD4, (uint64_t)v8, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC848]);
    return swift_release();
  }
  return result;
}

uint64_t UnboundedCache.subscript.getter()
{
  return Box.read<A>(with:)();
}

uint64_t UnboundedCache.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2299B20(a1, a2, a3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 8))(a2);
  uint64_t v6 = sub_1C2550100();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(a1, v6);
}

uint64_t sub_1C22990C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1C2550100();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v15 - v10;
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a3, v7);
  sub_1C254F340();
  return sub_1C254F360();
}

void (*UnboundedCache.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(void **a1, char a2)
{
  uint64_t v6 = malloc(0xC0uLL);
  *a1 = v6;
  v6[7] = a3;
  uint64_t v7 = *(void *)(a3 + 24);
  v6[15] = v3;
  v6[16] = v7;
  uint64_t v8 = sub_1C2550100();
  v6[17] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v6[18] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v6[19] = malloc(v10);
  uint64_t v11 = malloc(v10);
  uint64_t v12 = *(void *)(a3 + 16);
  v6[20] = v11;
  v6[21] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v13;
  v6[22] = v13;
  v6[23] = malloc(*(void *)(v13 + 64));
  (*(void (**)(void))(v14 + 16))();
  UnboundedCache.subscript.getter();
  return sub_1C22993B8;
}

void sub_1C22993B8(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    uint64_t v4 = v2[22];
    uint64_t v3 = (void *)v2[23];
    uint64_t v5 = (void *)v2[20];
    uint64_t v6 = v2[21];
    uint64_t v8 = v2[18];
    uint64_t v7 = (void *)v2[19];
    uint64_t v9 = v2[17];
    uint64_t v18 = v2[16];
    uint64_t v10 = v2[7];
    (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v7, v5, v9);
    v2[2] = v6;
    v2[3] = v18;
    v2[4] = *(void *)(v10 + 32);
    v2[5] = v3;
    v2[6] = v7;
    Box.write<A>(with:)((uint64_t)sub_1C229A210, (uint64_t)v2, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC848]);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    uint64_t v11 = *(void (**)(void *, uint64_t))(v8 + 8);
    v11(v7, v9);
    v11(v5, v9);
  }
  else
  {
    uint64_t v12 = v2[22];
    uint64_t v3 = (void *)v2[23];
    uint64_t v5 = (void *)v2[20];
    uint64_t v13 = v2[21];
    uint64_t v14 = v2[18];
    uint64_t v7 = (void *)v2[19];
    uint64_t v15 = v2[16];
    uint64_t v16 = v2[17];
    uint64_t v17 = v2[7];
    v2[10] = v13;
    v2[11] = v15;
    v2[12] = *(void *)(v17 + 32);
    v2[13] = v3;
    v2[14] = v5;
    Box.write<A>(with:)((uint64_t)sub_1C229A210, (uint64_t)(v2 + 8), MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC848]);
    (*(void (**)(void *, uint64_t))(v12 + 8))(v3, v13);
    (*(void (**)(void *, uint64_t))(v14 + 8))(v5, v16);
  }
  free(v3);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t UnboundedCache.removeValue(forKey:)(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[3];
  uint64_t v5 = sub_1C2550100();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v10[-v7];
  uint64_t v11 = a2[2];
  uint64_t v12 = v4;
  uint64_t v13 = a2[4];
  uint64_t v14 = a1;
  Box.write<A>(with:)((uint64_t)sub_1C2299B84, (uint64_t)v10, v5, (uint64_t)&v10[-v7]);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Void __swiftcall UnboundedCache.removeAll()()
{
  v1[1] = *(_OWORD *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  Box.write<A>(with:)((uint64_t)sub_1C2299BD4, (uint64_t)v1, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC848]);
}

uint64_t sub_1C22996E8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return UnboundedCache.init()(a1[2], a1[3], a1[4], a2);
}

uint64_t sub_1C22996FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2299B20(a1, a2, a3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 8))(a2);
  uint64_t v6 = sub_1C2550100();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(a1, v6);
}

void (*sub_1C22997A8(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = UnboundedCache.subscript.modify(v6, a2, a3);
  return sub_1C2231658;
}

uint64_t sub_1C2299820()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2299858()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C2299890()
{
  return sub_1C2298EE0(v0[5], v0[2], v0[3], v0[4]);
}

uint64_t sub_1C229989C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C22998D4(uint64_t a1)
{
  return sub_1C221B248(a1, *(uint64_t (**)(void))(v1 + 16));
}

id sub_1C22998DC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char *a6)
{
  uint64_t v30 = &type metadata for SyncTaskScheduler;
  char v31 = &protocol witness table for SyncTaskScheduler;
  swift_unknownObjectWeakInit();
  sub_1C21F4424((uint64_t)v29, (uint64_t)&a6[OBJC_IVAR____TtC15HealthRecordsUI24WeakNotificationObserver_scheduler]);
  uint64_t v12 = &a6[OBJC_IVAR____TtC15HealthRecordsUI24WeakNotificationObserver_block];
  *(void *)uint64_t v12 = a4;
  *((void *)v12 + 1) = a5;
  swift_unknownObjectWeakAssign();
  v28.receiver = a6;
  v28.super_class = (Class)type metadata accessor for WeakNotificationObserver();
  swift_retain();
  id v13 = objc_msgSendSuper2(&v28, sel_init);
  sub_1C224E4C4(a2, (uint64_t)v26);
  uint64_t v14 = v27;
  if (v27)
  {
    uint64_t v15 = __swift_project_boxed_opaque_existential_1Tm(v26, v27);
    uint64_t v16 = *(void *)(v14 - 8);
    MEMORY[0x1F4188790](v15);
    uint64_t v18 = (char *)&v26[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v16 + 16))(v18);
    id v19 = v13;
    id v20 = a1;
    uint64_t v21 = sub_1C2550860();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v14);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  }
  else
  {
    id v22 = v13;
    id v23 = a1;
    uint64_t v21 = 0;
  }
  objc_msgSend(a3, sel_addObserver_selector_name_object_, v13, sel_didReceiveWithNotification_, a1, v21);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
  sub_1C224E3A4(a2);
  return v13;
}

uint64_t sub_1C2299B04(uint64_t a1)
{
  return sub_1C221B270(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_1C2299B0C()
{
}

uint64_t sub_1C2299B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[1] = *(_OWORD *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 32);
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  return Box.write<A>(with:)((uint64_t)sub_1C229A210, (uint64_t)v4, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBC848]);
}

uint64_t sub_1C2299B84()
{
  return sub_1C254F2F0();
}

uint64_t sub_1C2299BD8()
{
  return UnboundedCache.subscript.getter();
}

uint64_t sub_1C2299C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UnboundedCache();
  return sub_1C2299B20(a1, a3, v5);
}

uint64_t sub_1C2299C80()
{
  return 24;
}

__n128 sub_1C2299C8C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t dispatch thunk of Cache.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Cache.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of Cache.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of Cache.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of Cache.removeValue(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of Cache.removeAll()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_1C2299D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_1C2299D20(uint64_t a1)
{
  uint64_t v2 = a1 + 40;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  return __swift_destroy_boxed_opaque_existential_1Tm(v2);
}

void *sub_1C2299D5C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2 + 1;
  uint64_t v5 = a2[4];
  a1[4] = v5;
  uint64_t v6 = **(void (***)(void *, void *, uint64_t))(v5 - 8);
  swift_retain();
  v6(a1 + 1, v4, v5);
  uint64_t v7 = a2[8];
  a1[8] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  return a1;
}

void *sub_1C2299E38(void *a1, void *a2)
{
  uint64_t v4 = a2 + 5;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_0(a1 + 1, a2 + 1);
  __swift_assign_boxed_opaque_existential_0(a1 + 5, v4);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        __n128 result = (uint64_t *)swift_release();
        uint64_t *v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *__n128 result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C229A0F8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_1C229A160(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C229A1A8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for UnboundedCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C229A210(uint64_t a1)
{
  return sub_1C22990C4(a1, v1[5], v1[6], v1[2]);
}

uint64_t sub_1C229A220()
{
  return sub_1C254F330();
}

uint64_t sub_1C229A264()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C229A2BC()
{
  return *(unsigned __int8 *)(v0 + qword_1EA2DFC80);
}

uint64_t sub_1C229A2CC(uint64_t result)
{
  *(unsigned char *)(v1 + qword_1EA2DFC80) = result;
  return result;
}

void sub_1C229A2DC(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1C229AEA0();
}

void sub_1C229A304()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for UDCListCollectionViewController();
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

    id v4 = objc_msgSend(v0, sel_collectionView);
    if (v4)
    {
      uint64_t v5 = v4;
      objc_msgSend(v4, sel_setPreservesSuperviewLayoutMargins_, 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C229A42C(void *a1)
{
  id v1 = a1;
  sub_1C229A304();
}

uint64_t sub_1C229A474(char a1)
{
  uint64_t v2 = v1;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for UDCListCollectionViewController();
  uint64_t result = (uint64_t)objc_msgSendSuper2(&v6, sel_viewDidAppear_, a1 & 1);
  uint64_t v5 = qword_1EA2DFC80;
  if (*((unsigned char *)v2 + qword_1EA2DFC80) == 1 && *((unsigned char *)v2 + qword_1EA2DFC78) == 2)
  {
    if (qword_1EBB6D840 != -1) {
      swift_once();
    }
    uint64_t result = sub_1C23CDD28(0, 0);
    uint64_t v5 = qword_1EA2DFC80;
  }
  *((unsigned char *)v2 + v5) = 0;
  return result;
}

void sub_1C229A580(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1C229A474(a3);
}

void sub_1C229A5D4(char a1, char a2)
{
  v27.receiver = v2;
  v27.super_class = (Class)type metadata accessor for UDCListCollectionViewController();
  objc_msgSendSuper2(&v27, sel_setEditing_animated_, a1 & 1, a2 & 1);
  id v5 = objc_msgSend(v2, sel_collectionView);
  if (!v5)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  objc_super v6 = v5;
  objc_msgSend(v5, sel_setEditing_, a1 & 1);

  id v7 = objc_msgSend(v2, sel_collectionView);
  if (!v7)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = v7;
  objc_msgSend(v7, sel_setAllowsSelection_, 1);

  id v9 = objc_msgSend(v2, sel_collectionView);
  if (!v9)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = v9;
  objc_msgSend(v9, sel_setAllowsMultipleSelection_, a1 & 1);

  id v11 = objc_msgSend(v2, sel_collectionView);
  if (!v11)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v12 = v11;
  objc_msgSend(v11, sel_setAllowsMultipleSelectionDuringEditing_, a1 & 1);

  id v13 = objc_msgSend(v2, sel_collectionView);
  if (!v13)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v14 = v13;
  id v15 = objc_msgSend(v13, sel_preparedCells);

  if (v15)
  {
    sub_1C220F054();
    unint64_t v16 = sub_1C254F710();

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1C2550620();
      if (v17) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v17)
      {
LABEL_9:
        if (v17 >= 1)
        {
          uint64_t v18 = 0;
          unint64_t v19 = v16 & 0xC000000000000001;
          do
          {
            if (v19) {
              id v20 = (id)MEMORY[0x1C87588E0](v18, v16);
            }
            else {
              id v20 = *(id *)(v16 + 8 * v18 + 32);
            }
            uint64_t v21 = v20;
            id v25 = v20;
            sub_1C21FFE74(0, &qword_1EA2DFD08);
            id v22 = v21;
            if (swift_dynamicCast())
            {
              sub_1C21F44EC(v23, (uint64_t)v26);
              __swift_project_boxed_opaque_existential_1Tm(v26, v26[3]);
              unint64_t v19 = v16 & 0xC000000000000001;
              sub_1C254D810();
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
            }
            else
            {
              uint64_t v24 = 0;
              memset(v23, 0, sizeof(v23));
              sub_1C229B07C((uint64_t)v23, &qword_1EA2DFD10, &qword_1EA2DFD08);
            }

            ++v18;
          }
          while (v17 != v18);
          goto LABEL_19;
        }
        __break(1u);
        goto LABEL_21;
      }
    }
LABEL_19:
    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_26:
  __break(1u);
}

void sub_1C229A94C(void *a1, uint64_t a2, char a3, char a4)
{
  id v6 = a1;
  sub_1C229A5D4(a3, a4);
}

void sub_1C229A9A8(void *a1)
{
  uint64_t v2 = (void *)sub_1C254CD30();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  id v3 = (void *)sub_1C254CD30();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    id v8 = v4;
    sub_1C220F054();
    sub_1C21FFE74(0, &qword_1EA2DE778);
    id v5 = v4;
    if (swift_dynamicCast())
    {
      sub_1C21F44EC(v6, (uint64_t)v9);
      __swift_project_boxed_opaque_existential_1Tm(v9, v9[3]);
      sub_1C254D8A0();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    }
    else
    {
      uint64_t v7 = 0;
      memset(v6, 0, sizeof(v6));

      sub_1C229B07C((uint64_t)v6, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);
    }
  }
}

uint64_t sub_1C229AB00(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C254CD90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CD40();
  id v9 = a3;
  id v10 = a1;
  sub_1C229A9A8(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C229ABFC(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = sub_1C254CD90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CD40();
  id v11 = a3;
  id v12 = a4;
  id v13 = a1;
  sub_1C229AF10(v11);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1C229AD60()
{
}

void sub_1C229AD90(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1C229B04C();
}

id sub_1C229AE0C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UDCListCollectionViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for UDCListCollectionViewController()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C229AEA0()
{
  v0[qword_1EA2DFC80] = 1;

  sub_1C25505F0();
  __break(1u);
}

void sub_1C229AF10(void *a1)
{
  objc_super v2 = (void *)sub_1C254CD30();
  id v3 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v2);

  if (v3)
  {
    id v7 = v3;
    sub_1C220F054();
    sub_1C21FFE74(0, &qword_1EA2DFD08);
    id v4 = v3;
    if (swift_dynamicCast())
    {
      sub_1C21F44EC(v5, (uint64_t)v8);
      __swift_project_boxed_opaque_existential_1Tm(v8, v8[3]);
      objc_msgSend(a1, sel_isEditing);
      sub_1C254D810();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
    }
    else
    {
      uint64_t v6 = 0;
      memset(v5, 0, sizeof(v5));

      sub_1C229B07C((uint64_t)v5, &qword_1EA2DFD10, &qword_1EA2DFD08);
    }
  }
}

void sub_1C229B04C()
{
}

uint64_t sub_1C229B07C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1C225EBC8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t HKChartableCodedQuantitySet.hasOutOfRangeQuantities.getter()
{
  return sub_1C229B0F0((SEL *)&selRef_isInRange);
}

uint64_t HKChartableCodedQuantitySet.hasNoRangeQuantities.getter()
{
  return sub_1C229B0F0((SEL *)&selRef_hasRange);
}

uint64_t sub_1C229B0F0(SEL *a1)
{
  id v3 = objc_msgSend(v1, sel_quantities);
  sub_1C226ACEC();
  unint64_t v4 = sub_1C254F710();

  if (v4 >> 62) {
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1C2550620())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87588E0](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      unsigned int v10 = [v7 *a1];

      if (v10)
      {
        ++v6;
        if (v9 != v5) {
          continue;
        }
      }
      uint64_t v11 = v10 ^ 1;
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  uint64_t v11 = 0;
LABEL_14:
  swift_bridgeObjectRelease_n();
  return v11;
}

uint64_t type metadata accessor for RecordAttachmentsDataSource()
{
  uint64_t result = qword_1EA2DFD38;
  if (!qword_1EA2DFD38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C229B264()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C229B2C0(void *a1, void *a2, void *a3)
{
  uint64_t v6 = (void *)(v3 + qword_1EA2DFD30);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(void *)(v3 + qword_1EA2DFD18) = a1;
  *(void *)(v3 + qword_1EA2DFD20) = a2;
  *(void *)(v3 + qword_1EA2DFD28) = a3;
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v10 = sub_1C254DF10();
  uint64_t v11 = *(void **)(v10 + qword_1EA2DFD18);
  uint64_t v12 = *(void *)(v10 + qword_1EA2DFD20);
  uint64_t v13 = *(void *)(v10 + qword_1EA2DFD28);
  v17[4] = sub_1C229C474;
  v17[5] = v10;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  v17[2] = sub_1C229C0A4;
  v17[3] = &block_descriptor_23;
  uint64_t v14 = _Block_copy(v17);
  swift_retain_n();
  id v15 = v11;
  swift_release();
  objc_msgSend(v15, sel_fetchAttachmentItemsWithHealthRecordsStore_conceptStore_completion_, v12, v13, v14);
  _Block_release(v14);
  swift_release();

  return v10;
}

uint64_t sub_1C229B460()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DA90();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C229B534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a2;
  uint64_t v59 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  unint64_t v58 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254D9B0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)v44 - v14;
  uint64_t v57 = *(void *)(a1 + 16);
  if (v57)
  {
    uint64_t v45 = a3;
    uint64_t v46 = a4;
    uint64_t v55 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v56 = a1 + 32;
    long long v54 = (void (**)(char *, char *, uint64_t))(v10 + 16);
    uint64_t v53 = v10 + 32;
    uint64_t v52 = v10 + 8;
    v44[1] = a1;
    swift_bridgeObjectRetain();
    unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v17 = 0;
    unint64_t v61 = MEMORY[0x1E4FBC860];
    uint64_t v51 = v9;
    uint64_t v50 = v10;
    uint64_t v49 = v12;
    unint64_t v48 = v15;
    while (1)
    {
      uint64_t v60 = v17;
      unint64_t v18 = *(void *)(v56 + 8 * v17);
      char v68 = v16;
      if (v18 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v19 = sub_1C2550620();
        swift_bridgeObjectRelease();
        if (v19)
        {
LABEL_5:
          unint64_t v62 = v18 & 0xC000000000000001;
          uint64_t v20 = 4;
          while (1)
          {
            id v21 = v62 ? (id)MEMORY[0x1C87588E0](v20 - 4, v18) : *(id *)(v18 + 8 * v20);
            id v22 = v21;
            uint64_t v23 = v20 - 3;
            if (__OFADD__(v20 - 4, 1)) {
              break;
            }
            uint64_t v67 = v21;
            sub_1C229BB7C(&v67, (uint64_t)&v63);

            if (v64)
            {
              sub_1C21F44EC(&v63, (uint64_t)v66);
              sub_1C21F44EC(v66, (uint64_t)&v63);
              uint64_t v24 = v68;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                uint64_t v24 = sub_1C226CD5C(0, v24[2] + 1, 1, v24);
                char v68 = v24;
              }
              uint64_t v25 = v19;
              unint64_t v27 = v24[2];
              unint64_t v26 = v24[3];
              if (v27 >= v26 >> 1) {
                char v68 = sub_1C226CD5C((void *)(v26 > 1), v27 + 1, 1, v24);
              }
              uint64_t v29 = v64;
              uint64_t v28 = v65;
              uint64_t v30 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v63, v64);
              __n128 v31 = MEMORY[0x1F4188790](v30);
              unint64_t v33 = (char *)v44 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
              (*(void (**)(char *, __n128))(v34 + 16))(v33, v31);
              sub_1C2507304(v27, (uint64_t)v33, (uint64_t *)&v68, v29, v28);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v63);
              uint64_t v19 = v25;
            }
            else
            {
              sub_1C2227100((uint64_t)&v63);
            }
            ++v20;
            if (v23 == v19)
            {
              swift_bridgeObjectRelease_n();
              uint64_t v9 = v51;
              uint64_t v10 = v50;
              uint64_t v12 = v49;
              id v15 = v48;
              goto LABEL_21;
            }
          }
          __break(1u);
          swift_bridgeObjectRelease();

          uint64_t result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
      }
      else
      {
        uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v19) {
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_21:
      char v35 = v58;
      sub_1C254CB30();
      sub_1C254CAF0();
      (*v55)(v35, v59);
      sub_1C254D990();
      (*v54)(v12, v15, v9);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v36 = v61;
      }
      else {
        unint64_t v36 = sub_1C226D014(0, *(void *)(v61 + 16) + 1, 1, v61);
      }
      unint64_t v38 = *(void *)(v36 + 16);
      unint64_t v37 = *(void *)(v36 + 24);
      if (v38 >= v37 >> 1) {
        unint64_t v36 = sub_1C226D014(v37 > 1, v38 + 1, 1, v36);
      }
      uint64_t v39 = v60 + 1;
      *(void *)(v36 + 16) = v38 + 1;
      unint64_t v40 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      unint64_t v61 = v36;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v36 + v40 + *(void *)(v10 + 72) * v38, v12, v9);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      uint64_t v17 = v39;
      unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
      if (v39 == v57)
      {
        swift_bridgeObjectRelease();
        a4 = v46;
        a3 = v45;
        uint64_t v41 = v47;
        goto LABEL_29;
      }
    }
  }
  uint64_t v41 = v47;
LABEL_29:
  long long v42 = (void *)(a4 + qword_1EA2DFD30);
  void *v42 = v41;
  v42[1] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C254DA10();
  return swift_bridgeObjectRelease();
}

id sub_1C229BB7C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_1C2201F2C();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255CDA0;
  *(void *)(v4 + 32) = sub_1C254F470();
  *(void *)(v4 + 40) = v5;
  id result = objc_msgSend(v3, sel_title);
  if (!result)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v7 = result;
  id v8 = objc_msgSend(result, sel_removeSpecialCharactersAndWhiteSpaces);

  uint64_t v9 = sub_1C254F470();
  uint64_t v11 = v10;

  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  *(void *)(v4 + 48) = v9;
  *(void *)(v4 + 56) = v11;
  uint64_t v12 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v13 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v13)
  {
    uint64_t v14 = sub_1C254F470();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  id v17 = objc_msgSend(v3, sel_displayItemType);
  if (v17 != (id)17)
  {
    if (v17 != (id)15)
    {
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return (id)swift_bridgeObjectRelease();
    }
    id result = objc_msgSend(v3, sel_title);
    if (result)
    {
      unint64_t v18 = result;
      uint64_t v19 = sub_1C254F470();
      uint64_t v21 = v20;

      id v22 = objc_msgSend(v3, sel_subtitle);
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v24 = sub_1C254F470();
        uint64_t v26 = v25;
      }
      else
      {
        uint64_t v24 = 0;
        uint64_t v26 = 0;
      }
      uint64_t v46 = type metadata accessor for TitleSubtitleDetailItem(0);
      uint64_t v47 = (void *)swift_allocObject();
      sub_1C254CB30();
      v47[2] = v19;
      v47[3] = v21;
      uint64_t v48 = MEMORY[0x1E4FBC860];
      v47[4] = v24;
      v47[5] = v26;
      v47[6] = 0;
      v47[7] = v48;
      v47[8] = v14;
      v47[9] = v16;
      *(void *)(a2 + 24) = v46;
      id result = (id)sub_1C229C4E8(&qword_1EA2DF188, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItem);
      *(void *)(a2 + 32) = result;
      *(void *)a2 = v47;
      return result;
    }
    goto LABEL_24;
  }
  unsigned int v27 = objc_msgSend(v3, sel_showSpinner);
  id result = objc_msgSend(v3, sel_title);
  uint64_t v28 = result;
  if (v27)
  {
    if (result)
    {
      uint64_t v29 = sub_1C254F470();
      uint64_t v31 = v30;

      id result = objc_msgSend(v3, sel_attributedSubtitle);
      if (result)
      {
        uint64_t v32 = result;
        id v33 = objc_msgSend(result, sel_string);

        uint64_t v34 = sub_1C254F470();
        uint64_t v36 = v35;

        uint64_t v37 = type metadata accessor for TitleSubtitleDetailItemWithSpinner(0);
        unint64_t v38 = (void *)swift_allocObject();
        sub_1C254CB30();
        void v38[2] = v29;
        v38[3] = v31;
        v38[4] = v34;
        v38[5] = v36;
        v38[6] = v14;
        v38[7] = v16;
        *(void *)(a2 + 24) = v37;
        id result = (id)sub_1C229C4E8(&qword_1EA2DFD48, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItemWithSpinner);
        *(void *)(a2 + 32) = result;
        *(void *)a2 = v38;
        return result;
      }
      goto LABEL_26;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (!result)
  {
LABEL_27:
    __break(1u);
    return result;
  }
  uint64_t v39 = sub_1C254F470();
  uint64_t v53 = v40;

  id v41 = objc_msgSend(v3, sel_subtitle);
  if (v41)
  {
    long long v42 = v41;
    uint64_t v43 = sub_1C254F470();
    uint64_t v45 = v44;
  }
  else
  {
    uint64_t v43 = 0;
    uint64_t v45 = 0;
  }
  id v49 = objc_msgSend(v3, sel_attributedSubtitle);
  uint64_t v50 = type metadata accessor for TitleSubtitleDetailItem(0);
  uint64_t v51 = (void *)swift_allocObject();
  sub_1C254CB30();
  v51[2] = v39;
  v51[3] = v53;
  uint64_t v52 = MEMORY[0x1E4FBC860];
  v51[4] = v43;
  v51[5] = v45;
  v51[6] = v49;
  v51[7] = v52;
  v51[8] = v14;
  v51[9] = v16;
  *(void *)(a2 + 24) = v50;
  id result = (id)sub_1C229C4E8(&qword_1EA2DF188, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItem);
  *(void *)(a2 + 32) = result;
  *(void *)a2 = v51;
  return result;
}

void sub_1C229C040()
{
}

void sub_1C229C05C()
{
}

void sub_1C229C078()
{
}

uint64_t sub_1C229C0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  sub_1C229C484(0, (unint64_t *)&qword_1EA2DF648, (uint64_t (*)(uint64_t))sub_1C224F52C, MEMORY[0x1E4FBB320]);
  uint64_t v5 = sub_1C254F710();
  if (a3)
  {
    uint64_t v6 = sub_1C254F470();
    a3 = v7;
  }
  else
  {
    uint64_t v6 = 0;
  }
  swift_retain();
  v4(v5, v6, a3);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C229C180()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C229C1E4()
{
  uint64_t v0 = sub_1C254DF40();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C229C268()
{
  return type metadata accessor for RecordAttachmentsDataSource();
}

uint64_t sub_1C229C270@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1C254E890();
  MEMORY[0x1F4188790](v3 - 8);
  if (!*(void *)(v1 + qword_1EA2DFD30 + 8))
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C254E810();
  uint64_t v5 = sub_1C254D2A0();
  swift_allocObject();
  uint64_t v6 = sub_1C254D280();
  a1[3] = v5;
  uint64_t result = sub_1C229C4E8((unint64_t *)&qword_1EBB6E7D8, MEMORY[0x1E4F66208]);
  a1[4] = result;
  *a1 = v6;
  return result;
}

uint64_t sub_1C229C450@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C229C270(a1);
}

uint64_t sub_1C229C474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C229B534(a1, a2, a3, v3);
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

void sub_1C229C484(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C229C4E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MedicalRecordTimelineAccountReconnectItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C229C560()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  sub_1C254CB20();

  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v7[0] = 0xD000000000000011;
  v7[1] = 0x80000001C25792E0;
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v7[0];
}

uint64_t static MedicalRecordTimelineAccountReconnectItem.== infix(_:_:)()
{
  return sub_1C254FF70() & 1;
}

uint64_t MedicalRecordTimelineAccountReconnectItem.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineAccountReconnectItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C229C760()
{
  return sub_1C229C560();
}

uint64_t sub_1C229C874(uint64_t a1, void *a2)
{
  sub_1C2227014(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI45MedicalRecordTimelineAccountReconnectItemCell_item;
  swift_beginAccess();
  sub_1C2232E74((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C229C8E8();
  return sub_1C2227100((uint64_t)v5);
}

uint64_t sub_1C229C8E8()
{
  uint64_t v1 = sub_1C254E890();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC15HealthRecordsUI45MedicalRecordTimelineAccountReconnectItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v5, (uint64_t)v26);
  if (!v27) {
    return sub_1C2227100((uint64_t)v26);
  }
  sub_1C22270A8();
  type metadata accessor for MedicalRecordTimelineAccountReconnectItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v22 = v25;
    id v7 = objc_msgSend(*(id *)(v25 + 16), sel_state, v25);
    MEMORY[0x1C87582A0]();
    uint64_t v23 = v2;
    id v24 = v7;
    if (v7 == (id)6)
    {
      if (qword_1EBB6EF40 == -1)
      {
LABEL_8:
        id v8 = (id)qword_1EBB6FBC8;
        swift_bridgeObjectRetain();
        sub_1C254C730();
        swift_bridgeObjectRelease();

        sub_1C254E860();
        uint64_t v9 = self;
        uint64_t v10 = *MEMORY[0x1E4FB2950];
        double v11 = *MEMORY[0x1E4FB09D8];
        uint64_t result = (uint64_t)objc_msgSend(v9, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E4FB2950], *MEMORY[0x1E4FB09D8]);
        if (!result)
        {
          __break(1u);
          goto LABEL_19;
        }
        uint64_t v12 = (void (*)(uint64_t *, void))sub_1C254E7A0();
        sub_1C254E770();
        v12(v26, 0);
        id v13 = self;
        id v14 = objc_msgSend(v13, sel_labelColor);
        uint64_t v15 = (void (*)(uint64_t *, void))sub_1C254E7A0();
        sub_1C254E780();
        v15(v26, 0);
        if (v24 == (id)6)
        {
          if (qword_1EBB6EF40 == -1)
          {
LABEL_13:
            id v16 = (id)qword_1EBB6FBC8;
            swift_bridgeObjectRetain();
            sub_1C254C730();
            swift_bridgeObjectRelease();

            sub_1C254E740();
            uint64_t result = (uint64_t)objc_msgSend(v9, sel__preferredFontForTextStyle_weight_, v10, v11);
            if (result)
            {
              id v17 = (void (*)(uint64_t *, void))sub_1C254E7F0();
              sub_1C254E770();
              v17(v26, 0);
              id v18 = objc_msgSend(v13, sel_systemBlueColor);
              uint64_t v19 = (void (*)(uint64_t *, void))sub_1C254E7F0();
              sub_1C254E780();
              v19(v26, 0);
              uint64_t v27 = v1;
              uint64_t v28 = MEMORY[0x1E4FB0F88];
              boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
              uint64_t v21 = v23;
              (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 16))(boxed_opaque_existential_1, v4, v1);
              MEMORY[0x1C8758230](v26);
              swift_release();
              return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v4, v1);
            }
LABEL_19:
            __break(1u);
            return result;
          }
        }
        else if (qword_1EBB6EF40 == -1)
        {
          goto LABEL_13;
        }
        swift_once();
        goto LABEL_13;
      }
    }
    else if (qword_1EBB6EF40 == -1)
    {
      goto LABEL_8;
    }
    swift_once();
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_1C229CE80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI45MedicalRecordTimelineAccountReconnectItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C229CED4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI45MedicalRecordTimelineAccountReconnectItemCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C229C8E8();
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C229CF44(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C229CFA4;
}

uint64_t sub_1C229CFA4(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C229C8E8();
  }
  return result;
}

void sub_1C229CFD8(uint64_t a1, void *a2)
{
}

uint64_t sub_1C229CFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  long long v6[2] = a4;
  sub_1C254F820();
  v6[5] = sub_1C254F810();
  uint64_t v8 = sub_1C254F7D0();
  v6[6] = v8;
  v6[7] = v7;
  return MEMORY[0x1F4188298](sub_1C229D07C, v8, v7);
}

uint64_t sub_1C229D07C()
{
  uint64_t v1 = *(void *)(v0[3] + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  void *v2 = v0;
  v2[1] = sub_1C229D120;
  uint64_t v3 = v0[4];
  return ClinicalAccountManager.startRelogin(to:from:)(v1, v3);
}

uint64_t sub_1C229D120()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return MEMORY[0x1F4188298](sub_1C229D240, v3, v2);
}

uint64_t sub_1C229D240()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id MedicalRecordTimelineAccountReconnectItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountReconnectItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C229D2E4(uint64_t a1, void *a2)
{
}

void sub_1C229D30C(void *a1)
{
  sub_1C2263B30(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v19 - v4;
  uint64_t v6 = v1 + OBJC_IVAR____TtC15HealthRecordsUI45MedicalRecordTimelineAccountReconnectItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v6, (uint64_t)v21);
  if (v21[3])
  {
    sub_1C22270A8();
    type metadata accessor for MedicalRecordTimelineAccountReconnectItem();
    uint64_t v7 = swift_dynamicCast();
    if (v7)
    {
      uint64_t v8 = v20;
      if (qword_1EBB6EF30 != -1) {
        uint64_t v7 = swift_once();
      }
      uint64_t v20 = *(void *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_lock);
      MEMORY[0x1F4188790](v7);
      *(&v19 - 2) = v9;
      sub_1C254CEE0();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
      sub_1C229D8E0((unint64_t *)&qword_1EBB6F240, 255, MEMORY[0x1E4F66F68]);
      swift_retain();
      sub_1C254E1D0();
      swift_release();
      uint64_t v10 = (void *)v21[0];
      type metadata accessor for ClinicalAccountManager();
      double v11 = (void *)swift_allocObject();
      uint64_t v12 = MEMORY[0x1E4FBC870];
      v11[5] = 0;
      v11[6] = 0;
      v11[4] = v12;
      v11[2] = v10;
      id v13 = v10;
      v11[3] = objc_msgSend(v13, sel_clinicalAccountStore);
      uint64_t v14 = sub_1C254F840();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 1, 1, v14);
      sub_1C254F820();
      swift_retain();
      swift_retain();
      id v15 = a1;
      uint64_t v16 = sub_1C254F810();
      id v17 = (void *)swift_allocObject();
      uint64_t v18 = MEMORY[0x1E4FBCFD8];
      v17[2] = v16;
      v17[3] = v18;
      v17[4] = v11;
      v17[5] = v8;
      void v17[6] = v15;
      sub_1C24D0A0C((uint64_t)v5, (uint64_t)&unk_1EA2DFD68, (uint64_t)v17);
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v21);
  }
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountReconnectItemCell()
{
  return self;
}

uint64_t sub_1C229D678(uint64_t a1, uint64_t a2)
{
  return sub_1C229D8E0(&qword_1EA2DFD58, a2, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountReconnectItem);
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountReconnectItem()
{
  return self;
}

uint64_t sub_1C229D6E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI45MedicalRecordTimelineAccountReconnectItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineAccountReconnectItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineAccountReconnectItem);
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t method lookup function for MedicalRecordTimelineAccountReconnectItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineAccountReconnectItemCell);
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItemCell.didSelectCell(_:in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountReconnectItemCell.deselectionBehavior.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t sub_1C229D8E0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C229D928()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C229D978(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1C222399C;
  return sub_1C229CFE0(a1, v4, v5, v6, v7, v8);
}

void __swiftcall UILabel.init(font:numberOfLines:textColor:)(UILabel *__return_ptr retstr, UIFont_optional font, Swift::Int numberOfLines, UIColor textColor)
{
  uint64_t v5 = *(void *)&font.is_nil;
  Class isa = font.value.super.isa;
  id v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v7, sel_setFont_, isa);
  objc_msgSend(v7, sel_setNumberOfLines_, v5);
  objc_msgSend(v7, sel_setTextColor_, numberOfLines);
}

BOOL UILabel.isEmpty.getter()
{
  id v1 = objc_msgSend(v0, sel_text);
  if (!v1) {
    return 1;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C254F470();
  unint64_t v5 = v4;

  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  return v6 == 0;
}

uint64_t type metadata accessor for UDCOlderOtherLabsDataSource()
{
  uint64_t result = qword_1EA2DFD70;
  if (!qword_1EA2DFD70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C229DBB0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C229DBF0(unsigned __int8 *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v52 = a5;
  id v50 = a3;
  sub_1C229E5AC(0, &qword_1EA2DFD80, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v49 - v8;
  uint64_t v10 = *a1;
  sub_1C254D110();
  uint64_t v11 = (void *)MEMORY[0x1C87555F0]();
  uint64_t v12 = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  id v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C229E5AC(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C255CDA0;
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v16 = sub_1C220D950();
  strcpy((char *)(v14 + 32), "pluginPackage");
  *(_WORD *)(v14 + 46) = -4864;
  *(void *)(v14 + 96) = v15;
  *(void *)(v14 + 104) = v16;
  *(void *)(v14 + 64) = v16;
  *(void *)(v14 + 72) = 0xD000000000000025;
  *(void *)(v14 + 80) = 0x80000001C2578100;
  uint64_t v51 = v12;
  id v17 = (void *)sub_1C254F9A0();
  sub_1C229E5AC(0, &qword_1EA2DF320, MEMORY[0x1E4F67030], v13);
  uint64_t v18 = sub_1C254CEF0();
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = swift_allocObject();
  long long v49 = xmmword_1C255CD90;
  *(_OWORD *)(v21 + 16) = xmmword_1C255CD90;
  (*(void (**)(unint64_t, void, uint64_t))(v19 + 104))(v21 + v20, *MEMORY[0x1E4F66FC8], v18);
  switch(v10)
  {
    case 1:
      uint64_t v22 = sub_1C254D000();
      break;
    case 2:
      uint64_t v22 = sub_1C254D010();
      break;
    case 3:
      uint64_t v22 = sub_1C254D030();
      break;
    default:
      uint64_t v22 = sub_1C254D020();
      break;
  }
  uint64_t v24 = v22;
  uint64_t v25 = v23;
  uint64_t v26 = sub_1C254C520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v9, 1, 1, v26);
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = v49;
  *(void *)(v27 + 32) = a4;
  id v28 = a4;
  uint64_t v29 = (void *)MEMORY[0x1C87555D0](v21, v24, v25, v9, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C229E610((uint64_t)v9);
  uint64_t v30 = (void *)_s14HealthPlatform8FeedItemC0A9RecordsUIE035predicateForPinnedUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0O0OSg_AA06SourceQ0OtFZ_0();
  uint64_t v31 = self;
  id v32 = objc_msgSend(v31, sel_notPredicateWithSubpredicate_, v30);

  uint64_t v53 = MEMORY[0x1E4FBC860];
  id v33 = v50;
  id v34 = v17;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v35 = v29;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v36 = v32;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v37 = v33;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();

  unint64_t v38 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v39 = objc_msgSend(v31, sel_andPredicateWithSubpredicates_, v38);

  objc_msgSend(v11, sel_setPredicate_, v39);
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1C255CEB0;
  id v41 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  long long v42 = (void *)sub_1C254F430();
  id v43 = objc_msgSend(v41, sel_initWithKey_ascending_selector_, v42, 1, sel_localizedStandardCompare_);

  *(void *)(v40 + 32) = v43;
  uint64_t v53 = v40;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  uint64_t v44 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setSortDescriptors_, v44);

  id v45 = objc_allocWithZone(MEMORY[0x1E4F1C0F0]);
  uint64_t v46 = v52;
  objc_msgSend(v45, sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v11, v52, 0, 0);
  uint64_t v47 = sub_1C254DFA0();

  return v47;
}

void sub_1C229E2CC()
{
}

id sub_1C229E2FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UDCOlderOtherLabsDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C229E334()
{
  return type metadata accessor for UDCOlderOtherLabsDataSource();
}

void sub_1C229E33C()
{
}

void sub_1C229E354()
{
  uint64_t v0 = sub_1C254D7E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C254D440();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(self, sel_sharedBehavior);
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_features);

  if (!v10)
  {
LABEL_9:
    __break(1u);
    return;
  }
  unsigned int v11 = objc_msgSend(v10, sel_stanley);

  if (v11)
  {
    sub_1C254D420();
    uint64_t v12 = v15[1];
    uint64_t v13 = sub_1C254D410();
    if (v12)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      uint64_t v14 = (void *)v13;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      objc_msgSend(v14, sel_setContentInsets_, 20.0, 0.0, 0.0, 0.0);
    }
  }
  else
  {
    sub_1C254D790();
    sub_1C254D710();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

void sub_1C229E5AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C229E610(uint64_t a1)
{
  sub_1C229E5AC(0, &qword_1EA2DFD80, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id SingleValueChartConfiguration.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

unint64_t sub_1C229E6FC()
{
  return sub_1C229E704();
}

unint64_t sub_1C229E704()
{
  unint64_t result = qword_1EA2DFD88;
  if (!qword_1EA2DFD88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DFD88);
  }
  return result;
}

uint64_t sub_1C229E784()
{
  type metadata accessor for SingleValueDataTransformer();
  return swift_allocObject();
}

id SingleValueChartConfiguration.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SingleValueChartConfiguration();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for SingleValueChartConfiguration()
{
  return self;
}

id SingleValueChartConfiguration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SingleValueChartConfiguration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for SingleValueChartConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SingleValueChartConfiguration);
}

uint64_t dispatch thunk of SingleValueChartConfiguration.chartControllerClass.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of SingleValueChartConfiguration.shouldShowOutOfRangeOverlay.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of SingleValueChartConfiguration.dataTransformer.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t type metadata accessor for ClinicalSharingOnboardingSelectedDataTypesDataSource()
{
  uint64_t result = qword_1EA2DFD98;
  if (!qword_1EA2DFD98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C229E984()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C229E9D4(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1C2550490();
    uint64_t result = sub_1C24BBB28(v1);
    uint64_t v5 = result;
    uint64_t v6 = 0;
    uint64_t v7 = v1 + 64;
    uint64_t v24 = v1 + 80;
    uint64_t v25 = v2;
    uint64_t v27 = v1 + 64;
    uint64_t v28 = v1;
    int v26 = v4;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v1 + 32))
    {
      unint64_t v9 = (unint64_t)v5 >> 6;
      if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
        goto LABEL_27;
      }
      if (*(_DWORD *)(v1 + 36) != v4) {
        goto LABEL_28;
      }
      uint64_t v29 = v6;
      id v10 = (uint64_t *)(*(void *)(v1 + 48) + 32 * v5);
      unint64_t v11 = v10[1];
      uint64_t v12 = (void *)v10[2];
      uint64_t v13 = (void *)v10[3];
      uint64_t v14 = *(void *)(*(void *)(v1 + 56) + 8 * v5);
      if (v11) {
        uint64_t v15 = *v10;
      }
      else {
        uint64_t v15 = 0;
      }
      unint64_t v16 = 0xE000000000000000;
      if (v11) {
        unint64_t v16 = v11;
      }
      uint64_t v30 = v16;
      type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
      swift_allocObject();
      id v17 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v18 = v12;
      sub_1C22A0DF4(v15, v30, v12, v13, v14, 0, 0, 0);
      sub_1C2550460();
      sub_1C25504A0();
      uint64_t v1 = v28;
      sub_1C25504B0();
      uint64_t result = sub_1C2550470();
      int64_t v8 = 1 << *(unsigned char *)(v28 + 32);
      if (v5 >= v8) {
        goto LABEL_29;
      }
      uint64_t v7 = v27;
      uint64_t v19 = *(void *)(v27 + 8 * v9);
      if ((v19 & (1 << v5)) == 0) {
        goto LABEL_30;
      }
      int v4 = v26;
      if (*(_DWORD *)(v28 + 36) != v26) {
        goto LABEL_31;
      }
      unint64_t v20 = v19 & (-2 << (v5 & 0x3F));
      if (v20)
      {
        int64_t v8 = __clz(__rbit64(v20)) | v5 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v21 = v9 + 1;
        unint64_t v22 = (unint64_t)(v8 + 63) >> 6;
        if (v9 + 1 < v22)
        {
          unint64_t v23 = *(void *)(v27 + 8 * v21);
          if (v23)
          {
LABEL_23:
            int64_t v8 = __clz(__rbit64(v23)) + (v21 << 6);
          }
          else
          {
            while (v22 - 2 != v9)
            {
              unint64_t v23 = *(void *)(v24 + 8 * v9++);
              if (v23)
              {
                unint64_t v21 = v9 + 1;
                goto LABEL_23;
              }
            }
          }
        }
      }
      uint64_t v6 = v29 + 1;
      uint64_t v5 = v8;
      if (v29 + 1 == v25) {
        return v31;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  return result;
}

uint64_t sub_1C229EC3C(void *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = self;
  swift_retain();
  id v7 = objc_msgSend(v6, sel_sharedInstanceForHealthStore_, a1);
  unint64_t v20 = sub_1C220403C(MEMORY[0x1E4FBC860]);
  uint64_t v8 = *(void *)(a2 + 16);
  if (v8)
  {
    uint64_t v9 = *(void *)(type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() - 8);
    uint64_t v10 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C229EF54(v10, (uint64_t)v7, (uint64_t *)&v20, v5);
      v10 += v11;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = swift_bridgeObjectRetain();
  unint64_t v13 = sub_1C229E9D4(v12);
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v2 + qword_1EA2DFD90) = v13;
  if ((v13 & 0x8000000000000000) != 0 || (v13 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    unint64_t v14 = (unint64_t)sub_1C228F9C0(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v14 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  unint64_t v19 = v14;
  sub_1C229F8A4((uint64_t *)&v19);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C228A5C4(v19);
  swift_release();
  uint64_t v15 = sub_1C254DD00();
  unint64_t v16 = *(void *)(v15 + qword_1EA2DFD90);
  if (!(v16 >> 62))
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_11;
    }
LABEL_16:
    swift_bridgeObjectRelease();

    swift_release();
    swift_bridgeObjectRelease();
    return v15;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  if (!sub_1C2550620()) {
    goto LABEL_16;
  }
LABEL_11:
  if ((v16 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C87588E0](0, v16);
    goto LABEL_14;
  }
  if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_14:
    swift_bridgeObjectRelease();
    type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
    sub_1C254D660();
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
    return v15;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C229EF54(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v54 = a4;
  uint64_t v8 = sub_1C254E560();
  id v55 = *(id *)(v8 - 8);
  uint64_t v56 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v53 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v51 - v16;
  MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v51 - v18;
  sub_1C22667C4(a1, (uint64_t)&v51 - v18);
  v19[48] = 0;
  if (a2 && (uint64_t v20 = sub_1C24B686C(a1 + *(int *)(v11 + 48)), v21 != 1))
  {
    uint64_t v34 = v21;
    id v55 = v22;
    uint64_t v56 = v20;
    uint64_t v35 = *a3;
    uint64_t v36 = *(void *)(*a3 + 16);
    id v51 = v23;
    uint64_t v52 = v4;
    if (v36)
    {
      id v37 = v23;
      id v38 = v23;
      swift_bridgeObjectRetain();
      id v39 = v55;
      id v40 = v55;
      unint64_t v41 = sub_1C24574AC(v56, v34, v39, v37);
      if (v42)
      {
        uint64_t v43 = *(void *)(*(void *)(v35 + 56) + 8 * v41);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v43 = MEMORY[0x1E4FBC860];
      }

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v43 = MEMORY[0x1E4FBC860];
    }
    sub_1C22667C4((uint64_t)v19, (uint64_t)v14);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v43 = sub_1C226C100(0, *(void *)(v43 + 16) + 1, 1, v43);
    }
    unint64_t v45 = *(void *)(v43 + 16);
    unint64_t v44 = *(void *)(v43 + 24);
    if (v45 >= v44 >> 1) {
      uint64_t v43 = sub_1C226C100(v44 > 1, v45 + 1, 1, v43);
    }
    *(void *)(v43 + 16) = v45 + 1;
    sub_1C2266760((uint64_t)v14, v43+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * v45);
    id v46 = v51;
    id v47 = v51;
    swift_bridgeObjectRetain();
    id v48 = v55;
    id v49 = v55;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v57 = *a3;
    *a3 = 0x8000000000000000;
    sub_1C236532C(v43, v56, v34, v48, v46, isUniquelyReferenced_nonNull_native);
    *a3 = v57;

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return sub_1C2266828((uint64_t)v19);
  }
  else
  {
    sub_1C254E510();
    sub_1C22667C4(a1, (uint64_t)v17);
    uint64_t v24 = sub_1C254E550();
    os_log_type_t v25 = sub_1C254FA40();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v59 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v28 = sub_1C2550AA0();
      uint64_t v52 = v4;
      uint64_t v57 = sub_1C21AD354(v28, v29, &v59);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      uint64_t v30 = *((void *)v17 + 8);
      uint64_t v57 = *((void *)v17 + 7);
      uint64_t v58 = v30;
      sub_1C22A0824();
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1C254F4F0();
      uint64_t v57 = sub_1C21AD354(v31, v32, &v59);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      sub_1C2266828((uint64_t)v17);
      _os_log_impl(&dword_1C21A1000, v24, v25, "[%s] Could not get display configuration for identifier: %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v27, -1, -1);
      MEMORY[0x1C875A0B0](v26, -1, -1);
    }
    else
    {

      sub_1C2266828((uint64_t)v17);
    }
    (*((void (**)(char *, uint64_t))v55 + 1))(v10, v56);
    return sub_1C2266828((uint64_t)v19);
  }
}

uint64_t sub_1C229F464(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = (uint64_t *)(*a1 + qword_1EA2DFDC0);
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  id v48 = v3;
  uint64_t v6 = self;
  swift_bridgeObjectRetain();
  id v7 = &selRef_setActionTitle_;
  id v8 = objc_msgSend(v6, sel_categoryWithID_, 15);
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, sel_displayName);

    uint64_t v11 = sub_1C254F470();
    uint64_t v13 = v12;

    if (v5 == v11 && v4 == v13)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    char v15 = sub_1C2550870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v7 = &selRef_setActionTitle_;
    if (v15) {
      return 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = (uint64_t *)(v2 + qword_1EA2DFDC0);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  swift_bridgeObjectRetain();
  id v19 = objc_msgSend(v6, v7[385], 14);
  if (v19)
  {
    uint64_t v20 = v19;
    id v21 = objc_msgSend(v19, sel_displayName);

    uint64_t v22 = sub_1C254F470();
    uint64_t v24 = v23;

    if (v18 == v22 && v17 == v24)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    char v26 = sub_1C2550870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v7 = &selRef_setActionTitle_;
    if (v26) {
      return 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = *v16;
  uint64_t v28 = v16[1];
  swift_bridgeObjectRetain();
  id v30 = objc_msgSend(v6, v7[385], 15);
  if (v30)
  {
    uint64_t v31 = v30;
    unint64_t v32 = v7;
    id v33 = objc_msgSend(v30, sel_displayName);

    uint64_t v34 = sub_1C254F470();
    uint64_t v36 = v35;

    if (v29 == v34 && v28 == v36) {
      goto LABEL_31;
    }
    char v38 = sub_1C2550870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    id v7 = v32;
    if (v38) {
      return result;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v40 = *v48;
  uint64_t v39 = v48[1];
  swift_bridgeObjectRetain();
  id v41 = objc_msgSend(v6, v7[385], 14);
  if (v41)
  {
    char v42 = v41;
    id v43 = objc_msgSend(v41, sel_displayName);

    uint64_t v44 = sub_1C254F470();
    uint64_t v46 = v45;

    if (v40 == v44 && v39 == v46)
    {
LABEL_31:
      swift_bridgeObjectRelease_n();
      return 0;
    }
    char v47 = sub_1C2550870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if (v47) {
      return result;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (*v48 == *v16 && v48[1] == v16[1]) {
    return 0;
  }
  else {
    return sub_1C2550870() & 1;
  }
}

void sub_1C229F80C()
{
}

uint64_t sub_1C229F83C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C229F84C()
{
  sub_1C254DCF0();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C229F89C()
{
  return type metadata accessor for ClinicalSharingOnboardingSelectedDataTypesDataSource();
}

uint64_t sub_1C229F8A4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C23F5310();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C229F920(v6);
  return sub_1C2550470();
}

uint64_t sub_1C229F920(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1C2550800();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_167;
    }
    if (v4) {
      return sub_1C22A03D0(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_176;
  }
  uint64_t v136 = result;
  uint64_t v133 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v149 = MEMORY[0x1E4FBC860];
    __dst = (uint64_t *)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v76 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      goto LABEL_132;
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
    uint64_t v8 = sub_1C254F780();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    __dst = (uint64_t *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v149 = v8;
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v135 = *a1 + 16;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v134 = *a1 - 8;
  uint64_t v12 = v4;
  uint64_t v138 = v4;
  uint64_t v145 = *a1;
  do
  {
    uint64_t v13 = v10;
    uint64_t v14 = v10 + 1;
    uint64_t v139 = v10;
    if (v10 + 1 < v12)
    {
      uint64_t v15 = *(void *)(v11 + 8 * v14);
      uint64_t v147 = *(void *)(v11 + 8 * v10);
      v148[0] = v15;
      swift_retain();
      swift_retain();
      int v16 = sub_1C229F464(v148, &v147);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_145;
      }
      int v17 = v16;
      swift_release();
      swift_release();
      uint64_t v14 = v13 + 2;
      if (v13 + 2 < v138)
      {
        uint64_t v18 = (uint64_t *)(v135 + 8 * v13);
        while (1)
        {
          uint64_t v19 = *v18;
          uint64_t v147 = *(v18 - 1);
          v148[0] = v19;
          swift_retain();
          swift_retain();
          int v20 = sub_1C229F464(v148, &v147);
          swift_release();
          swift_release();
          if ((v17 ^ v20)) {
            break;
          }
          ++v14;
          ++v18;
          if (v138 == v14)
          {
            uint64_t v14 = v138;
            break;
          }
        }
        uint64_t v13 = v139;
      }
      if (v17)
      {
        if (v14 < v13) {
          goto LABEL_171;
        }
        uint64_t v12 = v138;
        if (v13 < v14)
        {
          id v21 = (uint64_t *)(v134 + 8 * v14);
          uint64_t v22 = v14;
          uint64_t v23 = v13;
          uint64_t v24 = (uint64_t *)(v145 + 8 * v13);
          do
          {
            if (v23 != --v22)
            {
              if (!v145) {
                goto LABEL_174;
              }
              uint64_t v25 = *v24;
              uint64_t *v24 = *v21;
              *id v21 = v25;
            }
            ++v23;
            --v21;
            ++v24;
          }
          while (v23 < v22);
        }
      }
      else
      {
        uint64_t v12 = v138;
      }
    }
    if (v14 >= v12) {
      goto LABEL_81;
    }
    if (__OFSUB__(v14, v13)) {
      goto LABEL_168;
    }
    if (v14 - v13 >= v136) {
      goto LABEL_81;
    }
    if (__OFADD__(v13, v136)) {
      goto LABEL_169;
    }
    if (v13 + v136 >= v12) {
      uint64_t v26 = v12;
    }
    else {
      uint64_t v26 = v13 + v136;
    }
    if (v26 < v13)
    {
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      uint64_t result = sub_1C25505E0();
      __break(1u);
      return result;
    }
    if (v14 == v26) {
      goto LABEL_81;
    }
    id v131 = v9;
    uint64_t v132 = v2;
    uint64_t v27 = self;
    uint64_t v28 = v145;
    unint64_t v146 = (void *)v27;
    uint64_t v29 = (void *)(v134 + 8 * v14);
    uint64_t v137 = v26;
    while (2)
    {
      uint64_t v31 = *(void *)(v28 + 8 * v14);
      uint64_t v140 = v29;
      uint64_t v143 = v14;
      while (1)
      {
        uint64_t v32 = *v29;
        id v33 = (uint64_t *)(v31 + qword_1EA2DFDC0);
        uint64_t v35 = *(void *)(v31 + qword_1EA2DFDC0);
        uint64_t v34 = *(void *)(v31 + qword_1EA2DFDC0 + 8);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        id v36 = objc_msgSend(v146, sel_categoryWithID_, 15);
        if (v36)
        {
          id v37 = v36;
          id v38 = objc_msgSend(v36, sel_displayName);

          uint64_t v39 = sub_1C254F470();
          uint64_t v41 = v40;

          if (v35 == v39 && v34 == v41)
          {
LABEL_59:
            swift_release();
            swift_release();
            swift_bridgeObjectRelease_n();
            goto LABEL_76;
          }
          char v43 = sub_1C2550870();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v43)
          {
LABEL_58:
            swift_release();
            swift_release();
            goto LABEL_76;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v45 = *(void *)(v32 + qword_1EA2DFDC0);
        uint64_t v44 = *(void *)(v32 + qword_1EA2DFDC0 + 8);
        uint64_t v142 = (uint64_t *)(v32 + qword_1EA2DFDC0);
        swift_bridgeObjectRetain();
        id v46 = objc_msgSend(v146, sel_categoryWithID_, 14);
        if (v46)
        {
          char v47 = v46;
          id v48 = objc_msgSend(v46, sel_displayName);

          uint64_t v49 = sub_1C254F470();
          uint64_t v51 = v50;

          if (v45 == v49 && v44 == v51) {
            goto LABEL_59;
          }
          char v53 = sub_1C2550870();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v53) {
            goto LABEL_58;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v55 = *v142;
        uint64_t v54 = v142[1];
        swift_bridgeObjectRetain();
        id v56 = objc_msgSend(v146, sel_categoryWithID_, 15);
        if (v56) {
          break;
        }
        swift_bridgeObjectRelease();
LABEL_67:
        uint64_t v64 = *v33;
        uint64_t v63 = v33[1];
        swift_bridgeObjectRetain();
        id v65 = objc_msgSend(v146, sel_categoryWithID_, 14);
        if (v65)
        {
          uint64_t v66 = v65;
          id v67 = objc_msgSend(v65, sel_displayName);

          uint64_t v68 = sub_1C254F470();
          uint64_t v70 = v69;

          if (v64 == v68 && v63 == v70) {
            goto LABEL_79;
          }
          char v71 = sub_1C2550870();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v71) {
            goto LABEL_40;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        if (*v33 == *v142 && v33[1] == v142[1])
        {
LABEL_40:
          swift_release();
          swift_release();
          goto LABEL_41;
        }
        char v72 = sub_1C2550870();
        swift_release();
        swift_release();
        if ((v72 & 1) == 0) {
          goto LABEL_41;
        }
LABEL_76:
        uint64_t v28 = v145;
        if (!v145) {
          goto LABEL_172;
        }
        uint64_t v73 = *v29;
        uint64_t v31 = v29[1];
        *uint64_t v29 = v31;
        v29[1] = v73;
        --v29;
        ++v13;
        uint64_t v30 = v143;
        if (v143 == v13) {
          goto LABEL_42;
        }
      }
      uint64_t v57 = v56;
      id v58 = objc_msgSend(v56, sel_displayName);

      uint64_t v59 = sub_1C254F470();
      uint64_t v61 = v60;

      if (v55 != v59 || v54 != v61)
      {
        char v62 = sub_1C2550870();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v62) {
          goto LABEL_40;
        }
        goto LABEL_67;
      }
LABEL_79:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
LABEL_41:
      uint64_t v30 = v143;
      uint64_t v28 = v145;
LABEL_42:
      uint64_t v14 = v30 + 1;
      uint64_t v13 = v139;
      uint64_t v29 = v140 + 1;
      if (v14 != v137) {
        continue;
      }
      break;
    }
    uint64_t v14 = v137;
    uint64_t v9 = v131;
    uint64_t v2 = v132;
LABEL_81:
    if (v14 < v13) {
      goto LABEL_166;
    }
    uint64_t v144 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1C23F277C(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v75 = *((void *)v9 + 2);
    unint64_t v74 = *((void *)v9 + 3);
    unint64_t v76 = v75 + 1;
    uint64_t v11 = v145;
    if (v75 >= v74 >> 1)
    {
      uint64_t v124 = sub_1C23F277C((char *)(v74 > 1), v75 + 1, 1, v9);
      uint64_t v11 = v145;
      uint64_t v9 = v124;
    }
    *((void *)v9 + 2) = v76;
    uint64_t v77 = v9 + 32;
    uint64_t v78 = &v9[16 * v75 + 32];
    *(void *)uint64_t v78 = v139;
    *((void *)v78 + 1) = v144;
    if (v75)
    {
      while (2)
      {
        unint64_t v79 = v76 - 1;
        if (v76 >= 4)
        {
          uint64_t v84 = &v77[16 * v76];
          uint64_t v85 = *((void *)v84 - 8);
          uint64_t v86 = *((void *)v84 - 7);
          BOOL v90 = __OFSUB__(v86, v85);
          uint64_t v87 = v86 - v85;
          if (v90) {
            goto LABEL_151;
          }
          uint64_t v89 = *((void *)v84 - 6);
          uint64_t v88 = *((void *)v84 - 5);
          BOOL v90 = __OFSUB__(v88, v89);
          uint64_t v82 = v88 - v89;
          char v83 = v90;
          if (v90) {
            goto LABEL_152;
          }
          unint64_t v91 = v76 - 2;
          BOOL v92 = &v77[16 * v76 - 32];
          uint64_t v94 = *(void *)v92;
          uint64_t v93 = *((void *)v92 + 1);
          BOOL v90 = __OFSUB__(v93, v94);
          uint64_t v95 = v93 - v94;
          if (v90) {
            goto LABEL_154;
          }
          BOOL v90 = __OFADD__(v82, v95);
          uint64_t v96 = v82 + v95;
          if (v90) {
            goto LABEL_157;
          }
          if (v96 >= v87)
          {
            unint64_t v114 = &v77[16 * v79];
            uint64_t v116 = *(void *)v114;
            uint64_t v115 = *((void *)v114 + 1);
            BOOL v90 = __OFSUB__(v115, v116);
            uint64_t v117 = v115 - v116;
            if (v90) {
              goto LABEL_161;
            }
            BOOL v107 = v82 < v117;
          }
          else
          {
LABEL_100:
            if (v83) {
              goto LABEL_153;
            }
            unint64_t v91 = v76 - 2;
            uint64_t v97 = &v77[16 * v76 - 32];
            uint64_t v99 = *(void *)v97;
            uint64_t v98 = *((void *)v97 + 1);
            BOOL v100 = __OFSUB__(v98, v99);
            uint64_t v101 = v98 - v99;
            char v102 = v100;
            if (v100) {
              goto LABEL_156;
            }
            unint64_t v103 = &v77[16 * v79];
            uint64_t v105 = *(void *)v103;
            uint64_t v104 = *((void *)v103 + 1);
            BOOL v90 = __OFSUB__(v104, v105);
            uint64_t v106 = v104 - v105;
            if (v90) {
              goto LABEL_159;
            }
            if (__OFADD__(v101, v106)) {
              goto LABEL_160;
            }
            if (v101 + v106 < v82) {
              goto LABEL_112;
            }
            BOOL v107 = v82 < v106;
          }
          if (v107) {
            unint64_t v79 = v91;
          }
        }
        else
        {
          if (v76 == 3)
          {
            uint64_t v81 = *((void *)v9 + 4);
            uint64_t v80 = *((void *)v9 + 5);
            BOOL v90 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            char v83 = v90;
            goto LABEL_100;
          }
          uint64_t v108 = *((void *)v9 + 4);
          uint64_t v109 = *((void *)v9 + 5);
          BOOL v90 = __OFSUB__(v109, v108);
          uint64_t v101 = v109 - v108;
          char v102 = v90;
LABEL_112:
          if (v102) {
            goto LABEL_155;
          }
          unint64_t v110 = &v77[16 * v79];
          uint64_t v112 = *(void *)v110;
          uint64_t v111 = *((void *)v110 + 1);
          BOOL v90 = __OFSUB__(v111, v112);
          uint64_t v113 = v111 - v112;
          if (v90) {
            goto LABEL_158;
          }
          if (v113 < v101) {
            goto LABEL_129;
          }
        }
        unint64_t v118 = v79 - 1;
        if (v79 - 1 >= v76)
        {
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
          goto LABEL_170;
        }
        if (!v11) {
          goto LABEL_173;
        }
        v119 = &v77[16 * v118];
        uint64_t v120 = *(void *)v119;
        uint64_t v121 = &v77[16 * v79];
        uint64_t v122 = *((void *)v121 + 1);
        sub_1C22A04C8((uint64_t *)(v11 + 8 * *(void *)v119), (uint64_t *)(v11 + 8 * *(void *)v121), v11 + 8 * v122, __dst);
        if (v2) {
          goto LABEL_143;
        }
        if (v122 < v120) {
          goto LABEL_148;
        }
        if (v79 > *((void *)v9 + 2)) {
          goto LABEL_149;
        }
        *(void *)v119 = v120;
        *(void *)&v77[16 * v118 + 8] = v122;
        unint64_t v123 = *((void *)v9 + 2);
        if (v79 >= v123) {
          goto LABEL_150;
        }
        unint64_t v76 = v123 - 1;
        memmove(&v77[16 * v79], v121 + 16, 16 * (v123 - 1 - v79));
        *((void *)v9 + 2) = v123 - 1;
        uint64_t v11 = v145;
        if (v123 <= 2) {
          goto LABEL_129;
        }
        continue;
      }
    }
    unint64_t v76 = 1;
LABEL_129:
    uint64_t v12 = v138;
    uint64_t v10 = v144;
  }
  while (v144 < v138);
LABEL_132:
  if (v76 >= 2)
  {
    uint64_t v125 = *v133;
    do
    {
      unint64_t v126 = v76 - 2;
      if (v76 < 2) {
        goto LABEL_162;
      }
      if (!v125) {
        goto LABEL_175;
      }
      uint64_t v127 = *(void *)&v9[16 * v126 + 32];
      uint64_t v128 = *(void *)&v9[16 * v76 + 24];
      sub_1C22A04C8((uint64_t *)(v125 + 8 * v127), (uint64_t *)(v125 + 8 * *(void *)&v9[16 * v76 + 16]), v125 + 8 * v128, __dst);
      if (v2) {
        break;
      }
      if (v128 < v127) {
        goto LABEL_163;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1C23F321C((uint64_t)v9);
      }
      if (v126 >= *((void *)v9 + 2)) {
        goto LABEL_164;
      }
      uint64_t v129 = &v9[16 * v126 + 32];
      *(void *)uint64_t v129 = v127;
      *((void *)v129 + 1) = v128;
      unint64_t v130 = *((void *)v9 + 2);
      if (v76 > v130) {
        goto LABEL_165;
      }
      memmove(&v9[16 * v76 + 16], &v9[16 * v76 + 32], 16 * (v130 - v76));
      *((void *)v9 + 2) = v130 - 1;
      unint64_t v76 = v130 - 1;
    }
    while (v130 > 2);
  }
LABEL_143:
  swift_bridgeObjectRelease();
LABEL_145:
  *(void *)((v149 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_1C254F730();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C22A03D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 8 * a3 - 8;
    uint64_t v13 = result;
LABEL_4:
    uint64_t v9 = *(void *)(v7 + 8 * v5);
    uint64_t v10 = (uint64_t *)v8;
    while (1)
    {
      uint64_t v16 = v9;
      uint64_t v15 = *v10;
      swift_retain();
      swift_retain();
      char v11 = sub_1C229F464(&v16, &v15);
      swift_release();
      uint64_t result = swift_release();
      if (v4) {
        break;
      }
      if (v11)
      {
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t v12 = *v10;
        uint64_t v9 = v10[1];
        *uint64_t v10 = v9;
        v10[1] = v12;
        --v10;
        if (v5 != ++v6) {
          continue;
        }
      }
      ++v5;
      v8 += 8;
      uint64_t v6 = v13;
      if (v5 != a2) {
        goto LABEL_4;
      }
      return result;
    }
  }
  return result;
}

uint64_t sub_1C22A04C8(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst)
{
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  id v37 = __src;
  id v36 = __dst;
  uint64_t v32 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      uint64_t v19 = v4;
      if (__dst != a2 || &a2[v13] <= __dst)
      {
        memmove(__dst, a2, 8 * v13);
        __dst = v32;
      }
      int v20 = &__dst[v13];
      uint64_t v35 = v20;
      id v37 = v6;
      if (v7 >= v6 || v11 < 8) {
        goto LABEL_48;
      }
      id v21 = (uint64_t *)(a3 - 8);
      uint64_t v22 = v6;
      uint64_t v31 = v7;
      while (1)
      {
        uint64_t v23 = v20;
        uint64_t v24 = *--v20;
        uint64_t v34 = v24;
        uint64_t v25 = *--v22;
        uint64_t v33 = v25;
        swift_retain();
        swift_retain();
        char v26 = sub_1C229F464(&v34, &v33);
        if (v19) {
          goto LABEL_47;
        }
        char v27 = v26;
        uint64_t v28 = v21 + 1;
        swift_release();
        swift_release();
        if (v27)
        {
          uint64_t v29 = v32;
          if (v28 != v6 || v21 >= v6) {
            *id v21 = *v22;
          }
          id v37 = v22;
          uint64_t v19 = 0;
          int v20 = v23;
        }
        else
        {
          uint64_t v35 = v20;
          uint64_t v29 = v32;
          if (v28 < v23 || v21 >= v23 || v28 != v23) {
            *id v21 = *v20;
          }
          uint64_t v22 = v6;
          uint64_t v19 = 0;
        }
        if (v22 > v31)
        {
          --v21;
          uint64_t v6 = v22;
          if (v20 > v29) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
    {
      memmove(__dst, __src, 8 * v10);
      __dst = v32;
    }
    uint64_t v14 = &__dst[v10];
    uint64_t v35 = v14;
    if ((unint64_t)v6 >= a3 || v8 < 8) {
      goto LABEL_48;
    }
    while (1)
    {
      uint64_t v34 = *v6;
      uint64_t v15 = __dst;
      uint64_t v33 = *__dst;
      swift_retain();
      swift_retain();
      char v16 = sub_1C229F464(&v34, &v33);
      if (v4) {
        break;
      }
      char v17 = v16;
      swift_release();
      swift_release();
      if (v17)
      {
        uint64_t v18 = v6 + 1;
        if (v7 < v6 || v7 >= v18 || v7 != v6) {
          *uint64_t v7 = *v6;
        }
        __dst = v15;
      }
      else
      {
        if (v7 != v15) {
          *uint64_t v7 = *v15;
        }
        __dst = v15 + 1;
        id v36 = v15 + 1;
        uint64_t v18 = v6;
      }
      id v37 = ++v7;
      if (__dst < v14)
      {
        uint64_t v6 = v18;
        if ((unint64_t)v18 < a3) {
          continue;
        }
      }
      goto LABEL_48;
    }
LABEL_47:
    swift_release();
    swift_release();
LABEL_48:
    sub_1C23F2978(&v37, &v36, &v35);
    return 1;
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

void sub_1C22A0824()
{
  if (!qword_1EA2DE090)
  {
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE090);
    }
  }
}

uint64_t type metadata accessor for ClinicalSharingSelectableDatatypesDataSource()
{
  uint64_t result = qword_1EA2DFDF8;
  if (!qword_1EA2DFDF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C22A08C8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C22A0940(uint64_t a1)
{
  uint64_t v3 = sub_1C254E220();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    v14[1] = v1;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C2274BC0(0, v7, 0);
    uint64_t v8 = v18;
    uint64_t v17 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
    uint64_t v9 = a1
       + ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80));
    uint64_t v16 = *(void *)(*(void *)(v17 - 8) + 72);
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v14[2] = v4 + 32;
    uint64_t v15 = v10;
    do
    {
      v15(v6, v9 + *(int *)(v17 + 48), v3);
      uint64_t v18 = v8;
      unint64_t v12 = *(void *)(v8 + 16);
      unint64_t v11 = *(void *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1C2274BC0(v11 > 1, v12 + 1, 1);
        uint64_t v8 = v18;
      }
      *(void *)(v8 + 16) = v12 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v12, v6, v3);
      v9 += v16;
      --v7;
    }
    while (v7);
  }
  return v8;
}

void sub_1C22A0B58()
{
  qword_1EA2DFDA8 = 0x4024000000000000;
}

void *sub_1C22A0B68()
{
  uint64_t v1 = qword_1EA2DFDF0;
  if (*(void *)(v0 + qword_1EA2DFDF0))
  {
    uint64_t v2 = *(void **)(v0 + qword_1EA2DFDF0);
  }
  else
  {
    uint64_t v3 = v0;
    uint64_t v4 = v0 + qword_1EA2DFDC0;
    uint64_t v5 = *(void *)(v0 + qword_1EA2DFDC0);
    uint64_t v6 = *(void *)(v4 + 8);
    if (*(unsigned char *)(v3 + qword_1EA2DFDE0) == 1)
    {
      swift_bridgeObjectRetain();
      id v7 = 0;
    }
    else
    {
      uint64_t v8 = self;
      swift_bridgeObjectRetain();
      id v7 = objc_msgSend(v8, sel_secondarySystemBackgroundColor);
    }
    type metadata accessor for ShowAllItem();
    swift_allocObject();
    swift_retain();
    uint64_t v2 = sub_1C22A35D4(v5, v6, (uint64_t)v7, (uint64_t)sub_1C22A445C, v3);
    swift_release();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_1C22A0C94(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + qword_1EA2DFDE8);
  if (v2)
  {
    uint64_t v5 = *(void *)(a2 + qword_1EA2DFDC0);
    uint64_t v6 = *(void *)(a2 + qword_1EA2DFDC0 + 8);
    uint64_t v7 = *(void *)(a2 + qword_1EA2DFDD8);
    id v8 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingAllItemsOnboardingViewController(0));
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v9 = sub_1C234DB3C(v5, v6, v7, v2, (uint64_t)sub_1C22A44AC, a2);
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v9);
    objc_msgSend(v10, sel_setModalPresentationStyle_, 2);
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v10, 1, 0);
    swift_release();
  }
}

uint64_t sub_1C22A0DF4(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, int a6, int a7, uint64_t a8)
{
  uint64_t v9 = v8;
  LODWORD(v34) = a7;
  HIDWORD(v31) = a6;
  uint64_t v16 = sub_1C254CB40();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v9 + qword_1EA2DFDB0) = 0;
  *(void *)(v9 + qword_1EA2DFDB8) = 0;
  uint64_t v20 = qword_1EA2DFDD8;
  *(void *)(v9 + qword_1EA2DFDD8) = MEMORY[0x1E4FBC860];
  *(void *)(v9 + qword_1EA2DFDF0) = 0;
  id v21 = (void *)(v9 + qword_1EA2DFDC0);
  *id v21 = a1;
  v21[1] = a2;
  *(void *)(v9 + qword_1EA2DFDC8) = a3;
  *(void *)(v9 + qword_1EA2DFDD0) = a4;
  *(void *)(v9 + v20) = a5;
  id v33 = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  id v32 = a3;
  swift_bridgeObjectRelease();
  *(void *)(v9 + qword_1EA2DFDE8) = a8;
  *(unsigned char *)(v9 + qword_1EA2DFDE0) = v34;
  uint64_t v34 = a8;
  swift_retain();
  swift_release();
  *(void *)&long long v35 = 0;
  *((void *)&v35 + 1) = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  strcpy((char *)&v35, "MutableArray<");
  HIWORD(v35) = -4864;
  sub_1C254CB30();
  sub_1C254CAF0();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v17 + 8);
  v22(v19, v16);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v24 = sub_1C254D9F0();
  id v38 = v23;
  swift_retain();
  uint64_t v25 = sub_1C228ABE0(a5);
  swift_bridgeObjectRelease();
  sub_1C2272668(v25);
  if ((v31 & 0x100000000) != 0)
  {
    char v26 = sub_1C22A0B68();
    char v27 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v27 = sub_1C226CD5C(0, v27[2] + 1, 1, v27);
    }
    unint64_t v29 = v27[2];
    unint64_t v28 = v27[3];
    if (v29 >= v28 >> 1) {
      char v27 = sub_1C226CD5C((void *)(v28 > 1), v29 + 1, 1, v27);
    }
    uint64_t v36 = type metadata accessor for ShowAllItem();
    uint64_t v37 = sub_1C22A4464(&qword_1EA2DFE20, (void (*)(uint64_t))type metadata accessor for ShowAllItem);
    *(void *)&long long v35 = v26;
    v27[2] = v29 + 1;
    sub_1C21F44EC(&v35, (uint64_t)&v27[5 * v29 + 4]);
    id v38 = v27;
  }
  sub_1C22A4788(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
  swift_retain();
  sub_1C254CB30();
  sub_1C254CAF0();
  v22(v19, v16);
  sub_1C254D990();
  sub_1C254DA10();
  swift_bridgeObjectRelease();
  swift_release_n();

  swift_release();
  return v24;
}

uint64_t sub_1C22A1298(uint64_t a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = (void *)MEMORY[0x1E4FBC860];
  BOOL v20 = 0;
  uint64_t v19 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C22A42CC(v6, a1, &v19, &v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_bridgeObjectRetain();
  size_t v9 = sub_1C228F9F0(v8);
  swift_bridgeObjectRelease();
  sub_1C24F35F0(v9, 1);
  swift_release();
  uint64_t v10 = sub_1C228ABE0(v7);
  swift_bridgeObjectRelease();
  sub_1C2272668(v10);
  if (v20)
  {
    unint64_t v11 = sub_1C22A0B68();
    unint64_t v12 = v21;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_1C226CD5C(0, v12[2] + 1, 1, v12);
    }
    unint64_t v14 = v12[2];
    unint64_t v13 = v12[3];
    if (v14 >= v13 >> 1) {
      unint64_t v12 = sub_1C226CD5C((void *)(v13 > 1), v14 + 1, 1, v12);
    }
    uint64_t v17 = type metadata accessor for ShowAllItem();
    uint64_t v18 = sub_1C22A4464(&qword_1EA2DFE20, (void (*)(uint64_t))type metadata accessor for ShowAllItem);
    *(void *)&long long v16 = v11;
    v12[2] = v14 + 1;
    sub_1C21F44EC(&v16, (uint64_t)&v12[5 * v14 + 4]);
    id v21 = v12;
  }
  sub_1C22A4788(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1C254D990();
  sub_1C254DA10();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C22A1614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, BOOL *a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v75 = a4;
  uint64_t v81 = a3;
  uint64_t v8 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)v61 - v12;
  uint64_t v14 = sub_1C254E220();
  uint64_t v74 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v69 = (char *)v61 - v19;
  MEMORY[0x1F4188790](v18);
  id v21 = (char *)v61 - v20;
  uint64_t v73 = a5;
  uint64_t result = sub_1C22667C4(a1, a5);
  uint64_t v71 = v8;
  uint64_t v72 = a1;
  uint64_t v23 = *(int *)(v8 + 52);
  uint64_t v24 = *(void *)(a1 + v23);
  if (!v24)
  {
    id v67 = v13;
    uint64_t v69 = v11;
    uint64_t v80 = *(uint64_t (**)(uint64_t, char *, uint64_t))(a2 + 16);
    if (v80)
    {
      uint64_t v70 = v23;
      uint64_t v36 = v74;
      uint64_t v37 = (void (*)(uint64_t, uint64_t))(v73 + *(int *)(v71 + 48));
      unint64_t v38 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
      unint64_t v79 = *(void (**)(char *, unint64_t, uint64_t))(v74 + 16);
      v79(v21, a2 + v38, v14);
      uint64_t v39 = sub_1C22A4464(&qword_1EA2DFE28, MEMORY[0x1E4F66840]);
      swift_bridgeObjectRetain();
      uint64_t v78 = v37;
      uint64_t v76 = v39;
      char v40 = sub_1C254F420();
      uint64_t v41 = *(void (**)(char *, uint64_t))(v36 + 8);
      v41(v21, v14);
      if (v40)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        uint64_t v34 = v75;
        uint64_t v58 = (uint64_t)v69;
        uint64_t v59 = (uint64_t)v67;
        uint64_t v60 = v73;
        *(unsigned char *)(v73 + 49) = 1;
        sub_1C22667C4(v60, v58);
        sub_1C23674C0(v59, v58);
        uint64_t result = sub_1C2266828(v59);
        goto LABEL_38;
      }
      uint64_t v68 = a2;
      if (v80 != (uint64_t (*)(uint64_t, char *, uint64_t))1)
      {
        uint64_t v74 = *(void *)(v74 + 72);
        unint64_t v53 = v68 + v74 + v38;
        uint64_t v54 = 1;
        while (1)
        {
          uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v79)(v21, v53, v14);
          uint64_t v55 = (uint64_t (*)(uint64_t, char *, uint64_t))(v54 + 1);
          if (__OFADD__(v54, 1)) {
            break;
          }
          char v56 = sub_1C254F420();
          v41(v21, v14);
          if (v56) {
            goto LABEL_40;
          }
          ++v54;
          v53 += v74;
          if (v55 == v80)
          {
            uint64_t result = swift_bridgeObjectRelease();
            uint64_t v34 = v75;
            goto LABEL_38;
          }
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v23 = v70;
      uint64_t v34 = v75;
    }
    else
    {
      uint64_t v34 = v75;
    }
LABEL_39:
    *uint64_t v34 = *(void *)(v72 + v23) != 0;
    return result;
  }
  uint64_t v70 = *(int *)(v8 + 52);
  swift_bridgeObjectRetain();
  uint64_t v25 = v24;
  uint64_t v26 = v77;
  uint64_t v27 = sub_1C22A37E8(v25, a2, v81);
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_1C22A0940(v27);
  if (!*(void *)(v28 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v42 = v73;
    uint64_t v34 = v75;
    uint64_t v35 = v71;
LABEL_37:
    uint64_t v57 = *(int *)(v35 + 52);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v42 + v57) = v27;
LABEL_38:
    uint64_t v23 = v70;
    goto LABEL_39;
  }
  uint64_t v66 = *(void *)(v28 + 16);
  uint64_t v77 = v26;
  uint64_t v29 = v74;
  unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v31 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v74 + 16);
  uint64_t v32 = (uint64_t)v69;
  id v67 = (char *)(v28 + v30);
  uint64_t v80 = v31;
  uint64_t v81 = (uint64_t *)(v74 + 16);
  ((void (*)(char *))v31)(v69);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v33 = sub_1C22A288C(v32, a2);
  uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  unint64_t v79 = (void (*)(char *, unint64_t, uint64_t))(v29 + 8);
  v78(v32, v14);
  if (v33)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = v75;
    uint64_t v35 = v71;
LABEL_36:
    swift_bridgeObjectRelease();
    uint64_t v42 = v73;
    *(unsigned char *)(v73 + 49) = 1;
    goto LABEL_37;
  }
  uint64_t v43 = v66;
  if (v66 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = v75;
    uint64_t v35 = v71;
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v42 = v73;
    goto LABEL_37;
  }
  v61[1] = v28;
  uint64_t v76 = *(void *)(a2 + 16);
  uint64_t v44 = *(void *)(v74 + 72);
  unint64_t v65 = a2 + v30;
  uint64_t v64 = (char *)(a2 + v30 + v44);
  uint64_t v74 = v44;
  uint64_t v68 = a2;
  uint64_t v62 = v27;
  unint64_t v63 = a2 + v30 + 2 * v44;
  uint64_t v45 = 1;
  uint64_t v34 = v75;
  while (1)
  {
    uint64_t result = v80(v32, &v67[v74 * v45], v14);
    if (__OFADD__(v45++, 1)) {
      break;
    }
    if (v76)
    {
      v80((uint64_t)v17, (char *)v65, v14);
      sub_1C22A4464(&qword_1EA2DFE28, MEMORY[0x1E4F66840]);
      swift_bridgeObjectRetain();
      char v47 = sub_1C254F420();
      v78((uint64_t)v17, v14);
      if (v47) {
        goto LABEL_42;
      }
      if (v76 != 1)
      {
        v80((uint64_t)v17, v64, v14);
        char v48 = sub_1C254F420();
        v78((uint64_t)v17, v14);
        uint64_t v34 = v75;
        if (v48)
        {
LABEL_42:
          swift_bridgeObjectRelease();
          v78(v32, v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_35:
          uint64_t v35 = v71;
          uint64_t v27 = v62;
          goto LABEL_36;
        }
        if (v76 != 2)
        {
          unint64_t v49 = v63;
          uint64_t v50 = 2;
          while (1)
          {
            uint64_t result = v80((uint64_t)v17, (char *)v49, v14);
            uint64_t v51 = v50 + 1;
            if (__OFADD__(v50, 1)) {
              break;
            }
            char v52 = sub_1C254F420();
            v78((uint64_t)v17, v14);
            if (v52)
            {
              swift_bridgeObjectRelease();
              v78(v32, v14);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v34 = v75;
              goto LABEL_35;
            }
            ++v50;
            v49 += v74;
            if (v51 == v76) {
              goto LABEL_16;
            }
          }
          __break(1u);
          goto LABEL_45;
        }
      }
LABEL_16:
      swift_bridgeObjectRelease();
      uint64_t v34 = v75;
      uint64_t v43 = v66;
    }
    v78(v32, v14);
    if (v45 == v43)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = v71;
      uint64_t v27 = v62;
      goto LABEL_11;
    }
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1C22A1E68(uint64_t a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v6 = swift_bridgeObjectRetain();
  unint64_t v7 = sub_1C22A44B4(v6, a1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v8 = sub_1C228ABE0(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1C2272668(v8);
  uint64_t v10 = sub_1C22A0B68(v9);
  unint64_t v11 = v19;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v11 = sub_1C226CD5C(0, v11[2] + 1, 1, v11);
  }
  unint64_t v13 = v11[2];
  unint64_t v12 = v11[3];
  if (v13 >= v12 >> 1) {
    unint64_t v11 = sub_1C226CD5C((void *)(v12 > 1), v13 + 1, 1, v11);
  }
  uint64_t v17 = type metadata accessor for ShowAllItem();
  uint64_t v18 = sub_1C22A4464(&qword_1EA2DFE20, (void (*)(uint64_t))type metadata accessor for ShowAllItem);
  *(void *)&long long v16 = v10;
  v11[2] = v13 + 1;
  sub_1C21F44EC(&v16, (uint64_t)&v11[5 * v13 + 4]);
  uint64_t v19 = v11;
  sub_1C22A4788(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1C254D990();
  sub_1C254DA10();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C22A217C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v4 = sub_1C254E220();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v58 = (char *)v46 - v8;
  uint64_t v9 = sub_1C254E560();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v54 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v53 = (uint64_t)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22667C4(a1, v53);
  uint64_t v55 = v13;
  uint64_t v15 = *(void *)(a1 + *(int *)(v13 + 52));
  if (v15)
  {
    uint64_t v16 = sub_1C22A0940(v15);
    swift_beginAccess();
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C22A0940(v17);
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void *)(v16 + 16);
    if (!v19)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = v54;
      uint64_t v30 = v55;
      uint64_t v32 = v53;
      uint64_t v33 = v57;
LABEL_29:
      sub_1C2266760(v32, v33);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v33, 0, 1, v30);
    }
    uint64_t v20 = v56;
    unint64_t v48 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    unint64_t v21 = v16 + v48;
    uint64_t v22 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v56 + 16);
    uint64_t v23 = v16;
    uint64_t v24 = (uint64_t)v58;
    unint64_t v52 = v21;
    uint64_t v61 = v22;
    uint64_t v62 = v56 + 16;
    ((void (*)(char *))v22)(v58);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v25 = sub_1C22A288C(v24, v18);
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    uint64_t v60 = v20 + 8;
    v59(v24, v4);
    if (v25)
    {
LABEL_28:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = v57;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v32 = v53;
      uint64_t v31 = v54;
      *(unsigned char *)(v53 + 49) = 1;
      uint64_t v30 = v55;
      goto LABEL_29;
    }
    uint64_t v51 = v18;
    if (v19 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = v57;
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v31 = v54;
      uint64_t v30 = v55;
      uint64_t v32 = v53;
      goto LABEL_29;
    }
    uint64_t v50 = v19;
    v46[1] = v2;
    uint64_t v34 = *(void *)(v56 + 72);
    uint64_t v35 = v51;
    unint64_t v49 = v51 + v48;
    v46[2] = v23;
    unint64_t v47 = v51 + v48 + v34;
    uint64_t v56 = v34;
    unint64_t v36 = v51 + v48 + 2 * v34;
    uint64_t v37 = 1;
    unint64_t v48 = v36;
    while (1)
    {
      uint64_t result = v61(v24, v52 + v56 * v37, v4);
      if (__OFADD__(v37++, 1)) {
        break;
      }
      uint64_t v39 = *(void *)(v35 + 16);
      if (v39)
      {
        v61((uint64_t)v7, v49, v4);
        sub_1C22A4464(&qword_1EA2DFE28, MEMORY[0x1E4F66840]);
        swift_bridgeObjectRetain();
        char v40 = sub_1C254F420();
        v59((uint64_t)v7, v4);
        if (v40) {
          goto LABEL_27;
        }
        if (v39 != 1)
        {
          v61((uint64_t)v7, v47, v4);
          char v41 = sub_1C254F420();
          v59((uint64_t)v7, v4);
          if (v41)
          {
LABEL_27:
            swift_bridgeObjectRelease();
            v59(v24, v4);
            goto LABEL_28;
          }
          if (v39 != 2)
          {
            unint64_t v42 = v36;
            uint64_t v43 = 2;
            while (1)
            {
              uint64_t result = v61((uint64_t)v7, v42, v4);
              uint64_t v44 = v43 + 1;
              if (__OFADD__(v43, 1)) {
                break;
              }
              char v45 = sub_1C254F420();
              v59((uint64_t)v7, v4);
              if (v45)
              {
                swift_bridgeObjectRelease();
                v59((uint64_t)v58, v4);
                goto LABEL_28;
              }
              ++v43;
              v42 += v56;
              if (v44 == v39)
              {
                uint64_t v35 = v51;
                swift_bridgeObjectRelease();
                uint64_t v24 = (uint64_t)v58;
                unint64_t v36 = v48;
                goto LABEL_14;
              }
            }
            __break(1u);
            break;
          }
        }
        uint64_t v35 = v51;
        swift_bridgeObjectRelease();
      }
LABEL_14:
      v59(v24, v4);
      uint64_t v33 = v57;
      if (v37 == v50)
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  else
  {
    sub_1C254E510();
    uint64_t v26 = sub_1C254E550();
    os_log_type_t v27 = sub_1C254FA40();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_1C21A1000, v26, v27, "Returning from all items view with an item that does not have associated items. This should not happen.", v28, 2u);
      MEMORY[0x1C875A0B0](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1C2266828(v53);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v57, 1, 1, v55);
  }
  return result;
}

uint64_t sub_1C22A288C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254E220();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + 16);
  if (!v8) {
    return 0;
  }
  v18[0] = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = a2 + v18[0];
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v22(v7, a2 + v18[0], v4);
  uint64_t v10 = sub_1C22A4464(&qword_1EA2DFE28, MEMORY[0x1E4F66840]);
  swift_bridgeObjectRetain();
  uint64_t v21 = v10;
  char v11 = sub_1C254F420();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v7, v4);
  if (v11)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v8 == 1) {
    goto LABEL_11;
  }
  uint64_t v19 = *(void *)(v5 + 72);
  v22(v7, v9 + v19, v4);
  char v12 = sub_1C254F420();
  v20(v7, v4);
  if (v12) {
    goto LABEL_5;
  }
  if (v8 == 2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  v18[1] = a1;
  uint64_t v14 = a2 + v18[0] + 2 * v19;
  uint64_t v15 = 2;
  while (1)
  {
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)(v7, v14, v4);
    uint64_t v16 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    char v17 = sub_1C254F420();
    v20(v7, v4);
    if (v17) {
      goto LABEL_5;
    }
    ++v15;
    v14 += v19;
    if (v16 == v8) {
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

void sub_1C22A2B1C()
{
}

uint64_t sub_1C22A2B4C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_1C22A2BF0()
{
  uint64_t v0 = sub_1C254DA50();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C22A2C9C()
{
  sub_1C22A2BF0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C22A2CCC()
{
  return type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
}

uint64_t sub_1C22A2CD4()
{
  return sub_1C254FAF0();
}

uint64_t sub_1C22A2D8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1C254E890();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = sub_1C254DC00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254DBD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22A4788(0, &qword_1EA2DFE10, MEMORY[0x1E4F664F8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v22 - v13;
  if (*(unsigned char *)(v1 + qword_1EA2DFDE0) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
    a1[3] = v4;
    a1[4] = sub_1C22A4464(&qword_1EA2DFE18, MEMORY[0x1E4F66500]);
    __swift_allocate_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRetain();
    return sub_1C254DBF0();
  }
  else
  {
    uint64_t v23 = v5;
    uint64_t v16 = *(void **)(v1 + qword_1EA2DFDC8);
    if (v16)
    {
      id v17 = *(id *)(v1 + qword_1EA2DFDD0);
      id v18 = v16;
      sub_1C254DBC0();
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v14, v11, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
      sub_1C254DBE0();
      sub_1C22A47EC((uint64_t)v14, &qword_1EA2DFE10, MEMORY[0x1E4F664F8]);
      a1[3] = v4;
      a1[4] = sub_1C22A4464(&qword_1EA2DFE18, MEMORY[0x1E4F66500]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
      (*(void (**)(uint64_t *, char *, uint64_t))(v23 + 32))(boxed_opaque_existential_1, v7, v4);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1C254E820();
      uint64_t v20 = sub_1C254D2A0();
      swift_allocObject();
      uint64_t v21 = sub_1C254D280();
      a1[3] = v20;
      uint64_t result = sub_1C22A4464((unint64_t *)&qword_1EBB6E7D8, MEMORY[0x1E4F66208]);
      a1[4] = result;
      *a1 = v21;
    }
  }
  return result;
}

uint64_t sub_1C22A3268@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C22A2D8C(a1);
}

uint64_t sub_1C22A328C()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v15[-v5];
  sub_1C254DA90();
  if (qword_1EA2DD4F0 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1EA2DFDA8;
  uint64_t v8 = (void (*)(unsigned char *, void))sub_1C254DB00();
  *(void *)(v9 + 8) = v7;
  v8(v15, 0);
  uint64_t v10 = (void (*)(unsigned char *, void))sub_1C254DB00();
  *(void *)(v11 + 24) = v7;
  v10(v15, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v12 = sub_1C254DB40();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  v13(v4, v0);
  v13(v6, v0);
  return v12;
}

uint64_t sub_1C22A345C()
{
  return sub_1C254E160();
}

void sub_1C22A34B8()
{
}

uint64_t sub_1C22A34E8()
{
  return swift_release();
}

uint64_t sub_1C22A34F0()
{
  TextItem.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShowAllItem()
{
  return self;
}

uint64_t sub_1C22A355C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)v2 + 96))(a2);
}

uint64_t sub_1C22A358C()
{
  return sub_1C22A4464(&qword_1EA2DFE08, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableDatatypesDataSource);
}

void *sub_1C22A35D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  v6[12] = a4;
  v6[13] = a5;
  uint64_t v10 = qword_1EBB6D9B0;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C22A4788(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C255CD90;
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 64) = sub_1C220D950();
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  uint64_t v13 = sub_1C254F4B0();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(self, sel_linkColor, 0xE000000000000000);
  type metadata accessor for TextItemCell();
  sub_1C22A4464(&qword_1EA2DE790, (void (*)(uint64_t))type metadata accessor for TextItemCell);
  v6[10] = sub_1C254D330();
  v6[11] = v17;
  uint64_t v6[2] = v13;
  v6[3] = v15;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  v6[4] = 0;
  v6[5] = v16;
  v6[6] = a3;
  v6[7] = v18;
  v6[8] = 0;
  v6[9] = 0;
  return v6;
}

uint64_t sub_1C22A37E8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v95 = a3;
  uint64_t v99 = a2;
  uint64_t v4 = sub_1C254E220();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v103 = &v88[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v92 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v7 = *(void *)(v92 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v92);
  uint64_t v10 = &v88[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v88[-v13];
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = &v88[-v16];
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = &v88[-v20];
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  unint64_t v110 = &v88[-v23];
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  unint64_t v114 = &v88[-v25];
  MEMORY[0x1F4188790](v24);
  uint64_t v104 = &v88[-v28];
  int64_t v29 = *(void *)(a1 + 16);
  uint64_t v30 = MEMORY[0x1E4FBC860];
  if (!v29) {
    return v30;
  }
  uint64_t v112 = (void *)v26;
  uint64_t v113 = (void *)v27;
  uint64_t v117 = MEMORY[0x1E4FBC860];
  int64_t v97 = v29;
  sub_1C22747C4(0, v29, 0);
  uint64_t v31 = 0;
  unint64_t v96 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v98 = a1 + v96;
  uint64_t v107 = *(void *)(v99 + 16);
  uint64_t v32 = *(void *)(v7 + 72);
  uint64_t v102 = v5 + 16;
  uint64_t v101 = v5 + 8;
  uint64_t v33 = v5;
  uint64_t v111 = v14;
  uint64_t v34 = v104;
  uint64_t v105 = v4;
  uint64_t v94 = v5;
  BOOL v90 = v10;
  uint64_t v89 = v21;
  uint64_t v115 = v32;
LABEL_3:
  uint64_t v106 = v31;
  sub_1C22667C4(v98 + v32 * v31, (uint64_t)v34);
  if (!v107) {
    goto LABEL_54;
  }
  uint64_t v35 = &v34[*(int *)(v92 + 48)];
  unint64_t v91 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v36 = v99 + v91;
  uint64_t v37 = v103;
  uint64_t v109 = *(char **)(v33 + 16);
  ((void (*)(unsigned char *, unint64_t, uint64_t))v109)(v103, v99 + v91, v4);
  uint64_t v38 = sub_1C22A4464(&qword_1EA2DFE28, MEMORY[0x1E4F66840]);
  swift_bridgeObjectRetain();
  uint64_t v108 = (uint64_t)v35;
  uint64_t v100 = v38;
  char v39 = sub_1C254F420();
  char v40 = *(void (**)(unsigned char *, uint64_t))(v33 + 8);
  v40(v37, v4);
  if (v39) {
    goto LABEL_5;
  }
  if (v107 == 1) {
    goto LABEL_21;
  }
  uint64_t v93 = *(void *)(v94 + 72);
  uint64_t v58 = v36 + v93;
  uint64_t v59 = v103;
  uint64_t v60 = v105;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v109)(v103, v58, v105);
  char v61 = sub_1C254F420();
  v40(v59, v60);
  if (v61)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    char v41 = v104;
    v104[49] = 1;
    sub_1C22667C4((uint64_t)v41, (uint64_t)v114);
    uint64_t v42 = *v95;
    sub_1C25509C0();
    swift_bridgeObjectRetain();
    sub_1C254F570();
    sub_1C254F570();
    uint64_t v43 = sub_1C2550A10();
    uint64_t v44 = -1 << *(unsigned char *)(v42 + 32);
    unint64_t v45 = v43 & ~v44;
    if ((*(void *)(v42 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45))
    {
      uint64_t v46 = ~v44;
      unint64_t v47 = v90;
      do
      {
        uint64_t v21 = v17;
        sub_1C22667C4(*(void *)(v42 + 48) + v45 * v115, (uint64_t)v14);
        unint64_t v49 = v114;
        if (*((void *)v14 + 2) == *((void *)v114 + 2) && *((void *)v14 + 3) == *((void *)v114 + 3))
        {
          uint64_t v54 = v112;
          sub_1C22667C4((uint64_t)v14, (uint64_t)v112);
          sub_1C22667C4((uint64_t)v49, (uint64_t)v47);
        }
        else
        {
          char v51 = sub_1C2550870();
          uint64_t v52 = (uint64_t)v14;
          char v53 = v51;
          uint64_t v54 = v112;
          sub_1C22667C4(v52, (uint64_t)v112);
          sub_1C22667C4((uint64_t)v49, (uint64_t)v47);
          if ((v53 & 1) == 0)
          {
            sub_1C2266828((uint64_t)v54);
            sub_1C2266828((uint64_t)v47);
            uint64_t v14 = v111;
            sub_1C2266828((uint64_t)v111);
            goto LABEL_8;
          }
        }
        if (*v54 == *v47 && v54[1] == v47[1])
        {
          sub_1C2266828((uint64_t)v54);
          sub_1C2266828((uint64_t)v47);
          uint64_t v14 = v111;
          sub_1C2266828((uint64_t)v111);
LABEL_19:
          swift_bridgeObjectRelease();
          sub_1C2266828((uint64_t)v114);
          uint64_t v4 = v105;
          uint64_t v33 = v94;
          uint64_t v17 = v21;
LABEL_54:
          uint64_t v30 = v117;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C22747C4(0, *(void *)(v30 + 16) + 1, 1);
            uint64_t v30 = v117;
          }
          uint64_t v81 = v106;
          uint64_t v82 = v115;
          unint64_t v84 = *(void *)(v30 + 16);
          unint64_t v83 = *(void *)(v30 + 24);
          if (v84 >= v83 >> 1)
          {
            sub_1C22747C4(v83 > 1, v84 + 1, 1);
            uint64_t v82 = v115;
            uint64_t v81 = v106;
            uint64_t v30 = v117;
          }
          *(void *)(v30 + 16) = v84 + 1;
          uint64_t v85 = v30 + v96 + v84 * v82;
          uint64_t v34 = v104;
          uint64_t v86 = v81 + 1;
          sub_1C2266760((uint64_t)v104, v85);
          uint64_t v32 = v115;
          uint64_t v31 = v86;
          if (v86 == v97) {
            return v30;
          }
          goto LABEL_3;
        }
        char v48 = sub_1C2550870();
        sub_1C2266828((uint64_t)v54);
        sub_1C2266828((uint64_t)v47);
        uint64_t v14 = v111;
        sub_1C2266828((uint64_t)v111);
        if (v48) {
          goto LABEL_19;
        }
LABEL_8:
        unint64_t v45 = (v45 + 1) & v46;
        uint64_t v17 = v21;
      }
      while (((*(void *)(v42 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) != 0);
    }
    swift_bridgeObjectRelease();
    uint64_t v55 = v95;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C22667C4((uint64_t)v114, (uint64_t)v110);
    uint64_t v116 = *v55;
    uint64_t v57 = v116;
    *uint64_t v55 = 0x8000000000000000;
    if (*(void *)(v57 + 24) > *(void *)(v57 + 16))
    {
      uint64_t v4 = v105;
      uint64_t v33 = v94;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C22BC110();
        uint64_t v57 = v116;
      }
      goto LABEL_51;
    }
    uint64_t v4 = v105;
    uint64_t v21 = v89;
    if (isUniquelyReferenced_nonNull_native) {
      sub_1C2280FDC();
    }
    else {
      sub_1C236CFC4();
    }
    uint64_t v57 = v116;
    sub_1C25509C0();
    sub_1C254F570();
    sub_1C254F570();
    uint64_t v70 = sub_1C2550A10();
    uint64_t v71 = -1 << *(unsigned char *)(v57 + 32);
    unint64_t v45 = v70 & ~v71;
    uint64_t v109 = (char *)(v57 + 56);
    if (((*(void *)(v57 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
    {
      uint64_t v33 = v94;
LABEL_51:
      uint64_t v72 = v110;
      uint64_t v73 = v115;
LABEL_52:
      *(void *)(v57 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v45;
      sub_1C2266760((uint64_t)v72, *(void *)(v57 + 48) + v45 * v73);
      uint64_t v78 = *(void *)(v57 + 16);
      BOOL v79 = __OFADD__(v78, 1);
      uint64_t v80 = v78 + 1;
      if (!v79)
      {
        *(void *)(v57 + 16) = v80;
        *uint64_t v95 = v57;
        swift_bridgeObjectRelease();
        sub_1C2266828((uint64_t)v114);
        goto LABEL_54;
      }
      goto LABEL_61;
    }
    uint64_t v108 = ~v71;
    uint64_t v72 = v110;
    uint64_t v73 = v115;
    while (1)
    {
      sub_1C22667C4(*(void *)(v57 + 48) + v45 * v73, (uint64_t)v21);
      if (*((void *)v21 + 2) == *((void *)v72 + 2) && *((void *)v21 + 3) == *((void *)v72 + 3)) {
        break;
      }
      char v76 = sub_1C2550870();
      uint64_t v77 = v113;
      sub_1C22667C4((uint64_t)v21, (uint64_t)v113);
      sub_1C22667C4((uint64_t)v72, (uint64_t)v17);
      if (v76) {
        goto LABEL_46;
      }
      sub_1C2266828((uint64_t)v77);
      sub_1C2266828((uint64_t)v17);
      sub_1C2266828((uint64_t)v21);
LABEL_38:
      unint64_t v45 = (v45 + 1) & v108;
      uint64_t v72 = v110;
      uint64_t v73 = v115;
      if (((*(void *)&v109[(v45 >> 3) & 0xFFFFFFFFFFFFFF8] >> v45) & 1) == 0)
      {
        uint64_t v4 = v105;
        uint64_t v33 = v94;
        goto LABEL_52;
      }
    }
    uint64_t v77 = v113;
    sub_1C22667C4((uint64_t)v21, (uint64_t)v113);
    sub_1C22667C4((uint64_t)v72, (uint64_t)v17);
LABEL_46:
    if (*v77 == *v17 && v77[1] == v17[1]) {
      goto LABEL_62;
    }
    char v74 = sub_1C2550870();
    sub_1C2266828((uint64_t)v113);
    sub_1C2266828((uint64_t)v17);
    sub_1C2266828((uint64_t)v21);
    if (v74) {
      goto LABEL_63;
    }
    goto LABEL_38;
  }
  if (v107 == 2)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v4 = v105;
    uint64_t v33 = v94;
    goto LABEL_54;
  }
  uint64_t v62 = v99 + v91 + 2 * v93;
  uint64_t v63 = 2;
  while (1)
  {
    uint64_t v64 = v103;
    uint64_t v65 = v105;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v109)(v103, v62, v105);
    uint64_t v66 = v63 + 1;
    if (__OFADD__(v63, 1)) {
      break;
    }
    char v67 = sub_1C254F420();
    uint64_t v68 = v64;
    char v69 = v67;
    v40(v68, v65);
    if (v69) {
      goto LABEL_5;
    }
    ++v63;
    v62 += v93;
    if (v66 == v107) {
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  sub_1C2266828((uint64_t)v113);
  sub_1C2266828((uint64_t)v17);
  sub_1C2266828((uint64_t)v21);
LABEL_63:
  uint64_t result = sub_1C2550900();
  __break(1u);
  return result;
}

uint64_t sub_1C22A42CC(uint64_t a1, uint64_t a2, uint64_t *a3, BOOL *a4)
{
  uint64_t v5 = v4;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v20 = a2;
  uint64_t v7 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1C22747C4(0, v11, 0);
    uint64_t v12 = v23;
    unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v14 = a1 + v13;
    uint64_t v15 = *(void *)(v8 + 72);
    while (1)
    {
      sub_1C22A1614(v14, v20, v21, v22, (uint64_t)v10);
      if (v5) {
        break;
      }
      uint64_t v5 = 0;
      uint64_t v23 = v12;
      unint64_t v17 = *(void *)(v12 + 16);
      unint64_t v16 = *(void *)(v12 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C22747C4(v16 > 1, v17 + 1, 1);
        uint64_t v12 = v23;
      }
      *(void *)(v12 + 16) = v17 + 1;
      sub_1C2266760((uint64_t)v10, v12 + v13 + v17 * v15);
      v14 += v15;
      if (!--v11) {
        return v12;
      }
    }
    swift_release();
  }
  return v12;
}

void sub_1C22A445C(void *a1)
{
  sub_1C22A0C94(a1, v1);
}

uint64_t sub_1C22A4464(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C22A44AC(uint64_t a1)
{
  return sub_1C22A1E68(a1);
}

unint64_t sub_1C22A44B4(uint64_t a1, uint64_t a2)
{
  sub_1C22A4788(0, (unint64_t *)&qword_1EA2DF3D0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v22 - v6;
  uint64_t v27 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v8 = MEMORY[0x1F4188790](v27);
  uint64_t v26 = (uint64_t)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v25 = (uint64_t)v22 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v22[1] = a1;
  unint64_t v23 = v13;
  uint64_t v14 = a1 + v13;
  uint64_t v15 = *(void *)(v10 + 72);
  unint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  unint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v24 = a2;
  do
  {
    sub_1C22A217C(v14, (uint64_t)v7);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((*v16)(v7, 1, v27) == 1)
    {
      sub_1C22A47EC((uint64_t)v7, (unint64_t *)&qword_1EA2DF3D0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    }
    else
    {
      uint64_t v18 = v25;
      sub_1C2266760((uint64_t)v7, v25);
      sub_1C2266760(v18, v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v17 = sub_1C226C100(0, *(void *)(v17 + 16) + 1, 1, v17);
      }
      unint64_t v20 = *(void *)(v17 + 16);
      unint64_t v19 = *(void *)(v17 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v17 = sub_1C226C100(v19 > 1, v20 + 1, 1, v17);
      }
      *(void *)(v17 + 16) = v20 + 1;
      sub_1C2266760(v26, v17 + v23 + v20 * v15);
    }
    v14 += v15;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v17;
}

void sub_1C22A4788(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C22A47EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C22A4788(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C22A485C()
{
  if (qword_1EBB6EF30 != -1) {
    swift_once();
  }
  uint64_t v0 = (id *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_currentProfile);
  swift_beginAccess();
  id v1 = *v0;
  id v2 = objc_msgSend(v1, sel_healthRecordsStore);

  id v3 = objc_msgSend(self, sel_imageManagerWithHealthRecordsStore_, v2);
  qword_1EBB6D860 = (uint64_t)v3;
}

id static HRBrandImageManager.shared.getter()
{
  if (qword_1EBB6D8A8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB6D860;
  return v0;
}

uint64_t HRBrandImageManager.retrieveLogo(for:size:options:completion:)(uint64_t *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  uint64_t v30 = a4;
  uint64_t v11 = sub_1C254F1C0();
  uint64_t v35 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C254F200();
  uint64_t v33 = *(void *)(v14 - 8);
  uint64_t v34 = v14;
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v20 = a1[2];
  uint64_t v19 = a1[3];
  if (a3)
  {
    objc_msgSend((id)swift_getObjCClassFromObject(), sel_defaultLogoDimension);
    uint64_t v21 = v22;
  }
  else
  {
    uint64_t v21 = a2;
  }
  sub_1C22023A4();
  unint64_t v23 = (void *)sub_1C254FC70();
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v7;
  v24[3] = v18;
  v24[4] = v17;
  v24[5] = v20;
  v24[6] = v19;
  v24[7] = v21;
  uint64_t v25 = v31;
  uint64_t v26 = v32;
  v24[8] = v30;
  v24[9] = v25;
  v24[10] = v26;
  aBlock[4] = sub_1C22A4ED8;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_24;
  uint64_t v27 = _Block_copy(aBlock);
  id v28 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C221B1F8((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C221B1A0();
  sub_1C221B1F8((unint64_t *)&qword_1EBB6FF40, (void (*)(uint64_t))sub_1C221B1A0);
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v16, v13, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v16, v34);
}

void sub_1C22A4CE8(void *a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v14 = objc_allocWithZone(MEMORY[0x1E4F2ACE0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = (void *)sub_1C254F430();
  unint64_t v16 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v14, sel_initWithExternalID_batchID_, v15, v16);

  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a8;
  *(void *)(v18 + 24) = a9;
  v20[4] = sub_1C22A4FB8;
  v20[5] = v18;
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 1107296256;
  v20[2] = sub_1C23447F8;
  v20[3] = &block_descriptor_6_0;
  uint64_t v19 = _Block_copy(v20);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_retrieveLogoForBrand_size_options_completion_, v17, a7, v19, a2);
  _Block_release(v19);
}

uint64_t sub_1C22A4E88()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 88, 7);
}

void sub_1C22A4ED8()
{
  sub_1C22A4CE8(*(void **)(v0 + 16), *(double *)(v0 + 56), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80));
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

void sub_1C22A4EFC(void *a1, id a2, void (*a3)(id, BOOL))
{
  id v5 = a2;
  if (!a2)
  {
    id v7 = a1;
    id v5 = a1;
  }
  id v8 = a2;
  a3(v5, a2 != 0);
  sub_1C21A8180(v5);
}

uint64_t sub_1C22A4F80()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C22A4FB8(void *a1, void *a2)
{
  sub_1C22A4EFC(a1, a2, *(void (**)(id, BOOL))(v2 + 16));
}

uint64_t sub_1C22A4FC8@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_meaningfulDate);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1C254CA80();

    uint64_t v5 = sub_1C254CAD0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1C254CAD0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

uint64_t sub_1C22A5090()
{
  return sub_1C223A124(&OBJC_IVAR____TtC15HealthRecordsUI8TipsView_titleText);
}

void sub_1C22A509C(uint64_t a1, uint64_t a2)
{
}

void (*sub_1C22A50BC(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI8TipsView_titleText;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C22A5128;
}

void sub_1C22A5128(void **a1, char a2)
{
}

uint64_t sub_1C22A5140()
{
  return sub_1C223A124(&OBJC_IVAR____TtC15HealthRecordsUI8TipsView_subtitleText);
}

void sub_1C22A514C(uint64_t a1, uint64_t a2)
{
}

void sub_1C22A516C(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v8 = (void *)(v4 + *a3);
  swift_beginAccess();
  *uint64_t v8 = a1;
  v8[1] = a2;
  uint64_t v9 = swift_bridgeObjectRelease();
  uint64_t v10 = (void *)a4(v9);
  if (v8[1])
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  objc_msgSend(v10, sel_setText_, v11);
}

void (*sub_1C22A5230(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI8TipsView_subtitleText;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C22A529C;
}

void sub_1C22A529C(void **a1, char a2)
{
}

void sub_1C22A52B4(void **a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v6 = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v7 = v5[3] + v5[4];
    uint64_t v8 = (void *)a3(v6);
    if (*(void *)(v7 + 8))
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
    }
    objc_msgSend(v8, sel_setText_, v9);
  }
  free(v5);
}

void *sub_1C22A536C()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView_attributedSubtitleText);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1C22A53BC(void *a1)
{
}

void (*sub_1C22A53E4(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI8TipsView_attributedSubtitleText;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C22A5450;
}

void sub_1C22A5450(void **a1, char a2)
{
}

void sub_1C22A5470(void **a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(void), SEL *a7)
{
  uint64_t v9 = *a1;
  uint64_t v10 = (id *)(*a2 + *a5);
  swift_beginAccess();
  id v11 = *v10;
  *uint64_t v10 = v9;
  id v12 = v9;

  unint64_t v13 = (void *)a6();
  id v14 = *v10;
  objc_msgSend(v13, *a7, v14);
}

void *sub_1C22A551C()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView_image);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1C22A556C(void *a1)
{
}

void sub_1C22A5594(void *a1, void *a2, uint64_t (*a3)(void), SEL *a4)
{
  uint64_t v8 = (id *)(v4 + *a2);
  swift_beginAccess();
  id v9 = *v8;
  *uint64_t v8 = a1;
  id v10 = a1;

  id v11 = (void *)a3();
  id v12 = *v8;
  objc_msgSend(v11, *a4, v12);
}

void (*sub_1C22A5638(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI8TipsView_image;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C22A56A4;
}

void sub_1C22A56A4(void **a1, char a2)
{
}

void sub_1C22A56C4(void **a1, char a2, uint64_t (*a3)(uint64_t), SEL *a4)
{
  uint64_t v7 = *a1;
  uint64_t v8 = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v9 = v7[3];
    uint64_t v10 = v7[4];
    id v11 = (void *)a3(v8);
    id v12 = *(id *)(v9 + v10);
    objc_msgSend(v11, *a4, v12);
  }
  free(v7);
}

id TipsView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id TipsView.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_titleText];
  *(void *)id v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = &v4[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_subtitleText];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_attributedSubtitleText] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_image] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___subtitleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___imageView] = 0;
  v23.receiver = v4;
  v23.super_class = (Class)type metadata accessor for TipsView();
  id v11 = objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v12 = v11;
  id v13 = sub_1C22A5A20();
  objc_msgSend(v12, sel_addSubview_, v13);

  id v14 = v12;
  id v15 = sub_1C22A5B8C();
  objc_msgSend(v14, sel_addSubview_, v15);

  id v16 = v14;
  id v17 = sub_1C22A5CF0();
  objc_msgSend(v16, sel_addSubview_, v17);

  sub_1C22A5E64(v16);
  unint64_t v18 = sub_1C22A61AC(v16);
  unint64_t v19 = sub_1C22A64FC(v16);
  uint64_t v20 = self;
  sub_1C227227C(v18);
  sub_1C227227C(v19);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  uint64_t v21 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_activateConstraints_, v21);

  return v16;
}

id sub_1C22A5A20()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___titleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setLineBreakMode_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    uint64_t v6 = (void *)sub_1C254FE50();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    id v7 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    uint64_t v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_1C22A5B8C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___subtitleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___subtitleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___subtitleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setLineBreakMode_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    uint64_t v6 = (void *)sub_1C254FE50();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    id v7 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    uint64_t v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_1C22A5CF0()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___imageView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___imageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___imageView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setContentMode_, 1);
    LODWORD(v6) = 1148846080;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v6);
    LODWORD(v7) = 1148846080;
    objc_msgSend(v5, sel_setContentCompressionResistancePriority_forAxis_, 0, v7);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
    uint64_t v8 = (void *)sub_1C254FEF0();
    objc_msgSend(v5, sel_setImage_, v8);

    id v9 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

uint64_t type metadata accessor for TipsView()
{
  return self;
}

uint64_t sub_1C22A5E64(void *a1)
{
  uint64_t v21 = MEMORY[0x1E4FBC860];
  id v2 = sub_1C22A5A20();
  id v3 = objc_msgSend(v2, sel_leadingAnchor);

  id v4 = sub_1C22A5CF0();
  id v5 = objc_msgSend(v4, sel_trailingAnchor);

  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 11.0);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v7 = sub_1C22A5A20();
  id v8 = objc_msgSend(v7, sel_trailingAnchor);

  id v9 = objc_msgSend(a1, sel_trailingAnchor);
  id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v9, -13.0);

  MEMORY[0x1C8757C00]();
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v11 = sub_1C22A5A20();
  id v12 = objc_msgSend(v11, sel_topAnchor);

  id v13 = objc_msgSend(a1, sel_topAnchor);
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  MEMORY[0x1C8757C00]();
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v15 = sub_1C22A5A20();
  id v16 = objc_msgSend(v15, sel_bottomAnchor);

  id v17 = sub_1C22A5B8C();
  id v18 = objc_msgSend(v17, sel_topAnchor);

  id v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  return v21;
}

uint64_t sub_1C22A61AC(void *a1)
{
  uint64_t v22 = MEMORY[0x1E4FBC860];
  id v2 = sub_1C22A5B8C();
  id v3 = objc_msgSend(v2, sel_leadingAnchor);

  id v4 = sub_1C22A5A20();
  id v5 = objc_msgSend(v4, sel_leadingAnchor);

  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v5);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v7 = sub_1C22A5B8C();
  id v8 = objc_msgSend(v7, sel_trailingAnchor);

  id v9 = sub_1C22A5A20();
  id v10 = objc_msgSend(v9, sel_trailingAnchor);

  id v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v10);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v12 = sub_1C22A5B8C();
  id v13 = objc_msgSend(v12, sel_topAnchor);

  id v14 = sub_1C22A5A20();
  id v15 = objc_msgSend(v14, sel_bottomAnchor);

  id v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v15);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v17 = sub_1C22A5B8C();
  id v18 = objc_msgSend(v17, sel_bottomAnchor);

  id v19 = objc_msgSend(a1, sel_bottomAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, -11.0);

  MEMORY[0x1C8757C00]();
  if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  return v22;
}

uint64_t sub_1C22A64FC(void *a1)
{
  uint64_t v11 = MEMORY[0x1E4FBC860];
  id v2 = sub_1C22A5CF0();
  id v3 = objc_msgSend(v2, sel_topAnchor);

  id v4 = objc_msgSend(a1, sel_topAnchor);
  id v5 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v4);

  MEMORY[0x1C8757C00]();
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v6 = sub_1C22A5CF0();
  id v7 = objc_msgSend(v6, sel_leadingAnchor);

  id v8 = objc_msgSend(a1, sel_leadingAnchor);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 13.0);

  MEMORY[0x1C8757C00]();
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  return v11;
}

void sub_1C22A66B0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v2 = sub_1C22A5A20();
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    id v3 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3);

    id v4 = sub_1C22A5B8C();
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    id v6 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v6);
  }
  else
  {
    id v5 = sub_1C22A5A20();
    objc_msgSend(v5, sel_setAccessibilityIdentifier_, 0);

    id v6 = sub_1C22A5B8C();
    objc_msgSend(v6, sel_setAccessibilityIdentifier_, 0);
  }
}

id TipsView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TipsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C22A68EC(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C22A6910@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI8TipsView_titleText, a2);
}

uint64_t sub_1C22A691C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C22A509C);
}

uint64_t sub_1C22A6934@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI8TipsView_subtitleText, a2);
}

uint64_t sub_1C22A6940(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C22A514C);
}

uint64_t keypath_setTm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

id sub_1C22A69A0@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI8TipsView_attributedSubtitleText, a2);
}

void sub_1C22A69AC(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

id sub_1C22A69E8@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI8TipsView_image, a2);
}

void sub_1C22A69F4(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

uint64_t method lookup function for TipsView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TipsView);
}

uint64_t dispatch thunk of TipsView.titleText.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TipsView.titleText.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TipsView.titleText.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of TipsView.subtitleText.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of TipsView.subtitleText.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of TipsView.subtitleText.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of TipsView.attributedSubtitleText.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of TipsView.attributedSubtitleText.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of TipsView.attributedSubtitleText.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of TipsView.image.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of TipsView.image.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of TipsView.image.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of TipsView.updateAutomationIdentifiers(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

void sub_1C22A6CF4()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_titleText];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  objc_super v2 = &v0[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_subtitleText];
  *(void *)objc_super v2 = 0;
  *((void *)v2 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_attributedSubtitleText] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_image] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___subtitleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI8TipsView____lazy_storage___imageView] = 0;

  sub_1C25505F0();
  __break(1u);
}

uint64_t sub_1C22A6DB0(uint64_t result)
{
  *(void *)(v1 + 112) = result;
  *(unsigned char *)(v1 + 120) = 0;
  if (*(unsigned char *)(v1 + 121) == 1)
  {
    swift_beginAccess();
    uint64_t v2 = *(void *)(v1 + 128);
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = v2 + 40;
      do
      {
        id v5 = *(void (**)(uint64_t))(v4 - 8);
        uint64_t v6 = swift_retain();
        v5(v6);
        swift_release();
        v4 += 16;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRelease();
    }
    *(void *)(v1 + 128) = MEMORY[0x1E4FBC860];
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C22A6E70()
{
  if ((*(unsigned char *)(v0 + 120) & 1) == 0 && *(unsigned char *)(v0 + 121) == 1)
  {
    swift_beginAccess();
    uint64_t v1 = *(void *)(v0 + 128);
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = v1 + 40;
      do
      {
        uint64_t v4 = *(void (**)(uint64_t))(v3 - 8);
        uint64_t v5 = swift_retain();
        v4(v5);
        swift_release();
        v3 += 16;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
    *(void *)(v0 + 128) = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
  }
}

void sub_1C22A6F30(uint64_t a1, uint64_t a2)
{
  sub_1C22A7154();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __n128 v8 = MEMORY[0x1F4188790](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5, v8);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v11 = (void *)(a2 + 128);
  swift_beginAccess();
  id v12 = *(void **)(a2 + 128);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 128) = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    id v12 = sub_1C226D05C(0, v12[2] + 1, 1, v12);
    *uint64_t v11 = v12;
  }
  unint64_t v15 = v12[2];
  unint64_t v14 = v12[3];
  if (v15 >= v14 >> 1)
  {
    id v12 = sub_1C226D05C((void *)(v14 > 1), v15 + 1, 1, v12);
    *uint64_t v11 = v12;
  }
  v12[2] = v15 + 1;
  id v16 = &v12[2 * v15];
  v16[4] = sub_1C22A7250;
  void v16[5] = v10;
  swift_endAccess();
  sub_1C22A6E70();
}

uint64_t sub_1C22A70F8()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t _s9LoadStateCMa()
{
  return self;
}

void sub_1C22A7154()
{
  if (!qword_1EA2DFE68)
  {
    unint64_t v0 = sub_1C254F800();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DFE68);
    }
  }
}

uint64_t sub_1C22A71C0()
{
  sub_1C22A7154();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C22A7250()
{
  return sub_1C254F7F0();
}

uint64_t sub_1C22A72B4()
{
  if (*(void *)(v0 + 32))
  {
    uint64_t v1 = *(void *)(v0 + 32);
  }
  else
  {
    uint64_t v2 = *(void **)(v0 + 16);
    type metadata accessor for OnboardingTileAppearanceManager();
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = v2;
    id v3 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
    id v4 = v2;
    uint64_t v5 = (void *)sub_1C254F430();
    id v6 = objc_msgSend(v3, sel_initWithCategory_domainName_healthStore_, 0, v5, v4);

    *(void *)(v1 + 24) = v6;
    *(void *)(v0 + 32) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1C22A7398()
{
  uint64_t v41 = *v0;
  uint64_t v1 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1F4188790](v1);
  id v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22A81FC(0, &qword_1EA2DFE70, (uint64_t (*)(uint64_t))sub_1C22A8160, sub_1C22A81C8, MEMORY[0x1E4F1A890]);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - v6;
  sub_1C22A81FC(0, &qword_1EA2DFE88, (uint64_t (*)(uint64_t))sub_1C22A827C, sub_1C22A8378, MEMORY[0x1E4F1A9A8]);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  uint64_t v34 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v32 - v10;
  sub_1C22A83F4();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  uint64_t v38 = v13;
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22A8640();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v39 = v16;
  uint64_t v40 = v17;
  MEMORY[0x1F4188790](v16);
  id v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v0[3];
  sub_1C22A827C();
  sub_1C22A8378();
  sub_1C254EC20();
  sub_1C22A72B4();
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = sub_1C21A567C();
  swift_release();
  sub_1C21AD5A8((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
  uint64_t v43 = v20;
  sub_1C22A8160();
  sub_1C22A81C8();
  uint64_t v21 = sub_1C254EBC0();
  swift_release();
  uint64_t v43 = v21;
  char v42 = 1;
  sub_1C254EBE0();
  swift_release();
  sub_1C22A8508();
  sub_1C22A85A4();
  uint64_t v22 = v33;
  uint64_t v23 = v35;
  sub_1C254EBF0();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v22);
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v41;
  *(void *)(v25 + 16) = v24;
  *(void *)(v25 + 24) = v26;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_1C22A874C;
  *(void *)(v27 + 24) = v25;
  sub_1C22A83AC(&qword_1EA2DFEB8, (void (*)(uint64_t))sub_1C22A83F4);
  uint64_t v28 = v37;
  sub_1C254EC00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v28);
  sub_1C22A83AC(&qword_1EA2DFEC0, (void (*)(uint64_t))sub_1C22A8640);
  uint64_t v29 = v39;
  uint64_t v30 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v29);
  return v30;
}

uint64_t sub_1C22A7950(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_1C254E560();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  swift_release();
  if (Strong)
  {
    int v13 = _s15HealthRecordsUI34LabsOnboardingTileDisplayEvaluatorC027meetsConditionsToShowPinnedD3Tip9listItems07nonListP0SbSayAA25UserDomainConceptViewDataVG_AItFZ_0(a1);
    sub_1C254E510();
    uint64_t v14 = sub_1C254E550();
    os_log_type_t v15 = sub_1C254FA00();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v30 = v28;
      *(_DWORD *)uint64_t v16 = 136446722;
      uint64_t v31 = a5;
      swift_getMetatypeMetadata();
      uint64_t v17 = sub_1C254F4F0();
      int v29 = v13;
      char v18 = a3;
      uint64_t v31 = sub_1C21AD354(v17, v19, &v30);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2082;
      if (v29) {
        uint64_t v20 = 1702195828;
      }
      else {
        uint64_t v20 = 0x65736C6166;
      }
      if (v29) {
        unint64_t v21 = 0xE400000000000000;
      }
      else {
        unint64_t v21 = 0xE500000000000000;
      }
      uint64_t v31 = sub_1C21AD354(v20, v21, &v30);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 22) = 2082;
      if (v18) {
        uint64_t v22 = 0x65736C6166;
      }
      else {
        uint64_t v22 = 1702195828;
      }
      if (v18) {
        unint64_t v23 = 0xE500000000000000;
      }
      else {
        unint64_t v23 = 0xE400000000000000;
      }
      uint64_t v31 = sub_1C21AD354(v22, v23, &v30);
      sub_1C2550120();
      a3 = v18;
      LOBYTE(v13) = v29;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v14, v15, "[%{public}s]: Conditions for showing tip: meetsConditions: %{public}s, !hasDismissed: %{public}s", (uint8_t *)v16, 0x20u);
      uint64_t v24 = v28;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v24, -1, -1);
      MEMORY[0x1C875A0B0](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    char v25 = v13 & (a3 ^ 1);
  }
  else
  {
    char v25 = 0;
  }
  return v25 & 1;
}

uint64_t LabsOnboardingTileDisplayEvaluator.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t LabsOnboardingTileDisplayEvaluator.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t _s15HealthRecordsUI34LabsOnboardingTileDisplayEvaluatorC027meetsConditionsToShowPinnedD3Tip9listItems07nonListP0SbSayAA25UserDomainConceptViewDataVG_AItFZ_0(uint64_t a1)
{
  sub_1C22A87CC(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v28 - v3;
  uint64_t v5 = sub_1C254CAD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v38 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v37 = (char *)v28 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v28 - v11;
  uint64_t v36 = type metadata accessor for UserDomainConceptViewData();
  unint64_t v39 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v14 = (id *)((char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v28 - v16;
  uint64_t v40 = a1;
  swift_bridgeObjectRetain();
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_1C22727E4(v18);
  unint64_t v19 = *(void *)(v40 + 16);
  if (v19)
  {
    v28[0] = *(void *)(a1 + 16);
    v28[1] = v40;
    uint64_t v20 = v40 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
    uint64_t v33 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v21 = *(void *)(v39 + 72);
    uint64_t v30 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v31 = v21;
    swift_bridgeObjectRetain();
    unint64_t v29 = v19;
    uint64_t v32 = v4;
    uint64_t v35 = v17;
    while (1)
    {
      unint64_t v39 = v19;
      sub_1C225F054(v20, (uint64_t)v17);
      sub_1C21EA654((uint64_t)&v17[*(int *)(v36 + 36)], (uint64_t)v4);
      sub_1C225F054((uint64_t)v17, (uint64_t)v14);
      if ((*v34)(v4, 1, v5) == 1)
      {
        id v22 = objc_msgSend(v14[1], sel_modificationDate);
        sub_1C254CA80();

        sub_1C22178C0((uint64_t)v4);
      }
      else
      {
        (*v30)(v12, v4, v5);
      }
      unint64_t v23 = v14;
      sub_1C21AD5A8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      uint64_t v24 = v37;
      sub_1C254CAC0();
      char v25 = v38;
      sub_1C254CA00();
      uint64_t v26 = *v33;
      (*v33)(v24, v5);
      LOBYTE(v24) = sub_1C254CA60();
      v26(v25, v5);
      v26(v12, v5);
      uint64_t v17 = v35;
      sub_1C21AD5A8((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      if (v24) {
        break;
      }
      uint64_t v4 = v32;
      v20 += v31;
      unint64_t v19 = v39 - 1;
      uint64_t v14 = v23;
      if (v39 == 1)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    if (v29 >= 6 && !v28[0]) {
      return 1;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t type metadata accessor for LabsOnboardingTileDisplayEvaluator()
{
  return self;
}

uint64_t method lookup function for LabsOnboardingTileDisplayEvaluator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LabsOnboardingTileDisplayEvaluator);
}

void sub_1C22A8160()
{
  if (!qword_1EA2DFE78)
  {
    sub_1C2206F9C();
    unint64_t v0 = sub_1C254E9E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DFE78);
    }
  }
}

uint64_t sub_1C22A81C8()
{
  return sub_1C22A83AC(&qword_1EA2DFE80, (void (*)(uint64_t))sub_1C22A8160);
}

void sub_1C22A81FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_1C22A827C()
{
  if (!qword_1EA2DFE90)
  {
    sub_1C22A82E4();
    unint64_t v0 = sub_1C254E9E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DFE90);
    }
  }
}

void sub_1C22A82E4()
{
  if (!qword_1EA2E1740)
  {
    sub_1C22A87CC(255, &qword_1EA2DF970, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E1740);
    }
  }
}

uint64_t sub_1C22A8378()
{
  return sub_1C22A83AC(&qword_1EA2E1750, (void (*)(uint64_t))sub_1C22A827C);
}

uint64_t sub_1C22A83AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C22A83F4()
{
  if (!qword_1EA2DFE98)
  {
    sub_1C22A81FC(255, &qword_1EA2DFE88, (uint64_t (*)(uint64_t))sub_1C22A827C, sub_1C22A8378, MEMORY[0x1E4F1A9A8]);
    sub_1C22A81FC(255, &qword_1EA2DFE70, (uint64_t (*)(uint64_t))sub_1C22A8160, sub_1C22A81C8, MEMORY[0x1E4F1A890]);
    sub_1C22A8508();
    sub_1C22A85A4();
    unint64_t v0 = sub_1C254E8F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DFE98);
    }
  }
}

unint64_t sub_1C22A8508()
{
  unint64_t result = qword_1EA2DFEA0;
  if (!qword_1EA2DFEA0)
  {
    sub_1C22A81FC(255, &qword_1EA2DFE88, (uint64_t (*)(uint64_t))sub_1C22A827C, sub_1C22A8378, MEMORY[0x1E4F1A9A8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DFEA0);
  }
  return result;
}

unint64_t sub_1C22A85A4()
{
  unint64_t result = qword_1EA2DFEA8;
  if (!qword_1EA2DFEA8)
  {
    sub_1C22A81FC(255, &qword_1EA2DFE70, (uint64_t (*)(uint64_t))sub_1C22A8160, sub_1C22A81C8, MEMORY[0x1E4F1A890]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DFEA8);
  }
  return result;
}

void sub_1C22A8640()
{
  if (!qword_1EA2DFEB0)
  {
    sub_1C22A83F4();
    sub_1C22A83AC(&qword_1EA2DFEB8, (void (*)(uint64_t))sub_1C22A83F4);
    unint64_t v0 = sub_1C254E930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DFEB0);
    }
  }
}

uint64_t sub_1C22A86DC()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C22A8714()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C22A874C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1C22A7950(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1C22A8754()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C22A878C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 16))(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  *a2 = result & 1;
  return result;
}

void sub_1C22A87CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_1C22A8830()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController____lazy_storage___modePicker;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController____lazy_storage___modePicker);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController____lazy_storage___modePicker);
  }
  else
  {
    id v4 = sub_1C22A8894(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C22A8894(uint64_t a1)
{
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1C2274814(0, 2, 0);
  char v1 = 0;
  uint64_t v2 = 0;
  uint64_t v3 = v19;
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  do
  {
    char v5 = v1;
    if (*((unsigned char *)&unk_1F1D8E1C8 + v2 + 32))
    {
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
    }
    else if (qword_1EBB6EF40 != -1)
    {
      swift_once();
    }
    id v6 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C254C730();
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();

    uint64_t v18 = v4;
    uint64_t v19 = v3;
    *(void *)&long long v17 = v7;
    *((void *)&v17 + 1) = v9;
    unint64_t v11 = *(void *)(v3 + 16);
    unint64_t v10 = *(void *)(v3 + 24);
    if (v11 >= v10 >> 1)
    {
      sub_1C2274814(v10 > 1, v11 + 1, 1);
      uint64_t v3 = v19;
    }
    *(void *)(v3 + 16) = v11 + 1;
    sub_1C2206B9C(&v17, (_OWORD *)(v3 + 32 * v11 + 32));
    char v1 = 1;
    uint64_t v2 = 1u;
  }
  while ((v5 & 1) == 0);
  id v12 = objc_allocWithZone(MEMORY[0x1E4FB1C10]);
  uint64_t v13 = (void *)sub_1C254F700();
  swift_release();
  id v14 = objc_msgSend(v12, sel_initWithItems_, v13, 0xE000000000000000);

  objc_msgSend(v14, sel_setSelectedSegmentIndex_, 0);
  objc_msgSend(v14, sel_addTarget_action_forControlEvents_, a1, sel_modePickerDidChange_, 4096);
  objc_msgSend(v14, sel_sizeToFit);
  return v14;
}

char *sub_1C22A8B24(void *a1, void *a2, void *a3)
{
  id v41 = a2;
  uint64_t v43 = sub_1C254FB20();
  uint64_t v6 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB5BC(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  id v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v40 - v13;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController_preferredSegment) = 0;
  uint64_t v15 = OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController_additionalPredicate;
  *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController_additionalPredicate) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController____lazy_storage___modePicker) = 0;
  uint64_t v16 = *(void **)(v3 + v15);
  *(void *)(v3 + v15) = a3;
  id v42 = a3;

  id v17 = objc_msgSend(a1, sel_categoryTypes);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
  unint64_t v18 = sub_1C254F710();

  uint64_t result = (char *)objc_msgSend(self, sel_allSupportedRecordCategories);
  if (result)
  {
    uint64_t v20 = result;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FFC0);
    unint64_t v21 = sub_1C254F710();

    swift_bridgeObjectRetain();
    id v22 = sub_1C22A9864(v21, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v23 = sub_1C254CB40();
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
    v24(v14, 1, 1, v23);
    v24(v12, 1, 1, v23);
    id v25 = v22;
    id v26 = a1;
    id v27 = v41;
    uint64_t v28 = sub_1C21FDDB8(v27, v22, (uint64_t)v14, 0, a1, (uint64_t)v12, 0, 0, 0);

    uint64_t v29 = qword_1EBB6EF40;
    uint64_t v30 = v28;
    if (v29 != -1) {
      swift_once();
    }
    id v31 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1C254C730();
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();

    uint64_t v35 = (uint64_t *)&v30[OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle];
    swift_beginAccess();
    *uint64_t v35 = v32;
    v35[1] = v34;

    swift_bridgeObjectRelease();
    id v36 = objc_msgSend(v30, sel_navigationItem);
    id v37 = sub_1C22A8830();
    uint64_t v38 = v43;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F66780], v43);
    unint64_t v39 = (void *)sub_1C254FB10();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v38);
    return v30;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C22A9058()
{
  id v1 = sub_1C22A8830();
  unint64_t v2 = (unint64_t)objc_msgSend(v1, sel_selectedSegmentIndex);

  if (v2 > 1)
  {
    __break(1u);
  }
  else
  {
    char v3 = byte_1F1D8E648[v2 + 32];
    uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController_preferredSegment;
    *(unsigned char *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController_preferredSegment) = v3;
    uint64_t v5 = OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider;
    uint64_t v6 = *(void **)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider);
    if (v6)
    {
      objc_msgSend(v6, sel_setShouldClearPagingCacheOnNextReload_, 1);
      uint64_t v7 = *(void **)(v0 + v5);
      if (v7)
      {
        char v8 = *(unsigned char *)(v0 + v4);
        uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController_additionalPredicate);
        id v10 = v7;
        id v11 = v9;
        unint64_t v12 = sub_1C22A91D0(v9, v8);

        if (v12)
        {
          sub_1C21AB51C(0, &qword_1EBB6FF78);
          sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
          sub_1C21AB970();
          id v13 = (id)sub_1C254F2C0();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v13 = 0;
        }
        objc_msgSend(v10, sel_setFilterPredicatesByType_, v13);
      }
    }
  }
}

unint64_t sub_1C22A91D0(void *a1, char a2)
{
  if (a2)
  {
    id v8 = objc_msgSend(self, sel_diagnosticTestResultType);
    id v9 = objc_msgSend(self, sel_predicateForDiagnosticTestResultWithReferenceRangeStatus_, 2);
    id v10 = v9;
    if (a1)
    {
      sub_1C22A9C00(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C255CD70;
      *(void *)(v11 + 32) = v10;
      *(void *)(v11 + 40) = a1;
      sub_1C254F730();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
      id v12 = a1;
      id v13 = v10;
      id v14 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v15 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v14);
    }
    else
    {
      id v15 = v9;
    }
    sub_1C21AB5BC(0, &qword_1EA2DFF08, (uint64_t (*)(uint64_t))sub_1C22A9B70, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
    *(void *)(inited + 32) = v8;
    *(void *)(inited + 40) = v15;
    id v17 = v8;
    unint64_t v7 = sub_1C2204BFC(inited);
  }
  else if (a1)
  {
    char v3 = self;
    id v4 = a1;
    id v5 = objc_msgSend(v3, sel_diagnosticTestResultType);
    sub_1C21AB5BC(0, &qword_1EA2DFF08, (uint64_t (*)(uint64_t))sub_1C22A9B70, MEMORY[0x1E4FBBE00]);
    uint64_t v6 = swift_initStackObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C255CD90;
    *(void *)(v6 + 32) = v5;
    *(void *)(v6 + 40) = v4;
    return sub_1C2204BFC(v6);
  }
  else
  {
    return 0;
  }
  return v7;
}

void sub_1C22A94B4()
{
}

void sub_1C22A94E4()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29UDCRecordsTableViewController____lazy_storage___modePicker);
}

id sub_1C22A9524()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UDCRecordsTableViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C22A95A8()
{
  return type metadata accessor for UDCRecordsTableViewController();
}

uint64_t type metadata accessor for UDCRecordsTableViewController()
{
  uint64_t result = qword_1EA2DFEE0;
  if (!qword_1EA2DFEE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C22A95FC()
{
  return swift_updateClassMetadata2();
}

unsigned char *storeEnumTagSinglePayload for UDCRecordsTableViewController.ModeSegment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C22A9718);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UDCRecordsTableViewController.ModeSegment()
{
  return &type metadata for UDCRecordsTableViewController.ModeSegment;
}

unint64_t sub_1C22A9754()
{
  unint64_t result = qword_1EA2DFEF0;
  if (!qword_1EA2DFEF0)
  {
    sub_1C22A9C00(255, &qword_1EA2DFEF8, (uint64_t)&type metadata for UDCRecordsTableViewController.ModeSegment, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DFEF0);
  }
  return result;
}

void *sub_1C22A97D0@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_1C22A97F0(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_1C22A97FC(void *a1@<X8>)
{
  *a1 = &unk_1F1D8E670;
}

unint64_t sub_1C22A9810()
{
  unint64_t result = qword_1EA2DFF00;
  if (!qword_1EA2DFF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DFF00);
  }
  return result;
}

id sub_1C22A9864(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_39;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v4)
  {
    uint64_t v25 = v3;
    uint64_t v5 = 0;
    unint64_t v6 = v3 & 0xC000000000000001;
    uint64_t v26 = v3 + 32;
    unint64_t v27 = v3 & 0xC000000000000001;
    unint64_t v7 = &selRef_addSubview_;
    unint64_t v8 = 0x1E4F28000uLL;
    unint64_t v28 = a2 & 0xC000000000000001;
    uint64_t v24 = v4;
    while (1)
    {
      if (v6)
      {
        id v10 = (id)MEMORY[0x1C87588E0](v5, v3);
        BOOL v11 = __OFADD__(v5++, 1);
        if (v11) {
          goto LABEL_38;
        }
      }
      else
      {
        id v10 = *(id *)(v26 + 8 * v5);
        BOOL v11 = __OFADD__(v5++, 1);
        if (v11) {
          goto LABEL_38;
        }
      }
      id v29 = v10;
      id v12 = objc_msgSend(objc_allocWithZone(*(Class *)(v8 + 3792)), sel_initWithInteger_, objc_msgSend(v10, v7[87]));
      if (a2 >> 62) {
        break;
      }
      uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13) {
        goto LABEL_15;
      }
LABEL_4:

      swift_bridgeObjectRelease();
      id v9 = v29;
LABEL_5:

      if (v5 == v4) {
        goto LABEL_40;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C2550620();
    if (!v13) {
      goto LABEL_4;
    }
LABEL_15:
    if (v28) {
      id v14 = (id)MEMORY[0x1C87588E0](0, a2);
    }
    else {
      id v14 = *(id *)(a2 + 32);
    }
    id v15 = v14;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
    char v16 = sub_1C254FF70();

    if (v16)
    {
LABEL_33:

      swift_bridgeObjectRelease();
      id v22 = v29;
      swift_bridgeObjectRelease();
      return v22;
    }
    if (v13 == 1)
    {

      swift_bridgeObjectRelease();
LABEL_31:
      unint64_t v6 = v27;
      id v9 = v29;
      unint64_t v7 = &selRef_addSubview_;
      unint64_t v8 = 0x1E4F28000;
      goto LABEL_5;
    }
    if (v28)
    {
      uint64_t v17 = 1;
      while (1)
      {
        MEMORY[0x1C87588E0](v17, a2);
        uint64_t v18 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          break;
        }
        uint64_t v3 = sub_1C254FF70();
        swift_unknownObjectRelease();
        if (v3) {
          goto LABEL_33;
        }
        ++v17;
        if (v18 == v13) {
          goto LABEL_30;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v3 = 5;
      while (1)
      {
        uint64_t v19 = v3 - 3;
        if (__OFADD__(v3 - 4, 1)) {
          break;
        }
        id v20 = *(id *)(a2 + 8 * v3);
        char v21 = sub_1C254FF70();

        if (v21) {
          goto LABEL_33;
        }
        ++v3;
        if (v19 == v13)
        {
LABEL_30:

          swift_bridgeObjectRelease();
          uint64_t v3 = v25;
          uint64_t v4 = v24;
          goto LABEL_31;
        }
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
  }
LABEL_40:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1C22A9B70()
{
  if (!qword_1EA2E39E0)
  {
    sub_1C21AB51C(255, &qword_1EBB6FF78);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF60);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E39E0);
    }
  }
}

void sub_1C22A9C00(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C22A9C4C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C22A9C98(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView_viewData);
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *v3;
  uint64_t *v3 = a1;
  if (v5)
  {
    if (a1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v6 = sub_1C22ABD80(v5, a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v6) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  else if (!a1)
  {
    return result;
  }
  sub_1C22AA434();
  return swift_bridgeObjectRelease();
}

void (*sub_1C22A9D40(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView_viewData;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  swift_bridgeObjectRetain();
  return sub_1C22A9DC8;
}

void sub_1C22A9DC8(uint64_t a1, char a2)
{
  char v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  uint64_t v3 = *(void *)(*(void *)a1 + 40);
  uint64_t v5 = *(void *)(v4 + v3);
  *(void *)(v4 + v3) = *(void *)(*(void *)a1 + 24);
  uint64_t v7 = v2[4];
  uint64_t v6 = v2[5];
  if (a2)
  {
    uint64_t v8 = *(void *)(v7 + v6);
    swift_bridgeObjectRetain();
    if (v5)
    {
      if (v8)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v9 = sub_1C22ABD80(v5, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v9) {
          goto LABEL_12;
        }
      }
      goto LABEL_11;
    }
    if (v8)
    {
LABEL_11:
      sub_1C22AA434();
LABEL_12:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v7 + v6);
    if (v5)
    {
      if (v10)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v11 = sub_1C22ABD80(v5, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_16;
        }
      }
    }
    else if (!v10)
    {
      goto LABEL_17;
    }
    sub_1C22AA434();
  }
LABEL_16:
  swift_bridgeObjectRelease();
LABEL_17:
  free(v2);
}

id sub_1C22A9EE4()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView____lazy_storage___stackView;
  char v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView____lazy_storage___stackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView____lazy_storage___stackView);
  }
  else
  {
    id v4 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
    uint64_t v5 = (void *)sub_1C254F700();
    id v6 = objc_msgSend(v4, sel_initWithArrangedSubviews_, v5);

    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v6, sel_setAxis_, 1);
    objc_msgSend(v6, sel_setDistribution_, 3);
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    char v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id MultiValueView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id MultiValueView.init(frame:)(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView_viewData] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView____lazy_storage___stackView] = 0;
  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for MultiValueView();
  id v9 = objc_msgSendSuper2(&v13, sel_initWithFrame_, a1, a2, a3, a4);
  LODWORD(v10) = 1144750080;
  objc_msgSend(v9, sel_setContentCompressionResistancePriority_forAxis_, 1, v10);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v11 = sub_1C22A9EE4();
  objc_msgSend(v9, sel_addSubview_, v11);

  sub_1C22AA1C8();
  return v9;
}

void sub_1C22AA1C8()
{
  uint64_t v1 = self;
  sub_1C21ACA3C();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255DBA0;
  id v3 = sub_1C22A9EE4();
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  id v5 = objc_msgSend(v0, sel_leadingAnchor);
  id v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v5);

  *(void *)(v2 + 32) = v6;
  id v7 = sub_1C22A9EE4();
  id v8 = objc_msgSend(v7, sel_trailingAnchor);

  id v9 = objc_msgSend(v0, sel_trailingAnchor);
  id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(void *)(v2 + 40) = v10;
  id v11 = sub_1C22A9EE4();
  id v12 = objc_msgSend(v11, sel_topAnchor);

  id v13 = objc_msgSend(v0, sel_topAnchor);
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(void *)(v2 + 48) = v14;
  id v15 = sub_1C22A9EE4();
  id v16 = objc_msgSend(v15, sel_bottomAnchor);

  id v17 = objc_msgSend(v0, sel_bottomAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(void *)(v2 + 56) = v18;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  id v19 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v19);
}

uint64_t sub_1C22AA434()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView_viewData);
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *v1;
  if (!*v1) {
    return result;
  }
  swift_bridgeObjectRetain();
  id v4 = sub_1C22A9EE4();
  id v5 = objc_msgSend(v4, sel_arrangedSubviews);

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
  unint64_t v6 = sub_1C254F710();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C2550620();
    uint64_t v7 = result;
    if (result) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_4:
      if (v7 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v8 = 0;
      do
      {
        if ((v6 & 0xC000000000000001) != 0) {
          id v9 = (id)MEMORY[0x1C87588E0](v8, v6);
        }
        else {
          id v9 = *(id *)(v6 + 8 * v8 + 32);
        }
        id v10 = v9;
        ++v8;
        id v11 = sub_1C22A9EE4();
        objc_msgSend(v11, sel_removeArrangedSubview_, v10);
      }
      while (v7 != v8);
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v12 = *(void *)(v3 + 16);
  if (v12)
  {
    uint64_t v71 = (objc_class *)type metadata accessor for SingleValueView();
    swift_bridgeObjectRetain();
    id v13 = (unsigned __int8 *)(v3 + 132);
    do
    {
      uint64_t v112 = *(void *)(v13 - 100);
      uint64_t v113 = v12;
      uint64_t v14 = *(void *)(v13 - 92);
      uint64_t v15 = *(void *)(v13 - 76);
      id v16 = *(void **)(v13 - 68);
      id v17 = *(void **)(v13 - 60);
      int64_t v97 = v17;
      uint64_t v99 = v16;
      id v18 = *(void **)(v13 - 52);
      uint64_t v94 = v18;
      uint64_t v110 = *(void *)(v13 - 44);
      uint64_t v111 = *(void *)(v13 - 84);
      uint64_t v19 = *(void *)(v13 - 36);
      uint64_t v20 = *(void *)(v13 - 20);
      uint64_t v107 = *(void *)(v13 - 12);
      uint64_t v109 = *(void *)(v13 - 28);
      int v82 = *(v13 - 4);
      int v78 = *(v13 - 3);
      int v80 = *(v13 - 2);
      int v86 = *(v13 - 1);
      int v90 = *v13;
      id v21 = objc_allocWithZone(v71);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v105 = v16;
      id v103 = v17;
      id v101 = v18;
      swift_bridgeObjectRetain();
      id v22 = (char *)objc_msgSend(v21, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
      objc_msgSend(v22, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      int v23 = 256;
      if (!v78) {
        int v23 = 0;
      }
      int v24 = v23 | v82;
      int v25 = 0x10000;
      if (!v80) {
        int v25 = 0;
      }
      int v26 = 0x1000000;
      if (!v86) {
        int v26 = 0;
      }
      int v27 = v24 | v25 | v26;
      BOOL v28 = v90 != 0;
      id v29 = &v22[OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_viewData];
      swift_beginAccess();
      uint64_t v87 = *((void *)v29 + 1);
      uint64_t v91 = *(void *)v29;
      uint64_t v81 = *((void *)v29 + 3);
      uint64_t v83 = *((void *)v29 + 2);
      uint64_t v77 = (void *)*((void *)v29 + 5);
      BOOL v79 = (void *)*((void *)v29 + 4);
      char v76 = (void *)*((void *)v29 + 6);
      long long v75 = *((_OWORD *)v29 + 4);
      uint64_t v73 = *((void *)v29 + 11);
      uint64_t v74 = *((void *)v29 + 10);
      unint64_t v30 = *((unsigned int *)v29 + 24) | ((unint64_t)v29[100] << 32);
      *(void *)id v29 = v112;
      *((void *)v29 + 1) = v14;
      *((void *)v29 + 2) = v111;
      *((void *)v29 + 3) = v15;
      *((void *)v29 + 4) = v99;
      *((void *)v29 + 5) = v97;
      *((void *)v29 + 6) = v94;
      *((void *)v29 + 7) = v110;
      *((void *)v29 + 8) = v19;
      *((void *)v29 + 9) = v109;
      *((void *)v29 + 10) = v20;
      *((void *)v29 + 11) = v107;
      *((_DWORD *)v29 + 24) = v27;
      v29[100] = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v31 = v105;
      id v108 = v103;
      id v106 = v101;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C22AC064(v91, v87, v83, v81, v79, v77, v76);
      id v32 = objc_msgSend(v22, sel_superview, v75, v74, v73, v30);
      if (v32)
      {
        uint64_t v104 = v32;
        objc_msgSend(v32, sel_bounds);
        double Width = CGRectGetWidth(v114);
        if (qword_1EA2DD6F0 != -1) {
          swift_once();
        }
        double v34 = *(double *)&qword_1EA303B58;
        double v35 = *(double *)&qword_1EA303B68;
        id v36 = sub_1C234C380();
        id v37 = v36;
        uint64_t v38 = *((void *)v29 + 1);
        uint64_t v72 = v22;
        id v100 = v31;
        if (v38)
        {
          unint64_t v39 = *((unsigned int *)v29 + 24) | ((unint64_t)v29[100] << 32);
          id v102 = v36;
          uint64_t v41 = *((void *)v29 + 10);
          uint64_t v40 = *((void *)v29 + 11);
          uint64_t v42 = *((void *)v29 + 9);
          uint64_t v95 = (void *)*((void *)v29 + 6);
          uint64_t v92 = (void *)*((void *)v29 + 5);
          uint64_t v84 = *((void *)v29 + 8);
          uint64_t v88 = (void *)*((void *)v29 + 4);
          uint64_t v44 = *((void *)v29 + 2);
          uint64_t v43 = *((void *)v29 + 3);
          uint64_t v45 = *(void *)v29;
          sub_1C22AC0E8(*(void *)v29, v38, v44, v43, v88, v92, v95);
          swift_bridgeObjectRetain();
          uint64_t v69 = v40;
          unint64_t v70 = v39;
          uint64_t v66 = v42;
          uint64_t v67 = v41;
          uint64_t v64 = v84;
          uint64_t v46 = v44;
          id v31 = v100;
          id v37 = v102;
          id v22 = v72;
          sub_1C22AC064(v45, v38, v46, v43, v88, v92, v95);
          unint64_t v47 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v47 = 0;
        }
        objc_msgSend(v37, sel_setText_, v47, v64, v66, v67, v69, v70);

        uint64_t v48 = *((void *)v29 + 1);
        if (v48)
        {
          uint64_t v49 = *((void *)v29 + 10);
          unint64_t v85 = *((unsigned int *)v29 + 24) | ((unint64_t)v29[100] << 32);
          uint64_t v89 = *((void *)v29 + 11);
          uint64_t v50 = *((void *)v29 + 8);
          uint64_t v52 = (void *)*((void *)v29 + 4);
          char v51 = (void *)*((void *)v29 + 5);
          uint64_t v53 = *((void *)v29 + 3);
          uint64_t v98 = *((void *)v29 + 2);
          uint64_t v93 = *((void *)v29 + 9);
          uint64_t v96 = *(void *)v29;
          uint64_t v54 = (void *)*((void *)v29 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v55 = v52;
          id v56 = v51;
          id v57 = v54;
          swift_bridgeObjectRetain();
          id v58 = sub_1C234B94C(Width - v34 - v35);
          uint64_t v68 = v49;
          id v31 = v100;
          uint64_t v65 = v50;
          id v22 = v72;
          sub_1C22AC064(v96, v48, v98, v53, v52, v51, v54);
          id v59 = sub_1C234C280();
          objc_msgSend(v59, sel_setAttributedText_, v58, v65, v93, v68, v89, v85);
        }
        sub_1C234C8A8();
      }
      id v60 = sub_1C22A9EE4();
      objc_msgSend(v60, sel_addArrangedSubview_, v22);

      if (v113 != 1)
      {
        id v61 = sub_1C22A9EE4();
        id v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C08]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
        HKUIOnePixel();
        objc_msgSend(v62, sel_setSeparatorThickness_);
        id v63 = objc_msgSend(self, sel_separatorColor);
        objc_msgSend(v62, sel_setColor_, v63);

        objc_msgSend(v62, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        objc_msgSend(v61, sel_addArrangedSubview_, v62);
      }
      v13 += 104;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v113 - 1;
    }
    while (v113 != 1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

id MultiValueView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MultiValueView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C22AACE0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_1C2550870(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    id v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1C2550870() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C22AADA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = 0;
    uint64_t v19 = a1;
    uint64_t v20 = a2;
    while (1)
    {
      uint64_t v5 = *(void *)(a1 + v3 + 48);
      uint64_t v4 = *(void *)(a1 + v3 + 56);
      uint64_t v6 = *(void *)(a1 + v3 + 64);
      uint64_t v7 = *(unsigned __int8 *)(a1 + v3 + 72);
      uint64_t v9 = *(void *)(a2 + v3 + 48);
      uint64_t v8 = *(void *)(a2 + v3 + 56);
      uint64_t v10 = *(void *)(a2 + v3 + 64);
      int v21 = *(unsigned __int8 *)(a2 + v3 + 72);
      if (*(void *)(a1 + v3 + 32) != *(void *)(a2 + v3 + 32)
        || *(void *)(a1 + v3 + 40) != *(void *)(a2 + v3 + 40))
      {
        uint64_t v12 = *(void *)(a2 + v3 + 64);
        uint64_t v13 = *(void *)(a2 + v3 + 56);
        char v14 = sub_1C2550870();
        uint64_t v8 = v13;
        uint64_t v10 = v12;
        if ((v14 & 1) == 0) {
          break;
        }
      }
      BOOL v15 = v5 == v9 && v4 == v8;
      if (!v15 && (sub_1C2550870() & 1) == 0) {
        break;
      }
      switch(v7)
      {
        case 1:
          if (v21 != 1) {
            return 0;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v16 = sub_1C22D1F28(v6, v10);
          break;
        case 2:
          if (v21 != 2) {
            return 0;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v16 = sub_1C22D21F8(v6, v10);
          break;
        case 3:
          if (v21 != 3) {
            return 0;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v16 = sub_1C22D2530(v6, v10);
          break;
        case 4:
          if (v21 != 4) {
            return 0;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v16 = sub_1C22D2708(v6, v10);
          break;
        default:
          if (v21) {
            return 0;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v16 = sub_1C22D1CB0(v6, v10);
          break;
      }
      char v17 = v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0) {
        break;
      }
      v3 += 48;
      --v2;
      a1 = v19;
      a2 = v20;
      if (!v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1C22AB0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 56);
    for (uint64_t i = (uint64_t *)(a2 + 56); ; i += 10)
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v6 = *v3;
      uint64_t v7 = v3[1];
      uint64_t v20 = v3[3];
      uint64_t v21 = v3[2];
      uint64_t v14 = v3[5];
      uint64_t v15 = v3[6];
      uint64_t v8 = *(i - 1);
      uint64_t v9 = *i;
      uint64_t v10 = i[1];
      uint64_t v11 = i[2];
      uint64_t v18 = i[3];
      uint64_t v19 = v3[4];
      uint64_t v13 = i[5];
      uint64_t v16 = i[6];
      uint64_t v17 = i[4];
      if ((*(v3 - 3) != *(i - 3) || *(v3 - 2) != *(i - 2)) && (sub_1C2550870() & 1) == 0) {
        break;
      }
      if ((v5 != v8 || v6 != v9) && (sub_1C2550870() & 1) == 0
        || (v7 != v10 || v21 != v11) && (sub_1C2550870() & 1) == 0
        || (v20 != v18 || v19 != v17) && (sub_1C2550870() & 1) == 0)
      {
        break;
      }
      if (v15)
      {
        if (!v16 || (v14 != v13 || v15 != v16) && (sub_1C2550870() & 1) == 0) {
          return 0;
        }
      }
      else if (v16)
      {
        return 0;
      }
      v3 += 10;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1C22AB284(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CB40();
  MEMORY[0x1F4188790](v4);
  __n128 v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v13 = v6 + 16;
      id v31 = v7;
      id v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v33 = v13;
      uint64_t v29 = v15;
      unint64_t v30 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v16 = v11 - 1;
      uint64_t v17 = v7;
      do
      {
        uint64_t v18 = a1;
        uint64_t v19 = v10;
        uint64_t v20 = v10;
        uint64_t v21 = v32;
        ((void (*)(char *, unint64_t, uint64_t, __n128))v32)(v19, a1 + v12, v4, v8);
        uint64_t v22 = a2;
        v21(v17, a2 + v12, v4);
        uint64_t v10 = v20;
        sub_1C22AC00C();
        char v23 = sub_1C254F420();
        int v24 = *v30;
        (*v30)(v17, v4);
        v24(v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v12 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_1C22AB474(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v6 == v22) {
      goto LABEL_5;
    }
    return 0;
  }
  if (v6 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_5:
  if (!v6) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  if (v5) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v9;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v6 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = MEMORY[0x1C87588E0](0, a1);
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  uint64_t v5 = (void *)result;
  unint64_t v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v12 = (id)MEMORY[0x1C87588E0](0, a2);
LABEL_22:
    uint64_t v13 = v12;
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    char v14 = sub_1C254FF70();

    if (v14)
    {
      uint64_t v15 = 1 - v6;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v6 = v15 + i == 5;
        if (v15 + i == 5) {
          return v6;
        }
        unint64_t v20 = i - 4;
        if (v23)
        {
          id v21 = (id)MEMORY[0x1C87588E0](i - 4, a1);
          if (v2) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v20 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          id v21 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_24:
            id v17 = (id)MEMORY[0x1C87588E0](i - 4, a2);
            goto LABEL_25;
          }
        }
        if (v20 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v17 = *(id *)(a2 + 8 * i);
LABEL_25:
        uint64_t v18 = v17;
        char v19 = sub_1C254FF70();

        if ((v19 & 1) == 0) {
          return v6;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

id sub_1C22AB6F4(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)MEMORY[0x1C87588E0](0, v3))
  {
    uint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)MEMORY[0x1C87588E0](0, a2);
LABEL_22:
    uint64_t v13 = v12;
    sub_1C21AB51C(0, &qword_1EBB6F978);
    char v14 = sub_1C254FF70();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)MEMORY[0x1C87588E0](v16 + 1, v3);
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        char v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)MEMORY[0x1C87588E0](v16 + 1, a2);
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        id v21 = v20;
        unint64_t v5 = sub_1C254FF70();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      int v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        int v27 = *v25++;
        BOOL v26 = v27;
        uint64_t v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = sub_1C254FF70();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C22AB9E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() - 8;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (uint64_t *)((char *)&v24 - v9);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v24 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v17 && a1 != a2)
  {
    unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v19 = *(void *)(v14 + 72);
    do
    {
      sub_1C22667C4(a1 + v18, (uint64_t)v16);
      sub_1C22667C4(a2 + v18, (uint64_t)v13);
      if (*((void *)v16 + 2) == *((void *)v13 + 2) && *((void *)v16 + 3) == *((void *)v13 + 3))
      {
        sub_1C22667C4((uint64_t)v16, (uint64_t)v10);
        sub_1C22667C4((uint64_t)v13, (uint64_t)v7);
      }
      else
      {
        char v22 = sub_1C2550870();
        sub_1C22667C4((uint64_t)v16, (uint64_t)v10);
        sub_1C22667C4((uint64_t)v13, (uint64_t)v7);
        if ((v22 & 1) == 0)
        {
          sub_1C2266828((uint64_t)v10);
          sub_1C2266828((uint64_t)v7);
          sub_1C2266828((uint64_t)v13);
          sub_1C2266828((uint64_t)v16);
          return 0;
        }
      }
      if (*v10 == *v7 && v10[1] == v7[1])
      {
        sub_1C2266828((uint64_t)v10);
        sub_1C2266828((uint64_t)v7);
        sub_1C2266828((uint64_t)v13);
        sub_1C2266828((uint64_t)v16);
      }
      else
      {
        char v20 = sub_1C2550870();
        sub_1C2266828((uint64_t)v10);
        sub_1C2266828((uint64_t)v7);
        sub_1C2266828((uint64_t)v13);
        sub_1C2266828((uint64_t)v16);
        if ((v20 & 1) == 0) {
          return 0;
        }
      }
      v18 += v19;
      --v17;
    }
    while (v17);
  }
  return 1;
}

uint64_t sub_1C22ABC44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void **)(a1 + 32);
    uint64_t v4 = (void **)(a2 + 32);
    do
    {
      uint64_t v6 = *v3++;
      uint64_t v5 = v6;
      uint64_t v8 = *v4++;
      uint64_t v7 = v8;
      switch((unint64_t)v5)
      {
        case 0uLL:
          if (v7) {
            return 0;
          }
          break;
        case 1uLL:
          if (v7 != (void *)1) {
            return 0;
          }
          break;
        case 2uLL:
          if (v7 != (void *)2) {
            return 0;
          }
          break;
        case 3uLL:
          if (v7 != (void *)3) {
            return 0;
          }
          break;
        default:
          if ((unint64_t)v7 < 4) {
            return 0;
          }
          sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
          sub_1C2223774(v7);
          sub_1C2223774(v5);
          char v9 = sub_1C254FF70();
          sub_1C2223E28(v7);
          sub_1C2223E28(v5);
          if ((v9 & 1) == 0) {
            return 0;
          }
          break;
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1C22ABD80(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v25 = 1;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v2 - 1;
      do
      {
        uint64_t v7 = *(void *)(a1 + v5 + 40);
        char v8 = *(unsigned char *)(a1 + v5 + 128);
        char v9 = *(unsigned char *)(a1 + v5 + 129);
        char v10 = *(unsigned char *)(a1 + v5 + 130);
        char v11 = *(unsigned char *)(a1 + v5 + 131);
        char v12 = *(unsigned char *)(a1 + v5 + 132);
        v40[0] = *(void *)(a1 + v5 + 32);
        v40[1] = v7;
        long long v13 = *(_OWORD *)(a1 + v5 + 64);
        long long v41 = *(_OWORD *)(a1 + v5 + 48);
        long long v14 = *(_OWORD *)(a1 + v5 + 80);
        long long v15 = *(_OWORD *)(a1 + v5 + 96);
        long long v42 = v13;
        long long v43 = v14;
        long long v16 = *(_OWORD *)(a1 + v5 + 112);
        long long v44 = v15;
        long long v45 = v16;
        char v46 = v8;
        char v47 = v9;
        char v48 = v10;
        char v49 = v11;
        char v50 = v12;
        uint64_t v17 = *(void *)(a2 + v5 + 40);
        char v18 = *(unsigned char *)(a2 + v5 + 128);
        char v19 = *(unsigned char *)(a2 + v5 + 129);
        char v20 = *(unsigned char *)(a2 + v5 + 130);
        char v21 = *(unsigned char *)(a2 + v5 + 131);
        char v22 = *(unsigned char *)(a2 + v5 + 132);
        v29[0] = *(void *)(a2 + v5 + 32);
        v29[1] = v17;
        long long v23 = *(_OWORD *)(a2 + v5 + 64);
        long long v30 = *(_OWORD *)(a2 + v5 + 48);
        long long v31 = v23;
        long long v24 = *(_OWORD *)(a2 + v5 + 96);
        long long v32 = *(_OWORD *)(a2 + v5 + 80);
        long long v33 = v24;
        long long v34 = *(_OWORD *)(a2 + v5 + 112);
        char v35 = v18;
        char v36 = v19;
        char v37 = v20;
        char v38 = v21;
        char v39 = v22;
        char v25 = _s15HealthRecordsUI33UserDomainConceptFeedItemViewDataV2eeoiySbAC_ACtFZ_0((uint64_t)v40, (uint64_t)v29);
        BOOL v27 = v6-- != 0;
        if ((v25 & 1) == 0) {
          break;
        }
        v5 += 104;
      }
      while (v27);
    }
  }
  else
  {
    char v25 = 0;
  }
  return v25 & 1;
}

uint64_t type metadata accessor for MultiValueView()
{
  return self;
}

uint64_t sub_1C22ABED4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView_viewData);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C22ABF2C()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_1C22A9C98(v0);
}

uint64_t method lookup function for MultiValueView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MultiValueView);
}

uint64_t dispatch thunk of MultiValueView.viewData.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MultiValueView.viewData.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MultiValueView.viewData.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

unint64_t sub_1C22AC00C()
{
  unint64_t result = qword_1EA2DE1E8;
  if (!qword_1EA2DE1E8)
  {
    sub_1C254CB40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DE1E8);
  }
  return result;
}

uint64_t sub_1C22AC064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C22AC0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v10 = a5;
    id v11 = a6;
    id v12 = a7;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_1C22AC16C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C254CB40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    char v9 = *(void **)((char *)a2 + v8);
    if ((unint64_t)v9 >= 4) {
      id v10 = v9;
    }
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    uint64_t v11 = a3[6];
    id v12 = (char *)a1 + v11;
    long long v13 = (char *)a2 + v11;
    uint64_t v14 = sub_1C254CAD0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_1C22AE4A4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = a3[7];
    char v19 = *(void **)((char *)a2 + v18);
    *(uint64_t *)((char *)a1 + v18) = (uint64_t)v19;
    id v20 = v19;
  }
  return a1;
}

void sub_1C22AC368(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + a2[5]);
  if ((unint64_t)v5 >= 4) {

  }
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  char v9 = *(void **)(a1 + a2[7]);
}

uint64_t sub_1C22AC490(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  if ((unint64_t)v8 >= 4) {
    id v9 = v8;
  }
  *(void *)(a1 + v7) = v8;
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  id v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_1C254CAD0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_1C22AE4A4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v17;
  id v18 = v17;
  return a1;
}

uint64_t sub_1C22AC63C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  id v9 = *(void **)(a2 + v7);
  if ((unint64_t)v8 < 4)
  {
    if ((unint64_t)v9 >= 4)
    {
      *(void *)(a1 + v7) = v9;
      id v10 = v9;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if ((unint64_t)v9 < 4)
  {

    id v9 = *(void **)(a2 + v7);
LABEL_6:
    *(void *)(a1 + v7) = v9;
    goto LABEL_8;
  }
  *(void *)(a1 + v7) = v9;
  id v11 = v9;

LABEL_8:
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = sub_1C254CAD0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_13;
  }
  if (v19)
  {
LABEL_13:
    sub_1C22AE4A4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_14:
  uint64_t v21 = a3[7];
  char v22 = *(void **)(a1 + v21);
  long long v23 = *(void **)(a2 + v21);
  *(void *)(a1 + v21) = v23;
  id v24 = v23;

  return a1;
}

uint64_t sub_1C22AC89C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C254CAD0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1C22AE4A4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1C22ACA34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  unint64_t v9 = *(void *)(a2 + v7);
  if ((unint64_t)v8 >= 4)
  {
    if (v9 >= 4)
    {
      *(void *)(a1 + v7) = v9;
    }
    else
    {

      *(void *)(a1 + v7) = *(void *)(a2 + v7);
    }
  }
  else
  {
    *(void *)(a1 + v7) = v9;
  }
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_1C254CAD0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_11;
  }
  if (v17)
  {
LABEL_11:
    sub_1C22AE4A4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_12:
  uint64_t v19 = a3[7];
  uint64_t v20 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);

  return a1;
}

uint64_t sub_1C22ACC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C22ACC98);
}

uint64_t sub_1C22ACC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_1C22AE4A4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_1C22ACDE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C22ACDFC);
}

void sub_1C22ACDFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_1C22AE4A4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 28)) = a2;
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for ClinicalAccountLoginUpgradeAction()
{
  uint64_t result = qword_1EA2DFF20;
  if (!qword_1EA2DFF20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C22ACF88()
{
  sub_1C254CB40();
  if (v0 <= 0x3F)
  {
    sub_1C22AE4A4(319, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1C22AD090()
{
  unint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C22AE4A4(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v25 - v3;
  sub_1C22AE4A4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], v1);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = sub_1C254CAD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  uint64_t v13 = 0;
  if (*(void *)(v0 + *(int *)(v12 + 20)) == 1)
  {
    sub_1C21EA654(v0 + *(int *)(v12 + 24), (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1C22AE508((uint64_t)v7, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v14 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1C254C730();
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      int v15 = self;
      int v16 = (void *)sub_1C254CA50();
      id v17 = objc_msgSend(v15, sel_localizedStringFromDate_dateStyle_timeStyle_, v16, 1, 0);

      uint64_t v18 = sub_1C254F470();
      uint64_t v20 = v19;

      uint64_t v21 = sub_1C254CBD0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 1, 1, v21);
      sub_1C22AE4A4(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1C255CD90;
      *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v22 + 64) = sub_1C220D950();
      *(void *)(v22 + 32) = v18;
      *(void *)(v22 + 40) = v20;
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v23 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      uint64_t v13 = sub_1C254F4A0();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C22AE508((uint64_t)v4, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  return v13;
}

uint64_t sub_1C22AD574@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  id v86 = a2;
  uint64_t v87 = a4;
  uint64_t v81 = a3;
  uint64_t v85 = a5;
  sub_1C22AE4A4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v74 - v10;
  uint64_t v12 = sub_1C254CAD0();
  uint64_t v82 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  int v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v74 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v74 - v19;
  uint64_t v21 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  uint64_t v83 = *(void *)(v21 - 8);
  uint64_t v84 = v21;
  MEMORY[0x1F4188790](v21);
  id v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v24 = objc_msgSend(a1, sel_provenance);
  id v25 = objc_msgSend(v24, sel_type);

  if (v25)
  {

LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v30 = 1;
    uint64_t v32 = v84;
    uint64_t v31 = v85;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v31, v30, 1, v32);
  }
  char v76 = v11;
  uint64_t v77 = v18;
  uint64_t v74 = v20;
  long long v75 = v15;
  int v78 = v23;
  BOOL v79 = v9;
  uint64_t v80 = v12;
  id v26 = v86;
  id v27 = objc_msgSend(self, sel_sharedBehavior);
  if (v27)
  {
    uint64_t v28 = v27;
    unsigned __int8 v29 = objc_msgSend(v27, sel_healthAppHiddenOrNotInstalled);

    if (v29)
    {

      goto LABEL_6;
    }
    uint64_t v34 = v87;
    if (v26)
    {
      swift_bridgeObjectRelease();
      uint64_t v35 = 3;
LABEL_22:
      uint64_t v32 = v84;
      uint64_t v43 = (uint64_t)v78;
      *(void *)&v78[*(int *)(v84 + 20)] = v35;
      uint64_t v44 = v43;
      id v45 = objc_msgSend(a1, sel_identifier);
      sub_1C254CB20();

      id v46 = objc_msgSend(a1, sel_lastFetchDate);
      if (v46)
      {
        char v47 = v46;
        uint64_t v48 = (uint64_t)v79;
        sub_1C254CA80();

        uint64_t v49 = 0;
      }
      else
      {
        uint64_t v49 = 1;
        uint64_t v48 = (uint64_t)v79;
      }
      uint64_t v50 = v80;

      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v48, v49, 1, v50);
      sub_1C22AE66C(v48, v44 + *(int *)(v32 + 24));
      *(void *)(v44 + *(int *)(v32 + 28)) = v26;
      uint64_t v31 = v85;
      sub_1C2223DC4(v44, v85);
      uint64_t v30 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v31, v30, 1, v32);
    }
    id v36 = objc_msgSend(a1, sel_newerAvailableGateway);
    if (v36)
    {
      uint64_t v35 = (uint64_t)v36;
      if (!v34) {
        goto LABEL_22;
      }
      id v37 = objc_msgSend(v36, sel_gatewayID);
      uint64_t v38 = sub_1C254F470();
      uint64_t v40 = v39;

      if (v38 != v81 || v40 != v34)
      {
        char v51 = sub_1C2550870();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v51 & 1) == 0) {
          goto LABEL_22;
        }

LABEL_17:
        unsigned __int8 v41 = objc_msgSend(a1, sel_needsRelogin);
        long long v42 = v77;
        if ((v41 & 1) != 0 || !objc_msgSend(a1, sel_state))
        {
          uint64_t v35 = 0;
          goto LABEL_22;
        }
        if (objc_msgSend(a1, sel_needsScopeUpgrade))
        {
          uint64_t v35 = 2;
          goto LABEL_22;
        }
        id v52 = objc_msgSend(a1, sel_failedFetchAttemptsCount);
        if (!v52) {
          goto LABEL_35;
        }
        uint64_t v53 = v52;
        id v54 = objc_msgSend(a1, sel_lastFetchDate);
        if (v54)
        {
          id v55 = v54;
          sub_1C254CA80();

          uint64_t v56 = v82;
          id v57 = *(void (**)(char *, char *, uint64_t))(v82 + 32);
          uint64_t v58 = (uint64_t)v76;
          id v59 = v42;
          uint64_t v60 = v80;
          v57(v76, v59, v80);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v58, 0, 1, v60);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v58, 1, v60) != 1)
          {
            id v61 = v74;
            uint64_t v62 = v80;
            v57(v74, (char *)v58, v80);
            sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
            id v63 = (void *)sub_1C254FF50();
            id v64 = objc_msgSend(v63, sel_compare_, v53);

            uint64_t v65 = v82;
            uint64_t v66 = v75;
            (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v75, v61, v62);
            if (v64 != (id)-1)
            {

              uint64_t v67 = *(void (**)(char *, uint64_t))(v65 + 8);
              v67(v66, v62);
              v67(v61, v62);
              goto LABEL_7;
            }
            unint64_t v70 = v77;
            sub_1C254CAC0();
            sub_1C254CA30();
            double v72 = v71;

            uint64_t v73 = *(void (**)(char *, uint64_t))(v65 + 8);
            v73(v70, v62);
            v73(v66, v62);
            v73(v61, v62);
            if (v72 > 604800.0) {
              goto LABEL_37;
            }
            goto LABEL_35;
          }
        }
        else
        {
          uint64_t v58 = (uint64_t)v76;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56))(v76, 1, 1, v80);
        }
        sub_1C22AE508(v58, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
        sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
        uint64_t v68 = (void *)sub_1C254FF50();
        id v69 = objc_msgSend(v68, sel_compare_, v53);

        if (v69 == (id)-1)
        {
LABEL_37:
          uint64_t v35 = 1;
          goto LABEL_22;
        }
LABEL_35:

        goto LABEL_7;
      }

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }

  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1C22ADD0C()
{
  unint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ClinicalAccountLoginUpgradeAction() + 20));
  if (v1 < 2)
  {
    if (qword_1EBB6EF40 == -1) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  if (v1 == 2)
  {
    if (qword_1EBB6EF40 == -1) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  if (v1 == 3)
  {
    if (qword_1EBB6EF40 == -1) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  if (qword_1EBB6EF40 != -1) {
LABEL_12:
  }
    swift_once();
LABEL_11:
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v3;
}

unint64_t sub_1C22ADF48(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      unint64_t result = 0x6E69676F6CLL;
      break;
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0x70752065706F6373;
      break;
    case 3:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      unint64_t result = 0x2079617765746167;
      break;
  }
  return result;
}

unint64_t sub_1C22AE01C()
{
  return sub_1C22ADF48(*v0);
}

uint64_t sub_1C22AE024(void **a1, void **a2)
{
  return sub_1C22AE578(*a1, *a2);
}

uint64_t sub_1C22AE030()
{
  sub_1C22AE4A4(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v17 - v2;
  uint64_t v4 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  uint64_t v5 = 0;
  switch(*(void *)(v0 + *(int *)(v4 + 20)))
  {
    case 0:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_14;
      }
      goto LABEL_7;
    case 1:
      return v5;
    case 2:
      if (qword_1EBB6EF40 == -1) {
        goto LABEL_7;
      }
      goto LABEL_14;
    case 3:
      uint64_t v8 = *(void **)(v0 + *(int *)(v4 + 28));
      if (!v8) {
        return 0;
      }
      uint64_t v9 = sub_1C254CBD0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
      sub_1C22AE4A4(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1C255CD90;
      id v11 = v8;
      id v12 = objc_msgSend(v11, sel_title);
      uint64_t v13 = sub_1C254F470();
      uint64_t v15 = v14;

      *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v10 + 64) = sub_1C220D950();
      *(void *)(v10 + 32) = v13;
      *(void *)(v10 + 40) = v15;
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v16 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      uint64_t v5 = sub_1C254F4A0();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C22AE508((uint64_t)v3, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
      return v5;
    default:
      if (qword_1EBB6EF40 == -1) {
        goto LABEL_7;
      }
LABEL_14:
      swift_once();
LABEL_7:
      id v6 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C254C730();
      swift_bridgeObjectRelease();

      return v5;
  }
}

void sub_1C22AE4A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C22AE508(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C22AE4A4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C22AE578(void *a1, void *a2)
{
  switch((unint64_t)a1)
  {
    case 0uLL:
      if (a2) {
        goto LABEL_11;
      }
      goto LABEL_7;
    case 1uLL:
      if (a2 == (void *)1) {
        goto LABEL_7;
      }
      goto LABEL_11;
    case 2uLL:
      if (a2 != (void *)2) {
        goto LABEL_11;
      }
      goto LABEL_7;
    case 3uLL:
      if (a2 != (void *)3) {
        goto LABEL_11;
      }
LABEL_7:
      uint64_t result = 1;
      break;
    default:
      if ((unint64_t)a2 < 4)
      {
LABEL_11:
        uint64_t result = 0;
      }
      else
      {
        sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
        sub_1C2223774(a1);
        sub_1C2223774(a2);
        char v4 = sub_1C254FF70();
        sub_1C2223E28(a2);
        sub_1C2223E28(a1);
        uint64_t result = v4 & 1;
      }
      break;
  }
  return result;
}

uint64_t sub_1C22AE66C(uint64_t a1, uint64_t a2)
{
  sub_1C22AE4A4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *initializeBufferWithCopyOfBuffer for ClinicalAccountLoginUpgradeAction.Action(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for ClinicalAccountLoginUpgradeAction.Action(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for ClinicalAccountLoginUpgradeAction.Action(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void **assignWithTake for ClinicalAccountLoginUpgradeAction.Action(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalAccountLoginUpgradeAction.Action(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ClinicalAccountLoginUpgradeAction.Action(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_1C22AE8F8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1C22AE910(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalAccountLoginUpgradeAction.Action()
{
  return &type metadata for ClinicalAccountLoginUpgradeAction.Action;
}

void sub_1C22AE944(uint64_t a1, uint64_t a2, void *a3)
{
  unsigned int v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

id sub_1C22AE9BC()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController____lazy_storage___shouldEnableAddAccounts;
  int v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController____lazy_storage___shouldEnableAddAccounts);
  if (v2 != 2) {
    return (id)(v2 & 1);
  }
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile), sel_healthStore));
  id v4 = objc_msgSend(v3, sel_supportsHealthRecords);

  *(unsigned char *)(v0 + v1) = (_BYTE)v4;
  return v4;
}

id SettingsViewController.__allocating_init(with:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1C22B3558(a1);

  return v4;
}

id SettingsViewController.init(with:)(void *a1)
{
  id v2 = sub_1C22B3558(a1);

  return v2;
}

void sub_1C22AEAAC(void *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountsDisambiguator] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_appSourceModels] = v2;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_researchStudySourceModels] = v2;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken] = 0;
  uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_factory;
  if (qword_1EBB6D858 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_1EBB6ED30;
  *(void *)&v1[v3] = qword_1EBB6ED30;
  v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController____lazy_storage___shouldEnableAddAccounts] = 2;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceListDataSource] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountStateCancellable] = 0;
  id v5 = v4;

  sub_1C25505F0();
  __break(1u);
}

id SettingsViewController.__deallocating_deinit()
{
  if (*(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountStateCancellable])
  {
    swift_retain();
    sub_1C254EA00();
    swift_release();
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SettingsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C22AED7C()
{
  uint64_t v1 = v0;
  sub_1C22B3AC0(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)v64 - v3;
  id v5 = (objc_class *)type metadata accessor for SettingsViewController();
  v65.receiver = v0;
  v65.super_class = v5;
  objc_msgSendSuper2(&v65, sel_viewDidLoad);
  if (qword_1EBB6EF38 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EBB6FBB0;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v7 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v7);

  unint64_t v8 = (char **)objc_msgSend(v1, sel_navigationItem);
  id v9 = objc_msgSend(v1, sel_navigationController);
  if (!v9) {
    goto LABEL_13;
  }
  uint64_t v10 = v9;
  id v11 = objc_msgSend(v9, sel_viewControllers);

  sub_1C21AB51C(0, &qword_1EA2DE3F0);
  unint64_t v12 = sub_1C254F710();

  if (!(v12 >> 62))
  {
    if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v19)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v18 = 0;
    goto LABEL_14;
  }
LABEL_6:
  if ((v12 & 0xC000000000000001) != 0)
  {
    id v13 = (id)MEMORY[0x1C87588E0](0, v12);
  }
  else
  {
    if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_41;
    }
    id v13 = *(id *)(v12 + 32);
  }
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  id v15 = v1;
  id v16 = v14;
  char v17 = sub_1C254FF70();

  if ((v17 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v18 = (char **)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v15, sel_closeButtonTapped);
LABEL_14:
  v64[3] = v5;
  v64[0] = v1;
  id v20 = v1;
  id v21 = _sSo15UIBarButtonItemC15HealthRecordsUIE014makeTapToRadarC06target6actionABSgypSg_10ObjectiveC8SelectorVSgtFZ_0((uint64_t)v64, (uint64_t)sel_tapToRadar_);
  sub_1C224E3A4((uint64_t)v64);
  v64[0] = MEMORY[0x1E4FBC860];
  if (!v18) {
    goto LABEL_17;
  }
  uint64_t v22 = v18;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v64[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v64[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_38;
  }
  while (1)
  {
    sub_1C254F790();
    sub_1C254F730();
LABEL_17:
    if (v21)
    {
      id v23 = v21;
      MEMORY[0x1C8757C00]();
      if (*(void *)((v64[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v64[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }

    sub_1C21AB51C(0, &qword_1EA2DE448);
    id v24 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setRightBarButtonItems_, v24);

    uint64_t v18 = &selRef_setUnsupportedSearchResults_;
    id v25 = objc_msgSend(v20, sel_tableView);
    if (!v25) {
      break;
    }
    id v26 = v25;
    objc_msgSend(v25, sel__setTopPadding_, 0.0);

    id v27 = objc_msgSend(v20, sel_tableView);
    if (!v27) {
      goto LABEL_42;
    }
    uint64_t v28 = v27;
    objc_msgSend(v27, sel__setSectionContentInset_, 0.0, 16.0, 0.0, 16.0);

    id v29 = objc_msgSend(v20, sel_tableView);
    if (!v29) {
      goto LABEL_43;
    }
    uint64_t v30 = v29;
    objc_msgSend(v29, sel__setSectionCornerRadius_, 10.0);

    id v31 = objc_msgSend(v20, sel_tableView);
    if (!v31) {
      goto LABEL_44;
    }
    uint64_t v32 = v31;
    type metadata accessor for StandardTableViewCell();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v34 = (void *)sub_1C254F430();
    objc_msgSend(v32, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v34);

    id v35 = objc_msgSend(v20, sel_tableView);
    if (!v35) {
      goto LABEL_45;
    }
    id v36 = v35;
    type metadata accessor for NoAppTableViewCell();
    uint64_t v37 = swift_getObjCClassFromMetadata();
    uint64_t v38 = (void *)sub_1C254F430();
    objc_msgSend(v36, sel_registerClass_forCellReuseIdentifier_, v37, v38);

    id v39 = objc_msgSend(v20, sel_tableView);
    if (!v39) {
      goto LABEL_46;
    }
    uint64_t v40 = v39;
    type metadata accessor for SourceTableViewCell();
    uint64_t v41 = swift_getObjCClassFromMetadata();
    long long v42 = (void *)sub_1C254F430();
    objc_msgSend(v40, sel_registerClass_forCellReuseIdentifier_, v41, v42);

    id v43 = objc_msgSend(v20, sel_tableView);
    if (!v43) {
      goto LABEL_47;
    }
    uint64_t v44 = v43;
    type metadata accessor for AccountTableViewCell();
    uint64_t v45 = swift_getObjCClassFromMetadata();
    id v46 = (void *)sub_1C254F430();
    objc_msgSend(v44, sel_registerClass_forCellReuseIdentifier_, v45, v46);

    id v47 = objc_msgSend(v20, sel_tableView);
    if (!v47) {
      goto LABEL_48;
    }
    uint64_t v48 = v47;
    type metadata accessor for AddAccountTableViewCell();
    uint64_t v49 = swift_getObjCClassFromMetadata();
    uint64_t v50 = (void *)sub_1C254F430();
    objc_msgSend(v48, sel_registerClass_forCellReuseIdentifier_, v49, v50);

    id v51 = objc_msgSend(v20, sel_tableView);
    if (!v51) {
      goto LABEL_49;
    }
    id v52 = v51;
    type metadata accessor for LoadingTableViewCell();
    uint64_t v53 = swift_getObjCClassFromMetadata();
    id v54 = (void *)sub_1C254F430();
    objc_msgSend(v52, sel_registerClass_forCellReuseIdentifier_, v53, v54);

    id v55 = objc_msgSend(v20, sel_tableView);
    if (!v55) {
      goto LABEL_50;
    }
    uint64_t v56 = v55;
    id v57 = (void *)sub_1C254F700();
    id v21 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v56, sel_setAccessibilityIdentifier_, v21);
    sub_1C22AF660();
    uint64_t v58 = self;
    unint64_t v8 = &selRef_setActionTitle_;
    if (objc_msgSend(v58, sel_isMainThread))
    {
      if (objc_msgSend(v58, sel_isMainThread))
      {
        if ((*((unsigned char *)v20 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts) & 1) == 0)
        {
          uint64_t v59 = sub_1C254F840();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v4, 1, 1, v59);
          sub_1C254F820();
          id v60 = v20;
          uint64_t v61 = sub_1C254F810();
          uint64_t v62 = (void *)swift_allocObject();
          uint64_t v63 = MEMORY[0x1E4FBCFD8];
          v62[2] = v61;
          v62[3] = v63;
          v62[4] = v60;
          sub_1C24D0A0C((uint64_t)v4, (uint64_t)&unk_1EA2DFF48, (uint64_t)v62);
          swift_release();
        }
        sub_1C22B0E88();
        sub_1C22B0D70();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_38:
    sub_1C254F760();
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
}

uint64_t sub_1C22AF660()
{
  uint64_t v1 = v0;
  sub_1C22B3AC0(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v18 - v3;
  sub_1C22B3B24();
  uint64_t v18 = *(void *)(v5 - 8);
  uint64_t v19 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB6EF30 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1EBB6FB90;
  id v9 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile), sel_healthRecordsStore);
  id v10 = objc_msgSend(v9, sel_healthStore);

  id v11 = objc_msgSend(v10, sel_profileIdentifier);
  id v20 = *(id *)(v8 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v12);
  *(&v18 - 2) = v8;
  *(&v18 - 1) = (uint64_t)v11;
  sub_1C254CEE0();
  type metadata accessor for AccountStateProvider();
  sub_1C22B397C((unint64_t *)&qword_1EBB6F240, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();

  swift_release();
  uint64_t v13 = *(void *)(v21 + 24);
  swift_retain();
  swift_release();
  uint64_t v21 = v13;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v20 = (id)sub_1C254FC70();
  uint64_t v14 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
  sub_1C21A842C();
  sub_1C22B397C((unint64_t *)&unk_1EA2DE3C8, (void (*)(uint64_t))sub_1C21A842C);
  sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
  sub_1C254EC70();
  sub_1C2258214((uint64_t)v4);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C22B397C((unint64_t *)&unk_1EA2DE3D8, (void (*)(uint64_t))sub_1C22B3B24);
  uint64_t v15 = v19;
  uint64_t v16 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v15);
  *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountStateCancellable) = v16;
  return swift_release();
}

void sub_1C22AFB34(char a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for SettingsViewController();
  objc_msgSendSuper2(&v9, sel_viewDidAppear_, a1 & 1);
  id v3 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile], sel_healthRecordsStore);
  id v4 = objc_msgSend(v3, sel_healthStore);

  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B280]), sel_initWithHealthStore_, v4);
  id v6 = objc_msgSend(self, sel_zeroBadge);
  void v8[4] = sub_1C22AFCE0;
  v8[5] = 0;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  v8[2] = sub_1C22AE944;
  v8[3] = &block_descriptor_25;
  uint64_t v7 = _Block_copy(v8);
  objc_msgSend(v5, sel_setBadge_forDomain_completion_, v6, 3, v7);
  _Block_release(v7);

  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  sub_1C23CEB5C(0, 1, 0);
}

uint64_t sub_1C22AFCE0(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1C254E560();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v8 = a2;
    sub_1C254E520();
    id v9 = a2;
    id v10 = a2;
    id v11 = sub_1C254E550();
    os_log_type_t v12 = sub_1C254FA20();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = (uint64_t)a2;
      uint64_t v22 = v20;
      *(_DWORD *)uint64_t v13 = 136446210;
      v19[1] = v13 + 4;
      id v14 = a2;
      sub_1C2206F9C();
      sub_1C25508F0();
      id v15 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v16 = sub_1C254F510();
      uint64_t v21 = sub_1C21AD354(v16, v17, &v22);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v11, v12, "Error clearing badge for health records: %{public}s", v13, 0xCu);
      uint64_t v18 = v20;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v18, -1, -1);
      MEMORY[0x1C875A0B0](v13, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

id sub_1C22B0034()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile), sel_healthRecordsStore);
  id v2 = objc_msgSend(v1, sel_healthStore);

  return v2;
}

id sub_1C22B0094()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
  id v2 = objc_msgSend(v1, sel_clinicalSourcesDataProvider);
  uint64_t v3 = (void *)sub_1C254F430();
  id v4 = objc_msgSend(v2, sel_appSourceRequestingAuthorizationForClinicalTypeWithBundleIdentifier_, v3);

  if (!v4) {
    return 0;
  }
  id v5 = objc_msgSend(objc_allocWithZone((Class)WDClinicalAuthorizationSettingsViewController), sel_initWithProfile_source_, v1, v4);
  id v6 = objc_msgSend(v0, sel_navigationController);
  if (v6)
  {
    uint64_t v7 = v6;
    objc_msgSend(v6, sel_pushViewController_animated_, v5, 1);
  }
  return v5;
}

id SettingsViewController.__allocating_init(usingInsetStyling:)(char a1)
{
  id v3 = objc_allocWithZone(v1);
  return objc_msgSend(v3, sel_initWithUsingInsetStyling_, a1 & 1);
}

void SettingsViewController.init(usingInsetStyling:)()
{
}

id SettingsViewController.__allocating_init(style:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return objc_msgSend(v3, sel_initWithStyle_, a1);
}

void SettingsViewController.init(style:)()
{
}

id SettingsViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    id v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void SettingsViewController.init(nibName:bundle:)()
{
}

id sub_1C22B03BC()
{
  id v1 = objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile), sel_healthRecordsStore);
  id v2 = objc_msgSend(v1, sel_healthStore);

  return v2;
}

void sub_1C22B0434(uint64_t a1, uint64_t a2)
{
  sub_1C22B3AC0(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v74 - v5;
  uint64_t v7 = sub_1C254E560();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v74 - v12;
  id v14 = *(void **)a1;
  id v15 = *(void **)(a1 + 8);
  unint64_t v16 = *(void *)(a1 + 16);
  swift_beginAccess();
  unint64_t v17 = (void *)MEMORY[0x1C875A200](a2 + 16);
  if (v17)
  {
    uint64_t v18 = v17;
    if (!v14)
    {

      return;
    }
    int v78 = v11;
    uint64_t v82 = v7;
    id v79 = v14;
    uint64_t v80 = v15;
    sub_1C254E520();
    sub_1C22B3C2C(v14, v15);
    id v19 = v18;
    sub_1C22B3C2C(v14, v15);
    uint64_t v20 = (char *)v19;
    uint64_t v21 = sub_1C254E550();
    os_log_type_t v22 = sub_1C254FA00();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v81 = v8;
    if (v23)
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v77 = v6;
      id v25 = v20;
      uint64_t v26 = v24;
      uint64_t v27 = swift_slowAlloc();
      unint64_t v86 = v27;
      *(_DWORD *)uint64_t v26 = 136446466;
      uint64_t ObjectType = swift_getObjectType();
      sub_1C22B3D28();
      char v76 = v15;
      uint64_t v28 = sub_1C254F510();
      long long v75 = v14;
      uint64_t ObjectType = sub_1C21AD354(v28, v29, (uint64_t *)&v86);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      uint64_t ObjectType = 0;
      unint64_t v85 = 0xE000000000000000;
      unint64_t v83 = v16;
      type metadata accessor for HKClinicalAccountStateChangeType(0);
      sub_1C25504F0();
      uint64_t ObjectType = sub_1C21AD354(ObjectType, v85, (uint64_t *)&v86);
      id v14 = v75;
      id v15 = v76;
      sub_1C2550120();
      swift_bridgeObjectRelease();
      sub_1C220022C(v14, v15);
      sub_1C220022C(v14, v15);
      _os_log_impl(&dword_1C21A1000, v21, v22, "%{public}s: accountStateDidChange change: %{public}s)", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v27, -1, -1);
      uint64_t v30 = v26;
      uint64_t v20 = v25;
      id v6 = v77;
      MEMORY[0x1C875A0B0](v30, -1, -1);

      uint64_t v31 = v81;
    }
    else
    {

      sub_1C220022C(v14, v15);
      sub_1C220022C(v14, v15);

      uint64_t v31 = v8;
    }
    uint64_t v32 = *(void (**)(char *, uint64_t))(v31 + 8);
    uint64_t v33 = v82;
    v32(v13, v82);
    if (v16 < 2)
    {
      long long v42 = self;
      if (objc_msgSend(v42, sel_isMainThread))
      {
        if (objc_msgSend(v42, sel_isMainThread))
        {
          if ((v20[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts] & 1) == 0)
          {
            uint64_t v43 = sub_1C254F840();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v6, 1, 1, v43);
            sub_1C254F820();
            uint64_t v44 = v20;
            uint64_t v45 = sub_1C254F810();
            id v46 = (void *)swift_allocObject();
            uint64_t v47 = MEMORY[0x1E4FBCFD8];
            v46[2] = v45;
            void v46[3] = v47;
            v46[4] = v44;
            uint64_t v48 = &unk_1EA2E0040;
LABEL_23:
            sub_1C24D0A0C((uint64_t)v6, (uint64_t)v48, (uint64_t)v46);
            swift_release();
          }
LABEL_24:
          sub_1C22B0E88();
          sub_1C22B0D70();

          uint64_t v40 = v14;
          uint64_t v41 = v15;
          goto LABEL_25;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      if (v16 == 3)
      {
        uint64_t v49 = v14;
        uint64_t v50 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts;
        sub_1C22B3C2C(v49, v15);
        unint64_t v51 = swift_bridgeObjectRetain();
        uint64_t v52 = sub_1C22B329C(v51, (uint64_t)v79, v80);
        sub_1C220022C(v49, v15);
        swift_bridgeObjectRelease();
        *(void *)&v20[v50] = v52;
        swift_bridgeObjectRelease();
        type metadata accessor for ClinicalAccountsDisambiguator();
        swift_allocObject();
        unint64_t v53 = swift_bridgeObjectRetain();
        uint64_t v54 = sub_1C23FD220(v53);
        swift_bridgeObjectRelease();
        *(void *)&v20[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountsDisambiguator] = v54;
        swift_release();
        sub_1C22B0D70();

        uint64_t v40 = v49;
        uint64_t v41 = v15;
        goto LABEL_25;
      }
      if (v16 == 2)
      {
        uint64_t v34 = v14;
        uint64_t v35 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts;
        sub_1C22B3C2C(v34, v15);
        unint64_t v36 = swift_bridgeObjectRetain();
        uint64_t v37 = sub_1C22B3024(v36, (uint64_t)v79, v80);
        sub_1C220022C(v34, v15);
        swift_bridgeObjectRelease();
        *(void *)&v20[v35] = v37;
        swift_bridgeObjectRelease();
        type metadata accessor for ClinicalAccountsDisambiguator();
        swift_allocObject();
        unint64_t v38 = swift_bridgeObjectRetain();
        uint64_t v39 = sub_1C23FD220(v38);
        swift_bridgeObjectRelease();
        *(void *)&v20[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountsDisambiguator] = v39;
        swift_release();
        sub_1C22B0D70();

        uint64_t v40 = v34;
        uint64_t v41 = v15;
LABEL_25:
        sub_1C220022C(v40, v41);
        return;
      }
      sub_1C254E520();
      id v55 = v79;
      uint64_t v56 = v80;
      id v57 = v55;
      uint64_t v58 = v56;
      uint64_t v59 = sub_1C254E550();
      os_log_type_t v60 = sub_1C254FA20();
      if (os_log_type_enabled(v59, v60))
      {
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        uint64_t v62 = swift_slowAlloc();
        uint64_t v80 = v20;
        uint64_t v63 = v62;
        uint64_t ObjectType = v62;
        uint64_t v77 = v6;
        *(_DWORD *)uint64_t v61 = 136446210;
        id v79 = v61 + 4;
        unint64_t v86 = v16;
        type metadata accessor for HKClinicalAccountStateChangeType(0);
        uint64_t v64 = sub_1C254F510();
        unint64_t v86 = sub_1C21AD354(v64, v65, &ObjectType);
        id v6 = v77;
        sub_1C2550120();
        swift_bridgeObjectRelease();
        sub_1C220022C(v14, v15);
        sub_1C220022C(v14, v15);
        _os_log_impl(&dword_1C21A1000, v59, v60, "Unexpected state change: %{public}s", v61, 0xCu);
        swift_arrayDestroy();
        uint64_t v66 = v63;
        uint64_t v20 = v80;
        MEMORY[0x1C875A0B0](v66, -1, -1);
        MEMORY[0x1C875A0B0](v61, -1, -1);

        uint64_t v67 = v82;
        uint64_t v68 = v78;
      }
      else
      {
        sub_1C220022C(v14, v15);
        sub_1C220022C(v14, v15);

        uint64_t v68 = v78;
        uint64_t v67 = v33;
      }
      v32(v68, v67);
      id v69 = self;
      if (objc_msgSend(v69, sel_isMainThread))
      {
        if (objc_msgSend(v69, sel_isMainThread))
        {
          if ((v20[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts] & 1) == 0)
          {
            uint64_t v70 = sub_1C254F840();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v6, 1, 1, v70);
            sub_1C254F820();
            double v71 = v20;
            uint64_t v72 = sub_1C254F810();
            id v46 = (void *)swift_allocObject();
            uint64_t v73 = MEMORY[0x1E4FBCFD8];
            v46[2] = v72;
            void v46[3] = v73;
            v46[4] = v71;
            uint64_t v48 = &unk_1EA2E0038;
            goto LABEL_23;
          }
          goto LABEL_24;
        }
LABEL_30:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_30;
  }
}

void sub_1C22B0D70()
{
  id v1 = objc_msgSend(v0, sel_tableView);
  if (!v1)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  id v2 = v1;
  double v3 = -1.0;
  if ((v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts] & 1) == 0)
  {
    unint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts];
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C2550620();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    double v3 = 0.0;
    if (!v5) {
      double v3 = -1.0;
    }
  }
  objc_msgSend(v2, sel__setTopPadding_, v3);

  id v6 = objc_msgSend(v0, sel_tableView);
  if (!v6) {
    goto LABEL_13;
  }
  id v7 = v6;
  objc_msgSend(v6, sel_reloadData);
}

void sub_1C22B0E88()
{
  if (objc_msgSend(self, sel_isMainThread))
  {
    uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken;
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken), sel_cancel);
    id v2 = objc_msgSend(objc_allocWithZone((Class)WDCancellationToken), sel_init);
    double v3 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v2;
    id v4 = v2;

    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v4;
    id v7 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile);
    id v8 = v4;
    id v9 = objc_msgSend(v7, sel_healthRecordsStore);
    id v10 = objc_msgSend(v9, sel_healthStore);

    id v11 = objc_msgSend(self, sel_allTypes);
    sub_1C21AB51C(0, &qword_1EA2DF9B0);
    unint64_t v12 = sub_1C254F710();

    uint64_t v13 = sub_1C249275C(v12);
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AC68]), sel_initWithHealthStore_, v10);
    sub_1C22B1E44(v13);
    swift_bridgeObjectRelease();
    sub_1C21AB51C(0, &qword_1EA2E0000);
    sub_1C22000E8(&qword_1EA2E0008, &qword_1EA2E0000);
    id v15 = (void *)sub_1C254F8E0();
    swift_bridgeObjectRelease();
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v17 = (void *)swift_allocObject();
    v17[2] = sub_1C22B38BC;
    v17[3] = v6;
    v17[4] = v10;
    v17[5] = v16;
    v20[4] = sub_1C22B390C;
    v20[5] = v17;
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 1107296256;
    v20[2] = sub_1C22B2D40;
    v20[3] = &block_descriptor_47;
    uint64_t v18 = _Block_copy(v20);
    swift_retain();
    id v19 = v10;
    swift_release();
    objc_msgSend(v14, sel_fetchSourcesRequestingAuthorizationForTypes_completion_, v15, v18);
    _Block_release(v18);

    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C22B11C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[22] = a4;
  uint64_t v5 = sub_1C254E560();
  v4[23] = v5;
  v4[24] = *(void *)(v5 - 8);
  v4[25] = swift_task_alloc();
  v4[26] = sub_1C254F820();
  v4[27] = sub_1C254F810();
  return MEMORY[0x1F4188298](sub_1C22B129C, 0, 0);
}

uint64_t sub_1C22B129C()
{
  *(void *)(v0 + 224) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C22B1328, v2, v1);
}

uint64_t sub_1C22B1328()
{
  uint64_t v1 = v0[22];
  swift_release();
  uint64_t v2 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts;
  v0[29] = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts;
  *(unsigned char *)(v1 + v2) = 1;
  sub_1C22B0D70();
  uint64_t v4 = sub_1C254F7D0();
  v0[30] = v4;
  v0[31] = v3;
  return MEMORY[0x1F4188298](sub_1C22B13D4, v4, v3);
}

uint64_t sub_1C22B13D4()
{
  id v1 = objc_msgSend(*(id *)(v0[22] + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile), sel_healthRecordsStore);
  id v2 = objc_msgSend(v1, sel_healthStore);

  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67710]), sel_initWithHealthStore_, v2);
  v0[32] = v3;

  v0[2] = v0;
  v0[7] = v0 + 19;
  v0[3] = sub_1C22B1544;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C24D3588;
  v0[13] = &block_descriptor_66;
  v0[14] = v4;
  objc_msgSend(v3, sel_fetchAllAccountsWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C22B1544()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 264) = v2;
  uint64_t v3 = *(void *)(v1 + 248);
  uint64_t v4 = *(void *)(v1 + 240);
  if (v2) {
    uint64_t v5 = sub_1C22B1A74;
  }
  else {
    uint64_t v5 = sub_1C22B1674;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C22B1674()
{
  *(void *)(v0 + 272) = *(void *)(v0 + 152);
  return MEMORY[0x1F4188298](sub_1C22B1698, 0, 0);
}

uint64_t sub_1C22B1698()
{
  *(void *)(v0 + 280) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C22B1724, v2, v1);
}

uint64_t sub_1C22B1724()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[29];
  uint64_t v3 = v0[22];
  swift_release();
  *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  type metadata accessor for ClinicalAccountsDisambiguator();
  swift_allocObject();
  unint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C23FD220(v4);
  swift_bridgeObjectRelease();
  *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountsDisambiguator) = v5;
  swift_release();
  *(unsigned char *)(v3 + v2) = 0;
  sub_1C22B0D70();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0[30];
  uint64_t v7 = v0[31];
  return MEMORY[0x1F4188298](sub_1C22B181C, v6, v7);
}

uint64_t sub_1C22B181C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C22B1890()
{
  *(void *)(v0 + 288) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C22B191C, v2, v1);
}

uint64_t sub_1C22B191C()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[22];
  swift_release();
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  type metadata accessor for ClinicalAccountsDisambiguator();
  swift_allocObject();
  unint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C23FD220(v3);
  swift_bridgeObjectRelease();
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountsDisambiguator) = v4;
  swift_release();
  *(unsigned char *)(v2 + v1) = 0;
  sub_1C22B0D70();
  uint64_t v5 = v0[30];
  uint64_t v6 = v0[31];
  return MEMORY[0x1F4188298](sub_1C22B1A00, v5, v6);
}

uint64_t sub_1C22B1A00()
{
  uint64_t v1 = *(void **)(v0 + 264);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C22B1A74()
{
  id v25 = v0;
  uint64_t v1 = v0;
  uint64_t v4 = v0 + 32;
  unint64_t v3 = (void *)v0[32];
  uint64_t v2 = (void *)v4[1];
  swift_willThrow();

  sub_1C254E510();
  id v5 = v2;
  id v6 = v2;
  uint64_t v7 = sub_1C254E550();
  os_log_type_t v8 = sub_1C254FA20();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (void *)v1[33];
    uint64_t v21 = v1[24];
    uint64_t v22 = v1[23];
    uint64_t v23 = v1[25];
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)id v10 = 136446210;
    uint64_t v24 = v11;
    v1[20] = v9;
    id v12 = v9;
    sub_1C2206F9C();
    sub_1C25508F0();
    id v13 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v14 = sub_1C254F510();
    v1[21] = sub_1C21AD354(v14, v15, &v24);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v7, v8, "Failed to fetch clincial accounts, error: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v11, -1, -1);
    MEMORY[0x1C875A0B0](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    uint64_t v16 = (void *)v1[33];
    uint64_t v18 = v1[24];
    uint64_t v17 = v1[25];
    uint64_t v19 = v1[23];

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  return MEMORY[0x1F4188298](sub_1C22B1890, 0, 0);
}

void sub_1C22B1D00(char a1, uint64_t a2, void *a3)
{
  if (!objc_msgSend(self, sel_isMainThread))
  {
    __break(1u);
    goto LABEL_12;
  }
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C875A200](a2 + 16);
  if (!v6) {
    return;
  }
  uint64_t v7 = (char *)v6;
  if ((objc_msgSend(a3, sel_isCancelled) & 1) == 0)
  {
    uint64_t v8 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken;
    uint64_t v9 = *(void **)&v7[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken];
    if (v9)
    {
      sub_1C21AB51C(0, &qword_1EA2E0030);
      id v10 = a3;
      id v11 = v9;
      char v12 = sub_1C254FF70();

      if (v12)
      {
        id v13 = *(void **)&v7[v8];
        *(void *)&v7[v8] = 0;

        if (a1)
        {
          id v14 = objc_msgSend(v7, sel_tableView);
          if (v14)
          {
            unint64_t v15 = v14;
            objc_msgSend(v14, sel_reloadData);

            goto LABEL_9;
          }
LABEL_12:
          __break(1u);
          return;
        }
      }
    }
  }
LABEL_9:
}

uint64_t sub_1C22B1E44(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1C25502A0()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = MEMORY[0x1E4FBC870];
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v29 = v1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1C22B3A18();
  uint64_t v3 = sub_1C2550370();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C2550250();
  sub_1C21AB51C(0, &qword_1EA2DF9B0);
  sub_1C22000E8(&qword_1EA2DF9B8, &qword_1EA2DF9B0);
  uint64_t result = sub_1C254F940();
  uint64_t v1 = v31;
  uint64_t v29 = v32;
  uint64_t v5 = v33;
  uint64_t v6 = v34;
  unint64_t v7 = v35;
LABEL_11:
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v12 = v3 + 56;
  while (v1 < 0)
  {
    if (!sub_1C25502D0()) {
      goto LABEL_45;
    }
    sub_1C21AB51C(0, &qword_1EA2DF9B0);
    swift_dynamicCast();
    uint64_t v16 = v30;
LABEL_36:
    uint64_t result = sub_1C254FF60();
    uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v3 + 48) + 8 * v13) = v16;
    ++*(void *)(v3 + 16);
  }
  if (v7)
  {
    unint64_t v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v15 = v14 | (v6 << 6);
LABEL_35:
    uint64_t v16 = *(void **)(*(void *)(v1 + 48) + 8 * v15);
    uint64_t v30 = v16;
    id v21 = v16;
    goto LABEL_36;
  }
  int64_t v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v11) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v29 + 8 * v17);
    uint64_t v19 = v6 + 1;
    if (!v18)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v11) {
        goto LABEL_45;
      }
      unint64_t v18 = *(void *)(v29 + 8 * v19);
      if (!v18)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v11) {
          goto LABEL_45;
        }
        unint64_t v18 = *(void *)(v29 + 8 * v19);
        if (!v18)
        {
          uint64_t v19 = v6 + 4;
          if (v6 + 4 >= v11) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v29 + 8 * v19);
          if (!v18)
          {
            uint64_t v19 = v6 + 5;
            if (v6 + 5 >= v11) {
              goto LABEL_45;
            }
            unint64_t v18 = *(void *)(v29 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v6 + 6;
              while (v11 != v20)
              {
                unint64_t v18 = *(void *)(v29 + 8 * v20++);
                if (v18)
                {
                  uint64_t v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_1C21ABD08();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v19 << 6);
    uint64_t v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1C22B220C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v55 = a3;
  uint64_t v11 = sub_1C254F1C0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v59 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C254F200();
  uint64_t v57 = *(void *)(v14 - 8);
  uint64_t v58 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v56 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C254E560();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    if (a1)
    {
      uint64_t v33 = a4;
      if ((a1 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        if (sub_1C25502A0())
        {
LABEL_7:
          sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
          uint64_t v34 = (void *)sub_1C254FC70();
          unint64_t v35 = (void *)swift_allocObject();
          v35[2] = a5;
          v35[3] = a1;
          v35[4] = a6;
          unint64_t v65 = sub_1C22B3A0C;
          uint64_t v66 = v35;
          uint64_t aBlock = MEMORY[0x1E4F143A8];
          uint64_t v62 = 1107296256;
          uint64_t v63 = sub_1C224E544;
          uint64_t v64 = &block_descriptor_59;
          unint64_t v36 = _Block_copy(&aBlock);
          id v37 = a5;
          swift_retain();
          swift_release();
          unint64_t v38 = v56;
          sub_1C254F1E0();
          uint64_t aBlock = MEMORY[0x1E4FBC860];
          sub_1C22B397C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
          sub_1C22B3AC0(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
          sub_1C21FFDEC();
          uint64_t v39 = v59;
          sub_1C2550200();
          MEMORY[0x1C87581B0](0, v38, v39, v36);
          _Block_release(v36);

          goto LABEL_13;
        }
      }
      else
      {
        uint64_t v43 = *(void *)(a1 + 16);
        swift_bridgeObjectRetain();
        if (v43) {
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease();
      a4 = v33;
    }
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    uint64_t v44 = (void *)sub_1C254FC70();
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = v55;
    *(void *)(v45 + 24) = a4;
    unint64_t v65 = sub_1C22B3950;
    uint64_t v66 = (void *)v45;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v62 = 1107296256;
    uint64_t v63 = sub_1C224E544;
    uint64_t v64 = &block_descriptor_53;
    id v46 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    unint64_t v38 = v56;
    sub_1C254F1E0();
    uint64_t aBlock = MEMORY[0x1E4FBC860];
    sub_1C22B397C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    sub_1C22B3AC0(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C21FFDEC();
    uint64_t v39 = v59;
    sub_1C2550200();
    MEMORY[0x1C87581B0](0, v38, v39, v46);
    _Block_release(v46);

    goto LABEL_13;
  }
  uint64_t v54 = v12;
  id v20 = a2;
  sub_1C254E520();
  id v21 = a2;
  id v22 = a2;
  unint64_t v23 = sub_1C254E550();
  os_log_type_t v24 = sub_1C254FA20();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v52 = a4;
    unint64_t v26 = (uint8_t *)v25;
    uint64_t v51 = swift_slowAlloc();
    uint64_t v60 = v51;
    uint64_t aBlock = (uint64_t)a2;
    *(_DWORD *)unint64_t v26 = 136446210;
    v50[1] = v26 + 4;
    id v27 = a2;
    sub_1C2206F9C();
    sub_1C25508F0();
    id v28 = (id)HKSensitiveLogItem();
    uint64_t v53 = v11;
    swift_unknownObjectRelease();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v29 = sub_1C254F510();
    uint64_t aBlock = sub_1C21AD354(v29, v30, &v60);
    sub_1C2550120();
    uint64_t v11 = v53;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v23, v24, "Failed to fetch sorted app sources requiring authorization with error: %{public}s", v26, 0xCu);
    uint64_t v31 = v51;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v31, -1, -1);
    uint64_t v32 = v26;
    a4 = v52;
    MEMORY[0x1C875A0B0](v32, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v39 = v59;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v40 = (void *)sub_1C254FC70();
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v55;
  *(void *)(v41 + 24) = a4;
  unint64_t v65 = sub_1C22B3D84;
  uint64_t v66 = (void *)v41;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v62 = 1107296256;
  uint64_t v63 = sub_1C224E544;
  uint64_t v64 = &block_descriptor_65_0;
  long long v42 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  unint64_t v38 = v56;
  sub_1C254F1E0();
  uint64_t aBlock = MEMORY[0x1E4FBC860];
  sub_1C22B397C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C22B3AC0(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v38, v39, v42);
  _Block_release(v42);

  uint64_t v12 = v54;
LABEL_13:
  uint64_t v48 = v57;
  uint64_t v47 = v58;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v39, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v38, v47);
}

void sub_1C22B2AFC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  id v4 = a1;
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1C228FFC4(v5);
  swift_bridgeObjectRelease();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v6 = (void *)sub_1C254FC70();
  id v7 = objc_allocWithZone(MEMORY[0x1E4F67C50]);
  sub_1C21AB51C(0, &qword_1EA2E0010);
  uint64_t v8 = (void *)sub_1C254F700();
  swift_release();
  id v9 = objc_msgSend(v7, sel_initWithHealthStore_sources_queue_, v4, v8, v6);

  objc_msgSend(v9, sel_setShouldFetchAppIcons_, 1);
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1C875A200](v3);
  if (v10)
  {
    uint64_t v11 = (char *)v10;
    uint64_t v12 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceListDataSource;
    uint64_t v13 = *(char **)(v10 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceListDataSource);
    *(void *)(v10 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceListDataSource) = v9;
    uint64_t v14 = (char *)v9;
    uint64_t v15 = v14;
    if (v13)
    {
      if (v14)
      {
        sub_1C21AB51C(0, &qword_1EA2E0020);
        uint64_t v16 = v13;
        uint64_t v17 = v15;
        char v18 = sub_1C254FF70();

        if (v18) {
          goto LABEL_7;
        }
      }
      objc_msgSend(v13, sel_unregisterObserver_, v11);
      uint64_t v19 = *(void **)&v11[v12];
      if (!v19)
      {
LABEL_6:
        uint64_t v16 = v13;
LABEL_7:
        uint64_t v13 = v15;
        uint64_t v15 = v11;
LABEL_10:

        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v19 = v9;
      if (!v15) {
        goto LABEL_6;
      }
    }
    objc_msgSend(v19, sel_registerObserver_, v11);
    uint64_t v16 = v11;
    goto LABEL_10;
  }
LABEL_11:
  swift_beginAccess();
  uint64_t v20 = MEMORY[0x1C875A200](v3);
  if (v20)
  {
    id v21 = (void *)v20;
    id v22 = *(id *)(v20 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceListDataSource);

    objc_msgSend(v22, sel_fetchSources);
  }
}

uint64_t sub_1C22B2D40(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C21AB51C(0, &qword_1EA2E0010);
    sub_1C22000E8(&qword_1EA2E0018, &qword_1EA2E0010);
    uint64_t v4 = sub_1C254F8F0();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void SettingsViewController.sourceListDataSourceDidUpdate(_:)(void *a1)
{
  id v3 = objc_msgSend(a1, sel_sources);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_orderedAppSources);

    sub_1C21AB51C(0, &qword_1EA2DFF70);
    uint64_t v6 = sub_1C254F710();
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_appSourceModels] = v6;
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(a1, sel_sources);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_orderedResearchStudySources);

    sub_1C21AB51C(0, &qword_1EA2DFF70);
    uint64_t v10 = sub_1C254F710();
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
  }
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_researchStudySourceModels] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken];
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken] = 0;

  id v12 = objc_msgSend(v1, sel_tableView);
  if (v12)
  {
    id v13 = v12;
    objc_msgSend(v12, sel_reloadData);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C22B3024(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  id v28 = a3;
  uint64_t v27 = sub_1C254CB40();
  uint64_t v6 = *(void (***)(char *, uint64_t))(v27 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v27);
  id v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v23 - v10;
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v12) {
      break;
    }
    uint64_t v29 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2550490();
    if (v12 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v14 = 0;
    unint64_t v23 = v4;
    unint64_t v24 = a1 & 0xC000000000000001;
    uint64_t v4 = v6 + 1;
    uint64_t v25 = v12;
    unint64_t v26 = a1;
    uint64_t v15 = v27;
    while (v12 != v14)
    {
      if (v24) {
        id v16 = (id)MEMORY[0x1C87588E0](v14, a1);
      }
      else {
        id v16 = *(id *)(a1 + 8 * v14 + 32);
      }
      uint64_t v17 = v16;
      ++v14;
      id v18 = objc_msgSend(v16, sel_identifier, v23);
      sub_1C254CB20();

      id v19 = v28;
      id v20 = objc_msgSend(v28, sel_identifier);
      sub_1C254CB20();

      LOBYTE(v20) = sub_1C254CB10();
      id v21 = *v4;
      (*v4)(v9, v15);
      v21(v11, v15);
      if (v20) {
        id v22 = v19;
      }
      else {
        id v22 = v17;
      }
      uint64_t v6 = v22;

      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      uint64_t v12 = v25;
      a1 = v26;
      if (v25 == v14) {
        return v29;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C22B329C(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  id v29 = a3;
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void (***)(char *, uint64_t))(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  id v28 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v27 = (char *)&v22 - v10;
  uint64_t v30 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v11)
  {
    while (1)
    {
      uint64_t v22 = v4;
      uint64_t v23 = v11;
      unint64_t v12 = 0;
      uint64_t v25 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v26 = a1 & 0xC000000000000001;
      id v13 = v7 + 1;
      unint64_t v24 = a1;
      uint64_t v14 = v28;
      while (v26)
      {
        uint64_t v15 = (char *)MEMORY[0x1C87588E0](v12, a1);
LABEL_9:
        uint64_t v7 = (void (**)(char *, uint64_t))v15;
        unint64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_15;
        }
        id v17 = objc_msgSend(v15, sel_identifier);
        id v18 = v27;
        sub_1C254CB20();

        id v19 = objc_msgSend(v29, sel_identifier);
        sub_1C254CB20();

        sub_1C22B397C((unint64_t *)&qword_1EA2DE1E8, MEMORY[0x1E4F27990]);
        uint64_t v4 = sub_1C254F420();
        id v20 = *v13;
        (*v13)(v14, v6);
        v20(v18, v6);
        if (v4)
        {
        }
        else
        {
          uint64_t v4 = (uint64_t)&v30;
          sub_1C2550460();
          sub_1C25504A0();
          sub_1C25504B0();
          sub_1C2550470();
        }
        a1 = v24;
        ++v12;
        if (v16 == v23) {
          return v30;
        }
      }
      if (v12 < *(void *)(v25 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v11 = sub_1C2550620();
      if (!v11) {
        return MEMORY[0x1E4FBC860];
      }
    }
    uint64_t v15 = (char *)*(id *)(a1 + 8 * v12 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

id sub_1C22B3558(void *a1)
{
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountsDisambiguator] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_appSourceModels] = v3;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_researchStudySourceModels] = v3;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken] = 0;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_factory;
  uint64_t v5 = qword_1EBB6D858;
  uint64_t v6 = v1;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_1EBB6ED30;
  *(void *)&v6[v4] = qword_1EBB6ED30;
  v6[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController____lazy_storage___shouldEnableAddAccounts] = 2;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceListDataSource] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountStateCancellable] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile] = a1;
  id v8 = v7;
  id v9 = a1;

  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for SettingsViewController();
  return objc_msgSendSuper2(&v11, sel_initWithStyle_, 1);
}

uint64_t type metadata accessor for SettingsViewController()
{
  return self;
}

uint64_t sub_1C22B36A8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C2223E3C;
  return sub_1C22B11C4(a1, v4, v5, v6);
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t method lookup function for SettingsViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SettingsViewController);
}

uint64_t dispatch thunk of SettingsViewController.__allocating_init(with:)()
{
  return (*(uint64_t (**)(void))(v0 + 424))();
}

uint64_t dispatch thunk of SettingsViewController.providedHealthExperienceStore.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of SettingsViewController.providedHealthStore.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of SettingsViewController.pushForAPIAuthorization(forSource:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C8))();
}

uint64_t sub_1C22B3844()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C22B387C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C22B38BC(char a1)
{
  sub_1C22B1D00(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1C22B38C4()
{
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C22B390C(uint64_t a1, void *a2)
{
  return sub_1C22B220C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1C22B3918()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C22B3950()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_1C22B397C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C22B39C4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C22B3A0C()
{
  sub_1C22B2AFC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_1C22B3A18()
{
  if (!qword_1EA2E0028)
  {
    sub_1C21AB51C(255, &qword_1EA2E0000);
    sub_1C22000E8(&qword_1EA2E0008, &qword_1EA2E0000);
    unint64_t v0 = sub_1C2550380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0028);
    }
  }
}

void sub_1C22B3AC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C22B3B24()
{
  if (!qword_1EA2DE3C0)
  {
    sub_1C21A842C();
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    sub_1C22B397C((unint64_t *)&unk_1EA2DE3C8, (void (*)(uint64_t))sub_1C21A842C);
    sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
    unint64_t v0 = sub_1C254E9B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE3C0);
    }
  }
}

void sub_1C22B3C24(uint64_t a1)
{
  sub_1C22B0434(a1, v1);
}

id sub_1C22B3C2C(id result, void *a2)
{
  if (result)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

uint64_t sub_1C22B3C70(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C222399C;
  return sub_1C22B11C4(a1, v4, v5, v6);
}

unint64_t sub_1C22B3D28()
{
  unint64_t result = qword_1EA2E0048;
  if (!qword_1EA2E0048)
  {
    type metadata accessor for SettingsViewController();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E0048);
  }
  return result;
}

double sub_1C22B3D88(uint64_t a1, uint64_t a2, double a3)
{
  double v5 = (*(double (**)(void))(a2 + 32))() + a3;
  return v5 + (*(double (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
}

double sub_1C22B3DF8@<D0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  switch(a1)
  {
    case 2:
      a2[3] = (uint64_t)&_s15LayoutConstantsV12ChartBLayoutVN;
      a2[4] = (uint64_t)&off_1F1D92768;
      uint64_t v6 = swift_allocObject();
      *a2 = v6;
      double result = 20.0;
      *(_OWORD *)(v6 + 16) = xmmword_1C25608A0;
      *(_OWORD *)(v6 + 32) = xmmword_1C25608B0;
      *(void *)(v6 + 48) = 0x402E000000000000;
      *(unsigned char *)(v6 + 56) = 1;
      *(void *)(v6 + 64) = 0x3FE0000000000000;
      *(void *)(v6 + 72) = &unk_1F1D8E700;
      *(void *)(v6 + 80) = &unk_1F1D8E740;
      *(void *)(v6 + 88) = 1;
      *(unsigned char *)(v6 + 96) = 0;
      break;
    case 3:
      a2[3] = (uint64_t)&_s15LayoutConstantsV12ChartCLayoutVN;
      a2[4] = (uint64_t)&off_1F1D927C8;
      uint64_t v5 = swift_allocObject();
      *a2 = v5;
      *(unsigned char *)(v5 + 16) = 0;
      *(_OWORD *)(v5 + 24) = xmmword_1C25608A0;
      double result = 5.0;
      *(_OWORD *)(v5 + 40) = xmmword_1C25608B0;
      *(void *)(v5 + 56) = 0x402E000000000000;
      *(unsigned char *)(v5 + 64) = 1;
      *(void *)(v5 + 72) = 0x3FE0000000000000;
      *(void *)(v5 + 80) = &unk_1F1D8E780;
      *(void *)(v5 + 88) = &unk_1F1D8E7C8;
      break;
    default:
      a2[3] = (uint64_t)&_s15LayoutConstantsV12ChartALayoutVN;
      a2[4] = (uint64_t)&off_1F1D92708;
      uint64_t v3 = swift_allocObject();
      *a2 = v3;
      double result = 20.0;
      *(_OWORD *)(v3 + 16) = xmmword_1C25608C0;
      *(_OWORD *)(v3 + 32) = xmmword_1C25608D0;
      *(void *)(v3 + 48) = &unk_1F1D8E810;
      *(void *)(v3 + 56) = &unk_1F1D8E840;
      break;
  }
  return result;
}

void sub_1C22B3F90()
{
  qword_1EA3038A0 = 0x4083200000000000;
}

void sub_1C22B3FA4()
{
  qword_1EA3038A8 = 0x4088C00000000000;
}

void sub_1C22B3FB8()
{
  qword_1EA3038B0 = 0x4042000000000000;
}

void sub_1C22B3FC8()
{
  qword_1EA3038B8 = 0x4039000000000000;
}

void sub_1C22B3FD8()
{
  qword_1EA3038C0 = 0x4034000000000000;
}

void sub_1C22B3FE8()
{
  qword_1EA3038C8 = 0x403E000000000000;
}

void sub_1C22B3FF8()
{
  qword_1EA3038D0 = 0x4077600000000000;
}

void sub_1C22B400C()
{
  qword_1EA3038D8 = 0x4044000000000000;
}

void sub_1C22B401C()
{
  qword_1EA3038E0 = 0x3FF0000000000000;
}

void sub_1C22B402C()
{
  qword_1EA3038E8 = 0x3FF0000000000000;
}

void sub_1C22B403C()
{
  qword_1EA3038F0 = 0x4034000000000000;
}

void sub_1C22B404C()
{
  qword_1EA3038F8 = 0x4020000000000000;
}

void sub_1C22B405C()
{
  qword_1EA303900 = 0x4010000000000000;
}

void sub_1C22B406C()
{
  qword_1EA303908 = 0x4034000000000000;
}

double sub_1C22B407C()
{
  if (qword_1EA2DD500 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_1EA3038A0;
  if (qword_1EA2DD510 != -1) {
    swift_once();
  }
  double result = v0 - (*(double *)&qword_1EA3038B0 + *(double *)&qword_1EA3038B0);
  *(double *)&qword_1EA303910 = result;
  return result;
}

uint64_t sub_1C22B4118()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1C22B4158()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 97, 7);
}

uint64_t sub_1C22B4198()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

double sub_1C22B41D8()
{
  if (qword_1EA2DD510 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_1EA3038B0;
  if (qword_1EA2DD538 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_1EA3038D8;
  if (qword_1EA2DD518 != -1) {
    swift_once();
  }
  double result = v0 + v1 + *(double *)&qword_1EA3038B8;
  *(double *)&qword_1EA303918 = result;
  return result;
}

void sub_1C22B42AC()
{
  qword_1EA303920 = 0x4032000000000000;
}

double sub_1C22B42BC()
{
  return *(double *)v0;
}

double sub_1C22B42C4()
{
  return 0.0;
}

double sub_1C22B42CC()
{
  return *(double *)(v0 + 8);
}

double sub_1C22B42D4()
{
  return *(double *)(v0 + 16);
}

double sub_1C22B42DC()
{
  return *(double *)(v0 + 24);
}

uint64_t sub_1C22B42E4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C22B42EC()
{
  return swift_bridgeObjectRetain();
}

double sub_1C22B42F4()
{
  return *(double *)(v0 + 32);
}

uint64_t sub_1C22B42FC()
{
  return *(unsigned __int8 *)(v0 + 40);
}

double sub_1C22B4304()
{
  return *(double *)(v0 + 48);
}

uint64_t sub_1C22B430C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C22B4314()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C22B431C()
{
  return *(void *)(v0 + 72);
}

uint64_t sub_1C22B4328()
{
  return *v0;
}

double sub_1C22B4330()
{
  return *(double *)(v0 + 40);
}

uint64_t sub_1C22B4338()
{
  return *(unsigned __int8 *)(v0 + 48);
}

double sub_1C22B4340()
{
  return *(double *)(v0 + 56);
}

uint64_t sub_1C22B4348()
{
  return swift_bridgeObjectRetain();
}

void sub_1C22B4350()
{
  qword_1EA303928 = 0x403C000000000000;
}

double sub_1C22B4360(double a1)
{
  if (qword_1EA2DD508 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_1EA3038A8;
  if (qword_1EA2DD510 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_1EA3038B0;
  if (qword_1EA2DD538 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_1EA3038D8;
  if (qword_1EA2DD550 != -1) {
    swift_once();
  }
  double v5 = *(double *)&qword_1EA3038F0;
  if (qword_1EA2DD560 != -1) {
    swift_once();
  }
  double v6 = *(double *)&qword_1EA303900;
  if (qword_1EA2DD518 != -1) {
    swift_once();
  }
  double v7 = *(double *)&qword_1EA3038B8;
  if (qword_1EA2DD520 != -1) {
    swift_once();
  }
  return v2 - (v3 + v3) - v4 - (v5 + v6 + a1) - v7 - *(double *)&qword_1EA3038C0;
}

uint64_t _s15LayoutConstantsV12ChartALayoutVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s15LayoutConstantsV12ChartALayoutVwcp(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s15LayoutConstantsV12ChartALayoutVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s15LayoutConstantsV12ChartALayoutVwta(_OWORD *a1, _OWORD *a2)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s15LayoutConstantsV12ChartALayoutVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s15LayoutConstantsV12ChartALayoutVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s15LayoutConstantsV12ChartALayoutVMa()
{
  return &_s15LayoutConstantsV12ChartALayoutVN;
}

uint64_t _s15LayoutConstantsV12ChartBLayoutVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s15LayoutConstantsV12ChartBLayoutVwcp(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s15LayoutConstantsV12ChartBLayoutVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = v4;
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s15LayoutConstantsV12ChartBLayoutVwta(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t _s15LayoutConstantsV12ChartBLayoutVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s15LayoutConstantsV12ChartBLayoutVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s15LayoutConstantsV12ChartBLayoutVMa()
{
  return &_s15LayoutConstantsV12ChartBLayoutVN;
}

uint64_t _s15LayoutConstantsV12ChartCLayoutVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s15LayoutConstantsV12ChartCLayoutVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v3 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s15LayoutConstantsV12ChartCLayoutVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t _s15LayoutConstantsV12ChartCLayoutVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s15LayoutConstantsV12ChartCLayoutVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s15LayoutConstantsV12ChartCLayoutVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s15LayoutConstantsV12ChartCLayoutVMa()
{
  return &_s15LayoutConstantsV12ChartCLayoutVN;
}

uint64_t dispatch thunk of AuthorizationIdentifierUpdateObserver.authorizationIdentifiersDidUpdate(didUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource()
{
  uint64_t result = qword_1EA2E0080;
  if (!qword_1EA2E0080) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C22B4C8C()
{
  sub_1C22B74C4();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t sub_1C22B4D74(uint64_t a1)
{
  uint64_t v3 = sub_1C254E220();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  double v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    v14[1] = v1;
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C2274BC0(0, v7, 0);
    uint64_t v8 = v18;
    uint64_t v17 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
    uint64_t v9 = a1
       + ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80));
    uint64_t v16 = *(void *)(*(void *)(v17 - 8) + 72);
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v14[2] = v4 + 32;
    uint64_t v15 = v10;
    do
    {
      v15(v6, v9 + *(int *)(v17 + 48), v3);
      uint64_t v18 = v8;
      unint64_t v12 = *(void *)(v8 + 16);
      unint64_t v11 = *(void *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1C2274BC0(v11 > 1, v12 + 1, 1);
        uint64_t v8 = v18;
      }
      *(void *)(v8 + 16) = v12 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v12, v6, v3);
      v9 += v16;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_1C22B4F8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    sub_1C2550490();
    uint64_t v4 = *(void *)(sub_1C254E220() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      sub_1C254E1F0();
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      v5 += v6;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1C22B5094()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C254EB70();
  swift_release();
  swift_release();
  return v1;
}

id sub_1C22B5108(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v63 = a4;
  uint64_t v64 = a5;
  int v67 = a3;
  unint64_t v65 = a2;
  uint64_t v66 = a1;
  uint64_t v7 = sub_1C254E560();
  uint64_t v57 = *(void *)(v7 - 8);
  uint64_t v58 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v62 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254CB40();
  uint64_t v59 = *(void *)(v9 - 8);
  uint64_t v60 = v9;
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22B74C4();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = qword_1EA2E0058;
  *(void *)(v6 + qword_1EA2E0058) = 0;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  *(void *)(v6 + qword_1EA2E0060) = MEMORY[0x1E4FBC860];
  *(void *)(v6 + qword_1EA2E0068) = v17;
  uint64_t v18 = qword_1EA2E0070;
  type metadata accessor for ClinicalSharingSelectedDataTypesContext();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = MEMORY[0x1E4FBC870];
  *(unsigned char *)(v19 + 32) = 0;
  *(void *)(v19 + 48) = 0;
  *(void *)(v19 + 40) = 0;
  *(void *)(v19 + 16) = v17;
  *(void *)(v19 + 24) = v20;
  swift_beginAccess();
  uint64_t v21 = *(void *)(v19 + 40);
  *(void *)(v19 + 48) = 0;
  *(void *)(v19 + 40) = 0;
  uint64_t v22 = v65;
  swift_retain();
  sub_1C221794C(v21);
  *(void *)(v6 + v18) = v19;
  uint64_t v23 = v6 + qword_1EA2E0078;
  char v68 = 0;
  sub_1C254EB30();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v23, v16, v13);
  id v24 = v66;
  *(void *)(v6 + qword_1EA303938) = 0;
  *(unsigned char *)(v6 + qword_1EA303948) = 0;
  *(void *)(v6 + qword_1EA2E0050) = v24;
  *(void *)(v6 + qword_1EA303930) = v22;
  if (v22)
  {
    id v25 = v22;
    id v26 = v24;
    id v27 = v25;
    id v28 = objc_msgSend(v27, sel_identifier);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v11, v60);
    id v29 = objc_allocWithZone(MEMORY[0x1E4F2B500]);
    uint64_t v30 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v29, sel_initForClinicalAccountIdentifier_, v30);

    id v32 = objc_allocWithZone(MEMORY[0x1E4F2B4F0]);
    id v33 = v26;
    id v34 = objc_msgSend(v32, sel_initWithHealthStore_recipientIdentifier_, v33, v31);

    unint64_t v35 = *(void **)(v6 + v61);
    *(void *)(v6 + v61) = v34;
  }
  else
  {
    id v36 = v24;
  }
  id v37 = (void *)MEMORY[0x1E4FBC860];
  id v69 = (void *)MEMORY[0x1E4FBC860];
  char v38 = v67;
  if (v67) {
    goto LABEL_7;
  }
  type metadata accessor for ClinicalSharingTurnOnAllDataTypesDataSource();
  swift_allocObject();
  uint64_t v39 = sub_1C22C3978();
  uint64_t v40 = sub_1C226C148(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v42 = v40[2];
  unint64_t v41 = v40[3];
  int64_t v43 = v42 + 1;
  if (v42 >= v41 >> 1) {
    goto LABEL_26;
  }
  while (1)
  {
    void v40[2] = v43;
    uint64_t v44 = MEMORY[0x1E4F66470];
    uint64_t v45 = &v40[2 * v42];
    v45[4] = v39;
    v45[5] = v44;
    id v69 = v40;
LABEL_7:
    uint64_t v46 = *(void *)(v6 + v18);
    type metadata accessor for ClinicalSharingSelectableDataTypesDataSourceProviding();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 32) = v37;
    *(void *)(v18 + 16) = v24;
    uint64_t v47 = self;
    id v24 = v24;
    swift_retain();
    id result = objc_msgSend(v47, sel_sharedInstanceForHealthStore_, v24);
    if (!result) {
      break;
    }
    *(void *)(v18 + 24) = result;
    *(void *)(v18 + 48) = v46;
    *(unsigned char *)(v18 + 40) = v38 & 1;
    uint64_t v49 = sub_1C254E200();
    unint64_t v50 = sub_1C24B7498(v49);
    swift_bridgeObjectRelease();
    id v37 = &unk_1EA303000;
    *(void *)(v6 + qword_1EA303940) = v50;
    uint64_t v51 = sub_1C228A5C4(v50);
    sub_1C2272414(v51);
    swift_release();
    uint64_t v6 = sub_1C254DD00();
    uint64_t v52 = *(void *)(v6 + qword_1EA2E0070);
    unint64_t v42 = swift_allocObject();
    swift_weakInit();
    swift_beginAccess();
    uint64_t v53 = *(void *)(v52 + 40);
    *(void *)(v52 + 40) = sub_1C22BFE30;
    *(void *)(v52 + 48) = v42;
    swift_retain();
    sub_1C221794C(v53);
    if (v38) {
      sub_1C22B58A4(0);
    }
    uint64_t v39 = *(void *)(v6 + qword_1EA303940);
    if ((unint64_t)v39 >> 62)
    {
      if (v39 < 0) {
        unint64_t v42 = *(void *)(v6 + qword_1EA303940);
      }
      else {
        unint64_t v42 = v39 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      int64_t v43 = sub_1C2550620();
      if (!v43)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        sub_1C254E510();
        uint64_t v54 = sub_1C254E550();
        os_log_type_t v55 = sub_1C254FA40();
        if (os_log_type_enabled(v54, v55))
        {
          uint64_t v56 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v56 = 0;
          _os_log_impl(&dword_1C21A1000, v54, v55, "There was not a first selectable data type data source", v56, 2u);
          MEMORY[0x1C875A0B0](v56, -1, -1);
        }
        swift_release();
        swift_release();
        sub_1C221794C(v63);

        (*(void (**)(char *, uint64_t))(v57 + 8))(v62, v58);
        return (id)v6;
      }
    }
    else
    {
      int64_t v43 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v43) {
        goto LABEL_20;
      }
    }
    if ((v39 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1C87588E0](0, v39);
      goto LABEL_15;
    }
    unint64_t v41 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v41)
    {
      swift_retain();
LABEL_15:
      swift_bridgeObjectRelease();
      type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
      sub_1C254D660();
      sub_1C221794C(v63);
      swift_release();
      swift_release();
      swift_release();

      return (id)v6;
    }
    __break(1u);
LABEL_26:
    uint64_t v40 = sub_1C226C148((void *)(v41 > 1), v43, 1, v40);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C22B584C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C22B6474();
    return swift_release();
  }
  return result;
}

void sub_1C22B58A4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(v2 + qword_1EA303930);
  if (v12)
  {
    id v13 = v12;
    id v14 = objc_msgSend(v13, sel_identifier);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v15 = objc_allocWithZone(MEMORY[0x1E4F2B500]);
    uint64_t v16 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v15, sel_initForClinicalAccountIdentifier_, v16);

    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B4F0]), sel_initWithHealthStore_recipientIdentifier_, *(void *)(v2 + qword_1EA2E0050), v17);
    uint64_t v19 = swift_allocObject();
    swift_weakInit();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v19;
    *(unsigned char *)(v20 + 24) = a1 & 1;
    aBlock[4] = (uint64_t)sub_1C22BB1F8;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C22B803C;
    aBlock[3] = (uint64_t)&block_descriptor_26;
    uint64_t v21 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v18, sel_fetchSharingAuthorizationsWithCompletion_, v21);
    _Block_release(v21);
  }
  else
  {
    sub_1C254E510();
    uint64_t v22 = sub_1C254E550();
    os_log_type_t v23 = sub_1C254FA20();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      aBlock[0] = v25;
      *(_DWORD *)id v24 = 136315138;
      uint64_t v26 = sub_1C2550AA0();
      void aBlock[6] = sub_1C21AD354(v26, v27, aBlock);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v22, v23, "%s account was nil", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v25, -1, -1);
      MEMORY[0x1C875A0B0](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1C22B5CD4(char a1)
{
  sub_1C22BB2A8(0, (unint64_t *)&qword_1EA2DF3D0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v50 - v4;
  uint64_t v6 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v69 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v68 = (uint64_t)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v50 - v9;
  uint64_t v11 = sub_1C254D9B0();
  uint64_t v64 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v14 = *(void *)(v1 + qword_1EA303940);
    if ((unint64_t)v14 >> 62) {
      goto LABEL_59;
    }
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v16 = v15;
    if (v15)
    {
LABEL_4:
      v50[1] = v1;
      unint64_t v17 = 0;
      unint64_t v55 = v14 & 0xC000000000000001;
      uint64_t v51 = v14 & 0xFFFFFFFFFFFFFF8;
      uint64_t v52 = v14;
      void v50[2] = v14 + 32;
      id v18 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56);
      uint64_t v60 = (void (**)(char *, uint64_t))(v64 + 8);
      uint64_t v61 = v64 + 16;
      uint64_t v14 = MEMORY[0x1E4FBC860];
      uint64_t v53 = v16;
      uint64_t v57 = v13;
      uint64_t v58 = v11;
      int v67 = v5;
      do
      {
        if (v55)
        {
          unint64_t v19 = v17;
          uint64_t v20 = MEMORY[0x1C87588E0](v17, v52);
          BOOL v21 = __OFADD__(v19, 1);
          unint64_t v1 = v19 + 1;
          if (v21) {
            goto LABEL_57;
          }
        }
        else
        {
          if (v17 >= *(void *)(v51 + 16)) {
            goto LABEL_58;
          }
          unint64_t v22 = v17;
          uint64_t v20 = swift_retain();
          BOOL v21 = __OFADD__(v22, 1);
          unint64_t v1 = v22 + 1;
          if (v21) {
            goto LABEL_57;
          }
        }
        unint64_t v56 = v1;
        unint64_t v1 = v20;
        uint64_t v23 = v20;
        uint64_t v24 = sub_1C254DA00();
        uint64_t v25 = v24;
        uint64_t v63 = *(void *)(v24 + 16);
        if (v63)
        {
          uint64_t v54 = v23;
          unint64_t v1 = 0;
          unint64_t v62 = v24 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
          uint64_t v59 = v24;
          while (1)
          {
            if (v1 >= *(void *)(v25 + 16)) {
              goto LABEL_56;
            }
            uint64_t v26 = *(void *)(v64 + 72);
            unint64_t v66 = v1;
            (*(void (**)(char *, unint64_t, uint64_t))(v64 + 16))(v13, v62 + v26 * v1, v11);
            uint64_t v27 = sub_1C254D980();
            uint64_t v28 = *(void *)(v27 + 16);
            if (v28) {
              break;
            }
            swift_bridgeObjectRelease();
LABEL_15:
            unint64_t v1 = v66 + 1;
            (*v60)(v13, v11);
            if (v1 == v63) {
              goto LABEL_5;
            }
          }
          uint64_t v65 = v27;
          uint64_t v29 = v27 + 32;
          id v13 = (char *)v14;
          while (1)
          {
            sub_1C21F4424(v29, (uint64_t)v70);
            sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
            char v30 = swift_dynamicCast();
            id v31 = *v18;
            if (v30)
            {
              v31(v5, 0, 1, v6);
              sub_1C22C0610((uint64_t)v5, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
              unint64_t v1 = *(void *)&v10[*(int *)(v6 + 52)];
              if (v1)
              {
                uint64_t v32 = v6;
                id v33 = (void (**)(void, void, void, void))v18;
                id v34 = v10;
                uint64_t v11 = *(void *)(v1 + 16);
                int64_t v35 = *((void *)v13 + 2);
                uint64_t v14 = v35 + v11;
                if (__OFADD__(v35, v11))
                {
                  __break(1u);
LABEL_52:
                  __break(1u);
LABEL_53:
                  __break(1u);
                  goto LABEL_54;
                }
                swift_bridgeObjectRetain();
                int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                if (!isUniquelyReferenced_nonNull_native || v14 > *((void *)v13 + 3) >> 1)
                {
                  if (v35 <= v14) {
                    int64_t v37 = v35 + v11;
                  }
                  else {
                    int64_t v37 = v35;
                  }
                  id v13 = (char *)sub_1C226C100(isUniquelyReferenced_nonNull_native, v37, 1, (unint64_t)v13);
                }
                uint64_t v10 = v34;
                uint64_t v14 = (uint64_t)&qword_1EA2DED90;
                id v18 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v33;
                if (*(void *)(v1 + 16))
                {
                  uint64_t v38 = *((void *)v13 + 2);
                  if ((*((void *)v13 + 3) >> 1) - v38 < v11) {
                    goto LABEL_53;
                  }
                  unint64_t v39 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
                  uint64_t v40 = *(void *)(v69 + 72);
                  unint64_t v41 = &v13[v39 + v40 * v38];
                  if (v1 + v39 < (unint64_t)&v41[v40 * v11] && (unint64_t)v41 < v1 + v39 + v40 * v11)
                  {
                    uint64_t result = sub_1C25506A0();
                    __break(1u);
                    return result;
                  }
                  uint64_t v6 = v32;
                  swift_arrayInitWithCopy();
                  uint64_t v5 = v67;
                  if (v11)
                  {
                    uint64_t v43 = *((void *)v13 + 2);
                    BOOL v21 = __OFADD__(v43, v11);
                    uint64_t v44 = v43 + v11;
                    if (v21)
                    {
                      __break(1u);
LABEL_56:
                      __break(1u);
LABEL_57:
                      __break(1u);
LABEL_58:
                      __break(1u);
LABEL_59:
                      swift_bridgeObjectRetain();
                      uint64_t v16 = sub_1C2550620();
                      if (!v16) {
                        goto LABEL_60;
                      }
                      goto LABEL_4;
                    }
                    *((void *)v13 + 2) = v44;
                  }
                }
                else
                {
                  uint64_t v6 = v32;
                  uint64_t v5 = v67;
                  if (v11) {
                    goto LABEL_52;
                  }
                }
                swift_bridgeObjectRelease();
              }
              else
              {
                sub_1C22C05A8((uint64_t)v10, v68, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  id v13 = (char *)sub_1C226C100(0, *((void *)v13 + 2) + 1, 1, (unint64_t)v13);
                }
                unint64_t v46 = *((void *)v13 + 2);
                unint64_t v45 = *((void *)v13 + 3);
                if (v46 >= v45 >> 1) {
                  id v13 = (char *)sub_1C226C100(v45 > 1, v46 + 1, 1, (unint64_t)v13);
                }
                *((void *)v13 + 2) = v46 + 1;
                sub_1C22C0610(v68, (uint64_t)&v13[((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(void *)(v69 + 72) * v46], (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
              }
              sub_1C2266828((uint64_t)v10);
            }
            else
            {
              v31(v5, 1, 1, v6);
              sub_1C22C0480((uint64_t)v5, (unint64_t *)&qword_1EA2DF3D0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
            }
            v29 += 40;
            if (!--v28)
            {
              uint64_t v14 = (uint64_t)v13;
              swift_bridgeObjectRelease();
              id v13 = v57;
              uint64_t v11 = v58;
              uint64_t v25 = v59;
              goto LABEL_15;
            }
          }
        }
LABEL_5:
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v17 = v56;
      }
      while (v56 != v53);
LABEL_54:
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_60:
      swift_bridgeObjectRelease();
      uint64_t v14 = MEMORY[0x1E4FBC860];
    }
    swift_retain();
    sub_1C24F35F0(v14, 0);
  }
  else
  {
    uint64_t v47 = *(void *)(v1 + qword_1EA2E0070);
    swift_beginAccess();
    uint64_t v48 = *(void *)(v47 + 16);
    *(void *)(v47 + 16) = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1C24F27D4(v48);
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C22B6474()
{
  uint64_t v64 = sub_1C254F230();
  unint64_t v1 = *(uint64_t **)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v63 = (int64_t *)((char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C22B4D74(v3);
  swift_bridgeObjectRelease();
  uint64_t v65 = v0;
  swift_beginAccess();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C2492308(v5);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C2492308(v7);
  swift_bridgeObjectRelease();
  if (*(void *)(v8 + 16) <= *(void *)(v6 + 16) >> 3)
  {
    uint64_t v69 = v6;
    sub_1C22BE74C(v8);
    swift_bridgeObjectRelease();
    uint64_t v9 = v69;
  }
  else
  {
    uint64_t v9 = sub_1C22BEA94(v8, v6);
    swift_bridgeObjectRelease();
  }
  size_t v10 = sub_1C228FFDC(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C2492308(v4);
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C2492308(v12);
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 16) <= *(void *)(v11 + 16) >> 3)
  {
    uint64_t v69 = v11;
    sub_1C22BE74C(v13);
    swift_bridgeObjectRelease();
    uint64_t v14 = v69;
  }
  else
  {
    uint64_t v14 = sub_1C22BEA94(v13, v11);
    swift_bridgeObjectRelease();
  }
  size_t v15 = sub_1C228FFDC(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v10 + 16);
  swift_release();
  if (v16)
  {
    swift_release();
    BOOL v17 = 1;
  }
  else
  {
    uint64_t v18 = *(void *)(v15 + 16);
    swift_release();
    BOOL v17 = v18 != 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v69) = v17;
  uint64_t v19 = v65;
  swift_retain();
  sub_1C254EB80();
  int64_t v20 = *(void *)(v19 + qword_1EA303940);
  if ((unint64_t)v20 >> 62) {
    goto LABEL_52;
  }
  uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v21; uint64_t v21 = sub_1C2550620())
  {
    unint64_t v22 = 0;
    uint64_t v61 = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    unint64_t v62 = v20 & 0xC000000000000001;
    uint64_t v55 = v20 & 0xFFFFFFFFFFFFFF8;
    int64_t v54 = v20 + 32;
    unsigned int v60 = *MEMORY[0x1E4FBCBF0];
    uint64_t v58 = (void (**)(uint64_t *, uint64_t))(v1 + 1);
    uint64_t v59 = (void (**)(uint64_t *, void, uint64_t))(v1 + 13);
    uint64_t v23 = MEMORY[0x1E4FBC860];
    int64_t v57 = v20;
    uint64_t v56 = v21;
    while (1)
    {
      if (v62)
      {
        uint64_t v24 = MEMORY[0x1C87588E0](v22, v20);
        BOOL v25 = __OFADD__(v22++, 1);
        if (v25) {
          goto LABEL_49;
        }
      }
      else
      {
        if (v22 >= *(void *)(v55 + 16)) {
          goto LABEL_51;
        }
        uint64_t v24 = *(void *)(v54 + 8 * v22);
        swift_retain();
        BOOL v25 = __OFADD__(v22++, 1);
        if (v25) {
          goto LABEL_49;
        }
      }
      uint64_t v68 = v23;
      uint64_t v69 = v23;
      swift_retain();
      uint64_t v26 = sub_1C254DA00();
      uint64_t v66 = v24;
      uint64_t v27 = swift_release();
      MEMORY[0x1F4188790](v27);
      uint64_t v28 = sub_1C22BFE40(v26, sub_1C22BFFAC);
      swift_bridgeObjectRelease();
      unint64_t v1 = (uint64_t *)v28[2];
      if (v1) {
        break;
      }
LABEL_42:
      swift_bridgeObjectRelease();
      uint64_t v47 = v65;
      swift_retain();
      uint64_t v48 = sub_1C22BF888(v23, v47);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v49 = sub_1C228ABE0(v48);
      swift_bridgeObjectRelease();
      uint64_t v67 = v49;
      uint64_t v50 = swift_bridgeObjectRetain();
      sub_1C2272668(v50);
      uint64_t v51 = sub_1C254FC70();
      unint64_t v1 = v63;
      uint64_t v52 = v64;
      *uint64_t v63 = v51;
      (*v59)(v1, v60, v52);
      LOBYTE(v48) = sub_1C254F260();
      (*v58)(v1, v52);
      if ((v48 & 1) == 0) {
        goto LABEL_50;
      }
      sub_1C254DA30();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = MEMORY[0x1E4FBC860];
      if (v22 == v21) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v29 = 0;
    while (1)
    {
      uint64_t v30 = v28[v29 + 4];
      uint64_t v31 = *(void *)(v30 + 16);
      int64_t v20 = *(void *)(v23 + 16);
      int64_t v32 = v20 + v31;
      if (__OFADD__(v20, v31)) {
        break;
      }
      swift_bridgeObjectRetain();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && v32 <= *(void *)(v23 + 24) >> 1)
      {
        if (*(void *)(v30 + 16)) {
          goto LABEL_32;
        }
      }
      else
      {
        if (v20 <= v32) {
          int64_t v34 = v20 + v31;
        }
        else {
          int64_t v34 = v20;
        }
        uint64_t v23 = sub_1C226C100(isUniquelyReferenced_nonNull_native, v34, 1, v23);
        if (*(void *)(v30 + 16))
        {
LABEL_32:
          int64_t v20 = *(void *)(v23 + 16);
          int64_t v35 = (*(void *)(v23 + 24) >> 1) - v20;
          uint64_t v36 = *(void *)(type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() - 8);
          uint64_t v37 = *(void *)(v36 + 72);
          if (v35 < v31) {
            goto LABEL_47;
          }
          unint64_t v38 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
          unint64_t v39 = v23 + v38 + v37 * v20;
          unint64_t v40 = v30 + v38;
          uint64_t v41 = v37 * v31;
          unint64_t v42 = v39 + v41;
          unint64_t v43 = v40 + v41;
          if (v40 < v42 && v39 < v43)
          {
            uint64_t result = sub_1C25506A0();
            __break(1u);
            return result;
          }
          swift_arrayInitWithCopy();
          if (v31)
          {
            uint64_t v45 = *(void *)(v23 + 16);
            BOOL v25 = __OFADD__(v45, v31);
            uint64_t v46 = v45 + v31;
            if (v25) {
              goto LABEL_48;
            }
            *(void *)(v23 + 16) = v46;
          }
          goto LABEL_22;
        }
      }
      if (v31) {
        goto LABEL_46;
      }
LABEL_22:
      swift_bridgeObjectRelease();
      if (v1 == (uint64_t *)++v29)
      {
        swift_bridgeObjectRelease();
        int64_t v20 = v57;
        uint64_t v21 = v56;
        goto LABEL_42;
      }
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C22B6BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  size_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v53 - v11;
  uint64_t v13 = sub_1C254E220();
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v65 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  BOOL v17 = (char *)&v53 - v16;
  sub_1C22C05A8(a1, a3, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  uint64_t v60 = *(void *)(a3 + *(int *)(v6 + 52));
  if (v60)
  {
    uint64_t v56 = v10;
    uint64_t v62 = v6;
    uint64_t v54 = a3;
    uint64_t v18 = *(void *)(a2 + qword_1EA2E0070);
    swift_beginAccess();
    uint64_t v19 = *(void *)(v18 + 16);
    int64_t v20 = *(void *)(v19 + 16);
    uint64_t v55 = v7;
    if (v20)
    {
      uint64_t v70 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C2274BC0(0, v20, 0);
      unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v64 = (void (*)(char *, unint64_t, uint64_t))v19;
      uint64_t v22 = v19 + v21;
      uint64_t v23 = *(void *)(v7 + 72);
      uint64_t v24 = (void (**)(char *, char *, uint64_t))(v69 + 16);
      uint64_t v66 = v69 + 32;
      uint64_t v67 = v23;
      uint64_t v25 = v62;
      uint64_t v68 = v17;
      do
      {
        sub_1C22C05A8(v22, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        (*v24)(v17, &v12[*(int *)(v25 + 48)], v13);
        sub_1C2266828((uint64_t)v12);
        uint64_t v26 = v70;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C2274BC0(0, *(void *)(v26 + 16) + 1, 1);
          uint64_t v25 = v62;
          uint64_t v26 = v70;
        }
        unint64_t v28 = *(void *)(v26 + 16);
        unint64_t v27 = *(void *)(v26 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1C2274BC0(v27 > 1, v28 + 1, 1);
          uint64_t v25 = v62;
          uint64_t v26 = v70;
        }
        *(void *)(v26 + 16) = v28 + 1;
        unint64_t v29 = v26
            + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))
            + *(void *)(v69 + 72) * v28;
        BOOL v17 = v68;
        (*(void (**)(unint64_t, char *, uint64_t))(v69 + 32))(v29, v68, v13);
        uint64_t v70 = v26;
        v22 += v67;
        --v20;
      }
      while (v20);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v31 = v54;
      uint64_t v7 = v55;
      uint64_t v32 = (uint64_t)v56;
      uint64_t v33 = v60;
    }
    else
    {
      uint64_t v33 = v60;
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v26 = MEMORY[0x1E4FBC860];
      uint64_t v31 = v54;
      uint64_t v25 = v62;
      uint64_t v32 = (uint64_t)v56;
    }
    *(unsigned char *)(v31 + 49) = 0;
    uint64_t v57 = *(void *)(v33 + 16);
    if (v57)
    {
      unint64_t v37 = 0;
      unint64_t v38 = *(char **)(v26 + 16);
      uint64_t v58 = v33 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      uint64_t v67 = v69 + 16;
      uint64_t v68 = v38;
      uint64_t v66 = v69 + 8;
      while (v37 < *(void *)(v33 + 16))
      {
        sub_1C22C05A8(v58 + *(void *)(v7 + 72) * v37, v32, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        if (v68)
        {
          unint64_t v59 = v37;
          uint64_t v39 = v32 + *(int *)(v25 + 48);
          uint64_t v40 = v69;
          unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
          unint64_t v42 = v65;
          uint64_t v64 = *(void (**)(char *, unint64_t, uint64_t))(v69 + 16);
          v64(v65, v26 + v41, v13);
          sub_1C22C0678(&qword_1EA2DFE28, MEMORY[0x1E4F66840]);
          swift_bridgeObjectRetain();
          uint64_t v63 = v39;
          unint64_t v43 = v42;
          LOBYTE(v42) = sub_1C254F420();
          uint64_t v44 = *(void (**)(char *, uint64_t))(v40 + 8);
          v44(v43, v13);
          if (v42) {
            goto LABEL_28;
          }
          if (v68 != (char *)1)
          {
            uint64_t v61 = *(void *)(v69 + 72);
            v64(v43, v26 + v41 + v61, v13);
            char v45 = sub_1C254F420();
            uint64_t v46 = v65;
            char v47 = v45;
            v44(v65, v13);
            if (v47)
            {
LABEL_28:
              swift_bridgeObjectRelease();
              sub_1C2266828((uint64_t)v56);
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
              *(unsigned char *)(v54 + 49) = 1;
              return result;
            }
            if (v68 != (char *)2)
            {
              uint64_t v48 = v26 + v41 + 2 * v61;
              uint64_t v49 = 2;
              while (1)
              {
                uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v64)(v46, v48, v13);
                uint64_t v50 = v49 + 1;
                if (__OFADD__(v49, 1)) {
                  break;
                }
                char v51 = sub_1C254F420();
                uint64_t v46 = v65;
                char v52 = v51;
                v44(v65, v13);
                if (v52) {
                  goto LABEL_28;
                }
                ++v49;
                v48 += v61;
                if ((char *)v50 == v68) {
                  goto LABEL_14;
                }
              }
              __break(1u);
              break;
            }
          }
LABEL_14:
          swift_bridgeObjectRelease();
          uint64_t v25 = v62;
          uint64_t v7 = v55;
          uint64_t v32 = (uint64_t)v56;
          unint64_t v37 = v59;
          uint64_t v33 = v60;
        }
        ++v37;
        uint64_t result = sub_1C2266828(v32);
        if (v37 == v57) {
          goto LABEL_27;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_27:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v34 = a3 + *(int *)(v6 + 48);
    uint64_t v35 = *(void *)(*(void *)(a2 + qword_1EA2E0070) + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    char v36 = sub_1C24F21B4(v34, v35);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(a3 + 49) = v36 & 1;
  }
  return result;
}

void sub_1C22B7268()
{
}

uint64_t sub_1C22B7298()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = v0 + qword_1EA2E0078;
  sub_1C22B74C4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C22B7384()
{
  uint64_t v0 = sub_1C254DCF0();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = v0 + qword_1EA2E0078;
  sub_1C22B74C4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C22B7470()
{
  sub_1C22B7384();
  return swift_deallocClassInstance();
}

void sub_1C22B74C4()
{
  if (!qword_1EBB6F020)
  {
    unint64_t v0 = sub_1C254EB90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F020);
    }
  }
}

uint64_t sub_1C22B751C()
{
  return type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource();
}

uint64_t sub_1C22B7524()
{
  return MEMORY[0x1E4F66580];
}

uint64_t sub_1C22B7530(unint64_t a1, void *a2, uint64_t a3, int a4)
{
  int v56 = a4;
  sub_1C22BB2A8(0, &qword_1EA2E0098, MEMORY[0x1E4F66840], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v51 - v8;
  uint64_t v10 = sub_1C254E220();
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v64 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v62 = (char *)&v51 - v13;
  uint64_t v14 = sub_1C254F1C0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  unint64_t v59 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C254F200();
  uint64_t v58 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v57 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C254E560();
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v52 = v17;
    uint64_t v53 = a3;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_1C2550620();
      uint64_t v23 = result;
    }
    else
    {
      uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
    }
    unint64_t v25 = MEMORY[0x1E4FBC860];
    uint64_t v54 = v15;
    uint64_t v55 = v14;
    if (!v23)
    {
LABEL_18:
      swift_bridgeObjectRelease_n();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
      uint64_t v35 = (void *)sub_1C254FC70();
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v53;
      *(unsigned char *)(v36 + 24) = v56 & 1;
      *(void *)(v36 + 32) = v25;
      aBlock[4] = (uint64_t)sub_1C22BB298;
      aBlock[5] = v36;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1C224E544;
      aBlock[3] = (uint64_t)&block_descriptor_9_0;
      unint64_t v37 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      unint64_t v38 = v57;
      sub_1C254F1E0();
      aBlock[0] = MEMORY[0x1E4FBC860];
      sub_1C22C0678((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
      sub_1C22BB2A8(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
      sub_1C21FFDEC();
      uint64_t v39 = v59;
      uint64_t v40 = v55;
      sub_1C2550200();
      MEMORY[0x1C87581B0](0, v38, v39, v37);
      _Block_release(v37);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v40);
      return (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v38, v52);
    }
    if (v23 >= 1)
    {
      uint64_t v26 = 0;
      unint64_t v27 = a1 & 0xC000000000000001;
      unint64_t v28 = (unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
      unint64_t v29 = (void (**)(char *, char *, uint64_t))(v63 + 32);
      uint64_t v60 = v23;
      unint64_t v61 = a1;
      do
      {
        if (v27) {
          MEMORY[0x1C87588E0](v26, a1);
        }
        else {
          id v30 = *(id *)(a1 + 8 * v26 + 32);
        }
        sub_1C254E230();
        if ((*v28)(v9, 1, v10) == 1)
        {
          sub_1C22C0480((uint64_t)v9, &qword_1EA2E0098, MEMORY[0x1E4F66840]);
        }
        else
        {
          uint64_t v31 = *v29;
          uint64_t v32 = v62;
          (*v29)(v62, v9, v10);
          v31(v64, v32, v10);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v25 = sub_1C226C270(0, *(void *)(v25 + 16) + 1, 1, v25);
          }
          unint64_t v34 = *(void *)(v25 + 16);
          unint64_t v33 = *(void *)(v25 + 24);
          if (v34 >= v33 >> 1) {
            unint64_t v25 = sub_1C226C270(v33 > 1, v34 + 1, 1, v25);
          }
          *(void *)(v25 + 16) = v34 + 1;
          v31((char *)(v25+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v34), v64, v10);
          uint64_t v23 = v60;
          a1 = v61;
        }
        ++v26;
      }
      while (v23 != v26);
      goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
    uint64_t v41 = v20;
    sub_1C254E510();
    id v42 = a2;
    id v43 = a2;
    uint64_t v44 = sub_1C254E550();
    os_log_type_t v45 = sub_1C254FA20();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136315138;
      uint64_t v64 = (char *)(v46 + 4);
      aBlock[0] = v47;
      uint64_t v66 = (uint64_t)a2;
      id v48 = a2;
      sub_1C22BB20C(0, (unint64_t *)&unk_1EBB6F530, (uint64_t)&qword_1EBB70060, MEMORY[0x1E4FBC0E8], (void (*)(uint64_t, uint64_t, uint64_t))sub_1C21FFE74);
      uint64_t v49 = sub_1C254F510();
      uint64_t v66 = sub_1C21AD354(v49, v50, aBlock);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v44, v45, "Error fetching selected authorization identifiers: %s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v47, -1, -1);
      MEMORY[0x1C875A0B0](v46, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v22, v19);
  }
  return result;
}

uint64_t sub_1C22B7D4C(uint64_t a1, char a2)
{
  uint64_t v3 = sub_1C254E560();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    sub_1C254E510();
    uint64_t v9 = sub_1C254E550();
    os_log_type_t v10 = sub_1C254FA40();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_1C21A1000, v9, v10, "Successfully fetched selected authorization identifiers.", v11, 2u);
      MEMORY[0x1C875A0B0](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if ((a2 & 1) != 0 || *(unsigned char *)(v8 + qword_1EA303948) == 1)
    {
      uint64_t v12 = (void *)(v8 + qword_1EA2E0060);
      swift_beginAccess();
      *uint64_t v12 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      *(unsigned char *)(v8 + qword_1EA303948) = 0;
    }
    uint64_t v13 = (uint64_t *)(v8 + qword_1EA2E0060);
    swift_beginAccess();
    uint64_t v14 = swift_bridgeObjectRetain();
    sub_1C2272810(v14);
    swift_endAccess();
    unint64_t v15 = *(void *)(v8 + qword_1EA303940);
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C2550620();
      uint64_t v16 = result;
      if (result) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v16)
      {
LABEL_9:
        if (v16 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v17 = 0;
        do
        {
          if ((v15 & 0xC000000000000001) != 0) {
            MEMORY[0x1C87588E0](v17, v15);
          }
          else {
            swift_retain();
          }
          ++v17;
          uint64_t v18 = *v13;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C22A1298(v18);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
        }
        while (v16 != v17);
      }
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C22B803C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1C22BAC28(a1, a2, a3, &qword_1EA2E0090);
}

uint64_t sub_1C22B8050()
{
  uint64_t v1 = *v0;
  sub_1C22BB2A8(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - v3;
  uint64_t v5 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  v6[5] = v1;
  swift_retain();
  sub_1C24D0A0C((uint64_t)v4, (uint64_t)&unk_1EA2E00D8, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_1C22B819C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  uint64_t v7 = sub_1C254E560();
  v5[6] = v7;
  v5[7] = *(void *)(v7 - 8);
  v5[8] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v5[9] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_1C22B82A8;
  v8[9] = a4;
  return MEMORY[0x1F4188298](sub_1C22B8B0C, 0, 0);
}

uint64_t sub_1C22B82A8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1C22B856C;
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 88) = v4;
    void *v4 = v2;
    v4[1] = sub_1C22B8430;
    uint64_t v5 = **(void **)(v2 + 32);
    _OWORD v4[2] = 1;
    v4[3] = v5;
    uint64_t v3 = sub_1C22B9284;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C22B8430()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C22B882C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C22B856C()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = (void *)v0[10];
  sub_1C254E510();
  id v3 = v2;
  id v4 = v2;
  uint64_t v5 = sub_1C254E550();
  os_log_type_t v6 = sub_1C254FA20();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v19 = v0[7];
    uint64_t v20 = v0[6];
    uint64_t v21 = v0[8];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v22 = v18;
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v9 = sub_1C2550AA0();
    v0[2] = sub_1C21AD354(v9, v10, &v22);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    id v11 = v2;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v12;
    sub_1C2550120();
    *uint64_t v8 = v12;

    _os_log_impl(&dword_1C21A1000, v5, v6, "%s Failed to persist sharing changes: %@", (uint8_t *)v7, 0x16u);
    sub_1C22BB20C(0, (unint64_t *)&qword_1EBB6F230, (uint64_t)&qword_1EBB6F510, 0x1E4FBA8A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C21AB51C);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v18, -1, -1);
    MEMORY[0x1C875A0B0](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    uint64_t v14 = v0[7];
    uint64_t v13 = v0[8];
    uint64_t v15 = v1[6];

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v1[1];
  return v16();
}

uint64_t sub_1C22B882C()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = (void *)v0[12];
  sub_1C254E510();
  id v3 = v2;
  id v4 = v2;
  uint64_t v5 = sub_1C254E550();
  os_log_type_t v6 = sub_1C254FA20();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v19 = v0[7];
    uint64_t v20 = v0[6];
    uint64_t v21 = v0[8];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v22 = v18;
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v9 = sub_1C2550AA0();
    v0[2] = sub_1C21AD354(v9, v10, &v22);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    id v11 = v2;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v12;
    sub_1C2550120();
    *uint64_t v8 = v12;

    _os_log_impl(&dword_1C21A1000, v5, v6, "%s Failed to persist sharing changes: %@", (uint8_t *)v7, 0x16u);
    sub_1C22BB20C(0, (unint64_t *)&qword_1EBB6F230, (uint64_t)&qword_1EBB6F510, 0x1E4FBA8A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C21AB51C);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v18, -1, -1);
    MEMORY[0x1C875A0B0](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    uint64_t v14 = v0[7];
    uint64_t v13 = v0[8];
    uint64_t v15 = v1[6];

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v1[1];
  return v16();
}

uint64_t sub_1C22B8AEC()
{
  *(void *)(v1 + 72) = v0;
  return MEMORY[0x1F4188298](sub_1C22B8B0C, 0, 0);
}

uint64_t sub_1C22B8B0C()
{
  swift_beginAccess();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C22B4D74(v1);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C2492308(v3);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C2492308(v5);
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) <= *(void *)(v4 + 16) >> 3) {
    sub_1C22BE74C(v6);
  }
  else {
    uint64_t v4 = sub_1C22BEA94(v6, v4);
  }
  swift_bridgeObjectRelease();
  size_t v7 = sub_1C228FFDC(v4);
  v0[10] = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C2492308(v2);
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C2492308(v9);
  swift_bridgeObjectRelease();
  if (*(void *)(v10 + 16) <= *(void *)(v8 + 16) >> 3)
  {
    sub_1C22BE74C(v10);
    swift_bridgeObjectRelease();
    uint64_t v11 = v8;
  }
  else
  {
    uint64_t v11 = sub_1C22BEA94(v10, v8);
    swift_bridgeObjectRelease();
  }
  size_t v12 = sub_1C228FFDC(v11);
  v0[11] = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v7 + 16) || *(void *)(v12 + 16))
  {
    uint64_t v13 = (void *)swift_task_alloc();
    v0[12] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1C22B8DCC;
    return sub_1C22B9510(v7);
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_1C22B8DCC()
{
  uint64_t v2 = (void *)*v1;
  v2[13] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C22B9170, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = (void *)swift_task_alloc();
    v2[14] = v3;
    void *v3 = v2;
    v3[1] = sub_1C22B8F48;
    uint64_t v4 = v2[11];
    return sub_1C22B99D0(v4);
  }
}

uint64_t sub_1C22B8F48()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C22B91DC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C22B9064;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C22B9064()
{
  sub_1C254F820();
  *(void *)(v0 + 128) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C22B90F8, v2, v1);
}

uint64_t sub_1C22B90F8()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_release();
  *(unsigned char *)(v1 + qword_1EA303948) = 1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C22B9170()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C22B91DC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C22B9240(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1C22B9284, 0, 0);
}

uint64_t sub_1C22B9284()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = swift_task_alloc();
  v0[4] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  void *v4 = v0;
  v4[1] = sub_1C22B9378;
  return MEMORY[0x1F4188160]();
}

uint64_t sub_1C22B9378()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C22B94AC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C22B9494;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C22B9494()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C22B94AC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C22B9510(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  uint64_t v3 = sub_1C254E560();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C22B95F8, 0, 0);
}

uint64_t sub_1C22B95F8()
{
  uint64_t v20 = v0;
  uint64_t v1 = *(void **)(v0[4] + qword_1EA2E0058);
  v0[9] = v1;
  if (v1)
  {
    uint64_t v2 = v0[5];
    uint64_t v3 = v0[3];
    uint64_t v4 = (void *)swift_task_alloc();
    v0[10] = v4;
    _OWORD v4[2] = v1;
    v4[3] = v3;
    v4[4] = v2;
    id v5 = v1;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[11] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1C22B98B4;
    return MEMORY[0x1F4188160]();
  }
  else
  {
    sub_1C254E510();
    size_t v7 = sub_1C254E550();
    os_log_type_t v8 = sub_1C254FA20();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v11 = v0[7];
    uint64_t v10 = v0[8];
    uint64_t v12 = v0[6];
    if (v9)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v19 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v15 = sub_1C2550AA0();
      v0[2] = sub_1C21AD354(v15, v16, &v19);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v7, v8, "%s authorizationStore was nil", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v14, -1, -1);
      MEMORY[0x1C875A0B0](v13, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_1C22B98B4()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C22C06E4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C22C06C0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C22B99D0(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  uint64_t v3 = sub_1C254E560();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C22B9AB8, 0, 0);
}

uint64_t sub_1C22B9AB8()
{
  uint64_t v20 = v0;
  uint64_t v1 = *(void **)(v0[4] + qword_1EA2E0058);
  v0[9] = v1;
  if (v1)
  {
    uint64_t v2 = v0[5];
    uint64_t v3 = v0[3];
    uint64_t v4 = (void *)swift_task_alloc();
    v0[10] = v4;
    _OWORD v4[2] = v1;
    v4[3] = v3;
    v4[4] = v2;
    id v5 = v1;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[11] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1C22B9D74;
    return MEMORY[0x1F4188160]();
  }
  else
  {
    sub_1C254E510();
    size_t v7 = sub_1C254E550();
    os_log_type_t v8 = sub_1C254FA20();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v11 = v0[7];
    uint64_t v10 = v0[8];
    uint64_t v12 = v0[6];
    if (v9)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v19 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v15 = sub_1C2550AA0();
      v0[2] = sub_1C21AD354(v15, v16, &v19);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v7, v8, "%s authorizationStore was nil", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v14, -1, -1);
      MEMORY[0x1C875A0B0](v13, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_1C22B9D74()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C22B9EFC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C22B9E90;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C22B9E90()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C22B9EFC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1C22B9F74(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, SEL *a8)
{
  id v24 = a2;
  unint64_t v25 = a8;
  uint64_t v23 = a7;
  sub_1C22BF75C();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v12);
  unint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22B4F8C(a3);
  sub_1C21AB51C(0, &qword_1EA2E0090);
  uint64_t v17 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v19 = (v15 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v20 + v18, v16, v13);
  *(void *)(v20 + v19) = a4;
  aBlock[4] = a6;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C22AE944;
  aBlock[3] = v23;
  uint64_t v21 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v24, *v25, v17, v21);
  _Block_release(v21);
}

uint64_t sub_1C22BA174(char a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v34 - v11;
  if (a1)
  {
    sub_1C254E510();
    uint64_t v13 = sub_1C254E550();
    os_log_type_t v14 = sub_1C254FA40();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v37 = v16;
      uint64_t v35 = v6;
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v17 = sub_1C2550AA0();
      uint64_t v36 = sub_1C21AD354(v17, v18, &v37);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v13, v14, "[%s] Successfully removed Authorization Identifiers", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v16, -1, -1);
      MEMORY[0x1C875A0B0](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v35);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
    sub_1C22BF75C();
    return sub_1C254F7F0();
  }
  else
  {
    sub_1C254E510();
    id v19 = a2;
    id v20 = a2;
    uint64_t v21 = sub_1C254E550();
    os_log_type_t v22 = sub_1C254FA40();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v35 = a3;
      uint64_t v25 = v24;
      uint64_t v37 = v24;
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v26 = sub_1C2550AA0();
      uint64_t v36 = sub_1C21AD354(v26, v27, &v37);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v36 = (uint64_t)a2;
      id v28 = a2;
      sub_1C22BB20C(0, (unint64_t *)&unk_1EBB6F530, (uint64_t)&qword_1EBB70060, MEMORY[0x1E4FBC0E8], (void (*)(uint64_t, uint64_t, uint64_t))sub_1C21FFE74);
      uint64_t v29 = sub_1C254F510();
      uint64_t v36 = sub_1C21AD354(v29, v30, &v37);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v21, v22, "[%s] Error removing Authorization Identifiers %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v25, -1, -1);
      MEMORY[0x1C875A0B0](v23, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    uint64_t v32 = (uint64_t)a2;
    if (!a2)
    {
      type metadata accessor for HKError(0);
      uint64_t v36 = 0;
      sub_1C22BAE8C(MEMORY[0x1E4FBC860]);
      sub_1C22C0678(&qword_1EA2DDEF8, type metadata accessor for HKError);
      sub_1C254C800();
      uint64_t v32 = v37;
    }
    uint64_t v37 = v32;
    id v33 = a2;
    sub_1C22BF75C();
    return sub_1C254F7E0();
  }
}

void sub_1C22BA628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C22BF75C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v6);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67770]), sel_init);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(void *)(v12 + ((v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  aBlock[4] = sub_1C22BF7DC;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C22BAC14;
  aBlock[3] = &block_descriptor_17;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v10, sel_shareHealthDataWithOptions_reason_completion_, 0, a2, v13);

  _Block_release(v13);
}

uint64_t sub_1C22BA810(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_1C254E560();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)&v32 - v10;
  if (a2)
  {
    id v12 = a2;
    sub_1C254E510();
    id v13 = a2;
    id v14 = a2;
    uint64_t v15 = sub_1C254E550();
    os_log_type_t v16 = sub_1C254FA40();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v33 = a3;
      uint64_t v19 = v18;
      uint64_t v35 = v18;
      *(_DWORD *)uint64_t v17 = 136315394;
      uint64_t v20 = sub_1C2550AA0();
      uint64_t v34 = sub_1C21AD354(v20, v21, &v35);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v34 = (uint64_t)a2;
      id v22 = a2;
      sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
      uint64_t v23 = sub_1C254F510();
      uint64_t v34 = sub_1C21AD354(v23, v24, &v35);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v15, v16, "[%s] Error sharing to clinicalSharingClient: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v19, -1, -1);
      MEMORY[0x1C875A0B0](v17, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    uint64_t v35 = (uint64_t)a2;
    sub_1C22BF75C();
    return sub_1C254F7E0();
  }
  else
  {
    sub_1C254E510();
    uint64_t v25 = sub_1C254E550();
    os_log_type_t v26 = sub_1C254FA40();
    if (os_log_type_enabled(v25, v26))
    {
      unint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v35 = v28;
      uint64_t v33 = a3;
      *(_DWORD *)unint64_t v27 = 136315138;
      uint64_t v29 = sub_1C2550AA0();
      uint64_t v34 = sub_1C21AD354(v29, v30, &v35);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v25, v26, "[%s] Successfully shared to clinicalSharingClient", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v28, -1, -1);
      MEMORY[0x1C875A0B0](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    sub_1C22BF75C();
    return sub_1C254F7F0();
  }
}

uint64_t sub_1C22BAC14(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1C22BAC28(a1, a2, a3, &qword_1EA2E00B0);
}

uint64_t sub_1C22BAC28(uint64_t a1, uint64_t a2, void *a3, unint64_t *a4)
{
  uint64_t v5 = a2;
  uint64_t v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C21AB51C(0, a4);
    uint64_t v5 = sub_1C254F710();
  }
  swift_retain();
  id v7 = a3;
  v6(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C22BACC4()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DA90();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C22BAD98@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C254EB70();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C22BAE18()
{
  return sub_1C254EB80();
}

unint64_t sub_1C22BAE8C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    char v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C22BFA78();
  uint64_t v2 = sub_1C2550680();
  char v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C22C05A8(v6, (uint64_t)&v15, (uint64_t (*)(void))sub_1C22BFAE4);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1C22BAFC8(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1C2206B9C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C22BAFC8(uint64_t a1, uint64_t a2)
{
  sub_1C25509C0();
  sub_1C254F570();
  uint64_t v4 = sub_1C2550A10();
  return sub_1C22BB040(a1, a2, v4);
}

unint64_t sub_1C22BB040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1C2550870() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1C2550870() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_1C2550870()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1C22BB188()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C22BB1C0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_1C22BB1F8(unint64_t a1, void *a2)
{
  return sub_1C22B7530(a1, a2, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24));
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

void sub_1C22BB20C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1C2550100();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C22BB268()
{
  return objectdestroy_5Tm_0(MEMORY[0x1E4FBC8D0], MEMORY[0x1E4FBC898], 40);
}

uint64_t sub_1C22BB298()
{
  return sub_1C22B7D4C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_1C22BB2A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C22BB30C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2;
  long long v5 = *((_OWORD *)a1 + 3);
  v81[2] = *((_OWORD *)a1 + 2);
  v81[3] = v5;
  uint64_t v82 = *((void *)a1 + 8);
  long long v6 = *((_OWORD *)a1 + 1);
  v81[0] = *(_OWORD *)a1;
  v81[1] = v6;
  sub_1C25509C0();
  swift_bridgeObjectRetain();
  DisplayCategory.hash(into:)((uint64_t)v80);
  uint64_t v7 = sub_1C2550A10();
  uint64_t v8 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = v4 + 56;
  if (((*(void *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_75:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a2 + 64) = 0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  uint64_t v11 = ~v8;
  int v12 = *a1;
  uint64_t v78 = v4;
  uint64_t v72 = *((void *)a1 + 4);
  uint64_t v73 = *((void *)a1 + 3);
  uint64_t v70 = *((void *)a1 + 2);
  uint64_t v71 = *((void *)a1 + 5);
  *(void *)&v81[0] = *((void *)a1 + 6);
  uint64_t v68 = *((void *)a1 + 7);
  uint64_t v65 = v2;
  uint64_t v76 = ~v8;
  uint64_t v77 = v4 + 56;
  int v75 = v12;
  while (1)
  {
    BOOL v13 = (void *)(*(void *)(v4 + 48) + 72 * v9);
    if (*(unsigned __int8 *)v13 != v12) {
      goto LABEL_4;
    }
    uint64_t v14 = (void *)v13[1];
    uint64_t v15 = v13[2];
    uint64_t v16 = v13[3];
    uint64_t v79 = v13[4];
    uint64_t v18 = v13[5];
    uint64_t v17 = v13[6];
    uint64_t v19 = v13[7];
    uint64_t v20 = (void *)v13[8];
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v21 = v20;
    id v22 = v14;
    if (sub_1C254FF70())
    {
      uint64_t v74 = v19;
      uint64_t v23 = v16;
      if (v16)
      {
        uint64_t v24 = v17;
        if (!v73) {
          goto LABEL_3;
        }
        BOOL v25 = v15 == v70 && v23 == v73;
        if (!v25 && (sub_1C2550870() & 1) == 0) {
          goto LABEL_3;
        }
      }
      else
      {
        uint64_t v24 = v17;
        if (v73) {
          goto LABEL_3;
        }
      }
      BOOL v26 = v79 == v72 && v18 == v71;
      if (!v26 && (sub_1C2550870() & 1) == 0) {
        goto LABEL_3;
      }
      if ((unint64_t)v24 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v54 = sub_1C2550620();
        swift_bridgeObjectRelease();
        uint64_t v27 = v54;
      }
      else
      {
        uint64_t v27 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v28 = *(void *)&v81[0];
      uint64_t v29 = *(void *)&v81[0] >> 62;
      if (*(void *)&v81[0] >> 62)
      {
        uint64_t v64 = v27;
        swift_bridgeObjectRetain();
        uint64_t v55 = sub_1C2550620();
        sub_1C22C04F0((uint64_t)v81);
        uint64_t v27 = v64;
        if (v64 != v55) {
          goto LABEL_3;
        }
      }
      else if (v27 != *(void *)((*(void *)&v81[0] & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_3;
      }
      if (v27)
      {
        uint64_t v30 = v24 & 0xFFFFFFFFFFFFFF8;
        uint64_t v31 = (v24 & 0xFFFFFFFFFFFFFF8) + 32;
        if (v24 < 0) {
          uint64_t v30 = v24;
        }
        if ((unint64_t)v24 >> 62) {
          uint64_t v31 = v30;
        }
        uint64_t v32 = v28 & 0xFFFFFFFFFFFFFF8;
        uint64_t v33 = (v28 & 0xFFFFFFFFFFFFFF8) + 32;
        if (v28 < 0) {
          uint64_t v32 = v28;
        }
        if (v29) {
          uint64_t v33 = v32;
        }
        if (v31 != v33)
        {
          if (v27 < 0)
          {
            __break(1u);
LABEL_79:
            __break(1u);
LABEL_80:
            __break(1u);
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
            goto LABEL_85;
          }
          unint64_t v67 = v24 & 0xC000000000000001;
          uint64_t v62 = v27;
          if ((v24 & 0xC000000000000001) != 0)
          {
            id v34 = (id)MEMORY[0x1C87588E0](0, v24);
          }
          else
          {
            if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_79;
            }
            id v34 = *(id *)(v24 + 32);
          }
          id v35 = v34;
          unint64_t v66 = v28 & 0xC000000000000001;
          if ((v28 & 0xC000000000000001) != 0)
          {
            id v36 = (id)MEMORY[0x1C87588E0](0, v28);
          }
          else
          {
            if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_80;
            }
            id v36 = *(id *)(v28 + 32);
          }
          uint64_t v37 = v36;
          sub_1C21AB51C(0, &qword_1EBB6EF58);
          char v38 = sub_1C254FF70();
          uint64_t v39 = v35;
          char v40 = v38;

          if ((v40 & 1) == 0) {
            goto LABEL_3;
          }
          if (v62 != 1)
          {
            if (v67)
            {
              id v42 = (id)MEMORY[0x1C87588E0](1, v24);
            }
            else
            {
              if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
                goto LABEL_83;
              }
              id v42 = *(id *)(v24 + 40);
            }
            id v43 = v42;
            if (v66)
            {
              id v44 = (id)MEMORY[0x1C87588E0](1, v28);
            }
            else
            {
              if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
                goto LABEL_84;
              }
              id v44 = *(id *)(v28 + 40);
            }
            os_log_type_t v45 = v44;
            char v46 = sub_1C254FF70();

            if ((v46 & 1) == 0) {
              goto LABEL_3;
            }
            uint64_t v63 = 2 - v62;
            uint64_t v47 = 6;
            while (v63 + v47 != 6)
            {
              unint64_t v51 = v47 - 4;
              if (v67)
              {
                id v52 = (id)MEMORY[0x1C87588E0](v47 - 4, v24);
              }
              else
              {
                if (v51 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_81;
                }
                id v52 = *(id *)(v24 + 8 * v47);
              }
              uint64_t v53 = v52;
              if (v66)
              {
                id v48 = (id)MEMORY[0x1C87588E0](v47 - 4, v28);
              }
              else
              {
                if (v51 >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_82;
                }
                id v48 = *(id *)(v28 + 8 * v47);
              }
              uint64_t v49 = v48;
              char v50 = sub_1C254FF70();

              ++v47;
              if ((v50 & 1) == 0) {
                goto LABEL_3;
              }
            }
          }
        }
      }
      if (sub_1C22AB474(v74, v68)) {
        break;
      }
    }
LABEL_3:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v77;
    uint64_t v4 = v78;
    uint64_t v11 = v76;
    int v12 = v75;

LABEL_4:
    unint64_t v9 = (v9 + 1) & v11;
    if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_75;
    }
  }
  char v41 = sub_1C254FF70();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v28 = (uint64_t)v65;
  uint64_t v10 = v77;
  uint64_t v4 = v78;
  uint64_t v11 = v76;
  int v12 = v75;
  if ((v41 & 1) == 0) {
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v58 = *v65;
  v80[0] = *v65;
  *uint64_t v65 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_85:
    sub_1C22BBED4();
    uint64_t v58 = v80[0];
  }
  uint64_t v59 = *(void *)(v58 + 48) + 72 * v9;
  uint64_t v60 = *(void *)(v59 + 8);
  uint64_t v61 = *(void *)(v59 + 32);
  *(unsigned char *)a2 = *(unsigned char *)v59;
  *(void *)(a2 + 8) = v60;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(v59 + 16);
  *(void *)(a2 + 32) = v61;
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v59 + 40);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(v59 + 56);
  sub_1C22BD23C(v9);
  *(void *)uint64_t v28 = v80[0];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C22BB9D4(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = a1;
    char v5 = sub_1C25502E0();

    if (v5)
    {
      uint64_t v6 = sub_1C22BD0A0();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C254FF60();
  uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    goto LABEL_12;
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
  id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
  char v11 = sub_1C254FF70();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_12;
      }
      id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
      char v14 = sub_1C254FF70();
    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v1;
  uint64_t v18 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C22BC654((unint64_t *)&qword_1EA2DF690, (unint64_t *)&qword_1EA2E1530, 0x1E4F67708, &qword_1EA2DF698);
    uint64_t v16 = v18;
  }
  uint64_t v6 = *(void *)(*(void *)(v16 + 48) + 8 * v9);
  sub_1C22BD71C(v9);
  *uint64_t v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C22BBBCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1C254E220();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1C22C0678(&qword_1EA2DF688, MEMORY[0x1E4F66840]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1C254F370();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    BOOL v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    char v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1C22C0678(&qword_1EA2DFE28, MEMORY[0x1E4F66840]);
      char v19 = sub_1C254F420();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    id v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *id v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C22BC1AC(MEMORY[0x1E4F66840], (void (*)(void))sub_1C2283978);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1C22BD8C0(v12);
    *id v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

id sub_1C22BBED4()
{
  uint64_t v1 = v0;
  sub_1C2284E0C(0, (unint64_t *)&qword_1EA2DF888, (void (*)(void))sub_1C220732C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550340();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25)
      {
        int64_t v9 = v24 + 2;
        if (v24 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v25 = *(void *)(v6 + 8 * v9);
        if (!v25) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 72 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    char v19 = *(void **)(v17 + 8);
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    long long v21 = *(_OWORD *)(v17 + 24);
    long long v22 = *(_OWORD *)(v17 + 40);
    long long v27 = *(_OWORD *)(v17 + 56);
    *(unsigned char *)uint64_t v20 = *(unsigned char *)v17;
    *(void *)(v20 + 8) = v19;
    *(void *)(v20 + 16) = v18;
    *(_OWORD *)(v20 + 24) = v21;
    *(_OWORD *)(v20 + 40) = v22;
    *(_OWORD *)(v20 + 56) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v23 = *((id *)&v27 + 1);
    id result = v19;
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v13) {
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C22BC110()
{
  return sub_1C22BCA40((uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (void (*)(void))sub_1C228480C, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
}

void *sub_1C22BC154()
{
  return sub_1C22BC1AC(MEMORY[0x1E4F66840], (void (*)(void))sub_1C2283978);
}

void *sub_1C22BC180()
{
  return sub_1C22BC1AC(MEMORY[0x1E4F27C88], (void (*)(void))sub_1C2285C24);
}

void *sub_1C22BC1AC(uint64_t (*a1)(void), void (*a2)(void))
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - v7;
  a2(0);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_1C2550340();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    uint64_t *v4 = v11;
    return result;
  }
  id result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  int64_t v26 = v4;
  long long v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    id result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1C22BC460()
{
  return sub_1C22BC654((unint64_t *)&qword_1EA2DF690, (unint64_t *)&qword_1EA2E1530, 0x1E4F67708, &qword_1EA2DF698);
}

void *sub_1C22BC484()
{
  uint64_t v1 = v0;
  sub_1C2285004(0, &qword_1EA2DF6F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550340();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C22BC630()
{
  return sub_1C22BC654(qword_1EBB6E608, &qword_1EBB6FF78, 0x1E4F2B448, (unint64_t *)&qword_1EBB6FF80);
}

id sub_1C22BC654(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  sub_1C22C051C(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1C2550340();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v5 = v8;
    return result;
  }
  id result = (id)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v10 + 8 * v13);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 8 * v19;
    unint64_t v21 = *(void **)(*(void *)(v6 + 48) + v20);
    *(void *)(*(void *)(v8 + 48) + v20) = v21;
    id result = v21;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v17) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C22BC80C()
{
  return sub_1C22BC654((unint64_t *)&qword_1EA2DF9A8, &qword_1EA2DF9B0, 0x1E4F2AD10, &qword_1EA2DF9B8);
}

void *sub_1C22BC830()
{
  uint64_t v1 = v0;
  sub_1C2285868();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550340();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    id result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C22BC9D8()
{
  return sub_1C22BC654((unint64_t *)&qword_1EBB6EFE0, &qword_1EBB6EF58, 0x1E4F2B3D0, (unint64_t *)&qword_1EBB6EFD8);
}

void *sub_1C22BC9FC()
{
  return sub_1C22BCA40((uint64_t (*)(void))type metadata accessor for BrowseCategory, (void (*)(void))sub_1C228576C, (uint64_t (*)(void))type metadata accessor for BrowseCategory, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
}

void *sub_1C22BCA40(uint64_t (*a1)(void), void (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v8 = v4;
  uint64_t v9 = a1(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v12 = (char *)&v30 - v11;
  a2(0);
  uint64_t v13 = *v4;
  uint64_t v14 = sub_1C2550340();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    *uint64_t v8 = v15;
    return result;
  }
  id result = (void *)(v14 + 56);
  unint64_t v17 = (unint64_t)((1 << *(unsigned char *)(v15 + 32)) + 63) >> 6;
  uint64_t v30 = v8;
  uint64_t v31 = (const void *)(v13 + 56);
  if (v15 != v13 || (unint64_t)result >= v13 + 56 + 8 * v17) {
    id result = memmove(result, v31, 8 * v17);
  }
  int64_t v19 = 0;
  *(void *)(v15 + 16) = *(void *)(v13 + 16);
  uint64_t v20 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & *(void *)(v13 + 56);
  int64_t v23 = (unint64_t)(v20 + 63) >> 6;
  while (1)
  {
    if (v22)
    {
      unint64_t v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v25 = v24 | (v19 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v27 >= v23) {
      goto LABEL_28;
    }
    unint64_t v28 = *((void *)v31 + v27);
    ++v19;
    if (!v28)
    {
      int64_t v19 = v27 + 1;
      if (v27 + 1 >= v23) {
        goto LABEL_28;
      }
      unint64_t v28 = *((void *)v31 + v19);
      if (!v28)
      {
        int64_t v19 = v27 + 2;
        if (v27 + 2 >= v23) {
          goto LABEL_28;
        }
        unint64_t v28 = *((void *)v31 + v19);
        if (!v28) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v19 << 6);
LABEL_12:
    unint64_t v26 = *(void *)(v10 + 72) * v25;
    sub_1C22C05A8(*(void *)(v13 + 48) + v26, (uint64_t)v12, a3);
    id result = (void *)sub_1C22C0610((uint64_t)v12, *(void *)(v15 + 48) + v26, a4);
  }
  int64_t v29 = v27 + 3;
  if (v29 >= v23)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v8 = v30;
    goto LABEL_30;
  }
  unint64_t v28 = *((void *)v31 + v29);
  if (v28)
  {
    int64_t v19 = v29;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v19 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v19 >= v23) {
      goto LABEL_28;
    }
    unint64_t v28 = *((void *)v31 + v19);
    ++v29;
    if (v28) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1C22BCCBC()
{
  return sub_1C22BC654((unint64_t *)&qword_1EA2DF960, (unint64_t *)&qword_1EBB70030, 0x1E4F28ED0, (unint64_t *)&qword_1EBB6F990);
}

void *sub_1C22BCCE0()
{
  return sub_1C22BCA40((uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData, (void (*)(void))sub_1C2285670, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
}

void *sub_1C22BCD24()
{
  uint64_t v1 = v0;
  sub_1C2285004(0, &qword_1EA2DF900);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550340();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C22BCEEC()
{
  uint64_t v1 = v0;
  sub_1C2284E0C(0, &qword_1EA2DF8E8, (void (*)(void))sub_1C2206AA8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550340();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C22BD0A0()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1C25502A0();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_1C2369988(v3, v2);
  uint64_t v15 = v4;
  swift_retain();
  uint64_t v5 = sub_1C254FF60();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
    id v8 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
    char v9 = sub_1C254FF70();

    if (v9)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_1C22BD71C(v7);
      if (sub_1C254FF70())
      {
        *uint64_t v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v10;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        id v11 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
        char v12 = sub_1C254FF70();

        if (v12) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1C22BD23C(unint64_t result)
{
  unint64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1C2550210();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v39 = v4;
      uint64_t v40 = v3;
      unint64_t v37 = (v8 + 1) & v7;
      uint64_t v38 = v7;
      do
      {
        unint64_t v41 = v6;
        int64_t v42 = v2;
        char v9 = (void *)(*(void *)(v3 + 48) + 72 * v6);
        uint64_t v10 = (void *)v9[1];
        uint64_t v11 = v9[3];
        unint64_t v12 = v9[6];
        unint64_t v14 = v9[7];
        uint64_t v13 = (void *)v9[8];
        sub_1C25509C0();
        sub_1C25509D0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v15 = v13;
        id v16 = v10;
        sub_1C254FF80();

        sub_1C25509E0();
        if (v11)
        {
          swift_bridgeObjectRetain();
          sub_1C254F570();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRetain();
        sub_1C254F570();
        swift_bridgeObjectRelease();
        if (v12 >> 62)
        {
          swift_bridgeObjectRetain_n();
          sub_1C2550620();
          swift_bridgeObjectRelease();
          sub_1C25509D0();
          swift_bridgeObjectRetain();
          uint64_t v17 = sub_1C2550620();
          uint64_t result = swift_bridgeObjectRelease();
          if (!v17) {
            goto LABEL_17;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t result = sub_1C25509D0();
          uint64_t v17 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v17) {
            goto LABEL_17;
          }
        }
        if (v17 < 1)
        {
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if ((v12 & 0xC000000000000001) != 0)
        {
          for (uint64_t i = 0; i != v17; ++i)
          {
            MEMORY[0x1C87588E0](i, v12);
            sub_1C254FF80();
            swift_unknownObjectRelease();
          }
        }
        else
        {
          uint64_t v19 = 0;
          do
          {
            int64_t v20 = *(void **)(v12 + 8 * v19++ + 32);
            id v21 = v20;
            sub_1C254FF80();
          }
          while (v17 != v19);
        }
LABEL_17:
        swift_bridgeObjectRelease();
        if (v14 >> 62)
        {
          swift_bridgeObjectRetain_n();
          sub_1C2550620();
          swift_bridgeObjectRelease();
          sub_1C25509D0();
          swift_bridgeObjectRetain();
          uint64_t v22 = sub_1C2550620();
          uint64_t result = swift_bridgeObjectRelease();
          if (!v22) {
            goto LABEL_26;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
          uint64_t result = sub_1C25509D0();
          uint64_t v22 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v22) {
            goto LABEL_26;
          }
        }
        if (v22 < 1) {
          goto LABEL_43;
        }
        if ((v14 & 0xC000000000000001) != 0)
        {
          for (uint64_t j = 0; j != v22; ++j)
          {
            MEMORY[0x1C87588E0](j, v14);
            sub_1C254FF80();
            swift_unknownObjectRelease();
          }
        }
        else
        {
          uint64_t v24 = 0;
          do
          {
            unint64_t v25 = *(void **)(v14 + 8 * v24++ + 32);
            id v26 = v25;
            sub_1C254FF80();
          }
          while (v22 != v24);
        }
LABEL_26:
        swift_bridgeObjectRelease();
        id v27 = v15;
        sub_1C254FF80();

        uint64_t v28 = sub_1C2550A10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        unint64_t v29 = v28 & v38;
        unint64_t v2 = v42;
        uint64_t v4 = v39;
        if (v42 >= (uint64_t)v37)
        {
          uint64_t v3 = v40;
          unint64_t v30 = v41;
          if (v29 < v37) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v3 = v40;
          unint64_t v30 = v41;
          if (v29 >= v37) {
            goto LABEL_31;
          }
        }
        if (v42 >= (uint64_t)v29)
        {
LABEL_31:
          uint64_t v31 = *(void *)(v3 + 48);
          uint64_t v32 = (char *)(v31 + 72 * v42);
          uint64_t v33 = (char *)(v31 + 72 * v30);
          if (v42 != v30 || (unint64_t v2 = v30, v32 >= v33 + 72))
          {
            memmove(v32, v33, 0x48uLL);
            unint64_t v2 = v30;
          }
        }
LABEL_5:
        unint64_t v6 = (v30 + 1) & v38;
      }
      while (((*(void *)(v39 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v34 = *(void *)(v3 + 16);
  BOOL v35 = __OFSUB__(v34, 1);
  uint64_t v36 = v34 - 1;
  if (v35) {
    goto LABEL_44;
  }
  *(void *)(v3 + 16) = v36;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_1C22BD71C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1C2550210();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        uint64_t v11 = sub_1C254FF60();

        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(v3 + 48);
            id v16 = (void *)(v15 + 8 * v2);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
            {
              *id v16 = *v17;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1C22BD8C0(int64_t a1)
{
  uint64_t v3 = sub_1C254E220();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = sub_1C2550210();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      unint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      id v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_1C22C0678(&qword_1EA2DF688, MEMORY[0x1E4F66840]);
        uint64_t v21 = sub_1C254F370();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

unint64_t sub_1C22BDBDC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = MEMORY[0x1E4FBC870];
LABEL_6:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1C2284E0C(0, (unint64_t *)&qword_1EA2DF888, (void (*)(void))sub_1C220732C);
  unint64_t result = sub_1C2550370();
  unint64_t v9 = result;
  unint64_t v37 = a1;
  uint64_t v38 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  unint64_t v40 = result;
  unint64_t v41 = result + 56;
  uint64_t v39 = v4;
  while (1)
  {
    if (v10)
    {
      uint64_t v42 = (v10 - 1) & v10;
      uint64_t v43 = v11;
      unint64_t v12 = __clz(__rbit64(v10)) | (v11 << 6);
      goto LABEL_26;
    }
    uint64_t v13 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_57;
    }
    if (v13 >= v38) {
      goto LABEL_6;
    }
    unint64_t v14 = v37[v13];
    uint64_t v15 = v11 + 1;
    if (!v14)
    {
      uint64_t v15 = v11 + 2;
      if (v11 + 2 >= v38) {
        goto LABEL_6;
      }
      unint64_t v14 = v37[v15];
      if (!v14)
      {
        uint64_t v15 = v11 + 3;
        if (v11 + 3 >= v38) {
          goto LABEL_6;
        }
        unint64_t v14 = v37[v15];
        if (!v14) {
          break;
        }
      }
    }
LABEL_25:
    uint64_t v42 = (v14 - 1) & v14;
    uint64_t v43 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_26:
    uint64_t v17 = *(void *)(v4 + 48) + 72 * v12;
    char v18 = *(unsigned char *)v17;
    uint64_t v19 = *(void **)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 24);
    uint64_t v46 = *(void *)(v17 + 32);
    long long v47 = *(_OWORD *)(v17 + 56);
    long long v48 = *(_OWORD *)(v17 + 40);
    sub_1C25509C0();
    sub_1C25509D0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v44 = *((id *)&v47 + 1);
    id v22 = v19;
    sub_1C254FF80();

    if (v21)
    {
      sub_1C25509E0();
      swift_bridgeObjectRetain();
      uint64_t v23 = v20;
      sub_1C254F570();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = v20;
      sub_1C25509E0();
    }
    char v45 = v18;
    swift_bridgeObjectRetain();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    if (*((void *)&v48 + 1) >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1C2550620();
      swift_bridgeObjectRelease();
      sub_1C25509D0();
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1C2550620();
      unint64_t result = swift_bridgeObjectRelease();
      if (!v24) {
        goto LABEL_38;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t result = sub_1C25509D0();
      uint64_t v24 = *(void *)((*((void *)&v48 + 1) & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v24) {
        goto LABEL_38;
      }
    }
    if (v24 < 1) {
      goto LABEL_55;
    }
    if ((*((void *)&v48 + 1) & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v24; ++i)
      {
        MEMORY[0x1C87588E0](i, *((void *)&v48 + 1));
        sub_1C254FF80();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v26 = 0;
      do
      {
        uint64_t v27 = *(void **)(*((void *)&v48 + 1) + 8 * v26++ + 32);
        id v28 = v27;
        sub_1C254FF80();
      }
      while (v24 != v26);
    }
LABEL_38:
    swift_bridgeObjectRelease();
    if ((unint64_t)v47 >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1C2550620();
      swift_bridgeObjectRelease();
      sub_1C25509D0();
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1C2550620();
      unint64_t result = swift_bridgeObjectRelease();
      if (!v29) {
        goto LABEL_47;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t result = sub_1C25509D0();
      uint64_t v29 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v29) {
        goto LABEL_47;
      }
    }
    if (v29 < 1) {
      goto LABEL_56;
    }
    if ((v47 & 0xC000000000000001) != 0)
    {
      for (uint64_t j = 0; j != v29; ++j)
      {
        MEMORY[0x1C87588E0](j, v47);
        sub_1C254FF80();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v31 = 0;
      do
      {
        uint64_t v32 = *(void **)(v47 + 8 * v31++ + 32);
        id v33 = v32;
        sub_1C254FF80();
      }
      while (v29 != v31);
    }
LABEL_47:
    swift_bridgeObjectRelease();
    id v34 = v44;
    sub_1C254FF80();

    sub_1C2550A10();
    unint64_t v9 = v40;
    unint64_t result = sub_1C2550230();
    *(void *)(v41 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v35 = *(void *)(v40 + 48) + 72 * result;
    *(unsigned char *)uint64_t v35 = v45;
    *(void *)(v35 + 8) = v22;
    *(void *)(v35 + 16) = v23;
    *(void *)(v35 + 24) = v21;
    *(void *)(v35 + 32) = v46;
    *(_OWORD *)(v35 + 40) = v48;
    *(_OWORD *)(v35 + 56) = v47;
    ++*(void *)(v40 + 16);
    if (__OFSUB__(v5--, 1))
    {
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    uint64_t v4 = v39;
    unint64_t v10 = v42;
    uint64_t v11 = v43;
    if (!v5) {
      goto LABEL_6;
    }
  }
  uint64_t v16 = v11 + 4;
  if (v11 + 4 >= v38) {
    goto LABEL_6;
  }
  unint64_t v14 = v37[v16];
  if (v14)
  {
    uint64_t v15 = v11 + 4;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v38) {
      goto LABEL_6;
    }
    unint64_t v14 = v37[v15];
    ++v16;
    if (v14) {
      goto LABEL_25;
    }
  }
LABEL_58:
  __break(1u);
  return result;
}

uint64_t sub_1C22BE148(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1C22C051C(0, qword_1EBB6E608, &qword_1EBB6FF78, 0x1E4F2B448, (unint64_t *)&qword_1EBB6FF80);
  uint64_t result = sub_1C2550370();
  uint64_t v9 = result;
  id v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    id v18 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_1C254FF60();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1C22BE3C4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v34 = a1;
  uint64_t v7 = sub_1C254E220();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_1C2283978();
  uint64_t result = sub_1C2550370();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_1C22C0678(&qword_1EA2DF688, MEMORY[0x1E4F66840]);
    uint64_t result = sub_1C254F370();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C22BE74C(uint64_t a1)
{
  sub_1C22BB2A8(0, &qword_1EA2E0098, MEMORY[0x1E4F66840], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v25 - v4;
  uint64_t v6 = sub_1C254E220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v25 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v25 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v28 = v7 + 16;
  int64_t v26 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v27 = v7 + 32;
  uint64_t v18 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v21 = v20 | (v19 << 6);
      goto LABEL_6;
    }
    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v26) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v25 + 8 * v22);
    ++v19;
    if (!v23)
    {
      int64_t v19 = v22 + 1;
      if (v22 + 1 >= v26) {
        return swift_release();
      }
      unint64_t v23 = *(void *)(v25 + 8 * v19);
      if (!v23)
      {
        int64_t v19 = v22 + 2;
        if (v22 + 2 >= v26) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v25 + 8 * v19);
        if (!v23)
        {
          int64_t v19 = v22 + 3;
          if (v22 + 3 >= v26) {
            return swift_release();
          }
          unint64_t v23 = *(void *)(v25 + 8 * v19);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v13, *(void *)(v18 + 48) + *(void *)(v7 + 72) * v21, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v13, v6);
    sub_1C22BBBCC((uint64_t)v10, (uint64_t)v5);
    sub_1C22C0480((uint64_t)v5, &qword_1EA2E0098, MEMORY[0x1E4F66840]);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v26) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v25 + 8 * v24);
  if (v23)
  {
    int64_t v19 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v26) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v25 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C22BEA94(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  sub_1C22BB2A8(0, &qword_1EA2E0098, MEMORY[0x1E4F66840], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v49 - v5;
  uint64_t v7 = sub_1C254E220();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (char *)&v49 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v60 = a1;
  uint64_t v61 = a1 + 56;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v55 = v6;
  uint64_t v62 = v14;
  uint64_t v63 = 0;
  unint64_t v64 = v18;
  uint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  unint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v57 = v8 + 16;
  uint64_t v58 = (char *)(a2 + 56);
  int64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v56 = v8;
  uint64_t v52 = a2;
  uint64_t v50 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v55;
  v25(v55, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v54)(v26, v27, 1, v7);
    uint64_t v60 = a1;
    uint64_t v61 = v15;
    uint64_t v62 = v14;
    uint64_t v63 = v23;
    unint64_t v64 = v21;
    if ((*v53)(v26, 1, v7) == 1)
    {
      sub_1C21ABD08();
      sub_1C22C0480(v26, &qword_1EA2E0098, MEMORY[0x1E4F66840]);
      return v52;
    }
    (*v51)(v59, v26, v7);
    uint64_t v31 = v52;
    sub_1C22C0678(&qword_1EA2DF688, MEMORY[0x1E4F66840]);
    uint64_t v32 = sub_1C254F370();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    unint64_t v40 = *v19;
    uint64_t v8 = v56;
LABEL_35:
    v40(v59, v7);
    int64_t v20 = v63;
    unint64_t v18 = v64;
    a1 = v60;
    uint64_t v15 = v61;
    uint64_t v14 = v62;
    uint64_t v50 = v63;
    if (v64) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v50 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v55;
  }
  uint64_t v50 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v56 + 72);
  uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
  while (1)
  {
    v38(v11, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_1C22C0678(&qword_1EA2DFE28, MEMORY[0x1E4F66840]);
    char v39 = sub_1C254F420();
    unint64_t v40 = *v19;
    (*v19)(v11, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v56;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v59, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v58, v44);
    uint64_t v45 = sub_1C22BF194((unint64_t *)((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v60);
    swift_release();
    sub_1C21ABD08();
    return v45;
  }
  else
  {
    long long v47 = (void *)swift_slowAlloc();
    memcpy(v47, v58, v44);
    uint64_t v48 = sub_1C22BF194((unint64_t *)v47, v43, v35, v34, &v60);
    swift_release();
    sub_1C21ABD08();
    MEMORY[0x1C875A0B0](v47, -1, -1);
    return v48;
  }
}

uint64_t sub_1C22BF194(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v52 = a2;
  sub_1C22BB2A8(0, &qword_1EA2E0098, MEMORY[0x1E4F66840], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v52 - v10;
  uint64_t v12 = sub_1C254E220();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v13);
  uint64_t v65 = (char *)&v52 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v54 = a1;
  uint64_t v55 = v11;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v63 = v21 + 16;
  uint64_t v64 = a3;
  uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v56 = a5;
  uint64_t v57 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v62 = a3 + 56;
  unint64_t v24 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v60 = v21;
  while (2)
  {
    uint64_t v53 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v29 = a5[2];
        int64_t v28 = a5[3];
        unint64_t v30 = a5[4];
        if (v30)
        {
          uint64_t v61 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v28 << 6);
LABEL_7:
          unint64_t v32 = *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31;
          uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
          uint64_t v34 = v26;
          v33(v11, v32, v12);
          uint64_t v35 = 0;
          goto LABEL_8;
        }
        int64_t v44 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        int64_t v45 = (unint64_t)(v29 + 64) >> 6;
        if (v44 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v44);
        if (v46) {
          goto LABEL_17;
        }
        int64_t v49 = v28 + 2;
        if (v28 + 2 >= v45) {
          goto LABEL_35;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v49);
        if (v46) {
          goto LABEL_23;
        }
        if (v28 + 3 >= v45) {
          goto LABEL_36;
        }
        unint64_t v46 = *(void *)(v27 + 8 * (v28 + 3));
        if (v46)
        {
          int64_t v44 = v28 + 3;
          goto LABEL_17;
        }
        int64_t v49 = v28 + 4;
        if (v28 + 4 < v45)
        {
          unint64_t v46 = *(void *)(v27 + 8 * v49);
          if (v46)
          {
LABEL_23:
            int64_t v44 = v49;
LABEL_17:
            uint64_t v61 = (v46 - 1) & v46;
            unint64_t v31 = __clz(__rbit64(v46)) + (v44 << 6);
            int64_t v28 = v44;
            goto LABEL_7;
          }
          int64_t v44 = v28 + 5;
          if (v28 + 5 < v45)
          {
            unint64_t v46 = *(void *)(v27 + 8 * v44);
            if (v46) {
              goto LABEL_17;
            }
            int64_t v44 = v45 - 1;
            int64_t v50 = v28 + 6;
            while (v45 != v50)
            {
              unint64_t v46 = *(void *)(v27 + 8 * v50++);
              if (v46)
              {
                int64_t v44 = v50 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            uint64_t v61 = 0;
            uint64_t v35 = 1;
            int64_t v28 = v44;
            uint64_t v34 = v26;
            goto LABEL_8;
          }
LABEL_36:
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          int64_t v28 = v49;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        uint64_t v61 = 0;
        uint64_t v35 = 1;
        v28 += 3;
        uint64_t v34 = v26;
LABEL_8:
        (*v59)(v11, v35, 1, v12);
        *a5 = v34;
        a5[1] = v27;
        a5[2] = v29;
        a5[3] = v28;
        a5[4] = v61;
        if ((*v58)(v11, 1, v12) == 1)
        {
          sub_1C22C0480((uint64_t)v11, &qword_1EA2E0098, MEMORY[0x1E4F66840]);
          uint64_t v51 = v64;
          swift_retain();
          return sub_1C22BE3C4(v54, v52, v53, v51);
        }
        (*v57)(v65, v11, v12);
        uint64_t v36 = v64;
        sub_1C22C0678(&qword_1EA2DF688, MEMORY[0x1E4F66840]);
        uint64_t v37 = sub_1C254F370();
        uint64_t v38 = -1 << *(unsigned char *)(v36 + 32);
        unint64_t v39 = v37 & ~v38;
        if ((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39)) {
          break;
        }
        uint64_t v25 = *v24;
        uint64_t v22 = v60;
LABEL_4:
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      }
      uint64_t v61 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v40 = ~v38;
      uint64_t v41 = *(void *)(v60 + 72);
      char v42 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
      while (1)
      {
        v42(v15, *(void *)(v64 + 48) + v41 * v39, v12);
        sub_1C22C0678(&qword_1EA2DFE28, MEMORY[0x1E4F66840]);
        char v43 = sub_1C254F420();
        uint64_t v25 = *v24;
        (*v24)(v15, v12);
        if (v43) {
          break;
        }
        unint64_t v39 = (v39 + 1) & v40;
        if (((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        {
          uint64_t v11 = v55;
          a5 = v56;
          uint64_t v22 = v60;
          goto LABEL_4;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      uint64_t v47 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v11 = v55;
      uint64_t v48 = *(unint64_t *)((char *)v54 + v47);
      *(unint64_t *)((char *)v54 + v47) = v48 & ~(1 << v39);
      a5 = v56;
      uint64_t v22 = v60;
    }
    while ((v48 & (1 << v39)) == 0);
    uint64_t v23 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v53 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

void sub_1C22BF754(uint64_t a1)
{
  sub_1C22BA628(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C22BF75C()
{
  if (!qword_1EA2E00A8)
  {
    sub_1C21FFE74(255, (unint64_t *)&qword_1EBB70060);
    unint64_t v0 = sub_1C254F800();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E00A8);
    }
  }
}

uint64_t sub_1C22BF7DC(uint64_t a1, void *a2)
{
  sub_1C22BF75C();
  uint64_t v6 = v2
     + ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80));
  return sub_1C22BA810(a1, a2, v6);
}

uint64_t sub_1C22BF888(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v18 = a2;
  uint64_t v5 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1C22747C4(0, v9, 0);
    uint64_t v10 = v19;
    unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = *(void *)(v6 + 72);
    while (1)
    {
      sub_1C22B6BB8(v12, v18, (uint64_t)v8);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      uint64_t v19 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C22747C4(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v19;
      }
      *(void *)(v10 + 16) = v15 + 1;
      sub_1C22C0610((uint64_t)v8, v10 + v11 + v15 * v13, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      v12 += v13;
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
  }
  return v10;
}

void sub_1C22BFA24(uint64_t a1)
{
  sub_1C22B9F74(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_1F1D92950, (uint64_t)sub_1C22BFA74, (uint64_t)&block_descriptor_28_0, (SEL *)&selRef_addSharingAuthorizations_completion_);
}

void sub_1C22BFA78()
{
  if (!qword_1EA2DE540)
  {
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE540);
    }
  }
}

void sub_1C22BFAE4()
{
  if (!qword_1EA2DF000)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, &qword_1EA2DF000);
    }
  }
}

void sub_1C22BFB50(uint64_t a1)
{
  sub_1C22B9F74(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_1F1D929A0, (uint64_t)sub_1C22BFA74, (uint64_t)&block_descriptor_36, (SEL *)&selRef_removeSharingAuthorizations_completion_);
}

uint64_t objectdestroy_13Tm()
{
  sub_1C22BF75C();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C22BFC3C(char a1, void *a2)
{
  sub_1C22BF75C();
  return sub_1C22BA174(a1, a2, v2+ ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80)));
}

uint64_t sub_1C22BFCDC()
{
  return objectdestroy_5Tm_0(MEMORY[0x1E4FBC8F8], MEMORY[0x1E4FBC8D0], 48);
}

uint64_t objectdestroy_5Tm_0(void (*a1)(void), void (*a2)(void), uint64_t a3)
{
  a1(*(void *)(v3 + 16));
  a2(*(void *)(v3 + 32));
  return MEMORY[0x1F4186498](v3, a3, 7);
}

uint64_t sub_1C22BFD70(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C222399C;
  return sub_1C22B819C(a1, v4, v5, v7, v6);
}

uint64_t sub_1C22BFE30()
{
  return sub_1C22B584C();
}

void *sub_1C22BFE40(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = *(void *)(sub_1C254D9B0() - 8);
  uint64_t v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v7 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v9 = a2(v6);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1C226D1F4(0, v8[2] + 1, 1, v8);
    }
    unint64_t v11 = v8[2];
    unint64_t v10 = v8[3];
    if (v11 >= v10 >> 1) {
      uint64_t v8 = sub_1C226D1F4((void *)(v10 > 1), v11 + 1, 1, v8);
    }
    v8[2] = v11 + 1;
    v8[v11 + 4] = v9;
    v6 += v7;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C22BFFAC(uint64_t a1)
{
  sub_1C22BFFD8(a1, *(unint64_t **)(v1 + 16), *(uint64_t **)(v1 + 24));
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C22BFFD8(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  char v42 = a2;
  sub_1C22BB2A8(0, (unint64_t *)&qword_1EA2DF3D0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v39 - v5;
  uint64_t v7 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v44 = (uint64_t)&v39 - v12;
  uint64_t v13 = sub_1C254D980();
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v39 = v13;
    uint64_t v40 = v6;
    uint64_t v15 = v13 + 32;
    uint64_t v16 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    uint64_t v41 = v8;
    char v43 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    do
    {
      sub_1C21F4424(v15, (uint64_t)v48);
      sub_1C21F4424((uint64_t)v48, (uint64_t)v45);
      sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
      char v17 = swift_dynamicCast();
      uint64_t v18 = *v16;
      if (v17)
      {
        v18(v6, 0, 1, v7);
        uint64_t v19 = v44;
        sub_1C22C0610((uint64_t)v6, v44, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C22C05A8(v19, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        uint64_t v20 = v42;
        unint64_t v21 = *v42;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v20 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v21 = sub_1C226C100(0, *(void *)(v21 + 16) + 1, 1, v21);
          unint64_t *v42 = v21;
        }
        unint64_t v24 = *(void *)(v21 + 16);
        unint64_t v23 = *(void *)(v21 + 24);
        if (v24 >= v23 >> 1)
        {
          unint64_t v21 = sub_1C226C100(v23 > 1, v24 + 1, 1, v21);
          unint64_t *v42 = v21;
        }
        *(void *)(v21 + 16) = v24 + 1;
        sub_1C22C0610((uint64_t)v11, v21+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v24, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C2266828(v44);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      }
      else
      {
        v18(v6, 1, 1, v7);
        sub_1C22C0480((uint64_t)v6, (unint64_t *)&qword_1EA2DF3D0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C21F4424((uint64_t)v48, (uint64_t)v45);
        uint64_t v25 = (void *)*a3;
        char v26 = swift_isUniquelyReferenced_nonNull_native();
        *a3 = (uint64_t)v25;
        if ((v26 & 1) == 0)
        {
          uint64_t v25 = sub_1C226CD5C(0, v25[2] + 1, 1, v25);
          *a3 = (uint64_t)v25;
        }
        uint64_t v27 = v7;
        unint64_t v29 = v25[2];
        unint64_t v28 = v25[3];
        if (v29 >= v28 >> 1) {
          *a3 = (uint64_t)sub_1C226CD5C((void *)(v28 > 1), v29 + 1, 1, v25);
        }
        uint64_t v31 = v46;
        uint64_t v30 = v47;
        uint64_t v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v45, v46);
        MEMORY[0x1F4188790](v32);
        uint64_t v34 = a3;
        uint64_t v35 = (char *)&v39 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v36 + 16))(v35);
        uint64_t v37 = (uint64_t)v35;
        a3 = v34;
        sub_1C2507304(v29, v37, v34, v31, v30);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
        uint64_t v7 = v27;
        uint64_t v6 = v40;
        uint64_t v8 = v41;
      }
      v15 += 40;
      --v14;
      uint64_t v16 = v43;
    }
    while (v14);
  }
  swift_bridgeObjectRelease();
  return *v42;
}

uint64_t sub_1C22C0480(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C22BB2A8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C22C04F0(uint64_t a1)
{
  return a1;
}

void sub_1C22C051C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_1C21AB51C(255, a3);
    sub_1C21A818C(a5, a3);
    unint64_t v8 = sub_1C2550380();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C22C05A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C22C0610(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C22C0678(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Deferred.createAutoreleasingDeferredPublisher(createPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = (void *)swift_allocObject();
  v8[2] = a3;
  v8[3] = a4;
  void v8[4] = a1;
  v8[5] = a2;
  swift_retain();
  return sub_1C254EB10();
}

uint64_t sub_1C22C0784()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C22C07BC()
{
  uint64_t v1 = *(void (**)(void))(v0 + 32);
  uint64_t v2 = (void *)MEMORY[0x1C87594F0]();
  v1();
}

uint64_t type metadata accessor for RecordSourceDataSource()
{
  uint64_t result = qword_1EA2E0108;
  if (!qword_1EA2E0108) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C22C085C()
{
  return swift_initClassMetadata2();
}

void sub_1C22C08BC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254F230();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *uint64_t v7 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  char v8 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    return;
  }
  uint64_t v9 = qword_1EA2E00F0;
  uint64_t v10 = *(void **)(v2 + qword_1EA2E00F0);
  if (!v10)
  {
    if (!a1) {
      return;
    }
    goto LABEL_8;
  }
  if (!a1)
  {
LABEL_6:
    uint64_t v14 = *(void *)(v2 + qword_1EA2E00E0);
    uint64_t v15 = *(void **)(v2 + qword_1EA2E00F8);
    uint64_t v16 = type metadata accessor for RecordSourceItem();
    char v17 = (void *)swift_allocObject();
    v17[2] = v14;
    v17[3] = v10;
    v17[4] = 0;
    v17[5] = v15;
    uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1C22C2204(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
    sub_1C254D9B0();
    uint64_t v19 = swift_allocObject();
    long long v24 = xmmword_1C255CD90;
    *(_OWORD *)(v19 + 16) = xmmword_1C255CD90;
    sub_1C22C2204(0, &qword_1EA2DF5D0, (uint64_t (*)(uint64_t))sub_1C22270A8, v18);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = v24;
    *(void *)(v20 + 56) = v16;
    *(void *)(v20 + 64) = sub_1C22C2164((unint64_t *)&unk_1EA2E0150, v21, (void (*)(uint64_t))type metadata accessor for RecordSourceItem);
    *(void *)(v20 + 32) = v17;
    swift_retain();
    id v22 = v10;
    swift_unknownObjectRetain();
    id v23 = v15;
    sub_1C254D970();
    sub_1C254DA10();

    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  sub_1C21AB51C(0, &qword_1EA2E0138);
  id v11 = a1;
  id v12 = v10;
  char v13 = sub_1C254FF70();

  if ((v13 & 1) == 0)
  {
    uint64_t v10 = *(void **)(v2 + v9);
    if (v10) {
      goto LABEL_6;
    }
LABEL_8:
    sub_1C254DA10();
  }
}

uint64_t sub_1C22C0C38(void *a1, void *a2)
{
  *(void *)(v2 + qword_1EA2E00E0) = 0;
  *(void *)(v2 + qword_1EA2E00F0) = 0;
  *(void *)(v2 + qword_1EA2E0100) = 0;
  *(void *)(v2 + qword_1EA2E00E8) = a1;
  *(void *)(v2 + qword_1EA2E00F8) = a2;
  id v4 = a1;
  id v5 = a2;
  uint64_t v6 = sub_1C254DF10();
  uint64_t v7 = *(void **)(v6 + qword_1EA2E00F8);
  char v8 = *(void **)(v6 + qword_1EA2E00E8);
  v12[4] = sub_1C22C21AC;
  v12[5] = v6;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1C22C1540;
  v12[3] = &block_descriptor_27;
  uint64_t v9 = _Block_copy(v12);
  swift_retain_n();
  id v10 = v8;
  swift_release();
  objc_msgSend(v7, sel_fetchAccountOwnerForSource_completion_, v10, v9);
  _Block_release(v9);
  swift_release();

  return v6;
}

uint64_t sub_1C22C0DBC()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DA90();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C22C0E90()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254F230();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(v0 + qword_1EA2E00E0);
  uint64_t v7 = *(void **)(v1 + qword_1EA2E0100);
  char v8 = *(void **)(v1 + qword_1EA2E00F8);
  uint64_t v9 = type metadata accessor for RecordSourceItem();
  id v10 = (void *)swift_allocObject();
  void v10[2] = v6;
  v10[3] = 0;
  v10[4] = v7;
  v10[5] = v8;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  swift_unknownObjectRetain();
  id v11 = v7;
  id v12 = v8;
  *id v5 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  LOBYTE(v6) = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    sub_1C22C2204(0, &qword_1EA2DF5D0, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBBE00]);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C255CD90;
    *(void *)(v14 + 56) = v9;
    *(void *)(v14 + 64) = sub_1C22C2164((unint64_t *)&unk_1EA2E0150, v15, (void (*)(uint64_t))type metadata accessor for RecordSourceItem);
    *(void *)(v14 + 32) = v10;
    swift_retain();
    sub_1C254DA30();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C22C10DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254F1C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C254F200();
  uint64_t v8 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v11 = (void *)sub_1C254FC70();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_1C22C21FC;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_21;
  char v13 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C22C2164((unint64_t *)&qword_1EBB6FF10, 255, MEMORY[0x1E4FBCB00]);
  sub_1C22C2204(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v10, v7, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
}

void sub_1C22C13D8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (char *)sub_1C2550620();
    if (!v4) {
      goto LABEL_9;
    }
LABEL_3:
    uint64_t v5 = v4 - 1;
    if (__OFSUB__(v4, 1))
    {
      __break(1u);
    }
    else if ((a2 & 0xC000000000000001) == 0)
    {
      if (((unint64_t)v5 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v5 < *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v6 = (char *)*(id *)(a2 + 8 * (void)v5 + 32);
LABEL_8:
        uint64_t v4 = v6;
        goto LABEL_9;
      }
      __break(1u);
      return;
    }
    uint64_t v6 = (char *)MEMORY[0x1C87588E0](v5, a2);
    goto LABEL_8;
  }
  uint64_t v4 = *(char **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v4) {
    goto LABEL_3;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + qword_1EA2E00F0);
  *(void *)(a1 + qword_1EA2E00F0) = v4;
  uint64_t v8 = v4;
  sub_1C22C08BC(v7);
}

void sub_1C22C14DC()
{
}

void sub_1C22C14F8()
{
}

void sub_1C22C1514()
{
}

uint64_t sub_1C22C1540(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1C21AB51C(0, &qword_1EA2E0138);
  uint64_t v2 = sub_1C254F710();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1C22C15C4()
{
  swift_unknownObjectRelease();

  uint64_t v1 = *(void **)(v0 + qword_1EA2E0100);
}

uint64_t sub_1C22C1634()
{
  uint64_t v0 = sub_1C254DF40();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C22C16C4()
{
  return type metadata accessor for RecordSourceDataSource();
}

uint64_t sub_1C22C16CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C254E890();
  MEMORY[0x1F4188790](v2 - 8);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C254E810();
  uint64_t v4 = sub_1C254D2A0();
  swift_allocObject();
  uint64_t v5 = sub_1C254D280();
  a1[3] = v4;
  uint64_t result = sub_1C22C2164((unint64_t *)&qword_1EBB6E7D8, 255, MEMORY[0x1E4F66208]);
  a1[4] = result;
  *a1 = v5;
  return result;
}

uint64_t sub_1C22C1884@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C22C16CC(a1);
}

uint64_t sub_1C22C189C()
{
  uint64_t v1 = sub_1C2550AA0();
  sub_1C254F5A0();
  sub_1C22C2204(0, &qword_1EA2E0160, (uint64_t (*)(uint64_t))sub_1C22C2268, MEMORY[0x1E4FBB718]);
  swift_unknownObjectRetain();
  sub_1C254F4F0();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C22C1978()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RecordSourceItem()
{
  return self;
}

uint64_t sub_1C22C19EC()
{
  type metadata accessor for RecordSourceCell();
  sub_1C22C2164(&qword_1EA2E0130, v0, (void (*)(uint64_t))type metadata accessor for RecordSourceCell);
  return sub_1C254D330();
}

uint64_t sub_1C22C1A50()
{
  return sub_1C22C189C();
}

id sub_1C22C1A74()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell____lazy_storage___brandView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell____lazy_storage___brandView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell____lazy_storage___brandView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordBrandView), sel_initWithFrame_, *MEMORY[0x1E4F1DB20], *(double *)(MEMORY[0x1E4F1DB20] + 8), *(double *)(MEMORY[0x1E4F1DB20] + 16), *(double *)(MEMORY[0x1E4F1DB20] + 24));
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C22C1B2C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell_item;
  swift_beginAccess();
  sub_1C2227014(v1, (uint64_t)v16);
  if (v17)
  {
    sub_1C22270A8();
    type metadata accessor for RecordSourceItem();
    if (swift_dynamicCast())
    {
      uint64_t v2 = (void *)v15[3];
      if (v2)
      {
        id v3 = (void *)v15[5];
        id v4 = v2;
        id v5 = objc_msgSend(v3, sel_nameAndFormattedBirthDateForAccountOwner_, v4);
        id v6 = sub_1C22C1A74();
        id v7 = objc_msgSend(v6, sel_brandDetailLabel);

        objc_msgSend(v7, sel_setText_, v5);
      }
      uint64_t v8 = (void *)v15[4];
      if (v8)
      {
        uint64_t v9 = (void *)v15[5];
        id v10 = v8;
        id v11 = objc_msgSend(v9, sel_nameAndFormattedBirthDateForSignedClinicalDataSubject_, v10);
        id v12 = sub_1C22C1A74();
        id v13 = objc_msgSend(v12, sel_brandDetailLabel);

        objc_msgSend(v13, sel_setText_, v11);
      }
      id v14 = sub_1C22C1A74();
      objc_msgSend(v14, sel_setBrandable_dataProvider_, v15[2], v15[5]);
      swift_release();
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v16);
  }
}

id sub_1C22C1CE8(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell____lazy_storage___brandView] = 0;
  uint64_t v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell_item];
  id v10 = (objc_class *)type metadata accessor for RecordSourceCell();
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v21.receiver = v4;
  v21.super_class = v10;
  id v11 = objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  id v12 = objc_msgSend(v11, sel_contentView);
  id v13 = sub_1C22C1A74();
  objc_msgSend(v12, sel_addSubview_, v13);

  id v14 = sub_1C22C1A74();
  id v15 = objc_msgSend(v11, sel_contentView);
  objc_msgSend(v14, sel_hk_alignConstraintsWithView_insets_, v15, 16.0, 16.0, 16.0, 16.0);

  sub_1C2201F2C();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C255CDA0;
  *(void *)(v16 + 32) = sub_1C254F470();
  *(void *)(v16 + 40) = v17;
  *(void *)(v16 + 48) = 0xD000000000000010;
  *(void *)(v16 + 56) = 0x80000001C2560B00;
  uint64_t v18 = (void *)sub_1C254F700();
  id v19 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v11, sel_setAccessibilityIdentifier_, v19);
  swift_bridgeObjectRelease();

  return v11;
}

id sub_1C22C1F68()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecordSourceCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RecordSourceCell()
{
  return self;
}

uint64_t sub_1C22C200C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C22C2060(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI16RecordSourceCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C22C1B2C();
  return sub_1C2227100(a1);
}

void (*sub_1C22C20D0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C22C2130;
}

void sub_1C22C2130(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C22C1B2C();
  }
}

uint64_t sub_1C22C2164(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C22C21AC(uint64_t a1)
{
  return sub_1C22C10DC(a1, v1);
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t sub_1C22C21BC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C22C21FC()
{
  sub_1C22C13D8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1C22C2204(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C22C2268()
{
  unint64_t result = qword_1EA2E0168;
  if (!qword_1EA2E0168)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E0168);
  }
  return result;
}

id sub_1C22C22C8()
{
  uint64_t v1 = OBJC_IVAR___HRExpandedRangeValueView____lazy_storage___valueLabel;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR___HRExpandedRangeValueView____lazy_storage___valueLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HRExpandedRangeValueView____lazy_storage___valueLabel);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setNumberOfLines_, 3);
    objc_msgSend(v4, sel_setLineBreakMode_, 4);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1C22C2378@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR___HRExpandedRangeValueView_viewData;
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  unint64_t v8 = *(void **)(v3 + 32);
  uint64_t v9 = *(void **)(v3 + 40);
  id v10 = *(void **)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  uint64_t v12 = *(void *)(v3 + 64);
  uint64_t v13 = *(void *)(v3 + 72);
  uint64_t v14 = *(void *)(v3 + 80);
  uint64_t v15 = *(void *)(v3 + 88);
  char v16 = *(unsigned char *)(v3 + 100);
  int v17 = *(_DWORD *)(v3 + 96);
  *(void *)a2 = *(void *)v3;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = v11;
  *(void *)(a2 + 64) = v12;
  *(void *)(a2 + 72) = v13;
  *(void *)(a2 + 80) = v14;
  *(void *)(a2 + 88) = v15;
  *(unsigned char *)(a2 + 100) = v16;
  *(_DWORD *)(a2 + 96) = v17;
  return sub_1C22AC0E8(v4, v5, v6, v7, v8, v9, v10);
}

void sub_1C22C2418(uint64_t a1, void *a2)
{
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v16 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 16);
  objc_super v2 = *(void **)(a1 + 48);
  uint64_t v11 = *(void **)(a1 + 40);
  uint64_t v12 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 80);
  char v7 = *(unsigned char *)(a1 + 100);
  int v8 = *(_DWORD *)(a1 + 96);
  uint64_t v9 = *a2 + OBJC_IVAR___HRExpandedRangeValueView_viewData;
  uint64_t v10 = *(void *)(a1 + 88);
  swift_beginAccess();
  uint64_t v22 = *(void *)(v9 + 8);
  uint64_t v23 = *(void *)v9;
  uint64_t v20 = *(void *)(v9 + 24);
  uint64_t v21 = *(void *)(v9 + 16);
  uint64_t v18 = *(void **)(v9 + 40);
  id v19 = *(void **)(v9 + 32);
  int v17 = *(void **)(v9 + 48);
  *(void *)uint64_t v9 = v16;
  *(void *)(v9 + 8) = v15;
  *(void *)(v9 + 16) = v14;
  *(void *)(v9 + 24) = v13;
  *(void *)(v9 + 32) = v12;
  *(void *)(v9 + 40) = v11;
  *(void *)(v9 + 48) = v2;
  *(void *)(v9 + 56) = v4;
  *(void *)(v9 + 64) = v3;
  *(void *)(v9 + 72) = v5;
  *(void *)(v9 + 80) = v6;
  *(void *)(v9 + 88) = v10;
  *(_DWORD *)(v9 + 96) = v8;
  *(unsigned char *)(v9 + 100) = v7;
  sub_1C22AC0E8(v16, v15, v14, v13, v12, v11, v2);
  sub_1C22AC064(v23, v22, v21, v20, v19, v18, v17);
  sub_1C22C3080();
}

uint64_t sub_1C22C2594@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___HRExpandedRangeValueView_viewData;
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  int v8 = *(void **)(v3 + 32);
  uint64_t v9 = *(void **)(v3 + 40);
  uint64_t v10 = *(void **)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  uint64_t v12 = *(void *)(v3 + 64);
  uint64_t v13 = *(void *)(v3 + 72);
  uint64_t v14 = *(void *)(v3 + 80);
  uint64_t v15 = *(void *)(v3 + 88);
  char v16 = *(unsigned char *)(v3 + 100);
  int v17 = *(_DWORD *)(v3 + 96);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(unsigned char *)(a1 + 100) = v16;
  *(_DWORD *)(a1 + 96) = v17;
  return sub_1C22AC0E8(v4, v5, v6, v7, v8, v9, v10);
}

void sub_1C22C2630(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[4];
  long long v19 = *(_OWORD *)(a1 + 5);
  long long v20 = *((_OWORD *)a1 + 1);
  uint64_t v5 = a1[7];
  long long v18 = *((_OWORD *)a1 + 4);
  uint64_t v6 = a1[10];
  uint64_t v7 = a1[11];
  char v8 = *((unsigned char *)a1 + 100);
  int v9 = *((_DWORD *)a1 + 24);
  uint64_t v10 = v1 + OBJC_IVAR___HRExpandedRangeValueView_viewData;
  swift_beginAccess();
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v14 = *(void *)(v10 + 24);
  uint64_t v15 = *(void **)(v10 + 32);
  char v16 = *(void **)(v10 + 40);
  int v17 = *(void **)(v10 + 48);
  *(void *)uint64_t v10 = v2;
  *(void *)(v10 + 8) = v3;
  *(_OWORD *)(v10 + 16) = v20;
  *(void *)(v10 + 32) = v4;
  *(_OWORD *)(v10 + 40) = v19;
  *(void *)(v10 + 56) = v5;
  *(_OWORD *)(v10 + 64) = v18;
  *(void *)(v10 + 80) = v6;
  *(void *)(v10 + 88) = v7;
  *(_DWORD *)(v10 + 96) = v9;
  *(unsigned char *)(v10 + 100) = v8;
  sub_1C22AC064(v11, v12, v13, v14, v15, v16, v17);
  sub_1C22C3080();
}

void (*sub_1C22C272C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C22C278C;
}

void sub_1C22C278C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C22C3080();
  }
}

id ExpandedRangeValueView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void sub_1C22C284C(void *a1)
{
  if (a1)
  {
    id v2 = a1;
    id v3 = sub_1C22C22C8();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    id v4 = v2;
    uint64_t v5 = (void *)sub_1C254FE50();
    uint64_t v6 = (void *)sub_1C254FE50();
    id v7 = sub_1C21EFF3C(v5, v6);

    objc_msgSend(v3, sel_setAttributedText_, v7);
    id v8 = v4;
    sub_1C2424EA8(a1);
  }
  sub_1C22C2A88();
}

void sub_1C22C2A88()
{
  uint64_t v1 = v0;
  id v2 = self;
  uint64_t v3 = OBJC_IVAR___HRExpandedRangeValueView_activeConstraints;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  id v4 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  uint64_t v5 = *(void **)&v1[OBJC_IVAR___HRExpandedRangeValueView_referenceRangeView];
  LODWORD(v4) = objc_msgSend(v5, sel_isHidden);
  sub_1C21ACA3C();
  uint64_t v6 = swift_allocObject();
  if (v4)
  {
    *(_OWORD *)(v6 + 16) = xmmword_1C255DBA0;
    id v7 = sub_1C22C22C8();
    id v8 = objc_msgSend(v7, sel_leadingAnchor);

    id v9 = objc_msgSend(v1, sel_leadingAnchor);
    id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

    *(void *)(v6 + 32) = v10;
    id v11 = sub_1C22C22C8();
    id v12 = objc_msgSend(v11, sel_trailingAnchor);

    id v13 = objc_msgSend(v1, sel_trailingAnchor);
    id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

    *(void *)(v6 + 40) = v14;
    id v15 = sub_1C22C22C8();
    id v16 = objc_msgSend(v15, sel_topAnchor);

    id v17 = objc_msgSend(v1, sel_topAnchor);
    id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

    *(void *)(v6 + 48) = v18;
    id v19 = sub_1C22C22C8();
    id v20 = objc_msgSend(v19, sel_bottomAnchor);

    id v21 = objc_msgSend(v1, sel_bottomAnchor);
    id v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

    *(void *)(v6 + 56) = v22;
  }
  else
  {
    *(_OWORD *)(v6 + 16) = xmmword_1C255EBD0;
    id v23 = sub_1C22C22C8();
    id v24 = objc_msgSend(v23, sel_leadingAnchor);

    id v25 = objc_msgSend(v1, (SEL)&selRef_minusOrderedSet_ + 2);
    id v48 = v2;
    id v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

    *(void *)(v6 + 32) = v26;
    id v27 = sub_1C22C22C8();
    id v28 = objc_msgSend(v27, sel_trailingAnchor);

    id v29 = objc_msgSend(v1, (SEL)&selRef_titleWidthConstraint + 4);
    id v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v29);

    *(void *)(v6 + 40) = v30;
    id v31 = sub_1C22C22C8();
    id v32 = objc_msgSend(v31, sel_topAnchor);

    id v33 = objc_msgSend(v1, sel_topAnchor);
    id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v33);

    *(void *)(v6 + 48) = v34;
    id v35 = sub_1C22C22C8();
    id v36 = objc_msgSend(v35, sel_bottomAnchor);

    id v37 = objc_msgSend(v5, sel_topAnchor);
    id v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v37, -6.0);

    *(void *)(v6 + 56) = v38;
    id v39 = objc_msgSend(v5, sel_leadingAnchor);
    id v40 = objc_msgSend(v1, sel_leadingAnchor);
    id v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v40);

    *(void *)(v6 + 64) = v41;
    id v42 = objc_msgSend(v5, sel_trailingAnchor);
    id v43 = objc_msgSend(v1, sel_trailingAnchor);
    id v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

    *(void *)(v6 + 72) = v44;
    id v2 = v48;
    id v45 = objc_msgSend(v5, sel_bottomAnchor);
    id v46 = objc_msgSend(v1, sel_bottomAnchor);
    id v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v46);

    *(void *)(v6 + 80) = v47;
  }
  sub_1C254F730();
  *(void *)&v1[v3] = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v49 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v49);
}

void sub_1C22C3080()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_superview);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = &v0[OBJC_IVAR___HRExpandedRangeValueView_viewData];
    swift_beginAccess();
    uint64_t v5 = *((void *)v4 + 1);
    if (v5)
    {
      uint64_t v6 = (void *)*((void *)v4 + 6);
      id v7 = (void *)*((void *)v4 + 4);
      uint64_t v8 = *((void *)v4 + 3);
      uint64_t v25 = *((void *)v4 + 2);
      uint64_t v24 = *(void *)v4;
      id v9 = (void *)*((void *)v4 + 5);
      uint64_t v10 = 3;
      if ((*((_DWORD *)v4 + 24) & 0x1000000) != 0) {
        uint64_t v10 = 0;
      }
      uint64_t v22 = v10;
      id v23 = (void *)*((void *)v4 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v11 = v7;
      id v12 = v9;
      id v13 = v6;
      swift_bridgeObjectRetain();
      objc_msgSend(v3, sel_bounds);
      double Width = CGRectGetWidth(v26);
      sub_1C2424EA8(v6);
      id v15 = sub_1C234B94C(Width);
      id v16 = sub_1C22C22C8();
      objc_msgSend(v16, sel_setAttributedText_, v15);

      id v17 = sub_1C22C22C8();
      objc_msgSend(v17, sel_setNumberOfLines_, v22);

      sub_1C22C2A88();
      sub_1C22AC064(v24, v5, v25, v8, v7, v23, v6);
    }
    else
    {
      id v18 = *(char **)&v1[OBJC_IVAR___HRExpandedRangeValueView_referenceRangeView];
      objc_msgSend(v18, sel_setHidden_, 1);
      v18[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext] = 2;
      sub_1C242377C();
      v18[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state] = 3;
      sub_1C2423D40();
      id v19 = &v18[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier];
      *(void *)id v19 = 0;
      v19[8] = 1;
      id v20 = *(void **)&v18[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotConstraint];
      *(void *)&v18[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotConstraint] = 0;

      id v21 = sub_1C22C22C8();
      objc_msgSend(v21, sel_setAttributedText_, 0);

      sub_1C22C2A88();
    }
  }
}

id ExpandedRangeValueView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExpandedRangeValueView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *_s15HealthRecordsUI22ExpandedRangeValueViewC5frameACSo6CGRectV_tcfc_0()
{
  *(void *)&v0[OBJC_IVAR___HRExpandedRangeValueView____lazy_storage___valueLabel] = 0;
  uint64_t v1 = OBJC_IVAR___HRExpandedRangeValueView_referenceRangeView;
  char v10 = 2;
  id v2 = objc_allocWithZone((Class)type metadata accessor for RecordRangeView());
  uint64_t v3 = v0;
  *(void *)&v0[v1] = RecordRangeView.init(style:)(&v10);
  id v4 = &v3[OBJC_IVAR___HRExpandedRangeValueView_viewData];
  *(_OWORD *)id v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_OWORD *)v4 + 2) = 0u;
  *((_OWORD *)v4 + 3) = 0u;
  *((_OWORD *)v4 + 4) = 0u;
  *((_OWORD *)v4 + 5) = 0u;
  *(void *)(v4 + 93) = 0;
  *(void *)&v3[OBJC_IVAR___HRExpandedRangeValueView_activeConstraints] = MEMORY[0x1E4FBC860];

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for ExpandedRangeValueView();
  uint64_t v5 = (char *)objc_msgSendSuper2(&v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v6 = *(void **)&v5[OBJC_IVAR___HRExpandedRangeValueView_referenceRangeView];
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v5, sel_addSubview_, v6);
  id v7 = sub_1C22C22C8();
  objc_msgSend(v5, sel_addSubview_, v7);

  return v5;
}

uint64_t type metadata accessor for ExpandedRangeValueView()
{
  return self;
}

uint64_t method lookup function for ExpandedRangeValueView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ExpandedRangeValueView);
}

uint64_t dispatch thunk of ExpandedRangeValueView.viewData.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ExpandedRangeValueView.viewData.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ExpandedRangeValueView.viewData.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ExpandedRangeValueView.update(data:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

void sub_1C22C3654()
{
  *(void *)&v0[OBJC_IVAR___HRExpandedRangeValueView____lazy_storage___valueLabel] = 0;
  uint64_t v1 = OBJC_IVAR___HRExpandedRangeValueView_referenceRangeView;
  char v4 = 2;
  id v2 = objc_allocWithZone((Class)type metadata accessor for RecordRangeView());
  *(void *)&v0[v1] = RecordRangeView.init(style:)(&v4);
  uint64_t v3 = &v0[OBJC_IVAR___HRExpandedRangeValueView_viewData];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *(void *)(v3 + 93) = 0;
  *(void *)&v0[OBJC_IVAR___HRExpandedRangeValueView_activeConstraints] = MEMORY[0x1E4FBC860];

  sub_1C25505F0();
  __break(1u);
}

uint64_t type metadata accessor for ClinicalSharingTurnOnAllDataTypesDataSource()
{
  uint64_t result = qword_1EA2E01B8;
  if (!qword_1EA2E01B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C22C3778()
{
  return swift_initClassMetadata2();
}

void sub_1C22C37B8()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E0190 = v1;
  *(void *)algn_1EA2E0198 = v3;
}

void sub_1C22C3890()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E01A0 = v1;
  *(void *)algn_1EA2E01A8 = v3;
}

void sub_1C22C3968()
{
  qword_1EA2E01B0 = 0x4024000000000000;
}

uint64_t sub_1C22C3978()
{
  uint64_t v0 = sub_1C254CB40();
  uint64_t v16 = *(void *)(v0 - 8);
  uint64_t v17 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C22C4D28(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  uint64_t v4 = swift_allocObject();
  long long v15 = xmmword_1C255CD90;
  *(_OWORD *)(v4 + 16) = xmmword_1C255CD90;
  sub_1C22C4D28(0, &qword_1EA2DF5D0, (uint64_t (*)(uint64_t))sub_1C22270A8, v3);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = v15;
  if (qword_1EA2DD590 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EA2E0190;
  uint64_t v7 = *(void *)algn_1EA2E0198;
  uint64_t v8 = qword_1EA2DD598;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1EA2E01A0;
  uint64_t v10 = *(void *)algn_1EA2E01A8;
  uint64_t v11 = type metadata accessor for TurnOnAllDataTypesItem();
  id v12 = (void *)swift_allocObject();
  v12[2] = v6;
  v12[3] = v7;
  v12[4] = v9;
  v12[5] = v10;
  *(void *)(v5 + 56) = v11;
  *(void *)(v5 + 64) = sub_1C22C4CE0(&qword_1EA2E01D8, v13, (void (*)(uint64_t))type metadata accessor for TurnOnAllDataTypesItem);
  *(void *)(v5 + 32) = v12;
  swift_bridgeObjectRetain();
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v2, v17);
  sub_1C254D990();
  return sub_1C254DF10();
}

uint64_t sub_1C22C3C88()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v15[-v5];
  sub_1C254DAE0();
  if (qword_1EA2DD5A0 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1EA2E01B0;
  uint64_t v8 = (void (*)(unsigned char *, void))sub_1C254DB00();
  *(void *)(v9 + 8) = v7;
  v8(v15, 0);
  uint64_t v10 = (void (*)(unsigned char *, void))sub_1C254DB00();
  *(void *)(v11 + 24) = v7;
  v10(v15, 0);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v4, v6, v0);
  uint64_t v12 = sub_1C254DB40();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  v13(v4, v0);
  v13(v6, v0);
  return v12;
}

void sub_1C22C3E58()
{
}

void sub_1C22C3E74()
{
}

void sub_1C22C3E90()
{
}

uint64_t sub_1C22C3EBC()
{
  sub_1C254DF40();
  return swift_deallocClassInstance();
}

uint64_t sub_1C22C3EEC()
{
  return type metadata accessor for ClinicalSharingTurnOnAllDataTypesDataSource();
}

uint64_t sub_1C22C3EF4()
{
  type metadata accessor for TurnOnAllDataTypesCell();
  sub_1C22C4CE0(&qword_1EA2DE798, v0, (void (*)(uint64_t))type metadata accessor for TurnOnAllDataTypesCell);
  sub_1C254FAD0();
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  sub_1C22C4CE0((unint64_t *)&qword_1EA2DE6E8, 255, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell);
  sub_1C254FAD0();
  sub_1C254DBB0();
  sub_1C254FAF0();
  sub_1C254D4E0();
  return sub_1C254FAD0();
}

uint64_t sub_1C22C3FE4()
{
  uint64_t v1 = sub_1C2550AA0();
  sub_1C254F5A0();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for TurnOnAllDataTypesItem()
{
  return self;
}

uint64_t sub_1C22C40D8()
{
  type metadata accessor for TurnOnAllDataTypesCell();
  sub_1C22C4CE0(&qword_1EA2DE798, v0, (void (*)(uint64_t))type metadata accessor for TurnOnAllDataTypesCell);
  return sub_1C254D330();
}

uint64_t sub_1C22C413C()
{
  return sub_1C22C3FE4();
}

uint64_t sub_1C22C42A8()
{
  uint64_t v1 = v0;
  sub_1C22C4D28(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v32 - v3;
  uint64_t v5 = sub_1C254E710();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254E890();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI22TurnOnAllDataTypesCell_item;
  swift_beginAccess();
  sub_1C2227014(v13, (uint64_t)v40);
  if (!v41) {
    return sub_1C2227100((uint64_t)v40);
  }
  sub_1C22270A8();
  type metadata accessor for TurnOnAllDataTypesItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    id v34 = v8;
    uint64_t v15 = v39;
    MEMORY[0x1C87582A0]();
    id v33 = self;
    id v16 = objc_msgSend(v33, sel_systemBlueColor);
    uint64_t v38 = v6;
    uint64_t v17 = (void (*)(uint64_t *, void))sub_1C254E7A0();
    uint64_t v18 = v38;
    sub_1C254E780();
    v17(v40, 0);
    uint64_t v35 = v15;
    id v19 = v34;
    swift_bridgeObjectRetain();
    sub_1C254E860();
    uint64_t v41 = v9;
    uint64_t v42 = MEMORY[0x1E4FB0F88];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v40);
    uint64_t v36 = v9;
    uint64_t v37 = v10;
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v12, v9);
    MEMORY[0x1C8758230](v40);
    sub_1C254E6D0();
    id v21 = objc_msgSend(v33, sel_secondarySystemBackgroundColor);
    sub_1C254E6C0();
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v4, v19, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v4, 0, 1, v5);
    MEMORY[0x1C8758250](v4);
    sub_1C2201F2C();
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1C255D0E0;
    *(void *)(v22 + 32) = sub_1C254F470();
    *(void *)(v22 + 40) = v23;
    strcpy((char *)(v22 + 48), "ChooseTopics");
    *(unsigned char *)(v22 + 61) = 0;
    *(_WORD *)(v22 + 62) = -5120;
    sub_1C254E850();
    uint64_t v25 = v24;
    if (v24)
    {
      CGRect v26 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      id v27 = objc_msgSend(v26, sel_removeSpecialCharactersAndWhiteSpaces);

      uint64_t v25 = sub_1C254F470();
      unint64_t v29 = v28;

      uint64_t v18 = v38;
    }
    else
    {
      unint64_t v29 = 0xE000000000000000;
    }
    *(void *)(v22 + 64) = v25;
    *(void *)(v22 + 72) = v29;
    id v30 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v31 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v1, sel_setAccessibilityIdentifier_, v31);
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v12, v36);
  }
  return result;
}

id sub_1C22C4780()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TurnOnAllDataTypesCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TurnOnAllDataTypesCell()
{
  return self;
}

uint64_t dispatch thunk of SelectAllItemsDelegate.didSelectAllItems(allSwitchesOn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1C22C47FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI22TurnOnAllDataTypesCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C22C4850(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI22TurnOnAllDataTypesCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C22C42A8();
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C22C48C0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C22C4920;
}

uint64_t sub_1C22C4920(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C22C42A8();
  }
  return result;
}

void sub_1C22C4954(uint64_t a1, void *a2)
{
}

void sub_1C22C497C(void *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void (***)(char *, uint64_t))(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  uint64_t v8 = swift_conformsToProtocol2();
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v8) {
    uint64_t v10 = a1;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v10)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = OBJC_IVAR____TtC15HealthRecordsUI22TurnOnAllDataTypesCell_allSwitchesOn;
    uint64_t v13 = (unsigned char *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI22TurnOnAllDataTypesCell_allSwitchesOn);
    uint64_t v14 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI22TurnOnAllDataTypesCell_allSwitchesOn);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
    id v31 = a1;
    v15(v14, ObjectType, v9);
    *(unsigned char *)(v2 + v12) = (*v13 & 1) == 0;
    sub_1C22C42A8();
    id v16 = v31;
  }
  else
  {
    sub_1C254E510();
    id v17 = a1;
    uint64_t v18 = sub_1C254E550();
    os_log_type_t v19 = sub_1C254FA20();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v33 = v30;
      *(_DWORD *)uint64_t v20 = 136315394;
      id v31 = v5;
      uint64_t v21 = sub_1C2550AA0();
      uint64_t v32 = sub_1C21AD354(v21, v22, &v33);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      v29[1] = v20 + 14;
      id v23 = v17;
      id v24 = objc_msgSend(v23, sel_description);
      uint64_t v25 = sub_1C254F470();
      unint64_t v27 = v26;

      uint64_t v32 = sub_1C21AD354(v25, v27, &v33);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v18, v19, "[%s] Presenting view controller %s does not conform to SelectAllItemsDelegate", (uint8_t *)v20, 0x16u);
      uint64_t v28 = v30;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v28, -1, -1);
      MEMORY[0x1C875A0B0](v20, -1, -1);

      v31[1](v7, v4);
    }
    else
    {

      v5[1](v7, v4);
    }
  }
}

uint64_t sub_1C22C4CE0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C22C4D28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id static SignedClinicalDataRecordDetailViewFactory.multiRecordViewController(medicalRecords:profile:)(uint64_t a1, void *a2)
{
  uint64_t v4 = (objc_class *)type metadata accessor for SignedClinicalDataMultiRecordViewController();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_medicalRecords] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_profile] = a2;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_displayGroups] = MEMORY[0x1E4FBC860];
  v8.receiver = v5;
  v8.super_class = v4;
  swift_bridgeObjectRetain();
  id v6 = a2;
  id result = objc_msgSendSuper2(&v8, sel_initWithUsingInsetStyling_, 1);
  if (!result) {
    __break(1u);
  }
  return result;
}

id SignedClinicalDataRecordDetailViewFactory.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id SignedClinicalDataRecordDetailViewFactory.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignedClinicalDataRecordDetailViewFactory();
  return objc_msgSendSuper2(&v2, sel_init);
}

id SignedClinicalDataRecordDetailViewFactory.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignedClinicalDataRecordDetailViewFactory();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C22C50A4(uint64_t a1, uint64_t a2)
{
  sub_1C22C6574();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  objc_super v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  sub_1C22C6624(0, &qword_1EA2E0210, (uint64_t (*)(uint64_t))sub_1C22C6688, MEMORY[0x1E4FBB718]);
  sub_1C22C67F0();
  sub_1C254EF80();
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C254C730();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();

  uint64_t v17 = v10;
  uint64_t v18 = v12;
  sub_1C22C6D48(&qword_1EA2E0250, (void (*)(uint64_t))sub_1C22C6574);
  sub_1C2218914();
  sub_1C254F070();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C22C52F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_mainRecord);
  if (v3)
  {
    uint64_t v4 = v3;
    if (qword_1EA2DD680 != -1) {
      swift_once();
    }
    id v5 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C2218914();
    uint64_t v10 = sub_1C254F010();
    MEMORY[0x1F4188790](v10);
    sub_1C22C6624(0, &qword_1EA2E0220, (uint64_t (*)(uint64_t))sub_1C22C6720, MEMORY[0x1E4F3F108]);
    sub_1C22C6F78(&qword_1EA2E0248, &qword_1EA2E0220, (uint64_t (*)(uint64_t))sub_1C22C6720);
    sub_1C254F180();

    sub_1C22C6688();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 0, 1, v6);
  }
  else
  {
    sub_1C22C6688();
    id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    return v9(a2, 1, 1, v8);
  }
}

uint64_t sub_1C22C5598@<X0>(void *a1@<X0>, void *a2@<X2>, uint64_t *a3@<X8>)
{
  id v73 = a2;
  sub_1C22C6624(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v68 = (char *)&v56 - v6;
  uint64_t v63 = sub_1C254CAD0();
  uint64_t v7 = *(void *)(v63 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v63);
  uint64_t v58 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v56 - v10;
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  uint64_t v70 = sub_1C254C730();
  uint64_t v72 = v13;
  swift_bridgeObjectRelease();

  id v14 = objc_msgSend(a1, sel_recordIssuerDisplayName);
  uint64_t v67 = sub_1C254F470();
  uint64_t v71 = v15;

  id v16 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_1C254C730();
  uint64_t v69 = v17;
  swift_bridgeObjectRelease();

  id v18 = sub_1C24EEFB8();
  id v19 = objc_msgSend(v18, sel_string);

  uint64_t v60 = sub_1C254F470();
  uint64_t v66 = v20;

  id v21 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  uint64_t v59 = sub_1C254C730();
  uint64_t v64 = v22;
  swift_bridgeObjectRelease();

  id v23 = objc_msgSend(a1, sel_issuedDate);
  sub_1C254CA80();

  id v24 = (void *)sub_1C254CA50();
  uint64_t v25 = v63;
  uint64_t v57 = *(void (**)(char *, uint64_t))(v7 + 8);
  v57(v11, v63);
  id v26 = objc_msgSend(v73, sel_stringFromDate_, v24);

  uint64_t v61 = sub_1C254F470();
  uint64_t v28 = v27;

  id v29 = objc_msgSend(a1, sel_expirationDate);
  uint64_t v62 = v28;
  if (!v29)
  {
    uint64_t v32 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v68, 1, 1, v25);
    goto LABEL_7;
  }
  uint64_t v30 = v29;
  sub_1C254CA80();

  id v31 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v32 = (uint64_t)v68;
  v31(v68, v11, v25);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v32, 0, 1, v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v32, 1, v25) == 1)
  {
LABEL_7:
    sub_1C22178C0(v32);
    uint64_t v45 = 0;
    uint64_t v39 = 0;
    uint64_t v42 = 0;
    uint64_t v44 = 0;
    goto LABEL_8;
  }
  uint64_t v33 = v25;
  id v34 = v58;
  v31(v58, (char *)v32, v33);
  id v35 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  uint64_t v36 = v33;
  uint64_t v37 = sub_1C254C730();
  uint64_t v39 = v38;
  swift_bridgeObjectRelease();

  id v40 = (void *)sub_1C254CA50();
  id v41 = objc_msgSend(v73, sel_stringFromDate_, v40);

  uint64_t v42 = sub_1C254F470();
  uint64_t v44 = v43;

  v57(v34, v36);
  uint64_t v45 = v37;
LABEL_8:
  uint64_t v47 = v59;
  uint64_t v46 = v60;
  uint64_t v48 = v71;
  uint64_t v49 = v72;
  *a3 = v70;
  a3[1] = v49;
  uint64_t v50 = v66;
  a3[2] = v67;
  a3[3] = v48;
  uint64_t v51 = v64;
  uint64_t v52 = v69;
  a3[4] = v65;
  a3[5] = v52;
  a3[6] = v46;
  a3[7] = v50;
  a3[8] = v47;
  a3[9] = v51;
  uint64_t v53 = v62;
  a3[10] = v61;
  a3[11] = v53;
  a3[12] = v45;
  a3[13] = v39;
  a3[14] = v42;
  a3[15] = v44;
  uint64_t v54 = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C22C694C(v54, v39, v42, v44);
  sub_1C22C6990(v54, v39, v42, v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C22C5C04()
{
  return sub_1C22C50A4(*v0, v0[1]);
}

uint64_t sub_1C22C5C0C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (a1)
  {
    sub_1C2218914();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C254F010();
    uint64_t v5 = v4;
    char v7 = v6 & 1;
    sub_1C254EF40();
    uint64_t v8 = sub_1C254EFC0();
    uint64_t v10 = v9;
    char v12 = v11;
    swift_release();
    char v13 = v12 & 1;
    sub_1C22C6C58(v3, v5, v7);
    swift_bridgeObjectRelease();
    sub_1C254F090();
    uint64_t v14 = sub_1C254EFB0();
    uint64_t v16 = v15;
    char v18 = v17;
    uint64_t v20 = v19;
    swift_release();
    sub_1C22C6C58(v8, v10, v13);
    swift_bridgeObjectRelease();
    sub_1C22C6CAC(v14, v16, v18 & 1);
    swift_bridgeObjectRetain();
    uint64_t v42 = v16;
    uint64_t v43 = v14;
    uint64_t v40 = v18 & 1;
    sub_1C22C6C58(v14, v16, v18 & 1);
    uint64_t v41 = v20;
    swift_bridgeObjectRelease();
    uint64_t v39 = 0x4020000000000000;
  }
  else
  {
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    uint64_t v39 = 0;
  }
  sub_1C2218914();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C254F010();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  sub_1C254EF40();
  uint64_t v26 = sub_1C254EFC0();
  uint64_t v28 = v27;
  char v30 = v29;
  swift_release();
  sub_1C22C6C58(v21, v23, v25);
  swift_bridgeObjectRelease();
  sub_1C254F080();
  uint64_t v31 = sub_1C254EFB0();
  uint64_t v33 = v32;
  char v35 = v34;
  uint64_t v37 = v36;
  swift_release();
  sub_1C22C6C58(v26, v28, v30 & 1);
  swift_bridgeObjectRelease();
  *(void *)a2 = v43;
  *(void *)(a2 + 8) = v42;
  *(void *)(a2 + 16) = v40;
  *(void *)(a2 + 24) = v41;
  *(void *)(a2 + 32) = v39;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v31;
  *(void *)(a2 + 56) = v33;
  *(unsigned char *)(a2 + 64) = v35 & 1;
  *(void *)(a2 + 72) = v37;
  sub_1C22C6C68(v43, v42, v40, v41);
  sub_1C22C6CAC(v31, v33, v35 & 1);
  swift_bridgeObjectRetain();
  sub_1C22C6C58(v31, v33, v35 & 1);
  swift_bridgeObjectRelease();
  return sub_1C22C6CBC(v43, v42, v40, v41);
}

uint64_t sub_1C22C5F04()
{
  return sub_1C254F050();
}

__n128 sub_1C22C5F20@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = sub_1C254EE10();
  sub_1C22C5C0C(v3, (uint64_t)v12);
  uint64_t v5 = v13;
  char v6 = v14;
  char v7 = v16;
  uint64_t v8 = v17;
  __n128 result = (__n128)v12[0];
  long long v10 = v12[1];
  long long v11 = v15;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v10;
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = v11;
  *(unsigned char *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  return result;
}

uint64_t _s15HealthRecordsUI41SignedClinicalDataRecordDetailViewFactoryC06QRCodeI10Controller06signedeF5GroupSo06UIViewL0CSo08HKSignedefN0C_tFZ_0(void *a1)
{
  sub_1C22C6624(0, &qword_1EA2E01E0, (uint64_t (*)(uint64_t))sub_1C2253F68, MEMORY[0x1E4FBB718]);
  a1;
  sub_1C254F0D0();
  sub_1C22C67A8(0, (unint64_t *)&qword_1EA2DE090);
  sub_1C254F0D0();
  sub_1C22C6308(0, &qword_1EA2E01E8, (void (*)(void))sub_1C22C62B4);
  id v3 = objc_allocWithZone(v2);
  return sub_1C254EEB0();
}

void *_s15HealthRecordsUI41SignedClinicalDataRecordDetailViewFactoryC06issuerhI10Controller06signedeF5GroupSo06UIViewL0CSo08HKSignedefN0C_tFZ_0(void *a1)
{
  id v2 = objc_allocWithZone(MEMORY[0x1E4F28C10]);
  a1;
  id v3 = objc_msgSend(v2, sel_init);
  objc_msgSend(v3, sel_setDateStyle_, 2);
  objc_msgSend(v3, sel_setTimeStyle_, 1);

  sub_1C22C6308(0, &qword_1EA2E01F8, (void (*)(void))sub_1C22C6368);
  id v5 = objc_allocWithZone(v4);
  char v6 = (void *)sub_1C254EEB0();
  id v7 = objc_msgSend(v6, sel_navigationItem);
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v8 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setTitle_, v9, 0xE000000000000000);

  return v6;
}

uint64_t type metadata accessor for SignedClinicalDataRecordDetailViewFactory()
{
  return self;
}

unint64_t sub_1C22C62B4()
{
  unint64_t result = qword_1EA2E01F0;
  if (!qword_1EA2E01F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E01F0);
  }
  return result;
}

void sub_1C22C6308(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1C254EEC0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C22C6368()
{
  unint64_t result = qword_1EA2E0200;
  if (!qword_1EA2E0200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0200);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for SignedClinicalDataIssuerDetailView(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  unint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for AccountStateChange(uint64_t a1)
{
  id v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for SignedClinicalDataIssuerDetailView(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for SignedClinicalDataIssuerDetailView(uint64_t a1, _OWORD *a2)
{
  unint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for SignedClinicalDataIssuerDetailView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SignedClinicalDataIssuerDetailView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignedClinicalDataIssuerDetailView()
{
  return &type metadata for SignedClinicalDataIssuerDetailView;
}

uint64_t sub_1C22C6558()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C22C6574()
{
  if (!qword_1EA2E0208)
  {
    sub_1C22C6624(255, &qword_1EA2E0210, (uint64_t (*)(uint64_t))sub_1C22C6688, MEMORY[0x1E4FBB718]);
    sub_1C22C67F0();
    unint64_t v0 = sub_1C254EF90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0208);
    }
  }
}

void sub_1C22C6624(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C22C6688()
{
  if (!qword_1EA2E0218)
  {
    sub_1C22C6624(255, &qword_1EA2E0220, (uint64_t (*)(uint64_t))sub_1C22C6720, MEMORY[0x1E4F3F108]);
    unint64_t v0 = sub_1C254F190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0218);
    }
  }
}

void sub_1C22C6720()
{
  if (!qword_1EA2E0228)
  {
    sub_1C22C67A8(255, &qword_1EA2E0230);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EA2E0228);
    }
  }
}

void sub_1C22C67A8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C2550100();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_1C22C67F0()
{
  unint64_t result = qword_1EA2E0238;
  if (!qword_1EA2E0238)
  {
    sub_1C22C6624(255, &qword_1EA2E0210, (uint64_t (*)(uint64_t))sub_1C22C6688, MEMORY[0x1E4FBB718]);
    sub_1C22C6890();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0238);
  }
  return result;
}

unint64_t sub_1C22C6890()
{
  unint64_t result = qword_1EA2E0240;
  if (!qword_1EA2E0240)
  {
    sub_1C22C6688();
    sub_1C22C6F78(&qword_1EA2E0248, &qword_1EA2E0220, (uint64_t (*)(uint64_t))sub_1C22C6720);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0240);
  }
  return result;
}

uint64_t sub_1C22C6938@<X0>(uint64_t a1@<X8>)
{
  return sub_1C22C52F8(*(void **)(v1 + 16), a1);
}

uint64_t sub_1C22C6940@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C22C5598(*(void **)(v1 + 16), *(void **)(v1 + 32), a1);
}

uint64_t sub_1C22C694C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C22C6990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for BylineCell()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for BylineCell(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BylineCell(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for BylineCell(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BylineCell(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BylineCell(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BylineCell()
{
  return &type metadata for BylineCell;
}

uint64_t sub_1C22C6BA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C22C6C3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C22C6C58(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C22C6C68(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1C22C6CAC(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C22C6CAC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1C22C6CBC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1C22C6C58(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C22C6D00()
{
  return sub_1C22C6D48(&qword_1EA2E0258, (void (*)(uint64_t))sub_1C22C6D90);
}

uint64_t sub_1C22C6D48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C22C6D90()
{
  if (!qword_1EA2E0260)
  {
    sub_1C22C6624(255, &qword_1EA2E0268, (uint64_t (*)(uint64_t))sub_1C22C6E44, MEMORY[0x1E4F3F108]);
    sub_1C22C6F78(&qword_1EA2E0290, &qword_1EA2E0268, (uint64_t (*)(uint64_t))sub_1C22C6E44);
    unint64_t v0 = sub_1C254F120();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0260);
    }
  }
}

void sub_1C22C6E44()
{
  if (!qword_1EA2E0270)
  {
    sub_1C22C6624(255, &qword_1EA2E0278, (uint64_t (*)(uint64_t))sub_1C22C6EDC, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E0270);
    }
  }
}

void sub_1C22C6EDC(uint64_t a1)
{
}

void sub_1C22C6F10()
{
  if (!qword_1EA2E0288)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E0288);
    }
  }
}

uint64_t sub_1C22C6F78(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C22C6624(255, a2, a3, MEMORY[0x1E4F3F108]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static NavigationFeedItemIdentifierFactory.make(navigationType:categoryKind:profile:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = *a2;
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C255D0E0;
  long long v11 = (void *)sub_1C254CF00();
  unint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  if (v11)
  {
    unint64_t v23 = 0x656C69666F72505BLL;
    unint64_t v24 = 0xE90000000000003ALL;
    id v12 = v11;
    id v13 = objc_msgSend(v12, sel_identifier);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();

    unint64_t v14 = v23;
    unint64_t v15 = v24;
  }
  else
  {
    unint64_t v14 = 0xD000000000000013;
    unint64_t v15 = 0x80000001C2578680;
  }
  unint64_t v23 = v14;
  unint64_t v24 = v15;
  sub_1C254F5A0();

  unint64_t v16 = v24;
  *(void *)(v10 + 32) = v23;
  *(void *)(v10 + 40) = v16;
  unint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v23 = 0xD000000000000010;
  unint64_t v24 = 0x80000001C257A690;
  uint64_t v22 = v8;
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  unint64_t v17 = v24;
  *(void *)(v10 + 48) = v23;
  *(void *)(v10 + 56) = v17;
  unint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v23 = 0xD000000000000014;
  unint64_t v24 = 0x80000001C257A6B0;
  uint64_t v22 = v9;
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  unint64_t v18 = v24;
  *(void *)(v10 + 64) = v23;
  *(void *)(v10 + 72) = v18;
  unint64_t v23 = v10;
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
  sub_1C226BF44();
  uint64_t v19 = sub_1C254F390();
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t static NavigationFeedItemIdentifierFactory.makePrefixComponent(feedItemKind:)()
{
  return 0xD000000000000016;
}

uint64_t static NavigationFeedItemIdentifierFactory.makeComponent(navigationType:)(uint64_t a1)
{
  return sub_1C22C7430(a1, 19, 0xD000000000000010);
}

uint64_t static NavigationFeedItemIdentifierFactory.makeComponent(categoryKind:)(uint64_t a1)
{
  return sub_1C22C7430(a1, 23, 0xD000000000000014);
}

uint64_t sub_1C22C7430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

void sub_1C22C74CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for NavigationFeedItemIdentifierFactory()
{
  return &type metadata for NavigationFeedItemIdentifierFactory;
}

uint64_t sub_1C22C752C()
{
  return sub_1C22305D0();
}

uint64_t sub_1C22C7538()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254E890();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI23TitleSubtitleDetailCell_item;
  swift_beginAccess();
  sub_1C2227014(v6, (uint64_t)v22);
  if (!v23) {
    return sub_1C2227100((uint64_t)v22);
  }
  sub_1C22270A8();
  type metadata accessor for TitleSubtitleDetailItem(0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v8 = v21[1];
    MEMORY[0x1C87582A0]();
    swift_bridgeObjectRetain();
    sub_1C254E860();
    swift_bridgeObjectRetain();
    sub_1C254E740();
    id v9 = *(id *)(v8 + 48);
    sub_1C254E7E0();
    id v10 = objc_msgSend(self, sel_secondaryLabelColor);
    uint64_t v11 = sub_1C254E7A0();
    v21[0] = v3;
    id v12 = (void (*)(uint64_t *, void))v11;
    sub_1C254E780();
    v12(v22, 0);
    id v13 = self;
    id v14 = objc_msgSend(v13, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
    unint64_t v15 = (void (*)(uint64_t *, void))sub_1C254E7A0();
    sub_1C254E770();
    v15(v22, 0);
    id v16 = objc_msgSend(v13, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
    unint64_t v17 = (void (*)(uint64_t *, void))sub_1C254E7F0();
    sub_1C254E770();
    v17(v22, 0);
    uint64_t v18 = v21[0];
    uint64_t v23 = v2;
    uint64_t v24 = MEMORY[0x1E4FB0F88];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22);
    (*(void (**)(uint64_t *, char *, uint64_t))(v18 + 16))(boxed_opaque_existential_1, v5, v2);
    MEMORY[0x1C8758230](v22);
    swift_bridgeObjectRetain();
    sub_1C254FD80();
    if (*(void *)(v8 + 72))
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setAccessibilityIdentifier_, v20);
      swift_release();

      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v5, v2);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v2);
      return swift_release();
    }
  }
  return result;
}

id sub_1C22C79A0()
{
  return sub_1C22C8AE0(type metadata accessor for TitleSubtitleDetailCell);
}

uint64_t type metadata accessor for TitleSubtitleDetailCell()
{
  return self;
}

uint64_t sub_1C22C79EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C22C8BB4(&OBJC_IVAR____TtC15HealthRecordsUI23TitleSubtitleDetailCell_item, a1);
}

uint64_t sub_1C22C79F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C22C8C24(a1, a2, a3, &OBJC_IVAR____TtC15HealthRecordsUI23TitleSubtitleDetailCell_item, (void (*)(uint64_t))sub_1C22C7538);
}

uint64_t (*sub_1C22C7A18(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C22C7A78;
}

uint64_t sub_1C22C7A78(uint64_t a1, char a2)
{
  return sub_1C22C8D10(a1, a2, (uint64_t (*)(uint64_t))sub_1C22C7538);
}

uint64_t sub_1C22C7A90()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI23TitleSubtitleDetailItem_uuid;
  uint64_t v2 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1C22C7B58()
{
  return type metadata accessor for TitleSubtitleDetailItem(0);
}

uint64_t type metadata accessor for TitleSubtitleDetailItem(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E02A0);
}

uint64_t sub_1C22C7B80()
{
  uint64_t result = sub_1C254CB40();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C22C7C40(uint64_t a1, uint64_t a2)
{
  return sub_1C22C7E68(a1, a2, (void (*)(void))type metadata accessor for TitleSubtitleDetailCell, &qword_1EA2E02E0, (void (*)(void))type metadata accessor for TitleSubtitleDetailCell);
}

uint64_t sub_1C22C7C78()
{
  return sub_1C22C752C();
}

uint64_t sub_1C22C7C9C()
{
  return sub_1C22305D0();
}

uint64_t sub_1C22C7CA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI34TitleSubtitleDetailItemWithSpinner_uuid;
  uint64_t v2 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1C22C7D60()
{
  return type metadata accessor for TitleSubtitleDetailItemWithSpinner(0);
}

uint64_t type metadata accessor for TitleSubtitleDetailItemWithSpinner(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E02B0);
}

uint64_t sub_1C22C7D88()
{
  uint64_t result = sub_1C254CB40();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C22C7E30(uint64_t a1, uint64_t a2)
{
  return sub_1C22C7E68(a1, a2, (void (*)(void))type metadata accessor for TitleSubtitleDetailSpinnerCell, &qword_1EA2E02E8, (void (*)(void))type metadata accessor for TitleSubtitleDetailSpinnerCell);
}

uint64_t sub_1C22C7E68(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(void))
{
  return sub_1C254D330();
}

uint64_t sub_1C22C7EC4()
{
  return sub_1C22C7C9C();
}

id sub_1C22C7EE8()
{
  return sub_1C22C7F20(&OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___titleLabel, (SEL *)&selRef_secondaryLabelColor, MEMORY[0x1E4FB2950]);
}

id sub_1C22C7F04()
{
  return sub_1C22C7F20(&OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___subtitleLabel, (SEL *)&selRef_labelColor, MEMORY[0x1E4FB28C8]);
}

id sub_1C22C7F20(uint64_t *a1, SEL *a2, void *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    id v6 = *(id *)(v3 + *a1);
  }
  else
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v9, sel_setNumberOfLines_, 0);
    id v10 = [self *a2];
    objc_msgSend(v9, sel_setTextColor_, v10);

    id v11 = objc_msgSend(self, sel_preferredFontForTextStyle_, *a3);
    objc_msgSend(v9, sel_setFont_, v11);

    id v12 = *(void **)(v3 + v4);
    *(void *)(v3 + v4) = v9;
    id v6 = v9;

    uint64_t v5 = 0;
  }
  id v13 = v5;
  return v6;
}

id sub_1C22C8040()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___spinner;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___spinner);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___spinner);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C22C80CC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell_item;
  swift_beginAccess();
  sub_1C2227014(v1, (uint64_t)v18);
  if (v19)
  {
    sub_1C22270A8();
    type metadata accessor for TitleSubtitleDetailItemWithSpinner(0);
    if (swift_dynamicCast())
    {
      id v2 = sub_1C22C7EE8();
      swift_bridgeObjectRetain();
      id v3 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setText_, v3);

      id v4 = sub_1C22C7F04();
      swift_bridgeObjectRetain();
      uint64_t v5 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setText_, v5);

      uint64_t v6 = *(void *)(v17 + 56);
      if (v6)
      {
        uint64_t v7 = *(void *)(v17 + 48);
        swift_bridgeObjectRetain();
        id v8 = sub_1C22C7EE8();
        sub_1C2201F2C();
        uint64_t v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_1C255CDA0;
        *(void *)(v9 + 32) = v7;
        *(void *)(v9 + 40) = v6;
        *(void *)(v9 + 48) = 0x656C746954;
        *(void *)(v9 + 56) = 0xE500000000000000;
        swift_bridgeObjectRetain();
        id v10 = (void *)sub_1C254F700();
        swift_bridgeObjectRelease();
        id v11 = (id)HKUIJoinStringsForAutomationIdentifier();

        objc_msgSend(v8, sel_setAccessibilityIdentifier_, v11);
        id v12 = sub_1C22C7F04();
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_1C255CDA0;
        *(void *)(v13 + 32) = v7;
        *(void *)(v13 + 40) = v6;
        *(void *)(v13 + 48) = 0x656C746974627553;
        *(void *)(v13 + 56) = 0xE800000000000000;
        id v14 = (void *)sub_1C254F700();
        swift_bridgeObjectRelease();
        id v15 = (id)HKUIJoinStringsForAutomationIdentifier();

        objc_msgSend(v12, sel_setAccessibilityIdentifier_, v15);
      }
      id v16 = sub_1C22C8040();
      objc_msgSend(v16, sel_startAnimating);
      swift_release();
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v18);
  }
}

id sub_1C22C8370(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___subtitleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell____lazy_storage___spinner] = 0;
  uint64_t v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell_item];
  id v10 = (objc_class *)type metadata accessor for TitleSubtitleDetailSpinnerCell();
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v22.receiver = v4;
  v22.super_class = v10;
  id v11 = objc_msgSendSuper2(&v22, sel_initWithFrame_, a1, a2, a3, a4);
  id v12 = self;
  id v13 = v11;
  id v14 = objc_msgSend(v12, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v13, sel_setBackgroundColor_, v14);

  id v15 = objc_msgSend(v13, sel_contentView);
  id v16 = sub_1C22C7EE8();
  objc_msgSend(v15, sel_addSubview_, v16);

  id v17 = objc_msgSend(v13, sel_contentView);
  id v18 = sub_1C22C8040();
  objc_msgSend(v17, sel_addSubview_, v18);

  id v19 = objc_msgSend(v13, sel_contentView);
  id v20 = sub_1C22C7F04();
  objc_msgSend(v19, sel_addSubview_, v20);

  sub_1C22C8608();
  return v13;
}

void sub_1C22C8608()
{
  id v1 = sub_1C22C7EE8();
  id v2 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_hk_alignHorizontalConstraintsWithView_margin_, v2, 16.0);

  id v3 = sub_1C22C7EE8();
  id v4 = objc_msgSend(v3, sel_firstBaselineAnchor);

  id v5 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v6 = objc_msgSend(v5, sel_topAnchor);

  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v8, sel__scaledValueForValue_, 25.0);
  double v10 = v9;

  id v11 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, v10);
  objc_msgSend(v11, sel_setActive_, 1);

  id v12 = sub_1C22C8040();
  id v13 = objc_msgSend(v12, sel_leadingAnchor);

  id v14 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v15 = objc_msgSend(v14, sel_leadingAnchor);

  id v16 = objc_msgSend(v13, (SEL)&selRef_chartDataCacheController + 7, v15, 16.0);
  objc_msgSend(v16, sel_setActive_, 1);

  id v17 = sub_1C22C8040();
  id v18 = objc_msgSend(v17, sel_centerYAnchor);

  id v19 = sub_1C22C7F04();
  id v20 = objc_msgSend(v19, sel_centerYAnchor);

  id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
  objc_msgSend(v21, sel_setActive_, 1);

  id v22 = sub_1C22C7F04();
  id v23 = objc_msgSend(v22, sel_leadingAnchor);

  id v24 = sub_1C22C8040();
  id v25 = objc_msgSend(v24, sel_trailingAnchor);

  id v26 = objc_msgSend(v23, (SEL)&selRef_chartDataCacheController + 7, v25, 4.0);
  objc_msgSend(v26, sel_setActive_, 1);

  id v27 = sub_1C22C7F04();
  id v28 = objc_msgSend(v27, sel_firstBaselineAnchor);

  id v29 = sub_1C22C7EE8();
  id v30 = objc_msgSend(v29, sel_lastBaselineAnchor);

  uint64_t v31 = *MEMORY[0x1E4FB28C8];
  id v32 = objc_msgSend(v7, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v32, sel__scaledValueForValue_, 24.0);
  double v34 = v33;

  id v35 = objc_msgSend(v28, (SEL)&selRef_chartDataCacheController + 7, v30, v34);
  objc_msgSend(v35, sel_setActive_, 1);

  id v36 = sub_1C22C7F04();
  id v37 = objc_msgSend(v36, sel_lastBaselineAnchor);

  id v38 = objc_msgSend(v0, sel_contentView);
  id v39 = objc_msgSend(v38, sel_bottomAnchor);

  id v40 = objc_msgSend(v7, sel_preferredFontForTextStyle_, v31);
  objc_msgSend(v40, sel__scaledValueForValue_, 13.0);
  double v42 = v41;

  id v43 = objc_msgSend(v37, (SEL)&selRef_chartDataCacheController + 7, v39, -v42);
  objc_msgSend(v43, sel_setActive_, 1);
}

id sub_1C22C8AC8()
{
  return sub_1C22C8AE0(type metadata accessor for TitleSubtitleDetailSpinnerCell);
}

id sub_1C22C8AE0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for TitleSubtitleDetailSpinnerCell()
{
  return self;
}

uint64_t sub_1C22C8BA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C22C8BB4(&OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell_item, a1);
}

uint64_t sub_1C22C8BB4@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return sub_1C2227014(v4, a2);
}

uint64_t sub_1C22C8C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C22C8C24(a1, a2, a3, &OBJC_IVAR____TtC15HealthRecordsUI30TitleSubtitleDetailSpinnerCell_item, (void (*)(uint64_t))sub_1C22C80CC);
}

uint64_t sub_1C22C8C24(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t))
{
  uint64_t v8 = v5 + *a4;
  swift_beginAccess();
  sub_1C2232E74(a1, v8);
  uint64_t v9 = swift_endAccess();
  a5(v9);
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C22C8C98(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C22C8CF8;
}

uint64_t sub_1C22C8CF8(uint64_t a1, char a2)
{
  return sub_1C22C8D10(a1, a2, (uint64_t (*)(uint64_t))sub_1C22C80CC);
}

uint64_t sub_1C22C8D10(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

uint64_t sub_1C22C8D54(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C22C8D98(uint64_t a1, uint64_t a2)
{
  if ((*(uint64_t (**)(void))(a2 + 40))())
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
  }
  else if (qword_1EBB6EF40 != -1)
  {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1C22C8EF0(uint64_t a1, uint64_t a2)
{
  if ((*(uint64_t (**)(void))(a2 + 40))())
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
  }
  else if (qword_1EBB6EF40 != -1)
  {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v3;
}

void sub_1C22C9070(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(a1 + 48);
  if (v2)
  {
    id v3 = v1;
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 16);
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v5 = *(void *)(a1 + 24);
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(void **)(a1 + 40);
    id v8 = v7;
    id v9 = sub_1C22C9DF8();
    uint64_t v10 = 0x4008000000000000;
    if ((v6 & 1) == 0) {
      uint64_t v10 = v5;
    }
    if (v1) {
      id v11 = 0;
    }
    else {
      id v11 = (void *)v10;
    }
    if (v1) {
      char v12 = 2;
    }
    else {
      char v12 = 0;
    }
    objc_msgSend(v9, sel_setImage_, v8);
    id v14 = v11;
    char v15 = v12;
    UIImageView.applyStyle(_:)((uint64_t)&v14);
    sub_1C2224240(v11, v12);

    sub_1C22CB1E0(v1, v13, v4, v5, v6, (uint64_t)v7, 0);
    sub_1C22CB1E0(v1, v13, v4, v5, v6, (uint64_t)v7, 0);
  }
  sub_1C22CB1D4(v1, v2);
}

void sub_1C22C91BC()
{
  uint64_t v1 = v0;
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v2 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v2);

  id v3 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v3, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);

  id v4 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v4, sel_setCornerRadius_, 10.0);

  id v5 = sub_1C22C9DF8();
  objc_msgSend(v1, sel_addSubview_, v5);

  id v6 = sub_1C22C9FA0();
  objc_msgSend(v1, sel_addSubview_, v6);

  id v7 = sub_1C22CA1F4();
  objc_msgSend(v1, sel_addSubview_, v7);

  id v8 = sub_1C22CA408();
  objc_msgSend(v1, sel_addSubview_, v8);

  id v9 = sub_1C22CA4E4();
  objc_msgSend(v1, sel_addSubview_, v9);

  id v10 = sub_1C22CAABC();
  objc_msgSend(v1, sel_addSubview_, v10);

  id v98 = self;
  sub_1C21ACA3C();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C2561230;
  id v12 = sub_1C22C9DF8();
  id v13 = objc_msgSend(v12, sel_topAnchor);

  id v14 = objc_msgSend(v1, sel_topAnchor);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, 11.0);

  *(void *)(v11 + 32) = v15;
  id v16 = sub_1C22C9DF8();
  id v17 = objc_msgSend(v16, sel_leadingAnchor);

  id v18 = objc_msgSend(v1, (SEL)&selRef_minusOrderedSet_ + 2);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 13.0);

  *(void *)(v11 + 40) = v19;
  id v20 = sub_1C22C9FA0();
  id v21 = objc_msgSend(v20, sel_topAnchor);

  id v22 = objc_msgSend(v1, sel_topAnchor);
  id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v22, 11.0);

  *(void *)(v11 + 48) = v23;
  id v24 = sub_1C22C9FA0();
  id v25 = objc_msgSend(v24, (SEL)&selRef_minusOrderedSet_ + 2);

  id v26 = sub_1C22C9DF8();
  id v27 = objc_msgSend(v26, sel_trailingAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, 11.0);
  *(void *)(v11 + 56) = v28;
  id v29 = sub_1C22CAABC();
  id v30 = objc_msgSend(v29, (SEL)&selRef_minusOrderedSet_ + 2);

  id v31 = sub_1C22C9FA0();
  id v32 = objc_msgSend(v31, sel_trailingAnchor);

  id v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v32, 10.0);
  *(void *)(v11 + 64) = v33;
  id v34 = sub_1C22CAABC();
  id v35 = objc_msgSend(v34, sel_firstBaselineAnchor);

  id v36 = sub_1C22C9FA0();
  id v37 = objc_msgSend(v36, sel_firstBaselineAnchor);

  id v38 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v37);
  *(void *)(v11 + 72) = v38;
  id v39 = objc_msgSend(v1, sel_trailingAnchor);
  id v40 = sub_1C22CAABC();
  id v41 = objc_msgSend(v40, sel_trailingAnchor);

  id v42 = objc_msgSend(v39, sel_constraintEqualToAnchor_constant_, v41, 13.0);
  *(void *)(v11 + 80) = v42;
  id v43 = sub_1C22CA1F4();
  id v44 = objc_msgSend(v43, sel_topAnchor);

  id v45 = sub_1C22C9FA0();
  id v46 = objc_msgSend(v45, sel_bottomAnchor);

  id v47 = objc_msgSend(v44, sel_constraintEqualToAnchor_constant_, v46, 4.0);
  *(void *)(v11 + 88) = v47;
  id v48 = sub_1C22CA1F4();
  id v49 = objc_msgSend(v48, sel_leadingAnchor);

  id v50 = sub_1C22C9FA0();
  id v51 = objc_msgSend(v50, sel_leadingAnchor);

  id v52 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v51);
  *(void *)(v11 + 96) = v52;
  id v53 = sub_1C22CA1F4();
  id v54 = objc_msgSend(v53, sel_trailingAnchor);

  id v55 = sub_1C22CAABC();
  id v56 = objc_msgSend(v55, sel_trailingAnchor);

  id v57 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v56);
  *(void *)(v11 + 104) = v57;
  id v58 = sub_1C22CA408();
  id v59 = objc_msgSend(v58, sel_topAnchor);

  id v60 = sub_1C22CA1F4();
  id v61 = objc_msgSend(v60, sel_bottomAnchor);

  id v62 = objc_msgSend(v59, sel_constraintEqualToAnchor_constant_, v61, 11.0);
  *(void *)(v11 + 112) = v62;
  id v63 = sub_1C22CA408();
  id v64 = objc_msgSend(v63, sel_leadingAnchor);

  id v65 = sub_1C22CA1F4();
  id v66 = objc_msgSend(v65, sel_leadingAnchor);

  id v67 = objc_msgSend(v64, sel_constraintEqualToAnchor_, v66);
  *(void *)(v11 + 120) = v67;
  id v68 = sub_1C22CA408();
  id v69 = objc_msgSend(v68, sel_trailingAnchor);

  id v70 = objc_msgSend(v1, sel_trailingAnchor);
  id v71 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v70);

  *(void *)(v11 + 128) = v71;
  id v72 = sub_1C22CA4E4();
  id v73 = objc_msgSend(v72, sel_topAnchor);

  id v74 = sub_1C22CA408();
  id v75 = objc_msgSend(v74, sel_bottomAnchor);

  id v76 = objc_msgSend(v73, sel_constraintEqualToAnchor_, v75);
  *(void *)(v11 + 136) = v76;
  id v77 = sub_1C22CA4E4();
  id v78 = objc_msgSend(v77, sel_bottomAnchor);

  id v79 = objc_msgSend(v1, sel_bottomAnchor);
  id v80 = objc_msgSend(v78, sel_constraintEqualToAnchor_, v79);

  *(void *)(v11 + 144) = v80;
  id v81 = sub_1C22CA4E4();
  id v82 = objc_msgSend(v81, sel_leadingAnchor);

  id v83 = sub_1C22C9FA0();
  id v84 = objc_msgSend(v83, sel_leadingAnchor);

  id v85 = objc_msgSend(v82, sel_constraintEqualToAnchor_, v84);
  *(void *)(v11 + 152) = v85;
  id v86 = sub_1C22CA4E4();
  id v87 = objc_msgSend(v86, sel_trailingAnchor);

  id v88 = sub_1C22C9FA0();
  id v89 = objc_msgSend(v88, sel_trailingAnchor);

  id v90 = objc_msgSend(v87, sel_constraintEqualToAnchor_, v89);
  *(void *)(v11 + 160) = v90;
  id v91 = sub_1C22CA4E4();
  id v92 = objc_msgSend(v91, sel_heightAnchor);

  id v93 = objc_msgSend(v92, sel_constraintGreaterThanOrEqualToConstant_, 44.0);
  *(void *)(v11 + 168) = v93;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  uint64_t v94 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v98, sel_activateConstraints_, v94);

  id v99 = sub_1C22CAABC();
  uint64_t v95 = &v1[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider];
  uint64_t v96 = *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 24];
  uint64_t v97 = *((void *)v95 + 4);
  __swift_project_boxed_opaque_existential_1Tm(v95, v96);
  objc_msgSend(v99, sel_setHidden_, (*(uint64_t (**)(uint64_t, uint64_t))(v97 + 32))(v96, v97) & 1);
}

id sub_1C22C9C40()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___clipboardIcon;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___clipboardIcon);
  id v3 = v2;
  if (v2 == (void *)1)
  {
    id v3 = sub_1C22C9CAC();
    id v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    id v5 = v3;
    sub_1C22CB0FC(v4);
  }
  sub_1C22CB10C(v2);
  return v3;
}

id sub_1C22C9CAC()
{
  id v0 = objc_msgSend(self, sel_systemFontOfSize_, 45.0);
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_configurationWithFont_, v0);
  id v3 = (void *)sub_1C254F430();
  id v4 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v3, v2);

  if (v4)
  {
    id v5 = objc_msgSend(v1, sel_configurationPreferringMulticolor);
    id v6 = objc_msgSend(v4, sel_imageByApplyingSymbolConfiguration_, v5);
  }
  else
  {

    return 0;
  }
  return v6;
}

id sub_1C22C9DF8()
{
  return sub_1C22CAADC(&OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___iconView, (uint64_t (*)(uint64_t))sub_1C22C9E18);
}

id sub_1C22C9E18()
{
  id v0 = sub_1C22C9C40();
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v0);

  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v2 = objc_msgSend(v1, sel_widthAnchor);
  id v3 = objc_msgSend(v2, sel_constraintEqualToConstant_, 45.0);

  objc_msgSend(v3, sel_setActive_, 1);
  id v4 = objc_msgSend(v1, sel_heightAnchor);
  id v5 = objc_msgSend(v4, sel_constraintEqualToConstant_, 45.0);

  objc_msgSend(v5, sel_setActive_, 1);
  LODWORD(v6) = 1148846080;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 0, v6);
  LODWORD(v7) = 1148846080;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 1, v7);
  LODWORD(v8) = 1148846080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 0, v8);
  LODWORD(v9) = 1148846080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 1, v9);
  return v1;
}

id sub_1C22C9FA0()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___titleLabel;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___titleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    double v6 = (void *)sub_1C254FE50();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTextAlignment_, 4);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    double v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v8, 0xE000000000000000);

    LODWORD(v9) = 1148846080;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 1, v9);
    objc_msgSend(v5, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB2788]);
    id v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    id v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1C22CA1F4()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___bodyLabel;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___bodyLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___bodyLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    double v6 = (void *)sub_1C254FE50();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTextAlignment_, 4);
    uint64_t v7 = *(void *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 24);
    uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 32);
    __swift_project_boxed_opaque_existential_1Tm((void *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider), v7);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
    double v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v9);

    id v10 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v10);

    LODWORD(v11) = 1148846080;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 1, v11);
    objc_msgSend(v5, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB2788]);
    id v12 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    id v2 = 0;
  }
  id v13 = v2;
  return v3;
}

id sub_1C22CA408()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___separator;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___separator);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___separator);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C08]), sel_init);
    HKUIOnePixel();
    objc_msgSend(v4, sel_setSeparatorThickness_);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = objc_msgSend(self, sel_separatorColor);
    objc_msgSend(v4, sel_setColor_, v5);

    double v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C22CA4E4()
{
  return sub_1C22CAADC(&OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___actionButton, (uint64_t (*)(uint64_t))sub_1C22CA504);
}

id sub_1C22CA504(uint64_t a1)
{
  uint64_t v2 = sub_1C25500A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  double v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v36 - v7;
  double v9 = (void *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 24);
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 32);
  __swift_project_boxed_opaque_existential_1Tm((void *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider), v10);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11))
  {
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v12, sel_setAdjustsFontForContentSizeCategory_, 1);
    id v13 = objc_msgSend(self, sel_systemBlueColor);
    objc_msgSend(v12, sel_setTextColor_, v13);

    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    id v14 = (void *)sub_1C254FE50();
    objc_msgSend(v12, sel_setFont_, v14);

    objc_msgSend(v12, sel_setNumberOfLines_, 0);
    uint64_t v15 = v9[3];
    uint64_t v16 = v9[4];
    __swift_project_boxed_opaque_existential_1Tm(v9, v15);
    (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
    id v17 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setText_, v17);

    LODWORD(v18) = 1132068864;
    objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 0, v18);
    LODWORD(v19) = 1148846080;
    objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 1, v19);
    objc_msgSend(v12, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB2788]);
    objc_msgSend(v12, sel_setAccessibilityTraits_, *MEMORY[0x1E4FB2540]);
  }
  else
  {
    sub_1C2550060();
    sub_1C2550000();
    sub_1C21AB51C(0, &qword_1EA2E0330);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    id v12 = (id)sub_1C25500B0();
    objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v12, sel_setContentHorizontalAlignment_, 4);
    id v20 = objc_msgSend(v12, sel_titleLabel);
    if (v20)
    {
      id v21 = v20;
      objc_msgSend(v20, sel_setAdjustsFontForContentSizeCategory_, 1);
    }
    id v22 = objc_msgSend(self, sel_systemBlueColor);
    objc_msgSend(v12, sel_setTitleColor_forState_, v22, 0);

    id v23 = objc_msgSend(v12, sel_titleLabel);
    if (v23)
    {
      id v24 = v23;
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
      id v25 = (void *)sub_1C254FE50();
      objc_msgSend(v24, sel_setFont_, v25);
    }
    id v26 = objc_msgSend(v12, sel_titleLabel);
    if (v26)
    {
      id v27 = v26;
      objc_msgSend(v26, sel_setNumberOfLines_, 0);
    }
    id v28 = objc_msgSend(v12, sel_titleLabel);
    if (v28)
    {
      id v29 = v28;
      objc_msgSend(v28, sel_setTextAlignment_, 4);
    }
    uint64_t v30 = v9[3];
    uint64_t v31 = v9[4];
    __swift_project_boxed_opaque_existential_1Tm(v9, v30);
    (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
    id v32 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setTitle_forState_, v32, 0);

    objc_msgSend(v12, sel_addTarget_action_forControlEvents_, a1, sel_upgradeAction, 64);
    LODWORD(v33) = 1132068864;
    objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 0, v33);
    LODWORD(v34) = 1148846080;
    objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 1, v34);
    objc_msgSend(v12, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB2788]);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  return v12;
}

id sub_1C22CAABC()
{
  return sub_1C22CAADC(&OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___dismissButton, (uint64_t (*)(uint64_t))sub_1C22CAB40);
}

id sub_1C22CAADC(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    double v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

void *sub_1C22CAB40(uint64_t a1)
{
  uint64_t v2 = sub_1C25500A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  double v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v22 - v7;
  sub_1C2550060();
  sub_1C2550000();
  sub_1C21AB51C(0, &qword_1EA2E0330);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  double v9 = (void *)sub_1C25500B0();
  id v10 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  id v11 = objc_msgSend(self, sel_configurationWithFont_, v10);

  id v12 = v11;
  id v13 = (void *)sub_1C254F430();
  id v14 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v13, v12);

  objc_msgSend(v9, sel_setImage_forState_, v14, 0);
  id v15 = objc_msgSend(self, sel_quaternaryLabelColor);
  objc_msgSend(v9, sel_setTintColor_, v15);

  objc_msgSend(v9, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, 1);
  id v16 = objc_msgSend(v9, sel_imageView);
  if (v16)
  {
    double v18 = v16;
    objc_msgSend(v16, sel_setContentMode_, 1);
  }
  LODWORD(v17) = 1148846080;
  objc_msgSend(v9, sel_setContentCompressionResistancePriority_forAxis_, 0, v17);
  LODWORD(v19) = 1148846080;
  objc_msgSend(v9, sel_setContentHuggingPriority_forAxis_, 0, v19);
  LODWORD(v20) = 1148846080;
  objc_msgSend(v9, sel_setContentHuggingPriority_forAxis_, 1, v20);
  objc_msgSend(v9, sel_setContentVerticalAlignment_, 0);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v9, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB2788]);
  objc_msgSend(v9, sel_addTarget_action_forControlEvents_, a1, sel_dismissAction, 64);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v9;
}

id sub_1C22CAFF0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountUpgradeTileView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AccountUpgradeTileView()
{
  return self;
}

void sub_1C22CB0FC(id a1)
{
  if (a1 != (id)1) {
}
  }

id sub_1C22CB10C(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void sub_1C22CB11C()
{
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___clipboardIcon] = 1;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___iconView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___bodyLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___separator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___actionButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___dismissButton] = 0;

  sub_1C25505F0();
  __break(1u);
}

void sub_1C22CB1D4(id a1, char a2)
{
  if (a2) {
}
  }

void sub_1C22CB1E0(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7) {

  }
  else {
    MEMORY[0x1F4181880](a1);
  }
}

uint64_t static UserDomainConceptFeedItemIdentifierFactory.make(for:feedItemKind:categoryKind:listType:sortHint:profile:)(uint64_t a1, unsigned char *a2, unsigned __int8 *a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t v56 = a6;
  uint64_t v54 = a4;
  uint64_t v52 = a1;
  unint64_t v9 = 0xD000000000000013;
  int v53 = a5 & 1;
  int v55 = a7 & 1;
  uint64_t v10 = sub_1C254CB40();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  uint64_t v14 = *a3;
  long long v59 = xmmword_1C2561290;
  id v15 = (void *)sub_1C254CF00();
  v58[0] = 0;
  v58[1] = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  v58[0] = 0xD000000000000016;
  v58[1] = 0x80000001C2578660;
  LOBYTE(v57) = (_BYTE)a2;
  FeedItemKind.rawValue.getter();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v16 = v58[0];
  if (v15)
  {
    strcpy((char *)v58, "[Profile:");
    WORD1(v58[1]) = 0;
    HIDWORD(v58[1]) = -385875968;
    uint64_t v51 = v16;
    id v17 = v15;
    id v18 = objc_msgSend(v17, sel_identifier);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();

    unint64_t v9 = v58[0];
    unint64_t v19 = v58[1];
  }
  else
  {
    unint64_t v19 = 0x80000001C2578680;
  }
  v58[0] = v9;
  v58[1] = v19;
  sub_1C254F5A0();

  swift_bridgeObjectRelease();
  uint64_t v60 = v58[0];
  uint64_t v61 = v58[1];
  v58[0] = 0;
  v58[1] = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v58, "[UDCCategory:");
  HIWORD(v58[1]) = -4864;
  uint64_t v57 = v14;
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v20 = v58[0];
  uint64_t v21 = v58[1];
  uint64_t v62 = v58[0];
  uint64_t v63 = v58[1];
  uint64_t v22 = _s15HealthRecordsUI42UserDomainConceptFeedItemIdentifierFactoryV13makeComponent9conceptIdSSSg10Foundation4UUIDVSg_tFZ_0(v52);
  uint64_t v24 = v23;
  uint64_t v64 = v22;
  uint64_t v65 = v23;
  uint64_t v66 = sub_1C22CBFC4(v54, v53, 0x7473694C4344555BLL);
  uint64_t v67 = v25;
  uint64_t v68 = sub_1C22CBFC4(v56, v55, 0x74726F534344555BLL);
  uint64_t v69 = v26;
  uint64_t v27 = v61;
  if (!v61)
  {
    id v29 = (void *)MEMORY[0x1E4FBC860];
    if (!v21) {
      goto LABEL_15;
    }
    goto LABEL_10;
  }
  uint64_t v28 = v60;
  swift_bridgeObjectRetain();
  id v29 = sub_1C226BFC0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v31 = v29[2];
  unint64_t v30 = v29[3];
  if (v31 >= v30 >> 1) {
    id v29 = sub_1C226BFC0((void *)(v30 > 1), v31 + 1, 1, v29);
  }
  void v29[2] = v31 + 1;
  id v32 = &v29[2 * v31];
  void v32[4] = v28;
  v32[5] = v27;
  if (v21)
  {
LABEL_10:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v29 = sub_1C226BFC0(0, v29[2] + 1, 1, v29);
    }
    unint64_t v34 = v29[2];
    unint64_t v33 = v29[3];
    if (v34 >= v33 >> 1) {
      id v29 = sub_1C226BFC0((void *)(v33 > 1), v34 + 1, 1, v29);
    }
    void v29[2] = v34 + 1;
    id v35 = &v29[2 * v34];
    v35[4] = v20;
    v35[5] = v21;
    uint64_t v22 = v64;
    uint64_t v24 = v65;
  }
LABEL_15:
  if (v24)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v29 = sub_1C226BFC0(0, v29[2] + 1, 1, v29);
    }
    unint64_t v37 = v29[2];
    unint64_t v36 = v29[3];
    if (v37 >= v36 >> 1) {
      id v29 = sub_1C226BFC0((void *)(v36 > 1), v37 + 1, 1, v29);
    }
    void v29[2] = v37 + 1;
    id v38 = &v29[2 * v37];
    v38[4] = v22;
    v38[5] = v24;
  }
  uint64_t v39 = v67;
  if (v67)
  {
    uint64_t v40 = v66;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v29 = sub_1C226BFC0(0, v29[2] + 1, 1, v29);
    }
    unint64_t v42 = v29[2];
    unint64_t v41 = v29[3];
    if (v42 >= v41 >> 1) {
      id v29 = sub_1C226BFC0((void *)(v41 > 1), v42 + 1, 1, v29);
    }
    void v29[2] = v42 + 1;
    id v43 = &v29[2 * v42];
    v43[4] = v40;
    v43[5] = v39;
  }
  uint64_t v44 = v69;
  if (v69)
  {
    uint64_t v45 = v68;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v29 = sub_1C226BFC0(0, v29[2] + 1, 1, v29);
    }
    unint64_t v47 = v29[2];
    unint64_t v46 = v29[3];
    if (v47 >= v46 >> 1) {
      id v29 = sub_1C226BFC0((void *)(v46 > 1), v47 + 1, 1, v29);
    }
    void v29[2] = v47 + 1;
    id v48 = &v29[2 * v47];
    v48[4] = v45;
    v48[5] = v44;
  }
  sub_1C22CC07C(0, (unint64_t *)&qword_1EA2DE090, MEMORY[0x1E4FBB718]);
  swift_arrayDestroy();
  v58[0] = v29;
  sub_1C22CC07C(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
  sub_1C226BF44();
  uint64_t v49 = sub_1C254F390();
  swift_bridgeObjectRelease();
  return v49;
}

unint64_t static UserDomainConceptFeedItemIdentifierFactory.makePrefixComponent(feedItemKind:)()
{
  return 0xD000000000000016;
}

uint64_t static UserDomainConceptFeedItemIdentifierFactory.makeComponent(categoryKind:)()
{
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "[UDCCategory:");
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  return v1[0];
}

uint64_t static UserDomainConceptFeedItemIdentifierFactory.makeComponent(listType:)(uint64_t a1, char a2)
{
  return sub_1C22CBFC4(a1, a2 & 1, 0x7473694C4344555BLL);
}

uint64_t static UserDomainConceptFeedItemIdentifierFactory.makeComponent(sortHint:)(uint64_t a1, char a2)
{
  return sub_1C22CBFC4(a1, a2 & 1, 0x74726F534344555BLL);
}

uint64_t static UserDomainConceptFeedItemIdentifierFactory.make(for:feedItemKind:profile:)(uint64_t a1, uint64_t a2, char *a3)
{
  unint64_t v5 = 0xD000000000000013;
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *a3;
  uint64_t v11 = (void *)sub_1C254CF00();
  unint64_t v32 = 0;
  unint64_t v33 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v32 = 0xD000000000000016;
  unint64_t v33 = 0x80000001C2578660;
  char v31 = v10;
  FeedItemKind.rawValue.getter();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  unint64_t v12 = v32;
  if (v11)
  {
    unint64_t v32 = 0x656C69666F72505BLL;
    unint64_t v33 = 0xE90000000000003ALL;
    v30[1] = v12;
    id v13 = v11;
    v30[2] = a2;
    id v14 = v13;
    id v15 = objc_msgSend(v13, sel_identifier);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();

    unint64_t v5 = v32;
    unint64_t v16 = v33;
  }
  else
  {
    unint64_t v16 = 0x80000001C2578680;
  }
  unint64_t v32 = v5;
  unint64_t v33 = v16;
  sub_1C254F5A0();

  swift_bridgeObjectRelease();
  unint64_t v18 = v32;
  unint64_t v17 = v33;
  unint64_t v32 = 0x3A64494344555BLL;
  unint64_t v33 = 0xE700000000000000;
  sub_1C254F5A0();
  sub_1C254F5A0();
  unint64_t v20 = v32;
  unint64_t v19 = v33;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C226BFC0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v23 = v21[2];
  unint64_t v22 = v21[3];
  unint64_t v24 = v23 + 1;
  if (v23 >= v22 >> 1) {
    uint64_t v21 = sub_1C226BFC0((void *)(v22 > 1), v23 + 1, 1, v21);
  }
  void v21[2] = v24;
  uint64_t v25 = &v21[2 * v23];
  v25[4] = v18;
  v25[5] = v17;
  unint64_t v26 = v21[3];
  swift_bridgeObjectRetain();
  if (v24 >= v26 >> 1) {
    uint64_t v21 = sub_1C226BFC0((void *)(v26 > 1), v23 + 2, 1, v21);
  }
  void v21[2] = v23 + 2;
  uint64_t v27 = &v21[2 * v24];
  void v27[4] = v20;
  v27[5] = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v32 = (unint64_t)v21;
  sub_1C22CC07C(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
  sub_1C226BF44();
  uint64_t v28 = sub_1C254F390();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t static UserDomainConceptFeedItemIdentifierFactory.makeComponent(conceptIdString:)()
{
  return 0x3A64494344555BLL;
}

uint64_t _s15HealthRecordsUI42UserDomainConceptFeedItemIdentifierFactoryV13makeComponent9conceptIdSSSg10Foundation4UUIDVSg_tFZ_0(uint64_t a1)
{
  sub_1C22682A0();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C254CB40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21F4914(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C2268334((uint64_t)v4);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v11[0] = 0x3A64494344555BLL;
    v11[1] = 0xE700000000000000;
    sub_1C254CAF0();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    uint64_t v9 = v11[0];
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

uint64_t sub_1C22CBFC4(uint64_t a1, char a2, uint64_t a3)
{
  if (a2) {
    return 0;
  }
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  return a3;
}

void sub_1C22CC07C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for UserDomainConceptFeedItemIdentifierFactory()
{
  return &type metadata for UserDomainConceptFeedItemIdentifierFactory;
}

unint64_t sub_1C22CC0DC(uint64_t a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 0:
    case 10:
      return result;
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD000000000000025;
      break;
    case 5:
      unint64_t result = 0xD000000000000024;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0x6E4974704F524849;
      break;
    case 11:
      unint64_t result = 0x41646574656C6544;
      break;
    case 12:
      unint64_t result = 0x6465646172677055;
      break;
    default:
      sub_1C25508E0();
      __break(1u);
      JUMPOUT(0x1C22CC254);
  }
  return result;
}

unint64_t OnboardingFunnelSteps.init(rawValue:)(unint64_t a1)
{
  return sub_1C22CC464(a1);
}

unint64_t sub_1C22CC2A8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1C22CC464(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_1C22CC2DC(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  unint64_t result = 0x6D6D75536D6F7246;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x776F72426D6F7246;
      break;
    case 2:
      unint64_t result = 0x666F72506D6F7246;
      break;
    case 3:
      unint64_t result = 0x70416E496D6F7246;
      break;
    case 4:
      unint64_t result = 0x706565446D6F7246;
      break;
    case 5:
      unint64_t result = 0x726168536D6F7246;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      unint64_t result = 0x436E776F6E6B6E55;
      break;
  }
  return result;
}

unint64_t sub_1C22CC464(unint64_t result)
{
  if (result > 0xC) {
    return 0;
  }
  return result;
}

unint64_t sub_1C22CC478()
{
  unint64_t result = qword_1EA2E0338;
  if (!qword_1EA2E0338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0338);
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingFunnelSteps()
{
  return &type metadata for OnboardingFunnelSteps;
}

BOOL static ChartType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ChartType.hash(into:)()
{
  return sub_1C25509D0();
}

uint64_t ChartType.hashValue.getter()
{
  return sub_1C2550A10();
}

void *ChartItem.__allocating_init(chartDefining:chartPoints:overlayViewController:healthStore:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  type metadata accessor for ChartCell();
  sub_1C22CDF80(&qword_1EA2E0340, 255, (void (*)(uint64_t))type metadata accessor for ChartCell);
  v8[10] = sub_1C254D330();
  v8[11] = v9;
  sub_1C21F44EC(a1, (uint64_t)(v8 + 2));
  void v8[7] = a2;
  v8[8] = a3;
  v8[9] = a4;
  return v8;
}

void *ChartItem.init(chartDefining:chartPoints:overlayViewController:healthStore:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ChartCell();
  sub_1C22CDF80(&qword_1EA2E0340, 255, (void (*)(uint64_t))type metadata accessor for ChartCell);
  v4[10] = sub_1C254D330();
  v4[11] = v9;
  sub_1C21F44EC(a1, (uint64_t)(v4 + 2));
  v4[7] = a2;
  v4[8] = a3;
  v4[9] = a4;
  return v4;
}

uint64_t ChartItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C22CC700()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  __swift_project_boxed_opaque_existential_1Tm(v0 + 2, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t ChartItem.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ChartItem.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C22CC830()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1Tm((void *)(*(void *)v0 + 16), v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v1;
}

void *ChartDataSource.__allocating_init(chartDefining:chartType:chartPointPublisher:chartSetSize:healthStore:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  char v12 = a5 & 1;
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1(a1, v13);
  unint64_t v16 = sub_1C22CD8EC(v15, a2, a3, a4, v12, a6, v6, v13, v14);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v16;
}

void *ChartDataSource.init(chartDefining:chartType:chartPointPublisher:chartSetSize:healthStore:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  char v12 = a5 & 1;
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1(a1, v13);
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  unint64_t v19 = sub_1C22CD3D0((uint64_t)v17, a2, a3, a4, v12, a6, v6, v13, v14);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v19;
}

void sub_1C22CCA90(uint64_t *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v8 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    char v11 = a5 & 1;
    id v12 = objc_msgSend(*(id *)(Strong + 88), sel_CHRRoomApplicationItems);
    uint64_t v20 = (uint64_t)&v20;
    v16[2] = v10;
    char v17 = v11;
    uint64_t v18 = MEMORY[0x1F4188790](v12);
    uint64_t v19 = v8;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, void, void (*)(char *), void *))((*MEMORY[0x1E4FBC8C8] & *v13) + 0x60);
    uint64_t v15 = v13;
    v14(v10 + 40, v8, a3, a4 & 1, sub_1C22CDCA8, v16);
    swift_release();
  }
}

void sub_1C22CCBEC(char *a1, uint64_t a2, char a3, void *a4, uint64_t a5)
{
  sub_1C22CDE44(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v30 - v11;
  if (!a1)
  {
    sub_1C244073C(1);
    return;
  }
  char v13 = a3 & 1;
  if (a3)
  {
    uint64_t v16 = a1;
    goto LABEL_9;
  }
  if (!*(void *)&a1[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource]
    && !*(void *)&a1[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource])
  {
    unint64_t v26 = *(void *)&a1[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_seriesDataSources];
    if (v26 >> 62)
    {
      id v29 = a1;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C2550620();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v28 = a1;
    }
    if (v27 > 1) {
      goto LABEL_6;
    }
LABEL_9:
    uint64_t v15 = 0;
    goto LABEL_10;
  }
  uint64_t v14 = a1;
LABEL_6:
  uint64_t v15 = 1;
LABEL_10:
  sub_1C21F4424(a2 + 40, (uint64_t)v32);
  char v31 = v13;
  sub_1C21EA654((uint64_t)&a1[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_latestChartableDate], (uint64_t)v12);
  objc_allocWithZone((Class)type metadata accessor for ChartOverlayViewController());
  char v17 = a1;
  id v18 = a4;
  id v19 = sub_1C241A864((uint64_t)v32, v17, &v31, v15, (uint64_t)v18, (uint64_t)v12);

  sub_1C21ACA3C();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CEB0;
  sub_1C21F4424(a2 + 40, (uint64_t)v32);
  swift_bridgeObjectRetain();
  id v21 = v19;
  id v22 = objc_msgSend(v18, sel_healthStore);
  type metadata accessor for ChartItem();
  unint64_t v23 = (void *)swift_allocObject();
  type metadata accessor for ChartCell();
  sub_1C22CDF80(&qword_1EA2E0340, 255, (void (*)(uint64_t))type metadata accessor for ChartCell);
  v23[10] = sub_1C254D330();
  v23[11] = v24;
  sub_1C21F44EC(v32, (uint64_t)(v23 + 2));
  v23[7] = a5;
  v23[8] = v21;
  v23[9] = v22;
  *(void *)(inited + 32) = v23;
  *(void *)&v32[0] = inited;
  sub_1C254F730();
  unint64_t v25 = *(void *)&v32[0];
  sub_1C254D560();
  sub_1C254D9E0();
  swift_release();
  sub_1C254D560();
  sub_1C22CDE44(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
  sub_1C228ADA8(v25);
  swift_bridgeObjectRelease();
  sub_1C254D990();
  sub_1C254DA10();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C244073C(0);
}

uint64_t sub_1C22CD01C()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);

  return swift_release();
}

uint64_t ChartDataSource.deinit()
{
  if (*(void *)(v0 + 112))
  {
    swift_retain();
    sub_1C254EA00();
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);

  swift_release();
  return v0;
}

uint64_t ChartDataSource.__deallocating_deinit()
{
  if (*(void *)(v0 + 112))
  {
    swift_retain();
    sub_1C254EA00();
    swift_release();
  }
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C22CD154()
{
  uint64_t v0 = sub_1C254D7E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254D7B0();
  uint64_t v4 = sub_1C254D710();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void ChartDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void ChartDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C22CD28C()
{
  return sub_1C254E160();
}

Swift::Void __swiftcall ChartDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C22CD35C()
{
  return sub_1C254FAD0();
}

void *sub_1C22CD3D0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v34 = a3;
  id v35 = a6;
  sub_1C22CDE44(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v16 - 8);
  id v18 = (char *)&v34 - v17;
  sub_1C22CDCB8();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v37 = v19;
  uint64_t v38 = v20;
  MEMORY[0x1F4188790](v19);
  id v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41[3] = a8;
  v41[4] = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v41);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(boxed_opaque_existential_1, a1, a8);
  int v36 = *a2;
  *(void *)(a7 + 112) = 0;
  sub_1C21F4424((uint64_t)v41, a7 + 40);
  id v24 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordChartabilityDeterminer());
  swift_retain();
  *(void *)(a7 + 80) = objc_msgSend(v24, sel_init);
  *(void *)(a7 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B08]), sel_initWithHealthStore_, a6);
  *(void *)(a7 + 96) = a4;
  char v25 = a5 & 1;
  *(unsigned char *)(a7 + 104) = a5 & 1;
  swift_release();
  sub_1C22CDE44(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1C255CD90;
  sub_1C254D990();
  uint64_t v27 = ConceptsDataSource.init(arrangedSections:isHidden:)(v26, 0);
  swift_retain();
  sub_1C244073C(1);
  uint64_t v40 = v34;
  sub_1C22023A4();
  id v39 = (id)sub_1C254FC70();
  uint64_t v28 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v18, 1, 1, v28);
  sub_1C22CDDAC();
  sub_1C22CDF80(&qword_1EA2E0370, 255, (void (*)(uint64_t))sub_1C22CDDAC);
  sub_1C22CDF80((unint64_t *)&qword_1EBB6F4B0, 255, (void (*)(uint64_t))sub_1C22023A4);
  sub_1C254EC70();
  sub_1C2258214((uint64_t)v18);

  uint64_t v29 = swift_allocObject();
  swift_weakInit();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v29;
  *(void *)(v30 + 24) = a4;
  *(unsigned char *)(v30 + 32) = v25;
  *(unsigned char *)(v30 + 33) = v36;
  sub_1C22CDF80(&qword_1EA2E0378, 255, (void (*)(uint64_t))sub_1C22CDCB8);
  uint64_t v31 = v37;
  uint64_t v32 = sub_1C254ECC0();
  swift_release();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v31);
  v27[14] = v32;
  swift_release();
  return v27;
}

void *sub_1C22CD8EC(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v21 = a6;
  uint64_t v14 = *(void *)(a8 - 8);
  char v15 = a5 & 1;
  MEMORY[0x1F4188790](a1);
  uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ChartDataSource();
  uint64_t v18 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a1, a8);
  return sub_1C22CD3D0((uint64_t)v17, a2, a3, a4, v15, v21, v18, a8, a9);
}

unint64_t sub_1C22CDA1C()
{
  unint64_t result = qword_1EA2E0348;
  if (!qword_1EA2E0348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0348);
  }
  return result;
}

uint64_t sub_1C22CDA70(uint64_t a1, uint64_t a2)
{
  return sub_1C22CDF80(&qword_1EA2E0350, a2, (void (*)(uint64_t))type metadata accessor for ChartDataSource);
}

uint64_t type metadata accessor for ChartDataSource()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ChartType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C22CDBA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChartType()
{
  return &type metadata for ChartType;
}

uint64_t type metadata accessor for ChartItem()
{
  return self;
}

uint64_t method lookup function for ChartItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChartItem);
}

uint64_t dispatch thunk of ChartItem.__allocating_init(chartDefining:chartPoints:overlayViewController:healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of ChartItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t method lookup function for ChartDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ChartDataSource);
}

uint64_t dispatch thunk of ChartDataSource.__allocating_init(chartDefining:chartType:chartPointPublisher:chartSetSize:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v5 + 216))(a1, a2, a3, a4, a5 & 1);
}

uint64_t dispatch thunk of ChartDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

void sub_1C22CDCA8(char *a1)
{
  sub_1C22CCBEC(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

void sub_1C22CDCB8()
{
  if (!qword_1EA2E0358)
  {
    sub_1C22CDDAC();
    sub_1C22023A4();
    sub_1C22CDF80(&qword_1EA2E0370, 255, (void (*)(uint64_t))sub_1C22CDDAC);
    sub_1C22CDF80((unint64_t *)&qword_1EBB6F4B0, 255, (void (*)(uint64_t))sub_1C22023A4);
    unint64_t v0 = sub_1C254E9B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0358);
    }
  }
}

void sub_1C22CDDAC()
{
  if (!qword_1EA2E0360)
  {
    sub_1C22CDE44(255, &qword_1EA2E0368, (uint64_t (*)(uint64_t))sub_1C22CDEA8, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C254E9E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0360);
    }
  }
}

void sub_1C22CDE44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C22CDEA8()
{
  unint64_t result = qword_1EA2DF840;
  if (!qword_1EA2DF840)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DF840);
  }
  return result;
}

uint64_t sub_1C22CDF00()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C22CDF38()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 34, 7);
}

void sub_1C22CDF70(uint64_t *a1)
{
  sub_1C22CCA90(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(unsigned char *)(v1 + 33));
}

uint64_t sub_1C22CDF80(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_1C22CDFC8()
{
  return &off_1F1D92C68;
}

id BloodPressureChartConfiguration.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

unint64_t sub_1C22CE034()
{
  return sub_1C22CE03C();
}

unint64_t sub_1C22CE03C()
{
  unint64_t result = qword_1EA2E0380;
  if (!qword_1EA2E0380)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E0380);
  }
  return result;
}

uint64_t sub_1C22CE0C0()
{
  type metadata accessor for BloodPressureDataTransformer();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

id BloodPressureChartConfiguration.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureChartConfiguration();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for BloodPressureChartConfiguration()
{
  return self;
}

id BloodPressureChartConfiguration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureChartConfiguration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for BloodPressureChartConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BloodPressureChartConfiguration);
}

uint64_t dispatch thunk of BloodPressureChartConfiguration.chartControllerClass.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of BloodPressureChartConfiguration.shouldShowOutOfRangeOverlay.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of BloodPressureChartConfiguration.dataTransformer.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t sub_1C22CE26C(void *a1)
{
  uint64_t v3 = v1;
  sub_1C22D9D84(0, &qword_1EA2E0500, (uint64_t (*)(void))sub_1C22D8494, (uint64_t)&_s13FormattedDataV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D8494();
  sub_1C2550A70();
  LOBYTE(v13) = 0;
  sub_1C25507A0();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_1C25507A0();
    LOBYTE(v13) = 2;
    sub_1C2550780();
    uint64_t v13 = *(void *)(v3 + 48);
    char v12 = 3;
    sub_1C22D9C14(0, &qword_1EA2E04E8, (uint64_t)&_s16FormattedSectionVN, MEMORY[0x1E4FBB320]);
    sub_1C22D85D0();
    sub_1C25507D0();
    uint64_t v13 = *(void *)(v3 + 56);
    char v12 = 4;
    sub_1C2270334();
    sub_1C22D8194(&qword_1EA2E0430);
    sub_1C25507D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C22CE504()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6942664F65746164;
      break;
    case 2:
      uint64_t result = 0x676E615265746164;
      break;
    case 3:
      uint64_t result = 0x736E6F6974636573;
      break;
    case 4:
      uint64_t result = 0x72656469766F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C22CE5BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C22D4DD0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C22CE5E4(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1C22CE5F0(uint64_t a1)
{
  unint64_t v2 = sub_1C22D8494();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22CE62C(uint64_t a1)
{
  unint64_t v2 = sub_1C22D8494();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C22CE668@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C22D5008(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1C22CE6AC(void *a1)
{
  return sub_1C22CE26C(a1);
}

uint64_t sub_1C22CE6C4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  _OWORD v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1C22D2A88(v7, v8) & 1;
}

uint64_t sub_1C22CE710(void *a1)
{
  uint64_t v3 = v1;
  sub_1C22D9D84(0, &qword_1EA2E0400, (uint64_t (*)(void))sub_1C22D5928, (uint64_t)&_s16FormattedSectionV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D5928();
  sub_1C2550A70();
  v11[0] = 0;
  sub_1C25507A0();
  if (!v2)
  {
    v11[0] = 1;
    sub_1C25507A0();
    sub_1C22D59D0((uint64_t *)(v3 + 32), (uint64_t)v12);
    sub_1C22D59D0(v12, (uint64_t)v11);
    char v13 = 2;
    sub_1C22D59E8();
    sub_1C25507D0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C22CE8F8()
{
  uint64_t v1 = 0x656C746974;
  if (*v0 != 1) {
    uint64_t v1 = 0x7364726F636572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x64496567616D69;
  }
}

uint64_t sub_1C22CE950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C22D54E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C22CE978(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1C22CE984(uint64_t a1)
{
  unint64_t v2 = sub_1C22D5928();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22CE9C0(uint64_t a1)
{
  unint64_t v2 = sub_1C22D5928();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C22CE9FC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C22D5634(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1C22CEA40(void *a1)
{
  return sub_1C22CE710(a1);
}

uint64_t sub_1C22CEA7C(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)a1 + 25);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(long long *)((char *)a2 + 25);
  return sub_1C22D2B64(&v5, &v7) & 1;
}

uint64_t sub_1C22CEAC8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v46 = a3;
  uint64_t v43 = a2;
  long long v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C22D9D84(0, &qword_1EA2E06E0, (uint64_t (*)(void))sub_1C22D9400, (uint64_t)&_s16FormattedRecordsO18MetadataCodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v40 = (char *)&v30 - v6;
  sub_1C22D9D84(0, &qword_1EA2E06E8, (uint64_t (*)(void))sub_1C22D9454, (uint64_t)&_s16FormattedRecordsO21ThreeValuesCodingKeysON, v4);
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v37 = (char *)&v30 - v8;
  sub_1C22D9D84(0, &qword_1EA2E06F0, (uint64_t (*)(void))sub_1C22D94A8, (uint64_t)&_s16FormattedRecordsO22ValueInRangeCodingKeysON, v4);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v34 = (char *)&v30 - v10;
  sub_1C22D9D84(0, &qword_1EA2E06F8, (uint64_t (*)(void))sub_1C22D94FC, (uint64_t)&_s16FormattedRecordsO15ValueCodingKeysON, v4);
  uint64_t v32 = *(void *)(v11 - 8);
  uint64_t v33 = v11;
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v30 - v12;
  sub_1C22D9D84(0, &qword_1EA2E0700, (uint64_t (*)(void))sub_1C22D9550, (uint64_t)&_s16FormattedRecordsO15PlainCodingKeysON, v4);
  uint64_t v15 = v14;
  uint64_t v31 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v30 - v16;
  sub_1C22D9D84(0, &qword_1EA2E0708, (uint64_t (*)(void))sub_1C22D95A4, (uint64_t)&_s16FormattedRecordsO10CodingKeysON, v4);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v44 = v18;
  uint64_t v45 = v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v30 - v20;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D95A4();
  id v22 = v21;
  sub_1C2550A70();
  switch((char)v46)
  {
    case 1:
      LOBYTE(v47) = 1;
      sub_1C22D94FC();
      uint64_t v23 = v44;
      sub_1C2550770();
      uint64_t v47 = v43;
      sub_1C22D9820(0, &qword_1EA2E06B0, &qword_1EA2DE828, (uint64_t)&_s20FormattedRecordValueVN);
      sub_1C22DA1AC();
      uint64_t v24 = v33;
      sub_1C25507D0();
      char v25 = *(void (**)(char *, uint64_t))(v32 + 8);
      uint64_t v26 = v13;
      goto LABEL_8;
    case 2:
      LOBYTE(v47) = 2;
      sub_1C22D94A8();
      uint64_t v27 = v34;
      uint64_t v23 = v44;
      sub_1C2550770();
      uint64_t v47 = v43;
      sub_1C22D9820(0, &qword_1EA2E0698, &qword_1EA2DE850, (uint64_t)&_s27FormattedRecordValueInRangeVN);
      sub_1C22DA088();
      uint64_t v24 = v36;
      sub_1C25507D0();
      uint64_t v28 = v35;
      goto LABEL_7;
    case 3:
      LOBYTE(v47) = 3;
      sub_1C22D9454();
      uint64_t v27 = v37;
      uint64_t v23 = v44;
      sub_1C2550770();
      uint64_t v47 = v43;
      sub_1C22D9820(0, &qword_1EA2E0680, &qword_1EA2DE7E0, (uint64_t)&_s22FormattedRecord3ValuesVN);
      sub_1C22D9F64();
      uint64_t v24 = v39;
      sub_1C25507D0();
      uint64_t v28 = v38;
      goto LABEL_7;
    case 4:
      LOBYTE(v47) = 4;
      sub_1C22D9400();
      uint64_t v27 = v40;
      uint64_t v23 = v44;
      sub_1C2550770();
      uint64_t v47 = v43;
      sub_1C22D9820(0, &qword_1EA2E0660, &qword_1EA2DE888, (uint64_t)&_s23FormattedRecordMetadataVN);
      sub_1C22D9DEC();
      uint64_t v24 = v42;
      sub_1C25507D0();
      uint64_t v28 = v41;
LABEL_7:
      char v25 = *(void (**)(char *, uint64_t))(v28 + 8);
      uint64_t v26 = v27;
LABEL_8:
      v25(v26, v24);
      break;
    default:
      LOBYTE(v47) = 0;
      sub_1C22D9550();
      uint64_t v23 = v44;
      sub_1C2550770();
      uint64_t v47 = v43;
      sub_1C22D9820(0, &qword_1EA2E06C8, &qword_1EA2DE808, (uint64_t)&_s15FormattedRecordVN);
      sub_1C22DA2D0();
      sub_1C25507D0();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v15);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v22, v23);
}

uint64_t sub_1C22CF260()
{
  uint64_t result = 0x6E69616C70;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65756C6176;
      break;
    case 2:
      uint64_t result = 0x526E4965756C6176;
      break;
    case 3:
      uint64_t result = 0x6C61566565726874;
      break;
    case 4:
      uint64_t result = 0x617461646174656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C22CF310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C22D5A3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C22CF338(uint64_t a1)
{
  unint64_t v2 = sub_1C22D95A4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22CF374(uint64_t a1)
{
  unint64_t v2 = sub_1C22D95A4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C22CF3B8()
{
  return 12383;
}

void sub_1C22CF3C8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1C22CF3D4(uint64_t a1)
{
  unint64_t v2 = sub_1C22D9400();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22CF410(uint64_t a1)
{
  unint64_t v2 = sub_1C22D9400();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C22CF44C(uint64_t a1)
{
  unint64_t v2 = sub_1C22D9550();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22CF488(uint64_t a1)
{
  unint64_t v2 = sub_1C22D9550();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C22CF4C4(uint64_t a1)
{
  unint64_t v2 = sub_1C22D9454();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22CF500(uint64_t a1)
{
  unint64_t v2 = sub_1C22D9454();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C22CF53C(uint64_t a1)
{
  unint64_t v2 = sub_1C22D94FC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22CF578(uint64_t a1)
{
  unint64_t v2 = sub_1C22D94FC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C22CF5B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C2550870();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C22CF634(uint64_t a1)
{
  unint64_t v2 = sub_1C22D94A8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22CF670(uint64_t a1)
{
  unint64_t v2 = sub_1C22D94A8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C22CF6AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1C22D5C7C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_1C22CF6DC(void *a1)
{
  return sub_1C22CEAC8(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t sub_1C22CF6FC(uint64_t a1, uint64_t a2)
{
  return sub_1C22D29E8(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_1C22CF714(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v12[0] = a4;
  v12[1] = a3;
  sub_1C22D9D84(0, &qword_1EA2E04B8, (uint64_t (*)(void))sub_1C22D83EC, (uint64_t)&_s22FormattedRecordKeyDateV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v12 - v9;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D83EC();
  sub_1C2550A70();
  char v15 = 0;
  sub_1C25507C0();
  if (!v4)
  {
    char v14 = 1;
    sub_1C25507C0();
    char v13 = 2;
    sub_1C25507C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C22CF8D8()
{
  uint64_t v1 = 0x68746E6F6DLL;
  if (*v0 != 1) {
    uint64_t v1 = 7954788;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1918985593;
  }
}

uint64_t sub_1C22CF920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C22D6754(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C22CF948(uint64_t a1)
{
  unint64_t v2 = sub_1C22D83EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22CF984(uint64_t a1)
{
  unint64_t v2 = sub_1C22D83EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C22CF9C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C22D6884(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1C22CF9F0(void *a1)
{
  return sub_1C22CF714(a1, *v1, v1[1], v1[2]);
}

BOOL sub_1C22CFA10(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_1C22CFA40(void *a1, void *a2)
{
  if (*a1 < *a2) {
    return 1;
  }
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  BOOL v6 = v3 == v4 && a1[2] < a2[2];
  unsigned int v7 = v3 < v4 || v6;
  if (*a1 == *a2) {
    return v7;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C22CFA84(void *a1, void *a2)
{
  if (*a2 < *a1) {
    return 0;
  }
  if (*a2 != *a1) {
    return 1;
  }
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  if (v5 == v3)
  {
    BOOL v8 = __OFSUB__(v6, v4);
    BOOL v7 = v6 - v4 < 0;
  }
  else
  {
    BOOL v8 = 0;
    BOOL v7 = 0;
  }
  BOOL v9 = v7 == v8;
  return v5 >= v3 && v9;
}

uint64_t sub_1C22CFAC8(void *a1, void *a2)
{
  if (*a1 < *a2) {
    return 0;
  }
  if (*a1 != *a2) {
    return 1;
  }
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  if (v3 == v5)
  {
    BOOL v8 = __OFSUB__(v4, v6);
    BOOL v7 = v4 - v6 < 0;
  }
  else
  {
    BOOL v8 = 0;
    BOOL v7 = 0;
  }
  BOOL v9 = v7 == v8;
  return v3 >= v5 && v9;
}

uint64_t sub_1C22CFB0C(void *a1, void *a2)
{
  if (*a2 < *a1) {
    return 1;
  }
  uint64_t v3 = a1[1];
  uint64_t v4 = a2[1];
  BOOL v6 = v4 == v3 && a2[2] < a1[2];
  unsigned int v7 = v4 < v3 || v6;
  if (*a2 == *a1) {
    return v7;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C22CFB50(uint64_t a1, uint64_t a2)
{
  sub_1C22CFDE4();
  MEMORY[0x1F4188790](v5 - 8);
  unsigned int v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  uint64_t v8 = v2[1];
  uint64_t v10 = v2[2];
  int v11 = *((unsigned __int8 *)v2 + 24);
  sub_1C22CFE3C(a1, (uint64_t)v24, &qword_1EA2DF7A0, (uint64_t)&_s22FormattedRecordKeyDateVN);
  if (v11 == 1)
  {
    sub_1C22CFE3C((uint64_t)v24, (uint64_t)&v25, &qword_1EA2DF7A0, (uint64_t)&_s22FormattedRecordKeyDateVN);
    if (v28 == 1) {
      goto LABEL_3;
    }
    return 1;
  }
  sub_1C22CFE3C((uint64_t)v24, (uint64_t)&v25, &qword_1EA2DF7A0, (uint64_t)&_s22FormattedRecordKeyDateVN);
  if (v28) {
    return -1;
  }
  if (v9 < v25) {
    return 1;
  }
  if (v9 != v25)
  {
    if (v25 < v9) {
      return -1;
    }
    goto LABEL_3;
  }
  if (v8 < v26 || v8 == v26 && v10 < v27) {
    return 1;
  }
  BOOL v19 = v8 == v26 && v27 < v10;
  uint64_t v16 = -1;
  if (v26 >= v8 && !v19)
  {
LABEL_3:
    uint64_t v13 = v2[4];
    uint64_t v12 = v2[5];
    sub_1C22CFE3C(a1 + 32, (uint64_t)v23, (unint64_t *)&qword_1EA2DE090, MEMORY[0x1E4FBB1A0]);
    if (!v12)
    {
      sub_1C22CFE3C((uint64_t)v23, (uint64_t)&v29, (unint64_t *)&qword_1EA2DE090, MEMORY[0x1E4FBB1A0]);
      return *((void *)&v29 + 1) != 0;
    }
    sub_1C22CFE3C((uint64_t)v23, (uint64_t)&v29, (unint64_t *)&qword_1EA2DE090, MEMORY[0x1E4FBB1A0]);
    if (*((void *)&v29 + 1))
    {
      long long v20 = v29;
      uint64_t v21 = v13;
      uint64_t v22 = v12;
      uint64_t v14 = sub_1C254CBD0();
      uint64_t v15 = *(void *)(v14 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v7, a2, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
      sub_1C2218914();
      uint64_t v16 = sub_1C25501B0();
      sub_1C2269E88((uint64_t)v7);
      return v16;
    }
    return -1;
  }
  return v16;
}

void sub_1C22CFDE4()
{
  if (!qword_1EA2E2D90)
  {
    sub_1C254CBD0();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2D90);
    }
  }
}

uint64_t sub_1C22CFE3C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C22D9C14(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C22CFEBC(void *a1)
{
  uint64_t v3 = v1;
  sub_1C22D9D84(0, &qword_1EA2E0498, (uint64_t (*)(void))sub_1C22D82F0, (uint64_t)&_s18FormattedRecordKeyV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D82F0();
  sub_1C2550A70();
  sub_1C22CFE3C(v3, (uint64_t)v12, &qword_1EA2DF7A0, (uint64_t)&_s22FormattedRecordKeyDateVN);
  sub_1C22CFE3C((uint64_t)v12, (uint64_t)v11, &qword_1EA2DF7A0, (uint64_t)&_s22FormattedRecordKeyDateVN);
  v12[47] = 0;
  sub_1C22D8398();
  sub_1C2550790();
  if (!v2)
  {
    v11[0] = 1;
    sub_1C2550780();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C22D0098()
{
  sub_1C25509C0();
  sub_1C22CFE3C(v0, (uint64_t)v2, &qword_1EA2DF7A0, (uint64_t)&_s22FormattedRecordKeyDateVN);
  sub_1C22CFE3C((uint64_t)v2, (uint64_t)&v3, &qword_1EA2DF7A0, (uint64_t)&_s22FormattedRecordKeyDateVN);
  if ((v4 & 1) == 0)
  {
    sub_1C25509E0();
    sub_1C25509D0();
    sub_1C25509D0();
    sub_1C25509D0();
    if (*(void *)(v0 + 40)) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1C25509E0();
    return sub_1C2550A10();
  }
  sub_1C25509E0();
  if (!*(void *)(v0 + 40)) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1C25509E0();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  sub_1C22841AC(v0);
  return sub_1C2550A10();
}

uint64_t sub_1C22D01B8()
{
  if (*v0) {
    return 0x72656469766F7270;
  }
  else {
    return 1702125924;
  }
}

uint64_t sub_1C22D01EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C22D6A88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C22D0214(uint64_t a1)
{
  unint64_t v2 = sub_1C22D82F0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22D0250(uint64_t a1)
{
  unint64_t v2 = sub_1C22D82F0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C22D028C()
{
  return sub_1C22D0098();
}

uint64_t sub_1C22D02C8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if ((*(unsigned char *)(v0 + 24) & 1) == 0)
  {
    sub_1C25509E0();
    sub_1C25509D0();
    sub_1C25509D0();
    sub_1C25509D0();
    if (v1) {
      goto LABEL_3;
    }
    return sub_1C25509E0();
  }
  sub_1C25509E0();
  if (!v1) {
    return sub_1C25509E0();
  }
LABEL_3:
  sub_1C25509E0();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C22D0390()
{
  char v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40);
  sub_1C25509C0();
  if ((v1 & 1) == 0)
  {
    sub_1C25509E0();
    sub_1C25509D0();
    sub_1C25509D0();
    sub_1C25509D0();
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1C25509E0();
    return sub_1C2550A10();
  }
  sub_1C25509E0();
  if (!v2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1C25509E0();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  return sub_1C2550A10();
}

BOOL sub_1C22D046C(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  _OWORD v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  _OWORD v8[2] = v5;
  return sub_1C22D2D34((uint64_t)v7, (uint64_t)v8);
}

double sub_1C22D04B4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C22D6B6C(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1C22D04F8(void *a1)
{
  return sub_1C22CFEBC(a1);
}

uint64_t sub_1C22D0534(void *a1)
{
  sub_1C22D9D84(0, &qword_1EA2E0478, (uint64_t (*)(void))sub_1C22D829C, (uint64_t)&_s20FormattedRecordValueV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D829C();
  sub_1C2550A70();
  char v12 = 0;
  sub_1C25507A0();
  if (!v1)
  {
    char v11 = 1;
    sub_1C25507A0();
    char v10 = 2;
    sub_1C25507A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C22D06F0()
{
  return 0x656C746974;
}

uint64_t sub_1C22D0704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C2550870();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C22D0794(uint64_t a1)
{
  unint64_t v2 = sub_1C22D8440();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22D07D0(uint64_t a1)
{
  unint64_t v2 = sub_1C22D8440();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C22D080C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1C22D9D84(0, &qword_1EA2E04C0, (uint64_t (*)(void))sub_1C22D8440, (uint64_t)&_s15FormattedRecordV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D8440();
  sub_1C2550A50();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v9 = v15;
  uint64_t v10 = sub_1C2550710();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  *uint64_t v9 = v10;
  v9[1] = v12;
  return result;
}

uint64_t sub_1C22D09BC(void *a1)
{
  sub_1C22D9D84(0, &qword_1EA2E04D0, (uint64_t (*)(void))sub_1C22D8440, (uint64_t)&_s15FormattedRecordV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D8440();
  sub_1C2550A70();
  sub_1C25507A0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C22D0B24(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C2550870();
  }
}

uint64_t sub_1C22D0B54()
{
  uint64_t v1 = 0x65756C6176;
  if (*v0 != 1) {
    uint64_t v1 = 1953066613;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_1C22D0BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C22D6D94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C22D0BC8(uint64_t a1)
{
  unint64_t v2 = sub_1C22D829C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22D0C04(uint64_t a1)
{
  unint64_t v2 = sub_1C22D829C();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C22D0C40@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C22D6ECC(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1C22D0C84(void *a1)
{
  return sub_1C22D0534(a1);
}

uint64_t sub_1C22D0C9C(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  _OWORD v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  _OWORD v8[2] = v5;
  return sub_1C22D2DCC(v7, v8) & 1;
}

uint64_t sub_1C22D0CE4(long long *a1, uint64_t a2)
{
  sub_1C22CFDE4();
  MEMORY[0x1F4188790](v5 - 8);
  long long v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254F580();
  uint64_t result = sub_1C254F580();
  if (__OFADD__(v8, result))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + result < 15) {
    goto LABEL_5;
  }
  uint64_t v10 = *((void *)v2 + 7);
  if ((v10 & 0x2000000000000000) != 0)
  {
    if ((v10 & 0xF00000000000000) != 0) {
      goto LABEL_5;
    }
  }
  else if ((v2[3] & 0xFFFFFFFFFFFFLL) != 0)
  {
LABEL_5:
    int v11 = 0;
    goto LABEL_6;
  }
  int v11 = v2[4] & 1;
LABEL_6:
  uint64_t v12 = sub_1C254F580();
  uint64_t result = sub_1C254F580();
  if (!__OFADD__(v12, result))
  {
    if (v12 + result < 15) {
      goto LABEL_10;
    }
    uint64_t v13 = *((void *)a1 + 7);
    if ((v13 & 0x2000000000000000) != 0)
    {
      if ((v13 & 0xF00000000000000) != 0)
      {
LABEL_10:
        if (v11) {
          return 1;
        }
LABEL_19:
        long long v15 = *v2;
        long long v16 = *v2;
        long long v20 = *a1;
        long long v21 = v15;
        v19[0] = *a1;
        v19[1] = v16;
        uint64_t v17 = sub_1C254CBD0();
        uint64_t v18 = *(void *)(v17 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v7, a2, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v7, 0, 1, v17);
        sub_1C21F10AC((uint64_t)&v21);
        sub_1C21F10AC((uint64_t)&v20);
        sub_1C2218914();
        uint64_t v14 = sub_1C25501B0();
        sub_1C2269E88((uint64_t)v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    else if ((a1[3] & 0xFFFFFFFFFFFFLL) != 0)
    {
      goto LABEL_10;
    }
    if (v11)
    {
      if ((a1[4] & 1) == 0) {
        return 1;
      }
    }
    else if (a1[4])
    {
      return -1;
    }
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1C22D0F1C(void *a1)
{
  sub_1C22D9D84(0, &qword_1EA2E0460, (uint64_t (*)(void))sub_1C22D8248, (uint64_t)&_s27FormattedRecordValueInRangeV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  long long v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D8248();
  sub_1C2550A70();
  char v14 = 0;
  sub_1C25507A0();
  if (!v1)
  {
    char v13 = 1;
    sub_1C25507A0();
    char v12 = 2;
    sub_1C25507A0();
    char v11 = 3;
    sub_1C25507A0();
    char v10 = 4;
    sub_1C25507B0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C22D1128()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65756C6176;
      break;
    case 2:
      uint64_t result = 1953066613;
      break;
    case 3:
      uint64_t result = 0x65676E6172;
      break;
    case 4:
      uint64_t result = 0x65676E61526E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C22D11B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C22D71A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C22D11E0(uint64_t a1)
{
  unint64_t v2 = sub_1C22D8248();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22D121C(uint64_t a1)
{
  unint64_t v2 = sub_1C22D8248();
  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1C22D1258@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C22D7398(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(unsigned char *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1C22D12AC(void *a1)
{
  return sub_1C22D0F1C(a1);
}

uint64_t sub_1C22D12C4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v7[2] = *(_OWORD *)(a1 + 32);
  _OWORD v7[3] = v2;
  char v8 = *(unsigned char *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  void v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  char v10 = *(unsigned char *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1C22D2F94((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t sub_1C22D1320(void *a1)
{
  sub_1C22D9D84(0, &qword_1EA2E0448, (uint64_t (*)(void))sub_1C22D81F4, (uint64_t)&_s22FormattedRecord3ValuesV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D81F4();
  sub_1C2550A70();
  char v14 = 0;
  sub_1C25507A0();
  if (!v1)
  {
    char v13 = 1;
    sub_1C25507A0();
    char v12 = 2;
    sub_1C25507A0();
    char v11 = 3;
    sub_1C25507A0();
    char v10 = 4;
    sub_1C2550780();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C22D152C()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x3165756C6176;
      break;
    case 2:
      uint64_t result = 0x3265756C6176;
      break;
    case 3:
      uint64_t result = 0x3365756C6176;
      break;
    case 4:
      uint64_t result = 0x72656469766F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C22D15C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C22D77AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C22D15F0(uint64_t a1)
{
  unint64_t v2 = sub_1C22D81F4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22D162C(uint64_t a1)
{
  unint64_t v2 = sub_1C22D81F4();
  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1C22D1668@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C22D79AC(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1C22D16B4(void *a1)
{
  return sub_1C22D1320(a1);
}

uint64_t sub_1C22D16CC(_OWORD *a1, long long *a2)
{
  long long v2 = a1[3];
  _OWORD v8[2] = a1[2];
  _OWORD v8[3] = v2;
  long long v3 = a1[4];
  long long v4 = a1[1];
  v8[0] = *a1;
  v8[1] = v4;
  long long v5 = a2[3];
  void v9[2] = a2[2];
  v9[3] = v5;
  _OWORD v9[4] = a2[4];
  long long v6 = *a2;
  v9[1] = a2[1];
  _OWORD v8[4] = v3;
  v9[0] = v6;
  return sub_1C22D2E80(v8, v9) & 1;
}

uint64_t sub_1C22D1728(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a4;
  sub_1C22D9D84(0, &qword_1EA2E0428, (uint64_t (*)(void))sub_1C22D8140, (uint64_t)&_s23FormattedRecordMetadataV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D8140();
  sub_1C2550A70();
  char v17 = 0;
  uint64_t v10 = v14;
  sub_1C25507A0();
  if (!v10)
  {
    uint64_t v15 = v13;
    char v16 = 1;
    sub_1C2270334();
    sub_1C22D8194(&qword_1EA2E0430);
    sub_1C25507D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C22D190C()
{
  if (*v0) {
    return 0x617461646174656DLL;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_1C22D1944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C22D7DD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C22D196C(uint64_t a1)
{
  unint64_t v2 = sub_1C22D8140();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22D19A8(uint64_t a1)
{
  unint64_t v2 = sub_1C22D8140();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C22D19E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C22D7EC0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1C22D1A14(void *a1)
{
  return sub_1C22D1728(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1C22D1A34(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C2550870() & 1) == 0) {
    return 0;
  }
  return sub_1C22D1AA8(v2, v3);
}

uint64_t sub_1C22D1AA8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    uint64_t v14 = 16 * v10;
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1C21A6470(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_1C2550870();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C22D1CB0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_23:
    uint64_t v15 = *(void *)(v3 + 48) + 48 * v11;
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v17 = *(unsigned __int8 *)(v15 + 24);
    uint64_t v19 = *(void *)(v15 + 32);
    uint64_t v18 = *(void *)(v15 + 40);
    uint64_t v20 = *(void **)(*(void *)(v3 + 56) + 8 * v11);
    long long v32 = *(_OWORD *)v15;
    uint64_t v33 = v16;
    uint64_t v34 = v17;
    uint64_t v35 = v19;
    uint64_t v36 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1C2457190((uint64_t *)&v32);
    char v23 = v22;
    sub_1C22841AC((uint64_t)&v32);
    if ((v23 & 1) == 0) {
      goto LABEL_48;
    }
    uint64_t v24 = *(void **)(*(void *)(a2 + 56) + 8 * v21);
    uint64_t v25 = v24[2];
    if (v25 != v20[2]) {
      goto LABEL_48;
    }
    if (v25) {
      BOOL v26 = v24 == v20;
    }
    else {
      BOOL v26 = 1;
    }
    if (!v26)
    {
      BOOL v27 = v24[4] == v20[4] && v24[5] == v20[5];
      if (!v27 && (sub_1C2550870() & 1) == 0) {
        goto LABEL_48;
      }
      if (v25 != 1)
      {
        BOOL v28 = v24[6] == v20[6] && v24[7] == v20[7];
        if (!v28 && (sub_1C2550870() & 1) == 0) {
          goto LABEL_48;
        }
        uint64_t v29 = v25 - 2;
        if (v29)
        {
          uint64_t v30 = 0;
          while (1)
          {
            BOOL v31 = v24[v30 + 8] == v20[v30 + 8] && v24[v30 + 9] == v20[v30 + 9];
            if (!v31 && (sub_1C2550870() & 1) == 0) {
              break;
            }
            v30 += 2;
            if (!--v29) {
              goto LABEL_6;
            }
          }
LABEL_48:
          swift_bridgeObjectRelease();
          return 0;
        }
      }
    }
LABEL_6:
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1C22D1F28(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v41 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v42 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v43 = result;
  while (v7)
  {
    unint64_t v8 = __clz(__rbit64(v7));
    uint64_t v9 = (v7 - 1) & v7;
    unint64_t v10 = v8 | (v4 << 6);
LABEL_23:
    uint64_t v14 = *(void *)(v3 + 48) + 48 * v10;
    uint64_t v15 = *(void *)(v14 + 16);
    uint64_t v16 = *(unsigned __int8 *)(v14 + 24);
    uint64_t v18 = *(void *)(v14 + 32);
    uint64_t v17 = *(void *)(v14 + 40);
    uint64_t v19 = *(void *)(*(void *)(v3 + 56) + 8 * v10);
    long long v49 = *(_OWORD *)v14;
    uint64_t v50 = v15;
    uint64_t v51 = v16;
    uint64_t v52 = v18;
    uint64_t v53 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_1C2457190((uint64_t *)&v49);
    char v22 = v21;
    sub_1C22841AC((uint64_t)&v49);
    if ((v22 & 1) == 0) {
      goto LABEL_48;
    }
    uint64_t v23 = *(void *)(*(void *)(v2 + 56) + 8 * v20);
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24 != *(void *)(v19 + 16)) {
      goto LABEL_48;
    }
    unint64_t v45 = v9;
    int64_t v46 = v4;
    if (v24) {
      BOOL v25 = v23 == v19;
    }
    else {
      BOOL v25 = 1;
    }
    if (!v25)
    {
      uint64_t v26 = 0;
      uint64_t v47 = v23;
      uint64_t v48 = v19;
      while (1)
      {
        uint64_t v27 = *(void *)(v23 + v26 + 48);
        uint64_t v28 = *(void *)(v23 + v26 + 56);
        uint64_t v29 = *(void *)(v23 + v26 + 64);
        uint64_t v30 = *(void *)(v23 + v26 + 72);
        BOOL v31 = (void *)(v19 + v26);
        uint64_t v32 = *(void *)(v19 + v26 + 32);
        uint64_t v33 = *(void *)(v19 + v26 + 40);
        uint64_t v35 = *(void *)(v19 + v26 + 48);
        uint64_t v34 = v31[7];
        uint64_t v36 = v31[8];
        uint64_t v37 = v31[9];
        BOOL v38 = *(void *)(v23 + v26 + 32) == v32 && *(void *)(v23 + v26 + 40) == v33;
        if (!v38 && (sub_1C2550870() & 1) == 0) {
          break;
        }
        BOOL v39 = v27 == v35 && v28 == v34;
        if (!v39 && (sub_1C2550870() & 1) == 0) {
          break;
        }
        BOOL v40 = v29 == v36 && v30 == v37;
        if (!v40 && (sub_1C2550870() & 1) == 0) {
          break;
        }
        v26 += 48;
        --v24;
        uint64_t v23 = v47;
        uint64_t v19 = v48;
        if (!v24) {
          goto LABEL_6;
        }
      }
LABEL_48:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_6:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v3 = v43;
    uint64_t v2 = a2;
    unint64_t v7 = v45;
    int64_t v4 = v46;
  }
  int64_t v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v11 >= v42) {
    return 1;
  }
  unint64_t v12 = *(void *)(v41 + 8 * v11);
  ++v4;
  if (v12) {
    goto LABEL_22;
  }
  int64_t v4 = v11 + 1;
  if (v11 + 1 >= v42) {
    return 1;
  }
  unint64_t v12 = *(void *)(v41 + 8 * v4);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v4 = v11 + 2;
  if (v11 + 2 >= v42) {
    return 1;
  }
  unint64_t v12 = *(void *)(v41 + 8 * v4);
  if (v12)
  {
LABEL_22:
    uint64_t v9 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_23;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v42) {
    return 1;
  }
  unint64_t v12 = *(void *)(v41 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v42) {
      return 1;
    }
    unint64_t v12 = *(void *)(v41 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_1C22D21F8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v40 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v41 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v38 = result;
  while (v7)
  {
    unint64_t v8 = __clz(__rbit64(v7));
    uint64_t v9 = (v7 - 1) & v7;
    unint64_t v10 = v8 | (v4 << 6);
LABEL_23:
    uint64_t v14 = *(void *)(v3 + 48) + 48 * v10;
    uint64_t v15 = *(void *)(v14 + 16);
    uint64_t v16 = *(unsigned __int8 *)(v14 + 24);
    uint64_t v18 = *(void *)(v14 + 32);
    uint64_t v17 = *(void *)(v14 + 40);
    uint64_t v19 = *(void *)(*(void *)(v3 + 56) + 8 * v10);
    long long v52 = *(_OWORD *)v14;
    uint64_t v53 = v15;
    uint64_t v54 = v16;
    uint64_t v55 = v18;
    uint64_t v56 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_1C2457190((uint64_t *)&v52);
    char v22 = v21;
    sub_1C22841AC((uint64_t)&v52);
    if ((v22 & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v23 = *(void *)(*(void *)(v2 + 56) + 8 * v20);
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24 != *(void *)(v19 + 16)) {
      goto LABEL_46;
    }
    unint64_t v42 = v9;
    int64_t v43 = v4;
    if (v24) {
      BOOL v25 = v23 == v19;
    }
    else {
      BOOL v25 = 1;
    }
    if (!v25)
    {
      uint64_t v26 = 0;
      uint64_t v44 = *(void *)(*(void *)(v2 + 56) + 8 * v20);
      uint64_t v45 = v19;
      while (1)
      {
        uint64_t v27 = *(void *)(v23 + v26 + 48);
        uint64_t v28 = *(void *)(v23 + v26 + 56);
        uint64_t v29 = *(void *)(v23 + v26 + 64);
        uint64_t v30 = *(void *)(v23 + v26 + 72);
        uint64_t v50 = *(void *)(v23 + v26 + 88);
        uint64_t v51 = *(void *)(v23 + v26 + 80);
        uint64_t v31 = v19 + v26;
        uint64_t v32 = *(void *)(v19 + v26 + 32);
        uint64_t v33 = *(void *)(v19 + v26 + 40);
        uint64_t v34 = *(void *)(v19 + v26 + 48);
        uint64_t v35 = *(void *)(v19 + v26 + 56);
        uint64_t v37 = *(void *)(v19 + v26 + 64);
        uint64_t v36 = *(void *)(v31 + 72);
        uint64_t v48 = *(void *)(v31 + 88);
        uint64_t v49 = *(void *)(v31 + 80);
        int v46 = *(unsigned __int8 *)(v31 + 96);
        int v47 = *(unsigned __int8 *)(v23 + v26 + 96);
        if ((*(void *)(v23 + v26 + 32) != v32 || *(void *)(v23 + v26 + 40) != v33) && (sub_1C2550870() & 1) == 0) {
          break;
        }
        if ((v27 != v34 || v28 != v35) && (sub_1C2550870() & 1) == 0) {
          break;
        }
        if ((v29 != v37 || v30 != v36) && (sub_1C2550870() & 1) == 0) {
          break;
        }
        if ((v51 != v49 || v50 != v48) && (sub_1C2550870() & 1) == 0) {
          break;
        }
        uint64_t v19 = v45;
        if (v47 != v46) {
          break;
        }
        v26 += 72;
        --v24;
        uint64_t v23 = v44;
        if (!v24) {
          goto LABEL_6;
        }
      }
LABEL_46:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_6:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v3 = v38;
    uint64_t v2 = a2;
    unint64_t v7 = v42;
    int64_t v4 = v43;
  }
  int64_t v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v11 >= v41) {
    return 1;
  }
  unint64_t v12 = *(void *)(v40 + 8 * v11);
  ++v4;
  if (v12) {
    goto LABEL_22;
  }
  int64_t v4 = v11 + 1;
  if (v11 + 1 >= v41) {
    return 1;
  }
  unint64_t v12 = *(void *)(v40 + 8 * v4);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v4 = v11 + 2;
  if (v11 + 2 >= v41) {
    return 1;
  }
  unint64_t v12 = *(void *)(v40 + 8 * v4);
  if (v12)
  {
LABEL_22:
    uint64_t v9 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_23;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v41) {
    return 1;
  }
  unint64_t v12 = *(void *)(v40 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v41) {
      return 1;
    }
    unint64_t v12 = *(void *)(v40 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1C22D2530(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = *(void *)(v3 + 48) + 48 * v11;
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v17 = *(unsigned __int8 *)(v15 + 24);
    uint64_t v19 = *(void *)(v15 + 32);
    uint64_t v18 = *(void *)(v15 + 40);
    uint64_t v20 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
    long long v25 = *(_OWORD *)v15;
    uint64_t v26 = v16;
    uint64_t v27 = v17;
    uint64_t v28 = v19;
    uint64_t v29 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1C2457190((uint64_t *)&v25);
    char v23 = v22;
    sub_1C22841AC((uint64_t)&v25);
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    char v24 = sub_1C22AB0E0(*(void *)(*(void *)(a2 + 56) + 8 * v21), v20);
    uint64_t result = swift_bridgeObjectRelease();
    if ((v24 & 1) == 0) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C22D2708(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v35 = result + 64;
  uint64_t v36 = result;
  int64_t v34 = v9;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    uint64_t v15 = *(void *)(v3 + 48) + 48 * i;
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v17 = *(unsigned __int8 *)(v15 + 24);
    uint64_t v19 = *(void *)(v15 + 32);
    uint64_t v18 = *(void *)(v15 + 40);
    uint64_t v20 = *(void *)(*(void *)(v3 + 56) + 8 * i);
    long long v39 = *(_OWORD *)v15;
    uint64_t v40 = v16;
    uint64_t v41 = v17;
    uint64_t v42 = v19;
    uint64_t v43 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1C2457190((uint64_t *)&v39);
    char v23 = v22;
    sub_1C22841AC((uint64_t)&v39);
    if ((v23 & 1) == 0
      || (v24 = *(void *)(*(void *)(v2 + 56) + 8 * v21), uint64_t v25 = *(void *)(v24 + 16), v25 != *(void *)(v20 + 16)))
    {
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v25) {
      BOOL v26 = v24 == v20;
    }
    else {
      BOOL v26 = 1;
    }
    if (!v26)
    {
      unint64_t v37 = v8;
      int64_t v38 = v4;
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v27 = 0;
      unint64_t v28 = 0;
      while (v28 < *(void *)(v20 + 16))
      {
        uint64_t v29 = *(void *)(v24 + v27 + 48);
        uint64_t v30 = *(void *)(v20 + v27 + 48);
        BOOL v31 = *(void *)(v24 + v27 + 32) == *(void *)(v20 + v27 + 32)
           && *(void *)(v24 + v27 + 40) == *(void *)(v20 + v27 + 40);
        if (!v31 && (sub_1C2550870() & 1) == 0) {
          goto LABEL_40;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v32 = sub_1C22D1AA8(v29, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if ((v32 & 1) == 0)
        {
LABEL_40:
          swift_bridgeObjectRelease();
          goto LABEL_41;
        }
        ++v28;
        v27 += 24;
        if (v25 == v28)
        {
          swift_bridgeObjectRelease();
          uint64_t v2 = a2;
          int64_t v9 = v34;
          uint64_t v5 = v35;
          uint64_t v3 = v36;
          unint64_t v8 = v37;
          int64_t v4 = v38;
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
LABEL_28:
    uint64_t result = swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_44;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1C22D29E8(uint64_t a1, char a2, uint64_t a3, char a4)
{
  switch(a2)
  {
    case 1:
      if (a4 != 1) {
        goto LABEL_12;
      }
      uint64_t result = sub_1C22D1F28(a1, a3);
      break;
    case 2:
      if (a4 != 2) {
        goto LABEL_12;
      }
      uint64_t result = sub_1C22D21F8(a1, a3);
      break;
    case 3:
      if (a4 != 3) {
        goto LABEL_12;
      }
      uint64_t result = sub_1C22D2530(a1, a3);
      break;
    case 4:
      if (a4 != 4) {
        goto LABEL_12;
      }
      uint64_t result = sub_1C22D2708(a1, a3);
      break;
    default:
      if (a4) {
LABEL_12:
      }
        uint64_t result = 0;
      else {
        uint64_t result = sub_1C22D1CB0(a1, a3);
      }
      break;
  }
  return result;
}

uint64_t sub_1C22D2A88(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C2550870() & 1) == 0) {
    return 0;
  }
  BOOL v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (sub_1C2550870() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = a1[5];
  uint64_t v7 = a2[5];
  if (v6)
  {
    if (!v7 || (a1[4] != a2[4] || v6 != v7) && (sub_1C2550870() & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if ((sub_1C22AADA8(a1[6], a2[6]) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = a1[7];
  uint64_t v9 = a2[7];
  return sub_1C22D1AA8(v8, v9);
}

uint64_t sub_1C22D2B64(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1C2550870(), uint64_t result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (char v8 = sub_1C2550870(), result = 0, (v8 & 1) != 0))
    {
      sub_1C22D59D0(a1 + 4, (uint64_t)v15);
      sub_1C22D59D0(a2 + 4, (uint64_t)v14);
      sub_1C22D59D0(v15, (uint64_t)&v16);
      switch(v17)
      {
        case 1:
          uint64_t v10 = v16;
          sub_1C22D59D0(v14, (uint64_t)&v18);
          if (v19 == 1 && (sub_1C22D1F28(v10, v18) & 1) != 0) {
            goto LABEL_26;
          }
          goto LABEL_27;
        case 2:
          uint64_t v11 = v16;
          sub_1C22D59D0(v14, (uint64_t)&v18);
          if (v19 != 2 || (sub_1C22D21F8(v11, v18) & 1) == 0) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 3:
          uint64_t v12 = v16;
          sub_1C22D59D0(v14, (uint64_t)&v18);
          if (v19 != 3 || (sub_1C22D2530(v12, v18) & 1) == 0) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 4:
          uint64_t v13 = v16;
          sub_1C22D59D0(v14, (uint64_t)&v18);
          if (v19 == 4 && (sub_1C22D2708(v13, v18) & 1) != 0) {
            goto LABEL_26;
          }
          goto LABEL_27;
        default:
          uint64_t v9 = v16;
          sub_1C22D59D0(v14, (uint64_t)&v18);
          if (v19 || (sub_1C22D1CB0(v9, v18) & 1) == 0) {
LABEL_27:
          }
            uint64_t result = 0;
          else {
LABEL_26:
          }
            uint64_t result = 1;
          break;
      }
    }
  }
  return result;
}

BOOL sub_1C22D2D34(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 24))
  {
    if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 24)) {
      return 0;
    }
    BOOL v2 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
    if (!v2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      return 0;
    }
  }
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a2 + 40);
  if (v4) {
    return v5 && (*(void *)(a1 + 32) == *(void *)(a2 + 32) && v4 == v5 || (sub_1C2550870() & 1) != 0);
  }
  return !v5;
}

uint64_t sub_1C22D2DCC(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1C2550870(), uint64_t result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (char v8 = sub_1C2550870(), result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5])
      {
        return 1;
      }
      else
      {
        return sub_1C2550870();
      }
    }
  }
  return result;
}

uint64_t sub_1C22D2E80(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1C2550870(), uint64_t result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (char v8 = sub_1C2550870(), result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5] || (char v9 = sub_1C2550870(), result = 0, (v9 & 1) != 0))
      {
        if (a1[6] == a2[6] && a1[7] == a2[7] || (char v10 = sub_1C2550870(), result = 0, (v10 & 1) != 0))
        {
          uint64_t v11 = a1[9];
          uint64_t v12 = a2[9];
          if (v11)
          {
            if (v12 && (a1[8] == a2[8] && v11 == v12 || (sub_1C2550870() & 1) != 0)) {
              return 1;
            }
          }
          else if (!v12)
          {
            return 1;
          }
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C22D2F94(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (v5 = sub_1C2550870(), char v6 = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (v8 = sub_1C2550870(), char v6 = 0, (v8 & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (v9 = sub_1C2550870(), char v6 = 0, (v9 & 1) != 0))
      {
        if (*(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56)
          || (v10 = sub_1C2550870(), char v6 = 0, (v10 & 1) != 0))
        {
          char v6 = ((*(unsigned char *)(a1 + 64) & 1) == 0) ^ *(unsigned char *)(a2 + 64);
        }
      }
    }
  }
  return v6 & 1;
}

uint64_t sub_1C22D306C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v27 = a3;
  uint64_t v11 = sub_1C254C4A0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  int64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  sub_1C254C490();
  sub_1C2218914();
  uint64_t v15 = sub_1C2550160();
  uint64_t v28 = v16;
  uint64_t v29 = v15;
  char v17 = *(void (**)(char *, uint64_t))(v12 + 8);
  v17(v14, v11);
  swift_bridgeObjectRelease();
  uint64_t v32 = v27;
  uint64_t v33 = a4;
  sub_1C254C490();
  uint64_t v18 = sub_1C2550160();
  uint64_t v20 = v19;
  v17(v14, v11);
  swift_bridgeObjectRelease();
  uint64_t v32 = v30;
  uint64_t v33 = v31;
  sub_1C254C490();
  uint64_t v21 = sub_1C2550160();
  uint64_t v23 = v22;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v17)(v14, v11);
  uint64_t v25 = v28;
  *a7 = v29;
  a7[1] = v25;
  a7[2] = v18;
  a7[3] = v20;
  a7[4] = v21;
  a7[5] = v23;
  return result;
}

uint64_t sub_1C22D3230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unsigned __int8 a10)
{
  uint64_t v39 = a7;
  uint64_t v40 = a8;
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v34 = a3;
  int v41 = a10;
  uint64_t v14 = sub_1C254C4A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  char v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  sub_1C254C490();
  sub_1C2218914();
  uint64_t v18 = sub_1C2550160();
  uint64_t v35 = v19;
  uint64_t v36 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v15 + 8);
  v20(v17, v14);
  swift_bridgeObjectRelease();
  uint64_t v42 = v34;
  uint64_t v43 = a4;
  sub_1C254C490();
  uint64_t v21 = sub_1C2550160();
  uint64_t v33 = v22;
  uint64_t v34 = v21;
  v20(v17, v14);
  swift_bridgeObjectRelease();
  uint64_t v42 = v37;
  uint64_t v43 = v38;
  sub_1C254C490();
  uint64_t v23 = sub_1C2550160();
  uint64_t v25 = v24;
  v20(v17, v14);
  swift_bridgeObjectRelease();
  uint64_t v42 = v39;
  uint64_t v43 = v40;
  sub_1C254C490();
  uint64_t v26 = sub_1C2550160();
  uint64_t v28 = v27;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v20)(v17, v14);
  uint64_t v30 = v35;
  *(void *)a9 = v36;
  *(void *)(a9 + 8) = v30;
  uint64_t v31 = v33;
  *(void *)(a9 + 16) = v34;
  *(void *)(a9 + 24) = v31;
  *(void *)(a9 + 32) = v23;
  *(void *)(a9 + 40) = v25;
  *(void *)(a9 + 48) = v26;
  *(void *)(a9 + 56) = v28;
  *(unsigned char *)(a9 + 64) = v41;
  return result;
}

uint64_t sub_1C22D3458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v42 = a7;
  uint64_t v43 = a8;
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v41 = a3;
  uint64_t v44 = a11;
  uint64_t v47 = a10;
  uint64_t v15 = sub_1C254C4A0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = a1;
  uint64_t v49 = a2;
  sub_1C254C490();
  sub_1C2218914();
  uint64_t v19 = sub_1C2550160();
  uint64_t v45 = v20;
  uint64_t v46 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v16 + 8);
  v21(v18, v15);
  swift_bridgeObjectRelease();
  uint64_t v48 = v41;
  uint64_t v49 = a4;
  sub_1C254C490();
  uint64_t v22 = sub_1C2550160();
  uint64_t v40 = v23;
  uint64_t v41 = v22;
  v21(v18, v15);
  swift_bridgeObjectRelease();
  uint64_t v48 = v38;
  uint64_t v49 = v39;
  sub_1C254C490();
  uint64_t v24 = sub_1C2550160();
  uint64_t v37 = v25;
  uint64_t v38 = v24;
  v21(v18, v15);
  swift_bridgeObjectRelease();
  uint64_t v48 = v42;
  uint64_t v49 = v43;
  sub_1C254C490();
  uint64_t v26 = sub_1C2550160();
  uint64_t v28 = v27;
  v21(v18, v15);
  uint64_t result = swift_bridgeObjectRelease();
  if (v44)
  {
    uint64_t v48 = v47;
    uint64_t v49 = v44;
    sub_1C254C490();
    uint64_t v30 = sub_1C2550160();
    uint64_t v32 = v31;
    v21(v18, v15);
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v30 = v47;
  }
  uint64_t v33 = v45;
  *a9 = v46;
  a9[1] = v33;
  uint64_t v34 = v40;
  a9[2] = v41;
  a9[3] = v34;
  uint64_t v35 = v37;
  a9[4] = v38;
  a9[5] = v35;
  a9[6] = v26;
  a9[7] = v28;
  a9[8] = v30;
  a9[9] = v32;
  return result;
}

uint64_t _s16FormattedSectionVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s16FormattedSectionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  char v5 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s16FormattedSectionVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s16FormattedSectionVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16FormattedSectionVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s16FormattedSectionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s16FormattedSectionVMa()
{
  return &_s16FormattedSectionVN;
}

uint64_t _s23FormattedRecordMetadataVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s23FormattedRecordMetadataVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s23FormattedRecordMetadataVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s23FormattedRecordMetadataVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s23FormattedRecordMetadataVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s23FormattedRecordMetadataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s23FormattedRecordMetadataVMa()
{
  return &_s23FormattedRecordMetadataVN;
}

uint64_t _s22FormattedRecord3ValuesVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s22FormattedRecord3ValuesVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s22FormattedRecord3ValuesVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s22FormattedRecord3ValuesVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22FormattedRecord3ValuesVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s22FormattedRecord3ValuesVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s22FormattedRecord3ValuesVMa()
{
  return &_s22FormattedRecord3ValuesVN;
}

uint64_t _s27FormattedRecordValueInRangeVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s27FormattedRecordValueInRangeVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s27FormattedRecordValueInRangeVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s27FormattedRecordValueInRangeVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t _s27FormattedRecordValueInRangeVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s27FormattedRecordValueInRangeVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s27FormattedRecordValueInRangeVMa()
{
  return &_s27FormattedRecordValueInRangeVN;
}

uint64_t _s20FormattedRecordValueVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s20FormattedRecordValueVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s20FormattedRecordValueVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s20FormattedRecordValueVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s20FormattedRecordValueVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s20FormattedRecordValueVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s20FormattedRecordValueVMa()
{
  return &_s20FormattedRecordValueVN;
}

uint64_t _s18FormattedRecordKeyVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s18FormattedRecordKeyVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18FormattedRecordKeyVwca(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18FormattedRecordKeyVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18FormattedRecordKeyVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s18FormattedRecordKeyVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *_s18FormattedRecordKeyVMa()
{
  return &_s18FormattedRecordKeyVN;
}

uint64_t _s22FormattedRecordKeyDateVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s22FormattedRecordKeyDateVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *_s22FormattedRecordKeyDateVMa()
{
  return &_s22FormattedRecordKeyDateVN;
}

void *_s15FormattedRecordVwCP(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s15FormattedRecordVwxx()
{
  return swift_bridgeObjectRelease();
}

void *_s15FormattedRecordVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s15FormattedRecordVwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s15FormattedRecordVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s15FormattedRecordVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s15FormattedRecordVMa()
{
  return &_s15FormattedRecordVN;
}

uint64_t _s13FormattedDataVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s13FormattedDataVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s13FormattedDataVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s13FormattedDataVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13FormattedDataVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13FormattedDataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13FormattedDataVMa()
{
  return &_s13FormattedDataVN;
}

unint64_t sub_1C22D48C4()
{
  unint64_t result = qword_1EA2E0388;
  if (!qword_1EA2E0388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0388);
  }
  return result;
}

unint64_t sub_1C22D491C()
{
  unint64_t result = qword_1EA2E0390;
  if (!qword_1EA2E0390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0390);
  }
  return result;
}

uint64_t sub_1C22D4970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C22D4CEC(a1, a2, a3, (uint64_t (*)(void))sub_1C22D499C, (uint64_t (*)(void))sub_1C22D49F0);
}

unint64_t sub_1C22D499C()
{
  unint64_t result = qword_1EA2E0398;
  if (!qword_1EA2E0398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0398);
  }
  return result;
}

unint64_t sub_1C22D49F0()
{
  unint64_t result = qword_1EA2E03A0;
  if (!qword_1EA2E03A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E03A0);
  }
  return result;
}

uint64_t sub_1C22D4A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C22D4CEC(a1, a2, a3, (uint64_t (*)(void))sub_1C22D4A70, (uint64_t (*)(void))sub_1C22D4AC4);
}

unint64_t sub_1C22D4A70()
{
  unint64_t result = qword_1EA2E03A8;
  if (!qword_1EA2E03A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E03A8);
  }
  return result;
}

unint64_t sub_1C22D4AC4()
{
  unint64_t result = qword_1EA2E03B0;
  if (!qword_1EA2E03B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E03B0);
  }
  return result;
}

uint64_t sub_1C22D4B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C22D4CEC(a1, a2, a3, (uint64_t (*)(void))sub_1C22D4B44, (uint64_t (*)(void))sub_1C22D4B98);
}

unint64_t sub_1C22D4B44()
{
  unint64_t result = qword_1EA2E03B8;
  if (!qword_1EA2E03B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E03B8);
  }
  return result;
}

unint64_t sub_1C22D4B98()
{
  unint64_t result = qword_1EA2E03C0;
  if (!qword_1EA2E03C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E03C0);
  }
  return result;
}

uint64_t sub_1C22D4BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C22D4CEC(a1, a2, a3, (uint64_t (*)(void))sub_1C22D4C18, (uint64_t (*)(void))sub_1C22D4C6C);
}

unint64_t sub_1C22D4C18()
{
  unint64_t result = qword_1EA2E03C8;
  if (!qword_1EA2E03C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E03C8);
  }
  return result;
}

unint64_t sub_1C22D4C6C()
{
  unint64_t result = qword_1EA2E03D0;
  if (!qword_1EA2E03D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E03D0);
  }
  return result;
}

uint64_t sub_1C22D4CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C22D4CEC(a1, a2, a3, (uint64_t (*)(void))sub_1C22D4D28, (uint64_t (*)(void))sub_1C22D4D7C);
}

uint64_t sub_1C22D4CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C22D4D28()
{
  unint64_t result = qword_1EA2E03D8;
  if (!qword_1EA2E03D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E03D8);
  }
  return result;
}

unint64_t sub_1C22D4D7C()
{
  unint64_t result = qword_1EA2E03E0;
  if (!qword_1EA2E03E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E03E0);
  }
  return result;
}

uint64_t sub_1C22D4DD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6942664F65746164 && a2 == 0xEB00000000687472 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E615265746164 && a2 == 0xE900000000000065 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974636573 && a2 == 0xE800000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72656469766F7270 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1C22D5008@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v31 = a2;
  sub_1C22D9D84(0, &qword_1EA2E04D8, (uint64_t (*)(void))sub_1C22D8494, (uint64_t)&_s13FormattedDataV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v25 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D8494();
  sub_1C2550A50();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v30 = a1;
  uint64_t v9 = v6;
  LOBYTE(v33) = 0;
  uint64_t v10 = v5;
  uint64_t v11 = sub_1C2550710();
  uint64_t v13 = v12;
  LOBYTE(v33) = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C2550710();
  uint64_t v29 = v15;
  uint64_t v27 = v14;
  LOBYTE(v33) = 2;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1C25506F0();
  uint64_t v17 = v16;
  sub_1C22D9C14(0, &qword_1EA2E04E8, (uint64_t)&_s16FormattedSectionVN, MEMORY[0x1E4FBB320]);
  char v32 = 3;
  sub_1C22D84E8();
  swift_bridgeObjectRetain();
  sub_1C2550740();
  uint64_t v28 = v17;
  uint64_t v18 = v33;
  sub_1C2270334();
  char v32 = 4;
  sub_1C22D8194(&qword_1EA2E0420);
  swift_bridgeObjectRetain();
  sub_1C2550740();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v19 = v33;
  swift_bridgeObjectRetain();
  uint64_t v20 = v18;
  uint64_t v21 = v29;
  swift_bridgeObjectRetain();
  uint64_t v22 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v24 = v31;
  *uint64_t v31 = v11;
  v24[1] = v13;
  v24[2] = v27;
  v24[3] = v21;
  v24[4] = v26;
  v24[5] = v22;
  v24[6] = v20;
  v24[7] = v19;
  return result;
}

uint64_t sub_1C22D54E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64496567616D69 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7364726F636572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C22D5634@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  sub_1C22D9D84(0, &qword_1EA2E03E8, (uint64_t (*)(void))sub_1C22D5928, (uint64_t)&_s16FormattedSectionV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v21 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D5928();
  sub_1C2550A50();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v24;
  char v29 = 0;
  uint64_t v11 = sub_1C2550710();
  uint64_t v13 = v12;
  uint64_t v23 = v11;
  char v28 = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C2550710();
  uint64_t v16 = v15;
  uint64_t v21 = v14;
  char v27 = 2;
  sub_1C22D597C();
  swift_bridgeObjectRetain();
  uint64_t v22 = v16;
  sub_1C2550740();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v17 = v25;
  char v18 = v26;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = v22;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v10 = v23;
  *(void *)(v10 + 8) = v13;
  *(void *)(v10 + 16) = v21;
  *(void *)(v10 + 24) = v19;
  *(void *)(v10 + 32) = v17;
  *(unsigned char *)(v10 + 40) = v18;
  return result;
}

unint64_t sub_1C22D5928()
{
  unint64_t result = qword_1EA2E03F0;
  if (!qword_1EA2E03F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E03F0);
  }
  return result;
}

unint64_t sub_1C22D597C()
{
  unint64_t result = qword_1EA2E03F8;
  if (!qword_1EA2E03F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E03F8);
  }
  return result;
}

uint64_t sub_1C22D59D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

unint64_t sub_1C22D59E8()
{
  unint64_t result = qword_1EA2E0408;
  if (!qword_1EA2E0408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0408);
  }
  return result;
}

uint64_t sub_1C22D5A3C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616C70 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x526E4965756C6176 && a2 == 0xEC00000065676E61 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61566565726874 && a2 == 0xEB00000000736575 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1C22D5C7C(uint64_t a1)
{
  BOOL v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C22D9D84(0, &qword_1EA2E05F0, (uint64_t (*)(void))sub_1C22D9400, (uint64_t)&_s16FormattedRecordsO18MetadataCodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v52 = v3;
  uint64_t v55 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v60 = (char *)&v46 - v4;
  sub_1C22D9D84(0, &qword_1EA2E0600, (uint64_t (*)(void))sub_1C22D9454, (uint64_t)&_s16FormattedRecordsO21ThreeValuesCodingKeysON, v2);
  uint64_t v50 = v5;
  uint64_t v56 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v59 = (char *)&v46 - v6;
  sub_1C22D9D84(0, &qword_1EA2E0610, (uint64_t (*)(void))sub_1C22D94A8, (uint64_t)&_s16FormattedRecordsO22ValueInRangeCodingKeysON, v2);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x1F4188790](v7);
  id v58 = (char *)&v46 - v8;
  sub_1C22D9D84(0, &qword_1EA2E0620, (uint64_t (*)(void))sub_1C22D94FC, (uint64_t)&_s16FormattedRecordsO15ValueCodingKeysON, v2);
  uint64_t v51 = v9;
  uint64_t v48 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v57 = (char *)&v46 - v10;
  sub_1C22D9D84(0, &qword_1EA2E0630, (uint64_t (*)(void))sub_1C22D9550, (uint64_t)&_s16FormattedRecordsO15PlainCodingKeysON, v2);
  uint64_t v12 = v11;
  uint64_t v49 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v46 - v13;
  sub_1C22D9D84(0, &qword_1EA2E0640, (uint64_t (*)(void))sub_1C22D95A4, (uint64_t)&_s16FormattedRecordsO10CodingKeysON, v2);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = *(void *)(a1 + 24);
  uint64_t v18 = *(void *)(a1 + 32);
  uint64_t v62 = a1;
  uint64_t v20 = (void *)a1;
  uint64_t v22 = (char *)&v46 - v21;
  __swift_project_boxed_opaque_existential_1Tm(v20, v19);
  sub_1C22D95A4();
  uint64_t v61 = v22;
  uint64_t v23 = v63;
  sub_1C2550A50();
  if (v23) {
    goto LABEL_10;
  }
  uint64_t v24 = v14;
  uint64_t v47 = v12;
  uint64_t v25 = v57;
  char v26 = v58;
  char v28 = v59;
  char v27 = v60;
  uint64_t v63 = v17;
  uint64_t v29 = sub_1C2550750();
  if (*(void *)(v29 + 16) != 1)
  {
    uint64_t v18 = sub_1C2550420();
    swift_allocError();
    char v32 = v61;
    uint64_t v33 = v16;
    uint64_t v35 = v34;
    sub_1C22D95F8();
    *uint64_t v35 = &_s16FormattedRecordsON;
    sub_1C25506E0();
    sub_1C2550400();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v35, *MEMORY[0x1E4FBBA70], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v32, v33);
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm(v62);
    return v18;
  }
  switch(*(unsigned char *)(v29 + 32))
  {
    case 1:
      LOBYTE(v64) = 1;
      sub_1C22D94FC();
      sub_1C25506D0();
      sub_1C22D9820(0, &qword_1EA2E06B0, &qword_1EA2DE828, (uint64_t)&_s20FormattedRecordValueVN);
      sub_1C22D9AF0();
      uint64_t v36 = v51;
      sub_1C2550740();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v25, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v61, v16);
      goto LABEL_14;
    case 2:
      LOBYTE(v64) = 2;
      sub_1C22D94A8();
      uint64_t v37 = v26;
      sub_1C25506D0();
      sub_1C22D9820(0, &qword_1EA2E0698, &qword_1EA2DE850, (uint64_t)&_s27FormattedRecordValueInRangeVN);
      sub_1C22D99CC();
      uint64_t v38 = v54;
      sub_1C2550740();
      uint64_t v39 = v63;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v38);
      goto LABEL_12;
    case 3:
      LOBYTE(v64) = 3;
      sub_1C22D9454();
      uint64_t v40 = v28;
      sub_1C25506D0();
      sub_1C22D9820(0, &qword_1EA2E0680, &qword_1EA2DE7E0, (uint64_t)&_s22FormattedRecord3ValuesVN);
      sub_1C22D98A8();
      uint64_t v41 = v50;
      sub_1C2550740();
      uint64_t v39 = v63;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v40, v41);
LABEL_12:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v61, v16);
LABEL_14:
      uint64_t v18 = v64;
      uint64_t v45 = v62;
      goto LABEL_15;
    case 4:
      long long v59 = (char *)*(unsigned __int8 *)(v29 + 32);
      LOBYTE(v64) = 4;
      sub_1C22D9400();
      sub_1C25506D0();
      sub_1C22D9820(0, &qword_1EA2E0660, &qword_1EA2DE888, (uint64_t)&_s23FormattedRecordMetadataVN);
      sub_1C22D96A8();
      uint64_t v43 = v52;
      sub_1C2550740();
      uint64_t v44 = v63;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v27, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v61, v16);
      goto LABEL_13;
    default:
      long long v59 = (char *)*(unsigned __int8 *)(v29 + 32);
      LOBYTE(v64) = 0;
      sub_1C22D9550();
      sub_1C25506D0();
      sub_1C22D9820(0, &qword_1EA2E06C8, &qword_1EA2DE808, (uint64_t)&_s15FormattedRecordVN);
      sub_1C22D9C60();
      uint64_t v30 = v47;
      sub_1C2550740();
      uint64_t v31 = v63;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v30);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v61, v16);
LABEL_13:
      uint64_t v18 = v64;
      uint64_t v45 = v62;
LABEL_15:
      __swift_destroy_boxed_opaque_existential_1Tm(v45);
      break;
  }
  return v18;
}

uint64_t sub_1C22D6754(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1918985593 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x68746E6F6DLL && a2 == 0xE500000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7954788 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C22D6884(void *a1)
{
  sub_1C22D9D84(0, &qword_1EA2E04A8, (uint64_t (*)(void))sub_1C22D83EC, (uint64_t)&_s22FormattedRecordKeyDateV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1Tm(a1, v8);
  sub_1C22D83EC();
  sub_1C2550A50();
  if (!v1)
  {
    char v13 = 0;
    uint64_t v8 = sub_1C2550730();
    char v12 = 1;
    sub_1C2550730();
    char v11 = 2;
    sub_1C2550730();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v8;
}

uint64_t sub_1C22D6A88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72656469766F7270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C22D6B6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  sub_1C22D9D84(0, &qword_1EA2E0480, (uint64_t (*)(void))sub_1C22D82F0, (uint64_t)&_s18FormattedRecordKeyV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D82F0();
  sub_1C2550A50();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v19;
  char v25 = 0;
  sub_1C22D8344();
  sub_1C2550700();
  uint64_t v11 = v21;
  uint64_t v17 = v22;
  uint64_t v18 = v20;
  int v24 = v23;
  LOBYTE(v20) = 1;
  uint64_t v12 = sub_1C25506F0();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  *(void *)uint64_t v10 = v18;
  *(void *)(v10 + 8) = v11;
  *(void *)(v10 + 16) = v17;
  *(unsigned char *)(v10 + 24) = v24;
  *(void *)(v10 + 32) = v12;
  *(void *)(v10 + 40) = v14;
  return result;
}

uint64_t sub_1C22D6D94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1953066613 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C22D6ECC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v26 = a2;
  sub_1C22D9D84(0, &qword_1EA2E0468, (uint64_t (*)(void))sub_1C22D829C, (uint64_t)&_s20FormattedRecordValueV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v23 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D829C();
  sub_1C2550A50();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v26;
  char v29 = 0;
  uint64_t v11 = sub_1C2550710();
  uint64_t v13 = v12;
  uint64_t v25 = v11;
  char v28 = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C2550710();
  uint64_t v16 = v15;
  uint64_t v23 = v14;
  char v27 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = v16;
  uint64_t v17 = sub_1C2550710();
  uint64_t v19 = v18;
  uint64_t v20 = v17;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v21 = v24;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v10 = v25;
  v10[1] = v13;
  void v10[2] = v23;
  v10[3] = v21;
  v10[4] = v20;
  v10[5] = v19;
  return result;
}

uint64_t sub_1C22D71A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1953066613 && a2 == 0xE400000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65676E6172 && a2 == 0xE500000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65676E61526E69 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1C22D7398@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v33 = a2;
  sub_1C22D9D84(0, &qword_1EA2E0450, (uint64_t (*)(void))sub_1C22D8248, (uint64_t)&_s27FormattedRecordValueInRangeV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v26 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D8248();
  sub_1C2550A50();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v32 = a1;
  uint64_t v9 = v6;
  char v38 = 0;
  uint64_t v10 = v5;
  uint64_t v11 = sub_1C2550710();
  uint64_t v13 = v12;
  char v37 = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C2550710();
  uint64_t v31 = v15;
  uint64_t v29 = v14;
  uint64_t v30 = v11;
  char v36 = 2;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C2550710();
  uint64_t v18 = v17;
  uint64_t v28 = v16;
  char v35 = 3;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C2550710();
  char v34 = 4;
  uint64_t v20 = v19;
  swift_bridgeObjectRetain();
  char v21 = sub_1C2550720();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = v18;
  uint64_t v23 = v31;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v25 = v33;
  uint64_t *v33 = v30;
  v25[1] = v13;
  v25[2] = v29;
  v25[3] = v23;
  v25[4] = v28;
  v25[5] = v22;
  v25[6] = v27;
  v25[7] = v20;
  *((unsigned char *)v25 + 64) = v21 & 1;
  return result;
}

uint64_t sub_1C22D77AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x3165756C6176 && a2 == 0xE600000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x3265756C6176 && a2 == 0xE600000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x3365756C6176 && a2 == 0xE600000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72656469766F7270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1C22D79AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v36 = a2;
  sub_1C22D9D84(0, &qword_1EA2E0438, (uint64_t (*)(void))sub_1C22D81F4, (uint64_t)&_s22FormattedRecord3ValuesV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v29 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D81F4();
  sub_1C2550A50();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v35 = a1;
  uint64_t v9 = v6;
  char v41 = 0;
  uint64_t v10 = v5;
  uint64_t v11 = sub_1C2550710();
  uint64_t v13 = v12;
  char v40 = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C2550710();
  uint64_t v34 = v15;
  uint64_t v32 = v14;
  uint64_t v33 = v11;
  char v39 = 2;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C2550710();
  uint64_t v18 = v17;
  uint64_t v31 = v16;
  char v38 = 3;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1C2550710();
  char v37 = 4;
  uint64_t v20 = v19;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C25506F0();
  uint64_t v23 = v22;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v29 = v21;
  v24(v8, v10);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = v18;
  uint64_t v26 = v34;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v28 = v36;
  *char v36 = v33;
  v28[1] = v13;
  void v28[2] = v32;
  v28[3] = v26;
  void v28[4] = v31;
  v28[5] = v25;
  v28[6] = v30;
  v28[7] = v20;
  v28[8] = v29;
  v28[9] = v23;
  return result;
}

uint64_t sub_1C22D7DD4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C22D7EC0(void *a1)
{
  sub_1C22D9D84(0, &qword_1EA2E0410, (uint64_t (*)(void))sub_1C22D8140, (uint64_t)&_s23FormattedRecordMetadataV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v10[-v6];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22D8140();
  sub_1C2550A50();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    v10[31] = 0;
    uint64_t v8 = sub_1C2550710();
    sub_1C2270334();
    v10[30] = 1;
    sub_1C22D8194(&qword_1EA2E0420);
    swift_bridgeObjectRetain();
    sub_1C2550740();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1C22D8140()
{
  unint64_t result = qword_1EA2E0418;
  if (!qword_1EA2E0418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0418);
  }
  return result;
}

uint64_t sub_1C22D8194(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2270334();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C22D81F4()
{
  unint64_t result = qword_1EA2E0440;
  if (!qword_1EA2E0440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0440);
  }
  return result;
}

unint64_t sub_1C22D8248()
{
  unint64_t result = qword_1EA2E0458;
  if (!qword_1EA2E0458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0458);
  }
  return result;
}

unint64_t sub_1C22D829C()
{
  unint64_t result = qword_1EA2E0470;
  if (!qword_1EA2E0470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0470);
  }
  return result;
}

unint64_t sub_1C22D82F0()
{
  unint64_t result = qword_1EA2E0488;
  if (!qword_1EA2E0488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0488);
  }
  return result;
}

unint64_t sub_1C22D8344()
{
  unint64_t result = qword_1EA2E0490;
  if (!qword_1EA2E0490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0490);
  }
  return result;
}

unint64_t sub_1C22D8398()
{
  unint64_t result = qword_1EA2E04A0;
  if (!qword_1EA2E04A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E04A0);
  }
  return result;
}

unint64_t sub_1C22D83EC()
{
  unint64_t result = qword_1EA2E04B0;
  if (!qword_1EA2E04B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E04B0);
  }
  return result;
}

unint64_t sub_1C22D8440()
{
  unint64_t result = qword_1EA2E04C8;
  if (!qword_1EA2E04C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E04C8);
  }
  return result;
}

unint64_t sub_1C22D8494()
{
  unint64_t result = qword_1EA2E04E0;
  if (!qword_1EA2E04E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E04E0);
  }
  return result;
}

unint64_t sub_1C22D84E8()
{
  unint64_t result = qword_1EA2E04F0;
  if (!qword_1EA2E04F0)
  {
    sub_1C22D9C14(255, &qword_1EA2E04E8, (uint64_t)&_s16FormattedSectionVN, MEMORY[0x1E4FBB320]);
    sub_1C22D857C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E04F0);
  }
  return result;
}

unint64_t sub_1C22D857C()
{
  unint64_t result = qword_1EA2E04F8;
  if (!qword_1EA2E04F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E04F8);
  }
  return result;
}

unint64_t sub_1C22D85D0()
{
  unint64_t result = qword_1EA2E0508;
  if (!qword_1EA2E0508)
  {
    sub_1C22D9C14(255, &qword_1EA2E04E8, (uint64_t)&_s16FormattedSectionVN, MEMORY[0x1E4FBB320]);
    sub_1C22D8664();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0508);
  }
  return result;
}

unint64_t sub_1C22D8664()
{
  unint64_t result = qword_1EA2E0510;
  if (!qword_1EA2E0510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0510);
  }
  return result;
}

ValueMetadata *_s13FormattedDataV10CodingKeysOMa()
{
  return &_s13FormattedDataV10CodingKeysON;
}

ValueMetadata *_s15FormattedRecordV10CodingKeysOMa()
{
  return &_s15FormattedRecordV10CodingKeysON;
}

ValueMetadata *_s22FormattedRecordKeyDateV10CodingKeysOMa()
{
  return &_s22FormattedRecordKeyDateV10CodingKeysON;
}

ValueMetadata *_s18FormattedRecordKeyV10CodingKeysOMa()
{
  return &_s18FormattedRecordKeyV10CodingKeysON;
}

ValueMetadata *_s20FormattedRecordValueV10CodingKeysOMa()
{
  return &_s20FormattedRecordValueV10CodingKeysON;
}

ValueMetadata *_s27FormattedRecordValueInRangeV10CodingKeysOMa()
{
  return &_s27FormattedRecordValueInRangeV10CodingKeysON;
}

ValueMetadata *_s22FormattedRecord3ValuesV10CodingKeysOMa()
{
  return &_s22FormattedRecord3ValuesV10CodingKeysON;
}

unsigned char *_s18FormattedRecordKeyV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C22D8810);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s23FormattedRecordMetadataV10CodingKeysOMa()
{
  return &_s23FormattedRecordMetadataV10CodingKeysON;
}

unsigned char *_s22FormattedRecordKeyDateV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C22D8914);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16FormattedSectionV10CodingKeysOMa()
{
  return &_s16FormattedSectionV10CodingKeysON;
}

uint64_t _s16FormattedRecordsOwCP(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s16FormattedRecordsOwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s16FormattedRecordsOwca(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16FormattedRecordsOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16FormattedRecordsOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s16FormattedRecordsOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C22D8A98(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1C22D8AA0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *_s16FormattedRecordsOMa()
{
  return &_s16FormattedRecordsON;
}

unint64_t sub_1C22D8ABC()
{
  unint64_t result = qword_1EA2E0518;
  if (!qword_1EA2E0518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0518);
  }
  return result;
}

unint64_t sub_1C22D8B14()
{
  unint64_t result = qword_1EA2E0520;
  if (!qword_1EA2E0520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0520);
  }
  return result;
}

unint64_t sub_1C22D8B6C()
{
  unint64_t result = qword_1EA2E0528;
  if (!qword_1EA2E0528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0528);
  }
  return result;
}

unint64_t sub_1C22D8BC4()
{
  unint64_t result = qword_1EA2E0530;
  if (!qword_1EA2E0530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0530);
  }
  return result;
}

unint64_t sub_1C22D8C1C()
{
  unint64_t result = qword_1EA2E0538;
  if (!qword_1EA2E0538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0538);
  }
  return result;
}

unint64_t sub_1C22D8C74()
{
  unint64_t result = qword_1EA2E0540;
  if (!qword_1EA2E0540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0540);
  }
  return result;
}

unint64_t sub_1C22D8CCC()
{
  unint64_t result = qword_1EA2E0548;
  if (!qword_1EA2E0548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0548);
  }
  return result;
}

unint64_t sub_1C22D8D24()
{
  unint64_t result = qword_1EA2E0550;
  if (!qword_1EA2E0550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0550);
  }
  return result;
}

unint64_t sub_1C22D8D7C()
{
  unint64_t result = qword_1EA2E0558;
  if (!qword_1EA2E0558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0558);
  }
  return result;
}

unint64_t sub_1C22D8DD4()
{
  unint64_t result = qword_1EA2E0560;
  if (!qword_1EA2E0560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0560);
  }
  return result;
}

unint64_t sub_1C22D8E2C()
{
  unint64_t result = qword_1EA2E0568;
  if (!qword_1EA2E0568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0568);
  }
  return result;
}

unint64_t sub_1C22D8E84()
{
  unint64_t result = qword_1EA2E0570;
  if (!qword_1EA2E0570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0570);
  }
  return result;
}

unint64_t sub_1C22D8EDC()
{
  unint64_t result = qword_1EA2E0578;
  if (!qword_1EA2E0578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0578);
  }
  return result;
}

unint64_t sub_1C22D8F34()
{
  unint64_t result = qword_1EA2E0580;
  if (!qword_1EA2E0580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0580);
  }
  return result;
}

unint64_t sub_1C22D8F8C()
{
  unint64_t result = qword_1EA2E0588;
  if (!qword_1EA2E0588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0588);
  }
  return result;
}

unint64_t sub_1C22D8FE4()
{
  unint64_t result = qword_1EA2E0590;
  if (!qword_1EA2E0590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0590);
  }
  return result;
}

unint64_t sub_1C22D903C()
{
  unint64_t result = qword_1EA2E0598;
  if (!qword_1EA2E0598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0598);
  }
  return result;
}

unint64_t sub_1C22D9094()
{
  unint64_t result = qword_1EA2E05A0;
  if (!qword_1EA2E05A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E05A0);
  }
  return result;
}

unint64_t sub_1C22D90EC()
{
  unint64_t result = qword_1EA2E05A8;
  if (!qword_1EA2E05A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E05A8);
  }
  return result;
}

unint64_t sub_1C22D9144()
{
  unint64_t result = qword_1EA2E05B0;
  if (!qword_1EA2E05B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E05B0);
  }
  return result;
}

unint64_t sub_1C22D919C()
{
  unint64_t result = qword_1EA2E05B8;
  if (!qword_1EA2E05B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E05B8);
  }
  return result;
}

unint64_t sub_1C22D91F4()
{
  unint64_t result = qword_1EA2E05C0;
  if (!qword_1EA2E05C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E05C0);
  }
  return result;
}

unint64_t sub_1C22D924C()
{
  unint64_t result = qword_1EA2E05C8;
  if (!qword_1EA2E05C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E05C8);
  }
  return result;
}

unint64_t sub_1C22D92A4()
{
  unint64_t result = qword_1EA2E05D0;
  if (!qword_1EA2E05D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E05D0);
  }
  return result;
}

unint64_t sub_1C22D92FC()
{
  unint64_t result = qword_1EA2E05D8;
  if (!qword_1EA2E05D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E05D8);
  }
  return result;
}

unint64_t sub_1C22D9354()
{
  unint64_t result = qword_1EA2E05E0;
  if (!qword_1EA2E05E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E05E0);
  }
  return result;
}

unint64_t sub_1C22D93AC()
{
  unint64_t result = qword_1EA2E05E8;
  if (!qword_1EA2E05E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E05E8);
  }
  return result;
}

unint64_t sub_1C22D9400()
{
  unint64_t result = qword_1EA2E05F8;
  if (!qword_1EA2E05F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E05F8);
  }
  return result;
}

unint64_t sub_1C22D9454()
{
  unint64_t result = qword_1EA2E0608;
  if (!qword_1EA2E0608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0608);
  }
  return result;
}

unint64_t sub_1C22D94A8()
{
  unint64_t result = qword_1EA2E0618;
  if (!qword_1EA2E0618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0618);
  }
  return result;
}

unint64_t sub_1C22D94FC()
{
  unint64_t result = qword_1EA2E0628;
  if (!qword_1EA2E0628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0628);
  }
  return result;
}

unint64_t sub_1C22D9550()
{
  unint64_t result = qword_1EA2E0638;
  if (!qword_1EA2E0638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0638);
  }
  return result;
}

unint64_t sub_1C22D95A4()
{
  unint64_t result = qword_1EA2E0648;
  if (!qword_1EA2E0648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0648);
  }
  return result;
}

void sub_1C22D95F8()
{
  if (!qword_1EA2E0650)
  {
    sub_1C22D9668();
    sub_1C2550410();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E0650);
    }
  }
}

unint64_t sub_1C22D9668()
{
  unint64_t result = qword_1EA2E0658;
  if (!qword_1EA2E0658)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E0658);
  }
  return result;
}

unint64_t sub_1C22D96A8()
{
  unint64_t result = qword_1EA2E0668;
  if (!qword_1EA2E0668)
  {
    sub_1C22D9820(255, &qword_1EA2E0660, &qword_1EA2DE888, (uint64_t)&_s23FormattedRecordMetadataVN);
    sub_1C22D9738();
    sub_1C22D978C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0668);
  }
  return result;
}

unint64_t sub_1C22D9738()
{
  unint64_t result = qword_1EA2E0670;
  if (!qword_1EA2E0670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0670);
  }
  return result;
}

unint64_t sub_1C22D978C()
{
  unint64_t result = qword_1EA2E0678;
  if (!qword_1EA2E0678)
  {
    sub_1C22D9C14(255, &qword_1EA2DE888, (uint64_t)&_s23FormattedRecordMetadataVN, MEMORY[0x1E4FBB320]);
    sub_1C22D499C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0678);
  }
  return result;
}

void sub_1C22D9820(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1C22D9C14(255, a3, a4, MEMORY[0x1E4FBB320]);
    sub_1C22188C0();
    unint64_t v5 = sub_1C254F340();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C22D98A8()
{
  unint64_t result = qword_1EA2E0688;
  if (!qword_1EA2E0688)
  {
    sub_1C22D9820(255, &qword_1EA2E0680, &qword_1EA2DE7E0, (uint64_t)&_s22FormattedRecord3ValuesVN);
    sub_1C22D9738();
    sub_1C22D9938();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0688);
  }
  return result;
}

unint64_t sub_1C22D9938()
{
  unint64_t result = qword_1EA2E0690;
  if (!qword_1EA2E0690)
  {
    sub_1C22D9C14(255, &qword_1EA2DE7E0, (uint64_t)&_s22FormattedRecord3ValuesVN, MEMORY[0x1E4FBB320]);
    sub_1C22D4A70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0690);
  }
  return result;
}

unint64_t sub_1C22D99CC()
{
  unint64_t result = qword_1EA2E06A0;
  if (!qword_1EA2E06A0)
  {
    sub_1C22D9820(255, &qword_1EA2E0698, &qword_1EA2DE850, (uint64_t)&_s27FormattedRecordValueInRangeVN);
    sub_1C22D9738();
    sub_1C22D9A5C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E06A0);
  }
  return result;
}

unint64_t sub_1C22D9A5C()
{
  unint64_t result = qword_1EA2E06A8;
  if (!qword_1EA2E06A8)
  {
    sub_1C22D9C14(255, &qword_1EA2DE850, (uint64_t)&_s27FormattedRecordValueInRangeVN, MEMORY[0x1E4FBB320]);
    sub_1C22D4B44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E06A8);
  }
  return result;
}

unint64_t sub_1C22D9AF0()
{
  unint64_t result = qword_1EA2E06B8;
  if (!qword_1EA2E06B8)
  {
    sub_1C22D9820(255, &qword_1EA2E06B0, &qword_1EA2DE828, (uint64_t)&_s20FormattedRecordValueVN);
    sub_1C22D9738();
    sub_1C22D9B80();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E06B8);
  }
  return result;
}

unint64_t sub_1C22D9B80()
{
  unint64_t result = qword_1EA2E06C0;
  if (!qword_1EA2E06C0)
  {
    sub_1C22D9C14(255, &qword_1EA2DE828, (uint64_t)&_s20FormattedRecordValueVN, MEMORY[0x1E4FBB320]);
    sub_1C22D4C18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E06C0);
  }
  return result;
}

void sub_1C22D9C14(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C22D9C60()
{
  unint64_t result = qword_1EA2E06D0;
  if (!qword_1EA2E06D0)
  {
    sub_1C22D9820(255, &qword_1EA2E06C8, &qword_1EA2DE808, (uint64_t)&_s15FormattedRecordVN);
    sub_1C22D9738();
    sub_1C22D9CF0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E06D0);
  }
  return result;
}

unint64_t sub_1C22D9CF0()
{
  unint64_t result = qword_1EA2E06D8;
  if (!qword_1EA2E06D8)
  {
    sub_1C22D9C14(255, &qword_1EA2DE808, (uint64_t)&_s15FormattedRecordVN, MEMORY[0x1E4FBB320]);
    sub_1C22D4D28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E06D8);
  }
  return result;
}

void sub_1C22D9D84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C22D9DEC()
{
  unint64_t result = qword_1EA2E0710;
  if (!qword_1EA2E0710)
  {
    sub_1C22D9820(255, &qword_1EA2E0660, &qword_1EA2DE888, (uint64_t)&_s23FormattedRecordMetadataVN);
    sub_1C22D9E7C();
    sub_1C22D9ED0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0710);
  }
  return result;
}

unint64_t sub_1C22D9E7C()
{
  unint64_t result = qword_1EA2E0718;
  if (!qword_1EA2E0718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0718);
  }
  return result;
}

unint64_t sub_1C22D9ED0()
{
  unint64_t result = qword_1EA2E0720;
  if (!qword_1EA2E0720)
  {
    sub_1C22D9C14(255, &qword_1EA2DE888, (uint64_t)&_s23FormattedRecordMetadataVN, MEMORY[0x1E4FBB320]);
    sub_1C22D49F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0720);
  }
  return result;
}

unint64_t sub_1C22D9F64()
{
  unint64_t result = qword_1EA2E0728;
  if (!qword_1EA2E0728)
  {
    sub_1C22D9820(255, &qword_1EA2E0680, &qword_1EA2DE7E0, (uint64_t)&_s22FormattedRecord3ValuesVN);
    sub_1C22D9E7C();
    sub_1C22D9FF4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0728);
  }
  return result;
}

unint64_t sub_1C22D9FF4()
{
  unint64_t result = qword_1EA2E0730;
  if (!qword_1EA2E0730)
  {
    sub_1C22D9C14(255, &qword_1EA2DE7E0, (uint64_t)&_s22FormattedRecord3ValuesVN, MEMORY[0x1E4FBB320]);
    sub_1C22D4AC4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0730);
  }
  return result;
}

unint64_t sub_1C22DA088()
{
  unint64_t result = qword_1EA2E0738;
  if (!qword_1EA2E0738)
  {
    sub_1C22D9820(255, &qword_1EA2E0698, &qword_1EA2DE850, (uint64_t)&_s27FormattedRecordValueInRangeVN);
    sub_1C22D9E7C();
    sub_1C22DA118();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0738);
  }
  return result;
}

unint64_t sub_1C22DA118()
{
  unint64_t result = qword_1EA2E0740;
  if (!qword_1EA2E0740)
  {
    sub_1C22D9C14(255, &qword_1EA2DE850, (uint64_t)&_s27FormattedRecordValueInRangeVN, MEMORY[0x1E4FBB320]);
    sub_1C22D4B98();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0740);
  }
  return result;
}

unint64_t sub_1C22DA1AC()
{
  unint64_t result = qword_1EA2E0748;
  if (!qword_1EA2E0748)
  {
    sub_1C22D9820(255, &qword_1EA2E06B0, &qword_1EA2DE828, (uint64_t)&_s20FormattedRecordValueVN);
    sub_1C22D9E7C();
    sub_1C22DA23C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0748);
  }
  return result;
}

unint64_t sub_1C22DA23C()
{
  unint64_t result = qword_1EA2E0750;
  if (!qword_1EA2E0750)
  {
    sub_1C22D9C14(255, &qword_1EA2DE828, (uint64_t)&_s20FormattedRecordValueVN, MEMORY[0x1E4FBB320]);
    sub_1C22D4C6C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0750);
  }
  return result;
}

unint64_t sub_1C22DA2D0()
{
  unint64_t result = qword_1EA2E0758;
  if (!qword_1EA2E0758)
  {
    sub_1C22D9820(255, &qword_1EA2E06C8, &qword_1EA2DE808, (uint64_t)&_s15FormattedRecordVN);
    sub_1C22D9E7C();
    sub_1C22DA360();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0758);
  }
  return result;
}

unint64_t sub_1C22DA360()
{
  unint64_t result = qword_1EA2E0760;
  if (!qword_1EA2E0760)
  {
    sub_1C22D9C14(255, &qword_1EA2DE808, (uint64_t)&_s15FormattedRecordVN, MEMORY[0x1E4FBB320]);
    sub_1C22D4D7C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0760);
  }
  return result;
}

uint64_t _s11ModeSegmentOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13FormattedDataV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C22DA550);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s16FormattedRecordsO10CodingKeysOMa()
{
  return &_s16FormattedRecordsO10CodingKeysON;
}

ValueMetadata *_s16FormattedRecordsO15PlainCodingKeysOMa()
{
  return &_s16FormattedRecordsO15PlainCodingKeysON;
}

ValueMetadata *_s16FormattedRecordsO15ValueCodingKeysOMa()
{
  return &_s16FormattedRecordsO15ValueCodingKeysON;
}

ValueMetadata *_s16FormattedRecordsO22ValueInRangeCodingKeysOMa()
{
  return &_s16FormattedRecordsO22ValueInRangeCodingKeysON;
}

ValueMetadata *_s16FormattedRecordsO21ThreeValuesCodingKeysOMa()
{
  return &_s16FormattedRecordsO21ThreeValuesCodingKeysON;
}

unsigned char *_s15FormattedRecordV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C22DA664);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s16FormattedRecordsO18MetadataCodingKeysOMa()
{
  return &_s16FormattedRecordsO18MetadataCodingKeysON;
}

unint64_t sub_1C22DA6A0()
{
  unint64_t result = qword_1EA2E0768;
  if (!qword_1EA2E0768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0768);
  }
  return result;
}

unint64_t sub_1C22DA6F8()
{
  unint64_t result = qword_1EA2E0770;
  if (!qword_1EA2E0770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0770);
  }
  return result;
}

unint64_t sub_1C22DA750()
{
  unint64_t result = qword_1EA2E0778;
  if (!qword_1EA2E0778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0778);
  }
  return result;
}

unint64_t sub_1C22DA7A8()
{
  unint64_t result = qword_1EA2E0780;
  if (!qword_1EA2E0780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0780);
  }
  return result;
}

unint64_t sub_1C22DA800()
{
  unint64_t result = qword_1EA2E0788;
  if (!qword_1EA2E0788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0788);
  }
  return result;
}

unint64_t sub_1C22DA858()
{
  unint64_t result = qword_1EA2E0790;
  if (!qword_1EA2E0790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0790);
  }
  return result;
}

unint64_t sub_1C22DA8B0()
{
  unint64_t result = qword_1EA2E0798;
  if (!qword_1EA2E0798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0798);
  }
  return result;
}

unint64_t sub_1C22DA908()
{
  unint64_t result = qword_1EA2E07A0;
  if (!qword_1EA2E07A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E07A0);
  }
  return result;
}

unint64_t sub_1C22DA960()
{
  unint64_t result = qword_1EA2E07A8;
  if (!qword_1EA2E07A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E07A8);
  }
  return result;
}

unint64_t sub_1C22DA9B8()
{
  unint64_t result = qword_1EA2E07B0;
  if (!qword_1EA2E07B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E07B0);
  }
  return result;
}

unint64_t sub_1C22DAA10()
{
  unint64_t result = qword_1EA2E07B8;
  if (!qword_1EA2E07B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E07B8);
  }
  return result;
}

unint64_t sub_1C22DAA68()
{
  unint64_t result = qword_1EA2E07C0;
  if (!qword_1EA2E07C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E07C0);
  }
  return result;
}

unint64_t sub_1C22DAAC0()
{
  unint64_t result = qword_1EA2E07C8;
  if (!qword_1EA2E07C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E07C8);
  }
  return result;
}

unint64_t sub_1C22DAB18()
{
  unint64_t result = qword_1EA2E07D0;
  if (!qword_1EA2E07D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E07D0);
  }
  return result;
}

unint64_t sub_1C22DAB70()
{
  unint64_t result = qword_1EA2E07D8;
  if (!qword_1EA2E07D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E07D8);
  }
  return result;
}

unint64_t sub_1C22DABC8()
{
  unint64_t result = qword_1EA2E07E0;
  if (!qword_1EA2E07E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E07E0);
  }
  return result;
}

unint64_t sub_1C22DAC20()
{
  unint64_t result = qword_1EA2E07E8;
  if (!qword_1EA2E07E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E07E8);
  }
  return result;
}

unint64_t sub_1C22DAC78()
{
  unint64_t result = qword_1EA2E07F0;
  if (!qword_1EA2E07F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E07F0);
  }
  return result;
}

uint64_t type metadata accessor for RecentLabsDataSource()
{
  uint64_t result = qword_1EA2E0800;
  if (!qword_1EA2E0800) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C22DAD2C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C22DAD7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v21 = sub_1C254D9B0();
  uint64_t v4 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  unsigned int v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1C2274C60(0, v7, 0);
    uint64_t v8 = v24;
    uint64_t v18 = v4 + 32;
    uint64_t v19 = v6;
    uint64_t v9 = a1 + 40;
    uint64_t v20 = v4;
    do
    {
      char v10 = *(unsigned char *)(v9 - 8);
      unint64_t v11 = swift_bridgeObjectRetain();
      uint64_t v23 = sub_1C22E89EC(v11);
      swift_getKeyPath();
      sub_1C22DFD28(0, &qword_1EA2DF250, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, MEMORY[0x1E4FBB320]);
      sub_1C22DFD8C();
      unint64_t v12 = sub_1C254F650();
      uint64_t v22 = v2;
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C22DCA84(v10);
      sub_1C228ADF0(v12);
      swift_bridgeObjectRelease();
      char v13 = v10;
      uint64_t v14 = v19;
      sub_1C22DCA84(v13);
      sub_1C254D990();
      swift_bridgeObjectRelease();
      uint64_t v24 = v8;
      unint64_t v16 = *(void *)(v8 + 16);
      unint64_t v15 = *(void *)(v8 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1C2274C60(v15 > 1, v16 + 1, 1);
        uint64_t v8 = v24;
      }
      *(void *)(v8 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v8+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v16, v14, v21);
      v9 += 16;
      --v7;
      uint64_t v2 = v22;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_1C22DB008(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_11;
  }
  while ((a1 & 0xC000000000000001) == 0)
  {
    if (*(void *)(*(void *)(a1 + 32) + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData + 16) == 1) {
      goto LABEL_5;
    }
    if (v2 != 1)
    {
      uint64_t v4 = 5;
      while (1)
      {
        uint64_t v5 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        if (*(void *)(*(void *)(a1 + 8 * v4) + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData + 16) == 1) {
          goto LABEL_5;
        }
        ++v4;
        if (v5 == v2) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_13:
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_1C2550620();
      if (v2) {
        continue;
      }
    }
    goto LABEL_11;
  }
  uint64_t v6 = *(void *)(MEMORY[0x1C87588E0](0, a1) + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData + 16);
  swift_unknownObjectRelease();
  if (v6 == 1)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    uint64_t v7 = 1;
    while (1)
    {
      uint64_t result = MEMORY[0x1C87588E0](v7, a1);
      uint64_t v8 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        break;
      }
      uint64_t v9 = *(void *)(result + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData + 16);
      swift_unknownObjectRelease();
      if (v9 == 1) {
        goto LABEL_5;
      }
      ++v7;
      if (v8 == v2) {
        goto LABEL_11;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C22DB174()
{
  sub_1C22E0054();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v0 + qword_1EA2E07F8);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1C22E019C;
  *(void *)(v6 + 24) = v0;
  sub_1C22A827C();
  sub_1C22E0124(0, &qword_1EA2DF248, &qword_1EA2DF250, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem);
  sub_1C22E0214(&qword_1EA2E1750, (void (*)(uint64_t))sub_1C22A827C);
  swift_retain();
  swift_retain();
  sub_1C254EC00();
  swift_release();
  swift_release();
  sub_1C22E0214(&qword_1EA2E0870, (void (*)(uint64_t))sub_1C22E0054);
  uint64_t v7 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_1C22DB394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UserDomainConceptViewData();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  unint64_t v12 = &OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier;
  char v13 = &OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData;
  uint64_t v35 = a3;
  if (v10)
  {
    uint64_t v33 = a2;
    uint64_t v38 = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1C2550490();
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    type metadata accessor for RecentUDCCell();
    char v37 = (void **)(a3 + qword_1EBB6E7B0);
    swift_beginAccess();
    uint64_t v34 = v7;
    uint64_t v36 = *(void *)(v7 + 72);
    do
    {
      sub_1C22DFF8C(v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      unint64_t v15 = *v37;
      type metadata accessor for UDCRecentItem();
      uint64_t v16 = swift_allocObject();
      uint64_t v17 = v13;
      uint64_t v18 = v12;
      uint64_t v19 = (uint64_t *)(v16 + *v12);
      sub_1C22E0214(&qword_1EA2E0810, (void (*)(uint64_t))type metadata accessor for RecentUDCCell);
      id v20 = v15;
      *uint64_t v19 = sub_1C254D330();
      v19[1] = v21;
      unint64_t v12 = v18;
      char v13 = v17;
      sub_1C22E025C((uint64_t)v9, v16 + *v17, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      *(void *)(v16 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_healthStore) = v20;
      *(void *)(v16 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_listConfiguration) = 0;
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      v14 += v36;
      --v10;
    }
    while (v10);
    uint64_t v22 = v38;
    uint64_t v7 = v34;
    a3 = v35;
    a2 = v33;
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_retain();
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = *(void *)(a2 + 16);
  if (v23)
  {
    uint64_t v34 = v22;
    uint64_t v39 = v11;
    sub_1C2550490();
    uint64_t v24 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    type metadata accessor for RecentUDCCell();
    char v37 = (void **)(a3 + qword_1EBB6E7B0);
    swift_beginAccess();
    uint64_t v36 = *(void *)(v7 + 72);
    uint64_t v25 = v13;
    uint64_t v26 = v12;
    do
    {
      sub_1C22DFF8C(v24, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      uint64_t v27 = *v37;
      type metadata accessor for UDCRecentItem();
      uint64_t v28 = swift_allocObject();
      uint64_t v29 = (uint64_t *)(v28 + *v26);
      sub_1C22E0214(&qword_1EA2E0810, (void (*)(uint64_t))type metadata accessor for RecentUDCCell);
      id v30 = v27;
      *uint64_t v29 = sub_1C254D330();
      v29[1] = v31;
      sub_1C22E025C((uint64_t)v9, v28 + *v25, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      *(void *)(v28 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_healthStore) = v30;
      *(void *)(v28 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_listConfiguration) = 0;
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      v24 += v36;
      --v23;
    }
    while (v23);
    swift_release();
    return v34;
  }
  else
  {
    swift_release();
  }
  return v22;
}

uint64_t sub_1C22DB7DC(unint64_t a1, unint64_t a2)
{
  unint64_t v104 = a1;
  uint64_t v100 = sub_1C254CB40();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  id v98 = (char *)&v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (unint64_t *)sub_1C254DEA0();
  uint64_t v107 = *(v4 - 1);
  MEMORY[0x1F4188790](v4);
  id v106 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1C254D9B0();
  uint64_t v6 = *(void **)(v108 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v108);
  id v105 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v103 = (char *)&v97 - v9;
  uint64_t v10 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = (unint64_t *)MEMORY[0x1E4FBC868];
  if (a2 >> 62) {
    goto LABEL_82;
  }
  uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v110 = v6;
    id v101 = v4;
    unint64_t v114 = a2;
    if (v13)
    {
      uint64_t v14 = (unint64_t *)MEMORY[0x1E4FBC868];
      unint64_t v113 = a2 & 0xC000000000000001;
      uint64_t v15 = 4;
      uint64_t v112 = (void (*)(unint64_t, char *, uint64_t))(MEMORY[0x1E4FBC838] + 8);
      long long v111 = xmmword_1C255CEB0;
      while (1)
      {
        uint64_t v4 = (unint64_t *)(v15 - 4);
        if (v113)
        {
          uint64_t v16 = MEMORY[0x1C87588E0](v15 - 4, a2);
          uint64_t v17 = v15 - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_78;
          }
        }
        else
        {
          uint64_t v16 = *(void *)(a2 + 8 * v15);
          swift_retain();
          uint64_t v17 = v15 - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_78:
            __break(1u);
LABEL_79:
            __break(1u);
LABEL_80:
            __break(1u);
            goto LABEL_81;
          }
        }
        sub_1C22DFF8C(v16 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
        uint64_t v18 = sub_1C22DE3D4((uint64_t)v12);
        uint64_t v4 = v14;
        a2 = sub_1C21A93C4(v18);
        unint64_t v20 = v14[2];
        BOOL v21 = (v19 & 1) == 0;
        uint64_t v22 = v20 + v21;
        if (__OFADD__(v20, v21)) {
          goto LABEL_79;
        }
        uint64_t v6 = v19;
        if ((uint64_t)v14[3] < v22)
        {
          sub_1C227BB9C(v22, 1);
          uint64_t v14 = v119;
          uint64_t v23 = sub_1C21A93C4(v18);
          if ((v6 & 1) != (v24 & 1))
          {
            sub_1C2550910();
            __break(1u);
            goto LABEL_84;
          }
          a2 = v23;
        }
        if (v6)
        {
          uint64_t v4 = (unint64_t *)(v14[7] + 8 * a2);
          MEMORY[0x1C8757C00]();
          uint64_t v6 = *(void **)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
          a2 = v114;
          if ((unint64_t)v6 >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C254F760();
          }
          sub_1C254F790();
          sub_1C254F730();
        }
        else
        {
          sub_1C21F0F44(0, (unint64_t *)&qword_1EBB6F4E0, (uint64_t)v112, MEMORY[0x1E4FBBE00]);
          uint64_t v25 = swift_allocObject();
          *(_OWORD *)(v25 + 16) = v111;
          *(void *)(v25 + 32) = v16;
          unint64_t v117 = v25;
          uint64_t v4 = &v117;
          sub_1C254F730();
          unint64_t v26 = v117;
          v14[(a2 >> 6) + 8] |= 1 << a2;
          *(unsigned char *)(v14[6] + a2) = v18;
          *(void *)(v14[7] + 8 * a2) = v26;
          unint64_t v27 = v14[2];
          BOOL v28 = __OFADD__(v27, 1);
          unint64_t v29 = v27 + 1;
          if (v28) {
            goto LABEL_80;
          }
          uint64_t v14[2] = v29;
          a2 = v114;
        }
        ++v15;
        if (v17 == v13)
        {
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = (unint64_t *)MEMORY[0x1E4FBC868];
LABEL_23:
    uint64_t v6 = sub_1C2290160((uint64_t)v14);
    swift_release();
    uint64_t v30 = v6[2];
    if (!v30) {
      break;
    }
    if (*((unsigned char *)v6 + 32) == 5)
    {
      BOOL v31 = 0;
      int v32 = 1;
      goto LABEL_28;
    }
    if (v30 == 1) {
      break;
    }
    id v93 = (unsigned __int8 *)(v6 + 6);
    uint64_t v94 = 1;
    while (1)
    {
      uint64_t v95 = v94 + 1;
      if (__OFADD__(v94, 1)) {
        break;
      }
      int v96 = *v93;
      BOOL v31 = v96 != 5;
      if (v96 == 5)
      {
        int v32 = 1;
        goto LABEL_28;
      }
      ++v94;
      v93 += 16;
      if (v95 == v30)
      {
        int v32 = 4;
        goto LABEL_28;
      }
    }
LABEL_81:
    __break(1u);
LABEL_82:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C2550620();
  }
  int v32 = 4;
  BOOL v31 = 1;
LABEL_28:
  int v33 = 2;
  if ((sub_1C22E88BC(a2) & 1) == 0)
  {
    if (sub_1C224FBC0(0xD000000000000026, 0x80000001C2577990, 0)) {
      int v33 = 2;
    }
    else {
      int v33 = 4;
    }
  }
  int v102 = v33;
  LODWORD(v113) = v32;
  v119 = (unint64_t *)sub_1C22E8330(v104);
  swift_getKeyPath();
  sub_1C22DFD28(0, &qword_1EA2DF250, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, MEMORY[0x1E4FBB320]);
  sub_1C22DFD8C();
  uint64_t v112 = (void (*)(unint64_t, char *, uint64_t))sub_1C254F650();
  *(void *)&long long v111 = 0;
  swift_release();
  swift_bridgeObjectRelease();
  if (v30)
  {
    uint64_t v34 = v6 + 5;
    uint64_t v35 = (unint64_t *)MEMORY[0x1E4FBC860];
    do
    {
      int v39 = *((unsigned __int8 *)v34 - 8);
      if (v39 != 5)
      {
        uint64_t v40 = *v34;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v119 = v35;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C2274CB0(0, v35[2] + 1, 1);
          uint64_t v35 = v119;
        }
        unint64_t v37 = v35[2];
        unint64_t v36 = v35[3];
        if (v37 >= v36 >> 1)
        {
          sub_1C2274CB0(v36 > 1, v37 + 1, 1);
          uint64_t v35 = v119;
        }
        v35[2] = v37 + 1;
        uint64_t v38 = &v35[2 * v37];
        *((unsigned char *)v38 + 32) = v39;
        v38[5] = v40;
      }
      v34 += 2;
      --v30;
    }
    while (v30);
  }
  else
  {
    uint64_t v35 = (unint64_t *)MEMORY[0x1E4FBC860];
  }
  swift_release();
  v119 = v35;
  swift_retain();
  uint64_t v42 = v111;
  sub_1C22DDA08(&v119);
  if (v42)
  {
LABEL_84:
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    *(void *)&long long v111 = sub_1C22DAD7C((uint64_t)v119);
    swift_release();
    sub_1C22DFE14();
    uint64_t inited = swift_initStackObject();
    long long v97 = xmmword_1C255CDA0;
    *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
    char v44 = v113;
    *(unsigned char *)(inited + 32) = v113;
    int v45 = v102;
    *(unsigned char *)(inited + 33) = v102;
    unint64_t v46 = MEMORY[0x1E4FBC860];
    uint64_t v47 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v48 = v110;
    if (!v31)
    {
      uint64_t v47 = sub_1C226D228(0, 1, 1, MEMORY[0x1E4FBC860]);
      unint64_t v50 = *((void *)v47 + 2);
      unint64_t v49 = *((void *)v47 + 3);
      if (v50 >= v49 >> 1) {
        uint64_t v47 = sub_1C226D228((char *)(v49 > 1), v50 + 1, 1, v47);
      }
      *((void *)v47 + 2) = v50 + 1;
      v47[v50 + 32] = v44;
      int v45 = *(unsigned __int8 *)(inited + 33);
    }
    if (v45 != 4)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v47 = sub_1C226D228(0, *((void *)v47 + 2) + 1, 1, v47);
      }
      unint64_t v52 = *((void *)v47 + 2);
      unint64_t v51 = *((void *)v47 + 3);
      if (v52 >= v51 >> 1) {
        uint64_t v47 = sub_1C226D228((char *)(v51 > 1), v52 + 1, 1, v47);
      }
      *((void *)v47 + 2) = v52 + 1;
      v47[v52 + 32] = v45;
    }
    swift_bridgeObjectRelease();
    uint64_t v53 = *((void *)v47 + 2);
    if (v53)
    {
      unint64_t v117 = v46;
      uint64_t v54 = v109;
      swift_retain();
      sub_1C2550490();
      type metadata accessor for NavigationCell();
      uint64_t v55 = (void **)(v54 + qword_1EBB6E7B0);
      swift_beginAccess();
      type metadata accessor for NavigationItem();
      uint64_t v56 = 0;
      do
      {
        uint64_t v57 = v56 + 1;
        char v58 = v47[v56 + 32];
        long long v59 = *v55;
        uint64_t v60 = swift_allocObject();
        sub_1C22E0214(&qword_1EA2E0818, (void (*)(uint64_t))type metadata accessor for NavigationCell);
        id v61 = v59;
        *(void *)(v60 + 16) = sub_1C254D330();
        *(void *)(v60 + 24) = v62;
        *(unsigned char *)(v60 + 32) = v58;
        *(unsigned char *)(v60 + 33) = 2;
        *(void *)(v60 + 40) = v61;
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
        uint64_t v56 = v57;
      }
      while (v53 != v57);
      unint64_t v63 = v117;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v48 = v110;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v63 = MEMORY[0x1E4FBC860];
    }
    sub_1C22DFD28(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
    unint64_t v64 = v48[9];
    unint64_t v65 = (*((unsigned __int8 *)v48 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v48 + 80);
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_1C255CD90;
    unint64_t v113 = v65;
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v67 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C228ADF0((unint64_t)v112);
    swift_bridgeObjectRelease();
    sub_1C254D990();
    unint64_t v118 = v66;
    sub_1C227283C(v111);
    sub_1C228AE38(v63);
    swift_bridgeObjectRelease();
    uint64_t v68 = v103;
    sub_1C254D990();
    unint64_t v69 = v118;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v69 = sub_1C226D014(0, *(void *)(v69 + 16) + 1, 1, v69);
    }
    unint64_t v71 = *(void *)(v69 + 16);
    unint64_t v70 = *(void *)(v69 + 24);
    if (v71 >= v70 >> 1) {
      unint64_t v69 = sub_1C226D014(v70 > 1, v71 + 1, 1, v69);
    }
    *(void *)(v69 + 16) = v71 + 1;
    id v74 = (void (*)(void, void, void))v48[4];
    id v73 = v48 + 4;
    id v72 = (void (*)(unint64_t, char *, uint64_t))v74;
    v74(v69 + v113 + v71 * v64, v68, v108);
    unint64_t v118 = v69;
    if (sub_1C22DB008(v114) & 1) != 0 || (sub_1C22DB008(v104))
    {
      uint64_t v112 = v72;
      unint64_t v114 = v64;
      uint64_t v110 = v73;
      id v75 = (void **)(v109 + qword_1EBB6E7B0);
      swift_beginAccess();
      id v76 = *v75;
      uint64_t v77 = type metadata accessor for NavigationItem();
      uint64_t v78 = swift_allocObject();
      type metadata accessor for NavigationCell();
      sub_1C22E0214(&qword_1EA2E0818, (void (*)(uint64_t))type metadata accessor for NavigationCell);
      id v79 = v76;
      *(void *)(v78 + 16) = sub_1C254D330();
      *(void *)(v78 + 24) = v80;
      *(_WORD *)(v78 + 32) = 515;
      *(void *)(v78 + 40) = v79;
      id v81 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      uint64_t v115 = 0x74497265746F6F46;
      unint64_t v116 = 0xEB000000005F6D65;
      id v82 = v98;
      sub_1C254CB30();
      sub_1C254CAF0();
      (*(void (**)(char *, uint64_t))(v99 + 8))(v82, v100);
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      id v83 = v106;
      sub_1C254DE90();
      id v84 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      sub_1C22DFD28(0, &qword_1EA2DF5D0, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBBE00]);
      uint64_t v85 = swift_allocObject();
      *(_OWORD *)(v85 + 16) = v97;
      *(void *)(v85 + 56) = v77;
      *(void *)(v85 + 64) = sub_1C22E0214(&qword_1EA2DFB88, (void (*)(uint64_t))type metadata accessor for NavigationItem);
      *(void *)(v85 + 32) = v78;
      id v86 = v101;
      *(void *)(v85 + 96) = v101;
      *(void *)(v85 + 104) = sub_1C22E0214(&qword_1EA2DE9A0, MEMORY[0x1E4F665E8]);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v85 + 72));
      (*(void (**)(uint64_t *, char *, unint64_t *))(v107 + 16))(boxed_opaque_existential_1, v83, v86);
      swift_retain();
      sub_1C254D990();
      unint64_t v88 = v118;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v88 = sub_1C226D014(0, *(void *)(v88 + 16) + 1, 1, v88);
      }
      unint64_t v90 = *(void *)(v88 + 16);
      unint64_t v89 = *(void *)(v88 + 24);
      unint64_t v91 = v114;
      if (v90 >= v89 >> 1) {
        unint64_t v88 = sub_1C226D014(v89 > 1, v90 + 1, 1, v88);
      }
      *(void *)(v88 + 16) = v90 + 1;
      v112(v88 + v113 + v90 * v91, v105, v108);
      swift_release();
      unint64_t v118 = v88;
      (*(void (**)(char *, unint64_t *))(v107 + 8))(v106, v86);
      return v118;
    }
    return v69;
  }
  return result;
}

uint64_t sub_1C22DC86C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for UserDomainConceptViewData();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (id *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C22DFD28(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v15 - v9;
  sub_1C21EA654(a1 + *(int *)(v5 + 44), (uint64_t)&v15 - v9);
  sub_1C22DFF8C(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
  uint64_t v11 = sub_1C254CAD0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    id v13 = objc_msgSend(v7[1], sel_modificationDate);
    sub_1C254CA80();

    sub_1C22178C0((uint64_t)v10);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2, v10, v11);
  }
  return sub_1C22DFFF4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
}

uint64_t sub_1C22DCA58()
{
  return sub_1C254CA60() & 1;
}

uint64_t sub_1C22DCA84(char a1)
{
  switch(a1)
  {
    case 1:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_16;
      }
      break;
    case 2:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_16;
      }
      break;
    case 3:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_16;
      }
      break;
    case 4:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_16;
      }
      break;
    case 5:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_16;
      }
      break;
    case 6:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_16;
      }
      break;
    default:
      if (qword_1EBB6EF40 != -1) {
LABEL_16:
      }
        swift_once();
      break;
  }
  id v1 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1C22DCE34@<X0>(unint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  id v75 = a2;
  uint64_t v6 = sub_1C254DC90();
  uint64_t v73 = *(void *)(v6 - 8);
  uint64_t v74 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v70 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254D440();
  uint64_t v71 = *(void *)(v8 - 8);
  uint64_t v72 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v69 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254DB50();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v81 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C254D9B0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  unint64_t v20 = (char *)&v68 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v68 - v21;
  uint64_t v82 = v3;
  uint64_t v23 = sub_1C254DA00();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (*(void *)(v23 + 16) <= a1)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v76 = v17;
  uint64_t v77 = v11;
  uint64_t v78 = v10;
  id v79 = a3;
  unint64_t v24 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v25 = *(void *)(v14 + 72);
  unint64_t v80 = a1;
  a1 *= v25;
  unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
  v26(v22, v23 + v24 + a1, v13);
  swift_bridgeObjectRelease();
  sub_1C254D9A0();
  uint64_t v28 = v27;
  unint64_t v29 = *(void (**)(char *, uint64_t))(v14 + 8);
  v29(v22, v13);
  swift_bridgeObjectRelease();
  uint64_t v68 = v28;
  uint64_t v22 = v81;
  if (v28) {
    sub_1C254DA90();
  }
  else {
    sub_1C254DAE0();
  }
  sub_1C254DAF0();
  uint64_t v30 = sub_1C254DA00();
  if (*(void *)(v30 + 16) <= v80) {
    goto LABEL_28;
  }
  v26(v20, v30 + v24 + a1, v13);
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_1C254D960();
  uint64_t v22 = v32;
  v29(v20, v13);
  if (v31 == 0xD00000000000001BLL && v22 == (char *)0x80000001C257ADC0) {
    goto LABEL_9;
  }
  char v33 = sub_1C2550870();
  swift_bridgeObjectRelease();
  if (v33) {
    goto LABEL_11;
  }
  uint64_t v46 = sub_1C254DA00();
  if (*(void *)(v46 + 16) <= v80) {
    goto LABEL_29;
  }
  unint64_t v47 = v46 + v24 + a1;
  uint64_t v48 = v76;
  v26(v76, v47, v13);
  swift_bridgeObjectRelease();
  uint64_t v49 = sub_1C254D960();
  uint64_t v22 = v50;
  v29(v48, v13);
  if (v49 == 0xD000000000000018 && v22 == (char *)0x80000001C257ADE0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_11:
    sub_1C22DD8FC();
    uint64_t v35 = *(int *)(v34 + 48);
    uint64_t v37 = v77;
    uint64_t v36 = v78;
    uint64_t v38 = v79;
    int v39 = v81;
    (*(void (**)(void *, char *, uint64_t))(v77 + 16))(v79, v81, v78);
    uint64_t v40 = v82 + qword_1EBB6E7C8;
    swift_beginAccess();
    uint64_t v41 = MEMORY[0x1C875A200](v40);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
    goto LABEL_12;
  }
  char v51 = sub_1C2550870();
  swift_bridgeObjectRelease();
  if (v51) {
    goto LABEL_11;
  }
  unint64_t v52 = (char *)objc_msgSend(self, sel_sharedBehavior);
  if (!v52) {
    goto LABEL_30;
  }
  uint64_t v22 = v52;
  id v53 = objc_msgSend(v52, sel_features);

  if (v53)
  {
    unsigned int v54 = objc_msgSend(v53, sel_stanley);

    uint64_t v55 = v78;
    uint64_t v38 = v79;
    uint64_t v56 = v77;
    if (v54)
    {
      id v57 = objc_msgSend(v75, sel_traitCollection);
      id v58 = objc_msgSend(v57, sel_horizontalSizeClass);

      if (v58 == (id)2)
      {
        long long v59 = v69;
        sub_1C254D420();
        type metadata accessor for RecentLabsDataSource();
        swift_unknownObjectRetain();
        sub_1C254D680();
        uint64_t v60 = v70;
        sub_1C254DC70();
        id v61 = (void *)sub_1C254D410();
        (*(void (**)(char *, uint64_t))(v73 + 8))(v60, v74);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v59, v72);
        if (v68)
        {
          uint64_t v62 = self;
          id v63 = v61;
          id v64 = objc_msgSend(v62, sel_estimatedDimension_, 100.0);
          id v61 = (void *)sub_1C254FDA0();
        }
        (*(void (**)(char *, uint64_t))(v56 + 8))(v81, v55);
        *uint64_t v38 = v61;
        uint64_t v42 = (unsigned int *)MEMORY[0x1E4F664A0];
        goto LABEL_13;
      }
    }
    sub_1C22DD8FC();
    uint64_t v35 = *(int *)(v65 + 48);
    uint64_t v66 = v81;
    (*(void (**)(void *, char *, uint64_t))(v56 + 16))(v38, v81, v55);
    uint64_t v67 = v82 + qword_1EBB6E7C8;
    swift_beginAccess();
    uint64_t v41 = MEMORY[0x1C875A200](v67);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v66, v55);
LABEL_12:
    *(void *)((char *)v38 + v35) = v41;
    uint64_t v42 = (unsigned int *)MEMORY[0x1E4F66498];
LABEL_13:
    uint64_t v43 = *v42;
    uint64_t v44 = sub_1C254DA70();
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 104))(v38, v43, v44);
    sub_1C254DA70();
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v38, 0, 1, v44);
  }
LABEL_31:
  __break(1u);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v22, v74);
  (*(void (**)(unint64_t, uint64_t))(v71 + 8))(a1, v72);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C22DD69C()
{
  return sub_1C254FAD0();
}

void sub_1C22DD7CC()
{
}

uint64_t sub_1C22DD7FC()
{
  return swift_release();
}

uint64_t sub_1C22DD80C()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1C23A3C70(v0);
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1C254DA50();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C22DD8F4()
{
  return type metadata accessor for RecentLabsDataSource();
}

void sub_1C22DD8FC()
{
  if (!qword_1EA2E0820)
  {
    sub_1C254DB50();
    sub_1C22DFD28(255, &qword_1EA2E0828, (uint64_t (*)(uint64_t))sub_1C22DD99C, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E0820);
    }
  }
}

unint64_t sub_1C22DD99C()
{
  unint64_t result = qword_1EA2E0830;
  if (!qword_1EA2E0830)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E0830);
  }
  return result;
}

unint64_t sub_1C22DD9DC@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1C22E04B0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C22DDA08(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_1C23F3710(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_1C22DDA74(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1C22DDA74(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C2550800();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v85 = 0;
      uint64_t v86 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unsigned int v88 = *(unsigned __int8 *)(v86 + 16 * i);
        uint64_t v89 = v85;
        do
        {
          if (v88 >= *(unsigned __int8 *)(v86 + v89)) {
            break;
          }
          if (!v86) {
            goto LABEL_140;
          }
          uint64_t v90 = v86 + v89;
          uint64_t v91 = *(void *)(v86 + v89 + 24);
          *(_OWORD *)(v86 + v89 + 16) = *(_OWORD *)(v86 + v89);
          *(unsigned char *)uint64_t v90 = v88;
          *(void *)(v90 + 8) = v91;
          v89 -= 16;
        }
        while (v89 != -16);
        v85 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  id v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (unsigned __int8 *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_102:
      id v92 = v12;
      uint64_t v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v93 = *v101;
        do
        {
          unint64_t v94 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v93) {
            goto LABEL_144;
          }
          uint64_t v95 = v92;
          uint64_t v96 = *(void *)&v92[16 * v94 + 32];
          uint64_t v97 = *(void *)&v92[16 * v13 + 24];
          sub_1C22DE158((unsigned __int8 *)(v93 + 16 * v96), (unsigned __int8 *)(v93 + 16 * *(void *)&v92[16 * v13 + 16]), v93 + 16 * v97, __dst);
          if (v1) {
            break;
          }
          if (v97 < v96) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v95 = sub_1C23F321C((uint64_t)v95);
          }
          if (v94 >= *((void *)v95 + 2)) {
            goto LABEL_133;
          }
          id v98 = &v95[16 * v94 + 32];
          *(void *)id v98 = v96;
          *((void *)v98 + 1) = v97;
          unint64_t v99 = *((void *)v95 + 2);
          if (v13 > v99) {
            goto LABEL_134;
          }
          memmove(&v95[16 * v13 + 16], &v95[16 * v13 + 32], 16 * (v99 - v13));
          id v92 = v95;
          *((void *)v95 + 2) = v99 - 1;
          unint64_t v13 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_1C2284770();
    uint64_t v8 = sub_1C254F780();
    *(void *)(v8 + 16) = v7;
    uint64_t v103 = v8;
    __dst = (unsigned __int8 *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 32;
  uint64_t v100 = *a1 - 16;
  uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v104 = v6;
  uint64_t v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      unsigned int v15 = *(unsigned __int8 *)(v11 + 16 * v10);
      uint64_t v16 = 16 * v14;
      unsigned int v17 = *(unsigned __int8 *)(v11 + 16 * v14);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v18 = (unsigned __int8 *)(v102 + 16 * v14);
        unsigned int v19 = v15;
        while (1)
        {
          unsigned int v21 = *v18;
          v18 += 16;
          unsigned int v20 = v21;
          if (v15 < v17 == v21 >= v19) {
            break;
          }
          ++v10;
          unsigned int v19 = v20;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v22 = 16 * v10;
          uint64_t v23 = v10;
          uint64_t v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = v11 + v22;
              char v26 = *(unsigned char *)(v11 + v16);
              uint64_t v27 = *(void *)(v11 + v16 + 8);
              *(_OWORD *)(v11 + v16) = *(_OWORD *)(v11 + v22 - 16);
              *(unsigned char *)(v25 - 16) = v26;
              *(void *)(v25 - 8) = v27;
            }
            ++v24;
            v22 -= 16;
            v16 += 16;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v28 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v28 >= v3) {
      uint64_t v28 = v3;
    }
    if (v28 < v14) {
      break;
    }
    if (v10 != v28)
    {
      unint64_t v29 = (unsigned __int8 *)(v100 + 16 * v10);
      do
      {
        unsigned int v30 = *(unsigned __int8 *)(v11 + 16 * v10);
        uint64_t v31 = v14;
        int v32 = v29;
        do
        {
          if (v30 >= *v32) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v33 = *((void *)v32 + 3);
          *((_OWORD *)v32 + 1) = *(_OWORD *)v32;
          unsigned __int8 *v32 = v30;
          *((void *)v32 + 1) = v33;
          v32 -= 16;
          ++v31;
        }
        while (v10 != v31);
        ++v10;
        v29 += 16;
      }
      while (v10 != v28);
      uint64_t v10 = v28;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1C23F277C(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v35 = *((void *)v12 + 2);
    unint64_t v34 = *((void *)v12 + 3);
    unint64_t v13 = v35 + 1;
    uint64_t v11 = v106;
    if (v35 >= v34 >> 1)
    {
      id v84 = sub_1C23F277C((char *)(v34 > 1), v35 + 1, 1, v12);
      uint64_t v11 = v106;
      uint64_t v12 = v84;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v36 = v12 + 32;
    uint64_t v37 = &v12[16 * v35 + 32];
    *(void *)uint64_t v37 = v14;
    *((void *)v37 + 1) = v10;
    if (v35)
    {
      while (1)
      {
        unint64_t v38 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v43 = &v36[16 * v13];
          uint64_t v44 = *((void *)v43 - 8);
          uint64_t v45 = *((void *)v43 - 7);
          BOOL v49 = __OFSUB__(v45, v44);
          uint64_t v46 = v45 - v44;
          if (v49) {
            goto LABEL_119;
          }
          uint64_t v48 = *((void *)v43 - 6);
          uint64_t v47 = *((void *)v43 - 5);
          BOOL v49 = __OFSUB__(v47, v48);
          uint64_t v41 = v47 - v48;
          char v42 = v49;
          if (v49) {
            goto LABEL_120;
          }
          unint64_t v50 = v13 - 2;
          char v51 = &v36[16 * v13 - 32];
          uint64_t v53 = *(void *)v51;
          uint64_t v52 = *((void *)v51 + 1);
          BOOL v49 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          if (v49) {
            goto LABEL_122;
          }
          BOOL v49 = __OFADD__(v41, v54);
          uint64_t v55 = v41 + v54;
          if (v49) {
            goto LABEL_125;
          }
          if (v55 >= v46)
          {
            uint64_t v73 = &v36[16 * v38];
            uint64_t v75 = *(void *)v73;
            uint64_t v74 = *((void *)v73 + 1);
            BOOL v49 = __OFSUB__(v74, v75);
            uint64_t v76 = v74 - v75;
            if (v49) {
              goto LABEL_129;
            }
            BOOL v66 = v41 < v76;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v67 = *((void *)v12 + 4);
            uint64_t v68 = *((void *)v12 + 5);
            BOOL v49 = __OFSUB__(v68, v67);
            uint64_t v60 = v68 - v67;
            char v61 = v49;
            goto LABEL_77;
          }
          uint64_t v40 = *((void *)v12 + 4);
          uint64_t v39 = *((void *)v12 + 5);
          BOOL v49 = __OFSUB__(v39, v40);
          uint64_t v41 = v39 - v40;
          char v42 = v49;
        }
        if (v42) {
          goto LABEL_121;
        }
        unint64_t v50 = v13 - 2;
        uint64_t v56 = &v36[16 * v13 - 32];
        uint64_t v58 = *(void *)v56;
        uint64_t v57 = *((void *)v56 + 1);
        BOOL v59 = __OFSUB__(v57, v58);
        uint64_t v60 = v57 - v58;
        char v61 = v59;
        if (v59) {
          goto LABEL_124;
        }
        uint64_t v62 = &v36[16 * v38];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v49 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v49) {
          goto LABEL_127;
        }
        if (__OFADD__(v60, v65)) {
          goto LABEL_128;
        }
        if (v60 + v65 >= v41)
        {
          BOOL v66 = v41 < v65;
LABEL_83:
          if (v66) {
            unint64_t v38 = v50;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v61) {
          goto LABEL_123;
        }
        unint64_t v69 = &v36[16 * v38];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v49 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v49) {
          goto LABEL_126;
        }
        if (v72 < v60) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v77 = v38 - 1;
        if (v38 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        uint64_t v78 = v12;
        id v79 = &v36[16 * v77];
        uint64_t v80 = *(void *)v79;
        id v81 = &v36[16 * v38];
        uint64_t v82 = *((void *)v81 + 1);
        sub_1C22DE158((unsigned __int8 *)(v11 + 16 * *(void *)v79), (unsigned __int8 *)(v11 + 16 * *(void *)v81), v11 + 16 * v82, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v82 < v80) {
          goto LABEL_116;
        }
        if (v38 > *((void *)v78 + 2)) {
          goto LABEL_117;
        }
        *(void *)id v79 = v80;
        *(void *)&v36[16 * v77 + 8] = v82;
        unint64_t v83 = *((void *)v78 + 2);
        if (v38 >= v83) {
          goto LABEL_118;
        }
        uint64_t v12 = v78;
        unint64_t v13 = v83 - 1;
        memmove(&v36[16 * v38], v81 + 16, 16 * (v83 - 1 - v38));
        *((void *)v78 + 2) = v83 - 1;
        uint64_t v11 = v106;
        if (v83 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v104;
    uint64_t v3 = v105;
    if (v10 >= v105)
    {
      uint64_t v9 = v103;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_1C25505E0();
  __break(1u);
  return result;
}

uint64_t sub_1C22DE158(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v16 = &v4[16 * v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        unsigned int v17 = (unsigned __int8 *)(a3 - 16);
        uint64_t v18 = v6;
        while (1)
        {
          unsigned int v19 = v17 + 16;
          unsigned int v20 = *(v18 - 16);
          v18 -= 16;
          if (*(v16 - 16) >= v20)
          {
            uint64_t v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16) {
              *(_OWORD *)unsigned int v17 = *((_OWORD *)v16 - 1);
            }
            uint64_t v18 = v6;
            v16 -= 16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= v6) {
              *(_OWORD *)unsigned int v17 = *(_OWORD *)v18;
            }
            uint64_t v24 = v18;
            if (v18 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 16;
          uint64_t v6 = v18;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v23 = v4;
          unsigned int v15 = v6;
        }
        else
        {
          unsigned int v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1C23F2A38((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22DE3D4(uint64_t a1)
{
  sub_1C22DFE90();
  uint64_t v225 = v2;
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  v224 = (char *)&v190 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  v223 = (char *)&v190 - v5;
  sub_1C22DFEF8();
  uint64_t v226 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v198 = (uint64_t)&v190 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v205 = (uint64_t)&v190 - v10;
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v200 = (uint64_t)&v190 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v201 = (uint64_t)&v190 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v203 = (uint64_t)&v190 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v204 = (uint64_t)&v190 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v207 = (uint64_t)&v190 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v208 = (uint64_t)&v190 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v210 = (uint64_t)&v190 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  v222 = (char *)&v190 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v211 = (uint64_t)&v190 - v27;
  uint64_t v28 = sub_1C254CCC0();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v190 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22DFD28(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v32 - 8);
  unint64_t v34 = (char *)&v190 - v33;
  uint64_t v35 = sub_1C254CAD0();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  v197 = (char *)&v190 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v199 = (char *)&v190 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  v202 = (char *)&v190 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  v206 = (char *)&v190 - v44;
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  v209 = (char *)&v190 - v46;
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  id v215 = (char *)&v190 - v48;
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  v217 = (char *)&v190 - v50;
  uint64_t v51 = MEMORY[0x1F4188790](v49);
  v216 = (char *)&v190 - v52;
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  v218 = (char *)&v190 - v54;
  uint64_t v55 = MEMORY[0x1F4188790](v53);
  v221 = (char *)&v190 - v56;
  uint64_t v57 = MEMORY[0x1F4188790](v55);
  uint64_t v220 = (char *)&v190 - v58;
  uint64_t v59 = MEMORY[0x1F4188790](v57);
  char v61 = (char *)&v190 - v60;
  uint64_t v62 = MEMORY[0x1F4188790](v59);
  uint64_t v64 = (char *)&v190 - v63;
  uint64_t v65 = MEMORY[0x1F4188790](v62);
  v227 = (char *)&v190 - v66;
  MEMORY[0x1F4188790](v65);
  uint64_t v68 = (char *)&v190 - v67;
  uint64_t v69 = type metadata accessor for UserDomainConceptViewData();
  sub_1C21EA654(a1 + *(int *)(v69 + 36), (uint64_t)v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) == 1)
  {
    sub_1C22DFFF4(a1, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
    sub_1C22178C0((uint64_t)v34);
    return 5;
  }
  uint64_t v212 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  uint64_t v213 = v36 + 32;
  v212(v68, v34, v35);
  if (*(void *)(a1 + 16) == 1)
  {
    sub_1C22DFFF4(a1, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v68, v35);
    return 6;
  }
  uint64_t v192 = a1;
  sub_1C254CC80();
  sub_1C254CC00();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  sub_1C254CAC0();
  sub_1C254CA20();
  uint64_t v71 = v61;
  uint64_t v72 = *(void (**)(char *, uint64_t))(v36 + 8);
  v72(v64, v35);
  uint64_t v73 = v220;
  sub_1C254CA10();
  v194 = v71;
  v72(v71, v35);
  uint64_t v74 = v221;
  sub_1C254C9F0();
  uint64_t v75 = v73;
  uint64_t v76 = v74;
  v72(v75, v35);
  unint64_t v77 = v218;
  sub_1C254CAC0();
  uint64_t v78 = v216;
  sub_1C254CA00();
  v72(v77, v35);
  id v79 = v217;
  sub_1C254CA10();
  v72(v78, v35);
  uint64_t v80 = v215;
  sub_1C254C9F0();
  uint64_t v228 = v36 + 8;
  v72(v79, v35);
  id v81 = v76;
  uint64_t v82 = v80;
  uint64_t v83 = sub_1C22E0214((unint64_t *)&qword_1EA2E0860, MEMORY[0x1E4F27928]);
  uint64_t result = sub_1C254F3D0();
  if ((result & 1) == 0)
  {
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v195 = v64;
  v191 = v68;
  uint64_t v196 = v83;
  uint64_t v85 = v225;
  uint64_t v86 = *(int *)(v225 + 48);
  v219 = v72;
  id v87 = v223;
  unsigned int v88 = &v223[v86];
  uint64_t v89 = v212;
  v212(v223, v81, v35);
  uint64_t v90 = v88;
  uint64_t v193 = v88;
  v89(v88, v82, v35);
  uint64_t v91 = v224;
  id v92 = &v224[*(int *)(v85 + 48)];
  uint64_t v93 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  v93(v224, v87, v35);
  v93(v92, v90, v35);
  uint64_t v94 = (uint64_t)v222;
  v89(v222, v91, v35);
  v219(v92, v35);
  uint64_t v95 = &v91[*(int *)(v85 + 48)];
  uint64_t v96 = v87;
  uint64_t v97 = v219;
  v89(v91, v96, v35);
  v89(v95, v193, v35);
  v89((char *)(v94 + *(int *)(v226 + 36)), v95, v35);
  v97(v91, v35);
  uint64_t v98 = v211;
  sub_1C22E025C(v94, v211, (uint64_t (*)(void))sub_1C22DFEF8);
  unint64_t v99 = v227;
  LOBYTE(v91) = sub_1C254F3C0();
  uint64_t v100 = v209;
  uint64_t v214 = v36 + 16;
  id v215 = (char *)v93;
  v93(v209, v99, v35);
  uint64_t v101 = v210;
  sub_1C22DFF8C(v98, v210, (uint64_t (*)(void))sub_1C22DFEF8);
  if (v91)
  {
    char v102 = sub_1C254F3D0();
    sub_1C22DFFF4(v101, (uint64_t (*)(void))sub_1C22DFEF8);
    v97(v100, v35);
    sub_1C22DFFF4(v98, (uint64_t (*)(void))sub_1C22DFEF8);
    uint64_t v103 = v195;
    uint64_t v104 = v97;
    if (v102)
    {
      sub_1C22DFFF4(v192, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      v97(v227, v35);
      v97(v191, v35);
      return 4;
    }
  }
  else
  {
    sub_1C22DFFF4(v101, (uint64_t (*)(void))sub_1C22DFEF8);
    v97(v100, v35);
    sub_1C22DFFF4(v98, (uint64_t (*)(void))sub_1C22DFEF8);
    uint64_t v103 = v195;
    uint64_t v104 = v97;
  }
  sub_1C254CAC0();
  uint64_t v105 = v194;
  sub_1C254CA00();
  v104(v103, v35);
  uint64_t v106 = v220;
  sub_1C254CA10();
  v104(v105, v35);
  uint64_t v107 = v221;
  sub_1C254C9F0();
  v104(v106, v35);
  uint64_t v108 = v218;
  sub_1C254CAC0();
  uint64_t v109 = v216;
  sub_1C254CA10();
  v104(v108, v35);
  uint64_t v110 = v217;
  sub_1C254C9F0();
  v104(v109, v35);
  uint64_t result = sub_1C254F3D0();
  if ((result & 1) == 0) {
    goto LABEL_33;
  }
  uint64_t v111 = v225;
  uint64_t v112 = v223;
  unint64_t v113 = &v223[*(int *)(v225 + 48)];
  unint64_t v114 = v212;
  v212(v223, v107, v35);
  v114(v113, v110, v35);
  uint64_t v115 = v224;
  unint64_t v116 = &v224[*(int *)(v111 + 48)];
  unint64_t v117 = (void (*)(char *, char *, uint64_t))v215;
  ((void (*)(char *, char *, uint64_t))v215)(v224, v112, v35);
  v117(v116, v113, v35);
  unint64_t v118 = v222;
  v114(v222, v115, v35);
  v119 = v219;
  v219(v116, v35);
  uint64_t v120 = &v115[*(int *)(v111 + 48)];
  v114(v115, v112, v35);
  v114(v120, v113, v35);
  v114(&v118[*(int *)(v226 + 36)], v120, v35);
  v119(v115, v35);
  uint64_t v121 = (uint64_t)v118;
  uint64_t v122 = v208;
  sub_1C22E025C(v121, v208, (uint64_t (*)(void))sub_1C22DFEF8);
  unint64_t v123 = v227;
  LOBYTE(v120) = sub_1C254F3C0();
  uint64_t v124 = v206;
  ((void (*)(char *, char *, uint64_t))v215)(v206, v123, v35);
  uint64_t v125 = v207;
  sub_1C22DFF8C(v122, v207, (uint64_t (*)(void))sub_1C22DFEF8);
  if (v120)
  {
    char v126 = sub_1C254F3D0();
    sub_1C22DFFF4(v125, (uint64_t (*)(void))sub_1C22DFEF8);
    uint64_t v127 = v219;
    v219(v124, v35);
    sub_1C22DFFF4(v122, (uint64_t (*)(void))sub_1C22DFEF8);
    uint64_t v128 = v127;
    if (v126)
    {
      sub_1C22DFFF4(v192, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      v127(v227, v35);
      v127(v191, v35);
      return 3;
    }
  }
  else
  {
    sub_1C22DFFF4(v125, (uint64_t (*)(void))sub_1C22DFEF8);
    uint64_t v129 = v219;
    v219(v124, v35);
    sub_1C22DFFF4(v122, (uint64_t (*)(void))sub_1C22DFEF8);
    uint64_t v128 = v129;
  }
  unint64_t v130 = v195;
  sub_1C254CAC0();
  id v131 = v194;
  sub_1C254CA10();
  v128(v130, v35);
  uint64_t v132 = v220;
  sub_1C254C9F0();
  v128(v131, v35);
  uint64_t v133 = v221;
  sub_1C254CAC0();
  uint64_t v134 = v218;
  sub_1C254C9F0();
  v128(v133, v35);
  uint64_t result = sub_1C254F3D0();
  if ((result & 1) == 0) {
    goto LABEL_34;
  }
  uint64_t v135 = v225;
  uint64_t v136 = v223;
  uint64_t v137 = &v223[*(int *)(v225 + 48)];
  uint64_t v138 = v132;
  uint64_t v139 = v212;
  v212(v223, v138, v35);
  v217 = v137;
  v139(v137, v134, v35);
  uint64_t v140 = v224;
  uint64_t v141 = &v224[*(int *)(v135 + 48)];
  uint64_t v142 = (void (*)(char *, char *, uint64_t))v215;
  ((void (*)(char *, char *, uint64_t))v215)(v224, v136, v35);
  v142(v141, v137, v35);
  uint64_t v143 = (uint64_t)v222;
  v139(v222, v140, v35);
  uint64_t v144 = v141;
  uint64_t v145 = v219;
  v219(v144, v35);
  unint64_t v146 = &v140[*(int *)(v135 + 48)];
  v139(v140, v136, v35);
  v139(v146, v217, v35);
  uint64_t v147 = v145;
  v139((char *)(v143 + *(int *)(v226 + 36)), v146, v35);
  v145(v140, v35);
  uint64_t v148 = v204;
  sub_1C22E025C(v143, v204, (uint64_t (*)(void))sub_1C22DFEF8);
  uint64_t v149 = v227;
  LOBYTE(v145) = sub_1C254F3C0();
  uint64_t v150 = v202;
  ((void (*)(char *, char *, uint64_t))v215)(v202, v149, v35);
  uint64_t v151 = v203;
  sub_1C22DFF8C(v148, v203, (uint64_t (*)(void))sub_1C22DFEF8);
  if (v145)
  {
    char v152 = sub_1C254F3D0();
    sub_1C22DFFF4(v151, (uint64_t (*)(void))sub_1C22DFEF8);
    v147(v150, v35);
    sub_1C22DFFF4(v148, (uint64_t (*)(void))sub_1C22DFEF8);
    uint64_t v153 = v221;
    uint64_t v154 = v195;
    if (v152)
    {
      sub_1C22DFFF4(v192, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      v147(v227, v35);
      v147(v191, v35);
      return 2;
    }
  }
  else
  {
    sub_1C22DFFF4(v151, (uint64_t (*)(void))sub_1C22DFEF8);
    v147(v150, v35);
    sub_1C22DFFF4(v148, (uint64_t (*)(void))sub_1C22DFEF8);
    uint64_t v153 = v221;
    uint64_t v154 = v195;
  }
  sub_1C254CAC0();
  BOOL v155 = v194;
  sub_1C254C9F0();
  v147(v154, v35);
  sub_1C254CAC0();
  uint64_t v156 = v220;
  sub_1C254C9E0();
  v147(v153, v35);
  uint64_t result = sub_1C254F3D0();
  if ((result & 1) == 0) {
    goto LABEL_35;
  }
  uint64_t v157 = v225;
  unint64_t v158 = v223;
  uint64_t v159 = &v223[*(int *)(v225 + 48)];
  uint64_t v160 = v212;
  v212(v223, v155, v35);
  v160(v159, v156, v35);
  uint64_t v161 = v224;
  BOOL v162 = &v224[*(int *)(v157 + 48)];
  uint64_t v163 = (void (*)(char *, char *, uint64_t))v215;
  ((void (*)(char *, char *, uint64_t))v215)(v224, v158, v35);
  v163(v162, v159, v35);
  uint64_t v164 = (uint64_t)v222;
  v160(v222, v161, v35);
  v165 = v219;
  v219(v162, v35);
  uint64_t v166 = &v161[*(int *)(v157 + 48)];
  v160(v161, v158, v35);
  v160(v166, v159, v35);
  v160((char *)(v164 + *(int *)(v226 + 36)), v166, v35);
  v165(v161, v35);
  uint64_t v167 = v201;
  sub_1C22E025C(v164, v201, (uint64_t (*)(void))sub_1C22DFEF8);
  uint64_t v168 = v227;
  uint64_t v169 = v167;
  LOBYTE(v167) = sub_1C254F3C0();
  uint64_t v170 = v199;
  ((void (*)(char *, char *, uint64_t))v215)(v199, v168, v35);
  uint64_t v171 = v200;
  sub_1C22DFF8C(v169, v200, (uint64_t (*)(void))sub_1C22DFEF8);
  if (v167)
  {
    char v172 = sub_1C254F3D0();
    sub_1C22DFFF4(v171, (uint64_t (*)(void))sub_1C22DFEF8);
    v219(v170, v35);
    unint64_t v173 = v219;
    sub_1C22DFFF4(v169, (uint64_t (*)(void))sub_1C22DFEF8);
    uint64_t v174 = v195;
    if (v172)
    {
      sub_1C22DFFF4(v192, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      v173(v227, v35);
      v173(v191, v35);
      return 1;
    }
  }
  else
  {
    sub_1C22DFFF4(v171, (uint64_t (*)(void))sub_1C22DFEF8);
    unint64_t v173 = v219;
    v219(v170, v35);
    sub_1C22DFFF4(v169, (uint64_t (*)(void))sub_1C22DFEF8);
    uint64_t v174 = v195;
  }
  unint64_t v175 = v194;
  sub_1C254CAC0();
  sub_1C254C9E0();
  v173(v175, v35);
  sub_1C254CAC0();
  uint64_t result = sub_1C254F3D0();
  if (result)
  {
    uint64_t v176 = v225;
    long long v177 = v223;
    uint64_t v178 = &v223[*(int *)(v225 + 48)];
    uint64_t v179 = v212;
    v212(v223, v174, v35);
    v179(v178, v175, v35);
    uint64_t v180 = v224;
    unint64_t v181 = &v224[*(int *)(v176 + 48)];
    uint64_t v182 = (void (*)(char *, char *, uint64_t))v215;
    ((void (*)(char *, char *, uint64_t))v215)(v224, v177, v35);
    v182(v181, v178, v35);
    uint64_t v183 = (uint64_t)v222;
    v179(v222, v180, v35);
    unint64_t v184 = v219;
    v219(v181, v35);
    uint64_t v185 = &v180[*(int *)(v225 + 48)];
    v179(v180, v177, v35);
    v179(v185, v178, v35);
    v179((char *)(v183 + *(int *)(v226 + 36)), v185, v35);
    v184(v180, v35);
    uint64_t v186 = v205;
    sub_1C22E025C(v183, v205, (uint64_t (*)(void))sub_1C22DFEF8);
    v187 = v227;
    LOBYTE(v185) = sub_1C254F3C0();
    unint64_t v188 = v197;
    ((void (*)(char *, char *, uint64_t))v215)(v197, v187, v35);
    uint64_t v189 = v198;
    sub_1C22DFF8C(v186, v198, (uint64_t (*)(void))sub_1C22DFEF8);
    uint64_t v70 = 5;
    if (v185)
    {
      if (sub_1C254F3D0()) {
        uint64_t v70 = 0;
      }
      else {
        uint64_t v70 = 5;
      }
    }
    sub_1C22DFFF4(v189, (uint64_t (*)(void))sub_1C22DFEF8);
    v184(v188, v35);
    sub_1C22DFFF4(v192, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
    sub_1C22DFFF4(v205, (uint64_t (*)(void))sub_1C22DFEF8);
    v184(v227, v35);
    v184(v191, v35);
    return v70;
  }
LABEL_36:
  __break(1u);
  return result;
}

void sub_1C22DFD28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C22DFD8C()
{
  unint64_t result = qword_1EA2E0838;
  if (!qword_1EA2E0838)
  {
    sub_1C22DFD28(255, &qword_1EA2DF250, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0838);
  }
  return result;
}

void sub_1C22DFE14()
{
  if (!qword_1EA2E0840)
  {
    sub_1C21F0F44(255, (unint64_t *)&qword_1EA2E0848, (uint64_t)&type metadata for NavigationType, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0840);
    }
  }
}

void sub_1C22DFE90()
{
  if (!qword_1EA2E0850)
  {
    sub_1C254CAD0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E0850);
    }
  }
}

void sub_1C22DFEF8()
{
  if (!qword_1EA2E0858)
  {
    sub_1C254CAD0();
    sub_1C22E0214((unint64_t *)&qword_1EA2E0860, MEMORY[0x1E4F27928]);
    unint64_t v0 = sub_1C254F410();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0858);
    }
  }
}

uint64_t sub_1C22DFF8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C22DFFF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C22E0054()
{
  if (!qword_1EA2E0868)
  {
    sub_1C22A827C();
    sub_1C22E0124(255, &qword_1EA2DF248, &qword_1EA2DF250, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem);
    sub_1C22E0214(&qword_1EA2E1750, (void (*)(uint64_t))sub_1C22A827C);
    unint64_t v0 = sub_1C254E930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0868);
    }
  }
}

void sub_1C22E0124(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C22DFD28(255, a3, a4, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C22E019C(uint64_t a1, uint64_t a2)
{
  return sub_1C22DB394(a1, a2, v2);
}

uint64_t sub_1C22E01A4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C22E01DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1C22E0214(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C22E025C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t getEnumTagSinglePayload for RecentSection(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RecentSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C22E0420);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecentSection()
{
  return &type metadata for RecentSection;
}

unint64_t sub_1C22E045C()
{
  unint64_t result = qword_1EA2E0878;
  if (!qword_1EA2E0878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0878);
  }
  return result;
}

unint64_t sub_1C22E04B0(unint64_t result)
{
  if (result >= 7) {
    return 7;
  }
  return result;
}

uint64_t sub_1C22E04C0()
{
  return sub_1C22DCA58() & 1;
}

uint64_t static UDCDataSourceFactory.pinnedItemsPredicate(categoryKind:sourceProfile:)()
{
  return _s14HealthPlatform8FeedItemC0A9RecordsUIE035predicateForPinnedUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0O0OSg_AA06SourceQ0OtFZ_0();
}

uint64_t UDCDataSourceFactory.SectionConfiguration.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  uint64_t v1 = v0 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  uint64_t v2 = sub_1C254DA70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UDCDataSourceFactory.SectionConfiguration.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  uint64_t v1 = v0 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  uint64_t v2 = sub_1C254DA70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id static UDCDataSourceFactory.navigationPredicate(categoryKind:sourceProfile:)(unsigned __int8 *a1)
{
  unsigned __int8 v2 = *a1;
  return _s14HealthPlatform8FeedItemC0A9RecordsUIE022predicateForNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0L0OSg_AA06SourceN0OtFZ_0(&v2);
}

id static UDCDataSourceFactory.removedCategoryNavigation(categoryKind:sourceProfile:)(unsigned __int8 *a1)
{
  unsigned __int8 v2 = *a1;
  return _s14HealthPlatform8FeedItemC0A9RecordsUIE037predicateForRemovedCategoryNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD07DisplayJ0V0N0OSg_AA06SourceP0OtFZ_0(&v2);
}

uint64_t UDCDataSourceFactory.deinit()
{
  return v0;
}

uint64_t UDCDataSourceFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void _s15HealthRecordsUI20UDCDataSourceFactoryC014makePinnedDataE013configuration0a10ExperienceC008SnapshotiE0_pAC20SectionConfigurationC_tFZ_0(void *a1)
{
  unsigned __int8 v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C22E3F0C(0, &qword_1EA2E0890, MEMORY[0x1E4F664A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v67 = (char *)&v66 - v4;
  sub_1C22E3F0C(0, &qword_1EA2DFD80, MEMORY[0x1E4F26E60], v2);
  MEMORY[0x1F4188790](v5 - 8);
  BOOL v7 = (char *)&v66 - v6;
  sub_1C254D110();
  id v66 = (id)MEMORY[0x1C87555F0]();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  int v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C22E3F0C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CDA0;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1C220D950();
  strcpy((char *)(v9 + 32), "pluginPackage");
  *(_WORD *)(v9 + 46) = -4864;
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = v11;
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 72) = 0xD000000000000025;
  *(void *)(v9 + 80) = 0x80000001C2578100;
  uint64_t v12 = (void *)sub_1C254F9A0();
  sub_1C22E3F0C(0, &qword_1EA2DF320, MEMORY[0x1E4F67030], v8);
  uint64_t v13 = sub_1C254CEF0();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  long long v68 = xmmword_1C255CD90;
  *(_OWORD *)(v16 + 16) = xmmword_1C255CD90;
  (*(void (**)(unint64_t, void, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x1E4F66FC8], v13);
  uint64_t v17 = sub_1C254D020();
  uint64_t v19 = v18;
  uint64_t v20 = sub_1C254C520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v68;
  uint64_t v22 = (void *)a1[4];
  *(void *)(v21 + 32) = v22;
  id v23 = v22;
  uint64_t v24 = (void *)MEMORY[0x1C87555D0](v16, v17, v19, v7, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C229E610((uint64_t)v7);
  uint64_t v25 = (void *)a1[3];
  id v26 = v25;
  uint64_t v27 = (void *)_s14HealthPlatform8FeedItemC0A9RecordsUIE035predicateForPinnedUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0O0OSg_AA06SourceQ0OtFZ_0();
  uint64_t v69 = MEMORY[0x1E4FBC860];
  id v28 = v12;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v29 = v24;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  if (v25)
  {
    id v30 = v26;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v31 = v27;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();

  uint64_t v32 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v32);

  id v34 = v66;
  objc_msgSend(v66, sel_setPredicate_, v33);

  id v35 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v36 = (void *)sub_1C254F430();
  id v37 = objc_msgSend(v35, sel_initWithKey_ascending_, v36, 0);

  id v38 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v39 = (void *)sub_1C254F430();
  id v40 = objc_msgSend(v38, sel_initWithKey_ascending_selector_, v39, 1, sel_localizedStandardCompare_);

  LOBYTE(v35) = *((unsigned char *)a1 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_sortByDate);
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v41 = swift_allocObject();
  if (v35)
  {
    *(_OWORD *)(v41 + 16) = xmmword_1C255CD70;
    *(void *)(v41 + 32) = v37;
    *(void *)(v41 + 40) = v40;
    uint64_t v69 = v41;
    sub_1C254F730();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
    id v42 = v37;
  }
  else
  {
    *(_OWORD *)(v41 + 16) = xmmword_1C255CEB0;
    *(void *)(v41 + 32) = v40;
    uint64_t v69 = v41;
    sub_1C254F730();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  }
  id v43 = v40;
  uint64_t v44 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setSortDescriptors_, v44);

  __swift_project_boxed_opaque_existential_1Tm(a1 + 5, a1[8]);
  id v45 = v34;
  uint64_t v46 = (void *)sub_1C254CE10();
  id v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v45, v46, 0, 0);

  uint64_t v48 = qword_1EBB6EF40;
  id v49 = v47;
  if (v48 != -1) {
    swift_once();
  }
  id v50 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v51 = (char *)a1 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  uint64_t v52 = sub_1C254DA70();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = v67;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v67, v51, v52);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v52);
  sub_1C22E4074(0, (unint64_t *)&qword_1EA2DEA68, MEMORY[0x1E4F66390]);
  id v56 = objc_allocWithZone(v55);
  uint64_t v57 = (void *)sub_1C254D530();
  id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B860]), sel_init);
  id v59 = objc_msgSend(v58, sel_features);

  if (v59)
  {
    unsigned int v60 = objc_msgSend(v59, sel_stanley);

    if (v60)
    {
      sub_1C22E3F0C(0, &qword_1EA2DF1F0, (uint64_t (*)(uint64_t))sub_1C2258038, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v68;
      *(void *)(inited + 32) = 1;
      uint64_t v62 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4F66390];
      uint64_t v63 = sub_1C22E3FC8(&qword_1EA2E08A8, (unint64_t *)&qword_1EA2DEA68, MEMORY[0x1E4F66390]);
      uint64_t v64 = sub_1C22E3FC8((unint64_t *)&qword_1EA2DEA78, (unint64_t *)&qword_1EA2DEA68, v62);
      *(void *)(inited + 40) = v57;
      *(void *)(inited + 48) = v63;
      *(void *)(inited + 56) = v64;
      sub_1C22067A4(inited);
      swift_setDeallocating();
      sub_1C2258038();
      id v65 = v57;
      swift_arrayDestroy();
      sub_1C254DE20();
      swift_allocObject();
      sub_1C254DE10();
    }
    else
    {

      sub_1C22E3FC8((unint64_t *)&qword_1EA2DEA78, (unint64_t *)&qword_1EA2DEA68, MEMORY[0x1E4F66390]);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t _s15HealthRecordsUI20UDCDataSourceFactoryC025makeUserDomainConceptDataE013configuration0a10ExperienceC008SnapshotkE0_pAC20SectionConfigurationC_tFZ_0(uint64_t a1)
{
  unsigned __int8 v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C22E3F0C(0, &qword_1EA2E0890, MEMORY[0x1E4F664A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  id v66 = (char *)&v61 - v4;
  sub_1C22E3F0C(0, &qword_1EA2DFD80, MEMORY[0x1E4F26E60], v2);
  MEMORY[0x1F4188790](v5 - 8);
  BOOL v7 = (char *)&v61 - v6;
  sub_1C254D110();
  id v65 = (id)MEMORY[0x1C87555F0]();
  uint64_t v8 = *(unsigned __int8 *)(a1
                          + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_navigationType);
  int v9 = *(unsigned __int8 *)(a1 + 16);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_navigationType)) {
    BOOL v10 = 1;
  }
  else {
    BOOL v10 = v9 == 11;
  }
  if (v10) {
    goto LABEL_9;
  }
  if (v9 != 3)
  {
    if (v9 == 2)
    {
      if (qword_1EBB6EF40 == -1) {
        goto LABEL_11;
      }
      goto LABEL_28;
    }
LABEL_9:
    unint64_t v61 = 0xE000000000000000;
    uint64_t v62 = 0;
    goto LABEL_12;
  }
  if (qword_1EBB6EF40 != -1) {
LABEL_28:
  }
    swift_once();
LABEL_11:
  id v11 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C254C730();
  unint64_t v61 = v13;
  uint64_t v62 = v12;
  swift_bridgeObjectRelease();

LABEL_12:
  uint64_t v14 = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C22E3F0C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C255CDA0;
  uint64_t v17 = MEMORY[0x1E4FBB1A0];
  *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v18 = sub_1C220D950();
  strcpy((char *)(v16 + 32), "pluginPackage");
  *(_WORD *)(v16 + 46) = -4864;
  *(void *)(v16 + 96) = v17;
  *(void *)(v16 + 104) = v18;
  *(void *)(v16 + 64) = v18;
  *(void *)(v16 + 72) = 0xD000000000000025;
  *(void *)(v16 + 80) = 0x80000001C2578100;
  uint64_t v64 = v14;
  uint64_t v19 = (void *)sub_1C254F9A0();
  sub_1C22E3F0C(0, &qword_1EA2DF320, MEMORY[0x1E4F67030], v15);
  uint64_t v20 = sub_1C254CEF0();
  uint64_t v21 = *(void *)(v20 - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = swift_allocObject();
  long long v63 = xmmword_1C255CD90;
  *(_OWORD *)(v23 + 16) = xmmword_1C255CD90;
  (*(void (**)(unint64_t, void, uint64_t))(v21 + 104))(v23 + v22, *MEMORY[0x1E4F66FC8], v20);
  switch(v8)
  {
    case 1:
      uint64_t v24 = sub_1C254D000();
      break;
    case 2:
      uint64_t v24 = sub_1C254D010();
      break;
    case 3:
      uint64_t v24 = sub_1C254D030();
      break;
    default:
      uint64_t v24 = sub_1C254D020();
      break;
  }
  uint64_t v26 = v24;
  uint64_t v27 = v25;
  uint64_t v28 = sub_1C254C520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v7, 1, 1, v28);
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = v63;
  id v30 = *(void **)(a1 + 32);
  *(void *)(v29 + 32) = v30;
  id v31 = v30;
  uint64_t v32 = (void *)MEMORY[0x1C87555D0](v23, v26, v27, v7, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C229E610((uint64_t)v7);
  id v33 = (void *)_s14HealthPlatform8FeedItemC0A9RecordsUIE035predicateForPinnedUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0O0OSg_AA06SourceQ0OtFZ_0();
  id v34 = self;
  id v35 = objc_msgSend(v34, sel_notPredicateWithSubpredicate_, v33);

  uint64_t v36 = *(void **)(a1 + 24);
  uint64_t v67 = MEMORY[0x1E4FBC860];
  id v37 = v36;
  id v38 = v19;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v39 = v32;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v40 = v35;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  if (v36)
  {
    id v41 = v37;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }

  id v42 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v43 = objc_msgSend(v34, sel_andPredicateWithSubpredicates_, v42);

  id v44 = v65;
  objc_msgSend(v65, sel_setPredicate_, v43);

  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1C255CEB0;
  id v46 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  id v47 = (void *)sub_1C254F430();
  id v48 = objc_msgSend(v46, sel_initWithKey_ascending_selector_, v47, 1, sel_localizedStandardCompare_);

  *(void *)(v45 + 32) = v48;
  uint64_t v67 = v45;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  id v49 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v44, sel_setSortDescriptors_, v49);

  __swift_project_boxed_opaque_existential_1Tm((void *)(a1 + 40), *(void *)(a1 + 64));
  id v50 = v44;
  uint64_t v51 = (void *)sub_1C254CE10();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v50, v51, 0, 0);

  uint64_t v52 = a1 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  uint64_t v53 = sub_1C254DA70();
  uint64_t v54 = *(void *)(v53 - 8);
  Class v55 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v66, v52, v53);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v55, 0, 1, v53);
  id v56 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4F66390];
  sub_1C22E4074(0, (unint64_t *)&qword_1EA2DEA68, MEMORY[0x1E4F66390]);
  id v58 = objc_allocWithZone(v57);
  uint64_t v59 = sub_1C254D530();

  sub_1C22E3FC8((unint64_t *)&qword_1EA2DEA78, (unint64_t *)&qword_1EA2DEA68, v56);
  return v59;
}

uint64_t _s15HealthRecordsUI20UDCDataSourceFactoryC017makeSectionedDataE03for13configuration0a10ExperienceC008SnapshotiE0_p0A12PlatformCore03AllI14SummarySectionV10IdentifierO_AC0R13ConfigurationCtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v83 = a2;
  uint64_t v86 = a1;
  unsigned __int8 v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C22E3F0C(0, &qword_1EA2E0890, MEMORY[0x1E4F664A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  id v79 = (char *)&v76 - v4;
  uint64_t v77 = sub_1C254E240();
  uint64_t v81 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  uint64_t v78 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254C520();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v85 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22E3F0C(0, &qword_1EA2DFD80, MEMORY[0x1E4F26E60], v2);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  id v84 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v76 - v12;
  sub_1C254D110();
  id v80 = (id)MEMORY[0x1C87555F0]();
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C22E3F0C(0, (unint64_t *)&qword_1EBB70058, (uint64_t (*)(uint64_t))sub_1C22E400C, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2561290;
  uint64_t v16 = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  sub_1C22E3F0C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, v14);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C255CDA0;
  uint64_t v18 = MEMORY[0x1E4FBB1A0];
  *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v19 = sub_1C220D950();
  strcpy((char *)(v17 + 32), "pluginPackage");
  *(_WORD *)(v17 + 46) = -4864;
  *(void *)(v17 + 96) = v18;
  *(void *)(v17 + 104) = v19;
  *(void *)(v17 + 64) = v19;
  *(void *)(v17 + 72) = 0xD000000000000025;
  *(void *)(v17 + 80) = 0x80000001C2578100;
  uint64_t v76 = v16;
  *(void *)(inited + 32) = sub_1C254F9A0();
  sub_1C22E3F0C(0, &qword_1EA2DF320, MEMORY[0x1E4F67030], v14);
  uint64_t v20 = sub_1C254CEF0();
  uint64_t v21 = *(void *)(v20 - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = swift_allocObject();
  long long v82 = xmmword_1C255CD90;
  *(_OWORD *)(v23 + 16) = xmmword_1C255CD90;
  unint64_t v24 = v23 + v22;
  uint64_t v25 = v83;
  (*(void (**)(unint64_t, void, uint64_t))(v21 + 104))(v24, *MEMORY[0x1E4F66FC8], v20);
  switch(*(unsigned char *)(v25 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_navigationType))
  {
    case 1:
      uint64_t v26 = sub_1C254D000();
      break;
    case 2:
      uint64_t v26 = sub_1C254D010();
      break;
    case 3:
      uint64_t v26 = sub_1C254D030();
      break;
    default:
      uint64_t v26 = sub_1C254D020();
      break;
  }
  uint64_t v28 = v26;
  uint64_t v29 = v27;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v13, 1, 1, v6);
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = v82;
  id v31 = *(void **)(v25 + 32);
  *(void *)(v30 + 32) = v31;
  id v32 = v31;
  uint64_t v33 = MEMORY[0x1C87555D0](v23, v28, v29, v13, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C229E610((uint64_t)v13);
  *(void *)(inited + 40) = v33;
  id v34 = v85;
  sub_1C254C4B0();
  id v35 = v84;
  sub_1C254E250();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v7 + 8);
  v36(v34, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v35, 1, v6) == 1)
  {
    __break(1u);
    JUMPOUT(0x1C22E26CCLL);
  }
  uint64_t v37 = MEMORY[0x1C87555E0](v35);
  v36(v35, v6);
  *(void *)(inited + 48) = v37;
  id v38 = (void *)_s14HealthPlatform8FeedItemC0A9RecordsUIE035predicateForPinnedUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0O0OSg_AA06SourceQ0OtFZ_0();
  id v39 = self;
  id v40 = objc_msgSend(v39, sel_notPredicateWithSubpredicate_, v38);

  *(void *)(inited + 56) = v40;
  uint64_t v41 = v25;
  id v42 = *(void **)(v25 + 24);
  *(void *)(inited + 64) = v42;
  uint64_t v87 = inited;
  sub_1C254F730();
  id v43 = (void *)v87;
  uint64_t v87 = MEMORY[0x1E4FBC860];
  id v44 = (void *)v43[4];
  if (!v44)
  {
    id v50 = v42;
    id v47 = v78;
    id v46 = v79;
    uint64_t v48 = v77;
    id v49 = (void *)v43[5];
    if (!v49) {
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  id v45 = v44;
  MEMORY[0x1C8757C00](v42);
  id v47 = v78;
  id v46 = v79;
  if (*(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  uint64_t v48 = v77;
  id v49 = (void *)v43[5];
  if (v49)
  {
LABEL_13:
    id v51 = v49;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
LABEL_16:
  uint64_t v52 = (void *)v43[6];
  if (v52)
  {
    id v53 = v52;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v54 = (void *)v43[7];
  if (v54)
  {
    id v55 = v54;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v56 = (void *)v43[8];
  if (v56)
  {
    id v57 = v56;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  swift_bridgeObjectRelease();
  id v58 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v59 = objc_msgSend(v39, sel_andPredicateWithSubpredicates_, v58);

  id v60 = v80;
  objc_msgSend(v80, sel_setPredicate_, v59);

  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_1C255CEB0;
  id v62 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  long long v63 = (void *)sub_1C254F430();
  id v64 = objc_msgSend(v62, sel_initWithKey_ascending_selector_, v63, 0, sel_compare_);

  *(void *)(v61 + 32) = v64;
  uint64_t v87 = v61;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  id v65 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v60, sel_setSortDescriptors_, v65);

  __swift_project_boxed_opaque_existential_1Tm((void *)(v41 + 40), *(void *)(v41 + 64));
  id v66 = v60;
  uint64_t v67 = (void *)sub_1C254CE10();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v66, v67, 0, 0);

  sub_1C254C4B0();
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v47, v86, v48);
  uint64_t v68 = v41 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  uint64_t v69 = sub_1C254DA70();
  uint64_t v70 = *(void *)(v69 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v46, v68, v69);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v46, 0, 1, v69);
  uint64_t v71 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4F661E0];
  sub_1C22E4074(0, &qword_1EA2E0898, MEMORY[0x1E4F661E0]);
  id v73 = objc_allocWithZone(v72);
  uint64_t v74 = sub_1C254D220();

  sub_1C22E3FC8(&qword_1EA2E08A0, &qword_1EA2E0898, v71);
  return v74;
}

uint64_t _s15HealthRecordsUI20UDCDataSourceFactoryC018makeOnboardingDataE013configuration0a10ExperienceC008SnapshotiE0_pAC20SectionConfigurationC_tFZ_0(uint64_t a1)
{
  sub_1C22E3F0C(0, &qword_1EA2E0890, MEMORY[0x1E4F664A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v37 = (char *)&v35 - v3;
  sub_1C254D110();
  id v36 = (id)MEMORY[0x1C87555F0]();
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255CD80;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C22E3F0C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255CDA0;
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v8 = sub_1C220D950();
  strcpy((char *)(v6 + 32), "pluginPackage");
  *(_WORD *)(v6 + 46) = -4864;
  *(void *)(v6 + 96) = v7;
  *(void *)(v6 + 104) = v8;
  *(void *)(v6 + 64) = v8;
  *(void *)(v6 + 72) = 0xD000000000000025;
  *(void *)(v6 + 80) = 0x80000001C2578100;
  *(void *)(v4 + 32) = sub_1C254F9A0();
  sub_1C22E3F0C(0, &qword_1EA2DF320, MEMORY[0x1E4F67030], v5);
  uint64_t v9 = sub_1C254CEF0();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  long long v35 = xmmword_1C255CD90;
  *(_OWORD *)(v12 + 16) = xmmword_1C255CD90;
  (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x1E4F67028], v9);
  sub_1C254CFE0();
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v35;
  uint64_t v14 = *(void **)(a1 + 32);
  *(void *)(v13 + 32) = v14;
  id v15 = v14;
  uint64_t v16 = sub_1C254D0B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v4 + 40) = v16;
  LOBYTE(v38) = *(unsigned char *)(a1 + 16);
  *(void *)(v4 + 48) = sub_1C22F0590((unsigned __int8 *)&v38);
  uint64_t v38 = v4;
  sub_1C254F730();
  uint64_t v17 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v17);

  id v19 = v36;
  objc_msgSend(v36, sel_setPredicate_, v18);

  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C255CEB0;
  id v21 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  unint64_t v22 = (void *)sub_1C254F430();
  id v23 = objc_msgSend(v21, sel_initWithKey_ascending_selector_, v22, 1, sel_localizedStandardCompare_);

  *(void *)(v20 + 32) = v23;
  uint64_t v38 = v20;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  unint64_t v24 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setSortDescriptors_, v24);

  __swift_project_boxed_opaque_existential_1Tm((void *)(a1 + 40), *(void *)(a1 + 64));
  id v25 = v19;
  uint64_t v26 = (void *)sub_1C254CE10();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v25, v26, 0, 0);

  uint64_t v27 = a1 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  uint64_t v28 = sub_1C254DA70();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v37, v27, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v28);
  id v31 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4F66390];
  sub_1C22E4074(0, (unint64_t *)&qword_1EA2DEA68, MEMORY[0x1E4F66390]);
  objc_allocWithZone(v32);
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1C254D530();

  sub_1C22E3FC8((unint64_t *)&qword_1EA2DEA78, (unint64_t *)&qword_1EA2DEA68, v31);
  return v33;
}

uint64_t _s15HealthRecordsUI20UDCDataSourceFactoryC023makeNavigationItemsDataE013configuration0a10ExperienceC008SnapshotjE0_pAC20SectionConfigurationC_tFZ_0(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C22E3F0C(0, &qword_1EA2E0890, MEMORY[0x1E4F664A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  id v55 = (char *)&v53 - v4;
  sub_1C22E3F0C(0, &qword_1EA2DFD80, MEMORY[0x1E4F26E60], v2);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v53 - v6;
  sub_1C254D110();
  id v54 = (id)MEMORY[0x1C87555F0]();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C22E3F0C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CDA0;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1C220D950();
  strcpy((char *)(v9 + 32), "pluginPackage");
  *(_WORD *)(v9 + 46) = -4864;
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = v11;
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 72) = 0xD000000000000025;
  *(void *)(v9 + 80) = 0x80000001C2578100;
  uint64_t v12 = (void *)sub_1C254F9A0();
  sub_1C22E3F0C(0, &qword_1EA2DF320, MEMORY[0x1E4F67030], v8);
  uint64_t v13 = sub_1C254CEF0();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  long long v53 = xmmword_1C255CD90;
  *(_OWORD *)(v16 + 16) = xmmword_1C255CD90;
  (*(void (**)(unint64_t, void, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x1E4F66F70], v13);
  uint64_t v17 = sub_1C254CFF0();
  uint64_t v19 = v18;
  uint64_t v20 = sub_1C254C520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v53;
  unint64_t v22 = *(void **)(a1 + 32);
  *(void *)(v21 + 32) = v22;
  id v23 = v22;
  unint64_t v24 = (void *)MEMORY[0x1C87555D0](v16, v17, v19, v7, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C229E610((uint64_t)v7);
  id v25 = *(void **)(a1 + 24);
  LOBYTE(v56) = *(unsigned char *)(a1 + 16);
  id v26 = v25;
  id v27 = _s14HealthPlatform8FeedItemC0A9RecordsUIE022predicateForNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0L0OSg_AA06SourceN0OtFZ_0((unsigned __int8 *)&v56);
  uint64_t v56 = MEMORY[0x1E4FBC860];
  id v28 = v12;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v29 = v24;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  if (v25)
  {
    id v30 = v26;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v31 = v27;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();

  Class v32 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v32);

  id v34 = v54;
  objc_msgSend(v54, sel_setPredicate_, v33);

  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1C255CD70;
  id v36 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v37 = (void *)sub_1C254F430();
  id v38 = objc_msgSend(v36, sel_initWithKey_ascending_selector_, v37, 1, sel_compare_);

  *(void *)(v35 + 32) = v38;
  id v39 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  id v40 = (void *)sub_1C254F430();
  id v41 = objc_msgSend(v39, sel_initWithKey_ascending_selector_, v40, 1, sel_localizedStandardCompare_);

  *(void *)(v35 + 40) = v41;
  uint64_t v56 = v35;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  id v42 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setSortDescriptors_, v42);

  __swift_project_boxed_opaque_existential_1Tm((void *)(a1 + 40), *(void *)(a1 + 64));
  id v43 = v34;
  id v44 = (void *)sub_1C254CE10();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v43, v44, 0, 0);

  uint64_t v45 = a1 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  uint64_t v46 = sub_1C254DA70();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v55, v45, v46);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v46);
  id v49 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4F66390];
  sub_1C22E4074(0, (unint64_t *)&qword_1EA2DEA68, MEMORY[0x1E4F66390]);
  objc_allocWithZone(v50);
  swift_bridgeObjectRetain();
  uint64_t v51 = sub_1C254D530();

  sub_1C22E3FC8((unint64_t *)&qword_1EA2DEA78, (unint64_t *)&qword_1EA2DEA68, v49);
  return v51;
}

uint64_t _s15HealthRecordsUI20UDCDataSourceFactoryC037makeRemovedCategoryNavigationItemDataE013configuration0a10ExperienceC008SnapshotlE0_pAC20SectionConfigurationC_tFZ_0(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C22E3F0C(0, &qword_1EA2E0890, MEMORY[0x1E4F664A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v52 = (char *)&v50 - v4;
  sub_1C22E3F0C(0, &qword_1EA2DFD80, MEMORY[0x1E4F26E60], v2);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v50 - v6;
  sub_1C254D110();
  id v51 = (id)MEMORY[0x1C87555F0]();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C22E3F0C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CDA0;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1C220D950();
  strcpy((char *)(v9 + 32), "pluginPackage");
  *(_WORD *)(v9 + 46) = -4864;
  *(void *)(v9 + 96) = v10;
  *(void *)(v9 + 104) = v11;
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 72) = 0xD000000000000025;
  *(void *)(v9 + 80) = 0x80000001C2578100;
  uint64_t v12 = (void *)sub_1C254F9A0();
  sub_1C22E3F0C(0, &qword_1EA2DF320, MEMORY[0x1E4F67030], v8);
  uint64_t v13 = sub_1C254CEF0();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = swift_allocObject();
  long long v50 = xmmword_1C255CD90;
  *(_OWORD *)(v16 + 16) = xmmword_1C255CD90;
  (*(void (**)(unint64_t, void, uint64_t))(v14 + 104))(v16 + v15, *MEMORY[0x1E4F66F70], v13);
  uint64_t v17 = sub_1C254CFF0();
  uint64_t v19 = v18;
  uint64_t v20 = sub_1C254C520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v50;
  unint64_t v22 = *(void **)(a1 + 32);
  *(void *)(v21 + 32) = v22;
  id v23 = v22;
  unint64_t v24 = (void *)MEMORY[0x1C87555D0](v16, v17, v19, v7, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C229E610((uint64_t)v7);
  id v25 = *(void **)(a1 + 24);
  LOBYTE(v53) = *(unsigned char *)(a1 + 16);
  id v26 = v25;
  id v27 = _s14HealthPlatform8FeedItemC0A9RecordsUIE037predicateForRemovedCategoryNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD07DisplayJ0V0N0OSg_AA06SourceP0OtFZ_0((unsigned __int8 *)&v53);
  uint64_t v53 = MEMORY[0x1E4FBC860];
  id v28 = v12;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v29 = v24;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  if (v25)
  {
    id v30 = v26;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v31 = v27;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();

  Class v32 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v32);

  id v34 = v51;
  objc_msgSend(v51, sel_setPredicate_, v33);

  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1C255CEB0;
  id v36 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v37 = (void *)sub_1C254F430();
  id v38 = objc_msgSend(v36, sel_initWithKey_ascending_selector_, v37, 1, sel_compare_);

  *(void *)(v35 + 32) = v38;
  uint64_t v53 = v35;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  id v39 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setSortDescriptors_, v39);

  __swift_project_boxed_opaque_existential_1Tm((void *)(a1 + 40), *(void *)(a1 + 64));
  id v40 = v34;
  id v41 = (void *)sub_1C254CE10();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v40, v41, 0, 0);

  uint64_t v42 = a1 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType;
  uint64_t v43 = sub_1C254DA70();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v52, v42, v43);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v43);
  uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))MEMORY[0x1E4F66390];
  sub_1C22E4074(0, (unint64_t *)&qword_1EA2DEA68, MEMORY[0x1E4F66390]);
  objc_allocWithZone(v47);
  swift_bridgeObjectRetain();
  uint64_t v48 = sub_1C254D530();

  sub_1C22E3FC8((unint64_t *)&qword_1EA2DEA78, (unint64_t *)&qword_1EA2DEA68, v46);
  return v48;
}

uint64_t type metadata accessor for UDCDataSourceFactory()
{
  return self;
}

uint64_t method lookup function for UDCDataSourceFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UDCDataSourceFactory);
}

uint64_t sub_1C22E3DD4()
{
  return type metadata accessor for UDCDataSourceFactory.SectionConfiguration();
}

uint64_t type metadata accessor for UDCDataSourceFactory.SectionConfiguration()
{
  uint64_t result = qword_1EA2E0880;
  if (!qword_1EA2E0880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C22E3E28()
{
  uint64_t result = sub_1C254DA70();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for UDCDataSourceFactory.SectionConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UDCDataSourceFactory.SectionConfiguration);
}

void sub_1C22E3F0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C22E3F70()
{
  unint64_t result = qword_1EA2DEA70;
  if (!qword_1EA2DEA70)
  {
    sub_1C254D110();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DEA70);
  }
  return result;
}

uint64_t sub_1C22E3FC8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C22E4074(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C22E400C()
{
  if (!qword_1EBB6FF68)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF60);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6FF68);
    }
  }
}

void sub_1C22E4074(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C254D110();
    unint64_t v7 = sub_1C22E3F70();
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t NavigationType.associatedKeyword.getter()
{
  switch(*v0)
  {
    case 1:
      uint64_t result = sub_1C254D000();
      break;
    case 2:
      uint64_t result = sub_1C254D010();
      break;
    case 3:
      uint64_t result = sub_1C254D030();
      break;
    default:
      uint64_t result = sub_1C254D020();
      break;
  }
  return result;
}

uint64_t NavigationType.rawValue.getter()
{
  return *v0;
}

uint64_t NavigationType.sortOrder.getter()
{
  return *v0;
}

HealthRecordsUI::NavigationType_optional __swiftcall NavigationType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (HealthRecordsUI::NavigationType_optional)rawValue;
}

unint64_t sub_1C22E414C()
{
  unint64_t result = qword_1EA2E08B0;
  if (!qword_1EA2E08B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E08B0);
  }
  return result;
}

HealthRecordsUI::NavigationType_optional sub_1C22E41A0(Swift::Int *a1)
{
  return NavigationType.init(rawValue:)(*a1);
}

uint64_t sub_1C22E41A8()
{
  return sub_1C254F6E0();
}

uint64_t sub_1C22E4208()
{
  return sub_1C254F6C0();
}

uint64_t getEnumTagSinglePayload for RecordRangeView.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NavigationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C22E43B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationType()
{
  return &type metadata for NavigationType;
}

unint64_t sub_1C22E43EC()
{
  unint64_t result = qword_1EA2E08B8;
  if (!qword_1EA2E08B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E08B8);
  }
  return result;
}

void sub_1C22E4440(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  id v39 = a2;
  uint64_t v40 = a3;
  uint64_t v38 = *v3;
  uint64_t v5 = sub_1C254E3D0();
  MEMORY[0x1F4188790](v5);
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  uint64_t v42 = v7;
  MEMORY[0x1F4188790](v6);
  MEMORY[0x1F4188790](v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v37 = (char *)&v36 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v36 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v36 - v15;
  sub_1C254E3C0();
  swift_allocObject();
  uint64_t v17 = sub_1C254E3B0();
  id v18 = objc_msgSend(a1, sel_mainRecord);
  uint64_t v43 = v17;
  if (v18)
  {
    uint64_t v19 = v18;
    sub_1C254E370();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    if (v21)
    {
      sub_1C254E510();
      swift_retain_n();
      unint64_t v22 = sub_1C254E550();
      os_log_type_t v23 = sub_1C254FA40();
      if (os_log_type_enabled(v22, v23))
      {
        unint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        v47[0] = v25;
        *(_DWORD *)unint64_t v24 = 136315138;
        uint64_t v37 = (char *)(v24 + 4);
        uint64_t v45 = v38;
        swift_getMetatypeMetadata();
        uint64_t v45 = sub_1C254F4F0();
        unint64_t v46 = v26;
        swift_bridgeObjectRetain();
        sub_1C254F5A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1C254F5A0();
        swift_bridgeObjectRelease();
        uint64_t v45 = sub_1C21AD354(v45, v46, v47);
        sub_1C2550120();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C21A1000, v22, v23, "%s not adding to Wallet, it's already there", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v25, -1, -1);
        MEMORY[0x1C875A0B0](v24, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v41);
      v39(2);
      swift_release();

      return;
    }
  }
  sub_1C254E360();
  sub_1C254E510();
  uint64_t v27 = v44;
  swift_retain_n();
  id v28 = sub_1C254E550();
  os_log_type_t v29 = sub_1C254FA40();
  if (os_log_type_enabled(v28, v29))
  {
    id v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v47[0] = v31;
    *(_DWORD *)id v30 = 136315138;
    uint64_t v37 = (char *)(v30 + 4);
    uint64_t v45 = v38;
    swift_getMetatypeMetadata();
    uint64_t v45 = sub_1C254F4F0();
    unint64_t v46 = v32;
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t v45 = sub_1C21AD354(v45, v46, v47);
    uint64_t v27 = v44;
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v28, v29, "%s starting to add to Wallet", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v31, -1, -1);
    MEMORY[0x1C875A0B0](v30, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v42 + 8))(v13, v41);
  id v33 = (void *)swift_allocObject();
  id v34 = v39;
  uint64_t v35 = v40;
  v33[2] = v27;
  void v33[3] = v34;
  v33[4] = v35;
  swift_retain();
  swift_retain();
  sub_1C254E380();
  swift_release();
  swift_release();
}

void sub_1C22E514C(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v7 = sub_1C254E560();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v34 - v12;
  if (a1)
  {
    id v14 = a1;
    sub_1C254E510();
    swift_retain();
    id v15 = a1;
    swift_retain();
    id v16 = a1;
    uint64_t v17 = sub_1C254E550();
    os_log_type_t v18 = sub_1C254FA20();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v35 = v7;
      uint64_t v20 = v19;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v39 = v34;
      *(_DWORD *)uint64_t v20 = 136315394;
      uint64_t v37 = a3;
      uint64_t v21 = sub_1C22E55F4();
      uint64_t v38 = sub_1C21AD354(v21, v22, &v39);
      uint64_t v36 = a4;
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v23 = sub_1C2550940();
      uint64_t v38 = sub_1C21AD354(v23, v24, &v39);
      a3 = v37;
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v17, v18, "%s failed to add to Wallet: %s", (uint8_t *)v20, 0x16u);
      uint64_t v25 = v34;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v25, -1, -1);
      MEMORY[0x1C875A0B0](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v35);
    }
    else
    {
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    id v33 = a1;
    a3(a1);
  }
  else
  {
    sub_1C254E510();
    swift_retain_n();
    unint64_t v26 = sub_1C254E550();
    os_log_type_t v27 = sub_1C254FA40();
    if (os_log_type_enabled(v26, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v35 = v7;
      uint64_t v30 = v29;
      uint64_t v39 = v29;
      uint64_t v36 = a4;
      uint64_t v37 = a3;
      *(_DWORD *)id v28 = 136315138;
      uint64_t v31 = sub_1C22E55F4();
      uint64_t v38 = sub_1C21AD354(v31, v32, &v39);
      a3 = v37;
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v26, v27, "%s added to Wallet", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v30, -1, -1);
      MEMORY[0x1C875A0B0](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v35);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
    a3(1);
  }
}

uint64_t sub_1C22E55F4()
{
  swift_getMetatypeMetadata();
  uint64_t v1 = sub_1C254F4F0();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for SignedClinicalDataWalletHandler()
{
  return self;
}

uint64_t sub_1C22E56DC()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C22E571C(void *a1)
{
  sub_1C22E514C(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

void sub_1C22E5728()
{
}

void sub_1C22E5758()
{
  uint64_t v1 = *(void **)(v0 + 104);
}

uint64_t sub_1C22E5788()
{
  uint64_t v0 = TextItem.deinit();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShowAllRecordsItem()
{
  return self;
}

void sub_1C22E57FC(uint64_t a1, void *a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void **)(*v2 + 96);
  uint64_t v6 = *(void **)(*v2 + 104);
  id v7 = objc_allocWithZone((Class)type metadata accessor for UDCRecordsTableViewController());
  uint64_t v8 = sub_1C22A8B24(v5, v6, 0);
  objc_msgSend(a2, sel_showViewController_sender_, v8, v4);
}

void *sub_1C22E5898(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  os_log_type_t v27 = a3;
  sub_1C22E67E8(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v26 - v9;
  sub_1C22E611C();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v5 + 40) = a2;
  *(void *)(v5 + 48) = 0;
  uint64_t v26 = a2;
  swift_retain();
  id v16 = ConceptsDataSource.init(arrangedSections:isHidden:)(MEMORY[0x1E4FBC860], 0);
  uint64_t v31 = v16[5];
  sub_1C22023A4();
  swift_retain();
  swift_retain();
  id v30 = (id)sub_1C254FC70();
  uint64_t v17 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v10, 1, 1, v17);
  sub_1C22E6210();
  sub_1C22E67A0(&qword_1EA2E08E0, 255, (void (*)(uint64_t))sub_1C22E6210);
  sub_1C22E67A0((unint64_t *)&qword_1EBB6F4B0, 255, (void (*)(uint64_t))sub_1C22023A4);
  sub_1C254EC70();
  sub_1C2258214((uint64_t)v10);

  swift_release();
  os_log_type_t v18 = (void *)swift_allocObject();
  uint64_t v20 = v27;
  uint64_t v19 = v28;
  void v18[2] = a1;
  v18[3] = v20;
  uint64_t v21 = v29;
  v18[4] = v19;
  v18[5] = v21;
  v18[6] = v16;
  sub_1C22E67A0(&qword_1EA2E08E8, 255, (void (*)(uint64_t))sub_1C22E611C);
  swift_retain();
  id v22 = a1;
  id v23 = v20;
  uint64_t v24 = sub_1C254ECC0();

  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v16[6] = v24;
  swift_release();
  return v16;
}

uint64_t sub_1C22E5C18(uint64_t a1, void *a2, void *a3)
{
  if (*(void *)(*(void *)a1 + 16))
  {
    uint64_t v5 = type metadata accessor for ShowAllRecordsItem();
    swift_allocObject();
    id v6 = a2;
    id v7 = a3;
    uint64_t v8 = sub_1C22E636C(v6, v7);

    sub_1C22E62A4(0, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C255CD90;
    *(void *)(v9 + 56) = v5;
    *(void *)(v9 + 64) = sub_1C22E67A0(&qword_1EA2E08F0, v10, (void (*)(uint64_t))type metadata accessor for ShowAllRecordsItem);
    *(void *)(v9 + 32) = v8;
  }
  sub_1C22E67E8(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
  swift_bridgeObjectRetain();
  sub_1C254D990();
  sub_1C254D570();
  sub_1C254DA10();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1C22E5E5C()
{
}

uint64_t sub_1C22E5E8C()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1C22E5EBC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShowAllRecordsDataSource()
{
  return self;
}

uint64_t sub_1C22E5F30()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DAE0();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C22E6004()
{
  return sub_1C254E160();
}

uint64_t sub_1C22E6060()
{
  return sub_1C254FAD0();
}

uint64_t sub_1C22E60D4(uint64_t a1, uint64_t a2)
{
  return sub_1C22E67A0(&qword_1EA2E08C0, a2, (void (*)(uint64_t))type metadata accessor for ShowAllRecordsDataSource);
}

void sub_1C22E611C()
{
  if (!qword_1EA2E08C8)
  {
    sub_1C22E6210();
    sub_1C22023A4();
    sub_1C22E67A0(&qword_1EA2E08E0, 255, (void (*)(uint64_t))sub_1C22E6210);
    sub_1C22E67A0((unint64_t *)&qword_1EBB6F4B0, 255, (void (*)(uint64_t))sub_1C22023A4);
    unint64_t v0 = sub_1C254E9B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E08C8);
    }
  }
}

void sub_1C22E6210()
{
  if (!qword_1EA2E08D0)
  {
    sub_1C22E62A4(255, &qword_1EA2E08D8, (unint64_t *)&qword_1EA2DF850, (uint64_t)&protocol descriptor for TestResultRepresentable, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C254E9E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E08D0);
    }
  }
}

void sub_1C22E62A4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C21FFE74(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C22E630C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C22E635C(uint64_t a1)
{
  return sub_1C22E5C18(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void *sub_1C22E636C(void *a1, void *a2)
{
  int v3 = v2;
  sub_1C22E67E8(0, &qword_1EA2DE9F0, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = sub_1C254E600();
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C254E5A0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[12] = a1;
  v3[13] = a2;
  uint64_t v16 = qword_1EBB6EF40;
  id v17 = a1;
  id v18 = a2;
  if (v16 != -1) {
    swift_once();
  }
  id v19 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C254C730();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();

  sub_1C22E67E8(0, &qword_1EA2DE9D8, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C254E620();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C255CD90;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FB0E18], v12);
  uint64_t v24 = sub_1C254E5B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 1, 1, v24);
  sub_1C254E5F0();
  sub_1C254E5C0();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  type metadata accessor for TextItemCell();
  sub_1C22E67A0(&qword_1EA2DE790, 255, (void (*)(uint64_t))type metadata accessor for TextItemCell);
  v3[10] = sub_1C254D330();
  v3[11] = v25;
  v3[2] = v20;
  v3[3] = v22;
  v3[4] = 0;
  v3[5] = 0;
  v3[6] = 0;
  v3[7] = v23;
  v3[8] = 0;
  v3[9] = 0;
  return v3;
}

uint64_t sub_1C22E67A0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C22E67E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C22E684C(char a1)
{
  uint64_t v1 = 0;
  switch(a1)
  {
    case 0:
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v2 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 2:
      if (qword_1EA2DD698 != -1) {
        swift_once();
      }
      id v2 = (id)qword_1EA2E0BA8;
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 3:
      if (qword_1EA2DD658 != -1) {
        swift_once();
      }
      id v2 = (id)qword_1EA2E0AE8;
      swift_bridgeObjectRetain();
LABEL_11:
      uint64_t v1 = sub_1C254C730();
      swift_bridgeObjectRelease();

      break;
    case 6:
      if (objc_msgSend(self, sel_isAppleInternalInstall)) {
        uint64_t v1 = 0x6C616E7265746E49;
      }
      else {
        uint64_t v1 = 0;
      }
      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t sub_1C22E6AA0(char a1)
{
  if (a1 == 3)
  {
    if (qword_1EA2DD658 != -1) {
      swift_once();
    }
    id v1 = (id)qword_1EA2E0AE8;
    swift_bridgeObjectRetain();
  }
  else if (a1 == 2)
  {
    if (qword_1EA2DD698 != -1) {
      swift_once();
    }
    id v1 = (id)qword_1EA2E0BA8;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (a1) {
      return 0;
    }
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v1 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
  }
  uint64_t v2 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v2;
}

void sub_1C22E6C74(void *a1@<X8>)
{
  *a1 = &unk_1F1D8E698;
}

int64_t sub_1C22E6C84(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v2 = (char *)MEMORY[0x1E4FBC860];
    goto LABEL_7;
  }
  LOBYTE(v1) = 1;
  uint64_t v2 = sub_1C226D1E0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v5 = *((void *)v2 + 2);
  unint64_t v4 = *((void *)v2 + 3);
  int64_t v6 = v5 + 1;
  if (v5 >= v4 >> 1) {
LABEL_31:
  }
    uint64_t v2 = sub_1C226D1E0((char *)(v4 > 1), v6, 1, v2);
  *((void *)v2 + 2) = v6;
  v2[v5 + 32] = v1;
LABEL_7:
  unint64_t v5 = qword_1F1D8E6A8;
  if (qword_1F1D8E6A8)
  {
    unint64_t v7 = 0;
    int64_t v6 = MEMORY[0x1E4FBC860];
    do
    {
      if (v7 <= v5) {
        unint64_t v4 = v5;
      }
      else {
        unint64_t v4 = v7;
      }
      while (1)
      {
        if (v7 == v4) {
          goto LABEL_30;
        }
        int v8 = *((unsigned __int8 *)&unk_1F1D8E698 + v7++ + 32);
        uint64_t v9 = *((void *)v2 + 2);
        if (!v9) {
          goto LABEL_21;
        }
        if (v2[32] != v8) {
          break;
        }
LABEL_12:
        if (v7 == v5) {
          goto LABEL_28;
        }
      }
      if (v9 != 1)
      {
        uint64_t v10 = 33;
        while (1)
        {
          uint64_t v11 = v10 - 31;
          if (__OFADD__(v10 - 32, 1)) {
            break;
          }
          if (v2[v10] == v8) {
            goto LABEL_12;
          }
          ++v10;
          if (v11 == v9) {
            goto LABEL_21;
          }
        }
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
LABEL_21:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1C2274C30(0, *(void *)(v6 + 16) + 1, 1);
      }
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      unint64_t v1 = v13 + 1;
      if (v13 >= v12 >> 1) {
        sub_1C2274C30(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v6 + 16) = v1;
      *(unsigned char *)(v6 + v13 + 32) = v8;
    }
    while (v7 != v5);
  }
  else
  {
    int64_t v6 = MEMORY[0x1E4FBC860];
  }
LABEL_28:
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1C22E6E88(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SettingsSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C22E6F64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SettingsSection()
{
  return &type metadata for SettingsSection;
}

unint64_t sub_1C22E6FA0()
{
  unint64_t result = qword_1EA2E08F8;
  if (!qword_1EA2E08F8)
  {
    sub_1C22E6FF8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E08F8);
  }
  return result;
}

void sub_1C22E6FF8()
{
  if (!qword_1EA2E0900)
  {
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0900);
    }
  }
}

unint64_t sub_1C22E7054()
{
  unint64_t result = qword_1EA2E0908;
  if (!qword_1EA2E0908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0908);
  }
  return result;
}

id sub_1C22E70E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v5 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  v28.receiver = v3;
  v28.super_class = (Class)type metadata accessor for NoGatewaysFoundTableViewCell();
  id v6 = objc_msgSendSuper2(&v28, sel_initWithStyle_reuseIdentifier_, a1, v5);

  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  id v8 = v6;
  id v9 = objc_msgSend(v7, sel_init);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v11 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setText_, v11, 0xE000000000000000);

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  unint64_t v12 = (void *)sub_1C254FE50();
  objc_msgSend(v9, sel_setFont_, v12);

  objc_msgSend(v9, sel_setTextAlignment_, 1);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v13, sel_setNumberOfLines_, 0);
  if (objc_msgSend(self, sel_isAppleInternalInstall))
  {
    id v14 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C254F5A0();
    id v15 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setText_, v15, 0xE000000000000000);
  }
  else
  {
    id v16 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    id v17 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setText_, v17, 0xE000000000000000);
  }
  id v18 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v13, sel_setFont_, v18);

  objc_msgSend(v13, sel_setTextAlignment_, 1);
  sub_1C21ACA3C();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C255CD70;
  *(void *)(v19 + 32) = v9;
  *(void *)(v19 + 40) = v13;
  sub_1C254F730();
  id v20 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
  id v21 = v9;
  id v22 = v13;
  uint64_t v23 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v20, sel_initWithArrangedSubviews_, v23);

  objc_msgSend(v24, sel_setAxis_, 1);
  objc_msgSend(v24, sel_setAlignment_, 3);
  objc_msgSend(v24, sel_setDistribution_, 2);
  objc_msgSend(v24, sel_setSpacing_, 8.0);
  objc_msgSend(v24, sel_setBaselineRelativeArrangement_, 0);
  id v25 = objc_msgSend(v8, sel_contentView);
  objc_msgSend(v25, sel_addSubview_, v24);

  id v26 = objc_msgSend(v8, sel_contentView);
  objc_msgSend(v24, sel_hk_alignConstraintsWithView_, v26);

  return v8;
}

id NoGatewaysFoundTableViewCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoGatewaysFoundTableViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NoGatewaysFoundTableViewCell()
{
  return self;
}

BOOL HKMedicalRecord.isSignedClinicalDataRecord.getter()
{
  return objc_msgSend(v0, sel_medicalRecordOriginType) == (id)3;
}

uint64_t sub_1C22E7798(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  id v59 = a4;
  id v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](a1);
  id v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = (char *)&v40 - v13;
  id v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_1C2550100();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  id v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x1F4188790](v26);
  objc_super v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  id v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_1C254F660();
  uint64_t v61 = sub_1C25504D0();
  uint64_t v56 = sub_1C25504E0();
  sub_1C2550480();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  id v59 = v30;
  uint64_t result = sub_1C254F640();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    id v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1C2550110();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_1C25504C0();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_1C2550110();
  id v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_1C25504C0();
      sub_1C2550110();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t Sequence.autoreleasingMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  void v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v10[5] = a1;
  v10[6] = a2;
  unint64_t v8 = sub_1C2206F9C();
  return sub_1C22E7798((void (*)(char *, char *))sub_1C22E7FB4, (uint64_t)v10, a3, a4, v8, a5, MEMORY[0x1E4FBC0F0], (uint64_t)&v11);
}

void sub_1C22E7F28(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v11 = (void *)MEMORY[0x1C87594F0]();
  a2(a1);
  if (v7) {
    *a7 = v7;
  }
}

uint64_t sub_1C22E7FB4(uint64_t a1, uint64_t a2)
{
  return sub_1C22E80E0(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, uint64_t))sub_1C22E7F28);
}

uint64_t Sequence.autoreleasingMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void v9[2] = a3;
  v9[3] = a4;
  _OWORD v9[4] = a5;
  _OWORD v9[5] = a1;
  v9[6] = a2;
  return sub_1C22E7798((void (*)(char *, char *))sub_1C22E80B4, (uint64_t)v9, a3, a4, MEMORY[0x1E4FBC248], a5, MEMORY[0x1E4FBC278], a8);
}

void sub_1C22E8044(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v5 = (void *)MEMORY[0x1C87594F0]();
  a2(a1);
  if (v2) {
    __break(1u);
  }
}

uint64_t sub_1C22E80B4(uint64_t a1, uint64_t a2)
{
  return sub_1C22E80E0(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void, uint64_t))sub_1C22E8044);
}

uint64_t sub_1C22E80E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, void, void, uint64_t))
{
  return a3(a1, v3[5], v3[6], v3[2], v3[3], v3[4], a2);
}

uint64_t Sequence.autoreleasingCompactMap<A>(_:)()
{
  return sub_1C254F680();
}

{
  return sub_1C254F680();
}

void sub_1C22E8154(uint64_t a1, void (*a2)(uint64_t))
{
  unsigned int v4 = (void *)MEMORY[0x1C87594F0]();
  a2(a1);
}

uint64_t sub_1C22E81C0(uint64_t a1)
{
  return sub_1C22E8268(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1C22E8154);
}

uint64_t sub_1C22E823C(uint64_t a1)
{
  return sub_1C22E8268(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1C22E8044);
}

uint64_t sub_1C22E8268(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[5], v2[6], v2[2], v2[3], v2[4]);
}

uint64_t type metadata accessor for AlphabeticalLabsDataSource()
{
  uint64_t result = qword_1EA2E0918;
  if (!qword_1EA2E0918) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C22E82E0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C22E8330(unint64_t a1)
{
  return sub_1C22E833C(a1, &OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);
}

uint64_t sub_1C22E833C(unint64_t a1, uint64_t *a2)
{
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return v9;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        if (*(void *)(MEMORY[0x1C87588E0](i, a1) + *a2 + 16) == 1)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1C2550460();
          sub_1C25504A0();
          sub_1C25504B0();
          sub_1C2550470();
        }
      }
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v8 = *a2;
      do
      {
        if (*(void *)(*(void *)(a1 + 8 * v7 + 32) + v8 + 16) != 1)
        {
          swift_retain();
          sub_1C2550460();
          sub_1C25504A0();
          sub_1C25504B0();
          sub_1C2550470();
          uint64_t v8 = *a2;
        }
        ++v7;
      }
      while (v4 != v7);
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C22E84D8(unint64_t a1)
{
  sub_1C22EA210(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v27 - v3;
  uint64_t v5 = sub_1C254CAD0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v34 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v33 = (char *)&v27 - v10;
  MEMORY[0x1F4188790](v9);
  unint64_t v32 = (char *)&v27 - v11;
  uint64_t v12 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v38 = a1;
  if (a1 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1C2550620();
    if (v37) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v37 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v37)
    {
LABEL_3:
      uint64_t v35 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
      unint64_t v36 = v38 & 0xC000000000000001;
      objc_super v28 = (void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v29 = (void (**)(char *, char *, uint64_t))(v6 + 32);
      uint64_t v15 = 4;
      uint64_t v30 = v12;
      uint64_t v31 = v4;
      uint64_t v27 = v14;
      while (1)
      {
        uint64_t v16 = v15 - 4;
        if (v36)
        {
          uint64_t v6 = MEMORY[0x1C87588E0](v15 - 4, v38);
          uint64_t v17 = v15 - 3;
          if (__OFADD__(v16, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v6 = *(void *)(v38 + 8 * v15);
          swift_retain();
          uint64_t v17 = v15 - 3;
          if (__OFADD__(v16, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        uint64_t v18 = v6 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData;
        sub_1C225F054(v6 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, (uint64_t)v14);
        sub_1C21EA654((uint64_t)&v14[*(int *)(v12 + 36)], (uint64_t)v4);
        if ((*v35)(v4, 1, v5) == 1) {
          break;
        }
        uint64_t v19 = v32;
        (*v29)(v32, v4, v5);
        uint64_t v20 = v33;
        sub_1C254CAC0();
        uint64_t v21 = v34;
        sub_1C254CA20();
        uint64_t v22 = *v28;
        (*v28)(v20, v5);
        LOBYTE(v20) = sub_1C254CA70();
        uint64_t v23 = v21;
        id v14 = v27;
        v22(v23, v5);
        uint64_t v24 = v19;
        uint64_t v12 = v30;
        v22(v24, v5);
        uint64_t v4 = v31;
        sub_1C22EA0E4((uint64_t)v14);
        if ((v20 & 1) == 0) {
          goto LABEL_5;
        }
        uint64_t v25 = *(void *)(v18 + 16);
        swift_release();
        if (!v25)
        {
          swift_bridgeObjectRelease();
          return 1;
        }
LABEL_6:
        ++v15;
        if (v17 == v37) {
          goto LABEL_18;
        }
      }
      sub_1C22178C0((uint64_t)v4);
      sub_1C22EA0E4((uint64_t)v14);
LABEL_5:
      swift_release();
      goto LABEL_6;
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C22E88BC(unint64_t a1)
{
  return sub_1C22E88C8(a1, &OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);
}

uint64_t sub_1C22E88C8(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 4;
      do
      {
        uint64_t v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = MEMORY[0x1C87588E0](v5 - 4, a1);
          BOOL v8 = __OFADD__(v6, 1);
          uint64_t v9 = v5 - 3;
          if (v8) {
            goto LABEL_14;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(a1 + 8 * v5);
          swift_retain();
          BOOL v8 = __OFADD__(v6, 1);
          uint64_t v9 = v5 - 3;
          if (v8)
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        uint64_t v10 = v7 + *a2;
        if (objc_msgSend(*(id *)(v10 + 8), sel_isLowUtility))
        {
          uint64_t v11 = *(void *)(v10 + 16);
          swift_release();
          if (!v11)
          {
            uint64_t v12 = 1;
            goto LABEL_17;
          }
        }
        else
        {
          swift_release();
        }
        ++v5;
      }
      while (v9 != v4);
    }
  }
  uint64_t v12 = 0;
LABEL_17:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C22E89EC(unint64_t a1)
{
  return sub_1C22E89F8(a1, &OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);
}

uint64_t sub_1C22E89F8(unint64_t a1, void *a2)
{
  uint64_t v40 = a2;
  sub_1C22EA210(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v29 - v4;
  uint64_t v6 = sub_1C254CAD0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v37 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unint64_t v36 = (char *)&v29 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v35 = (char *)&v29 - v12;
  uint64_t v13 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C2550620();
    uint64_t v41 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v41) {
    goto LABEL_18;
  }
LABEL_3:
  if (v41 >= 1)
  {
    uint64_t v17 = 0;
    unint64_t v18 = a1 & 0xC000000000000001;
    uint64_t v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v30 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v31 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    unint64_t v33 = a1;
    uint64_t v34 = v13;
    unint64_t v32 = a1 & 0xC000000000000001;
    while (1)
    {
      if (v18)
      {
        uint64_t v19 = MEMORY[0x1C87588E0](v17, a1);
      }
      else
      {
        uint64_t v19 = *(void *)(a1 + 8 * v17 + 32);
        swift_retain();
      }
      uint64_t v20 = v19 + *v40;
      sub_1C225F054(v20, (uint64_t)v15);
      sub_1C21EA654((uint64_t)&v15[*(int *)(v13 + 36)], (uint64_t)v5);
      if ((*v39)(v5, 1, v6) == 1)
      {
        sub_1C22178C0((uint64_t)v5);
        sub_1C22EA0E4((uint64_t)v15);
      }
      else
      {
        uint64_t v21 = v35;
        (*v31)(v35, v5, v6);
        uint64_t v22 = v36;
        sub_1C254CAC0();
        uint64_t v23 = v15;
        uint64_t v24 = v5;
        uint64_t v25 = v37;
        sub_1C254CA20();
        uint64_t v38 = v19;
        uint64_t v26 = *v30;
        (*v30)(v22, v6);
        LOBYTE(v22) = sub_1C254CA70();
        uint64_t v27 = v25;
        uint64_t v5 = v24;
        uint64_t v15 = v23;
        unint64_t v18 = v32;
        v26(v27, v6);
        objc_super v28 = v21;
        uint64_t v13 = v34;
        v26(v28, v6);
        a1 = v33;
        sub_1C22EA0E4((uint64_t)v15);
        if (v22) {
          goto LABEL_5;
        }
      }
      if (!objc_msgSend(*(id *)(v20 + 8), sel_isLowUtility) && !*(void *)(v20 + 16))
      {
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
        goto LABEL_6;
      }
LABEL_5:
      swift_release();
LABEL_6:
      if (v41 == ++v17)
      {
        swift_bridgeObjectRelease();
        return v42;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C22E8E20()
{
  sub_1C22EA140();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v0 + qword_1EA2E0910);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1C22EA2EC;
  *(void *)(v6 + 24) = v0;
  sub_1C22A827C();
  sub_1C22EA274(0, &qword_1EA2DF218, &qword_1EA2DF220, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
  sub_1C22E9FB8(&qword_1EA2E1750, (void (*)(uint64_t))sub_1C22A827C);
  swift_retain();
  swift_retain();
  sub_1C254EC00();
  swift_release();
  swift_release();
  sub_1C22E9FB8(&qword_1EA2E0940, (void (*)(uint64_t))sub_1C22EA140);
  uint64_t v7 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_1C22E9040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UserDomainConceptViewData();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v12 = &OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier;
  uint64_t v13 = &OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData;
  uint64_t v35 = a3;
  if (v10)
  {
    uint64_t v33 = a2;
    uint64_t v38 = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1C2550490();
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    type metadata accessor for AlphabeticalUDCCell();
    uint64_t v37 = (void **)(a3 + qword_1EBB6E7B0);
    swift_beginAccess();
    uint64_t v34 = v7;
    uint64_t v36 = *(void *)(v7 + 72);
    do
    {
      sub_1C225F054(v14, (uint64_t)v9);
      uint64_t v15 = *v37;
      type metadata accessor for UDCAlphabeticalItem();
      uint64_t v16 = swift_allocObject();
      uint64_t v17 = v13;
      unint64_t v18 = v12;
      uint64_t v19 = (uint64_t *)(v16 + *v12);
      sub_1C22E9FB8(&qword_1EA2E0928, (void (*)(uint64_t))type metadata accessor for AlphabeticalUDCCell);
      id v20 = v15;
      *uint64_t v19 = sub_1C254D330();
      v19[1] = v21;
      uint64_t v12 = v18;
      uint64_t v13 = v17;
      sub_1C22EA32C((uint64_t)v9, v16 + *v17);
      *(void *)(v16 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_healthStore) = v20;
      *(void *)(v16 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_listConfiguration) = 1;
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      v14 += v36;
      --v10;
    }
    while (v10);
    uint64_t v22 = v38;
    uint64_t v7 = v34;
    a3 = v35;
    a2 = v33;
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_retain();
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = *(void *)(a2 + 16);
  if (v23)
  {
    uint64_t v34 = v22;
    uint64_t v39 = v11;
    sub_1C2550490();
    uint64_t v24 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    type metadata accessor for AlphabeticalUDCCell();
    uint64_t v37 = (void **)(a3 + qword_1EBB6E7B0);
    swift_beginAccess();
    uint64_t v36 = *(void *)(v7 + 72);
    uint64_t v25 = v13;
    uint64_t v26 = v12;
    do
    {
      sub_1C225F054(v24, (uint64_t)v9);
      uint64_t v27 = *v37;
      type metadata accessor for UDCAlphabeticalItem();
      uint64_t v28 = swift_allocObject();
      uint64_t v29 = (uint64_t *)(v28 + *v26);
      sub_1C22E9FB8(&qword_1EA2E0928, (void (*)(uint64_t))type metadata accessor for AlphabeticalUDCCell);
      id v30 = v27;
      *uint64_t v29 = sub_1C254D330();
      v29[1] = v31;
      sub_1C22EA32C((uint64_t)v9, v28 + *v25);
      *(void *)(v28 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_healthStore) = v30;
      *(void *)(v28 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_listConfiguration) = 1;
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      v24 += v36;
      --v23;
    }
    while (v23);
    swift_release();
    return v34;
  }
  else
  {
    swift_release();
  }
  return v22;
}

uint64_t sub_1C22E9440(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v31 = sub_1C22E89F8(a2, &OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
  sub_1C22E833C(a1, &OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
  swift_getKeyPath();
  sub_1C22EA210(0, &qword_1EA2DF220, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem, MEMORY[0x1E4FBB320]);
  sub_1C22EA004();
  unint64_t v30 = sub_1C254F650();
  swift_release();
  swift_bridgeObjectRelease();
  char v6 = sub_1C22E84D8(a2);
  if (v6) {
    char v7 = 1;
  }
  else {
    char v7 = 4;
  }
  int v8 = 2;
  if ((sub_1C22E88C8(a2, &OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData) & 1) == 0)
  {
    if (sub_1C224FBC0(0xD000000000000026, 0x80000001C2577990, 0)) {
      int v8 = 2;
    }
    else {
      int v8 = 4;
    }
  }
  sub_1C22EA210(0, (unint64_t *)&qword_1EA2E0840, (uint64_t (*)(uint64_t))sub_1C22EA08C, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
  *(unsigned char *)(inited + 32) = v7;
  *(unsigned char *)(inited + 33) = v8;
  unint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v11 = sub_1C226D228(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v13 = *((void *)v11 + 2);
    unint64_t v12 = *((void *)v11 + 3);
    if (v13 >= v12 >> 1) {
      uint64_t v11 = sub_1C226D228((char *)(v12 > 1), v13 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v13 + 1;
    v11[v13 + 32] = 1;
    int v8 = *(unsigned __int8 *)(inited + 33);
  }
  if (v8 != 4)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C226D228(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v15 = *((void *)v11 + 2);
    unint64_t v14 = *((void *)v11 + 3);
    if (v15 >= v14 >> 1) {
      uint64_t v11 = sub_1C226D228((char *)(v14 > 1), v15 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v15 + 1;
    v11[v15 + 32] = v8;
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = *((void *)v11 + 2);
  if (v16)
  {
    unint64_t v32 = v10;
    swift_retain();
    sub_1C2550490();
    type metadata accessor for NavigationCell();
    uint64_t v17 = (void **)(v3 + qword_1EBB6E7B0);
    swift_beginAccess();
    type metadata accessor for NavigationItem();
    uint64_t v18 = 0;
    do
    {
      uint64_t v19 = v18 + 1;
      char v20 = v11[v18 + 32];
      uint64_t v21 = *v17;
      uint64_t v22 = swift_allocObject();
      sub_1C22E9FB8(&qword_1EA2E0818, (void (*)(uint64_t))type metadata accessor for NavigationCell);
      id v23 = v21;
      *(void *)(v22 + 16) = sub_1C254D330();
      *(void *)(v22 + 24) = v24;
      *(unsigned char *)(v22 + 32) = v20;
      *(unsigned char *)(v22 + 33) = 2;
      *(void *)(v22 + 40) = v23;
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      uint64_t v18 = v19;
    }
    while (v16 != v19);
    unint64_t v29 = v32;
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v29 = MEMORY[0x1E4FBC860];
  }
  sub_1C22EA210(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C255D0E0;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v26 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C228AE80(v30);
  swift_bridgeObjectRelease();
  sub_1C254D990();
  id v27 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C228AE80(v31);
  swift_bridgeObjectRelease();
  sub_1C254D990();
  sub_1C228AE38(v29);
  swift_bridgeObjectRelease();
  sub_1C254D990();
  return v25;
}

uint64_t sub_1C22E9AD0@<X0>(Swift::String *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_mainBundle);
  id v3 = objc_msgSend(v2, sel_preferredLocalizations);

  uint64_t v4 = sub_1C254F710();
  Swift::String v5 = HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v4);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v5;
  return result;
}

BOOL sub_1C22E9B70()
{
  return sub_1C2550140() == -1;
}

uint64_t sub_1C22E9BD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254DB50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DA90();
  sub_1C254DAF0();
  sub_1C22DD8FC();
  uint64_t v9 = *(int *)(v8 + 48);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a1, v7, v4);
  uint64_t v10 = v2 + qword_1EBB6E7C8;
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1C875A200](v10);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(void *)(a1 + v9) = v11;
  uint64_t v12 = *MEMORY[0x1E4F66498];
  uint64_t v13 = sub_1C254DA70();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 104))(a1, v12, v13);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
}

uint64_t sub_1C22E9D98()
{
  return sub_1C254FAD0();
}

void sub_1C22E9E88()
{
}

uint64_t sub_1C22E9EB8()
{
  return swift_release();
}

uint64_t sub_1C22E9EC8()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1C23A3C70(v0);
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1C254DA50();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C22E9FB0()
{
  return type metadata accessor for AlphabeticalLabsDataSource();
}

uint64_t sub_1C22E9FB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C22EA004()
{
  unint64_t result = qword_1EA2E0930;
  if (!qword_1EA2E0930)
  {
    sub_1C22EA210(255, &qword_1EA2DF220, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0930);
  }
  return result;
}

void sub_1C22EA08C()
{
  if (!qword_1EA2E0848)
  {
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0848);
    }
  }
}

uint64_t sub_1C22EA0E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserDomainConceptViewData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C22EA140()
{
  if (!qword_1EA2E0938)
  {
    sub_1C22A827C();
    sub_1C22EA274(255, &qword_1EA2DF218, &qword_1EA2DF220, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
    sub_1C22E9FB8(&qword_1EA2E1750, (void (*)(uint64_t))sub_1C22A827C);
    unint64_t v0 = sub_1C254E930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0938);
    }
  }
}

void sub_1C22EA210(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C22EA274(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C22EA210(255, a3, a4, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C22EA2EC(uint64_t a1, uint64_t a2)
{
  return sub_1C22E9040(a1, a2, v2);
}

uint64_t sub_1C22EA2F4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C22EA32C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserDomainConceptViewData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C22EA390()
{
  id v1 = objc_msgSend(*v0, sel_collectionView);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C22EA428()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = v1;
  id v3 = self;
  id v4 = objc_msgSend(v3, sel_clearColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v4);

  id v5 = objc_msgSend(v0, sel_collectionView);
  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v6 = v5;
  id v7 = objc_msgSend(v3, sel_clearColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);
}

void sub_1C22EA528()
{
}

void sub_1C22EA54C()
{
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C22EA5E4()
{
}

uint64_t UDCRecentItem.__allocating_init(viewData:healthStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  id v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier);
  type metadata accessor for RecentUDCCell();
  sub_1C22EB364(&qword_1EA2E0810, (void (*)(uint64_t))type metadata accessor for RecentUDCCell);
  *id v5 = sub_1C254D330();
  v5[1] = v6;
  sub_1C22EA32C(a1, v4 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);
  *(void *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_healthStore) = a2;
  *(void *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_listConfiguration) = 0;
  return v4;
}

uint64_t UDCRecentItem.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C225F054(v1 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, a1);
}

id UDCRecentItem.healthStore.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_healthStore);
}

uint64_t UDCRecentItem.init(viewData:healthStore:)(uint64_t a1, uint64_t a2)
{
  id v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier);
  type metadata accessor for RecentUDCCell();
  sub_1C22EB364(&qword_1EA2E0810, (void (*)(uint64_t))type metadata accessor for RecentUDCCell);
  *id v5 = sub_1C254D330();
  v5[1] = v6;
  sub_1C22EA32C(a1, v2 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_healthStore) = a2;
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_listConfiguration) = 0;
  return v2;
}

uint64_t UDCRecentItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C22EA804()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier + 8);
  id v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData
                                                             + 8), sel_UUID));
  sub_1C254CB20();

  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v9[0] = v6;
  v9[1] = v5;
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v9[0];
}

id sub_1C22EA94C()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData + 8);
}

uint64_t UDCRecentItem.deinit()
{
  sub_1C22EA0E4(v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UDCRecentItem.__deallocating_deinit()
{
  sub_1C22EA0E4(v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C22EAA34()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C22EAA74()
{
  return sub_1C22EA804();
}

uint64_t sub_1C22EAA98@<X0>(uint64_t a1@<X8>)
{
  return sub_1C225F054(*v1 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, a1);
}

id sub_1C22EAAB0()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_healthStore);
}

uint64_t sub_1C22EAAC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  type metadata accessor for UDCRecentItem();
  uint64_t v6 = swift_allocObject();
  id v7 = (uint64_t *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_reuseIdentifier);
  type metadata accessor for RecentUDCCell();
  sub_1C22EB364(&qword_1EA2E0810, (void (*)(uint64_t))type metadata accessor for RecentUDCCell);
  *id v7 = sub_1C254D330();
  v7[1] = v8;
  uint64_t result = sub_1C22EA32C(a1, v6 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);
  *(void *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_healthStore) = a2;
  *(void *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_listConfiguration) = 0;
  *a3 = v6;
  return result;
}

uint64_t static UDCRecentItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return _s15HealthRecordsUI25UserDomainConceptViewDataV2eeoiySbAC_ACtFZ_0((void *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData), (void *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData));
}

uint64_t UDCRecentItem.hash(into:)()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData
                                                             + 8), sel_UUID));
  sub_1C254CB20();

  sub_1C22EB364((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
  sub_1C254F380();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t UDCRecentItem.hashValue.getter()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C25509C0();
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData
                                                             + 8), sel_UUID));
  sub_1C254CB20();

  sub_1C22EB364((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
  sub_1C254F380();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_1C2550A10();
}

uint64_t sub_1C22EAE40()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_1C25509C0();
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                             + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData
                                                             + 8), sel_UUID));
  sub_1C254CB20();

  sub_1C22EB364((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
  sub_1C254F380();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_1C2550A10();
}

uint64_t sub_1C22EAF90()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData
                                                             + 8), sel_UUID));
  sub_1C254CB20();

  sub_1C22EB364((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
  sub_1C254F380();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1C22EB0D4()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C25509C0();
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData
                                                             + 8), sel_UUID));
  sub_1C254CB20();

  sub_1C22EB364((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
  sub_1C254F380();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_1C2550A10();
}

uint64_t sub_1C22EB230(void *a1, void *a2)
{
  return _s15HealthRecordsUI25UserDomainConceptViewDataV2eeoiySbAC_ACtFZ_0((void *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData), (void *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData));
}

uint64_t sub_1C22EB24C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C22EB364(&qword_1EA2DFB98, (void (*)(uint64_t))type metadata accessor for UDCRecentItem);
  uint64_t result = sub_1C22EB364(&qword_1EA2E0948, (void (*)(uint64_t))type metadata accessor for UDCRecentItem);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for UDCRecentItem()
{
  uint64_t result = qword_1EA2E0958;
  if (!qword_1EA2E0958) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C22EB31C()
{
  return sub_1C22EB364(&qword_1EA2E0950, (void (*)(uint64_t))type metadata accessor for UDCRecentItem);
}

uint64_t sub_1C22EB364(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C22EB3AC()
{
  return type metadata accessor for UDCRecentItem();
}

uint64_t sub_1C22EB3B4()
{
  uint64_t result = type metadata accessor for UserDomainConceptViewData();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for UDCRecentItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UDCRecentItem);
}

uint64_t dispatch thunk of UDCRecentItem.__allocating_init(viewData:healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of UDCRecentItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of UDCRecentItem.concept.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_1C22EB4DC(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (v1)
    {
      sub_1C254DA10();
    }
    else
    {
      sub_1C22EB6EC();
      swift_getObjectType();
      sub_1C254D690();
      swift_unknownObjectRelease();
      sub_1C254DA10();
      swift_bridgeObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C22EB598()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C254DA10();
    return swift_release();
  }
  return result;
}

id sub_1C22EB5FC@<X0>(uint64_t a1@<X8>)
{
  sub_1C22DD8FC();
  uint64_t v4 = *(int *)(v3 + 48);
  sub_1C254DAE0();
  id v9 = *(id *)(v1 + qword_1EA2E0968);
  *(void *)(a1 + v4) = v9;
  uint64_t v5 = *MEMORY[0x1E4F66498];
  uint64_t v6 = sub_1C254DA70();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(a1, v5, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return v9;
}

uint64_t sub_1C22EB6EC()
{
  uint64_t v1 = v0;
  sub_1C22EBD64(0, &qword_1EA2E0890, MEMORY[0x1E4F664A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v40 - v3;
  sub_1C254D110();
  id v43 = (id)MEMORY[0x1C87555F0]();
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v42 = v5;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255CD80;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  sub_1C2269E20();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C255CDA0;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1C220D950();
  strcpy((char *)(v7 + 32), "pluginPackage");
  *(_WORD *)(v7 + 46) = -4864;
  *(void *)(v7 + 96) = v8;
  *(void *)(v7 + 104) = v9;
  *(void *)(v7 + 64) = v9;
  *(void *)(v7 + 72) = 0xD000000000000025;
  *(void *)(v7 + 80) = 0x80000001C2578100;
  *(void *)(v6 + 32) = sub_1C254F9A0();
  sub_1C22EBD64(0, &qword_1EA2DF320, MEMORY[0x1E4F67030], MEMORY[0x1E4FBBE00]);
  uint64_t v10 = sub_1C254CEF0();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  long long v40 = xmmword_1C255CD90;
  *(_OWORD *)(v13 + 16) = xmmword_1C255CD90;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x1E4F67028], v10);
  sub_1C254CFE0();
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v40;
  unint64_t v15 = *(void **)(v1 + qword_1EA2E0970);
  *(void *)(v14 + 32) = objc_msgSend(v15, sel_profileIdentifier);
  uint64_t v16 = sub_1C254D0B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v6 + 40) = v16;
  id v17 = objc_msgSend(v15, sel_profileIdentifier);
  LOBYTE(v44) = 2;
  id v18 = sub_1C22F0590((unsigned __int8 *)&v44);

  *(void *)(v6 + 48) = v18;
  uint64_t v44 = v6;
  sub_1C254F730();
  uint64_t v19 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v19);

  id v21 = v43;
  objc_msgSend(v43, sel_setPredicate_, v20);

  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C255CEB0;
  id v23 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v24 = (void *)sub_1C254F430();
  id v25 = objc_msgSend(v23, sel_initWithKey_ascending_selector_, v24, 1, sel_localizedStandardCompare_);

  *(void *)(v22 + 32) = v25;
  uint64_t v44 = v22;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  id v26 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setSortDescriptors_, v26);

  uint64_t v27 = v41;
  __swift_project_boxed_opaque_existential_1Tm((void *)(v41 + qword_1EA2E0978), *(void *)(v41 + qword_1EA2E0978 + 24));
  id v28 = v21;
  unint64_t v29 = (void *)sub_1C254CE10();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v28, v29, 0, 0);

  sub_1C22DD8FC();
  uint64_t v31 = *(int *)(v30 + 48);
  sub_1C254DAE0();
  unint64_t v32 = *(void **)(v27 + qword_1EA2E0968);
  *(void *)&v4[v31] = v32;
  uint64_t v33 = *MEMORY[0x1E4F66498];
  uint64_t v34 = sub_1C254DA70();
  uint64_t v35 = *(void *)(v34 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 104))(v4, v33, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v4, 0, 1, v34);
  sub_1C22ECD44(0, (unint64_t *)&qword_1EA2DEA68, MEMORY[0x1E4F674F8], (uint64_t (*)(void))sub_1C22E3F70, MEMORY[0x1E4F66390]);
  objc_allocWithZone(v36);
  id v37 = v32;
  uint64_t v38 = sub_1C254D530();

  sub_1C22ECA38();
  return v38;
}

void sub_1C22EBD64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void LabsOnboardingDataSource.__allocating_init(arrangedSections:identifier:)()
{
}

void LabsOnboardingDataSource.init(arrangedSections:identifier:)()
{
}

uint64_t sub_1C22EBE28()
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + qword_1EA2E0978);
  return swift_bridgeObjectRelease();
}

uint64_t LabsOnboardingDataSource.deinit()
{
  uint64_t v0 = sub_1C254DA50();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + qword_1EA2E0978);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LabsOnboardingDataSource.__deallocating_deinit()
{
  uint64_t v0 = sub_1C254DA50();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + qword_1EA2E0978);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id sub_1C22EBFA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  sub_1C22DD8FC();
  uint64_t v5 = *(int *)(v4 + 48);
  sub_1C254DAE0();
  id v10 = *(id *)(v3 + qword_1EA2E0968);
  *(void *)(a1 + v5) = v10;
  uint64_t v6 = *MEMORY[0x1E4F66498];
  uint64_t v7 = sub_1C254DA70();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 104))(a1, v6, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return v10;
}

uint64_t sub_1C22EC094()
{
  return sub_1C254DEF0();
}

uint64_t sub_1C22EC0F0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v67 = a3;
  uint64_t v8 = sub_1C254FD00();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  uint64_t v70 = v9;
  MEMORY[0x1F4188790](v8);
  id v66 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class v72 = (void (*)(uint64_t))MEMORY[0x1E4F27FC8];
  uint64_t v71 = sub_1C22ECCC8;
  sub_1C22ECDC4(0, &qword_1EA2E09A0, MEMORY[0x1E4F27FC8], (void (*)(void))sub_1C22ECCC8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v73 = v11;
  uint64_t v74 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v68 = (char *)&v52 - v13;
  sub_1C22EBD64(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v60 = (char *)&v52 - v15;
  uint64_t v55 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1F4188790](v55);
  id v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22ECCFC(0);
  uint64_t v59 = v18;
  uint64_t v61 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  id v57 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v63 = sub_1C22ECCFC;
  id v62 = sub_1C22A85A4;
  sub_1C22ECDC4(0, &qword_1EA2E09A8, sub_1C22ECCFC, (void (*)(void))sub_1C22A85A4);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v64 = v20;
  uint64_t v65 = v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v58 = (char *)&v52 - v22;
  uint64_t v23 = sub_1C254CB40();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  id v26 = (char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + qword_1EA2E0988) = MEMORY[0x1E4FBC870];
  *(void *)(v4 + qword_1EA2E0970) = a1;
  *(void *)(v4 + qword_1EA2E0968) = a2;
  sub_1C21F4424(a3, v4 + qword_1EA2E0978);
  type metadata accessor for OnboardingTileAppearanceManager();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a1;
  id v28 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  id v29 = a1;
  swift_retain();
  id v30 = a2;
  uint64_t v31 = (void *)sub_1C254F430();
  id v32 = objc_msgSend(v28, sel_initWithCategory_domainName_healthStore_, 0, v31, v29);

  *(void *)(v27 + 24) = v32;
  *(void *)(v4 + qword_1EA2E0980) = v27;
  swift_release();
  v75[0] = 0;
  v75[1] = (id)0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v75, "MutableArray<");
  HIWORD(v75[1]) = -4864;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v33 = sub_1C254D9F0();
  uint64_t v56 = qword_1EA2E0980;
  uint64_t v34 = (uint64_t)v17;
  swift_storeEnumTagMultiPayload();
  swift_retain();
  uint64_t v35 = (void *)sub_1C21A567C();
  sub_1C22ECE6C((uint64_t)v17);
  v75[0] = v35;
  char v76 = 0;
  sub_1C22A8160();
  sub_1C22A81C8();
  Class v36 = v57;
  sub_1C254EBE0();
  swift_release();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  v75[0] = (id)sub_1C254FC70();
  uint64_t v37 = sub_1C254FC20();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  uint64_t v54 = v38 + 56;
  uint64_t v39 = (uint64_t)v60;
  v53(v60, 1, 1, v37);
  sub_1C22A85A4();
  sub_1C22611AC();
  long long v40 = v58;
  uint64_t v41 = v59;
  uint64_t v42 = v36;
  sub_1C254EC70();
  uint64_t v43 = v39;
  sub_1C2258214(v39);

  (*(void (**)(char *, uint64_t))(v61 + 8))(v42, v41);
  swift_allocObject();
  swift_weakInit();
  sub_1C22ECF08(&qword_1EA2E09B0, &qword_1EA2E09A8, v63, (void (*)(void))v62);
  uint64_t v44 = v64;
  sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v40, v44);
  swift_beginAccess();
  sub_1C254E9F0();
  swift_endAccess();
  swift_release();
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = v66;
  sub_1C21A7D38(v34);
  sub_1C22ECE6C(v34);
  v75[0] = (id)sub_1C254FC70();
  uint64_t v46 = v43;
  v53((char *)v43, 1, 1, v37);
  sub_1C22ECCC8();
  uint64_t v47 = v68;
  uint64_t v48 = v46;
  uint64_t v49 = v69;
  sub_1C254EC70();
  sub_1C2258214(v48);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v45, v49);
  swift_allocObject();
  swift_weakInit();
  sub_1C22ECF08(&qword_1EA2E1A40, &qword_1EA2E09A0, v72, (void (*)(void))v71);
  uint64_t v50 = v73;
  sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v47, v50);
  swift_beginAccess();
  sub_1C254E9F0();
  swift_endAccess();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v67);
  return v33;
}

unint64_t sub_1C22ECA38()
{
  unint64_t result = qword_1EA2DEA78;
  if (!qword_1EA2DEA78)
  {
    sub_1C22ECD44(255, (unint64_t *)&qword_1EA2DEA68, MEMORY[0x1E4F674F8], (uint64_t (*)(void))sub_1C22E3F70, MEMORY[0x1E4F66390]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DEA78);
  }
  return result;
}

uint64_t sub_1C22ECAD4()
{
  return sub_1C22ECB1C(&qword_1EA2DF200, (void (*)(uint64_t))type metadata accessor for LabsOnboardingDataSource);
}

uint64_t sub_1C22ECB1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for LabsOnboardingDataSource()
{
  uint64_t result = qword_1EA2E0990;
  if (!qword_1EA2E0990) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C22ECBB0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for LabsOnboardingDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LabsOnboardingDataSource);
}

uint64_t dispatch thunk of LabsOnboardingDataSource.layoutType(for:with:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for LabsOnboardingDataSource + *v0 + 72))();
}

uint64_t dispatch thunk of LabsOnboardingDataSource.makeOnboardingDataSource()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for LabsOnboardingDataSource + *v0 + 80))();
}

uint64_t sub_1C22ECCC0()
{
  return type metadata accessor for LabsOnboardingDataSource();
}

uint64_t sub_1C22ECCC8()
{
  return sub_1C22ECB1C(&qword_1EA2E1A30, MEMORY[0x1E4F27FC8]);
}

void sub_1C22ECCFC(uint64_t a1)
{
}

void sub_1C22ECD44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_1C22ECDC4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    a4();
    sub_1C22611AC();
    unint64_t v6 = sub_1C254E9B0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C22ECE6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OnboardingViewIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C22ECEC8()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C22ECF00(char *a1)
{
  return sub_1C22EB4DC(a1);
}

uint64_t sub_1C22ECF08(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C22ECDC4(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C22ECF58()
{
  return sub_1C22EB598();
}

id sub_1C22ECF60()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context);
    unint64_t v6 = (objc_class *)type metadata accessor for CoverageClassificationFormatter();
    uint64_t v7 = (char *)objc_allocWithZone(v6);
    *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_store] = v4;
    *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context] = v5;
    v13.receiver = v7;
    v13.super_class = v6;
    id v8 = v4;
    id v9 = objc_msgSendSuper2(&v13, sel_init);
    uint64_t v10 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1C22ED030()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context);
    unint64_t v6 = (objc_class *)type metadata accessor for CoverageIdentifierFormatter();
    uint64_t v7 = (char *)objc_allocWithZone(v6);
    id v8 = &v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_displayValue];
    *(void *)id v8 = 0;
    *((void *)v8 + 1) = 0;
    id v9 = &v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_identifierTitle];
    *(void *)id v9 = 0;
    *((void *)v9 + 1) = 0xE000000000000000;
    *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_store] = v4;
    *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context] = v5;
    v15.receiver = v7;
    v15.super_class = v6;
    id v10 = v4;
    id v11 = objc_msgSendSuper2(&v15, sel_init);
    uint64_t v12 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v11;
    id v3 = v11;

    uint64_t v2 = 0;
  }
  id v13 = v2;
  return v3;
}

uint64_t sub_1C22ED124(void *a1)
{
  unint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v43 = MEMORY[0x1E4FBC860];
  id v3 = objc_msgSend(a1, sel_beneficiaryIdentifier);
  if (v3)
  {
    id v4 = v3;
    sub_1C21ACA3C();
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C255CEB0;
    *(void *)(v5 + 32) = v4;
    unint64_t v41 = v5;
    sub_1C254F730();
    unint64_t v2 = v41;
  }
  id v6 = sub_1C22ED030();
  id v7 = objc_msgSend(a1, sel_beneficiary);
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = sub_1C254F470();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C254C730();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();

  id v16 = objc_msgSend(a1, sel_country, 0xE000000000000000);
  sub_1C254F470();

  uint64_t v17 = sub_1C23FF82C(v2, v9, v11, v13, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2272A24(v17);
  id v18 = objc_msgSend(a1, sel_subscriberIdentifier);
  if (v18)
  {
    id v19 = v18;
    sub_1C21ACA3C();
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C255CEB0;
    *(void *)(v20 + 32) = v19;
    unint64_t v42 = v20;
    sub_1C254F730();
    unint64_t v21 = v42;
  }
  else
  {
    unint64_t v21 = MEMORY[0x1E4FBC860];
  }
  id v22 = sub_1C22ED030();
  id v23 = objc_msgSend(a1, sel_subscriber);
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = sub_1C254F470();
    uint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v27 = 0;
  }
  id v28 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1C254C730();
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();

  id v32 = objc_msgSend(a1, sel_country, 0xE000000000000000);
  sub_1C254F470();

  uint64_t v33 = sub_1C23FF82C(v21, v25, v27, v29, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2272A24(v33);
  id v34 = objc_msgSend(a1, sel_classification);
  if (v34)
  {
    uint64_t v35 = v34;
    sub_1C21AB51C(0, &qword_1EA2E09B8);
    unint64_t v36 = sub_1C254F710();

    id v37 = sub_1C22ECF60();
    id v38 = v37;
    uint64_t v39 = sub_1C22EDCC4(v36, (uint64_t)v38);
    swift_bridgeObjectRelease();

    sub_1C2272A24(v39);
  }
  return v43;
}

id CoverageRecordFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store);
}

uint64_t CoverageRecordFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context);
}

id CoverageRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id CoverageRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for CoverageRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1C22ED688(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context);
  if (v2 == 1)
  {
    return sub_1C22EE2F8((uint64_t)a1);
  }
  else if (v2)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C22ED70C(a1);
  }
  return result;
}

uint64_t sub_1C22ED70C(void *a1)
{
  sub_1C22EE4B0();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2561290;
  *(void *)(inited + 32) = sub_1C253F7C8(a1);
  *(void *)(inited + 40) = sub_1C22EDF10(a1);
  *(void *)(inited + 48) = sub_1C22EE10C(a1);
  id v3 = objc_msgSend(a1, sel_payor);
  if (v3)
  {
    uint64_t v4 = sub_1C254F710();

    id v3 = (id)Array<A>.newlineJoined.getter(v4);
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v6 = 0;
  }
  uint64_t v7 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  *(void *)(inited + 56) = sub_1C2388668((uint64_t)v3, v6);
  *(void *)(inited + 64) = sub_1C23892E4(objc_msgSend(a1, sel_periodStartDate), objc_msgSend(a1, sel_periodEndDate), v7);
  sub_1C254F730();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  id v8 = *(void **)(inited + 32);
  if (v8)
  {
    id v9 = v8;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v10 = *(void **)(inited + 40);
  if (v10)
  {
    id v11 = v10;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v12 = *(void **)(inited + 48);
  if (v12)
  {
    id v13 = v12;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v14 = *(void **)(inited + 56);
  if (v14)
  {
    id v15 = v14;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v16 = *(void **)(inited + 64);
  if (v16)
  {
    id v17 = v16;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  swift_bridgeObjectRelease();
  return v19;
}

id CoverageRecordFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CoverageRecordFormatter.init()()
{
}

id CoverageRecordFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoverageRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C22EDB88()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store);
}

uint64_t sub_1C22EDB9C()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context);
}

id sub_1C22EDBB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v6 = (objc_class *)type metadata accessor for CoverageRecordFormatter();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter] = 0;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter] = 0;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1C22EDC3C(void *a1)
{
  uint64_t v2 = *(void *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context);
  if (v2 == 1)
  {
    return sub_1C22EE2F8((uint64_t)a1);
  }
  else if (v2)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C22ED70C(a1);
  }
  return result;
}

uint64_t sub_1C22EDCC4(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
    if (!v3) {
      return v4;
    }
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1C2274CD0(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v4 = v20;
    unint64_t v16 = v2 & 0xC000000000000001;
    unint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context);
    unint64_t v17 = v2;
    while (v3 != v5)
    {
      if (v16) {
        id v7 = (id)MEMORY[0x1C87588E0](v5, v2);
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      id v8 = v7;
      if (v6 > 1) {
        goto LABEL_22;
      }
      objc_super v9 = (void *)sub_1C24B5298(v7);
      uint64_t v10 = v9;
      uint64_t v11 = MEMORY[0x1E4FBC860];
      uint64_t v19 = MEMORY[0x1E4FBC860];
      if (v9)
      {
        id v12 = v9;
        MEMORY[0x1C8757C00]();
        if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();
        uint64_t v11 = v19;
      }

      unint64_t v14 = *(void *)(v20 + 16);
      unint64_t v13 = *(void *)(v20 + 24);
      if (v14 >= v13 >> 1) {
        sub_1C2274CD0(v13 > 1, v14 + 1, 1);
      }
      ++v5;
      *(void *)(v20 + 16) = v14 + 1;
      *(void *)(v20 + 8 * v14 + 32) = v11;
      unint64_t v2 = v17;
      if (v3 == v5) {
        return v4;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_22:
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CoverageRecordFormatter()
{
  return self;
}

id sub_1C22EDF10(void *a1)
{
  id v1 = objc_msgSend(a1, sel_subscriberId);
  uint64_t v2 = sub_1C254F470();
  unint64_t v4 = v3;

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    id v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    id v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    objc_super v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

id sub_1C22EE10C(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1C23F6854(v1);
  unint64_t v4 = v3;

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    id v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    id v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    objc_super v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

uint64_t sub_1C22EE2F8(uint64_t a1)
{
  id v1 = (void *)sub_1C243F974(a1);
  uint64_t v2 = v1;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    id v4 = v1;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
    uint64_t v3 = v6;
  }

  return v3;
}

unint64_t sub_1C22EE3A0(uint64_t a1)
{
  unint64_t result = sub_1C22EE3C8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C22EE3C8()
{
  unint64_t result = qword_1EA2E09E0;
  if (!qword_1EA2E09E0)
  {
    type metadata accessor for CoverageRecordFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E09E0);
  }
  return result;
}

uint64_t method lookup function for CoverageRecordFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoverageRecordFormatter);
}

uint64_t dispatch thunk of CoverageRecordFormatter.structuredItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CoverageRecordFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of CoverageRecordFormatter.displayItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

void sub_1C22EE4B0()
{
  if (!qword_1EA2DF0E8)
  {
    sub_1C224F494(255);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF0E8);
    }
  }
}

id static FeedItem.predicateForHealthRecordsData(categoryKind:sourceProfile:)(unsigned __int8 *a1, void *a2)
{
  id v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F26E60];
  sub_1C22F10A8(0, &qword_1EA2DFD80, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v35 - v6;
  uint64_t v8 = *a1;
  sub_1C22F10A8(0, &qword_1EA2DF320, MEMORY[0x1E4F67030], MEMORY[0x1E4FBBE00]);
  uint64_t v9 = sub_1C254CEF0();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  long long v35 = xmmword_1C255CD90;
  *(_OWORD *)(v12 + 16) = xmmword_1C255CD90;
  (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x1E4F66FC8], v9);
  uint64_t v13 = sub_1C254CFE0();
  uint64_t v15 = v14;
  uint64_t v16 = sub_1C254C520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v7, 1, 1, v16);
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v35;
  *(void *)(v17 + 32) = a2;
  id v18 = a2;
  uint64_t v19 = (void *)MEMORY[0x1C87555D0](v12, v13, v15, v7, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C22F110C((uint64_t)v7, &qword_1EA2DFD80, v4);
  if (v8 == 11) {
    return v19;
  }
  unint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v37 = 0xD000000000000014;
  unint64_t v38 = 0x80000001C257B7E0;
  uint64_t v36 = v8;
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  unint64_t v22 = v37;
  unint64_t v21 = v38;
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C255CDA0;
  sub_1C254D110();
  uint64_t v24 = sub_1C254D0F0();
  uint64_t v26 = v25;
  uint64_t v27 = MEMORY[0x1E4FBB1A0];
  *(void *)(v23 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v28 = sub_1C220D950();
  *(void *)(v23 + 32) = v24;
  *(void *)(v23 + 40) = v26;
  *(void *)(v23 + 96) = v27;
  *(void *)(v23 + 104) = v28;
  *(void *)(v23 + 64) = v28;
  *(void *)(v23 + 72) = v22;
  *(void *)(v23 + 80) = v21;
  swift_bridgeObjectRetain();
  uint64_t v29 = (void *)sub_1C254F9A0();
  swift_bridgeObjectRelease();
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1C255CD70;
  *(void *)(v30 + 32) = v19;
  *(void *)(v30 + 40) = v29;
  unint64_t v37 = v30;
  sub_1C254F730();
  id v31 = v19;
  id v32 = v29;
  uint64_t v33 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v33);

  return v34;
}

uint64_t static FeedItem.predicateForGeneralHealthRecordsOnboarding(profileId:)(uint64_t a1)
{
  return sub_1C22EE9AC(a1, (uint64_t (*)(void))_s15HealthRecordsUI35AddAccountFeedItemIdentifierFactoryV011makeGeneralab10OnboardingH03forSSSo09HKProfileH0CSg_tFZ_0);
}

uint64_t static FeedItem.predicateForLabsHealthRecordsOnboarding(profileId:)(uint64_t a1)
{
  return sub_1C22EE9AC(a1, (uint64_t (*)(void))sub_1C23E8940);
}

uint64_t sub_1C22EE9AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2 = a2();
  uint64_t v4 = v3;
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C255CDA0;
  sub_1C254D110();
  uint64_t v6 = sub_1C254D0F0();
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1C220D950();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v8;
  *(void *)(v5 + 96) = v9;
  *(void *)(v5 + 104) = v10;
  *(void *)(v5 + 64) = v10;
  *(void *)(v5 + 72) = v2;
  *(void *)(v5 + 80) = v4;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C254F9A0();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t static FeedItem.predicateForHealthRecordsPlugin()()
{
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255CDA0;
  uint64_t v1 = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v2 = sub_1C220D950();
  strcpy((char *)(v0 + 32), "pluginPackage");
  *(_WORD *)(v0 + 46) = -4864;
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v2;
  *(void *)(v0 + 64) = v2;
  *(void *)(v0 + 72) = 0xD000000000000025;
  *(void *)(v0 + 80) = 0x80000001C2578100;
  return sub_1C254F9A0();
}

id static FeedItem.predicateForOnboarding(sourceProfile:categoryKind:)(uint64_t a1, unsigned __int8 *a2)
{
  return sub_1C22F0590(a2);
}

unint64_t static FeedItem.chrPluginPackage.getter()
{
  return 0xD000000000000025;
}

uint64_t static FeedItem.predicateForPluginPackage(_:)(uint64_t a1, uint64_t a2)
{
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255CDA0;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v6 = sub_1C220D950();
  strcpy((char *)(v4 + 32), "pluginPackage");
  *(_WORD *)(v4 + 46) = -4864;
  *(void *)(v4 + 96) = v5;
  *(void *)(v4 + 104) = v6;
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 72) = a1;
  *(void *)(v4 + 80) = a2;
  swift_bridgeObjectRetain();
  return sub_1C254F9A0();
}

uint64_t static FeedItem.predicateForPluginUniqueIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C22EED20(a1, a2);
}

uint64_t static FeedItem.predicateForPluginUniqueIdentifierComponent(_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C22EED20(a1, a2);
}

uint64_t sub_1C22EED20(uint64_t a1, uint64_t a2)
{
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255CDA0;
  sub_1C254D110();
  uint64_t v5 = sub_1C254D0F0();
  uint64_t v7 = v6;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1C220D950();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  *(void *)(v4 + 96) = v8;
  *(void *)(v4 + 104) = v9;
  *(void *)(v4 + 64) = v9;
  *(void *)(v4 + 72) = a1;
  *(void *)(v4 + 80) = a2;
  swift_bridgeObjectRetain();
  return sub_1C254F9A0();
}

unint64_t sub_1C22EEE20()
{
  unint64_t result = qword_1EBB6FF60;
  if (!qword_1EBB6FF60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB6FF60);
  }
  return result;
}

id static FeedItem.predicateForSharedSnippets()()
{
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255CDA0;
  sub_1C254D110();
  uint64_t v1 = sub_1C254D0F0();
  uint64_t v3 = v2;
  uint64_t v4 = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v5 = sub_1C220D950();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v3;
  *(void *)(v0 + 96) = v4;
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 64) = v5;
  *(void *)(v0 + 72) = 0xD000000000000024;
  *(void *)(v0 + 80) = 0x80000001C257B820;
  uint64_t v6 = (void *)sub_1C254F9A0();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C255CDA0;
  uint64_t v8 = sub_1C254D0F0();
  *(void *)(v7 + 56) = v4;
  *(void *)(v7 + 64) = v5;
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v9;
  *(void *)(v7 + 96) = v4;
  *(void *)(v7 + 104) = v5;
  *(void *)(v7 + 72) = 0xD000000000000014;
  *(void *)(v7 + 80) = 0x80000001C25786A0;
  unint64_t v10 = (void *)sub_1C254F9A0();
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255CD70;
  *(void *)(v11 + 32) = v6;
  *(void *)(v11 + 40) = v10;
  sub_1C254F730();
  id v12 = v6;
  id v13 = v10;
  uint64_t v14 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v14);

  return v15;
}

uint64_t _s14HealthPlatform8FeedItemC0A9RecordsUIE029predicateForUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0N0OSg_AA06SourceP0OtFZ_0(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CDA0;
  sub_1C254D110();
  uint64_t v3 = sub_1C254D0F0();
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v7 = sub_1C220D950();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  *(void *)(v2 + 96) = v6;
  *(void *)(v2 + 104) = v7;
  *(void *)(v2 + 64) = v7;
  *(void *)(v2 + 72) = 0xD00000000000001ALL;
  *(void *)(v2 + 80) = 0x80000001C257B8B0;
  uint64_t result = sub_1C254F9A0();
  uint64_t v9 = (void *)result;
  if (v1 != 11)
  {
    sub_1C25503A0();
    swift_bridgeObjectRelease();
    strcpy((char *)v21, "[UDCCategory:");
    HIWORD(v21[1]) = -4864;
    sub_1C2550810();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    uint64_t v11 = v21[0];
    uint64_t v10 = v21[1];
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C255CDA0;
    uint64_t v13 = sub_1C254D0F0();
    *(void *)(v12 + 56) = v6;
    *(void *)(v12 + 64) = v7;
    *(void *)(v12 + 32) = v13;
    *(void *)(v12 + 40) = v14;
    *(void *)(v12 + 96) = v6;
    *(void *)(v12 + 104) = v7;
    *(void *)(v12 + 72) = v11;
    *(void *)(v12 + 80) = v10;
    swift_bridgeObjectRetain();
    id v15 = (void *)sub_1C254F9A0();
    swift_bridgeObjectRelease();
    sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C255CD70;
    *(void *)(v16 + 32) = v9;
    *(void *)(v16 + 40) = v15;
    sub_1C254F730();
    id v17 = v9;
    id v18 = v15;
    uint64_t v19 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v19);

    return (uint64_t)v20;
  }
  return result;
}

id _s14HealthPlatform8FeedItemC0A9RecordsUIE022predicateForNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0L0OSg_AA06SourceN0OtFZ_0(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CDA0;
  sub_1C254D110();
  uint64_t v3 = sub_1C254D0F0();
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v7 = sub_1C220D950();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  *(void *)(v2 + 96) = v6;
  *(void *)(v2 + 104) = v7;
  *(void *)(v2 + 64) = v7;
  *(void *)(v2 + 72) = 0xD000000000000021;
  *(void *)(v2 + 80) = 0x80000001C257A660;
  uint64_t v8 = (void *)sub_1C254F9A0();
  uint64_t v9 = 0;
  if (v1 != 11)
  {
    sub_1C25503A0();
    swift_bridgeObjectRelease();
    sub_1C2550810();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C255CDA0;
    uint64_t v11 = sub_1C254D0F0();
    *(void *)(v10 + 56) = v6;
    *(void *)(v10 + 64) = v7;
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v12;
    *(void *)(v10 + 96) = v6;
    *(void *)(v10 + 104) = v7;
    *(void *)(v10 + 72) = 0xD000000000000014;
    *(void *)(v10 + 80) = 0x80000001C257A6B0;
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_1C254F9A0();
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = MEMORY[0x1E4FBC860];
  id v13 = v9;
  id v14 = v8;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  if (v9)
  {
    id v15 = v13;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }

  uint64_t v16 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v16);

  return v17;
}

id _s14HealthPlatform8FeedItemC0A9RecordsUIE037predicateForRemovedCategoryNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD07DisplayJ0V0N0OSg_AA06SourceP0OtFZ_0(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CDA0;
  sub_1C254D110();
  uint64_t v3 = sub_1C254D0F0();
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v7 = sub_1C220D950();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  *(void *)(v2 + 96) = v6;
  *(void *)(v2 + 104) = v7;
  *(void *)(v2 + 64) = v7;
  *(void *)(v2 + 72) = 0xD000000000000030;
  *(void *)(v2 + 80) = 0x80000001C257B8D0;
  uint64_t v8 = (void *)sub_1C254F9A0();
  uint64_t v9 = 0;
  if (v1 != 11)
  {
    sub_1C25503A0();
    swift_bridgeObjectRelease();
    sub_1C2550810();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C255CDA0;
    uint64_t v11 = sub_1C254D0F0();
    *(void *)(v10 + 56) = v6;
    *(void *)(v10 + 64) = v7;
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v12;
    *(void *)(v10 + 96) = v6;
    *(void *)(v10 + 104) = v7;
    *(void *)(v10 + 72) = 0xD00000000000001BLL;
    *(void *)(v10 + 80) = 0x80000001C257B910;
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_1C254F9A0();
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = MEMORY[0x1E4FBC860];
  id v13 = v9;
  id v14 = v8;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  if (v9)
  {
    id v15 = v13;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }

  uint64_t v16 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v16);

  return v17;
}

uint64_t _s14HealthPlatform8FeedItemC0A9RecordsUIE046predicateForUserDomainConceptEducationAbstractC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0P0OSg_AA06SourceR0OtFZ_0(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CDA0;
  sub_1C254D110();
  uint64_t v3 = sub_1C254D0F0();
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v7 = sub_1C220D950();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  *(void *)(v2 + 96) = v6;
  *(void *)(v2 + 104) = v7;
  *(void *)(v2 + 64) = v7;
  *(void *)(v2 + 72) = 0xD00000000000002BLL;
  *(void *)(v2 + 80) = 0x80000001C257B880;
  uint64_t result = sub_1C254F9A0();
  uint64_t v9 = (void *)result;
  if (v1 != 11)
  {
    sub_1C25503A0();
    swift_bridgeObjectRelease();
    strcpy((char *)v21, "[UDCCategory:");
    HIWORD(v21[1]) = -4864;
    sub_1C2550810();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    uint64_t v11 = v21[0];
    uint64_t v10 = v21[1];
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C255CDA0;
    uint64_t v13 = sub_1C254D0F0();
    *(void *)(v12 + 56) = v6;
    *(void *)(v12 + 64) = v7;
    *(void *)(v12 + 32) = v13;
    *(void *)(v12 + 40) = v14;
    *(void *)(v12 + 96) = v6;
    *(void *)(v12 + 104) = v7;
    *(void *)(v12 + 72) = v11;
    *(void *)(v12 + 80) = v10;
    swift_bridgeObjectRetain();
    id v15 = (void *)sub_1C254F9A0();
    swift_bridgeObjectRelease();
    sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C255CD70;
    *(void *)(v16 + 32) = v9;
    *(void *)(v16 + 40) = v15;
    sub_1C254F730();
    id v17 = v9;
    id v18 = v15;
    uint64_t v19 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v19);

    return (uint64_t)v20;
  }
  return result;
}

id _s14HealthPlatform8FeedItemC0A9RecordsUIE015predicateForTipC5Items4uuid12categoryKind13sourceProfileSo11NSPredicateC10Foundation4UUIDVSg_AD15DisplayCategoryV0M0OSgAA06SourceO0OtFZ_0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v50 = a1;
  sub_1C22F10A8(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v47 - v7;
  uint64_t v9 = sub_1C254CB40();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v51 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = *a2;
  v54[0] = 0;
  v54[1] = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v49 = v12;
  uint64_t v13 = swift_allocObject();
  long long v48 = xmmword_1C255CDA0;
  *(_OWORD *)(v13 + 16) = xmmword_1C255CDA0;
  v47[1] = sub_1C254D110();
  uint64_t v14 = sub_1C254D0F0();
  uint64_t v16 = v15;
  uint64_t v17 = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v18 = sub_1C220D950();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  *(void *)(v13 + 96) = v17;
  *(void *)(v13 + 104) = v18;
  *(void *)(v13 + 64) = v18;
  *(void *)(v13 + 72) = 0xD00000000000001ALL;
  *(void *)(v13 + 80) = 0x80000001C257B960;
  uint64_t v19 = (void *)sub_1C254F9A0();
  sub_1C21F4914(v50, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C22F110C((uint64_t)v8, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  }
  else
  {
    id v20 = v51;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v5, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    uint64_t v21 = _s15HealthRecordsUI42UserDomainConceptFeedItemIdentifierFactoryV13makeComponent9conceptIdSSSg10Foundation4UUIDVSg_tFZ_0((uint64_t)v5);
    uint64_t v23 = v22;
    sub_1C22F110C((uint64_t)v5, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
    if (v23)
    {
      uint64_t v24 = v19;
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = v48;
      uint64_t v26 = sub_1C254D0F0();
      uint64_t v27 = MEMORY[0x1E4FBB1A0];
      *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v25 + 64) = v18;
      *(void *)(v25 + 32) = v26;
      *(void *)(v25 + 40) = v28;
      *(void *)(v25 + 96) = v27;
      *(void *)(v25 + 104) = v18;
      *(void *)(v25 + 72) = v21;
      *(void *)(v25 + 80) = v23;
      swift_bridgeObjectRetain();
      uint64_t v19 = v24;
      uint64_t v29 = (void *)sub_1C254F9A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v51, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v51, v9);
  }
  uint64_t v29 = 0;
LABEL_7:
  uint64_t v30 = v52;
  if (v52 == 11)
  {
    id v31 = 0;
  }
  else
  {
    v54[0] = 0;
    v54[1] = 0xE000000000000000;
    sub_1C25503A0();
    swift_bridgeObjectRelease();
    strcpy((char *)v54, "[UDCCategory:");
    HIWORD(v54[1]) = -4864;
    uint64_t v53 = v30;
    sub_1C2550810();
    id v32 = v19;
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    uint64_t v34 = v54[0];
    uint64_t v33 = v54[1];
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v48;
    uint64_t v36 = sub_1C254D0F0();
    uint64_t v37 = MEMORY[0x1E4FBB1A0];
    *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v35 + 64) = v18;
    *(void *)(v35 + 32) = v36;
    *(void *)(v35 + 40) = v38;
    *(void *)(v35 + 96) = v37;
    *(void *)(v35 + 104) = v18;
    *(void *)(v35 + 72) = v34;
    *(void *)(v35 + 80) = v33;
    swift_bridgeObjectRetain();
    id v31 = (void *)sub_1C254F9A0();
    uint64_t v19 = v32;
    swift_bridgeObjectRelease();
  }
  v54[0] = MEMORY[0x1E4FBC860];
  id v39 = v31;
  id v40 = v19;
  id v41 = v29;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  if (v29)
  {
    id v42 = v41;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  if (v31)
  {
    id v43 = v39;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }

  uint64_t v44 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v45 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v44);

  return v45;
}

uint64_t _s14HealthPlatform8FeedItemC0A9RecordsUIE035predicateForPinnedUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0O0OSg_AA06SourceQ0OtFZ_0()
{
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "[UDCListType:");
  HIWORD(v10[1]) = -4864;
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v1 = v10[0];
  uint64_t v0 = v10[1];
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CDA0;
  sub_1C254D110();
  uint64_t v3 = sub_1C254D0F0();
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v7 = sub_1C220D950();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  *(void *)(v2 + 96) = v6;
  *(void *)(v2 + 104) = v7;
  *(void *)(v2 + 64) = v7;
  *(void *)(v2 + 72) = v1;
  *(void *)(v2 + 80) = v0;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C254F9A0();
  swift_bridgeObjectRelease();
  return v8;
}

id sub_1C22F0590(unsigned __int8 *a1)
{
  uint64_t v1 = *a1;
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CDA0;
  sub_1C254D110();
  uint64_t v3 = sub_1C254D0F0();
  uint64_t v5 = v4;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v7 = sub_1C220D950();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  *(void *)(v2 + 96) = v6;
  *(void *)(v2 + 104) = v7;
  *(void *)(v2 + 64) = v7;
  *(void *)(v2 + 72) = 0xD000000000000021;
  *(void *)(v2 + 80) = 0x80000001C257B930;
  uint64_t v8 = (void *)sub_1C254F9A0();
  uint64_t v9 = 0;
  if (v1 != 11)
  {
    sub_1C25503A0();
    swift_bridgeObjectRelease();
    strcpy((char *)v21, "[UDCCategory:");
    HIWORD(v21[1]) = -4864;
    sub_1C2550810();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    uint64_t v10 = v21[0];
    uint64_t v11 = v21[1];
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C255CDA0;
    uint64_t v13 = sub_1C254D0F0();
    *(void *)(v12 + 56) = v6;
    *(void *)(v12 + 64) = v7;
    *(void *)(v12 + 32) = v13;
    *(void *)(v12 + 40) = v14;
    *(void *)(v12 + 96) = v6;
    *(void *)(v12 + 104) = v7;
    *(void *)(v12 + 72) = v10;
    *(void *)(v12 + 80) = v11;
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_1C254F9A0();
    swift_bridgeObjectRelease();
  }
  v21[0] = MEMORY[0x1E4FBC860];
  id v15 = v9;
  id v16 = v8;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v21[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  if (v9)
  {
    id v17 = v15;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v21[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }

  unint64_t v18 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v18);

  return v19;
}

uint64_t _s14HealthPlatform8FeedItemC0A9RecordsUIE012predicateForaE10Onboarding9profileId12categoryKindSo11NSPredicateCSo19HKProfileIdentifierC_AD15DisplayCategoryV0M0OSgtFZ_0(void *a1, unsigned char *a2)
{
  if (*a2 == 2) {
    uint64_t v2 = sub_1C23E8940(a1);
  }
  else {
    uint64_t v2 = _s15HealthRecordsUI35AddAccountFeedItemIdentifierFactoryV011makeGeneralab10OnboardingH03forSSSo09HKProfileH0CSg_tFZ_0(a1);
  }
  uint64_t v4 = v2;
  uint64_t v5 = v3;
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255CDA0;
  sub_1C254D110();
  uint64_t v7 = sub_1C254D0F0();
  uint64_t v9 = v8;
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v11 = sub_1C220D950();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  *(void *)(v6 + 96) = v10;
  *(void *)(v6 + 104) = v11;
  *(void *)(v6 + 64) = v11;
  *(void *)(v6 + 72) = v4;
  *(void *)(v6 + 80) = v5;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C254F9A0();
  swift_bridgeObjectRelease();
  return v12;
}

id _s14HealthPlatform8FeedItemC0A9RecordsUIE028predicateForConceptHighlightC5Items4uuid12categoryKind13sourceProfileSo11NSPredicateC10Foundation4UUIDVSg_AD15DisplayCategoryV0N0OSgAA06SourceP0OtFZ_0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v50 = a1;
  sub_1C22F10A8(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v47 - v7;
  uint64_t v9 = sub_1C254CB40();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v51 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = *a2;
  v54[0] = 0;
  v54[1] = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  sub_1C22EEE20();
  sub_1C22F10A8(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v49 = v12;
  uint64_t v13 = swift_allocObject();
  long long v48 = xmmword_1C255CDA0;
  *(_OWORD *)(v13 + 16) = xmmword_1C255CDA0;
  v47[1] = sub_1C254D110();
  uint64_t v14 = sub_1C254D0F0();
  uint64_t v16 = v15;
  uint64_t v17 = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v18 = sub_1C220D950();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  *(void *)(v13 + 96) = v17;
  *(void *)(v13 + 104) = v18;
  *(void *)(v13 + 64) = v18;
  *(void *)(v13 + 72) = 0xD000000000000020;
  *(void *)(v13 + 80) = 0x80000001C257B850;
  id v19 = (void *)sub_1C254F9A0();
  sub_1C21F4914(v50, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C22F110C((uint64_t)v8, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  }
  else
  {
    id v20 = v51;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v5, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    uint64_t v21 = _s15HealthRecordsUI42UserDomainConceptFeedItemIdentifierFactoryV13makeComponent9conceptIdSSSg10Foundation4UUIDVSg_tFZ_0((uint64_t)v5);
    uint64_t v23 = v22;
    sub_1C22F110C((uint64_t)v5, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
    if (v23)
    {
      uint64_t v24 = v19;
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = v48;
      uint64_t v26 = sub_1C254D0F0();
      uint64_t v27 = MEMORY[0x1E4FBB1A0];
      *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v25 + 64) = v18;
      *(void *)(v25 + 32) = v26;
      *(void *)(v25 + 40) = v28;
      *(void *)(v25 + 96) = v27;
      *(void *)(v25 + 104) = v18;
      *(void *)(v25 + 72) = v21;
      *(void *)(v25 + 80) = v23;
      swift_bridgeObjectRetain();
      id v19 = v24;
      uint64_t v29 = (void *)sub_1C254F9A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v51, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v51, v9);
  }
  uint64_t v29 = 0;
LABEL_7:
  uint64_t v30 = v52;
  if (v52 == 11)
  {
    id v31 = 0;
  }
  else
  {
    v54[0] = 0;
    v54[1] = 0xE000000000000000;
    sub_1C25503A0();
    swift_bridgeObjectRelease();
    strcpy((char *)v54, "[UDCCategory:");
    HIWORD(v54[1]) = -4864;
    uint64_t v53 = v30;
    sub_1C2550810();
    id v32 = v19;
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    uint64_t v34 = v54[0];
    uint64_t v33 = v54[1];
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v48;
    uint64_t v36 = sub_1C254D0F0();
    uint64_t v37 = MEMORY[0x1E4FBB1A0];
    *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v35 + 64) = v18;
    *(void *)(v35 + 32) = v36;
    *(void *)(v35 + 40) = v38;
    *(void *)(v35 + 96) = v37;
    *(void *)(v35 + 104) = v18;
    *(void *)(v35 + 72) = v34;
    *(void *)(v35 + 80) = v33;
    swift_bridgeObjectRetain();
    id v31 = (void *)sub_1C254F9A0();
    id v19 = v32;
    swift_bridgeObjectRelease();
  }
  v54[0] = MEMORY[0x1E4FBC860];
  id v39 = v31;
  id v40 = v19;
  id v41 = v29;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  if (v29)
  {
    id v42 = v41;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  if (v31)
  {
    id v43 = v39;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }

  uint64_t v44 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v45 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v44);

  return v45;
}

void sub_1C22F10A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C22F110C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C22F10A8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

NSDateFormatter __swiftcall NSDateFormatter.init(dateStyle:timeStyle:)(NSDateFormatterStyle dateStyle, NSDateFormatterStyle timeStyle)
{
  id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v4, sel_setDateStyle_, dateStyle);
  objc_msgSend(v4, sel_setTimeStyle_, timeStyle);

  unint64_t v8 = (objc_class *)v4;
  result._counter = v7;
  result._formatter = v6;
  result._attributes = v5;
  result.super.super.Class isa = v8;
  return result;
}

void sub_1C22F11F4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 1);
  objc_msgSend(v0, sel_setTimeStyle_, 0);

  qword_1EA2E09E8 = (uint64_t)v0;
}

id static NSDateFormatter.shortDate.getter()
{
  if (qword_1EA2DD5A8 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_1EA2E09E8;
  return v0;
}

id sub_1C22F12BC(uint64_t a1)
{
  return sub_1C22F1CD4(18.0, a1, MEMORY[0x1E4FB09B8], &qword_1EA2E09F0);
}

unint64_t sub_1C22F12D4(uint64_t a1)
{
  return sub_1C22F1BC4(a1, &qword_1EA2DD5B0, (void **)&qword_1EA2E09F0, (unint64_t *)&qword_1EA303A00);
}

unint64_t sub_1C22F1300()
{
  sub_1C22F224C(0, (unint64_t *)&qword_1EA2E4460, (unint64_t *)&qword_1EA2DE0A0, type metadata accessor for Key);
  uint64_t inited = swift_initStackObject();
  uint64_t v1 = (void **)MEMORY[0x1E4FB06F8];
  *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
  uint64_t v2 = *v1;
  *(void *)(inited + 32) = *v1;
  uint64_t v3 = self;
  double v4 = *MEMORY[0x1E4FB09E0];
  id v5 = v2;
  id v6 = objc_msgSend(v3, sel_systemFontOfSize_weight_, 14.0, v4);
  *(void *)(inited + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  *(void *)(inited + 40) = v6;
  unint64_t result = sub_1C2203C38(inited);
  qword_1EA303A08 = result;
  return result;
}

id sub_1C22F1408(uint64_t a1)
{
  return sub_1C22F1CD4(10.0, a1, MEMORY[0x1E4FB09D8], &qword_1EA2E09F8);
}

unint64_t sub_1C22F1420(uint64_t a1)
{
  return sub_1C22F1BC4(a1, &qword_1EA2DD5C8, (void **)&qword_1EA2E09F8, (unint64_t *)&qword_1EA303A10);
}

unint64_t sub_1C22F144C()
{
  sub_1C22F224C(0, (unint64_t *)&qword_1EA2E4460, (unint64_t *)&qword_1EA2DE0A0, type metadata accessor for Key);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
  uint64_t v1 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v2 = qword_1EA2DD5C8;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  double v4 = (void *)qword_1EA2E09F8;
  uint64_t v5 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  *(void *)(inited + 40) = v4;
  id v6 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = v6;
  NSUInteger v7 = self;
  id v8 = v4;
  id v9 = v6;
  id v10 = objc_msgSend(v7, sel_defaultParagraphStyle);
  id v11 = (id)qword_1EA2E09F8;
  objc_msgSend(v11, sel_lineHeight);
  double v13 = v12;

  id v14 = sub_1C22F15E8(v13 + 3.0);
  *(void *)(inited + 104) = sub_1C21AB51C(0, &qword_1EA2E0A48);
  *(void *)(inited + 80) = v14;
  unint64_t result = sub_1C2203C38(inited);
  qword_1EA303A18 = result;
  return result;
}

id sub_1C22F15E8(double a1)
{
  objc_msgSend(v1, sel_mutableCopy);
  sub_1C25501E0();
  swift_unknownObjectRelease();
  sub_1C21AB51C(0, &qword_1EA2E0A50);
  swift_dynamicCast();
  objc_msgSend(v4, sel_setMinimumLineHeight_, a1);
  objc_msgSend(v4, sel_setMaximumLineHeight_, a1);
  objc_msgSend(v4, sel_copy);
  sub_1C25501E0();

  swift_unknownObjectRelease();
  sub_1C21AB51C(0, &qword_1EA2E0A48);
  swift_dynamicCast();
  return v4;
}

void sub_1C22F1708(uint64_t a1)
{
}

uint64_t sub_1C22F1734(void *a1, uint64_t a2)
{
  id v4 = (void *)*MEMORY[0x1E4FB0700];
  uint64_t v11 = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
  *(void *)&long long v10 = a1;
  sub_1C2206B9C(&v10, v9);
  swift_bridgeObjectRetain();
  id v5 = v4;
  id v6 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1C2365BB4(v9, v5, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  return a2;
}

id sub_1C22F17E8(uint64_t a1)
{
  return sub_1C22F1CD4(10.0, a1, MEMORY[0x1E4FB09E0], &qword_1EA2E0A00);
}

unint64_t sub_1C22F1800(uint64_t a1)
{
  return sub_1C22F1BC4(a1, &qword_1EA2DD5E8, (void **)&qword_1EA2E0A00, (unint64_t *)&qword_1EA303A28);
}

uint64_t sub_1C22F182C(uint64_t a1)
{
  return sub_1C22F1B18(a1, &qword_1EA2DD5F0, (uint64_t)&qword_1EA303A28, (unint64_t *)&qword_1EA303A30);
}

unint64_t sub_1C22F1858(unint64_t result)
{
  if (*(void *)(result + 16))
  {
    unint64_t v1 = result;
    uint64_t v2 = (void *)*MEMORY[0x1E4FB06F8];
    swift_bridgeObjectRetain();
    id v3 = v2;
    unint64_t result = sub_1C24572A8((uint64_t)v3);
    if (v4)
    {
      sub_1C21A9A38(*(void *)(v1 + 56) + 32 * result, (uint64_t)v9);
      sub_1C2206B9C(v9, &v10);
      uint64_t v5 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
      swift_dynamicCast();
      id v6 = sub_1C22F1F64();

      uint64_t v11 = v5;
      *(void *)&long long v10 = v6;
      sub_1C2206B9C(&v10, v9);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1C2365BB4(v9, v3, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
      return v1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1C22F1974(uint64_t a1)
{
}

void sub_1C22F19A0(uint64_t a1, void *a2, uint64_t *a3, uint64_t *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v6 = *a3;
  NSUInteger v7 = self;
  swift_bridgeObjectRetain();
  id v8 = objc_msgSend(v7, sel_systemGrayColor);
  uint64_t v9 = sub_1C22F1734(v8, v6);
  swift_bridgeObjectRelease();

  *a4 = v9;
}

void sub_1C22F1A3C()
{
  if (qword_1EA2DD5F0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EA303A28;
  unint64_t v1 = self;
  swift_bridgeObjectRetain();
  id v2 = objc_msgSend(v1, sel_systemRedColor);
  uint64_t v3 = sub_1C22F1734(v2, v0);
  swift_bridgeObjectRelease();

  qword_1EA303A40 = v3;
}

uint64_t sub_1C22F1AEC(uint64_t a1)
{
  return sub_1C22F1B18(a1, &qword_1EA2DD608, (uint64_t)&qword_1EA303A40, (unint64_t *)&qword_1EA303A48);
}

uint64_t sub_1C22F1B18(uint64_t a1, void *a2, uint64_t a3, unint64_t *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C22F1858(v5);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v6;
  return result;
}

id sub_1C22F1B80(uint64_t a1)
{
  return sub_1C22F1CD4(10.0, a1, MEMORY[0x1E4FB09E0], &qword_1EA2E0A08);
}

unint64_t sub_1C22F1B98(uint64_t a1)
{
  return sub_1C22F1BC4(a1, &qword_1EA2DD618, (void **)&qword_1EA2E0A08, (unint64_t *)&qword_1EA303A50);
}

unint64_t sub_1C22F1BC4(uint64_t a1, uint64_t *a2, void **a3, unint64_t *a4)
{
  sub_1C22F224C(0, (unint64_t *)&qword_1EA2E4460, (unint64_t *)&qword_1EA2DE0A0, type metadata accessor for Key);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
  id v8 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v9 = *a2;
  id v10 = v8;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = *a3;
  *(void *)(inited + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  *(void *)(inited + 40) = v11;
  id v12 = v11;
  unint64_t result = sub_1C2203C38(inited);
  *a4 = result;
  return result;
}

id sub_1C22F1CBC(uint64_t a1)
{
  return sub_1C22F1CD4(8.0, a1, MEMORY[0x1E4FB09D8], &qword_1EA2E0A10);
}

id sub_1C22F1CD4(double a1, uint64_t a2, double *a3, void *a4)
{
  id result = objc_msgSend(self, sel_systemFontOfSize_weight_, a1, *a3);
  *a4 = result;
  return result;
}

unint64_t sub_1C22F1D30()
{
  sub_1C22F224C(0, (unint64_t *)&qword_1EA2E4460, (unint64_t *)&qword_1EA2DE0A0, type metadata accessor for Key);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
  unint64_t v1 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v2 = qword_1EA2DD628;
  id v3 = v1;
  if (v2 != -1) {
    swift_once();
  }
  char v4 = (void *)qword_1EA2E0A10;
  uint64_t v5 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  *(void *)(inited + 40) = v4;
  unint64_t v6 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = v6;
  NSUInteger v7 = self;
  id v8 = v4;
  id v9 = v6;
  id v10 = objc_msgSend(v7, sel_systemGrayColor);
  *(void *)(inited + 104) = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
  *(void *)(inited + 80) = v10;
  unint64_t result = sub_1C2203C38(inited);
  qword_1EA303A58 = result;
  return result;
}

double sub_1C22F1E90()
{
  if (qword_1EA2DD618 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EA2E0A08;
  objc_msgSend(v0, sel_ascender);
  double v2 = v1;

  if (qword_1EA2DD628 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EA2E0A10;
  objc_msgSend(v3, sel_ascender);
  double v5 = v4;

  double result = v2 - v5;
  *(double *)&qword_1EA303A60 = v2 - v5;
  return result;
}

id sub_1C22F1F64()
{
  id v1 = objc_msgSend(v0, sel_fontDescriptor);
  sub_1C22F224C(0, &qword_1EA2E0A18, &qword_1EA2DE4D8, type metadata accessor for AttributeName);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
  id v3 = (void *)*MEMORY[0x1E4FB0910];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB0910];
  sub_1C22F22A8(0, &qword_1EA2E0A20, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255CDA0;
  sub_1C22F224C(0, &qword_1EA2E0A30, &qword_1EA2E0A38, type metadata accessor for FeatureKey);
  uint64_t v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C255CDA0;
  unint64_t v6 = (void *)*MEMORY[0x1E4FB28A0];
  *(void *)(v5 + 32) = *MEMORY[0x1E4FB28A0];
  *(void *)(v5 + 40) = 38;
  NSUInteger v7 = (void *)*MEMORY[0x1E4FB2890];
  *(void *)(v5 + 48) = *MEMORY[0x1E4FB2890];
  *(void *)(v5 + 56) = 1;
  id v8 = v3;
  id v9 = v6;
  id v10 = v7;
  *(void *)(v4 + 32) = sub_1C2204E2C(v5);
  uint64_t v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255CDA0;
  *(void *)(v11 + 32) = v9;
  *(void *)(v11 + 40) = 37;
  *(void *)(v11 + 48) = v10;
  *(void *)(v11 + 56) = 1;
  id v12 = v9;
  id v13 = v10;
  *(void *)(v4 + 40) = sub_1C2204E2C(v11);
  sub_1C22F22A8(0, &qword_1EA2E0A40, MEMORY[0x1E4FBB320]);
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 40) = v4;
  sub_1C2204F28(inited);
  type metadata accessor for AttributeName(0);
  sub_1C22F2410(&qword_1EA2DDF28, type metadata accessor for AttributeName);
  uint64_t v15 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v1, sel_fontDescriptorByAddingAttributes_, v15);

  objc_msgSend(v20, sel_pointSize);
  id v18 = objc_msgSend(self, sel_fontWithDescriptor_size_, v16, v17);

  return v18;
}

void sub_1C22F224C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C22F23A4(255, a3, a4);
    unint64_t v5 = sub_1C2550820();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C22F22A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C22F2308();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C22F2308()
{
  if (!qword_1EA2E0A28)
  {
    type metadata accessor for FeatureKey(255);
    sub_1C22F2410(&qword_1EA2DDF18, type metadata accessor for FeatureKey);
    unint64_t v0 = sub_1C254F340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0A28);
    }
  }
}

void sub_1C22F23A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C22F2410(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C22F2458(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 48) = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C22F24B8()
{
  return swift_retain();
}

uint64_t sub_1C22F24F0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_release();
}

uint64_t (*sub_1C22F2538())()
{
  return j__swift_endAccess;
}

void sub_1C22F258C(void **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  uint64_t v4 = *(void **)(v3 + 56);
  *(void *)(v3 + 56) = v2;
  id v5 = v2;
}

void *sub_1C22F25E4()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

void sub_1C22F2628(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 56);
  *(void *)(v1 + 56) = a1;
}

uint64_t (*sub_1C22F2670())()
{
  return j_j__swift_endAccess;
}

void *sub_1C22F26C4(void *a1, uint64_t a2, void *a3)
{
  v3[8] = 0;
  v3[7] = 0;
  swift_unknownObjectWeakInit();
  v3[5] = a1;
  v3[6] = a2;
  swift_beginAccess();
  unint64_t v7 = (void *)v3[7];
  v3[7] = 0;
  swift_retain();
  id v8 = a1;
  swift_retain();

  swift_unknownObjectWeakAssign();
  swift_release();
  id v9 = ConceptsDataSource.init(arrangedSections:isHidden:)(MEMORY[0x1E4FBC860], 0);
  if (a3)
  {
    swift_allocObject();
    swift_weakInit();
    sub_1C22F4128();
    sub_1C22F42A4(&qword_1EA2E0A78, 255, (void (*)(uint64_t))sub_1C22F4128);
    swift_retain();
    uint64_t v10 = sub_1C254ECC0();
    swift_release();
    swift_release();
    swift_release();

    void v9[8] = v10;
  }
  else
  {
  }
  swift_release();
  return v9;
}

uint64_t sub_1C22F2870(void **a1)
{
  uint64_t v2 = sub_1C254F1C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254F200();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    uint64_t v13 = sub_1C254FC70();
    uint64_t v18 = v6;
    uint64_t v14 = (void *)v13;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v10;
    *(void *)(v15 + 24) = v12;
    aBlock[4] = sub_1C22F4238;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_19;
    id v16 = _Block_copy(aBlock);
    id v17 = v10;
    swift_retain();
    swift_release();
    sub_1C254F1E0();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1C22F42A4((unint64_t *)&qword_1EBB6FF10, 255, MEMORY[0x1E4FBCB00]);
    sub_1C22F4240(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C21FFDEC();
    sub_1C2550200();
    MEMORY[0x1C87581B0](0, v9, v5, v16);
    _Block_release(v16);
    swift_release();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  }
  return result;
}

void sub_1C22F2BA0(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    sub_1C244073C(0);
    sub_1C22F2D04(v1);
  }
  else
  {
    sub_1C244073C(1);
  }
}

uint64_t sub_1C22F2C10()
{
  uint64_t v0 = sub_1C254D7E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254D7B0();
  uint64_t v4 = (void *)sub_1C254D710();
  objc_msgSend(v4, sel_setInterGroupSpacing_, 0.0);

  uint64_t v5 = sub_1C254D710();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

void sub_1C22F2D04(void *a1)
{
  swift_beginAccess();
  if (!*(void *)(v1 + 56))
  {
    id v3 = objc_msgSend(*(id *)(v1 + 40), sel_healthStore);
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B08]), sel_initWithHealthStore_, v3);

    id v5 = objc_msgSend(v4, sel_CHRRoomApplicationItems);
    uint64_t v6 = self;
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = a1;
    aBlock[4] = sub_1C22F3AC8;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C22F3AD0;
    aBlock[3] = &block_descriptor_28;
    id v9 = _Block_copy(aBlock);
    id v10 = a1;
    swift_release();
    objc_msgSend(v6, sel_determineChartabilityOfOntologyConcept_withApplicationItems_completion_, v10, v5, v9);
    _Block_release(v9);
  }
}

uint64_t sub_1C22F2EA4()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C22F2EDC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C254CB40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    if (a1)
    {
      uint64_t v74 = v8;
      uint64_t v75 = v6;
      id v11 = a1;
      id v12 = objc_msgSend(a3, sel_localizedPreferredName);
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = sub_1C254F470();
        uint64_t v16 = v15;

        type metadata accessor for MedicalRecordTimelineHeaderItem(0);
        uint64_t v17 = swift_allocObject();
        sub_1C254CB30();
        uint64_t v18 = (uint64_t *)(v17 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_reuseIdentifier);
        type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
        sub_1C22F42A4(&qword_1EA2E0A58, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineHeaderItemCell);
        *uint64_t v18 = sub_1C254D330();
        v18[1] = v19;
        *(void *)(v17 + 16) = v14;
        *(void *)(v17 + 24) = v16;
        *(void *)(v17 + 56) = 0;
        *(unsigned char *)(v17 + 48) = 0;
        *(void *)(v17 + 32) = 0;
        *(void *)(v17 + 40) = 0;
        *(unsigned char *)(v17 + 64) = 2;
        *(void *)(v17 + 72) = 0;
        *(void *)(v17 + 80) = 0xE000000000000000;
        strcpy((char *)(v17 + 88), "ConceptTitle");
        *(unsigned char *)(v17 + 101) = 0;
        *(_WORD *)(v17 + 102) = -5120;
        *(void *)(v17 + 104) = 0;
        *(void *)(v17 + 112) = 0;
      }
      else
      {
        uint64_t v17 = 0;
      }
      sub_1C22F4240(0, &qword_1EA2E0A88, (uint64_t (*)(uint64_t))sub_1C2253E44, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
      *(void *)&long long v76 = inited + 32;
      uint64_t v73 = v5;
      if (v17)
      {
        uint64_t v35 = type metadata accessor for MedicalRecordTimelineHeaderItem(0);
        uint64_t v36 = sub_1C22F42A4(&qword_1EA2E0A80, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineHeaderItem);
      }
      else
      {
        uint64_t v35 = 0;
        uint64_t v36 = 0;
        *(void *)(inited + 40) = 0;
        *(void *)(inited + 48) = 0;
      }
      *(void *)(inited + 32) = v17;
      *(void *)(inited + 56) = v35;
      *(void *)(inited + 64) = v36;
      uint64_t v70 = MEMORY[0x1C875A200](v10 + 72);
      uint64_t v37 = type metadata accessor for MedicalRecordTimelineChartItem();
      uint64_t v77 = v10;
      uint64_t v38 = v37;
      id v39 = (void *)swift_allocObject();
      swift_unknownObjectWeakInit();
      type metadata accessor for MedicalRecordTimelineChartItemCell();
      sub_1C22F42A4(&qword_1EA2E0A60, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartItemCell);
      id v40 = v11;
      id v41 = (void *)inited;
      id v42 = v40;
      uint64_t v72 = v17;
      swift_retain();
      id v43 = a3;
      v39[5] = sub_1C254D330();
      v39[6] = v44;
      v39[2] = v43;
      v39[3] = v42;
      id v71 = v42;
      id v45 = (void *)v70;
      swift_unknownObjectWeakAssign();

      v41[12] = v38;
      uint64_t v46 = sub_1C22F42A4(&qword_1EA2E0A90, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartItem);
      v41[9] = v39;
      v41[13] = v46;
      swift_retain();
      sub_1C254D560();
      swift_release();
      sub_1C22F4240(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
      uint64_t v47 = *(void *)(sub_1C254D9B0() - 8);
      unint64_t v48 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
      v83[0] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1C2227014(v76, (uint64_t)v82);
      sub_1C2262398((uint64_t)v82, (uint64_t)&v78);
      if (v79)
      {
        uint64_t v70 = v48;
        sub_1C21F44EC(&v78, (uint64_t)v81);
        sub_1C21F44EC(v81, (uint64_t)&v78);
        uint64_t v49 = (void *)MEMORY[0x1E4FBC860];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v49 = sub_1C226CD5C(0, v49[2] + 1, 1, v49);
          v83[0] = (uint64_t)v49;
        }
        unint64_t v51 = v49[2];
        unint64_t v50 = v49[3];
        if (v51 >= v50 >> 1) {
          v83[0] = (uint64_t)sub_1C226CD5C((void *)(v50 > 1), v51 + 1, 1, v49);
        }
        uint64_t v52 = v79;
        uint64_t v53 = v80;
        uint64_t v54 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v78, v79);
        __n128 v55 = MEMORY[0x1F4188790](v54);
        id v57 = (char *)&v70 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v58 + 16))(v57, v55);
        sub_1C2507304(v51, (uint64_t)v57, v83, v52, v53);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v78);
      }
      else
      {
        sub_1C2227100((uint64_t)&v78);
      }
      sub_1C2227014((uint64_t)(v41 + 9), (uint64_t)v82);
      sub_1C2262398((uint64_t)v82, (uint64_t)&v78);
      if (v79)
      {
        sub_1C21F44EC(&v78, (uint64_t)v81);
        sub_1C21F44EC(v81, (uint64_t)&v78);
        uint64_t v59 = (void *)v83[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v59 = sub_1C226CD5C(0, v59[2] + 1, 1, v59);
          v83[0] = (uint64_t)v59;
        }
        unint64_t v61 = v59[2];
        unint64_t v60 = v59[3];
        if (v61 >= v60 >> 1) {
          v83[0] = (uint64_t)sub_1C226CD5C((void *)(v60 > 1), v61 + 1, 1, v59);
        }
        uint64_t v62 = v79;
        uint64_t v63 = v80;
        uint64_t v64 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v78, v79);
        __n128 v65 = MEMORY[0x1F4188790](v64);
        uint64_t v67 = (char *)&v70 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v68 + 16))(v67, v65);
        sub_1C2507304(v61, (uint64_t)v67, v83, v62, v63);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v78);
      }
      else
      {
        sub_1C2227100((uint64_t)&v78);
      }
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_1C2253E44();
      swift_arrayDestroy();
      uint64_t v69 = v74;
      sub_1C254CB30();
      sub_1C254CAF0();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v69, v73);
      sub_1C254D990();
      sub_1C254DA10();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v20 = objc_msgSend(a3, sel_localizedPreferredName);
      if (v20)
      {
        uint64_t v21 = v20;
        uint64_t v22 = sub_1C254F470();
        uint64_t v74 = v8;
        uint64_t v75 = v6;
        uint64_t v23 = v22;
        uint64_t v25 = v24;

        uint64_t v26 = type metadata accessor for MedicalRecordTimelineHeaderItem(0);
        uint64_t v27 = swift_allocObject();
        sub_1C254CB30();
        uint64_t v28 = (uint64_t *)(v27 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_reuseIdentifier);
        type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
        sub_1C22F42A4(&qword_1EA2E0A58, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineHeaderItemCell);
        *uint64_t v28 = sub_1C254D330();
        v28[1] = v29;
        *(void *)(v27 + 16) = v23;
        *(void *)(v27 + 24) = v25;
        *(void *)(v27 + 56) = 0;
        *(unsigned char *)(v27 + 48) = 0;
        *(void *)(v27 + 32) = 0;
        *(void *)(v27 + 40) = 0;
        *(unsigned char *)(v27 + 64) = 3;
        *(void *)(v27 + 72) = 0;
        *(void *)(v27 + 80) = 0xE000000000000000;
        strcpy((char *)(v27 + 88), "ConceptTitle");
        *(unsigned char *)(v27 + 101) = 0;
        *(_WORD *)(v27 + 102) = -5120;
        *(void *)(v27 + 104) = 0;
        *(void *)(v27 + 112) = 0;
        swift_retain();
        swift_retain();
        uint64_t v77 = sub_1C254D560();
        swift_release();
        uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1C22F4240(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
        sub_1C254D9B0();
        uint64_t v31 = swift_allocObject();
        long long v76 = xmmword_1C255CD90;
        *(_OWORD *)(v31 + 16) = xmmword_1C255CD90;
        sub_1C22F4240(0, &qword_1EA2DF5D0, (uint64_t (*)(uint64_t))sub_1C22270A8, v30);
        uint64_t v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = v76;
        *(void *)(v32 + 56) = v26;
        *(void *)(v32 + 64) = sub_1C22F42A4(&qword_1EA2E0A80, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineHeaderItem);
        *(void *)(v32 + 32) = v27;
        swift_retain();
        uint64_t v33 = v74;
        sub_1C254CB30();
        sub_1C254CAF0();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v33, v5);
        sub_1C254D990();
        sub_1C254DA10();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain();
        sub_1C254D560();
        swift_release();
        sub_1C254DA10();
      }
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C22F3A88()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C22F3AC8(void *a1)
{
  return sub_1C22F2EDC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1C22F3AD0(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

void MedicalRecordTimelineChartDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void MedicalRecordTimelineChartDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C22F3BA4()
{
  swift_release();
  swift_release();
  return swift_unknownObjectWeakDestroy();
}

uint64_t MedicalRecordTimelineChartDataSource.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t MedicalRecordTimelineChartDataSource.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1C22F3CA4()
{
  return sub_1C254E160();
}

Swift::Void __swiftcall MedicalRecordTimelineChartDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C22F3DE0(uint64_t a1, uint64_t a2)
{
  return sub_1C22F42A4(&qword_1EA2E0A68, a2, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartDataSource);
}

uint64_t type metadata accessor for MedicalRecordTimelineChartDataSource()
{
  return self;
}

uint64_t sub_1C22F3E4C()
{
  return sub_1C254FAD0();
}

uint64_t sub_1C22F3F2C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_retain();
}

id sub_1C22F3F7C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  id v4 = *(void **)(v3 + 56);
  *a2 = v4;
  return v4;
}

uint64_t method lookup function for MedicalRecordTimelineChartDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineChartDataSource);
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.ontologyConcept.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.ontologyConcept.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.ontologyConcept.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.chartViewController.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.chartViewController.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.chartViewController.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartDataSource.reloadSection(ontologyConcept:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t sub_1C22F4120(void **a1)
{
  return sub_1C22F2870(a1);
}

void sub_1C22F4128()
{
  if (!qword_1EA2E0A70)
  {
    sub_1C22F4190();
    unint64_t v0 = sub_1C254EA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0A70);
    }
  }
}

void sub_1C22F4190()
{
  if (!qword_1EA2DE398)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EA2DE378);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE398);
    }
  }
}

uint64_t sub_1C22F41F8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C22F4238()
{
  sub_1C22F2BA0(*(void **)(v0 + 16));
}

void sub_1C22F4240(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C22F42A4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id HKMedicalRecordCategoryType.categoryColors()(id a1)
{
  id v2 = objc_msgSend(self, sel_allSupportedRecordCategories);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1C22F4458();
    unint64_t v4 = sub_1C254F710();

    if (v4 >> 62) {
      goto LABEL_16;
    }
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v5; uint64_t v5 = sub_1C2550620())
    {
      uint64_t v6 = 4;
      while (1)
      {
        id v7 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87588E0](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
        unint64_t v8 = v7;
        uint64_t v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        if (objc_msgSend(v7, sel_categoryType) == a1)
        {
          swift_bridgeObjectRelease_n();
          id v10 = objc_msgSend(v8, sel_categoryMetricColors);

          return v10;
        }

        ++v6;
        if (v9 == v5) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

unint64_t sub_1C22F4458()
{
  unint64_t result = qword_1EBB6FFC0;
  if (!qword_1EBB6FFC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB6FFC0);
  }
  return result;
}

void __swiftcall HKMedicalRecordCategoryType.medicalRecordCategory()(WDMedicalRecordCategory_optional *__return_ptr retstr)
{
  id v2 = v1;
  id v3 = objc_msgSend(self, sel_allSupportedRecordCategories);
  if (v3)
  {
    unint64_t v4 = v3;
    sub_1C22F4458();
    unint64_t v5 = sub_1C254F710();

    if (v5 >> 62) {
      goto LABEL_15;
    }
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v6; uint64_t v6 = sub_1C2550620())
    {
      uint64_t v7 = 4;
      while (1)
      {
        id v8 = (v5 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87588E0](v7 - 4, v5) : *(id *)(v5 + 8 * v7);
        uint64_t v9 = v8;
        uint64_t v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1)) {
          break;
        }
        if (objc_msgSend(v8, sel_categoryType) == v2)
        {
          swift_bridgeObjectRelease_n();
          return;
        }

        ++v7;
        if (v10 == v6) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
  }
}

void sub_1C22F45DC()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_collectionView);
  if (!v2)
  {
    __break(1u);
    goto LABEL_17;
  }
  id v3 = v2;
  sub_1C254FB00();

  sub_1C21F3F98();
  id v4 = objc_msgSend(v1, sel_collectionView);
  if (!v4)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4;
  sub_1C254DCB0();
  swift_release();

  id v6 = objc_msgSend(v1, sel_collectionView);
  if (!v6)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v7 = v6;
  sub_1C254DFE0();
  sub_1C254FAF0();

  id v8 = objc_msgSend(v1, sel_collectionView);
  if (!v8)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = v8;
  sub_1C254DEE0();
  sub_1C254FAF0();

  id v10 = objc_msgSend(v1, sel_collectionView);
  if (!v10)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v11 = v10;
  sub_1C254E020();
  sub_1C254FAF0();

  id v12 = objc_msgSend(v1, sel_collectionView);
  if (!v12)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v13 = v12;
  sub_1C254DF60();
  sub_1C254FAF0();

  id v14 = objc_msgSend(v1, sel_collectionView);
  if (!v14)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v15 = v14;
  sub_1C254D550();
  sub_1C254FAD0();

  id v16 = objc_msgSend(v1, sel_collectionView);
  if (!v16)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v17 = v16;
  sub_1C254DD30();
  sub_1C254FAD0();

  id v18 = objc_msgSend(v1, sel_collectionView);
  if (!v18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v19 = v18;
  sub_1C254DF00();
  sub_1C254FAD0();

  id v20 = objc_msgSend(v1, sel_collectionView);
  if (!v20)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v21 = v20;
  sub_1C254E120();
  sub_1C254FAD0();

  id v22 = objc_msgSend(v1, sel_collectionView);
  if (!v22)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v23 = v22;
  sub_1C254DE80();
  sub_1C254FAD0();

  id v24 = objc_msgSend(v1, sel_collectionView);
  if (!v24)
  {
LABEL_27:
    __break(1u);
    return;
  }
  id v25 = v24;
  sub_1C254FAE0();
}

Swift::Int __swiftcall MedicalRecordTimelineViewController.numberOfSections(in:)(UICollectionView *in)
{
  sub_1C21F3F98();
  sub_1C254DCE0();
  Swift::Int v1 = sub_1C254D6A0();
  swift_release();
  return v1;
}

Swift::Int __swiftcall MedicalRecordTimelineViewController.collectionView(_:numberOfItemsInSection:)(UICollectionView *_, Swift::Int numberOfItemsInSection)
{
  sub_1C21F3F98();
  sub_1C254DCE0();
  Swift::Int v2 = sub_1C254D680();
  swift_release();
  return v2;
}

id MedicalRecordTimelineViewController.collectionView(_:cellForItemAt:)(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1C254E560();
  uint64_t ObjectType = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254CD90();
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22F5C14(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v33 = v2;
  sub_1C21F3F98();
  sub_1C254DCE0();
  sub_1C254D6D0();
  swift_release();
  __swift_project_boxed_opaque_existential_1Tm(v36, v36[3]);
  sub_1C254D180();
  id v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v34 = a2;
  uint64_t v15 = (void *)sub_1C254CD30();
  id v16 = objc_msgSend(a1, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v14, v15);

  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v17 = v16;
  }
  else {
    id v17 = 0;
  }
  if (!v17)
  {
    uint64_t v23 = ObjectType;
    sub_1C254E510();
    id v24 = sub_1C254E550();
    os_log_type_t v25 = sub_1C254FA30();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_1C21A1000, v24, v25, "Cell does not conform to SectionedAdaptorCell", v26, 2u);
      MEMORY[0x1C875A0B0](v26, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
    sub_1C254DC50();
    sub_1C254D330();
    uint64_t v27 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v20 = (id)sub_1C254CD30();
    id v18 = objc_msgSend(a1, sel_dequeueReusableCellWithReuseIdentifier_forIndexPath_, v27, v20);

    goto LABEL_13;
  }
  swift_getObjectType();
  sub_1C21F4424((uint64_t)v36, (uint64_t)v35);
  id v18 = v16;
  sub_1C254D840();
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    id v19 = v16;
  }
  else {
    id v19 = 0;
  }
  if (v19)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v20 = v18;
    sub_1C21F3F98();
    uint64_t v21 = v34;
    sub_1C254CD80();
    sub_1C254D680();
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v10, v21, v32);
    sub_1C254D350();
    uint64_t v22 = sub_1C254D370();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 0, 1, v22);
    sub_1C254DB90();
    id v18 = v20;
LABEL_13:
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
  return v18;
}

double sub_1C22F5028@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = (void *)sub_1C254CD30();
  id v5 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v4);

  if (v5)
  {
    sub_1C21F3F98();
    sub_1C254DCE0();
    sub_1C254D6D0();
    swift_release();
    sub_1C21F44EC(&v13, (uint64_t)v10);
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    sub_1C21FFE74(0, &qword_1EA2DE778);
    if (swift_dynamicCast())
    {

      uint64_t v6 = v8;
LABEL_6:
      sub_1C21F44EC(v6, (uint64_t)v12);
      sub_1C21F44EC(v12, a2);
      return result;
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));
    sub_1C229B07C((uint64_t)v8, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);
    *(void *)&v8[0] = v5;
    sub_1C220F054();
    if (swift_dynamicCast())
    {
      uint64_t v6 = v10;
      goto LABEL_6;
    }
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_1C229B07C((uint64_t)v10, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);
  }
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t _s15HealthRecordsUI35MedicalRecordTimelineViewControllerC010collectionG0_18shouldSelectItemAtSbSo012UICollectionG0C_10Foundation9IndexPathVtF_0(void *a1)
{
  uint64_t v2 = (void *)sub_1C254CD30();
  id v3 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v2);

  if (!v3) {
    goto LABEL_5;
  }
  sub_1C22F5028(a1, (uint64_t)v8);
  sub_1C22F5B98((uint64_t)v8, (uint64_t)v6);
  if (!v7)
  {
    sub_1C229B07C((uint64_t)v8, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);

    sub_1C229B07C((uint64_t)v6, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);
LABEL_5:
    char v4 = 0;
    return v4 & 1;
  }
  __swift_project_boxed_opaque_existential_1Tm(v6, v7);
  char v4 = sub_1C254D880();

  sub_1C229B07C((uint64_t)v8, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
  return v4 & 1;
}

void MedicalRecordTimelineViewController.collectionView(_:didSelectItemAt:)(void *a1)
{
  sub_1C22F5C14(0, &qword_1EA2E0A98, MEMORY[0x1E4F66488]);
  MEMORY[0x1F4188790](v2 - 8);
  char v4 = (unsigned __int8 *)v12 - v3;
  id v5 = (void *)sub_1C254CD30();
  id v6 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v5);

  if (v6)
  {
    sub_1C22F5028(a1, (uint64_t)v14);
    sub_1C22F5B98((uint64_t)v14, (uint64_t)v12);
    if (v13)
    {
      __swift_project_boxed_opaque_existential_1Tm(v12, v13);
      sub_1C254D8A0();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    }
    else
    {
      sub_1C229B07C((uint64_t)v12, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);
    }
    sub_1C22F5B98((uint64_t)v14, (uint64_t)v12);
    if (v13)
    {
      __swift_project_boxed_opaque_existential_1Tm(v12, v13);
      sub_1C254D8B0();
      uint64_t v7 = sub_1C254DA60();
      uint64_t v8 = *(void *)(v7 - 8);
      (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) != 1)
      {
        if ((*(unsigned int (**)(unsigned __int8 *, uint64_t))(v8 + 88))(v4, v7) == *MEMORY[0x1E4F66478])
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 96))(v4, v7);
          uint64_t v9 = *v4;
          id v10 = (void *)sub_1C254CD30();
          objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v10, v9);

          sub_1C229B07C((uint64_t)v14, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);
        }
        else
        {
          sub_1C229B07C((uint64_t)v14, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);

          (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(v4, v7);
        }
        return;
      }
    }
    else
    {
      sub_1C229B07C((uint64_t)v12, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);
      uint64_t v11 = sub_1C254DA60();
      (*(void (**)(unsigned __int8 *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
    }

    sub_1C229B07C((uint64_t)v14, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);
    sub_1C22F5C68((uint64_t)v4);
  }
}

id MedicalRecordTimelineViewController.collectionView(_:selectionFollowsFocusForItemAt:)(void *a1)
{
  uint64_t v2 = (void *)sub_1C254CD30();
  id v3 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v2);

  if (!v3) {
    return objc_msgSend(a1, sel_selectionFollowsFocus);
  }
  sub_1C22F5028(a1, (uint64_t)v9);
  sub_1C22F5B98((uint64_t)v9, (uint64_t)v7);
  if (!v8)
  {
    sub_1C229B07C((uint64_t)v7, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1Tm(v7, v8);
  char v4 = sub_1C254D890();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  if (v4 == 2)
  {
LABEL_7:
    id v5 = objc_msgSend(a1, sel_selectionFollowsFocus);

    sub_1C229B07C((uint64_t)v9, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);
    return v5;
  }
  sub_1C229B07C((uint64_t)v9, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);

  return (id)(v4 & 1);
}

uint64_t sub_1C22F5A84(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(id, char *))
{
  uint64_t v8 = sub_1C254CD90();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CD40();
  id v12 = a3;
  id v13 = a1;
  LOBYTE(a5) = a5(v12, v11);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return a5 & 1;
}

uint64_t sub_1C22F5B98(uint64_t a1, uint64_t a2)
{
  sub_1C225EBC8(0, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C22F5C14(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C22F5C68(uint64_t a1)
{
  sub_1C22F5C14(0, &qword_1EA2E0A98, MEMORY[0x1E4F66488]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s15HealthRecordsUI35MedicalRecordTimelineViewControllerC010collectionG0_33contextMenuConfigurationForItemAt5pointSo09UIContextkL0CSgSo012UICollectionG0C_10Foundation9IndexPathVSo7CGPointVtF_0(void *a1)
{
  uint64_t v2 = (void *)sub_1C254CD30();
  id v3 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v2);

  if (!v3) {
    return 0;
  }
  id v9 = v3;
  sub_1C220F054();
  sub_1C21FFE74(0, &qword_1EA2E0AA0);
  id v4 = v3;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v8 = 0;
    memset(v7, 0, sizeof(v7));

    sub_1C229B07C((uint64_t)v7, &qword_1EA2E0AA8, &qword_1EA2E0AA0);
    return 0;
  }
  sub_1C21F44EC(v7, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1Tm(v10, v10[3]);
  uint64_t v5 = sub_1C254DF50();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  return v5;
}

unint64_t sub_1C22F5E68()
{
  return 0xD000000000000017;
}

void sub_1C22F5FBC()
{
  id v1 = objc_msgSend(v0, sel_textLabel);
  if (v1)
  {
    uint64_t v2 = v1;
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v3 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    id v4 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setText_, v4, 0xE000000000000000);
  }
  objc_msgSend(v0, sel_setAccessoryType_, 0);
  id v5 = objc_msgSend(v0, sel_textLabel);
  if (v5)
  {
    id v7 = v5;
    id v6 = objc_msgSend(v0, sel_tintColor);
    objc_msgSend(v7, sel_setTextColor_, v6);
  }
}

id sub_1C22F6234()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AddAccountTableViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AddAccountTableViewCell()
{
  return self;
}

BOOL sub_1C22F628C(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_externalID);
  sub_1C254F470();

  sub_1C254F470();
  char v3 = sub_1C254F610();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v3 & 1) == 0;
}

BOOL HKClinicalGateway.hasLogo.getter()
{
  id v1 = objc_msgSend(v0, sel_externalID);
  sub_1C254F470();

  sub_1C254F470();
  char v2 = sub_1C254F610();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v2 & 1) == 0;
}

uint64_t sub_1C22F63AC(void *a1)
{
  id v1 = a1;
  char v2 = _sSo17HKClinicalGatewayC15HealthRecordsUIE29supportsSharingToProviderObjCSbvg_0();

  return v2 & 1;
}

uint64_t sub_1C22F63E4(void *a1)
{
  id v1 = a1;
  if (objc_msgSend(v1, sel_status) == (id)1) {
    char v2 = _sSo17HKClinicalGatewayC15HealthRecordsUIE29supportsSharingToProviderObjCSbvg_0();
  }
  else {
    char v2 = 0;
  }

  return v2 & 1;
}

uint64_t HKClinicalGateway.canEnableSharingToProvider.getter()
{
  if (objc_msgSend(v0, sel_status) != (id)1) {
    return 0;
  }
  return _sSo17HKClinicalGatewayC15HealthRecordsUIE29supportsSharingToProviderObjCSbvg_0();
}

double HKClinicalAccount.brandId.getter@<D0>(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_brand);
  if (v3)
  {
    id v13 = v3;
    id v4 = objc_msgSend(v13, sel_externalID);
    uint64_t v5 = sub_1C254F470();
    uint64_t v7 = v6;

    id v8 = objc_msgSend(v13, sel_batchID);
    uint64_t v9 = sub_1C254F470();
    uint64_t v11 = v10;

    *a1 = v5;
    a1[1] = v7;
    a1[2] = v9;
    a1[3] = v11;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
  }
  return result;
}

id sub_1C22F6570(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_gateway);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v2, sel_hasLogo);

    id v1 = v3;
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

id HKClinicalAccount.hasLogo.getter()
{
  id v1 = objc_msgSend(v0, sel_gateway);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v1, sel_hasLogo);

  return v3;
}

BOOL sub_1C22F663C(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_provenance);
  id v3 = objc_msgSend(v2, sel_gateway);

  if (v3) {
  return v3 == 0;
  }
}

BOOL HKClinicalAccount.isSourceType.getter()
{
  id v1 = objc_msgSend(v0, sel_provenance);
  id v2 = objc_msgSend(v1, sel_gateway);

  if (v2) {
  return v2 == 0;
  }
}

id HKClinicalAccount.issuerIdentifier.getter()
{
  id v1 = objc_msgSend(v0, sel_provenance);
  id v2 = objc_msgSend(v1, sel_signedClinicalDataIssuer);

  if (v2)
  {
    id v3 = objc_msgSend(v2, sel_identifier);

    id v2 = (id)sub_1C254F470();
  }
  return v2;
}

BOOL sub_1C22F67B8(void *a1)
{
  sub_1C22F8E68(0, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v12 - v3;
  uint64_t v5 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = a1;
  sub_1C22AD574(v9, 0, 0, 0, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C22F8DF8((uint64_t)v4, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    BOOL v10 = 0;
  }
  else
  {
    sub_1C2223DC4((uint64_t)v4, (uint64_t)v8);
    BOOL v10 = (*(void *)&v8[*(int *)(v5 + 20)] & 0xFFFFFFFFFFFFFFFDLL) == 0;
    sub_1C2223718((uint64_t)v8);
  }

  return v10;
}

BOOL HKClinicalAccount.needsLogin.getter()
{
  sub_1C22F8E68(0, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v10 - v2;
  uint64_t v4 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22AD574(v0, 0, 0, 0, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1C22F8DF8((uint64_t)v3, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    return 0;
  }
  else
  {
    sub_1C2223DC4((uint64_t)v3, (uint64_t)v7);
    BOOL v8 = (*(void *)&v7[*(int *)(v4 + 20)] & 0xFFFFFFFFFFFFFFFDLL) == 0;
    sub_1C2223718((uint64_t)v7);
  }
  return v8;
}

BOOL sub_1C22F6B18(void *a1)
{
  id v1 = a1;
  BOOL v2 = HKClinicalAccount.wantsGatewayUpgrade.getter();

  return v2;
}

BOOL HKClinicalAccount.wantsGatewayUpgrade.getter()
{
  sub_1C22F8E68(0, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v12 - v2;
  uint64_t v4 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22AD574(v0, 0, 0, 0, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1C22F8DF8((uint64_t)v3, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    return 0;
  }
  else
  {
    sub_1C2223DC4((uint64_t)v3, (uint64_t)v7);
    id v9 = *(void **)&v7[*(int *)(v4 + 20)];
    BOOL v8 = (unint64_t)v9 > 3;
    if ((unint64_t)v9 < 4) {
      id v10 = 0;
    }
    else {
      id v10 = v9;
    }
    sub_1C2223718((uint64_t)v7);
  }
  return v8;
}

uint64_t HKClinicalAccount.summaryTileType.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C22F8E68(0, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v17 - v4;
  uint64_t v6 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22AD574(v1, 0, 0, 0, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1C22F8DF8((uint64_t)v5, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
LABEL_5:
    uint64_t v11 = sub_1C254E290();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  sub_1C2223DC4((uint64_t)v5, (uint64_t)v9);
  id v10 = *(char **)&v9[*(int *)(v6 + 20)];
  sub_1C2223774(v10);
  sub_1C2223718((uint64_t)v9);
  if ((unint64_t)v10 < 2)
  {
    id v13 = (unsigned int *)MEMORY[0x1E4F67688];
  }
  else
  {
    if ((unint64_t)(v10 - 2) < 2) {
      goto LABEL_5;
    }
    sub_1C2223E28(v10);
    id v13 = (unsigned int *)MEMORY[0x1E4F67690];
  }
  uint64_t v14 = *v13;
  uint64_t v15 = sub_1C254E290();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 104))(a1, v14, v15);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
}

uint64_t sub_1C22F6FB4(void *a1)
{
  id v1 = a1;
  if (objc_msgSend(v1, sel_needsLogin))
  {

    return 1;
  }
  else
  {
    unsigned int v3 = objc_msgSend(v1, sel_hasClinicalSharingScopes);

    return v3 ^ 1;
  }
}

uint64_t HKClinicalAccount.needsLoginToEnableClinicalSharing.getter()
{
  if (objc_msgSend(v0, sel_needsLogin)) {
    return 1;
  }
  else {
    return objc_msgSend(v0, sel_hasClinicalSharingScopes) ^ 1;
  }
}

id sub_1C22F7058(void *a1, uint64_t a2)
{
  return sub_1C22F808C(a1, a2, (void (*)(void))HKClinicalAccount.displayableLastDownloadDate.getter);
}

uint64_t HKClinicalAccount.displayableLastDownloadDate.getter()
{
  id v1 = v0;
  sub_1C22F8E68(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v31 - v7;
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v31 - v9;
  uint64_t v11 = sub_1C254CAD0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v34 = (char *)&v31 - v16;
  id v17 = objc_msgSend(v1, sel_lastFetchDate);
  if (v17)
  {
    id v18 = v17;
    uint64_t v32 = v1;
    uint64_t v33 = v5;
    sub_1C254CA80();

    id v19 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v19(v8, v15, v11);
    id v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v20(v8, 0, 1, v11);
    uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v21(v8, 1, v11) != 1)
    {
      v19(v10, v8, v11);
      v20(v10, 0, 1, v11);
      goto LABEL_10;
    }
    id v1 = v32;
    uint64_t v5 = v33;
  }
  else
  {
    id v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v20(v8, 1, 1, v11);
  }
  id v22 = objc_msgSend(v1, sel_lastFullFetchDate);
  if (v22)
  {
    uint64_t v23 = v22;
    sub_1C254CA80();

    uint64_t v24 = 0;
  }
  else
  {
    uint64_t v24 = 1;
  }
  v20(v5, v24, 1, v11);
  sub_1C22AE66C((uint64_t)v5, (uint64_t)v10);
  sub_1C22F8DF8((uint64_t)v8, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
LABEL_10:
  if (v21(v10, 1, v11) == 1)
  {
    sub_1C22F8DF8((uint64_t)v10, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
    return 9732322;
  }
  else
  {
    uint64_t v26 = v34;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v34, v10, v11);
    id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
    objc_msgSend(v27, sel_setDateStyle_, 3);
    objc_msgSend(v27, sel_setTimeStyle_, 1);
    uint64_t v28 = (void *)sub_1C254CA50();
    id v29 = objc_msgSend(v27, sel_stringFromDate_, v28);

    uint64_t v25 = sub_1C254F470();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v26, v11);
  }
  return v25;
}

id sub_1C22F74B8(void *a1, uint64_t a2)
{
  return sub_1C22F808C(a1, a2, (void (*)(void))HKClinicalAccount.displayableStatus.getter);
}

uint64_t HKClinicalAccount.displayableStatus.getter()
{
  switch((unint64_t)objc_msgSend(v0, sel_state))
  {
    case 0uLL:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_18;
      }
      break;
    case 1uLL:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_18;
      }
      break;
    case 2uLL:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_18;
      }
      break;
    case 3uLL:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_18;
      }
      break;
    case 4uLL:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_18;
      }
      break;
    case 5uLL:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_18;
      }
      break;
    case 6uLL:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_18;
      }
      break;
    default:
      if (qword_1EBB6EF40 != -1) {
LABEL_18:
      }
        swift_once();
      break;
  }
  id v1 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1C22F78E0(void *a1)
{
  id v1 = a1;
  unsigned __int8 v2 = HKClinicalAccount.canEnableSharingToProvider.getter();

  return v2 & 1;
}

id HKClinicalAccount.canEnableSharingToProvider.getter()
{
  id result = objc_msgSend(v0, sel_gateway);
  if (result)
  {
    unsigned __int8 v2 = result;
    if (objc_msgSend(result, sel_canEnableSharingToProvider))
    {
      id v3 = objc_msgSend(v0, sel_clinicalSharingStatus);
      id v4 = objc_msgSend(v3, sel_userStatus);

      return (id)(v4 != (id)2);
    }
    else
    {

      return 0;
    }
  }
  return result;
}

uint64_t sub_1C22F79B0(void *a1)
{
  id v1 = a1;
  unsigned __int8 v2 = HKClinicalAccount.isSharingToProvider.getter();

  return v2 & 1;
}

id HKClinicalAccount.isSharingToProvider.getter()
{
  id v1 = v0;
  id result = objc_msgSend(v0, sel_gateway);
  if (result)
  {
    id v3 = result;
    if ((_sSo17HKClinicalGatewayC15HealthRecordsUIE29supportsSharingToProviderObjCSbvg_0() & 1) != 0
      && objc_msgSend(v3, sel_status) == (id)1)
    {
      id v4 = objc_msgSend(v1, sel_clinicalSharingStatus);
      id v5 = objc_msgSend(v4, sel_userStatus);

      return (id)(v5 == (id)2);
    }
    else
    {

      return 0;
    }
  }
  return result;
}

id sub_1C22F7A94(void *a1)
{
  id v1 = a1;
  HKClinicalAccount.displayableSharingSinceTitle.getter();
  uint64_t v3 = v2;

  if (v3)
  {
    id v4 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }
  return v4;
}

uint64_t HKClinicalAccount.displayableSharingSinceTitle.getter()
{
  id v1 = v0;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C22F8E68(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v33 = (char *)&v33 - v4;
  sub_1C22F8E68(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], v2);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = sub_1C254CAD0();
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v33 - v12;
  id v14 = objc_msgSend(v1, sel_clinicalSharingStatus);
  id v15 = objc_msgSend(v14, sel_userStatus);

  uint64_t v16 = 0;
  if (v15 != (id)2) {
    return v16;
  }
  id v17 = objc_msgSend(v1, sel_clinicalSharingStatus);
  id v18 = objc_msgSend(v17, sel_firstSharedDate);

  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v7, 1, 1, v8);
    goto LABEL_8;
  }
  sub_1C254CA80();

  uint64_t v19 = v34;
  id v20 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v20(v7, v11, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v7, 1, v8) == 1)
  {
LABEL_8:
    sub_1C22F8DF8((uint64_t)v7, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
    return 0;
  }
  v20(v13, v7, v8);
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v21, sel_setDateStyle_, 2);
  objc_msgSend(v21, sel_setTimeStyle_, 0);
  id v22 = (void *)sub_1C254CA50();
  id v23 = objc_msgSend(v21, sel_stringFromDate_, v22);

  uint64_t v24 = sub_1C254F470();
  uint64_t v26 = v25;

  uint64_t v27 = sub_1C254CBD0();
  uint64_t v28 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v33, 1, 1, v27);
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v29 = (void *)qword_1EBB6D998;
  sub_1C22F8E68(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1C255CD90;
  *(void *)(v30 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v30 + 64) = sub_1C220D950();
  *(void *)(v30 + 32) = v24;
  *(void *)(v30 + 40) = v26;
  id v31 = v29;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v16 = sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C22F8DF8(v28, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v8);
  return v16;
}

id sub_1C22F8074(void *a1, uint64_t a2)
{
  return sub_1C22F808C(a1, a2, (void (*)(void))HKClinicalAccount.displayableLastSharedToProviderDate.getter);
}

id sub_1C22F808C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t HKClinicalAccount.displayableLastSharedToProviderDate.getter()
{
  id v1 = v0;
  sub_1C22F8E68(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v20 - v3;
  uint64_t v5 = sub_1C254CAD0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v20 - v10;
  id v12 = objc_msgSend(v1, sel_clinicalSharingStatus);
  id v13 = objc_msgSend(v12, sel_lastSharedDate);

  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  sub_1C254CA80();

  id v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v14(v4, v9, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_1C22F8DF8((uint64_t)v4, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
    return 9732322;
  }
  v14(v11, v4, v5);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v15, sel_setDateStyle_, 3);
  objc_msgSend(v15, sel_setTimeStyle_, 1);
  uint64_t v16 = (void *)sub_1C254CA50();
  id v17 = objc_msgSend(v15, sel_stringFromDate_, v16);

  uint64_t v18 = sub_1C254F470();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return v18;
}

uint64_t sub_1C22F8408()
{
  id v1 = objc_msgSend(v0, sel_clinicalSharingStatus);
  id v2 = objc_msgSend(v1, sel_featureStatus);

  switch((unint64_t)v2)
  {
    case 1uLL:
      id v3 = objc_msgSend(v0, (SEL)&selRef_orderedResearchStudySources + 4);
      uint64_t v4 = HKClinicalSharingStatus.displayableUserStatus.getter();
      goto LABEL_15;
    case 2uLL:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_16;
      }
      goto LABEL_10;
    case 3uLL:
      if (qword_1EBB6EF40 == -1) {
        goto LABEL_10;
      }
      goto LABEL_16;
    case 4uLL:
      if (qword_1EBB6EF40 == -1) {
        goto LABEL_10;
      }
      goto LABEL_16;
    case 5uLL:
      if (qword_1EBB6D9B0 != -1) {
        swift_once();
      }
      id v3 = (id)qword_1EBB6D998;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    default:
      if (qword_1EBB6EF40 == -1) {
        goto LABEL_10;
      }
LABEL_16:
      swift_once();
LABEL_10:
      id v3 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
LABEL_14:
      uint64_t v4 = sub_1C254C730();
      swift_bridgeObjectRelease();
LABEL_15:

      return v4;
  }
}

uint64_t HKClinicalSharingStatus.displayableUserStatus.getter()
{
  id v1 = v0;
  uint64_t v2 = sub_1C254CAD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22F8E68(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v16 - v7;
  if (objc_msgSend(v1, sel_multiDeviceStatus) == (id)4)
  {
    if (qword_1EBB6D9B0 != -1) {
LABEL_19:
    }
      swift_once();
LABEL_3:
    id v9 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
LABEL_11:
    uint64_t v10 = sub_1C254C730();
    swift_bridgeObjectRelease();

    return v10;
  }
  else
  {
    switch((unint64_t)objc_msgSend(v1, sel_userStatus))
    {
      case 1uLL:
      case 3uLL:
        if (qword_1EBB6EF40 == -1) {
          goto LABEL_10;
        }
        goto LABEL_21;
      case 2uLL:
        id v12 = objc_msgSend(v1, sel_lastSharedDate);
        if (v12)
        {
          id v13 = v12;
          sub_1C254CA80();

          (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) != 1)
          {
            sub_1C22F8DF8((uint64_t)v8, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
            if (qword_1EBB6D9B0 == -1) {
              goto LABEL_18;
            }
            goto LABEL_22;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
        }
        sub_1C22F8DF8((uint64_t)v8, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
        if (qword_1EBB6D9B0 == -1) {
          goto LABEL_18;
        }
LABEL_22:
        swift_once();
LABEL_18:
        id v14 = (id)qword_1EBB6D998;
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_1C254C730();
        swift_bridgeObjectRelease();

        uint64_t result = v15;
        break;
      case 4uLL:
      case 5uLL:
        if (qword_1EBB6D9B0 == -1) {
          goto LABEL_3;
        }
        goto LABEL_19;
      default:
        if (qword_1EBB6EF40 == -1) {
          goto LABEL_10;
        }
LABEL_21:
        swift_once();
LABEL_10:
        id v9 = (id)qword_1EBB6FBC8;
        swift_bridgeObjectRetain();
        goto LABEL_11;
    }
  }
  return result;
}

uint64_t sub_1C22F8CF0(void *a1)
{
  id v1 = a1;
  unsigned __int8 v2 = HKClinicalEphemeralAccount.hasClinicalSharingScopes.getter();

  return v2 & 1;
}

id HKClinicalEphemeralAccount.hasClinicalSharingScopes.getter()
{
  id v1 = objc_msgSend(v0, sel_authResponse);
  id v2 = objc_msgSend(v1, sel_scope);

  if (v2)
  {
    sub_1C254F470();

    uint64_t v3 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(self, sel_scopeSetWithScopeString_, v3);

    id v2 = objc_msgSend(v4, sel_hasClinicalSharingScopes);
  }
  return v2;
}

uint64_t sub_1C22F8DF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C22F8E68(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C22F8E68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t localized(_:locale:source:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result = sub_1C254C730();
  if (*(void *)(a9 + 16))
  {
    uint64_t v10 = sub_1C254F4A0();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t String.localized(source:locale:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = sub_1C254C730();
  if (*(void *)(a7 + 16))
  {
    uint64_t v9 = sub_1C254F4A0();
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t localized(_:locale:source:value:comment:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result = sub_1C254C730();
  if (*(void *)(a9 + 16))
  {
    uint64_t v10 = sub_1C254F4A0();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

id LocalizationSource.bundle.getter()
{
  return *v0;
}

uint64_t LocalizationSource.table.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1C22F90C0()
{
  if (qword_1EBB6EFD0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB70020;
  qword_1EBB6FBC8 = qword_1EBB70020;
  unk_1EBB6FBD0 = 0xD00000000000001BLL;
  qword_1EBB6FBD8 = 0x80000001C257C190;
  return v0;
}

uint64_t static LocalizationSource.main.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EBB6FBC8;
  uint64_t v3 = unk_1EBB6FBD0;
  uint64_t v4 = qword_1EBB6FBD8;
  *a1 = qword_1EBB6FBC8;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1C22F91C4()
{
  if (qword_1EBB6EFD0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB70020;
  qword_1EA2E0AB8 = qword_1EBB70020;
  unk_1EA2E0AC0 = 0xD000000000000027;
  qword_1EA2E0AC8 = 0x80000001C257C100;
  return v0;
}

uint64_t static LocalizationSource.stringsDict.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA2DD648 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EA2E0AB8;
  uint64_t v3 = unk_1EA2E0AC0;
  uint64_t v4 = qword_1EA2E0AC8;
  *a1 = qword_1EA2E0AB8;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1C22F92C8()
{
  if (qword_1EBB6EFD0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB70020;
  qword_1EA2E0AD0 = qword_1EBB70020;
  *(void *)algn_1EA2E0AD8 = 0xD000000000000015;
  qword_1EA2E0AE0 = 0x80000001C257C0E0;
  return v0;
}

uint64_t static LocalizationSource.legal.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA2DD650 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EA2E0AD0;
  uint64_t v3 = *(void *)algn_1EA2E0AD8;
  uint64_t v4 = qword_1EA2E0AE0;
  *a1 = qword_1EA2E0AD0;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1C22F93CC()
{
  if (qword_1EA2DD948 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EA2E4D58;
  qword_1EA2E0AE8 = qword_1EA2E4D58;
  unk_1EA2E0AF0 = 0xD00000000000001DLL;
  qword_1EA2E0AF8 = 0x80000001C257C0C0;
  return v0;
}

uint64_t static LocalizationSource.legacy.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA2DD658 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EA2E0AE8;
  uint64_t v3 = unk_1EA2E0AF0;
  uint64_t v4 = qword_1EA2E0AF8;
  *a1 = qword_1EA2E0AE8;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1C22F94D0()
{
  if (qword_1EBB6EFC0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB70018;
  qword_1EA2E0B00 = qword_1EBB70018;
  *(void *)algn_1EA2E0B08 = 0xD000000000000014;
  qword_1EA2E0B10 = 0x80000001C257C1B0;
  return v0;
}

uint64_t static LocalizationSource.healthUI.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA2DD660 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EA2E0B00;
  uint64_t v3 = *(void *)algn_1EA2E0B08;
  uint64_t v4 = qword_1EA2E0B10;
  *a1 = qword_1EA2E0B00;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1C22F95D4()
{
  if (qword_1EBB6EFC0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB70018;
  qword_1EBB6FBB0 = qword_1EBB70018;
  *(void *)algn_1EBB6FBB8 = 0xD00000000000002CLL;
  qword_1EBB6FBC0 = 0x80000001C257C160;
  return v0;
}

uint64_t static LocalizationSource.healthRecordsHealthUI.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EBB6EF38 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EBB6FBB0;
  uint64_t v3 = *(void *)algn_1EBB6FBB8;
  uint64_t v4 = qword_1EBB6FBC0;
  *a1 = qword_1EBB6FBB0;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1C22F96D8()
{
  if (qword_1EBB6EFD0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB70020;
  qword_1EBB6D998 = qword_1EBB70020;
  unk_1EBB6D9A0 = 0xD000000000000020;
  qword_1EBB6D9A8 = 0x80000001C257C130;
  return v0;
}

uint64_t static LocalizationSource.healthRecordsOsloHealthUI.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EBB6D998;
  uint64_t v3 = unk_1EBB6D9A0;
  uint64_t v4 = qword_1EBB6D9A8;
  *a1 = qword_1EBB6D998;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1C22F97DC()
{
  if (qword_1EBB6EFD0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB70020;
  qword_1EA2E0B18 = qword_1EBB70020;
  unk_1EA2E0B20 = 0xD00000000000002CLL;
  qword_1EA2E0B28 = 0x80000001C257C090;
  return v0;
}

uint64_t static LocalizationSource.healthRecordsOsloStringsDict.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA2DD668 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EA2E0B18;
  uint64_t v3 = unk_1EA2E0B20;
  uint64_t v4 = qword_1EA2E0B28;
  *a1 = qword_1EA2E0B18;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1C22F98E0()
{
  if (qword_1EBB6EFD0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB70020;
  qword_1EA2E0B30 = qword_1EBB70020;
  *(void *)algn_1EA2E0B38 = 0xD000000000000030;
  qword_1EA2E0B40 = 0x80000001C257C050;
  return v0;
}

uint64_t static LocalizationSource.stringsDictPasadena.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA2DD670 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EA2E0B30;
  uint64_t v3 = *(void *)algn_1EA2E0B38;
  uint64_t v4 = qword_1EA2E0B40;
  *a1 = qword_1EA2E0B30;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1C22F99E4()
{
  if (qword_1EBB6EFC0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB70018;
  qword_1EA2E0B48 = qword_1EBB70018;
  unk_1EA2E0B50 = 0xD00000000000001DLL;
  qword_1EA2E0B58 = 0x80000001C257C030;
  return v0;
}

uint64_t static LocalizationSource.healthUIPasadena.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA2DD678 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EA2E0B48;
  uint64_t v3 = unk_1EA2E0B50;
  uint64_t v4 = qword_1EA2E0B58;
  *a1 = qword_1EA2E0B48;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1C22F9AE8()
{
  if (qword_1EBB6EFD0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB70020;
  qword_1EA2E0B60 = qword_1EBB70020;
  *(void *)algn_1EA2E0B68 = 0xD000000000000024;
  qword_1EA2E0B70 = 0x80000001C257C000;
  return v0;
}

uint64_t static LocalizationSource.healthRecordsUIPasadena.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EA2E0B60;
  uint64_t v3 = *(void *)algn_1EA2E0B68;
  uint64_t v4 = qword_1EA2E0B70;
  *a1 = qword_1EA2E0B60;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1C22F9BEC()
{
  if (qword_1EBB6EFD0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB70020;
  qword_1EA2E0B78 = qword_1EBB70020;
  unk_1EA2E0B80 = 0xD000000000000036;
  qword_1EA2E0B88 = 0x80000001C257BFC0;
  return v0;
}

uint64_t static LocalizationSource.stringsDictClinicalNotes.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA2DD688 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EA2E0B78;
  uint64_t v3 = unk_1EA2E0B80;
  uint64_t v4 = qword_1EA2E0B88;
  *a1 = qword_1EA2E0B78;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1C22F9CF0()
{
  if (qword_1EBB6EFD0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB70020;
  qword_1EA2E0B90 = qword_1EBB70020;
  *(void *)algn_1EA2E0B98 = 0xD00000000000002ALL;
  qword_1EA2E0BA0 = 0x80000001C257BF90;
  return v0;
}

uint64_t static LocalizationSource.healthRecordsClinicalNotesHealthUI.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA2DD690 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EA2E0B90;
  uint64_t v3 = *(void *)algn_1EA2E0B98;
  uint64_t v4 = qword_1EA2E0BA0;
  *a1 = qword_1EA2E0B90;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1C22F9DF4()
{
  if (qword_1EBB6EFC0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB70018;
  qword_1EA2E0BA8 = qword_1EBB70018;
  qword_1EA2E0BB0 = 0xD00000000000001CLL;
  qword_1EA2E0BB8 = 0x80000001C257BF70;
  return v0;
}

uint64_t static LocalizationSource.healthRecordsAPI.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA2DD698 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EA2E0BA8;
  uint64_t v3 = qword_1EA2E0BB0;
  uint64_t v4 = qword_1EA2E0BB8;
  *a1 = qword_1EA2E0BA8;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

id sub_1C22F9EF8()
{
  if (qword_1EBB6EFC0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB70018;
  qword_1EA2E0BC0 = qword_1EBB70018;
  qword_1EA2E0BC8 = 0xD000000000000028;
  qword_1EA2E0BD0 = 0x80000001C257BF40;
  return v0;
}

uint64_t static LocalizationSource.healthRecordsResearchStudyAPI.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA2DD6A0 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1EA2E0BC0;
  uint64_t v3 = qword_1EA2E0BC8;
  uint64_t v4 = qword_1EA2E0BD0;
  *a1 = qword_1EA2E0BC0;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C22F9FFC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_1C22FAFB4(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = sub_1C254CBD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  if (a3)
  {
    if (qword_1EA2DD698 != -1) {
      swift_once();
    }
    uint64_t v10 = &qword_1EA2E0BA8;
  }
  else
  {
    if (qword_1EA2DD6A0 != -1) {
      swift_once();
    }
    uint64_t v10 = &qword_1EA2E0BC0;
  }
  id v11 = (id)*v10;
  swift_bridgeObjectRetain();
  sub_1C22FAFB4(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C255CD90;
  sub_1C22FAFB4(0, &qword_1EBB6DD48, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBB320]);
  *(void *)(v12 + 56) = v13;
  *(void *)(v12 + 64) = sub_1C22FB018();
  *(void *)(v12 + 32) = a4;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v14 = sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v8);
  return v14;
}

uint64_t LocalizationSource.localized(_:locale:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = sub_1C254C730();
  if (*(void *)(a8 + 16))
  {
    uint64_t v10 = sub_1C254F4A0();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

id _HRLocalizedString()
{
  sub_1C254F470();
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v1 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String __swiftcall localizedStringForObjC(_:)(Swift::String a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();

  uint64_t v5 = v2;
  uint64_t v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

id _HRLocalizedLegalString()
{
  sub_1C254F470();
  if (qword_1EA2DD650 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EA2E0AD0;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  id v1 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String __swiftcall localizedLegalStringForObjC(_:)(Swift::String a1)
{
  if (qword_1EA2DD650 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EA2E0AD0;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();

  uint64_t v5 = v2;
  uint64_t v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

id _HBXLocalizedString()
{
  sub_1C254F470();
  if (qword_1EA2DD658 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EA2E0AE8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  id v1 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String __swiftcall localizedHBXStringForObjC(_:)(Swift::String a1)
{
  if (qword_1EA2DD658 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EA2E0AE8;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();

  uint64_t v5 = v2;
  uint64_t v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

id _HROsloLocalizedString()
{
  sub_1C254F470();
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  id v1 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String __swiftcall localizedOsloStringForObjC(_:)(Swift::String a1)
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();

  uint64_t v5 = v2;
  uint64_t v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

id _HRPasadenaLocalizedString()
{
  sub_1C254F470();
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  id v1 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String __swiftcall localizedPasadenaStringForObjC(_:)(Swift::String a1)
{
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();

  uint64_t v5 = v2;
  uint64_t v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

id _HRClinicalNotesLocalizedString()
{
  sub_1C254F470();
  if (qword_1EA2DD690 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EA2E0B90;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  id v1 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String __swiftcall localizedClinicalNotesStringForObjC(_:)(Swift::String a1)
{
  if (qword_1EA2DD690 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EA2E0B90;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();

  uint64_t v5 = v2;
  uint64_t v6 = v4;
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t destroy for GatewayIdentifiedClinicalAccount(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s15HealthRecordsUI18LocalizationSourceVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocalizationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LocalizationSource(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for AccountStateChange(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)Swift::String result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)Swift::String result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationSource()
{
  return &type metadata for LocalizationSource;
}

void sub_1C22FAFB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C22FB018()
{
  unint64_t result = qword_1EBB6DD50;
  if (!qword_1EBB6DD50)
  {
    sub_1C22FAFB4(255, &qword_1EBB6DD48, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6DD50);
  }
  return result;
}

uint64_t type metadata accessor for DeleteAccountSourceDataSource(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E0BE0);
}

uint64_t sub_1C22FB0C0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C22FB10C()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v14 - v5;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = *(void *)(Strong + qword_1EA2E0BD8);
    uint64_t v9 = *(void *)(Strong + qword_1EA2E0BD8 + 8);
    if (v9)
    {
      if (v9 == 1 || v9 == 2)
      {
        sub_1C254DAE0();
LABEL_10:
        uint64_t v10 = sub_1C254DB40();
        swift_release();
        goto LABEL_11;
      }
      swift_bridgeObjectRetain();
      sub_1C254DAE0();
      sub_1C254DA80();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
      uint64_t v11 = v8;
      uint64_t v12 = v9;
    }
    else
    {
      sub_1C254DAE0();
      uint64_t v11 = v8;
      uint64_t v12 = 0;
    }
    sub_1C22FECC0(v11, v12);
    goto LABEL_10;
  }
  sub_1C254DAE0();
  uint64_t v10 = sub_1C254DB40();
  uint64_t v4 = v6;
LABEL_11:
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v10;
}

uint64_t sub_1C22FB2E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_1C254CB40();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C254F470() == a1 && v11 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0) {
      goto LABEL_9;
    }
  }
  if (*(void *)(v3 + qword_1EA2E0BD8 + 8) < 3uLL)
  {
LABEL_9:
    a3[3] = sub_1C254D3D0();
    a3[4] = sub_1C22FED18(&qword_1EA2DE998, MEMORY[0x1E4F66330]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    return sub_1C254D3C0();
  }
  v15[0] = 0x74497265746F6F46;
  v15[1] = 0xEB000000005F6D65;
  swift_bridgeObjectRetain();
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  a3[3] = sub_1C254DEA0();
  a3[4] = sub_1C22FED18(&qword_1EA2DE9A0, MEMORY[0x1E4F665E8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1C254DE90();
}

void sub_1C22FB544()
{
}

void sub_1C22FB560()
{
}

void sub_1C22FB57C()
{
}

uint64_t sub_1C22FB5A8()
{
  return sub_1C22FECC0(*(void *)(v0 + qword_1EA2E0BD8), *(void *)(v0 + qword_1EA2E0BD8 + 8));
}

uint64_t sub_1C22FB5BC()
{
  uint64_t v0 = sub_1C254DF40();
  sub_1C22FECC0(*(void *)(v0 + qword_1EA2E0BD8), *(void *)(v0 + qword_1EA2E0BD8 + 8));
  return swift_deallocClassInstance();
}

uint64_t sub_1C22FB610()
{
  return type metadata accessor for DeleteAccountSourceDataSource(0);
}

uint64_t type metadata accessor for DeleteAccountDataSource(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E0C00);
}

uint64_t sub_1C22FB638()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C22FB690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C22FB2E4(a1, a2, a3);
}

uint64_t sub_1C22FB6B4()
{
  sub_1C22FEC48();
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t *)(v0 + qword_1EA2E0BF8);
  id v6 = (unsigned int *)MEMORY[0x1E4F663B0];
  if (*(void *)(v0 + qword_1EA2E0BF8 + 8) != 1) {
    id v6 = (unsigned int *)MEMORY[0x1E4F663B8];
  }
  (*(void (**)(char *, void))(v2 + 104))(v4, *v6);
  sub_1C254D5B0();
  uint64_t v7 = *v5;
  uint64_t v8 = v5[1];
  uint64_t v9 = (uint64_t *)(*(void *)(v0 + qword_1EA2E0BF0) + qword_1EA2E0BD8);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  *uint64_t v9 = v7;
  v9[1] = v8;
  sub_1C22FECA8(v7, v8);
  sub_1C22FECC0(v10, v11);
  swift_allocObject();
  swift_weakInit();
  return sub_1C254DF20();
}

uint64_t sub_1C22FB810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_1C254DB50();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v14 - v10;
  if (!a4 || a4 == 2 || a4 == 1)
  {
    sub_1C254DAE0();
  }
  else
  {
    sub_1C254DAE0();
    sub_1C254DA80();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v12 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return v12;
}

void sub_1C22FB95C()
{
}

uint64_t sub_1C22FB98C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + qword_1EA2E0BF8);
  uint64_t v2 = *(void *)(v0 + qword_1EA2E0BF8 + 8);
  return sub_1C22FECC0(v1, v2);
}

uint64_t sub_1C22FB9D0()
{
  uint64_t v0 = sub_1C254D600();
  swift_release();
  sub_1C22FECC0(*(void *)(v0 + qword_1EA2E0BF8), *(void *)(v0 + qword_1EA2E0BF8 + 8));
  return swift_deallocClassInstance();
}

uint64_t sub_1C22FBA34()
{
  return type metadata accessor for DeleteAccountDataSource(0);
}

void sub_1C22FBA3C()
{
}

uint64_t sub_1C22FBA4C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  uint64_t v2 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();

  sub_1C2201FD8(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
  return swift_deallocClassInstance();
}

uint64_t sub_1C22FBB68()
{
  return type metadata accessor for DeleteAccountItem(0);
}

uint64_t type metadata accessor for DeleteAccountItem(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E0C18);
}

uint64_t sub_1C22FBB90()
{
  return swift_updateClassMetadata2();
}

unint64_t destroy for DeleteAccountScenario(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if ((v2 + 1) <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s15HealthRecordsUI21DeleteAccountScenarioOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if ((v4 + 1) > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for DeleteAccountScenario(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  unsigned int v6 = v5 + 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  unsigned int v7 = v4 + 1;
  if (v6 > 1)
  {
    if (v7 <= 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v7 > 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DeleteAccountScenario(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if ((v5 + 1) > 1) {
    goto LABEL_9;
  }
  unint64_t v6 = *(void *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF) {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeleteAccountScenario(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 3) {
    return (v3 - 2);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DeleteAccountScenario(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_1C22FBE3C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1C22FBE5C(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = 0;
    result[1] = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeleteAccountScenario()
{
  return &type metadata for DeleteAccountScenario;
}

uint64_t sub_1C22FBE9C(void *a1, void *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  swift_getObjectType();
  uint64_t v7 = swift_conformsToProtocol2();
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v9) {
    id v10 = a2;
  }
  else {
    uint64_t v8 = 0;
  }
  *(void *)((char *)v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = v8;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  objc_msgSend(a1, sel_setUserInteractionEnabled_, 0);
  uint64_t v11 = *(void **)((char *)v3 + OBJC_IVAR____TtC15HealthRecordsUI17DeleteAccountItem_account);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a1;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v11;
  v13[3] = v3;
  v13[4] = a2;
  v13[5] = a1;
  v13[6] = sub_1C22FD9A8;
  v13[7] = v12;
  v13[8] = v6;
  id v14 = a2;
  id v15 = a1;
  id v16 = v14;
  id v17 = v15;
  id v18 = v11;
  swift_retain();
  swift_retain();
  sub_1C24E1ACC((uint64_t)sub_1C22FDA58, (uint64_t)v13);
  swift_release();
  return swift_release();
}

uint64_t sub_1C22FC04C(uint64_t a1, int a2, void *a3, void *a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v73 = a5;
  uint64_t v74 = a6;
  int v71 = a2;
  uint64_t v70 = a1;
  uint64_t v75 = a9;
  long long v76 = a7;
  uint64_t v79 = sub_1C254F1C0();
  uint64_t v13 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  id v15 = &v60[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_1C254F200();
  uint64_t v77 = *(void *)(v16 - 8);
  uint64_t v78 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v72 = &v60[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_1C254CB40();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  id v21 = &v60[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = sub_1C254E560();
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = &v60[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a3)
  {
    uint64_t v66 = v19;
    uint64_t v67 = v23;
    uint64_t v68 = a8;
    uint64_t v69 = v15;
    id v26 = a3;
    sub_1C254E510();
    id v27 = a3;
    id v28 = a4;
    id v29 = a3;
    id v30 = v28;
    id v31 = sub_1C254E550();
    os_log_type_t v32 = sub_1C254FA20();
    int v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      os_log_t v63 = v31;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v65 = v13;
      uint64_t v35 = v34;
      uint64_t v62 = swift_slowAlloc();
      uint64_t v80 = v62;
      aBlock[0] = a10;
      *(_DWORD *)uint64_t v35 = 136315650;
      int v61 = v33;
      swift_getMetatypeMetadata();
      uint64_t v36 = sub_1C254F4F0();
      uint64_t v64 = v22;
      aBlock[0] = sub_1C21AD354(v36, v37, &v80);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      id v38 = objc_msgSend(v30, sel_identifier, v35 + 14);
      sub_1C254CB20();

      sub_1C22FED18((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
      uint64_t v39 = sub_1C2550810();
      unint64_t v41 = v40;
      (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v21, v18);
      aBlock[0] = sub_1C21AD354(v39, v41, &v80);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 22) = 2080;
      aBlock[0] = a3;
      id v42 = a3;
      sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
      uint64_t v43 = sub_1C254F4F0();
      aBlock[0] = sub_1C21AD354(v43, v44, &v80);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      os_log_t v45 = v63;
      _os_log_impl(&dword_1C21A1000, v63, (os_log_type_t)v61, "%s failed to count number of Wallet cards for account %s: %s", (uint8_t *)v35, 0x20u);
      uint64_t v46 = v62;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v46, -1, -1);
      uint64_t v47 = v35;
      uint64_t v13 = v65;
      MEMORY[0x1C875A0B0](v47, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v25, v64);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v25, v22);
    }
    a8 = v68;
    id v15 = v69;
  }
  sub_1C22023A4();
  unint64_t v48 = (void *)sub_1C254FC70();
  uint64_t v49 = swift_allocObject();
  unint64_t v50 = v74;
  *(void *)(v49 + 16) = v73;
  *(void *)(v49 + 24) = a4;
  *(void *)(v49 + 32) = v70;
  *(unsigned char *)(v49 + 40) = v71 & 1;
  uint64_t v52 = v75;
  unint64_t v51 = v76;
  *(void *)(v49 + 48) = v50;
  *(void *)(v49 + 56) = v51;
  *(void *)(v49 + 64) = a8;
  *(void *)(v49 + 72) = v52;
  aBlock[4] = sub_1C22FDAE8;
  aBlock[5] = v49;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_29;
  uint64_t v53 = _Block_copy(aBlock);
  id v54 = a4;
  swift_retain();
  id v55 = v50;
  id v56 = v51;
  swift_retain();
  swift_release();
  id v57 = v72;
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C22FED18((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C22FE9A4(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  uint64_t v58 = v79;
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v57, v15, v53);
  _Block_release(v53);

  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v58);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v77 + 8))(v57, v78);
}

void sub_1C22FC7B4(void *a1)
{
  id v3 = objc_msgSend(a1, sel_view);
  if (v3)
  {
    unint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_window);

    if (v5)
    {
      objc_msgSend(v5, sel_setUserInteractionEnabled_, 0);
    }
    id v6 = objc_msgSend(*(id *)(*(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager) + 16), sel_healthStore);
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AD28]), sel_initWithHealthStore_, v6);

    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    *(void *)(v8 + 24) = v1;
    v11[4] = sub_1C22FEB4C;
    v11[5] = v8;
    v11[0] = MEMORY[0x1E4F143A8];
    v11[1] = 1107296256;
    void v11[2] = sub_1C22FD2A0;
    v11[3] = &block_descriptor_29;
    uint64_t v9 = _Block_copy(v11);
    id v10 = a1;
    swift_retain();
    swift_release();
    objc_msgSend(v7, sel_fetchCloudSyncStatusWithCompletion_, v9);
    _Block_release(v9);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C22FC948(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v10 = sub_1C254F1C0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1C254F200();
  uint64_t v14 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22023A4();
  uint64_t v17 = (void *)sub_1C254FC70();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a6;
  *(unsigned char *)(v18 + 24) = a1;
  *(void *)(v18 + 32) = a7;
  aBlock[4] = sub_1C22FEB94;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_35;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = a6;
  swift_retain();
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C22FED18((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C22FE9A4(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v16, v13, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v23);
}

void sub_1C22FCC38(void *a1, char a2, uint64_t a3)
{
  id v6 = objc_msgSend(a1, sel_view);
  if (v6)
  {
    id v7 = v6;
    id v8 = objc_msgSend(v6, sel_window);

    if (v8)
    {
      objc_msgSend(v8, sel_setUserInteractionEnabled_, 1);
    }
    if (a2)
    {
      sub_1C22FCE20(a1);
    }
    else
    {
      uint64_t v9 = a3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate;
      uint64_t v10 = MEMORY[0x1C875A200](a3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
      uint64_t v11 = *(void *)(v9 + 8);
      uint64_t v12 = a3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v10;
      *(void *)(v13 + 24) = v11;
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v10;
      *(void *)(v14 + 24) = v11;
      uint64_t v15 = (void *)swift_allocObject();
      void v15[2] = v10;
      v15[3] = v11;
      v15[4] = a1;
      swift_unknownObjectRetain_n();
      id v16 = a1;
      sub_1C24D6D58(v12, 0, (uint64_t)sub_1C22FEBDC, (void (*)(void, void, void))v13, (uint64_t)sub_1C22FEBE4, v14, (uint64_t)sub_1C22FEBF0, (uint64_t)v15);
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1C22FCE20(void *a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v3 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  unint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_sharedBehavior, 0xE000000000000000);
  if (v5)
  {
    id v6 = v5;
    unsigned int v7 = objc_msgSend(v5, sel_isiPad);

    id v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v8, v9, v7);

    id v11 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v1;
    *(void *)(v12 + 24) = a1;
    swift_retain();
    id v25 = a1;
    uint64_t v13 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1C22FEC3C;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224DAAC;
    aBlock[3] = &block_descriptor_50;
    uint64_t v14 = _Block_copy(aBlock);
    swift_release();
    uint64_t v15 = self;
    id v16 = objc_msgSend(v15, sel_actionWithTitle_style_handler_, v13, 2, v14, 0xE000000000000000);
    _Block_release(v14);

    objc_msgSend(v10, sel_addAction_, v16);
    id v17 = objc_msgSend(v4, sel_sharedBehavior);
    if (v17)
    {
      uint64_t v18 = v17;
      unsigned int v19 = objc_msgSend(v17, sel_isiPad);

      uint64_t v20 = v19 ^ 1;
      id v21 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      uint64_t v22 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      id v23 = objc_msgSend(v15, sel_actionWithTitle_style_handler_, v22, v20, 0, 0xE000000000000000);

      objc_msgSend(v10, sel_addAction_, v23);
      objc_msgSend(v25, sel_presentViewController_animated_completion_, v10, 1, 0);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1C22FD2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  sub_1C22FE9A4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v17 = (char *)&v25 - v16;
  uint64_t v18 = *(void (**)(uint64_t, char *, char *, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C254CA80();
    uint64_t v19 = sub_1C254CAD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 0, 1, v19);
  }
  else
  {
    uint64_t v20 = sub_1C254CAD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v17, 1, 1, v20);
  }
  if (a4)
  {
    sub_1C254CA80();
    uint64_t v21 = sub_1C254CAD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v15, 0, 1, v21);
  }
  else
  {
    uint64_t v22 = sub_1C254CAD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v15, 1, 1, v22);
  }
  swift_retain();
  id v23 = a6;
  v18(a2, v17, v15, a5, a6);
  swift_release();

  sub_1C22178C0((uint64_t)v15);
  return sub_1C22178C0((uint64_t)v17);
}

void sub_1C22FD4E4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  sub_1C22FE9A4(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v16 - v8;
  if (objc_msgSend(a2, sel_isSharingToProvider)
    && (id v10 = objc_msgSend(a2, sel_clinicalSharingStatus),
        id v11 = objc_msgSend(v10, sel_multiDeviceStatus),
        v10,
        v11 == (id)2)
    && objc_msgSend(a2, sel_needsRelogin))
  {
    uint64_t v12 = sub_1C254F840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a3;
    v13[5] = a2;
    v13[6] = a4;
    swift_retain();
    id v14 = a2;
    id v15 = a4;
    sub_1C24D0A0C((uint64_t)v9, (uint64_t)&unk_1EA2E0C30, (uint64_t)v13);
    swift_release();
  }
  else
  {
    sub_1C22FC7B4(a4);
  }
}

uint64_t sub_1C22FD698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[3] = a5;
  _OWORD v6[4] = a6;
  _OWORD v6[2] = a4;
  return MEMORY[0x1F4188298](sub_1C22FD6BC, 0, 0);
}

uint64_t sub_1C22FD6BC()
{
  v0[5] = *(void *)(v0[2] + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager);
  sub_1C254F820();
  v0[6] = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C22FD768, v2, v1);
}

uint64_t sub_1C22FD768()
{
  uint64_t v2 = (void *)v0[3];
  uint64_t v1 = (void *)v0[4];
  swift_release();
  sub_1C24D359C(v2, v1);
  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C22FD7E0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate;
  uint64_t v6 = MEMORY[0x1C875A200](a2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
  uint64_t v7 = *(void *)(v5 + 8);
  uint64_t v8 = a2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v7;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v6;
  *(void *)(v10 + 24) = v7;
  id v11 = (void *)swift_allocObject();
  void v11[2] = v6;
  v11[3] = v7;
  v11[4] = a3;
  swift_unknownObjectRetain_n();
  id v12 = a3;
  sub_1C24D6D58(v8, 0, (uint64_t)sub_1C22FED60, (void (*)(void, void, void))v9, (uint64_t)sub_1C22FED64, v10, (uint64_t)sub_1C22FED94, (uint64_t)v11);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C22FD944(void *a1, void *a2)
{
  return sub_1C22FBE9C(a1, a2);
}

uint64_t sub_1C22FD968()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1C22FD9A8(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 24);
  objc_msgSend(*(id *)(v1 + 16), sel_presentViewController_animated_completion_, a1, 1, 0);
  return objc_msgSend(v2, sel_setUserInteractionEnabled_, 1);
}

uint64_t sub_1C22FDA00()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C22FDA58(uint64_t a1, char a2, void *a3)
{
  return sub_1C22FC04C(a1, a2 & 1, a3, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64));
}

uint64_t sub_1C22FDA90()
{
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

void sub_1C22FDAE8()
{
  uint64_t v1 = *(void (**)(void))(v0 + 64);
  if (*(unsigned char *)(v0 + 40)) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = *(void *)(v0 + 32);
  }
  sub_1C22FDE70(*(void **)(v0 + 24), v2, *(void **)(v0 + 48));
  id v4 = v3;
  v1();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t sub_1C22FDB64(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1C254CB40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17DeleteAccountItem_account) = a1;
  id v9 = a1;
  if (objc_msgSend(v9, sel_isSourceType))
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
  }
  else if (qword_1EBB6EF40 != -1)
  {
    swift_once();
  }
  id v10 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C254C730();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();

  id v14 = objc_msgSend(v9, sel_identifier);
  sub_1C254CB20();

  id v15 = objc_msgSend(self, sel_systemRedColor);
  id v16 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID, v8, v5);
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager) = a2;
  id v17 = (uint64_t *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelText);
  *id v17 = v11;
  v17[1] = v13;
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelColor) = v15;
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelFont) = v16;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_shouldAlignWithImageInsetText) = 0;
  return v2;
}

void sub_1C22FDE70(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = sub_1C254F230();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (uint64_t *)((char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C22023A4();
  *uint64_t v12 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBF0], v9);
  uint64_t v13 = sub_1C254F260();
  id v15 = *(void (**)(uint64_t *, uint64_t))(v10 + 8);
  id v14 = (__objc2_class **)(v10 + 8);
  v15(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v70 = a3;
  id v16 = objc_msgSend(a1, sel_clinicalSharingStatus);
  id v17 = objc_msgSend(v16, sel_userStatus);

  uint64_t v18 = &unk_1EBB6E000;
  if (v17 == (id)2)
  {
    if (a2 < 1)
    {
      id v28 = self;
      id v29 = (void *)sub_1C254F430();
      id v30 = objc_msgSend(v28, sel_modelSpecificLocalizedStringKeyForKey_, v29);

      if (!v30)
      {
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      sub_1C254F470();

      if (qword_1EBB6D9B0 != -1) {
        swift_once();
      }
      id v31 = (id)qword_1EBB6D998;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_1C2269E20();
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1C255CD90;
      id v33 = objc_msgSend(a1, sel_title);
      uint64_t v34 = sub_1C254F470();
      uint64_t v36 = v35;

      *(void *)(v32 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v32 + 64) = sub_1C220D950();
      *(void *)(v32 + 32) = v34;
      *(void *)(v32 + 40) = v36;
      uint64_t v37 = sub_1C254F4B0();
      uint64_t v27 = v38;
      swift_bridgeObjectRelease();
      uint64_t v72 = v37;
    }
    else
    {
      if (qword_1EBB6D9B0 != -1) {
        swift_once();
      }
      id v19 = (id)qword_1EBB6D998;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      sub_1C2269E20();
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1C255CD90;
      id v21 = objc_msgSend(a1, sel_title);
      uint64_t v22 = sub_1C254F470();
      uint64_t v24 = v23;

      *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v20 + 64) = sub_1C220D950();
      *(void *)(v20 + 32) = v22;
      *(void *)(v20 + 40) = v24;
      uint64_t v25 = sub_1C254F4B0();
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      uint64_t v72 = v25;
      uint64_t v18 = (void *)&unk_1EBB6E000;
    }
LABEL_23:
    uint64_t v73 = v27;
    if (objc_msgSend(a1, sel_state) == (id)5)
    {
      sub_1C254F5A0();
      if (v18[488] != -1) {
        swift_once();
      }
      id v47 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      sub_1C254F5A0();
      swift_bridgeObjectRelease();
    }
    unsigned int v48 = objc_msgSend(a1, sel_isSourceType);
    uint64_t v49 = v18[488];
    if (v48)
    {
      if (v49 != -1) {
        swift_once();
      }
    }
    else if (v49 != -1)
    {
      swift_once();
    }
    id v50 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    unint64_t v51 = self;
    swift_bridgeObjectRetain();
    id v52 = objc_msgSend(v51, sel_sharedBehavior);
    if (v52)
    {
      uint64_t v53 = v52;
      unsigned int v54 = objc_msgSend(v52, sel_isiPad);

      id v55 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      uint64_t v13 = (uint64_t)objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, 0, v55, v54);

      id v56 = (void *)swift_allocObject();
      v56[2] = a1;
      v56[3] = v5;
      id v57 = v70;
      v56[4] = v70;
      id v58 = a1;
      swift_retain();
      id v59 = v57;
      unint64_t v60 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      aBlock[4] = sub_1C22FE998;
      aBlock[5] = v56;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C224DAAC;
      aBlock[3] = &block_descriptor_19_0;
      int v61 = _Block_copy(aBlock);
      swift_release();
      a3 = self;
      id v14 = &off_1E644D000;
      id v62 = objc_msgSend(a3, sel_actionWithTitle_style_handler_, v60, 2, v61);
      _Block_release(v61);

      id v4 = &off_1E644D000;
      objc_msgSend((id)v13, sel_addAction_, v62);

      id v63 = objc_msgSend(v51, sel_sharedBehavior);
      if (v63)
      {
        uint64_t v64 = v63;
        swift_bridgeObjectRelease();
        LODWORD(a1) = objc_msgSend(v64, sel_isiPad);

        if (qword_1EBB6EF40 == -1)
        {
LABEL_36:
          uint64_t v65 = a1 ^ 1;
          id v66 = (id)qword_1EBB6FBC8;
          swift_bridgeObjectRetain();
          sub_1C254C730();
          swift_bridgeObjectRelease();

          uint64_t v67 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
          id v68 = objc_msgSend(a3, (SEL)v14[493], v67, v65, 0);

          objc_msgSend((id)v13, (SEL)v4[497], v68);
          return;
        }
LABEL_38:
        swift_once();
        goto LABEL_36;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_41;
  }
  if (objc_msgSend(a1, sel_isSourceType))
  {
    if (a2 > 0) {
      goto LABEL_20;
    }
    uint64_t v39 = self;
    unint64_t v40 = (void *)sub_1C254F430();
    id v41 = objc_msgSend(v39, sel_modelSpecificLocalizedStringKeyForKey_, v40);

    if (v41)
    {
LABEL_19:
      sub_1C254F470();

LABEL_20:
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v44 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_1C254C730();
      uint64_t v27 = v46;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      uint64_t v72 = v45;
      goto LABEL_23;
    }
    __break(1u);
  }
  else if (a2 > 0)
  {
    goto LABEL_20;
  }
  id v42 = self;
  uint64_t v43 = (void *)sub_1C254F430();
  id v41 = objc_msgSend(v42, sel_modelSpecificLocalizedStringKeyForKey_, v43);

  if (v41) {
    goto LABEL_19;
  }
LABEL_42:
  __break(1u);
}

uint64_t sub_1C22FE950()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C22FE998(uint64_t a1)
{
  sub_1C22FD4E4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

void sub_1C22FE9A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C22FEA08()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C22FEA58()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1C222399C;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return MEMORY[0x1F4188298](sub_1C22FD6BC, 0, 0);
}

uint64_t sub_1C22FEB0C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C22FEB4C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C22FC948(a1, a2, a3, a4, a5, *(void **)(v5 + 16), *(void *)(v5 + 24));
}

uint64_t sub_1C22FEB54()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C22FEB94()
{
  sub_1C22FCC38(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C22FEBA4()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C22FEBDC()
{
  return sub_1C251D7CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C22FEBE4()
{
  return sub_1C251D920(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C22FEBF0(char a1, void *a2)
{
  return sub_1C251DD4C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1C22FEBFC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C22FEC3C(uint64_t a1)
{
  return sub_1C22FD7E0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1C22FEC48()
{
  if (!qword_1EA2E0C38)
  {
    type metadata accessor for DeleteAccountSourceDataSource(255);
    unint64_t v0 = sub_1C254D590();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0C38);
    }
  }
}

uint64_t sub_1C22FECA8(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C22FECC0(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C22FECD8()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C22FED10()
{
  return sub_1C22FB10C();
}

uint64_t sub_1C22FED18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C22FED98(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = a2;
  uint64_t v22 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C2550250();
    type metadata accessor for CategoryRecordQueryDescription();
    sub_1C22FF678(&qword_1EBB6F878, (void (*)(uint64_t))type metadata accessor for CategoryRecordQueryDescription);
    uint64_t result = sub_1C254F940();
    uint64_t v4 = v21[1];
    uint64_t v20 = v21[2];
    uint64_t v6 = v21[3];
    uint64_t v7 = v21[4];
    unint64_t v8 = v21[5];
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v20 = a2 + 56;
    uint64_t v6 = ~v9;
    uint64_t v10 = -v9;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v8 = v11 & *(void *)(a2 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  int64_t v12 = (unint64_t)(v6 + 64) >> 6;
  if ((v4 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!sub_1C25502D0()) {
    goto LABEL_35;
  }
  type metadata accessor for CategoryRecordQueryDescription();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v13 = v21[0];
  swift_unknownObjectRelease();
  int64_t v14 = v7;
  uint64_t v15 = v8;
  if (!v13) {
    goto LABEL_35;
  }
  while (1)
  {
    v21[0] = v13;
    sub_1C23001B8(&v22, v21);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return sub_1C21ABD08();
    }
    uint64_t result = swift_release();
    uint64_t v7 = v14;
    unint64_t v8 = v15;
    if (v4 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v8) {
      break;
    }
    uint64_t v15 = (v8 - 1) & v8;
    unint64_t v16 = __clz(__rbit64(v8)) | (v7 << 6);
    int64_t v14 = v7;
LABEL_24:
    uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v16);
    swift_retain();
    if (!v13) {
      goto LABEL_35;
    }
  }
  int64_t v14 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    return result;
  }
  if (v14 >= v12) {
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v20 + 8 * v14);
  if (v17)
  {
LABEL_23:
    uint64_t v15 = (v17 - 1) & v17;
    unint64_t v16 = __clz(__rbit64(v17)) + (v14 << 6);
    goto LABEL_24;
  }
  uint64_t v18 = v7 + 2;
  if (v7 + 2 >= v12) {
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v20 + 8 * v18);
  if (v17) {
    goto LABEL_22;
  }
  uint64_t v18 = v7 + 3;
  if (v7 + 3 >= v12) {
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v20 + 8 * v18);
  if (v17) {
    goto LABEL_22;
  }
  uint64_t v18 = v7 + 4;
  if (v7 + 4 >= v12) {
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v20 + 8 * v18);
  if (v17)
  {
LABEL_22:
    int64_t v14 = v18;
    goto LABEL_23;
  }
  int64_t v14 = v7 + 5;
  if (v7 + 5 >= v12) {
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v20 + 8 * v14);
  if (v17) {
    goto LABEL_23;
  }
  uint64_t v19 = v7 + 6;
  while (v12 != v19)
  {
    unint64_t v17 = *(void *)(v20 + 8 * v19++);
    if (v17)
    {
      int64_t v14 = v19 - 1;
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_1C21ABD08();
  return v22;
}

uint64_t CategoryCountDataProvider.__allocating_init(healthStore:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_1C22FF0DC(uint64_t a1, void *a2)
{
  uint64_t v26 = a2;
  sub_1C22FF4A4();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22FF6C0();
  uint64_t v10 = v9;
  uint64_t v27 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  int64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22FF754(0);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    uint64_t v18 = (void *)swift_allocObject();
    void v18[2] = v2;
    v18[3] = a1;
    uint64_t v25 = v10;
    uint64_t v19 = v6;
    uint64_t v20 = v26;
    v18[4] = v26;
    sub_1C22FF538();
    sub_1C22FF678(&qword_1EBB6DCE0, (void (*)(uint64_t))sub_1C22FF538);
    swift_retain();
    swift_bridgeObjectRetain();
    id v21 = v20;
    sub_1C254EB10();
    unint64_t v28 = 0;
    sub_1C22FF678(&qword_1EBB6DD10, (void (*)(uint64_t))sub_1C22FF4A4);
    sub_1C254EBE0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v5);
    sub_1C22FF678(&qword_1EBB6DC68, (void (*)(uint64_t))sub_1C22FF6C0);
    uint64_t v22 = v25;
    uint64_t v23 = sub_1C254EBC0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v22);
  }
  else
  {
    unint64_t v28 = sub_1C22050FC(MEMORY[0x1E4FBC860]);
    sub_1C22FF5A8(0);
    sub_1C254EAD0();
    sub_1C22FF678(&qword_1EA2E0C40, sub_1C22FF754);
    uint64_t v23 = sub_1C254EBC0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  return v23;
}

void sub_1C22FF4A4()
{
  if (!qword_1EBB6DD18)
  {
    sub_1C22FF538();
    sub_1C22FF678(&qword_1EBB6DCE0, (void (*)(uint64_t))sub_1C22FF538);
    unint64_t v0 = sub_1C254EB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6DD18);
    }
  }
}

void sub_1C22FF538()
{
  if (!qword_1EBB6DCE8)
  {
    sub_1C22FF5A8(255);
    sub_1C2206F9C();
    unint64_t v0 = sub_1C254EAE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6DCE8);
    }
  }
}

void sub_1C22FF5A8(uint64_t a1)
{
}

void sub_1C22FF5DC()
{
  if (!qword_1EBB6D8C0)
  {
    type metadata accessor for BrowseCategory();
    sub_1C22FF678(&qword_1EBB6FAD8, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
    unint64_t v0 = sub_1C254F340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6D8C0);
    }
  }
}

uint64_t sub_1C22FF678(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C22FF6C0()
{
  if (!qword_1EBB6DC70)
  {
    sub_1C22FF4A4();
    sub_1C22FF678(&qword_1EBB6DD10, (void (*)(uint64_t))sub_1C22FF4A4);
    unint64_t v0 = sub_1C254E910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6DC70);
    }
  }
}

void sub_1C22FF754(uint64_t a1)
{
}

void sub_1C22FF788(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C22FF7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = a1;
  _OWORD v8[3] = a2;
  _OWORD v8[4] = a3;
  sub_1C22FF538();
  swift_allocObject();
  id v9 = a3;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C254EAF0();
  *a4 = result;
  return result;
}

uint64_t sub_1C22FF89C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C22FF7EC(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), a1);
}

uint64_t sub_1C22FF8A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  swift_retain();
  swift_retain();
  sub_1C2300BF8(a4, a5, a3, (void (*)(unint64_t, void))sub_1C22290C4, v10);
  return swift_release_n();
}

void sub_1C22FF944(id a1, char a2, void (*a3)(id, uint64_t))
{
  if (a2)
  {
    id v5 = a1;
    a3(a1, 1);
    sub_1C2285A50(a1, 1);
  }
  else
  {
    a3(a1, 0);
  }
}

void sub_1C22FF9C8(uint64_t a1, int64_t a2, void (*a3)(unint64_t, void), uint64_t a4)
{
  sub_1C2300144();
  uint64_t v74 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v73 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v66 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v66 - v15;
  uint64_t v17 = type metadata accessor for BrowseCategory() - 8;
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v66 - v22;
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24)
  {
    unint64_t v37 = sub_1C22050FC(MEMORY[0x1E4FBC860]);
    a3(v37, 0);
    swift_bridgeObjectRelease();
    return;
  }
  int64_t v72 = a2;
  uint64_t v67 = a3;
  uint64_t v68 = a4;
  unint64_t v69 = v4;
  uint64_t v70 = a1;
  unint64_t v25 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v75 = *(void *)(v21 + 72);
  uint64_t v26 = a1 + v25;
  swift_bridgeObjectRetain();
  unint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v71 = v25;
  do
  {
    sub_1C21A9698(v26, (uint64_t)v23);
    sub_1C2300A3C((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v27;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C2274D28(0, *(void *)(v27 + 16) + 1, 1);
      unint64_t v25 = v71;
      unint64_t v27 = aBlock[0];
    }
    unint64_t v30 = *(void *)(v27 + 16);
    unint64_t v29 = *(void *)(v27 + 24);
    if (v30 >= v29 >> 1)
    {
      sub_1C2274D28(v29 > 1, v30 + 1, 1);
      unint64_t v25 = v71;
      unint64_t v27 = aBlock[0];
    }
    *(void *)(v27 + 16) = v30 + 1;
    uint64_t v31 = v75;
    sub_1C2300A3C((uint64_t)v20, v27 + v25 + v30 * v75, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    v26 += v31;
    --v24;
  }
  while (v24);
  swift_bridgeObjectRelease();
  aBlock[0] = MEMORY[0x1E4FBC860];
  uint64_t v32 = *(void *)(v27 + 16);
  if (v32)
  {
    swift_retain();
    unint64_t v33 = v27 + v25;
    do
    {
      id v34 = BrowseCategory.queryDescriptors.getter();
      MEMORY[0x1F4188790](v34);
      int64_t v35 = v72;
      *(&v66 - 2) = v33;
      *(&v66 - 1) = v35;
      unint64_t v36 = sub_1C2268390((void (*)(uint64_t *__return_ptr, id *))sub_1C2268C44, (uint64_t)(&v66 - 4), (unint64_t)v34);
      swift_bridgeObjectRelease();
      sub_1C2272BD4(v36);
      v33 += v31;
      --v32;
    }
    while (v32);
    swift_release_n();
  }
  else
  {
    swift_release();
  }
  uint64_t v38 = sub_1C249278C(aBlock[0]);
  swift_bridgeObjectRelease();
  unint64_t v39 = sub_1C220530C(MEMORY[0x1E4FBC860]);
  uint64_t v40 = sub_1C22FED98(v39, v38);
  swift_bridgeObjectRelease();
  aBlock[0] = MEMORY[0x1E4FBC870];
  uint64_t v41 = *(void *)(v40 + 64);
  uint64_t v71 = v40 + 64;
  uint64_t v42 = 1 << *(unsigned char *)(v40 + 32);
  uint64_t v43 = -1;
  if (v42 < 64) {
    uint64_t v43 = ~(-1 << v42);
  }
  unint64_t v44 = v43 & v41;
  int64_t v72 = (unint64_t)(v42 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v45 = 0;
  uint64_t v46 = (uint64_t)v73;
  while (1)
  {
    if (v44)
    {
      unint64_t v47 = __clz(__rbit64(v44));
      v44 &= v44 - 1;
      unint64_t v48 = v47 | (v45 << 6);
      uint64_t v49 = v75;
      goto LABEL_20;
    }
    int64_t v54 = v45 + 1;
    uint64_t v49 = v75;
    if (__OFADD__(v45, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v54 >= v72) {
      goto LABEL_38;
    }
    unint64_t v55 = *(void *)(v71 + 8 * v54);
    ++v45;
    if (!v55)
    {
      int64_t v45 = v54 + 1;
      if (v54 + 1 >= v72) {
        goto LABEL_38;
      }
      unint64_t v55 = *(void *)(v71 + 8 * v45);
      if (!v55)
      {
        int64_t v45 = v54 + 2;
        if (v54 + 2 >= v72) {
          goto LABEL_38;
        }
        unint64_t v55 = *(void *)(v71 + 8 * v45);
        if (!v55)
        {
          int64_t v45 = v54 + 3;
          if (v54 + 3 >= v72) {
            goto LABEL_38;
          }
          unint64_t v55 = *(void *)(v71 + 8 * v45);
          if (!v55) {
            break;
          }
        }
      }
    }
LABEL_37:
    unint64_t v44 = (v55 - 1) & v55;
    unint64_t v48 = __clz(__rbit64(v55)) + (v45 << 6);
LABEL_20:
    sub_1C21A9698(*(void *)(v40 + 48) + v49 * v48, (uint64_t)v16);
    uint64_t v50 = v74;
    *(void *)&v16[*(int *)(v74 + 48)] = *(void *)(*(void *)(v40 + 56) + 8 * v48);
    sub_1C2300A3C((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))sub_1C2300144);
    uint64_t v51 = *(int *)(v50 + 48);
    sub_1C21A9698((uint64_t)v14, v46);
    *(void *)(v46 + v51) = *(void *)&v14[v51];
    swift_bridgeObjectRetain();
    unint64_t v52 = swift_bridgeObjectRetain();
    unint64_t v53 = sub_1C24928FC(v52);
    swift_bridgeObjectRelease();
    sub_1C2300AA4(v46, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    sub_1C2300358(v53);
    sub_1C2300AA4((uint64_t)v14, (uint64_t (*)(void))sub_1C2300144);
  }
  int64_t v56 = v54 + 4;
  if (v56 >= v72)
  {
LABEL_38:
    swift_release();
    swift_bridgeObjectRelease();
    id v57 = (void *)swift_allocObject();
    uint64_t v58 = v68;
    v57[2] = v67;
    v57[3] = v58;
    v57[4] = v40;
    id v59 = objc_allocWithZone(MEMORY[0x1E4F2B428]);
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    sub_1C2300B14();
    swift_retain();
    unint64_t v60 = (void *)sub_1C254F8E0();
    swift_bridgeObjectRelease();
    aBlock[4] = (unint64_t)sub_1C2300B08;
    aBlock[5] = (unint64_t)v57;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (unint64_t)sub_1C2300950;
    aBlock[3] = (unint64_t)&block_descriptor_30;
    int v61 = _Block_copy(aBlock);
    id v62 = objc_msgSend(v59, sel_initWithQueryDescriptors_resultsHandler_, v60, v61);

    _Block_release(v61);
    swift_release();
    unint64_t v63 = v69;
    aBlock[0] = v69;
    type metadata accessor for CategoryCountDataProvider();
    id v64 = v62;
    swift_retain();
    sub_1C254F4F0();
    uint64_t v65 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v64, sel_setDebugIdentifier_, v65);

    objc_msgSend(*(id *)(v63 + 16), sel_executeQuery_, v64);
    return;
  }
  unint64_t v55 = *(void *)(v71 + 8 * v56);
  if (v55)
  {
    int64_t v45 = v56;
    goto LABEL_37;
  }
  while (1)
  {
    int64_t v45 = v56 + 1;
    if (__OFADD__(v56, 1)) {
      break;
    }
    if (v45 >= v72) {
      goto LABEL_38;
    }
    unint64_t v55 = *(void *)(v71 + 8 * v45);
    ++v56;
    if (v55) {
      goto LABEL_37;
    }
  }
LABEL_40:
  __break(1u);
}

void sub_1C2300144()
{
  if (!qword_1EBB6D878)
  {
    type metadata accessor for BrowseCategory();
    sub_1C2285800();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB6D878);
    }
  }
}

uint64_t sub_1C23001B8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a2;
  uint64_t v8 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_category;
  uint64_t v9 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v10 = sub_1C2457874(v8), (v11 & 1) != 0))
  {
    uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
  }
  id v12 = *(id *)(v7 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  sub_1C21A9698(v8, (uint64_t)v6);
  uint64_t v13 = v18;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *a1;
  *a1 = 0x8000000000000000;
  sub_1C2365D38(v13, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  *a1 = v17;
  swift_bridgeObjectRelease();
  return sub_1C2300AA4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
}

void sub_1C2300358(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_1C2550250();
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    sub_1C2300B14();
    sub_1C254F940();
    unint64_t v1 = (unint64_t)v17[1];
    uint64_t v16 = v17[2];
    uint64_t v2 = (uint64_t)v17[3];
    id v3 = v17[4];
    unint64_t v4 = (unint64_t)v17[5];
  }
  else
  {
    id v3 = 0;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = (void *)(a1 + 56);
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v9 = (v4 - 1) & v4;
      unint64_t v10 = __clz(__rbit64(v4)) | ((void)v3 << 6);
      char v11 = (char *)v3;
      goto LABEL_29;
    }
    uint64_t v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_32;
    }
    unint64_t v14 = v16[v13];
    char v11 = (char *)v3 + 1;
    if (!v14)
    {
      char v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8) {
        goto LABEL_32;
      }
      unint64_t v14 = v16[(void)v11];
      if (!v14)
      {
        char v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8) {
          goto LABEL_32;
        }
        unint64_t v14 = v16[(void)v11];
        if (!v14)
        {
          char v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8) {
            goto LABEL_32;
          }
          unint64_t v14 = v16[(void)v11];
          if (!v14)
          {
            char v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8) {
              goto LABEL_32;
            }
            unint64_t v14 = v16[(void)v11];
            if (!v14)
            {
              uint64_t v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                unint64_t v14 = v16[(void)v15++];
                if (v14)
                {
                  char v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1C21ABD08();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + ((void)v11 << 6);
LABEL_29:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_1C2368BB8(v17, v12);

      id v3 = v11;
      unint64_t v4 = v9;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1C25502D0())
      {
        sub_1C21AB51C(0, &qword_1EBB6EF58);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v12 = v17[0];
        swift_unknownObjectRelease();
        char v11 = (char *)v3;
        uint64_t v9 = v4;
        if (v12) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_1C23005F8(uint64_t a1, unint64_t a2, void *a3, void (*a4)(void, void), uint64_t a5, uint64_t a6)
{
  uint64_t v11 = sub_1C254E560();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    id v15 = a3;
    sub_1C254E4F0();
    id v16 = a3;
    id v17 = a3;
    uint64_t v18 = sub_1C254E550();
    os_log_type_t v19 = sub_1C254FA20();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v31 = a5;
      uint64_t v21 = (uint8_t *)v20;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v34 = v30;
      *(_DWORD *)uint64_t v21 = 136446210;
      v29[1] = v21 + 4;
      uint64_t v33 = (uint64_t)a3;
      id v22 = a3;
      sub_1C2206F9C();
      sub_1C25508F0();
      uint64_t v32 = a4;
      id v23 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v24 = sub_1C254F510();
      uint64_t v33 = sub_1C21AD354(v24, v25, &v34);
      sub_1C2550120();
      a4 = v32;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v18, v19, "Error fetching categories: %{public}s", v21, 0xCu);
      uint64_t v26 = v30;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v26, -1, -1);
      MEMORY[0x1C875A0B0](v21, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    id v28 = a3;
    a4(a3, 1);
  }
  else
  {
    if (a2)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v27 = _sSD15HealthRecordsUIAA14BrowseCategoryORszSiRs_rlE_019queryDescriptionsByE0SDyACSiGSDySo17HKQueryDescriptorCSo8NSNumberCG_SDyACSayAGGGtcfC_0(a2, a6);
    }
    else
    {
      unint64_t v27 = sub_1C22050FC(MEMORY[0x1E4FBC860]);
    }
    a4(v27, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t CategoryCountDataProvider.deinit()
{
  return v0;
}

uint64_t sub_1C2300950(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
    sub_1C2300B14();
    uint64_t v5 = sub_1C254F2D0();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2300A3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2300AA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C2300B08(uint64_t a1, unint64_t a2, void *a3)
{
  sub_1C23005F8(a1, a2, a3, *(void (**)(void, void))(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

unint64_t sub_1C2300B14()
{
  unint64_t result = qword_1EBB6EFD8;
  if (!qword_1EBB6EFD8)
  {
    sub_1C21AB51C(255, &qword_1EBB6EF58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6EFD8);
  }
  return result;
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t method lookup function for CategoryCountDataProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CategoryCountDataProvider);
}

uint64_t dispatch thunk of CategoryCountDataProvider.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of CategoryCountDataProvider.categoryCountsPublisher(categories:predicate:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of CategoryCountDataProvider.categoriesCounts(categories:predicate:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

void sub_1C2300BF8(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(unint64_t, void), uint64_t a5)
{
  unint64_t v69 = a3;
  sub_1C2300144();
  uint64_t v74 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v73 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v68 - v13;
  MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v68 - v15;
  uint64_t v17 = type metadata accessor for BrowseCategory();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  id v23 = (char *)&v68 - v22;
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = a1;
  *(void *)(v24 + 16) = a4;
  *(void *)(v24 + 24) = a5;
  uint64_t v26 = *(void *)(a1 + 16);
  if (!v26)
  {
    swift_retain();
    unint64_t v40 = sub_1C22050FC(MEMORY[0x1E4FBC860]);
    a4(v40, 0);
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v70 = v24;
  uint64_t v71 = a2;
  unint64_t v27 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v75 = *(void *)(v18 + 72);
  int64_t v72 = v27;
  uint64_t v28 = v25 + v27;
  uint64_t v29 = v25;
  swift_retain();
  uint64_t v68 = v29;
  swift_bridgeObjectRetain();
  unint64_t v30 = MEMORY[0x1E4FBC860];
  do
  {
    sub_1C21A9698(v28, (uint64_t)v23);
    sub_1C2300A3C((uint64_t)v23, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C2274D28(0, *(void *)(v30 + 16) + 1, 1);
      unint64_t v30 = aBlock[0];
    }
    unint64_t v33 = *(void *)(v30 + 16);
    unint64_t v32 = *(void *)(v30 + 24);
    if (v33 >= v32 >> 1)
    {
      sub_1C2274D28(v32 > 1, v33 + 1, 1);
      unint64_t v30 = aBlock[0];
    }
    *(void *)(v30 + 16) = v33 + 1;
    uint64_t v34 = v75;
    sub_1C2300A3C((uint64_t)v21, v30 + v72 + v33 * v75, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    v28 += v34;
    --v26;
  }
  while (v26);
  swift_bridgeObjectRelease();
  aBlock[0] = MEMORY[0x1E4FBC860];
  uint64_t v35 = *(void *)(v30 + 16);
  if (v35)
  {
    swift_retain();
    unint64_t v36 = v30 + v72;
    do
    {
      id v37 = BrowseCategory.queryDescriptors.getter();
      MEMORY[0x1F4188790](v37);
      uint64_t v38 = v71;
      *(&v68 - 2) = v36;
      *(&v68 - 1) = v38;
      unint64_t v39 = sub_1C2268390((void (*)(uint64_t *__return_ptr, id *))sub_1C23014A0, (uint64_t)(&v68 - 4), (unint64_t)v37);
      swift_bridgeObjectRelease();
      sub_1C2272BD4(v39);
      v36 += v34;
      --v35;
    }
    while (v35);
    swift_release_n();
  }
  else
  {
    swift_release();
  }
  uint64_t v41 = sub_1C249278C(aBlock[0]);
  swift_bridgeObjectRelease();
  unint64_t v42 = sub_1C220530C(MEMORY[0x1E4FBC860]);
  uint64_t v43 = sub_1C22FED98(v42, v41);
  swift_bridgeObjectRelease();
  aBlock[0] = MEMORY[0x1E4FBC870];
  uint64_t v44 = *(void *)(v43 + 64);
  uint64_t v71 = v43 + 64;
  uint64_t v45 = 1 << *(unsigned char *)(v43 + 32);
  uint64_t v46 = -1;
  if (v45 < 64) {
    uint64_t v46 = ~(-1 << v45);
  }
  unint64_t v47 = v46 & v44;
  int64_t v72 = (unint64_t)(v45 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v48 = 0;
  uint64_t v49 = (uint64_t)v73;
  while (1)
  {
    if (v47)
    {
      unint64_t v50 = __clz(__rbit64(v47));
      v47 &= v47 - 1;
      unint64_t v51 = v50 | (v48 << 6);
      goto LABEL_20;
    }
    int64_t v56 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v57 = v70;
    if (v56 >= v72) {
      goto LABEL_38;
    }
    unint64_t v58 = *(void *)(v71 + 8 * v56);
    ++v48;
    if (!v58)
    {
      int64_t v48 = v56 + 1;
      if (v56 + 1 >= v72) {
        goto LABEL_38;
      }
      unint64_t v58 = *(void *)(v71 + 8 * v48);
      if (!v58)
      {
        int64_t v48 = v56 + 2;
        if (v56 + 2 >= v72) {
          goto LABEL_38;
        }
        unint64_t v58 = *(void *)(v71 + 8 * v48);
        if (!v58)
        {
          int64_t v48 = v56 + 3;
          if (v56 + 3 >= v72) {
            goto LABEL_38;
          }
          unint64_t v58 = *(void *)(v71 + 8 * v48);
          if (!v58) {
            break;
          }
        }
      }
    }
LABEL_37:
    unint64_t v47 = (v58 - 1) & v58;
    unint64_t v51 = __clz(__rbit64(v58)) + (v48 << 6);
LABEL_20:
    sub_1C21A9698(*(void *)(v43 + 48) + v75 * v51, (uint64_t)v16);
    uint64_t v52 = v74;
    *(void *)&v16[*(int *)(v74 + 48)] = *(void *)(*(void *)(v43 + 56) + 8 * v51);
    sub_1C2300A3C((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))sub_1C2300144);
    uint64_t v53 = *(int *)(v52 + 48);
    sub_1C21A9698((uint64_t)v14, v49);
    *(void *)(v49 + v53) = *(void *)&v14[v53];
    swift_bridgeObjectRetain();
    unint64_t v54 = swift_bridgeObjectRetain();
    unint64_t v55 = sub_1C24928FC(v54);
    swift_bridgeObjectRelease();
    sub_1C2300AA4(v49, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    sub_1C2300358(v55);
    sub_1C2300AA4((uint64_t)v14, (uint64_t (*)(void))sub_1C2300144);
  }
  int64_t v59 = v56 + 4;
  if (v59 >= v72)
  {
LABEL_38:
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v60 = (void *)swift_allocObject();
    v60[2] = sub_1C2301450;
    v60[3] = v57;
    v60[4] = v43;
    id v61 = objc_allocWithZone(MEMORY[0x1E4F2B428]);
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    sub_1C2300B14();
    swift_retain();
    id v62 = (void *)sub_1C254F8E0();
    swift_bridgeObjectRelease();
    aBlock[4] = (unint64_t)sub_1C23014C4;
    aBlock[5] = (unint64_t)v60;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (unint64_t)sub_1C2300950;
    aBlock[3] = (unint64_t)&block_descriptor_22;
    unint64_t v63 = _Block_copy(aBlock);
    id v64 = objc_msgSend(v61, sel_initWithQueryDescriptors_resultsHandler_, v62, v63);

    _Block_release(v63);
    swift_release();
    unint64_t v65 = v69;
    aBlock[0] = v69;
    type metadata accessor for CategoryCountDataProvider();
    id v66 = v64;
    swift_retain();
    sub_1C254F4F0();
    uint64_t v67 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v66, sel_setDebugIdentifier_, v67);

    objc_msgSend(*(id *)(v65 + 16), sel_executeQuery_, v66);
    swift_release();

    return;
  }
  unint64_t v58 = *(void *)(v71 + 8 * v59);
  if (v58)
  {
    int64_t v48 = v59;
    goto LABEL_37;
  }
  while (1)
  {
    int64_t v48 = v59 + 1;
    if (__OFADD__(v59, 1)) {
      break;
    }
    if (v48 >= v72) {
      goto LABEL_38;
    }
    unint64_t v58 = *(void *)(v71 + 8 * v48);
    ++v59;
    if (v58) {
      goto LABEL_37;
    }
  }
LABEL_40:
  __break(1u);
}

uint64_t objectdestroyTm_2()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C230140C(uint64_t a1, uint64_t a2)
{
  return sub_1C22FF8A8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1C2301418()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C2301450(void *a1, char a2)
{
  sub_1C22FF944(a1, a2 & 1, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t objectdestroy_2Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C23014A0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C2268C44(a1, a2);
}

id sub_1C23014C8()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell____lazy_storage___subtitleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell____lazy_storage___subtitleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell____lazy_storage___subtitleLabel);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB2950], 1280);
    objc_msgSend(v4, sel_setFont_, v5);

    id v6 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v4, sel_setTextColor_, v6);

    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

double sub_1C23015D8()
{
  double result = 15.0;
  xmmword_1EA303A90 = xmmword_1C2563B30;
  *(_OWORD *)&qword_1EA303AA0 = xmmword_1C2563B40;
  return result;
}

id sub_1C23015F8(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_titleView;
  id v10 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemTitleView());
  uint64_t v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueView;
  *(void *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ExpandedRangeValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueView;
  *(void *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MultiValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell____lazy_storage___subtitleLabel] = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewConstraints] = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewConstraints] = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_subtitleToBottomConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewToBottomConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewToBottomConstraint] = 0;
  unint64_t v14 = &v11[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_item];
  *(_OWORD *)unint64_t v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  *((void *)v14 + 4) = 0;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for RecordCell();
  id v15 = objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C2301998();

  return v15;
}

id sub_1C23017B0(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_titleView;
  id v4 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemTitleView());
  id v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueView;
  *(void *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ExpandedRangeValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v7 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueView;
  *(void *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MultiValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell____lazy_storage___subtitleLabel] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewConstraints] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewConstraints] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_subtitleToBottomConstraint] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewToBottomConstraint] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewToBottomConstraint] = 0;
  id v8 = &v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_item];
  *(_OWORD *)id v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((void *)v8 + 4) = 0;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for RecordCell();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

void sub_1C2301998()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v2);

  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v1, sel_setBackgroundView_, v3);

  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v1, sel_setSelectedBackgroundView_, v4);

  id v5 = objc_msgSend(v1, sel_selectedBackgroundView);
  if (v5)
  {
    uint64_t v6 = v5;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
    uint64_t v7 = (void *)sub_1C254FEE0();
    objc_msgSend(v6, sel_setBackgroundColor_, v7);
  }
  id v8 = objc_msgSend(v1, sel_contentView);
  id v9 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_titleView];
  objc_msgSend(v8, sel_addSubview_, v9);

  id v10 = objc_msgSend(v1, sel_contentView);
  id v91 = *(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueView];
  objc_msgSend(v10, sel_addSubview_);

  id v11 = objc_msgSend(v1, sel_contentView);
  id v90 = *(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueView];
  objc_msgSend(v11, sel_addSubview_);

  id v12 = objc_msgSend(v1, sel_contentView);
  id v13 = sub_1C23014C8();
  objc_msgSend(v12, sel_addSubview_, v13);

  unint64_t v14 = self;
  sub_1C21ACA3C();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C255DB90;
  id v16 = objc_msgSend(v9, sel_leadingAnchor);
  id v17 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v18 = objc_msgSend(v17, sel_leadingAnchor);

  id v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  *(void *)(v15 + 32) = v19;
  id v20 = objc_msgSend(v9, sel_trailingAnchor);
  id v21 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v22 = objc_msgSend(v21, sel_trailingAnchor);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(void *)(v15 + 40) = v23;
  id v24 = objc_msgSend(v9, sel_topAnchor);
  id v25 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v26 = objc_msgSend(v25, sel_topAnchor);

  id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);
  *(void *)(v15 + 48) = v27;
  id v28 = sub_1C23014C8();
  id v29 = objc_msgSend(v28, sel_leadingAnchor);

  id v30 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v31 = objc_msgSend(v30, sel_leadingAnchor);

  if (qword_1EA2DD6A8 != -1) {
    swift_once();
  }
  id v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, *((double *)&xmmword_1EA303A90 + 1));

  *(void *)(v15 + 56) = v32;
  id v33 = sub_1C23014C8();
  id v34 = objc_msgSend(v33, sel_trailingAnchor);

  id v35 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v36 = objc_msgSend(v35, (SEL)&selRef_titleWidthConstraint + 4);

  id v37 = objc_msgSend(v34, (SEL)&selRef_chartDataCacheController + 7, v36, -*(double *)&qword_1EA303AA8);
  *(void *)(v15 + 64) = v37;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  uint64_t v38 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_activateConstraints_, v38);

  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1C255DBA0;
  id v88 = v14;
  id v40 = objc_msgSend(v91, (SEL)&selRef_minusOrderedSet_ + 2);
  id v41 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v42 = objc_msgSend(v41, (SEL)&selRef_minusOrderedSet_ + 2);

  id v43 = objc_msgSend(v40, (SEL)&selRef_chartDataCacheController + 7, v42, *((double *)&xmmword_1EA303A90 + 1));
  *(void *)(v39 + 32) = v43;
  id v44 = objc_msgSend(v91, sel_trailingAnchor);
  id v45 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v46 = objc_msgSend(v45, sel_trailingAnchor);

  id v47 = objc_msgSend(v44, (SEL)&selRef_chartDataCacheController + 7, v46, -*(double *)&qword_1EA303AA8);
  *(void *)(v39 + 40) = v47;
  id v48 = objc_msgSend(v91, sel_topAnchor);
  id v49 = objc_msgSend(v9, sel_bottomAnchor);
  id v50 = objc_msgSend(v48, (SEL)&selRef_chartDataCacheController + 7, v49, *(double *)&xmmword_1EA303A90);

  *(void *)(v39 + 48) = v50;
  id v51 = objc_msgSend(v91, sel_bottomAnchor);
  id v52 = sub_1C23014C8();
  id v53 = objc_msgSend(v52, (SEL)&selRef_unsupportedSearchResults + 3);

  id v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v53);
  *(void *)(v39 + 56) = v54;
  sub_1C254F730();
  uint64_t v89 = OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewConstraints;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewConstraints] = v39;
  swift_bridgeObjectRelease();
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_1C255DBA0;
  id v56 = objc_msgSend(v90, sel_leadingAnchor);
  id v57 = objc_msgSend(v1, sel_contentView);
  id v58 = objc_msgSend(v57, sel_leadingAnchor);

  id v59 = objc_msgSend(v56, (SEL)&selRef_chartDataCacheController + 7, v58, *((double *)&xmmword_1EA303A90 + 1));
  *(void *)(v55 + 32) = v59;
  id v60 = objc_msgSend(v90, sel_trailingAnchor);
  id v61 = objc_msgSend(v1, sel_contentView);
  id v62 = objc_msgSend(v61, sel_trailingAnchor);

  id v63 = objc_msgSend(v60, (SEL)&selRef_chartDataCacheController + 7, v62, -*(double *)&qword_1EA303AA8);
  *(void *)(v55 + 40) = v63;
  id v64 = objc_msgSend(v90, sel_topAnchor);
  id v65 = objc_msgSend(v9, sel_bottomAnchor);
  id v66 = objc_msgSend(v64, sel_constraintEqualToAnchor_, v65);

  *(void *)(v55 + 48) = v66;
  id v67 = objc_msgSend(v90, sel_bottomAnchor);
  id v68 = sub_1C23014C8();
  id v69 = objc_msgSend(v68, sel_topAnchor);

  id v70 = objc_msgSend(v67, sel_constraintEqualToAnchor_, v69);
  *(void *)(v55 + 56) = v70;
  sub_1C254F730();
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewConstraints] = v55;
  swift_bridgeObjectRelease();
  if (*(void *)&v1[v89])
  {
    swift_bridgeObjectRetain();
    uint64_t v71 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    objc_msgSend(v88, sel_activateConstraints_, v71);

    id v72 = sub_1C23014C8();
    id v73 = objc_msgSend(v72, sel_bottomAnchor);

    id v74 = objc_msgSend(v1, sel_contentView);
    id v75 = objc_msgSend(v74, sel_bottomAnchor);

    id v76 = objc_msgSend(v73, sel_constraintEqualToAnchor_constant_, v75, -*(double *)&qword_1EA303AA0);
    uint64_t v77 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_subtitleToBottomConstraint];
    *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_subtitleToBottomConstraint] = v76;

    id v78 = objc_msgSend(v91, sel_bottomAnchor);
    id v79 = objc_msgSend(v1, sel_contentView);
    id v80 = objc_msgSend(v79, sel_bottomAnchor);

    id v81 = objc_msgSend(v78, sel_constraintEqualToAnchor_constant_, v80, -*(double *)&qword_1EA303AA0);
    long long v82 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewToBottomConstraint];
    *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewToBottomConstraint] = v81;

    id v83 = objc_msgSend(v90, sel_bottomAnchor);
    id v84 = objc_msgSend(v1, sel_contentView);
    id v85 = objc_msgSend(v84, sel_bottomAnchor);

    id v86 = objc_msgSend(v83, sel_constraintEqualToAnchor_constant_, v85, -*(double *)&qword_1EA303AA0);
    uint64_t v87 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewToBottomConstraint];
    *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewToBottomConstraint] = v86;

    sub_1C23043A8();
  }
  else
  {
    __break(1u);
  }
}

void sub_1C2302538()
{
  uint64_t v1 = sub_1C254E560();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_item;
  swift_beginAccess();
  sub_1C2227014(v5, (uint64_t)v16);
  if (v16[3])
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    type metadata accessor for RecordItem();
    if (swift_dynamicCast())
    {
      swift_release();
      sub_1C2302AE4();
      return;
    }
  }
  else
  {
    sub_1C229B07C((uint64_t)v16, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
  }
  sub_1C254E510();
  id v6 = v0;
  uint64_t v7 = sub_1C254E550();
  os_log_type_t v8 = sub_1C254FA20();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v14 = v1;
    uint64_t v15 = v10;
    uint64_t v11 = v10;
    *(_DWORD *)id v9 = 136446210;
    sub_1C2227014(v5, (uint64_t)v16);
    sub_1C225EBC8(0, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
    uint64_t v12 = sub_1C254F510();
    v16[0] = sub_1C21AD354(v12, v13, &v15);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v7, v8, "Incorrect view model for RecordItem: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v11, -1, -1);
    MEMORY[0x1C875A0B0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v14);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_1C2302810()
{
  uint64_t v1 = sub_1C254E560();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_item;
  swift_beginAccess();
  sub_1C2227014(v5, (uint64_t)v17);
  if (v17[3])
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    type metadata accessor for RecordItem();
    if (swift_dynamicCast()) {
      return v16;
    }
  }
  else
  {
    sub_1C229B07C((uint64_t)v17, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
  }
  sub_1C254E510();
  id v7 = v0;
  os_log_type_t v8 = sub_1C254E550();
  os_log_type_t v9 = sub_1C254FA20();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v15 = v1;
    uint64_t v16 = v11;
    uint64_t v12 = v11;
    *(_DWORD *)uint64_t v10 = 136446210;
    sub_1C2227014(v5, (uint64_t)v17);
    sub_1C225EBC8(0, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
    uint64_t v13 = sub_1C254F510();
    v17[0] = sub_1C21AD354(v13, v14, &v16);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v8, v9, "Incorrect view model for RecordItem: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v12, -1, -1);
    MEMORY[0x1C875A0B0](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return 0;
}

void sub_1C2302AE4()
{
  sub_1C2303454((uint64_t)&v98);
  uint64_t v1 = v99;
  if (v99)
  {
    uint64_t v2 = v98;
    uint64_t v4 = v100;
    uint64_t v3 = v101;
    uint64_t v91 = v100;
    uint64_t v92 = v98;
    uint64_t v5 = v0;
    id v90 = v0;
    id v6 = v102;
    uint64_t v7 = v105;
    uint64_t v95 = v103;
    uint64_t v96 = v104;
    uint64_t v8 = v106;
    uint64_t v9 = v107;
    uint64_t v87 = v107;
    uint64_t v88 = v105;
    uint64_t v10 = v108;
    uint64_t v11 = v109;
    uint64_t v85 = v109;
    uint64_t v93 = v102;
    unint64_t v94 = v110 | ((unint64_t)v111 << 32);
    uint64_t v89 = *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_titleView];
    uint64_t v101 = &type metadata for UserDomainConceptFeedItemViewData;
    char v102 = &protocol witness table for UserDomainConceptFeedItemViewData;
    uint64_t v12 = swift_allocObject();
    uint64_t v98 = v12;
    *(void *)(v12 + 16) = v2;
    *(void *)(v12 + 24) = v1;
    *(void *)(v12 + 32) = v4;
    *(void *)(v12 + 40) = v3;
    uint64_t v84 = (uint64_t)v3;
    *(void *)(v12 + 48) = v6;
    *(void *)(v12 + 56) = v95;
    *(void *)(v12 + 64) = v96;
    *(void *)(v12 + 72) = v7;
    *(void *)(v12 + 80) = v8;
    *(void *)(v12 + 88) = v9;
    uint64_t v86 = v10;
    *(void *)(v12 + 96) = v10;
    *(void *)(v12 + 104) = v11;
    *(unsigned char *)(v12 + 112) = v94 & 1;
    v13.i64[0] = 0xFFFFFFFFFFLL;
    v13.i64[1] = 0xFFFFFFFFFFLL;
    uint64x2_t v14 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v94), v13);
    int16x8_t v15 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v14, (uint64x2_t)xmmword_1C2560720), (int32x4_t)vshlq_u64(v14, (uint64x2_t)xmmword_1C2560710));
    *(int8x8_t *)v15.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v15), (int8x8_t)0x1000100010001);
    *(_DWORD *)(v12 + 113) = vmovn_s16(v15).u32[0];
    uint64_t v16 = v1;
    uint64_t v17 = v89 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v83 = v93;
    id v82 = v95;
    id v81 = v96;
    uint64_t v18 = v8;
    swift_bridgeObjectRetain();
    sub_1C225F0B8((uint64_t)&v98, v17, (unint64_t *)&qword_1EA2DEE88, &qword_1EA2DEE90);
    swift_endAccess();
    sub_1C223A4E8();
    sub_1C229B07C((uint64_t)&v98, (unint64_t *)&qword_1EA2DEE88, &qword_1EA2DEE90);
    id v19 = *(char **)&v90[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueView];
    id v20 = &v19[OBJC_IVAR___HRExpandedRangeValueView_viewData];
    swift_beginAccess();
    uint64_t v79 = *((void *)v20 + 1);
    uint64_t v80 = *(void *)v20;
    uint64_t v77 = *((void *)v20 + 3);
    uint64_t v78 = *((void *)v20 + 2);
    id v21 = (void *)*((void *)v20 + 6);
    id v75 = (void *)*((void *)v20 + 5);
    id v76 = (void *)*((void *)v20 + 4);
    long long v74 = *((_OWORD *)v20 + 4);
    uint64_t v23 = *((void *)v20 + 10);
    uint64_t v22 = *((void *)v20 + 11);
    unint64_t v24 = *((unsigned int *)v20 + 24) | ((unint64_t)v20[100] << 32);
    *(void *)id v20 = v92;
    *((void *)v20 + 1) = v16;
    *((void *)v20 + 2) = v91;
    *((void *)v20 + 3) = v3;
    *((void *)v20 + 4) = v93;
    *((void *)v20 + 5) = v95;
    *((void *)v20 + 6) = v96;
    *((void *)v20 + 7) = v88;
    *((void *)v20 + 8) = v18;
    *((void *)v20 + 9) = v87;
    *((void *)v20 + 10) = v86;
    *((void *)v20 + 11) = v85;
    *((_DWORD *)v20 + 24) = v94;
    v20[100] = BYTE4(v94);
    uint64_t v73 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v25 = v83;
    id v26 = v82;
    id v27 = v81;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C22AC064(v80, v79, v78, v77, v76, v75, v21);
    sub_1C22C3080();
    id v28 = v19;
    objc_msgSend(v19, sel_setHidden_, 0, v74, v23, v22, v24);
    uint64_t v29 = sub_1C2302810();
    if (!v29)
    {
      id v44 = (unsigned char *)(v89 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron);
      swift_beginAccess();
      *id v44 = 1;
      sub_1C22399E4();
      objc_msgSend(v90, sel_setUserInteractionEnabled_, 0);
      sub_1C22AC064(v92, v16, v91, (uint64_t)v3, v93, v95, v96);
LABEL_33:
      sub_1C23043A8();
      return;
    }
    sub_1C21F4424(v29 + 16, (uint64_t)v97);
    swift_release();
    sub_1C21F44EC(v97, (uint64_t)&v98);
    id v30 = v101;
    id v31 = v102;
    __swift_project_boxed_opaque_existential_1Tm(&v98, (uint64_t)v101);
    uint64_t v32 = v92;
    id v33 = v93;
    uint64_t v34 = v91;
    if ((((uint64_t (*)(ValueMetadata *, _UNKNOWN **))v31[12])(v30, v31) & 1) == 0)
    {
LABEL_18:
      id v48 = v101;
      id v49 = v102;
      __swift_project_boxed_opaque_existential_1Tm(&v98, (uint64_t)v101);
      char v50 = ((uint64_t (*)(ValueMetadata *, _UNKNOWN **))v49[8])(v48, v49);
      id v51 = (unsigned char *)(v89 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron);
      if (v50)
      {
        swift_beginAccess();
        *id v51 = 0;
        sub_1C22399E4();
        objc_msgSend(v90, sel_setUserInteractionEnabled_, 1);
        id v52 = sub_1C23014C8();
        id v53 = v101;
        id v54 = v102;
        __swift_project_boxed_opaque_existential_1Tm(&v98, (uint64_t)v101);
        ((void (*)(ValueMetadata *, _UNKNOWN **))v54[5])(v53, v54);
        if (v55)
        {
          id v56 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v56 = 0;
        }
        objc_msgSend(v52, sel_setText_, v56);

        id v57 = v101;
        id v58 = v102;
        __swift_project_boxed_opaque_existential_1Tm(&v98, (uint64_t)v101);
        if (((uint64_t (*)(ValueMetadata *, _UNKNOWN **))v58[9])(v57, v58))
        {
          id v59 = sub_1C23014C8();
          id v60 = v101;
          id v61 = v102;
          __swift_project_boxed_opaque_existential_1Tm(&v98, (uint64_t)v101);
          uint64_t v62 = ((uint64_t (*)(ValueMetadata *, _UNKNOWN **))v61[5])(v60, v61);
          uint64_t v64 = v63;
          id v65 = self;
          id v66 = objc_msgSend(v65, sel_secondaryLabelColor);
          id v67 = objc_msgSend(self, sel_configurationWithScale_, 1);
          id v68 = (void *)sub_1C254F430();
          id v69 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v68, v67);

          if (v69)
          {
            if (v64) {
              uint64_t v70 = v64;
            }
            else {
              uint64_t v70 = 0xE000000000000000;
            }
            if (!v64) {
              uint64_t v62 = 0;
            }
            id v71 = objc_msgSend(v65, sel_secondaryLabelColor);
            id v72 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v62, v70, v66, v69, v71);
            swift_bridgeObjectRelease();

            objc_msgSend(v59, sel_setAttributedText_, v72);
            sub_1C22AC064(v92, v73, v91, v84, v93, v95, v96);

            goto LABEL_32;
          }
          goto LABEL_36;
        }
      }
      else
      {
        swift_beginAccess();
        *id v51 = 1;
        sub_1C22399E4();
        objc_msgSend(v90, sel_setUserInteractionEnabled_, 0);
      }
      sub_1C22AC064(v32, v73, v34, v84, v33, v95, v96);
LABEL_32:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v98);
      goto LABEL_33;
    }
    uint64_t v35 = *(void *)&v90[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueView];
    id v36 = v101;
    id v37 = v102;
    __swift_project_boxed_opaque_existential_1Tm(&v98, (uint64_t)v101);
    uint64_t v38 = ((uint64_t (*)(ValueMetadata *, _UNKNOWN **))v37[10])(v36, v37);
    uint64_t v39 = v90;
    id v40 = sub_1C2304A54(v38);
    swift_bridgeObjectRelease();

    id v41 = (uint64_t *)(v35 + OBJC_IVAR____TtC15HealthRecordsUI14MultiValueView_viewData);
    swift_beginAccess();
    uint64_t v42 = *v41;
    *id v41 = (uint64_t)v40;
    if (v42)
    {
      if (v40)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v43 = sub_1C22ABD80(v42, (uint64_t)v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v43) {
          goto LABEL_14;
        }
      }
    }
    else if (!v40)
    {
      goto LABEL_15;
    }
    sub_1C22AA434();
LABEL_14:
    swift_bridgeObjectRelease();
LABEL_15:
    objc_msgSend(v28, sel_setHidden_, 1);
    if (*(void *)&v39[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewConstraints])
    {
      id v45 = self;
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
      swift_bridgeObjectRetain();
      id v46 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      objc_msgSend(v45, sel_deactivateConstraints_, v46);

      if (*(void *)&v39[OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewConstraints])
      {
        uint64_t v34 = v91;
        swift_bridgeObjectRetain();
        id v47 = (void *)sub_1C254F700();
        swift_bridgeObjectRelease();
        objc_msgSend(v45, sel_activateConstraints_, v47);

        uint64_t v32 = v92;
        id v33 = v93;
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_36:
    __break(1u);
    return;
  }
  sub_1C23043A8();
}

uint64_t sub_1C2303454@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v2);
  id v75 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C2302810();
  if (!result)
  {
    *(void *)(a1 + 93) = 0;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  uint64_t v72 = result;
  uint64_t v73 = (void *)(result + 16);
  sub_1C21F4424(result + 16, (uint64_t)v76 + 1);
  if (qword_1EBB6EF38 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1EBB6FBB0;
  swift_bridgeObjectRetain();
  uint64_t v70 = sub_1C254C730();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();

  uint64_t v15 = v77;
  uint64_t v16 = v78;
  __swift_project_boxed_opaque_existential_1Tm((void *)((char *)v76 + 1), v77);
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v15, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    uint64_t v74 = v14;
    sub_1C230498C((uint64_t)v6, (uint64_t (*)(void))sub_1C21EA6B8);
    uint64_t v17 = v72;
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v17 = v72;
    id v18 = objc_msgSend(*(id *)(v72 + 56), sel_utcDateFormatter);
    id v19 = (void *)sub_1C254CA50();
    id v20 = objc_msgSend(v18, sel_relativeStringFromDate_, v19);

    uint64_t v70 = sub_1C254F470();
    uint64_t v74 = v21;

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v22 = *(void *)(v17 + 40);
  uint64_t v23 = *(void *)(v17 + 48);
  __swift_project_boxed_opaque_existential_1Tm(v73, v22);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 16))(v76, v22, v23);
  unsigned char *v75 = v76[0];
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = v77;
  uint64_t v25 = v78;
  __swift_project_boxed_opaque_existential_1Tm((void *)((char *)v76 + 1), v77);
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 24))(v24, v25);
  uint64_t v28 = v27;
  BrowseCategory.systemImageName.getter();
  if (v29
    && (id v30 = (void *)sub_1C254F430(),
        swift_bridgeObjectRelease(),
        id v31 = objc_msgSend(self, sel_systemImageNamed_, v30),
        v30,
        v31))
  {
    id v32 = objc_msgSend(v31, sel_imageWithRenderingMode_, 1);
  }
  else
  {
    id v32 = 0;
  }
  id v33 = BrowseCategory.tintColorForTemplateImage.getter();
  uint64_t v35 = v77;
  uint64_t v34 = v78;
  __swift_project_boxed_opaque_existential_1Tm((void *)((char *)v76 + 1), v77);
  id v36 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v34 + 8) + 16))(v35);
  uint64_t v69 = v26;
  if (!v36) {
    goto LABEL_16;
  }
  id v37 = v36;
  if (!objc_msgSend(v36, sel_hasRenderableContent))
  {

LABEL_16:
    id v38 = 0;
    goto LABEL_17;
  }
  id v38 = objc_msgSend(self, sel_referenceRangeViewDataFromInspectableValueInRange_, v37);

LABEL_17:
  uint64_t v40 = v77;
  uint64_t v39 = v78;
  __swift_project_boxed_opaque_existential_1Tm((void *)((char *)v76 + 1), v77);
  uint64_t v68 = (*(uint64_t (**)(uint64_t))(*(void *)(v39 + 8) + 24))(v40);
  uint64_t v71 = v41;
  uint64_t v43 = v77;
  uint64_t v42 = v78;
  __swift_project_boxed_opaque_existential_1Tm((void *)((char *)v76 + 1), v77);
  uint64_t v73 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v42 + 8) + 32))(v43);
  uint64_t v45 = v44;
  uint64_t v46 = v77;
  uint64_t v47 = v78;
  __swift_project_boxed_opaque_existential_1Tm((void *)((char *)v76 + 1), v77);
  int v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 88))(v46, v47);
  id v66 = v38;
  swift_bridgeObjectRetain();
  if (v45)
  {
    id v48 = v38;
    uint64_t v49 = v74;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v50 = v32;
    uint64_t v51 = v28;
    id v52 = v33;
    id v53 = v33;
    id v54 = v48;
    uint64_t v73 = (void *)sub_1C254F530();
    uint64_t v55 = v49;
    uint64_t v57 = v56;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v58 = v74;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v50 = v32;
    uint64_t v51 = v28;
    id v52 = v33;
    id v53 = v33;
    id v54 = v38;
    uint64_t v55 = v58;
    uint64_t v57 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v59 = v50;
  id v60 = v53;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v61 = v71;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  sub_1C230498C((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  BOOL v62 = (v67 & 1) == 0;
  int v63 = 1;
  *(void *)a1 = v69;
  *(void *)(a1 + 8) = v51;
  if (!v62) {
    int v63 = 16777217;
  }
  *(void *)(a1 + 16) = v70;
  *(void *)(a1 + 24) = v55;
  *(void *)(a1 + 32) = v32;
  *(void *)(a1 + 40) = v52;
  uint64_t v64 = v68;
  *(void *)(a1 + 48) = v66;
  *(void *)(a1 + 56) = v64;
  id v65 = v73;
  *(void *)(a1 + 64) = v61;
  *(void *)(a1 + 72) = v65;
  *(void *)(a1 + 80) = v57;
  *(void *)(a1 + 88) = 0;
  *(unsigned char *)(a1 + 100) = 1;
  *(_DWORD *)(a1 + 96) = v63;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76 + 1);
}

uint64_t sub_1C2303B74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (void *)type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v4);
  uint64_t v85 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254CAD0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C2302810();
  if (!result)
  {
    *(void *)(a2 + 93) = 0;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 80) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  id v83 = v4;
  uint64_t v84 = result;
  uint64_t v80 = (void *)(result + 16);
  sub_1C21F4424(result + 16, (uint64_t)v86 + 1);
  if (qword_1EBB6EF38 != -1) {
    swift_once();
  }
  id v14 = (id)qword_1EBB6FBB0;
  swift_bridgeObjectRetain();
  uint64_t v82 = sub_1C254C730();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();

  uint64_t v17 = v87;
  uint64_t v18 = v88;
  __swift_project_boxed_opaque_existential_1Tm((void *)((char *)v86 + 1), v87);
  (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    uint64_t v81 = v16;
    sub_1C230498C((uint64_t)v8, (uint64_t (*)(void))sub_1C21EA6B8);
    uint64_t v19 = v84;
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    uint64_t v19 = v84;
    id v20 = objc_msgSend(*(id *)(v84 + 56), sel_utcDateFormatter);
    uint64_t v21 = (void *)sub_1C254CA50();
    id v22 = objc_msgSend(v20, sel_relativeStringFromDate_, v21);

    uint64_t v23 = sub_1C254F470();
    uint64_t v81 = v24;
    uint64_t v82 = v23;

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v25 = *(void *)(v19 + 40);
  uint64_t v26 = *(void *)(v19 + 48);
  __swift_project_boxed_opaque_existential_1Tm(v80, v25);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v26 + 16))(v86, v25, v26);
  *uint64_t v85 = v86[0];
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = a1[3];
  uint64_t v28 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v27);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 32);
  id v30 = (void *)v29(v27, v28);
  uint64_t v32 = v31;
  v29(v27, v28);
  if (v33)
  {
    swift_bridgeObjectRelease();
    id v34 = objc_msgSend(self, sel_sharedConverter);
    uint64_t v35 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v36 = objc_msgSend(v34, sel_synonymForUCUMUnitString_, v35);

    uint64_t v80 = (void *)sub_1C254F470();
    uint64_t v32 = v37;
  }
  else
  {
    uint64_t v80 = v30;
  }
  uint64_t v38 = a1[3];
  uint64_t v39 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v38);
  uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v79 = v40;
  }
  else
  {
    id v43 = (id)qword_1EBB6FBB0;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_1C254C730();
    uint64_t v42 = v44;
    swift_bridgeObjectRelease();
  }
  BrowseCategory.systemImageName.getter();
  if (v45
    && (uint64_t v46 = (void *)sub_1C254F430(),
        swift_bridgeObjectRelease(),
        id v47 = objc_msgSend(self, sel_systemImageNamed_, v46),
        v46,
        v47))
  {
    id v48 = objc_msgSend(v47, sel_imageWithRenderingMode_, 1);
  }
  else
  {
    id v48 = 0;
  }
  id v83 = BrowseCategory.tintColorForTemplateImage.getter();
  uint64_t v49 = a1[3];
  uint64_t v50 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v49);
  uint64_t v51 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v50 + 16))(v49, v50);
  if (!v51) {
    goto LABEL_22;
  }
  id v52 = v51;
  if (!objc_msgSend(v51, sel_hasRenderableContent))
  {

LABEL_22:
    id v74 = 0;
    goto LABEL_23;
  }
  id v74 = objc_msgSend(self, sel_referenceRangeViewDataFromInspectableValueInRange_, v52);

LABEL_23:
  uint64_t v53 = a1[3];
  uint64_t v54 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v53);
  uint64_t v78 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 24))(v53, v54);
  uint64_t v56 = v55;
  uint64_t v57 = v87;
  uint64_t v58 = v88;
  __swift_project_boxed_opaque_existential_1Tm((void *)((char *)v86 + 1), v87);
  int v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 88))(v57, v58);
  uint64_t v77 = v56;
  id v75 = v48;
  swift_bridgeObjectRetain();
  uint64_t v59 = v81;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v60 = v48;
  id v61 = v83;
  id v62 = v74;
  id v63 = v74;
  if (v32)
  {
    uint64_t v64 = (void *)sub_1C254F530();
    uint64_t v66 = v65;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v66 = 0;
    uint64_t v64 = v80;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v67 = v60;
  id v68 = v61;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v69 = v77;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  sub_1C230498C((uint64_t)v85, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  BOOL v70 = (v76 & 1) == 0;
  int v71 = 1;
  *(void *)a2 = v79;
  *(void *)(a2 + 8) = v42;
  if (!v70) {
    int v71 = 16777217;
  }
  *(void *)(a2 + 16) = v82;
  *(void *)(a2 + 24) = v59;
  id v72 = v83;
  *(void *)(a2 + 32) = v75;
  *(void *)(a2 + 40) = v72;
  uint64_t v73 = v78;
  *(void *)(a2 + 48) = v62;
  *(void *)(a2 + 56) = v73;
  *(void *)(a2 + 64) = v69;
  *(void *)(a2 + 72) = v64;
  *(void *)(a2 + 80) = v66;
  *(void *)(a2 + 88) = 0;
  *(unsigned char *)(a2 + 100) = 1;
  *(_DWORD *)(a2 + 96) = v71;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v86 + 1);
}

void sub_1C23043A8()
{
  uint64_t v0 = (void *)sub_1C2302810();
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = v0 + 2;
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    __swift_project_boxed_opaque_existential_1Tm(v0 + 2, v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    if (v6)
    {
      char v7 = 0;
    }
    else
    {
      uint64_t v8 = v1[5];
      uint64_t v9 = v1[6];
      __swift_project_boxed_opaque_existential_1Tm(v2, v8);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 96))(v8, v9)) {
        char v7 = 2;
      }
      else {
        char v7 = 1;
      }
    }
    sub_1C23044B0(v7);
    swift_release();
  }
  else
  {
    sub_1C23044B0(1);
  }
}

void sub_1C23044B0(char a1)
{
  if (a1)
  {
    if (a1 != 1)
    {
      uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_subtitleToBottomConstraint);
      if (v11)
      {
        objc_msgSend(v11, sel_setActive_, 0);
        id v12 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewToBottomConstraint);
        if (v12)
        {
          objc_msgSend(v12, sel_setActive_, 0);
          uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewToBottomConstraint);
          if (v13)
          {
            objc_msgSend(v13, sel_setActive_, 1);
            id v14 = sub_1C23014C8();
            objc_msgSend(v14, sel_setHidden_, 1);

            uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueView);
            uint64_t v7 = 1;
            goto LABEL_17;
          }
LABEL_28:
          __break(1u);
          return;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_subtitleToBottomConstraint);
    if (v2)
    {
      objc_msgSend(v2, sel_setActive_, 0);
      uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewToBottomConstraint);
      if (v3)
      {
        objc_msgSend(v3, sel_setActive_, 1);
        uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewToBottomConstraint);
        if (v4)
        {
          objc_msgSend(v4, sel_setActive_, 0);
          id v5 = sub_1C23014C8();
          objc_msgSend(v5, sel_setHidden_, 1);

          uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueView);
          uint64_t v7 = 0;
LABEL_17:
          objc_msgSend(v6, sel_setHidden_, v7);
          return;
        }
        goto LABEL_22;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_subtitleToBottomConstraint);
  if (!v8)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  objc_msgSend(v8, sel_setActive_, 1);
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_rangeValueViewToBottomConstraint);
  if (!v9)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  objc_msgSend(v9, sel_setActive_, 0);
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_multiValueViewToBottomConstraint);
  if (!v10)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  objc_msgSend(v10, sel_setActive_, 0);
  id v15 = sub_1C23014C8();
  objc_msgSend(v15, sel_setHidden_, 0);
}

id sub_1C23046CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecordCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RecordCell()
{
  return self;
}

uint64_t sub_1C23047FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C2304850(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI10RecordCell_item;
  swift_beginAccess();
  sub_1C225F0B8(a1, v3, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
  swift_endAccess();
  sub_1C2302538();
  return sub_1C229B07C(a1, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
}

void (*sub_1C23048F8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2304958;
}

void sub_1C2304958(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C2302538();
  }
}

uint64_t sub_1C230498C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C23049EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 117, 7);
}

void *sub_1C2304A54(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  objc_super v2 = (void *)(a1 + 32);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    sub_1C2303B74(v2, (uint64_t)&v20);
    uint64_t v8 = v21;
    if (v21)
    {
      uint64_t v9 = v20;
      long long v18 = v23;
      long long v19 = v22;
      long long v16 = v25;
      long long v17 = v24;
      long long v15 = v26;
      uint64_t v10 = v28;
      uint64_t v11 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_1C226D384(0, v3[2] + 1, 1, v3);
      }
      unint64_t v13 = v3[2];
      unint64_t v12 = v3[3];
      if (v13 >= v12 >> 1) {
        uint64_t v3 = sub_1C226D384((void *)(v12 > 1), v13 + 1, 1, v3);
      }
      v3[2] = v13 + 1;
      uint64_t v4 = &v3[13 * v13];
      v4[4] = v9;
      v4[5] = v8;
      *((_OWORD *)v4 + 3) = v19;
      *((_OWORD *)v4 + 4) = v18;
      *((_OWORD *)v4 + 5) = v17;
      *((_OWORD *)v4 + 6) = v16;
      *((_OWORD *)v4 + 7) = v15;
      *((unsigned char *)v4 + 128) = v11 & 1;
      v5.i64[0] = 0xFFFFFFFFFFLL;
      v5.i64[1] = 0xFFFFFFFFFFLL;
      uint64x2_t v6 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v11 | (unint64_t)(v10 << 32)), v5);
      int16x8_t v7 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v6, (uint64x2_t)xmmword_1C2560720), (int32x4_t)vshlq_u64(v6, (uint64x2_t)xmmword_1C2560710));
      *(int8x8_t *)v7.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v7), (int8x8_t)0x1000100010001);
      *(_DWORD *)((char *)v4 + 129) = vmovn_s16(v7).u32[0];
    }
    v2 += 5;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1C2304C10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void *a6)
{
  uint64_t v31 = a6;
  int v30 = a5;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  long long v26 = a1;
  uint64_t v27 = a2;
  uint64_t v24 = sub_1C254FC60();
  uint64_t v7 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254FC00();
  MEMORY[0x1F4188790](v10);
  uint64_t v11 = sub_1C254F200();
  MEMORY[0x1F4188790](v11 - 8);
  *(void *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider) = 0;
  uint64_t v25 = v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_parentViewController;
  swift_unknownObjectWeakInit();
  *(void *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_cancellable) = 0;
  uint64_t v23 = OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_workQueue;
  v22[1] = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  swift_retain();
  sub_1C254F1E0();
  uint64_t v32 = MEMORY[0x1E4FBC860];
  sub_1C2309FEC((unint64_t *)&qword_1EBB6FF88, MEMORY[0x1E4FBCC10]);
  unint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C21AB620(0, &qword_1EBB6FF50, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C2309EB0((unint64_t *)&qword_1EBB6FF58, &qword_1EBB6FF50, v12);
  sub_1C2550200();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCC58], v24);
  *(void *)(v6 + v23) = sub_1C254FCB0();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_dataSourceSections) = MEMORY[0x1E4FBC860];
  *(void *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_removedRecordsSections) = v13;
  *(void *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_categorySectionIndexes) = MEMORY[0x1E4FBC870];
  id v14 = v26;
  uint64_t v15 = v27;
  *(void *)(v6 + 48) = v26;
  sub_1C21F4914(v15, v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_accountIdentifier);
  uint64_t v16 = v29;
  *(void *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProviderSubject) = v28;
  *(void *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_timelineDisplayState) = v16;
  *(unsigned char *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_isRenderingForConcept) = v30;
  LOBYTE(v32) = 0;
  sub_1C22007E0();
  swift_allocObject();
  id v17 = v14;
  swift_retain();
  swift_retain();
  *(void *)(v6 + 40) = sub_1C254EAA0();
  long long v18 = v31;
  swift_unknownObjectWeakAssign();
  swift_release();
  long long v19 = ConceptsDataSource.init(arrangedSections:isHidden:)(v13, 0);
  uint64_t v32 = *(void *)((char *)v19
                  + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProviderSubject);
  swift_allocObject();
  swift_weakInit();
  sub_1C2309F1C();
  sub_1C2309FEC(&qword_1EA2E0DA0, (void (*)(uint64_t))sub_1C2309F1C);
  swift_retain();
  swift_retain();
  uint64_t v20 = sub_1C254ECC0();

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  sub_1C2268334(v15);
  swift_release();
  *(void *)((char *)v19 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_cancellable) = v20;
  swift_release();
  return v19;
}

uint64_t sub_1C23050D4(void **a1)
{
  uint64_t v2 = sub_1C254F1C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int8x16_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254F200();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    uint64_t v20 = sub_1C254FC70();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v10;
    *(void *)(v13 + 24) = v12;
    aBlock[4] = sub_1C230A074;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_45;
    long long v18 = _Block_copy(aBlock);
    uint64_t v19 = v6;
    id v14 = v10;
    swift_retain();
    swift_release();
    sub_1C254F1E0();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1C2309FEC((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C21AB620(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C2309EB0((unint64_t *)&qword_1EBB6FF40, (unint64_t *)&qword_1EBB6FF30, v15);
    sub_1C2550200();
    uint64_t v16 = v18;
    id v17 = (void *)v20;
    MEMORY[0x1C87581B0](0, v9, v5, v18);
    _Block_release(v16);
    swift_release();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  }
  return result;
}

void sub_1C230541C(void *a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v2 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider);
    *(void *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider) = a1;
    id v3 = a1;

    sub_1C230582C();
    sub_1C244073C(0);
  }
  else
  {
    sub_1C244073C(1);
  }
}

void sub_1C23054A0(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a2;
  uint64_t v4 = sub_1C254DC90();
  uint64_t v20 = *(void *)(v4 - 8);
  uint64_t v21 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254D440();
  uint64_t v19 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254DB50();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(self, sel_sharedBehavior);
  if (!v14)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v15 = v14;
  id v16 = objc_msgSend(v14, sel_features);

  if (!v16)
  {
LABEL_10:
    __break(1u);
    return;
  }
  unsigned int v17 = objc_msgSend(v16, sel_stanley);

  if (!v17)
  {
    sub_1C254DAE0();
    sub_1C254DAF0();
    goto LABEL_7;
  }
  long long v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_categorySectionIndexes);
  swift_beginAccess();
  if (sub_1C24F23C8(a1, *v18))
  {
    sub_1C254DAE0();
    sub_1C254DB10();
LABEL_7:
    sub_1C254DB40();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return;
  }
  sub_1C254D420();
  sub_1C2309E50();
  sub_1C2309FEC(&qword_1EA2E0D80, (void (*)(uint64_t))sub_1C2309E50);
  swift_unknownObjectRetain();
  sub_1C254D680();
  sub_1C254DC70();
  sub_1C254D410();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v21);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
}

void sub_1C230582C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider);
  if (v2)
  {
    objc_msgSend(v2, sel_setLoadingNextPage_, 1);
    id v3 = *(void **)(v0 + v1);
    if (v3)
    {
      uint64_t v4 = swift_allocObject();
      swift_weakInit();
      uint64_t v15 = sub_1C2309E28;
      uint64_t v16 = v4;
      uint64_t v11 = MEMORY[0x1E4F143A8];
      uint64_t v12 = 1107296256;
      uint64_t v13 = sub_1C246035C;
      id v14 = &block_descriptor_31;
      uint64_t v5 = _Block_copy(&v11);
      id v6 = v3;
      swift_release();
      objc_msgSend(v6, sel_startCollectingDataUntilRecordWithUUID_withUpdateHandler_, 0, v5);
      _Block_release(v5);
    }
  }
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = *(void **)(v0 + v1);
  if (v8)
  {
    uint64_t v15 = sub_1C2309E38;
    uint64_t v16 = v7;
    uint64_t v11 = MEMORY[0x1E4F143A8];
    uint64_t v12 = 1107296256;
    uint64_t v13 = sub_1C2306718;
    id v14 = &block_descriptor_32;
    uint64_t v9 = _Block_copy(&v11);
    id v10 = v8;
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_setErrorHandler_, v9);
    swift_release();
    _Block_release(v9);
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_1C2305A24(char a1)
{
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    if (a1)
    {
      sub_1C254E510();
      uint64_t v8 = sub_1C254E550();
      os_log_type_t v9 = sub_1C254FA00();
      if (os_log_type_enabled(v8, v9))
      {
        id v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v10 = 0;
        _os_log_impl(&dword_1C21A1000, v8, v9, "Loading new page of data", v10, 2u);
        MEMORY[0x1C875A0B0](v10, -1, -1);
      }

      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
      v13[7] = 1;
      swift_retain();
      sub_1C254EA70();
      swift_release();
      sub_1C2306784();
      swift_retain();
      sub_1C254D560();
      swift_release();
      sub_1C254DA10();
      swift_release();
      swift_bridgeObjectRelease();
    }
    uint64_t v11 = *(void **)(v7 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider);
    if (v11)
    {
      id v12 = v11;
      objc_msgSend(v12, sel_setLoadingNextPage_, 0);
    }
    return swift_release();
  }
  return result;
}

void sub_1C2305C38(void *a1)
{
  uint64_t v2 = sub_1C254F1A0();
  uint64_t v50 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_1C254F220();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v45 - v9;
  uint64_t v11 = sub_1C254F1C0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v53 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C254F200();
  uint64_t v54 = *(void *)(v14 - 8);
  uint64_t v55 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v18 = Strong;
    if (a1)
    {
      uint64_t aBlock = a1;
      id v19 = a1;
      sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
      sub_1C21AB51C(0, &qword_1EA2E0D70);
      if (swift_dynamicCast())
      {
        uint64_t v47 = v12;
        uint64_t v48 = v11;
        id v49 = v62;
        id v20 = objc_msgSend(v62, sel_domain);
        uint64_t v21 = sub_1C254F470();
        uint64_t v23 = v22;

        if (v21 == sub_1C254F470() && v23 == v24)
        {
          swift_bridgeObjectRelease_n();
          id v25 = v49;
        }
        else
        {
          char v26 = sub_1C2550870();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v25 = v49;
          if ((v26 & 1) == 0) {
            goto LABEL_12;
          }
        }
        if (objc_msgSend(v25, sel_code) == (id)100)
        {
          sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
          uint64_t v27 = (void *)sub_1C254FC70();
          id v60 = sub_1C2309E48;
          uint64_t v61 = v18;
          uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
          uint64_t v57 = 1107296256;
          uint64_t v58 = sub_1C224E544;
          uint64_t v59 = &block_descriptor_38;
          uint64_t v28 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          sub_1C254F1E0();
          uint64_t aBlock = (void *)MEMORY[0x1E4FBC860];
          sub_1C2309FEC((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
          uint64_t v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
          sub_1C21AB620(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
          sub_1C2309EB0((unint64_t *)&qword_1EBB6FF40, (unint64_t *)&qword_1EBB6FF30, v29);
          int v30 = v53;
          uint64_t v31 = v48;
          sub_1C2550200();
          MEMORY[0x1C87581B0](0, v16, v30, v28);

          _Block_release(v28);
          swift_release();

          (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v31);
          (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v55);
          return;
        }
LABEL_12:
        id v32 = objc_msgSend(v25, sel_domain);
        uint64_t v33 = sub_1C254F470();
        uint64_t v35 = v34;

        if (v33 == sub_1C254F470() && v35 == v36)
        {
          swift_bridgeObjectRelease_n();
          id v37 = v49;
        }
        else
        {
          char v38 = sub_1C2550870();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v37 = v49;
          if ((v38 & 1) == 0)
          {
LABEL_18:
            swift_release();

            return;
          }
        }
        if (objc_msgSend(v37, sel_code) == (id)1001)
        {
          sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
          uint64_t v46 = sub_1C254FC70();
          sub_1C254F210();
          void *v4 = 450;
          uint64_t v39 = v50;
          (*(void (**)(void *, void, uint64_t))(v50 + 104))(v4, *MEMORY[0x1E4FBCAC8], v2);
          MEMORY[0x1C8757750](v8, v4);
          (*(void (**)(void *, uint64_t))(v39 + 8))(v4, v2);
          uint64_t v51 = *(void *)(v51 + 8);
          ((void (*)(char *, uint64_t))v51)(v8, v52);
          id v60 = sub_1C2309E40;
          uint64_t v61 = v18;
          uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
          uint64_t v57 = 1107296256;
          uint64_t v58 = sub_1C224E544;
          uint64_t v59 = &block_descriptor_35_0;
          uint64_t v40 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          sub_1C254F1E0();
          uint64_t aBlock = (void *)MEMORY[0x1E4FBC860];
          sub_1C2309FEC((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
          uint64_t v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
          sub_1C21AB620(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
          sub_1C2309EB0((unint64_t *)&qword_1EBB6FF40, (unint64_t *)&qword_1EBB6FF30, v41);
          uint64_t v42 = v53;
          uint64_t v43 = v48;
          sub_1C2550200();
          uint64_t v44 = (void *)v46;
          MEMORY[0x1C8758120](v10, v16, v42, v40);

          _Block_release(v40);
          swift_release();

          (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v43);
          (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v55);
          ((void (*)(char *, uint64_t))v51)(v10, v52);
          return;
        }
        goto LABEL_18;
      }
    }
    swift_release();
  }
}

void sub_1C23064C0(uint64_t a1)
{
  uint64_t v2 = (void *)MEMORY[0x1C875A200](a1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_parentViewController);
  if (v2)
  {
    id v11 = v2;
    id v3 = objc_msgSend(v2, sel_navigationController);
    id v4 = objc_msgSend(v3, sel_topViewController);

    if (v4)
    {
      sub_1C21AB51C(0, &qword_1EA2DE3F0);
      id v5 = v11;
      id v6 = v4;
      char v7 = sub_1C254FF70();

      if (v7)
      {
        id v8 = objc_msgSend(v5, sel_navigationController);
        if (v8)
        {
          uint64_t v9 = v8;
        }
        id v10 = objc_msgSend(self, sel_defaultCenter);
        if (qword_1EA2DD788 != -1) {
          swift_once();
        }
        objc_msgSend(v10, sel_postNotificationName_object_, qword_1EA2E28A0, a1);
      }
    }
  }
}

id sub_1C2306674(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_dataSourceSections) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  *(void *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_removedRecordsSections) = v2;
  swift_bridgeObjectRelease();
  id v3 = (void *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_categorySectionIndexes);
  swift_beginAccess();
  void *v3 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRelease();
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider), sel_reload);
}

void sub_1C2306718(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

unint64_t sub_1C2306784()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_displayItemProvider);
  if (v2)
  {
    id v3 = v2;
    id v4 = sub_1C2309664(v3);
    uint64_t v5 = MEMORY[0x1E4FBC860];
    if (v4) {
      id v6 = v4;
    }
    else {
      id v6 = (id)MEMORY[0x1E4FBC860];
    }
    *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_removedRecordsSections) = v6;
    swift_bridgeObjectRelease();
    unint64_t result = (unint64_t)objc_msgSend(v3, sel_numberOfGroups);
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v8 = result;
      if (result)
      {
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        do
        {
          uint64_t v11 = v10 + 1;
          uint64_t v12 = sub_1C23068D4(v10, v3, v9);
          sub_1C227283C((uint64_t)v12);
          uint64_t v13 = v5;
          uint64_t v9 = *(void *)(v5 + 16);
          uint64_t v10 = v11;
        }
        while (v8 != v11);
      }
      else
      {
        uint64_t v13 = MEMORY[0x1E4FBC860];
      }
      uint64_t v15 = OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_dataSourceSections;
      *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_dataSourceSections) = v13;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(v1 + v15);
      swift_bridgeObjectRetain();
      uint64_t v16 = swift_bridgeObjectRetain();
      sub_1C227283C(v16);

      return v17;
    }
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_dataSourceSections);
    swift_bridgeObjectRetain();
    uint64_t v14 = swift_bridgeObjectRetain();
    sub_1C227283C(v14);
    return v18;
  }
  return result;
}

char *sub_1C23068D4(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v267 = a3;
  v282 = a2;
  uint64_t v228 = sub_1C254E560();
  v250 = *(char **)(v228 - 8);
  MEMORY[0x1F4188790](v228);
  v278 = (char *)v225 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v261 = sub_1C254CB40();
  v269 = *(void (***)(char *, uint64_t))(v261 - 8);
  MEMORY[0x1F4188790](v261);
  v260 = (char *)v225 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v283 = sub_1C254CD90();
  v276 = *(void (***)(char *, uint64_t))(v283 - 8);
  MEMORY[0x1F4188790](v283);
  v280 = (char *)v225 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v277 = sub_1C254D9B0();
  v281 = *(void **)(v277 - 8);
  v275 = v281;
  uint64_t v10 = MEMORY[0x1F4188790](v277);
  v266 = (char *)v225 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  v263 = (char *)v225 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  v256 = (char *)v225 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  v255 = (char *)v225 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v254 = (char *)v225 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  v253 = (char *)v225 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  v265 = (char *)v225 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  v264 = (char *)v225 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  v252 = (char *)v225 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  v251 = (char *)v225 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)v225 - v30;
  sub_1C2309560();
  uint64_t v33 = v32 - 8;
  MEMORY[0x1F4188790](v32);
  uint64_t v35 = (void *)((char *)v225 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v36 = objc_msgSend(a2, sel_numberOfDisplayItemsForGroupAtIndex_, a1);
  id v37 = *(char **)((char *)v3 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_timelineDisplayState);
  char v38 = *((unsigned char *)v3 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_isRenderingForConcept);
  uint64_t v305 = 0;
  *(void *)&long long v306 = v36;
  unint64_t v279 = (unint64_t)v36;
  *((void *)&v306 + 1) = a1;
  v307 = v37;
  char v308 = v38;
  id v309 = 0;
  id v310 = 0;
  unint64_t v39 = MEMORY[0x1E4FBC860];
  v311 = (char *)MEMORY[0x1E4FBC860];
  v312 = MEMORY[0x1E4FBC860];
  uint64_t v40 = (uint64_t)v35 + *(int *)(v33 + 56);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  sub_1C254EA80();
  uint64_t v41 = v302;
  uint64_t v42 = v303;

  v259 = v4;
  uint64_t v43 = (uint64_t)v4 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_accountIdentifier;
  uint64_t v44 = v31;
  uint64_t v284 = a1;
  uint64_t v45 = sub_1C243854C(v40, a1, v282, (uint64_t)v42, v43);
  uint64_t v47 = v46;
  swift_bridgeObjectRelease_n();
  swift_release();

  unint64_t v48 = v277;
  *uint64_t v35 = v45;
  v35[1] = v47;
  v258 = v35;
  v273 = (void (*)(char *, uint64_t, unint64_t))v281[2];
  v274 = (char *)(v281 + 2);
  v273(v44, v40, v48);
  id v49 = sub_1C226D014(0, 1, 1, v39);
  unint64_t isa = (unint64_t)v49[2].isa;
  unint64_t v50 = (unint64_t)v49[3].isa;
  unint64_t v52 = isa + 1;
  if (isa >= v50 >> 1) {
    goto LABEL_102;
  }
  while (1)
  {
    v49[2].unint64_t isa = (Class)v52;
    uint64_t v53 = (void (*)(unint64_t, char *, uint64_t))v275[4];
    unint64_t v271 = (*((unsigned __int8 *)v275 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v275 + 80);
    v272 = v53;
    uint64_t v270 = v275[9];
    v275 += 4;
    v53((unint64_t)v49 + v271 + v270 * isa, v44, v48);
    v311 = (char *)v49;
    Class v54 = v49[2].isa;
    BOOL v55 = __OFADD__(v267, v54);
    uint64_t v56 = (char *)v54 + v267;
    uint64_t v57 = v278;
    unint64_t v58 = v279;
    if (v55)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
      JUMPOUT(0x1C2308864);
    }
    uint64_t v59 = (uint64_t)(v56 - 1);
    if (__OFSUB__(v56, 1)) {
      goto LABEL_104;
    }
    id v60 = ((char *)v259
                     + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_categorySectionIndexes);
    swift_beginAccess();
    uint64_t v61 = v59;
    v262 = v60;
    id v49 = v60;
    sub_1C23681F0((uint64_t *)&v301, v61);
    swift_endAccess();
    if ((v58 & 0x8000000000000000) != 0) {
      goto LABEL_105;
    }
    uint64_t v44 = v280;
    unint64_t v48 = (unint64_t)v282;
    if (!v58) {
      break;
    }
    uint64_t v63 = 0;
    unint64_t v52 = (unint64_t)(v276 + 1);
    v257 = v269 + 1;
    v268 = (uint64_t *)&v312;
    v269 = (void (**)(char *, uint64_t))(v281 + 1);
    v227 = (void (**)(char *, uint64_t))(v250 + 8);
    *(void *)&long long v62 = 136446466;
    long long v226 = v62;
    unint64_t v50 = MEMORY[0x1E4FBC840] + 8;
    v225[1] = MEMORY[0x1E4FBC840] + 8;
    ++v276;
    while (v58 != v63)
    {
      MEMORY[0x1C8755260](v63, v284);
      id v49 = sub_1C254CD30();
      unint64_t isa = (unint64_t)objc_msgSend((id)v48, sel_displayItemForIndexPath_, v49);

      if (isa)
      {
        uint64_t v305 = v63;
        switch((unint64_t)objc_msgSend((id)isa, sel_displayItemType))
        {
          case 2uLL:
            Class v64 = v312[2].isa;
            v281 = (void *)isa;
            if (v64)
            {
              sub_1C243AE04();
              swift_bridgeObjectRetain();
              uint64_t v65 = v260;
              sub_1C254CB30();
              sub_1C254CAF0();
              (*v257)(v65, v261);
              uint64_t v66 = v251;
              sub_1C254D990();
              id v67 = v66;
              uint64_t v68 = v277;
              v273(v252, (uint64_t)v67, v277);
              unint64_t v69 = (unint64_t)v311;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v69 = sub_1C226D014(0, *(void *)(v69 + 16) + 1, 1, v69);
              }
              unint64_t v71 = *(void *)(v69 + 16);
              unint64_t v70 = *(void *)(v69 + 24);
              if (v71 >= v70 >> 1) {
                unint64_t v69 = sub_1C226D014(v70 > 1, v71 + 1, 1, v69);
              }
              *(void *)(v69 + 16) = v71 + 1;
              v272(v69 + v271 + v71 * v270, v252, v68);
              v311 = (char *)v69;
              swift_bridgeObjectRelease();
              v312 = MEMORY[0x1E4FBC860];
              (*v269)(v251, v68);
            }
            id v72 = v309;
            unint64_t v73 = (unint64_t)v311;
            uint64_t v74 = *v258;
            uint64_t v75 = v258[1];
            v250 = (char *)v310;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            id v76 = v72;
            uint64_t v77 = (uint64_t)v264;
            sub_1C2438C20(v284, v281, v282, v74, v75, (uint64_t)v264);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            v273(v265, v77, v277);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v73 = sub_1C226D014(0, *(void *)(v73 + 16) + 1, 1, v73);
            }
            unint64_t v58 = v279;
            uint64_t v44 = v280;
            unint64_t v79 = *(void *)(v73 + 16);
            unint64_t v78 = *(void *)(v73 + 24);
            unint64_t isa = (unint64_t)v281;
            uint64_t v80 = v282;
            uint64_t v57 = v278;
            if (v79 >= v78 >> 1) {
              unint64_t v73 = sub_1C226D014(v78 > 1, v79 + 1, 1, v73);
            }
            *(void *)(v73 + 16) = v79 + 1;
            id v49 = v277;
            v272(v73 + v271 + v79 * v270, v265, v277);

            v311 = (char *)v73;
            (*v269)(v264, (uint64_t)v49);
            unint64_t v52 = (unint64_t)v276;
            (*v276)(v44, v283);
            unint64_t v48 = (unint64_t)v80;
            break;
          case 4uLL:
            id v49 = &v305;
            sub_1C2438F14((void *)isa, (void *)v48, (uint64_t)&v301);
            if (v303)
            {
              sub_1C21F44EC(&v301, (uint64_t)&v285);
              sub_1C21F4424((uint64_t)&v285, (uint64_t)&v301);
              uint64_t v93 = v312;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v312 = v93;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                uint64_t v93 = sub_1C226CD5C(0, (int64_t)v93[2].isa + 1, 1, v93);
                v312 = v93;
              }
              uint64_t v95 = (void *)v48;
              uint64_t v96 = (void *)isa;
              unint64_t v98 = (unint64_t)v93[2].isa;
              unint64_t v97 = (unint64_t)v93[3].isa;
              if (v98 >= v97 >> 1) {
                v312 = sub_1C226CD5C((void *)(v97 > 1), v98 + 1, 1, v93);
              }
              uint64_t v99 = (uint64_t)v303;
              uint64_t v100 = v304;
              uint64_t v101 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v301, (uint64_t)v303);
              unint64_t isa = (unint64_t)v225;
              MEMORY[0x1F4188790](v101);
              uint64_t v103 = (char *)v225 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
              (*(void (**)(char *))(v104 + 16))(v103);
              sub_1C2507304(v98, (uint64_t)v103, v268, v99, v100);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v301);
              id v49 = v312;

              v312 = v49;
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v285);
              unint64_t v52 = (unint64_t)v276;
              uint64_t v44 = v280;
              (*v276)(v280, v283);
              unint64_t v58 = v279;
              unint64_t v48 = (unint64_t)v95;
            }
            else
            {
              (*(void (**)(char *, uint64_t))v52)(v44, v283);

              sub_1C2227100((uint64_t)&v301);
            }
            break;
          case 5uLL:
            uint64_t v105 = (uint64_t)v307;
            id v106 = v309;
            uint64_t v107 = v311;
            uint64_t v108 = (char *)v312;
            id v247 = v310;
            v248 = v107;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v109 = (id)isa;
            swift_retain();
            id v110 = v106;
            id v111 = objc_msgSend(v109, sel_title);
            v250 = v108;
            id v246 = v110;
            if (!v111) {
              goto LABEL_36;
            }
            uint64_t v112 = v111;
            uint64_t v113 = sub_1C254F470();
            unint64_t v115 = v114;

            uint64_t v116 = HIBYTE(v115) & 0xF;
            if ((v115 & 0x2000000000000000) == 0) {
              uint64_t v116 = v113 & 0xFFFFFFFFFFFFLL;
            }
            if (!v116)
            {
              swift_bridgeObjectRelease();
LABEL_36:
              if (v106 && (id v117 = objc_msgSend(v110, sel_title)) != 0)
              {
                unint64_t v118 = v117;
                uint64_t v113 = sub_1C254F470();
                unint64_t v115 = v119;
              }
              else
              {
                uint64_t v113 = 0;
                unint64_t v115 = 0xE000000000000000;
              }
            }
            swift_retain();
            id v249 = v109;
            sub_1C2427664(v109, v113, v115, 0, 0, 0, 0, v105, (uint64_t)&v285);
            uint64_t v243 = (uint64_t)v285;
            uint64_t v244 = v105;
            int v242 = v286;
            uint64_t v203 = (void *)*((void *)&v286 + 1);
            uint64_t v204 = v288;
            id v240 = v289;
            v241 = v287;
            id v205 = v290;
            id v231 = v291;
            uint64_t v232 = v293;
            uint64_t v238 = v294;
            v239 = v292;
            uint64_t v229 = v295;
            int v237 = v297;
            id v234 = v296;
            uint64_t v235 = v298;
            v245 = (char *)type metadata accessor for MedicalRecordTimelineItem();
            uint64_t v206 = swift_allocObject();
            type metadata accessor for MedicalRecordTimelineItemCell();
            uint64_t v230 = sub_1C2309FEC(&qword_1EA2E0D10, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItemCell);
            v281 = v203;
            swift_bridgeObjectRetain();
            id v207 = v205;
            swift_bridgeObjectRetain();
            id v208 = v231;
            id v236 = v231;
            uint64_t v209 = v232;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v210 = v234;
            id v233 = v234;
            uint64_t v211 = v235;
            swift_retain();
            uint64_t v212 = sub_1C254D330();
            *(void *)(v206 + 144) = v213;
            *(void *)(v206 + 16) = v243;
            *(unsigned char *)(v206 + 24) = v242;
            uint64_t v214 = v241;
            *(void *)(v206 + 32) = v281;
            *(void *)(v206 + 40) = v214;
            id v215 = v240;
            *(void *)(v206 + 48) = v204;
            *(void *)(v206 + 56) = v215;
            *(void *)(v206 + 64) = v207;
            *(void *)(v206 + 72) = v208;
            *(void *)(v206 + 80) = v239;
            *(void *)(v206 + 88) = v209;
            uint64_t v216 = v229;
            *(void *)(v206 + 96) = v238;
            *(void *)(v206 + 104) = v216;
            *(void *)(v206 + 112) = v210;
            *(unsigned char *)(v206 + 120) = v237;
            *(void *)(v206 + 128) = v211;
            *(void *)(v206 + 136) = v212;
            v217 = v250;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            swift_release();

            v218 = v217;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              v218 = sub_1C226CD5C(0, *((void *)v217 + 2) + 1, 1, v217);
            }
            uint64_t v57 = v278;
            unint64_t v58 = v279;
            unint64_t isa = (unint64_t)v276;
            unint64_t v220 = (unint64_t)v218[2].isa;
            unint64_t v219 = (unint64_t)v218[3].isa;
            id v49 = (v220 + 1);
            unint64_t v48 = (unint64_t)v282;
            if (v220 >= v219 >> 1) {
              v218 = sub_1C226CD5C((void *)(v219 > 1), v220 + 1, 1, v218);
            }
            v287 = v245;
            uint64_t v288 = sub_1C2309FEC(&qword_1EA2E0D60, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItem);
            v285 = (void *)v206;
            v218[2].unint64_t isa = (Class)v49;
            sub_1C21F44EC((long long *)&v285, (uint64_t)&v218[5 * v220 + 4]);

            v312 = v218;
            unint64_t v52 = isa;
            uint64_t v44 = v280;
            (*(void (**)(char *, uint64_t))isa)(v280, v283);
            break;
          case 6uLL:
            uint64_t v120 = (void (**)(char *, uint64_t))v52;
            id v121 = v309;
            uint64_t v122 = v312;
            v285 = (void *)v63;
            long long v286 = v306;
            v287 = v307;
            LOBYTE(v288) = v308;
            id v289 = v309;
            id v290 = v310;
            v291 = v311;
            v292 = v312;
            unint64_t v123 = (void *)isa;
            id v124 = v310;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            id v125 = v121;
            v281 = v123;
            sub_1C24398FC(v123, (uint64_t *)&v301);
            goto LABEL_67;
          case 7uLL:
            unint64_t v48 = (unint64_t)v312;
            if (v312[2].isa)
            {
              sub_1C243AE04();
              swift_bridgeObjectRetain();
              char v126 = v260;
              sub_1C254CB30();
              sub_1C254CAF0();
              (*v257)(v126, v261);
              uint64_t v127 = v253;
              sub_1C254D990();
              uint64_t v128 = v127;
              uint64_t v129 = v277;
              v273(v254, (uint64_t)v128, v277);
              unint64_t v130 = (unint64_t)v311;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v130 = sub_1C226D014(0, *(void *)(v130 + 16) + 1, 1, v130);
              }
              unint64_t v132 = *(void *)(v130 + 16);
              unint64_t v131 = *(void *)(v130 + 24);
              if (v132 >= v131 >> 1) {
                unint64_t v130 = sub_1C226D014(v131 > 1, v132 + 1, 1, v130);
              }
              *(void *)(v130 + 16) = v132 + 1;
              v272(v130 + v271 + v132 * v270, v254, v129);
              v311 = (char *)v130;
              swift_bridgeObjectRelease();
              v312 = MEMORY[0x1E4FBC860];
              (*v269)(v253, v129);
              unint64_t v48 = (unint64_t)v312;
            }
            id v133 = v309;
            uint64_t v134 = v311;
            id v135 = v310;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            id v136 = v133;
            v281 = (void *)isa;
            id v137 = objc_msgSend((id)isa, sel_medicalRecord);
            if (!v137) {
              goto LABEL_106;
            }
            id v138 = v137;
            v250 = (char *)type metadata accessor for MedicalRecordTimelinePanelItem();
            unint64_t isa = swift_allocObject();
            type metadata accessor for MedicalRecordTimelinePanelItemCell();
            sub_1C2309FEC(&qword_1EA2E0D20, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelinePanelItemCell);
            *(void *)(isa + 24) = sub_1C254D330();
            *(void *)(isa + 32) = v139;
            *(void *)(isa + 16) = v138;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v48 = (unint64_t)sub_1C226CD5C(0, *(void *)(v48 + 16) + 1, 1, (void *)v48);
            }
            uint64_t v140 = v282;
            uint64_t v44 = v280;
            uint64_t v141 = v276;
            unint64_t v52 = *(void *)(v48 + 16);
            unint64_t v142 = *(void *)(v48 + 24);
            if (v52 >= v142 >> 1) {
              unint64_t v48 = (unint64_t)sub_1C226CD5C((void *)(v142 > 1), v52 + 1, 1, (void *)v48);
            }
            v287 = v250;
            uint64_t v288 = sub_1C2309FEC(&qword_1EA2E0D58, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelinePanelItem);
            v285 = (void *)isa;
            *(void *)(v48 + 16) = v52 + 1;
            sub_1C21F44EC((long long *)&v285, v48 + 40 * v52 + 32);
            v312 = v48;
            unint64_t v50 = *((void *)v134 + 2);
            id v49 = (v267 + v50);
            if (__OFADD__(v267, v50)) {
              goto LABEL_99;
            }
            uint64_t v143 = v262;
            swift_beginAccess();
            swift_retain();
            uint64_t v144 = (uint64_t)v49;
            id v49 = v143;
            sub_1C23681F0((uint64_t *)&v301, v144);
            swift_endAccess();
            swift_release();

            unint64_t v52 = (unint64_t)v141;
            (*v141)(v44, v283);
            uint64_t v57 = v278;
            unint64_t v58 = v279;
            unint64_t v48 = (unint64_t)v140;
            break;
          case 8uLL:
            if (v312[2].isa)
            {
              sub_1C243AE04();
              swift_bridgeObjectRetain();
              uint64_t v145 = v260;
              sub_1C254CB30();
              sub_1C254CAF0();
              (*v257)(v145, v261);
              unint64_t v146 = v255;
              sub_1C254D990();
              uint64_t v147 = v146;
              uint64_t v148 = v277;
              v273(v256, (uint64_t)v147, v277);
              unint64_t v149 = (unint64_t)v311;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v149 = sub_1C226D014(0, *(void *)(v149 + 16) + 1, 1, v149);
              }
              unint64_t v151 = *(void *)(v149 + 16);
              unint64_t v150 = *(void *)(v149 + 24);
              if (v151 >= v150 >> 1) {
                unint64_t v149 = sub_1C226D014(v150 > 1, v151 + 1, 1, v149);
              }
              char v152 = (void *)isa;
              *(void *)(v149 + 16) = v151 + 1;
              v272(v149 + v271 + v151 * v270, v256, v148);
              v311 = (char *)v149;
              swift_bridgeObjectRelease();
              v312 = MEMORY[0x1E4FBC860];
              (*v269)(v255, v148);
            }
            else
            {
              char v152 = (void *)isa;
            }
            id v195 = v309;
            unint64_t v52 = (unint64_t)v311;
            id v196 = v310;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            id v197 = v195;
            uint64_t v198 = (uint64_t)v263;
            sub_1C243A1FC(v152, (uint64_t)v263);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            v273(v266, v198, v277);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v52 = sub_1C226D014(0, *(void *)(v52 + 16) + 1, 1, v52);
            }
            unint64_t v48 = *(void *)(v52 + 16);
            unint64_t v199 = *(void *)(v52 + 24);
            id v49 = (v48 + 1);
            uint64_t v57 = v278;
            uint64_t v44 = v280;
            unint64_t isa = (unint64_t)v276;
            if (v48 >= v199 >> 1) {
              unint64_t v52 = sub_1C226D014(v199 > 1, v48 + 1, 1, v52);
            }
            *(void *)(v52 + 16) = v49;
            v272(v52 + v271 + v48 * v270, v266, v277);
            v311 = (char *)v52;
            uint64_t v200 = *(void *)(v52 + 16);
            BOOL v55 = __OFADD__(v267, v200);
            unint64_t v50 = v267 + v200;
            if (v55) {
              goto LABEL_100;
            }
            id v49 = (v50 - 1);
            if (__OFSUB__(v50, 1)) {
              goto LABEL_101;
            }
            uint64_t v201 = v262;
            swift_beginAccess();
            uint64_t v202 = (uint64_t)v49;
            id v49 = v201;
            sub_1C23681F0((uint64_t *)&v301, v202);
            swift_endAccess();

            (*v269)(v263, v277);
            unint64_t v52 = isa;
            (*(void (**)(char *, uint64_t))isa)(v44, v283);
            unint64_t v58 = v279;
LABEL_90:
            unint64_t v48 = (unint64_t)v282;
            break;
          case 0xBuLL:
            id v153 = v309;
            uint64_t v154 = v311;
            BOOL v155 = v312;
            id v156 = v310;
            v250 = v154;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            id v249 = v153;
            id v157 = objc_msgSend((id)isa, sel_title);
            if (!v157) {
              goto LABEL_107;
            }
            unint64_t v158 = v157;
            uint64_t v159 = (void *)isa;
            uint64_t v160 = sub_1C254F470();
            uint64_t v162 = v161;

            v281 = v159;
            id v163 = objc_msgSend(v159, sel_medicalRecord);
            if (!v163) {
              goto LABEL_108;
            }
            id v164 = v163;
            v248 = (char *)type metadata accessor for MedicalRecordTimelineUnknownItem();
            v165 = (void *)swift_allocObject();
            type metadata accessor for MedicalRecordTimelineUnknownItemCell();
            sub_1C2309FEC(&qword_1EA2E0D38, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineUnknownItemCell);
            v165[5] = sub_1C254D330();
            v165[6] = v166;
            v165[2] = v160;
            v165[3] = v162;
            v165[4] = v164;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              BOOL v155 = sub_1C226CD5C(0, (int64_t)v155[2].isa + 1, 1, v155);
            }
            uint64_t v167 = v281;
            unint64_t isa = (unint64_t)v282;
            uint64_t v44 = v280;
            uint64_t v168 = v276;
            unint64_t v170 = (unint64_t)v155[2].isa;
            unint64_t v169 = (unint64_t)v155[3].isa;
            id v49 = (v170 + 1);
            if (v170 >= v169 >> 1) {
              BOOL v155 = sub_1C226CD5C((void *)(v169 > 1), v170 + 1, 1, v155);
            }
            v287 = v248;
            uint64_t v288 = sub_1C2309FEC(&qword_1EA2E0D50, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineUnknownItem);
            v285 = v165;
            v155[2].unint64_t isa = (Class)v49;
            sub_1C21F44EC((long long *)&v285, (uint64_t)&v155[5 * v170 + 4]);

            v312 = v155;
            unint64_t v52 = (unint64_t)v168;
            (*v168)(v44, v283);
            uint64_t v57 = v278;
            unint64_t v58 = v279;
            unint64_t v48 = isa;
            break;
          case 0xFuLL:
            uint64_t v120 = (void (**)(char *, uint64_t))v52;
            id v171 = v309;
            uint64_t v122 = v312;
            v285 = (void *)v63;
            long long v286 = v306;
            v287 = v307;
            LOBYTE(v288) = v308;
            id v289 = v309;
            id v290 = v310;
            v291 = v311;
            v292 = v312;
            char v172 = (void *)isa;
            id v124 = v310;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            id v125 = v171;
            v281 = v172;
            sub_1C243A4A0(v172, (uint64_t *)&v301);
LABEL_67:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            sub_1C21F4424((uint64_t)&v301, (uint64_t)&v285);
            char v173 = swift_isUniquelyReferenced_nonNull_native();
            v312 = v122;
            if ((v173 & 1) == 0)
            {
              uint64_t v122 = sub_1C226CD5C(0, (int64_t)v122[2].isa + 1, 1, v122);
              v312 = v122;
            }
            uint64_t v57 = v278;
            unint64_t v58 = v279;
            unint64_t v175 = (unint64_t)v122[2].isa;
            unint64_t v174 = (unint64_t)v122[3].isa;
            if (v175 >= v174 >> 1) {
              v312 = sub_1C226CD5C((void *)(v174 > 1), v175 + 1, 1, v122);
            }
            uint64_t v176 = (uint64_t)v287;
            uint64_t v177 = v288;
            uint64_t v178 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v285, (uint64_t)v287);
            unint64_t isa = (unint64_t)v225;
            MEMORY[0x1F4188790](v178);
            uint64_t v180 = (char *)v225 - ((v179 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v181 + 16))(v180);
            sub_1C2507304(v175, (uint64_t)v180, v268, v176, v177);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v285);
            id v49 = v312;

            v312 = v49;
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v301);
            unint64_t v52 = (unint64_t)v120;
            uint64_t v44 = v280;
            (*v120)(v280, v283);
            goto LABEL_90;
          case 0x12uLL:
            id v182 = v309;
            uint64_t v183 = v312;
            v285 = (void *)v63;
            long long v286 = v306;
            v287 = v307;
            LOBYTE(v288) = v308;
            id v289 = v309;
            id v290 = v310;
            v291 = v311;
            v292 = v312;
            unint64_t v184 = (void *)isa;
            unint64_t isa = (unint64_t)v310;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            id v185 = v182;
            id v49 = &v285;
            sub_1C243A9E0(v184, (void *)v48, (uint64_t)&v299);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_release();
            if (v300)
            {
              sub_1C21F44EC(&v299, (uint64_t)&v301);
              sub_1C21F4424((uint64_t)&v301, (uint64_t)&v285);
              char v186 = swift_isUniquelyReferenced_nonNull_native();
              v312 = v183;
              if ((v186 & 1) == 0)
              {
                uint64_t v183 = sub_1C226CD5C(0, (int64_t)v183[2].isa + 1, 1, v183);
                v312 = v183;
              }
              uint64_t v57 = v278;
              unint64_t v188 = (unint64_t)v183[2].isa;
              unint64_t v187 = (unint64_t)v183[3].isa;
              if (v188 >= v187 >> 1) {
                v312 = sub_1C226CD5C((void *)(v187 > 1), v188 + 1, 1, v183);
              }
              uint64_t v189 = (uint64_t)v287;
              uint64_t v190 = v288;
              uint64_t v191 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v285, (uint64_t)v287);
              unint64_t isa = (unint64_t)v225;
              MEMORY[0x1F4188790](v191);
              uint64_t v193 = (char *)v225 - ((v192 + 15) & 0xFFFFFFFFFFFFFFF0);
              (*(void (**)(char *))(v194 + 16))(v193);
              sub_1C2507304(v188, (uint64_t)v193, v268, v189, v190);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v285);
              id v49 = v312;

              v312 = v49;
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v301);
              unint64_t v52 = (unint64_t)v276;
              uint64_t v44 = v280;
              (*v276)(v280, v283);
              unint64_t v58 = v279;
            }
            else
            {
              sub_1C2227100((uint64_t)&v299);

              id v309 = v184;
              unint64_t v52 = (unint64_t)v276;
              uint64_t v44 = v280;
              (*v276)(v280, v283);
              uint64_t v57 = v278;
              unint64_t v58 = v279;
            }
            goto LABEL_90;
          default:
            sub_1C254E510();
            id v81 = (id)isa;
            uint64_t v82 = v259;
            swift_retain_n();
            unint64_t isa = (unint64_t)v81;
            id v49 = sub_1C254E550();
            os_log_type_t v83 = sub_1C254FA10();
            if (os_log_type_enabled(v49, v83))
            {
              uint64_t v84 = swift_slowAlloc();
              uint64_t v85 = swift_slowAlloc();
              v285 = (void *)v85;
              *(_DWORD *)uint64_t v84 = v226;
              *(void *)&long long v301 = *v82;
              sub_1C2309628();
              uint64_t v86 = sub_1C254F4F0();
              *(void *)(v84 + 4) = sub_1C21AD354(v86, v87, (uint64_t *)&v285);
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v84 + 12) = 2082;
              unint64_t isa = (unint64_t)(id)isa;
              id v88 = objc_msgSend((id)isa, sel_description);
              uint64_t v89 = sub_1C254F470();
              unint64_t v91 = v90;

              uint64_t v57 = v278;
              *(void *)(v84 + 14) = sub_1C21AD354(v89, v91, (uint64_t *)&v285);

              unint64_t v58 = v279;
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1C21A1000, v49, v83, "%{public}s: Skipping: item %{public}s", (uint8_t *)v84, 0x16u);
              swift_arrayDestroy();
              uint64_t v92 = v85;
              uint64_t v44 = v280;
              MEMORY[0x1C875A0B0](v92, -1, -1);
              MEMORY[0x1C875A0B0](v84, -1, -1);
            }
            else
            {
              swift_release_n();
            }
            (*v227)(v57, v228);
            unint64_t v52 = (unint64_t)v276;
            (*v276)(v44, v283);
            goto LABEL_90;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))v52)(v44, v283);
      }
      if (v58 == ++v63) {
        goto LABEL_97;
      }
    }
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    id v49 = sub_1C226D014(v50 > 1, v52, 1, (unint64_t)v49);
  }
LABEL_97:
  sub_1C2438968();
  id v221 = v309;
  id v222 = v310;
  v223 = v311;
  swift_bridgeObjectRelease();
  swift_release();

  sub_1C23095CC((uint64_t)v258);
  return v223;
}

void sub_1C23088A8()
{
}

uint64_t sub_1C23088D8()
{
  swift_release();

  sub_1C2268334(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_accountIdentifier);
  swift_release();

  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C23089A8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  sub_1C2268334(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineDataSource_accountIdentifier);
  swift_release();

  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C2308A80()
{
  sub_1C23089A8();
  return swift_deallocClassInstance();
}

void sub_1C2308AD8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C2308AFC()
{
  return sub_1C254E160();
}

uint64_t sub_1C2308B60()
{
  return sub_1C254FAD0();
}

uint64_t _s18HealthExperienceUI22ArrayDataSourceSectionV0a7RecordsC0E2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254D9B0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v53 - v9;
  uint64_t v11 = sub_1C254D960();
  uint64_t v13 = v12;
  if (v11 == sub_1C254D960() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v10, a1, v4);
    v15(v8, a2, v4);
  }
  else
  {
    char v16 = sub_1C2550870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v17(v10, a1, v4);
    v17(v8, a2, v4);
    if ((v16 & 1) == 0)
    {
      uint64_t v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28(v8, v4);
      v28(v10, v4);
      LOBYTE(v23) = 0;
      return v23 & 1;
    }
  }
  uint64_t v18 = sub_1C254D9A0();
  uint64_t v20 = v19;
  uint64_t v21 = sub_1C254D9A0();
  uint64_t v23 = v22;
  if (v20)
  {
    if (!v22)
    {
      uint64_t v29 = *(void (**)(char *, uint64_t))(v5 + 8);
      swift_bridgeObjectRetain();
      v29(v8, v4);
      v29(v10, v4);
      swift_bridgeObjectRelease_n();
      return v23 & 1;
    }
    if (v18 == v21 && v20 == v22)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v5 + 8);
      v30(v8, v4);
      v30(v10, v4);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v25 = sub_1C2550870();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v5 + 8);
      v26(v8, v4);
      v26(v10, v4);
      swift_bridgeObjectRelease_n();
      LOBYTE(v23) = 0;
      if ((v25 & 1) == 0) {
        return v23 & 1;
      }
    }
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t))(v5 + 8);
    v27(v8, v4);
    v27(v10, v4);
    if (v23)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v23) = 0;
      return v23 & 1;
    }
  }
  uint64_t v31 = sub_1C254D980();
  int64_t v32 = *(void *)(v31 + 16);
  uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
  if (v32)
  {
    BOOL v55 = (void *)MEMORY[0x1E4FBC860];
    sub_1C2274764(0, v32, 0);
    uint64_t v34 = v31 + 32;
    uint64_t v35 = v55;
    do
    {
      sub_1C21F4424(v34, (uint64_t)v53);
      __swift_project_boxed_opaque_existential_1Tm(v53, v54);
      uint64_t v36 = sub_1C254D190();
      uint64_t v38 = v37;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C2274764(0, v35[2] + 1, 1);
        uint64_t v35 = v55;
      }
      unint64_t v40 = v35[2];
      unint64_t v39 = v35[3];
      if (v40 >= v39 >> 1)
      {
        sub_1C2274764(v39 > 1, v40 + 1, 1);
        uint64_t v35 = v55;
      }
      v35[2] = v40 + 1;
      uint64_t v41 = &v35[2 * v40];
      v41[4] = v36;
      uint64_t v41[5] = v38;
      v34 += 40;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
    uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v42 = sub_1C254D980();
  int64_t v43 = *(void *)(v42 + 16);
  if (v43)
  {
    BOOL v55 = v33;
    sub_1C2274764(0, v43, 0);
    uint64_t v44 = v42 + 32;
    uint64_t v45 = v55;
    do
    {
      sub_1C21F4424(v44, (uint64_t)v53);
      __swift_project_boxed_opaque_existential_1Tm(v53, v54);
      uint64_t v46 = sub_1C254D190();
      uint64_t v48 = v47;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C2274764(0, v45[2] + 1, 1);
        uint64_t v45 = v55;
      }
      unint64_t v50 = v45[2];
      unint64_t v49 = v45[3];
      if (v50 >= v49 >> 1)
      {
        sub_1C2274764(v49 > 1, v50 + 1, 1);
        uint64_t v45 = v55;
      }
      v45[2] = v50 + 1;
      uint64_t v51 = &v45[2 * v50];
      v51[4] = v46;
      v51[5] = v48;
      v44 += 40;
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = (void *)MEMORY[0x1E4FBC860];
  }
  LOBYTE(v23) = sub_1C22AACE0(v35, v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23 & 1;
}

uint64_t sub_1C23093AC()
{
  return type metadata accessor for MedicalRecordTimelineDataSource();
}

uint64_t type metadata accessor for MedicalRecordTimelineDataSource()
{
  uint64_t result = qword_1EA2E0CF0;
  if (!qword_1EA2E0CF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2309400()
{
  sub_1C21AB620(319, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C2309518()
{
  return sub_1C2309FEC(&qword_1EA2E0D00, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineDataSource);
}

void sub_1C2309560()
{
  if (!qword_1EA2E0D40)
  {
    sub_1C254D9B0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E0D40);
    }
  }
}

uint64_t sub_1C23095CC(uint64_t a1)
{
  sub_1C2309560();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C2309628()
{
  unint64_t result = qword_1EA2E0D48;
  if (!qword_1EA2E0D48)
  {
    type metadata accessor for MedicalRecordTimelineDataSource();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E0D48);
  }
  return result;
}

id sub_1C2309664(void *a1)
{
  uint64_t v57 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C254D9B0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  BOOL v55 = (char *)&v46 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v46 - v13;
  MEMORY[0x1F4188790](v12);
  unint64_t v58 = (char *)&v46 - v15;
  if ((uint64_t)objc_msgSend(a1, sel_numOfRemovedRecords) < 1) {
    return 0;
  }
  uint64_t v53 = v9;
  id v54 = a1;
  uint64_t v60 = v2;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v16 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C254C730();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();

  uint64_t v20 = type metadata accessor for MedicalRecordTimelineHeaderItem(0);
  uint64_t v21 = swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1C254CB30();
  uint64_t v22 = (uint64_t *)(v21 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_reuseIdentifier);
  type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
  sub_1C2309FEC(&qword_1EA2E0A58, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineHeaderItemCell);
  *uint64_t v22 = sub_1C254D330();
  v22[1] = v23;
  *(void *)(v21 + 16) = v17;
  *(void *)(v21 + 24) = v19;
  *(void *)(v21 + 56) = 0;
  *(unsigned char *)(v21 + 64) = 0;
  *(unsigned char *)(v21 + 48) = 0;
  *(void *)(v21 + 32) = 0;
  *(void *)(v21 + 40) = 0;
  *(void *)(v21 + 72) = v17;
  *(void *)(v21 + 80) = v19;
  *(void *)(v21 + 88) = 0xD000000000000010;
  *(void *)(v21 + 96) = 0x80000001C257C9C0;
  sub_1C2309D80(0, &qword_1EA2DF5D0, MEMORY[0x1E4FBBE00]);
  *(void *)(v21 + 104) = 0;
  *(void *)(v21 + 112) = 0;
  uint64_t v24 = swift_allocObject();
  long long v50 = xmmword_1C255CD90;
  *(_OWORD *)(v24 + 16) = xmmword_1C255CD90;
  *(void *)(v24 + 56) = v20;
  *(void *)(v24 + 64) = sub_1C2309FEC(&qword_1EA2E0A80, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineHeaderItem);
  *(void *)(v24 + 32) = v21;
  swift_retain();
  sub_1C254CB30();
  sub_1C254CAF0();
  char v25 = *(void (**)(char *, uint64_t))(v60 + 8);
  v60 += 8;
  unint64_t v52 = v25;
  v25(v4, v57);
  uint64_t v26 = v58;
  sub_1C254D990();
  uint64_t v56 = v6;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v59 = v5;
  uint64_t v51 = v27;
  v27(v14, v26, v5);
  unint64_t v28 = sub_1C226D014(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v30 = *(void *)(v28 + 16);
  unint64_t v29 = *(void *)(v28 + 24);
  if (v30 >= v29 >> 1) {
    unint64_t v28 = sub_1C226D014(v29 > 1, v30 + 1, 1, v28);
  }
  *(void *)(v28 + 16) = v30 + 1;
  uint64_t v31 = *(void (**)(unint64_t, char *, uint64_t))(v56 + 32);
  unint64_t v48 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  unint64_t v49 = v31;
  uint64_t v47 = *(void *)(v56 + 72);
  v31(v28 + v48 + v47 * v30, v14, v59);
  id result = objc_msgSend(v54, sel_removedRecords);
  if (result)
  {
    uint64_t v33 = result;
    sub_1C21AB51C(0, &qword_1EBB6F978);
    uint64_t v34 = sub_1C254F710();

    uint64_t v35 = type metadata accessor for MedicalRecordTimelineRemovedRecordItem();
    uint64_t v36 = (void *)swift_allocObject();
    type metadata accessor for MedicalRecordTimelineRemovedRecordItemCell();
    sub_1C2309FEC(&qword_1EA2E0D30, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineRemovedRecordItemCell);
    v36[3] = sub_1C254D330();
    void v36[4] = v37;
    _OWORD v36[2] = v34;
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = v50;
    *(void *)(v38 + 56) = v35;
    *(void *)(v38 + 64) = sub_1C2309FEC(&qword_1EA2E0D68, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineRemovedRecordItem);
    *(void *)(v38 + 32) = v36;
    swift_retain();
    sub_1C254CB30();
    sub_1C254CAF0();
    v52(v4, v57);
    unint64_t v39 = v55;
    sub_1C254D990();
    unint64_t v40 = v53;
    v51(v53, v39, v59);
    unint64_t v42 = *(void *)(v28 + 16);
    unint64_t v41 = *(void *)(v28 + 24);
    if (v42 >= v41 >> 1) {
      unint64_t v28 = sub_1C226D014(v41 > 1, v42 + 1, 1, v28);
    }
    uint64_t v43 = v56;
    *(void *)(v28 + 16) = v42 + 1;
    uint64_t v44 = v59;
    v49(v28 + v48 + v42 * v47, v40, v59);
    swift_release();
    swift_release();
    uint64_t v45 = *(void (**)(char *, uint64_t))(v43 + 8);
    v45(v39, v44);
    v45(v58, v44);
    return (id)v28;
  }
  __break(1u);
  return result;
}

void sub_1C2309D80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C21FFE74(255, (unint64_t *)&qword_1EA2DED90);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C2309DF0()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2309E28(char a1)
{
  return sub_1C2305A24(a1);
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

void sub_1C2309E38(void *a1)
{
}

id sub_1C2309E40()
{
  return sub_1C2306674(v0);
}

void sub_1C2309E48()
{
  sub_1C23064C0(v0);
}

void sub_1C2309E50()
{
  if (!qword_1EA2E0D78)
  {
    sub_1C254DA40();
    unint64_t v0 = sub_1C254D5F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0D78);
    }
  }
}

uint64_t sub_1C2309EB0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C21AB620(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2309F14(void **a1)
{
  return sub_1C23050D4(a1);
}

void sub_1C2309F1C()
{
  if (!qword_1EA2E0D88)
  {
    sub_1C2309F84();
    unint64_t v0 = sub_1C254EA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0D88);
    }
  }
}

void sub_1C2309F84()
{
  if (!qword_1EA2E0D90)
  {
    sub_1C21AB51C(255, &qword_1EA2E0D98);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E0D90);
    }
  }
}

uint64_t sub_1C2309FEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C230A034()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C230A074()
{
  sub_1C230541C(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t MedicalRecordTimelineTitleWithSubtitleItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1C230A0CC()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0xD000000000000016;
  unint64_t v9 = 0x80000001C257CA30;
  v7[1] = *(void *)(v0 + 16);
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  id v5 = objc_msgSend(*(id *)(v0 + 32), sel_UUID);
  sub_1C254CB20();

  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v8;
}

void sub_1C230A298()
{
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)v0[4];
  id v5 = (void *)v0[9];
  uint64_t v2 = (void *)v0[14];
  sub_1C25509D0();
  sub_1C25509D0();
  id v3 = v2;
  swift_retain();
  id v6 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C254FF80();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void *MedicalRecordTimelineTitleWithSubtitleItem.deinit()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = (void *)v0[9];
  id v3 = (void *)v0[14];
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineTitleWithSubtitleItem.__deallocating_deinit()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = (void *)v0[9];
  id v3 = (void *)v0[14];
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C230A4F4()
{
  return sub_1C2550A10();
}

uint64_t sub_1C230A56C()
{
  return sub_1C2550A10();
}

void sub_1C230A5E8()
{
  uint64_t v1 = (void *)*v0;
  sub_1C254F570();
  uint64_t v2 = (void *)v1[4];
  id v6 = (void *)v1[9];
  id v3 = (void *)v1[14];
  sub_1C25509D0();
  sub_1C25509D0();
  id v4 = v3;
  swift_retain();
  id v7 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C254FF80();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_1C230A704()
{
  sub_1C25509C0();
  uint64_t v1 = (void *)*v0;
  sub_1C254F570();
  uint64_t v2 = (void *)v1[4];
  id v3 = (void *)v1[9];
  id v4 = (void *)v1[14];
  sub_1C25509D0();
  sub_1C25509D0();
  id v5 = v4;
  swift_retain();
  id v6 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C254FF80();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return sub_1C2550A10();
}

uint64_t sub_1C230A818()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1C230A84C()
{
  return sub_1C230A0CC();
}

uint64_t sub_1C230A870(uint64_t *a1, uint64_t *a2)
{
  return _s15HealthRecordsUI42MedicalRecordTimelineTitleWithSubtitleItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

id sub_1C230A87C(double a1, double a2, double a3, double a4)
{
  sub_1C230C7E4(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = sub_1C254E690();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = &v4[OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item];
  *(_OWORD *)id v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((void *)v16 + 4) = 0;
  uint64_t v17 = &v4[OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_sectionContext];
  uint64_t v18 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = (objc_class *)type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
  v27.receiver = v4;
  v27.super_class = v19;
  id v20 = objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C254CDB0();
  id v21 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C254FE70();

  uint64_t v22 = self;
  id v23 = v20;
  id v24 = objc_msgSend(v22, sel_currentTraitCollection);
  sub_1C254E660();
  sub_1C254E6D0();
  sub_1C24FCA3C((uint64_t)v15);
  sub_1C254E6C0();
  uint64_t v25 = sub_1C254E710();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 0, 1, v25);
  MEMORY[0x1C8758250](v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

  return v23;
}

id sub_1C230AB68(void *a1)
{
  sub_1C230C7E4(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v23 - v4;
  uint64_t v6 = sub_1C254E690();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &v1[OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  uint64_t v11 = &v1[OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_sectionContext];
  uint64_t v12 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (objc_class *)type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
  v23.receiver = v1;
  v23.super_class = v13;
  id v14 = objc_msgSendSuper2(&v23, sel_initWithCoder_, a1);
  id v15 = v14;
  if (v14)
  {
    id v16 = v14;
    sub_1C254CDB0();
    id v17 = (id)*MEMORY[0x1E4F39EA8];
    sub_1C254FE70();

    uint64_t v18 = self;
    id v19 = v16;
    id v20 = objc_msgSend(v18, sel_currentTraitCollection);
    sub_1C254E660();
    sub_1C254E6D0();
    sub_1C24FCA3C((uint64_t)v9);
    sub_1C254E6C0();
    uint64_t v21 = sub_1C254E710();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v5, 0, 1, v21);
    MEMORY[0x1C8758250](v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v15;
}

uint64_t sub_1C230AE54(uint64_t a1, void *a2)
{
  sub_1C2227014(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item;
  swift_beginAccess();
  sub_1C2232E74((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C230AEC8();
  return sub_1C2227100((uint64_t)v5);
}

uint64_t sub_1C230AEC8()
{
  sub_1C230C7E4(0, &qword_1EA2DE9F0, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v35 - v2;
  uint64_t v4 = sub_1C254E600();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v45 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254E5A0();
  uint64_t v46 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v44 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254E890();
  uint64_t v43 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v12, (uint64_t)v48);
  if (!v49) {
    return sub_1C2227100((uint64_t)v48);
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v37 = v7;
    uint64_t v38 = v3;
    uint64_t v39 = v5;
    uint64_t v40 = v4;
    uint64_t v14 = v47;
    uint64_t v41 = v0;
    MEMORY[0x1C87582A0]();
    swift_bridgeObjectRetain();
    sub_1C254E860();
    id v15 = self;
    uint64_t v16 = *MEMORY[0x1E4FB2950];
    uint64_t result = (uint64_t)objc_msgSend(v15, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E4FB2950], *MEMORY[0x1E4FB09B8]);
    if (!result)
    {
      __break(1u);
      goto LABEL_15;
    }
    id v17 = (void (*)(uint64_t *, void))sub_1C254E7A0();
    sub_1C254E770();
    v17(v48, 0);
    uint64_t v18 = self;
    id v19 = objc_msgSend(v18, sel_labelColor);
    id v20 = (void (*)(uint64_t *, void))sub_1C254E7A0();
    sub_1C254E780();
    v20(v48, 0);
    uint64_t v22 = *(void *)(v14 + 64);
    uint64_t v21 = *(void **)(v14 + 72);
    uint64_t v42 = v14;
    if (v22)
    {
      if (!v21)
      {
        swift_bridgeObjectRetain();
        sub_1C254E740();
        goto LABEL_10;
      }
    }
    else if (!v21)
    {
LABEL_12:
      uint64_t v49 = v9;
      uint64_t v50 = MEMORY[0x1E4FB0F88];
      uint64_t v27 = v9;
      uint64_t v36 = v9;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v48);
      uint64_t v29 = v43;
      (*(void (**)(uint64_t *, char *, uint64_t))(v43 + 16))(boxed_opaque_existential_1, v11, v27);
      MEMORY[0x1C8758230](v48);
      sub_1C230C7E4(0, &qword_1EA2DE9D8, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
      sub_1C254E620();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
      uint64_t v30 = v46;
      uint64_t v31 = v44;
      uint64_t v32 = v37;
      (*(void (**)(char *, void, uint64_t))(v46 + 104))(v44, *MEMORY[0x1E4FB0E18], v37);
      uint64_t v33 = sub_1C254E5B0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v38, 1, 1, v33);
      uint64_t v34 = v45;
      sub_1C254E5F0();
      sub_1C254E5C0();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v40);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v32);
      sub_1C254FD80();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v36);
    }
    id v23 = v21;
    sub_1C254E7E0();
LABEL_10:
    uint64_t result = (uint64_t)objc_msgSend(v15, sel__preferredFontForTextStyle_weight_, v16, *MEMORY[0x1E4FB09D8]);
    if (result)
    {
      id v24 = (void (*)(uint64_t *, void))sub_1C254E7F0();
      sub_1C254E770();
      v24(v48, 0);
      id v25 = objc_msgSend(v18, sel_secondaryLabelColor);
      uint64_t v26 = (void (*)(uint64_t *, void))sub_1C254E7F0();
      sub_1C254E780();
      v26(v48, 0);
      goto LABEL_12;
    }
LABEL_15:
    __break(1u);
  }
  return result;
}

uint64_t sub_1C230B568@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C230B5BC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C230AEC8();
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C230B62C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C230B68C;
}

uint64_t sub_1C230B68C(uint64_t a1, char a2)
{
  return sub_1C230BD90(a1, a2, (uint64_t (*)(uint64_t))sub_1C230AEC8);
}

void sub_1C230B6A4(uint64_t a1, void *a2)
{
}

uint64_t sub_1C230B798(uint64_t a1, void *a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66300];
  sub_1C230C7E4(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1C230C848(a1, (uint64_t)&v10 - v6);
  uint64_t v8 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_sectionContext;
  swift_beginAccess();
  sub_1C225F20C((uint64_t)v7, v8);
  swift_endAccess();
  sub_1C230B8A4();
  return sub_1C230C8DC((uint64_t)v7, &qword_1EA2DF2E0, v4);
}

uint64_t sub_1C230B8A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CD90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C230C7E4(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = sub_1C254D370();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_sectionContext;
  swift_beginAccess();
  sub_1C230C848(v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_1C230C8DC((uint64_t)v8, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_1C254D360();
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_1C25503A0();
  uint64_t v15 = sub_1C254F470();
  uint64_t v20 = v2;
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v22 = v15;
  unint64_t v23 = v17;
  sub_1C254F5A0();
  uint64_t v21 = sub_1C254CD80();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v21 = sub_1C254CD70();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v18);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1C230BC38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_sectionContext;
  swift_beginAccess();
  return sub_1C230C848(v3, a1);
}

uint64_t sub_1C230BC8C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_sectionContext;
  swift_beginAccess();
  sub_1C225F20C(a1, v3);
  swift_endAccess();
  sub_1C230B8A4();
  return sub_1C230C8DC(a1, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
}

uint64_t (*sub_1C230BD18(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C230BD78;
}

uint64_t sub_1C230BD78(uint64_t a1, char a2)
{
  return sub_1C230BD90(a1, a2, (uint64_t (*)(uint64_t))sub_1C230B8A4);
}

uint64_t sub_1C230BD90(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

id MedicalRecordTimelineTitleWithSubtitleItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C230BE68(uint64_t a1, void *a2)
{
}

uint64_t sub_1C230BE90(uint64_t a1)
{
  objc_super v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C230C7E4(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v19[-v4];
  sub_1C230C7E4(0, &qword_1EA2E0DB0, MEMORY[0x1E4FB0F00], v2);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v19[-v7];
  uint64_t v9 = sub_1C254E690();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20[3] = v11;
  v20[4] = MEMORY[0x1E4FB0EF8];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(boxed_opaque_existential_1, a1, v9);
  sub_1C21F4424((uint64_t)v20, (uint64_t)v19);
  sub_1C21FFE74(0, &qword_1EA2E0DB8);
  int v15 = swift_dynamicCast();
  unint64_t v16 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (!v15)
  {
    v16(v8, 1, 1, v9);
    goto LABEL_5;
  }
  v16(v8, 0, 1, v9);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_5:
    sub_1C230C8DC((uint64_t)v8, &qword_1EA2E0DB0, MEMORY[0x1E4FB0F00]);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v13, v8, v9);
  sub_1C254E6D0();
  sub_1C24FCA3C((uint64_t)v13);
  sub_1C254E6C0();
  uint64_t v17 = sub_1C254E710();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 0, 1, v17);
  MEMORY[0x1C8758250](v5);
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
}

uint64_t _s15HealthRecordsUI42MedicalRecordTimelineTitleWithSubtitleItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || *(unsigned __int8 *)(a1 + 24) != *(unsigned __int8 *)(a2 + 24)) {
    return 0;
  }
  uint64_t v4 = *(void **)(a2 + 112);
  unint64_t v16 = *(void **)(a2 + 72);
  uint64_t v5 = *(void **)(a2 + 32);
  uint64_t v14 = *(void **)(a1 + 112);
  uint64_t v6 = *(void **)(a1 + 72);
  uint64_t v7 = *(void **)(a1 + 32);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
  id v17 = v4;
  swift_retain();
  id v8 = v7;
  id v9 = v5;
  id v10 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v14;
  swift_retain();
  id v12 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v6) = sub_1C254FF70();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v6 & 1;
}

void sub_1C230C3C8(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v3, (uint64_t)&aBlock);
  if (!v24)
  {
    sub_1C2227100((uint64_t)&aBlock);
    return;
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem();
  uint64_t v4 = swift_dynamicCast();
  if ((v4 & 1) == 0) {
    return;
  }
  uint64_t v5 = v28;
  if (qword_1EBB6EF30 != -1) {
    uint64_t v4 = swift_once();
  }
  uint64_t v28 = *(void *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v4);
  sub_1C254CEE0();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
  sub_1C230CDCC((unint64_t *)&qword_1EBB6F240, 255, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();
  swift_release();
  uint64_t v6 = aBlock;
  if (qword_1EBB6D858 != -1) {
    swift_once();
  }
  id v7 = *(id *)(v5 + 32);
  sub_1C2452E50(v7, a1, v6);

  sub_1C254EA80();
  id v8 = (void *)v22;
  id v9 = v23;
  id v10 = v24;
  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  uint64_t v19 = (char *)qword_1EBB6E968;
  uint64_t v20 = v10;
  if (!v10)
  {
    char v11 = 11;
    if (v8) {
      goto LABEL_11;
    }
LABEL_14:
    LOBYTE(aBlock) = v11;
    sub_1C23CD65C(3, 17, 0, (char *)&aBlock, 0);
    swift_release();

    goto LABEL_15;
  }
  sub_1C21AA50C(v10, (uint64_t)&aBlock);
  char v11 = (char)aBlock;
  id v12 = v6;
  id v13 = (void *)v22;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v6 = v12;
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_14;
  }
LABEL_11:
  uint64_t v14 = *(void **)&v19[OBJC_IVAR___CHRAnalyticsManager_conceptStore];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v19;
  *(_OWORD *)(v15 + 24) = xmmword_1C2563DA0;
  *(void *)(v15 + 40) = 0;
  *(unsigned char *)(v15 + 48) = v11;
  id v25 = sub_1C22003F0;
  uint64_t v26 = v15;
  uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
  uint64_t v22 = 1107296256;
  unint64_t v23 = sub_1C23CC220;
  id v24 = &block_descriptor_32;
  unint64_t v16 = _Block_copy(&aBlock);
  id v17 = v8;
  uint64_t v18 = v19;
  swift_release();
  objc_msgSend(v14, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, v17, 0, v16);
  _Block_release(v16);
  swift_release();

LABEL_15:
}

void sub_1C230C7E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C230C848(uint64_t a1, uint64_t a2)
{
  sub_1C230C7E4(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C230C8DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C230C7E4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell()
{
  uint64_t result = qword_1EA2E0DC8;
  if (!qword_1EA2E0DC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C230C998(uint64_t a1, uint64_t a2)
{
  return sub_1C230CDCC(&qword_1EA2E0DC0, a2, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem);
}

uint64_t type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem()
{
  return self;
}

uint64_t sub_1C230CA04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a2);
}

uint64_t sub_1C230CA60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI46MedicalRecordTimelineTitleWithSubtitleItemCell_sectionContext;
  swift_beginAccess();
  return sub_1C230C848(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineTitleWithSubtitleItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineTitleWithSubtitleItem);
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_1C230CB40()
{
  return type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
}

void sub_1C230CB48()
{
  sub_1C230C7E4(319, &qword_1EA2DF2E0, MEMORY[0x1E4F66300], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedicalRecordTimelineTitleWithSubtitleItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineTitleWithSubtitleItemCell);
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.didSelectCell(_:in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.deselectionBehavior.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.sectionContext.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.sectionContext.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicalRecordTimelineTitleWithSubtitleItemCell.sectionContext.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t sub_1C230CDCC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C230CE14()
{
  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t MedicalRecordTimelineAccountUpgradeTileItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C230CE84()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = *(void *)(v0 + 16);
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  if (!result) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_9:
    id v8 = (id)MEMORY[0x1C87588E0](0, v5);
    goto LABEL_6;
  }
  if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v8 = *(id *)(v5 + 32);
LABEL_6:
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(v9, sel_identifier);

    sub_1C254CB20();
    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v11[0] = 0xD000000000000013;
    v11[1] = 0x80000001C257CB10;
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    return v11[0];
  }
  __break(1u);
  return result;
}

void sub_1C230D050()
{
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 16);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1C25509E0();
    return;
  }
  swift_bridgeObjectRetain();
  if (!sub_1C2550620()) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x1C87588E0](0, v1);
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v3 = *(id *)(v1 + 32);
  }
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  sub_1C25509E0();
  id v5 = v4;
  sub_1C254FF80();
}

uint64_t MedicalRecordTimelineAccountUpgradeTileItem.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineAccountUpgradeTileItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C230D204()
{
  sub_1C25509C0();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 16);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1C25509E0();
    return sub_1C2550A10();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  if (!result) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C87588E0](0, v1);
    goto LABEL_6;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v4 = *(id *)(v1 + 32);
LABEL_6:
    id v5 = v4;
    swift_bridgeObjectRelease();
    sub_1C25509E0();
    id v6 = v5;
    sub_1C254FF80();

    return sub_1C2550A10();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C230D324()
{
  return sub_1C230D204();
}

void sub_1C230D348()
{
}

uint64_t sub_1C230D36C()
{
  return sub_1C2550A10();
}

uint64_t sub_1C230D3AC()
{
  return sub_1C230CE84();
}

uint64_t sub_1C230D3D0(uint64_t *a1, unint64_t *a2)
{
  return _s15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeTileItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C230D4F4(uint64_t a1, void *a2)
{
  sub_1C2227014(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  sub_1C2232E74((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C230D584();
  return sub_1C230F988((uint64_t)v5, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t sub_1C230D584()
{
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item];
  swift_beginAccess();
  sub_1C2227014(v1, (uint64_t)v6);
  if (!v7) {
    return sub_1C230F988((uint64_t)v6, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  }
  sub_1C22270A8();
  type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    swift_release();
    uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_hasRegisteredForNotifications;
    if ((v0[OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_hasRegisteredForNotifications] & 1) == 0)
    {
      id v4 = objc_msgSend(self, sel_defaultCenter);
      if (qword_1EA2DD778 != -1)
      {
        id v5 = sel_reloadDataSource;
        swift_once();
      }
      objc_msgSend(v4, sel_addObserver_selector_name_object_, v0, v5);

      v0[v3] = 1;
    }
    return (uint64_t)objc_msgSend(v0, sel_setNeedsUpdateConfiguration);
  }
  return result;
}

uint64_t sub_1C230D6F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C230D744(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C230D584();
  return sub_1C230F988(a1, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t (*sub_1C230D7D0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C230D830;
}

uint64_t sub_1C230D830(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C230D584();
  }
  return result;
}

uint64_t sub_1C230D95C()
{
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell();
  id v1 = objc_msgSendSuper2(&v12, sel__bridgedConfigurationState);
  sub_1C254E680();

  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v2, (uint64_t)&v9);
  if (*((void *)&v10 + 1))
  {
    sub_1C22270A8();
    type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
    if (swift_dynamicCast())
    {
      uint64_t v3 = v8;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C230F988((uint64_t)&v9, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  }
  uint64_t v3 = 0;
LABEL_6:
  if (qword_1EA2DD6B0 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_1EA2E0DD8;
  if (v3)
  {
    type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
    sub_1C230F4D0(&qword_1EA2E0DE8);
    id v5 = v4;
    swift_retain();
    sub_1C2550330();
  }
  else
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    id v6 = (id)qword_1EA2E0DD8;
  }
  sub_1C254E6B0();
  return swift_release();
}

uint64_t sub_1C230DBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a1;
  v4[9] = a4;
  uint64_t v5 = sub_1C254E690();
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = sub_1C254F820();
  v4[14] = sub_1C254F810();
  return MEMORY[0x1F4188298](sub_1C230DCC8, 0, 0);
}

uint64_t sub_1C230DCC8()
{
  *(void *)(v0 + 120) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C230DD54, v2, v1);
}

uint64_t sub_1C230DD54()
{
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();
  id v2 = objc_msgSend(v1, sel__bridgedConfigurationState);
  sub_1C254E680();

  if (qword_1EA2DD6B0 != -1) {
    swift_once();
  }
  sub_1C254E6A0();
  if (*(void *)(v0 + 40))
  {
    type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
    if (swift_dynamicCast())
    {
      (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 80));
      swift_retain();
      swift_release();
      sub_1C22609A8();
      swift_release();
      char v3 = 0;
      goto LABEL_8;
    }
  }
  else
  {
    sub_1C230F6D8(v0 + 16);
  }
  (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 80));
  char v3 = 1;
LABEL_8:
  **(unsigned char **)(v0 + 64) = v3;
  uint64_t v5 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C230DEF8, v5, v4);
}

uint64_t sub_1C230DEF8()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

BOOL sub_1C230E0A4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v1, (uint64_t)v6);
  if (!v7)
  {
    sub_1C230F988((uint64_t)v6, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    return 0;
  }
  sub_1C22270A8();
  type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  unint64_t v2 = *(void *)(v5 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v3 > 1;
}

uint64_t sub_1C230E1B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v3, (uint64_t)v14);
  if (!v15)
  {
    sub_1C230F988((uint64_t)v14, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    goto LABEL_13;
  }
  sub_1C22270A8();
  type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    uint64_t v12 = sub_1C254CB40();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  unint64_t v4 = *(void *)(v13 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 == 1)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1C2550620();
      uint64_t result = swift_bridgeObjectRelease();
      if (v11) {
        goto LABEL_5;
      }
    }
    goto LABEL_12;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x1C87588E0](0, v4);
    goto LABEL_8;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v4 + 32);
LABEL_8:
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v7, sel_identifier);

    sub_1C254CB20();
    uint64_t v9 = sub_1C254CB40();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 0, 1, v9);
  }
  __break(1u);
  return result;
}

void sub_1C230E3D8()
{
  sub_1C230F934(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v29 - v2;
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_tileView;
  if (*(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_tileView]) {
    return;
  }
  uint64_t v9 = (char *)objc_allocWithZone((Class)type metadata accessor for AccountUpgradeTileView());
  uint64_t v10 = v0;
  id v11 = sub_1C2348D4C((uint64_t)v10, v9);
  uint64_t v12 = *(void **)&v0[v8];
  *(void *)&v0[v8] = v11;

  id v13 = objc_msgSend(v10, sel_contentView);
  if (!*(void *)&v0[v8])
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v14 = v13;
  objc_msgSend(v13, sel_addSubview_);

  id v15 = objc_msgSend(v10, sel_contentView);
  id v16 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  objc_msgSend(v15, sel_setBackgroundColor_, v16);

  id v17 = *(void **)&v0[v8];
  if (!v17)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(v17, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB2788]);
  uint64_t v18 = *(void **)&v0[v8];
  if (!v18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v19 = v18;
  id v20 = objc_msgSend(v10, sel_contentView);
  objc_msgSend(v19, sel_hk_alignConstraintsWithView_, v20);

  uint64_t v21 = *(char **)&v0[v8];
  if (!v21)
  {
LABEL_16:
    __break(1u);
    return;
  }
  uint64_t v22 = *(void *)&v21[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 24];
  uint64_t v23 = *(void *)&v21[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 32];
  __swift_project_boxed_opaque_existential_1Tm(&v21[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider], v22);
  id v24 = *(void (**)(uint64_t, uint64_t))(v23 + 48);
  id v25 = v21;
  v24(v22, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1C230F988((uint64_t)v3, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
    uint64_t v26 = (char *)sub_1C22C9DF8();
    id v27 = sub_1C22C9C40();
    objc_msgSend(v26, sel_setImage_, v27);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    if (qword_1EBB6D898 != -1) {
      swift_once();
    }
    uint64_t v28 = qword_1EBB6EB60;
    v29[1] = 0;
    void v29[2] = 0;
    v29[0] = 1;
    char v30 = 1;
    uint64_t v26 = v25;
    sub_1C2406048((uint64_t)v7, v29, v28, v26);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1C230E79C()
{
  uint64_t v1 = v0;
  sub_1C230F934(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v31 - v3;
  uint64_t v5 = sub_1C254E690();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(v0, sel__bridgedConfigurationState);
  sub_1C254E680();

  if (qword_1EA2DD6B0 != -1) {
    swift_once();
  }
  sub_1C254E6A0();
  if (!v33)
  {
    sub_1C230F6D8((uint64_t)v32);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
  if ((swift_dynamicCast() & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v10 = v31[4];
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = *(void *)(v10 + 24);
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1C875A200](v11 + 56);
  if (!v12) {
    return swift_release();
  }
  id v13 = (void *)v12;
  uint64_t v14 = *(void **)(v11 + 40);
  type metadata accessor for ClinicalAccountManager();
  id v15 = (void *)swift_allocObject();
  uint64_t v16 = MEMORY[0x1E4FBC870];
  v15[5] = 0;
  v15[6] = 0;
  v15[4] = v16;
  void v15[2] = v14;
  v15[3] = objc_msgSend(v14, sel_clinicalAccountStore);
  uint64_t v17 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v17, (uint64_t)v32);
  if (!v33)
  {
    sub_1C230F988((uint64_t)v32, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    goto LABEL_16;
  }
  sub_1C22270A8();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_16;
  }
  unint64_t v18 = *(void *)(v31[0] + 16);
  swift_bridgeObjectRetain();
  swift_release();
  if (v18 >> 62) {
    goto LABEL_27;
  }
  uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    if (v19 > 1)
    {
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v1;
      id v21 = v1;
      ClinicalAccountManager.presentAccounts(presentingViewController:completion:)(v13, (uint64_t)sub_1C230F8F4, v20);
      swift_release();
      swift_release();

      return swift_release();
    }
LABEL_16:
    unint64_t v23 = *(void *)(v10 + 16);
    if (v23 >> 62) {
      break;
    }
    uint64_t v1 = *(void **)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v1) {
      goto LABEL_24;
    }
LABEL_18:
    if ((v23 & 0xC000000000000001) != 0)
    {
      id v24 = (id)MEMORY[0x1C87588E0](0, v23);
      goto LABEL_21;
    }
    if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v24 = *(id *)(v23 + 32);
LABEL_21:
      id v25 = v24;
      swift_bridgeObjectRelease();
      type metadata accessor for ClinicalAccountUpgradeManager();
      swift_allocObject();
      id v26 = v25;
      swift_retain();
      id v27 = v13;
      uint64_t v28 = sub_1C244C200(v26, (uint64_t)v15, v27);

      swift_release();
      uint64_t v29 = sub_1C254F840();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v4, 1, 1, v29);
      char v30 = (void *)swift_allocObject();
      v30[2] = 0;
      void v30[3] = 0;
      v30[4] = v28;
      sub_1C24D0A0C((uint64_t)v4, (uint64_t)&unk_1EA2DF398, (uint64_t)v30);

      swift_release();
      swift_release();
      return swift_release();
    }
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1C2550620();
  if (v1) {
    goto LABEL_18;
  }
LABEL_24:
  swift_release();

  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C230ED28()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254E690();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v6 = objc_msgSend(v1, sel__bridgedConfigurationState);
  sub_1C254E680();

  if (qword_1EA2DD6B0 != -1) {
    swift_once();
  }
  sub_1C254E6A0();
  if (v18)
  {
    type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
    if (swift_dynamicCast())
    {
      uint64_t v7 = v16;
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
      id v8 = objc_msgSend(*(id *)(*(void *)(v7 + 24) + 40), sel_healthStore);
      type metadata accessor for AccountStatusSummaryTileSettingsManager();
      uint64_t inited = swift_initStackObject();
      uint64_t v10 = MEMORY[0x1E4FBC868];
      *(void *)(inited + 16) = v8;
      *(void *)(inited + 24) = v10;
      sub_1C21A6E94();
      unint64_t v11 = *(void *)(v7 + 16);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v1;
      swift_bridgeObjectRetain();
      id v13 = v1;
      sub_1C24F5B48(v11, (uint64_t)sub_1C230F7C4, v12);
      swift_bridgeObjectRelease();
      swift_release();
      swift_setDeallocating();

      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else
  {
    sub_1C230F6D8((uint64_t)v17);
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C230EF74(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1C230F934(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v8 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1C254F820();
  id v9 = a1;
  uint64_t v10 = sub_1C254F810();
  unint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = MEMORY[0x1E4FBCFD8];
  void v11[2] = v10;
  v11[3] = v12;
  v11[4] = v9;
  sub_1C24D0BCC((uint64_t)v7, a3, (uint64_t)v11);
  return swift_release();
}

id MedicalRecordTimelineAccountUpgradeTileItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C230F184()
{
  return sub_1C254D8C0();
}

BOOL sub_1C230F1F8()
{
  return sub_1C230E0A4();
}

uint64_t sub_1C230F220@<X0>(uint64_t a1@<X8>)
{
  return sub_1C230E1B8(a1);
}

uint64_t sub_1C230F244()
{
  return sub_1C230E79C();
}

uint64_t sub_1C230F268()
{
  return sub_1C230ED28();
}

uint64_t sub_1C230F28C()
{
  uint64_t result = sub_1C254F430();
  qword_1EA2E0DD8 = result;
  return result;
}

uint64_t _s15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeTileItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)sub_1C2550620();
    if (!v4) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v4 = *(void **)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_7;
    }
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x1C87588E0](0, v3);
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_27;
    }
    id v5 = *(id *)(v3 + 32);
  }
  uint64_t v4 = v5;
LABEL_7:
  swift_bridgeObjectRelease();
  a2 = *(void *)(a2 + 16);
  if (!(a2 >> 62))
  {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_9;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_21;
    }
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  if (!result) {
    goto LABEL_20;
  }
LABEL_9:
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_27:
    id v8 = (id)MEMORY[0x1C87588E0](0, a2);
    goto LABEL_12;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v8 = *(id *)(a2 + 32);
LABEL_12:
    id v9 = v8;
    swift_bridgeObjectRelease();
    if (v4)
    {
      if (v9)
      {
        sub_1C230F9E4();
        id v10 = v4;
        char v11 = sub_1C254FF70();

LABEL_22:
        return v11 & 1;
      }
LABEL_21:
      char v11 = 0;
      id v9 = v4;
      goto LABEL_22;
    }
    if (v9)
    {
      char v11 = 0;
      goto LABEL_22;
    }
LABEL_23:
    char v11 = 1;
    return v11 & 1;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell()
{
  return self;
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem()
{
  return self;
}

uint64_t sub_1C230F49C()
{
  return sub_1C230F4D0(&qword_1EA2E0DF0);
}

uint64_t sub_1C230F4D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C230F510@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineAccountUpgradeTileItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineAccountUpgradeTileItem);
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t method lookup function for MedicalRecordTimelineAccountUpgradeTileItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineAccountUpgradeTileItemCell);
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileItemCell.shouldSelectCell(_:in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t sub_1C230F6D8(uint64_t a1)
{
  sub_1C230F734();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C230F734()
{
  if (!qword_1EA2E0E08)
  {
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, &qword_1EA2E0E08);
    }
  }
}

uint64_t sub_1C230F78C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C230F7C4()
{
  return sub_1C230EF74(*(void **)(v0 + 16), (uint64_t)&unk_1F1D94838, (uint64_t)&unk_1EA2E0E18);
}

uint64_t sub_1C230F800(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C2223E3C;
  return sub_1C230DBF0(a1, v4, v5, v6);
}

uint64_t sub_1C230F8B4()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C230F8F4()
{
  return sub_1C230EF74(*(void **)(v0 + 16), (uint64_t)&unk_1F1D948B0, (uint64_t)&unk_1EA2E0E20);
}

void sub_1C230F934(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C230F988(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C230F934(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C230F9E4()
{
  unint64_t result = qword_1EA2E1530;
  if (!qword_1EA2E1530)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E1530);
  }
  return result;
}

id sub_1C230FA28(void *a1)
{
  return sub_1C230FA48(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store, sub_1C23F6334);
}

id sub_1C230FA48(void *a1, void *a2, uint64_t (*a3)(id))
{
  uint64_t v5 = *(void **)(v3 + *a2);
  id v6 = a1;
  id v7 = v5;
  uint64_t v8 = a3(v6);
  unint64_t v10 = v9;

  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    id v12 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v12, sel_setDisplayItemType_, 15);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v13 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v14 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setTitle_, v14, 0xE000000000000000);

    id v15 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setSubtitle_, v15);

    objc_msgSend(v12, sel_setSeparatorStyle_, 0);
    objc_msgSend(v12, sel_setSeparatorHidden_, 0);
    objc_msgSend(v12, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

id sub_1C230FC54(void *a1)
{
  return sub_1C230FC74(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store, sub_1C23F6340);
}

id sub_1C230FC74(void *a1, void *a2, uint64_t (*a3)(id))
{
  uint64_t v5 = *(void **)(v3 + *a2);
  id v6 = a1;
  id v7 = v5;
  uint64_t v8 = a3(v6);
  unint64_t v10 = v9;

  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    id v12 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v12, sel_setDisplayItemType_, 15);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v13 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v14 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setTitle_, v14, 0xE000000000000000);

    id v15 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setSubtitle_, v15);

    objc_msgSend(v12, sel_setSeparatorStyle_, 0);
    objc_msgSend(v12, sel_setSeparatorHidden_, 0);
    objc_msgSend(v12, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

id sub_1C230FE80()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context);
    id v6 = (objc_class *)type metadata accessor for AllergyReactionFormatter();
    id v7 = (char *)objc_allocWithZone(v6);
    *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_store] = v4;
    *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context] = v5;
    v13.receiver = v7;
    v13.super_class = v6;
    id v8 = v4;
    id v9 = objc_msgSendSuper2(&v13, sel_init);
    unint64_t v10 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_1C230FF50(void *a1)
{
  id v2 = objc_msgSend(a1, sel_reactions);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  id v3 = v2;
  sub_1C21AB51C(0, &qword_1EA2E0E30);
  unint64_t v4 = sub_1C254F710();

  id v5 = sub_1C230FE80();
  id v6 = v5;
  uint64_t v7 = sub_1C2310F50(v4, (uint64_t)v6);
  swift_bridgeObjectRelease();

  return v7;
}

id AllergyRecordFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store);
}

uint64_t AllergyRecordFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context);
}

id AllergyRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  id v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id AllergyRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for AllergyRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1C2310118(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context);
  if (v2 == 1)
  {
    return sub_1C2310344(a1);
  }
  else if (v2)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C231019C(a1);
  }
  return result;
}

uint64_t sub_1C231019C(void *a1)
{
  sub_1C22EE4B0();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255FB80;
  *(void *)(inited + 32) = sub_1C230FA48(a1, &OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store, sub_1C23F6334);
  *(void *)(inited + 40) = sub_1C230FC74(a1, &OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store, sub_1C23F6340);
  *(void *)(inited + 48) = sub_1C2311224(a1);
  *(void *)(inited + 56) = sub_1C2311410(a1);
  *(void *)(inited + 64) = sub_1C253F4BC(a1);
  *(void *)(inited + 72) = sub_1C23115FC(a1);
  *(void *)(inited + 80) = sub_1C2311774(a1);
  *(void *)(inited + 88) = sub_1C23118EC(a1);
  *(void *)(inited + 96) = sub_1C2422FE8(a1);
  *(void *)(inited + 104) = sub_1C243F974(a1);
  sub_1C254F730();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  for (uint64_t i = 32; i != 112; i += 8)
  {
    objc_super v4 = *(void **)(inited + i);
    if (v4)
    {
      id v5 = v4;
      MEMORY[0x1C8757C00]();
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2310344(void *a1)
{
  uint64_t v1 = (uint64_t)a1;
  unint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v61 = MEMORY[0x1E4FBC860];
  id v3 = objc_msgSend(a1, sel_reactions);
  if (!v3) {
    goto LABEL_66;
  }
  objc_super v4 = v3;
  sub_1C21AB51C(0, &qword_1EA2E0E30);
  unint64_t v5 = sub_1C254F710();

  swift_bridgeObjectRetain();
  uint64_t v59 = (char *)sub_1C230FE80();

  unint64_t v60 = v2;
  if (v5 >> 62)
  {
LABEL_59:
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_60:

    swift_bridgeObjectRelease();
    unint64_t v45 = MEMORY[0x1E4FBC860];
LABEL_61:
    swift_bridgeObjectRelease_n();
    unint64_t v46 = swift_bridgeObjectRetain();
    sub_1C22723E8(v46);
    if (v45 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1C2550620();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v47 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v47)
    {
      id v48 = sub_1C2311224((void *)v1);
      if (v48)
      {
LABEL_72:
        id v52 = v48;
        MEMORY[0x1C8757C00](v52);
        if (*(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();

        return v61;
      }
      int v49 = 0;
LABEL_67:
      uint64_t v50 = (void *)sub_1C2422FE8(v1);
      if (v50)
      {
        id v51 = v50;
        MEMORY[0x1C8757C00](v51);
        if (*(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();

        if (!v49) {
          return v61;
        }
      }
      id v48 = (id)sub_1C243F974(v1);
      if (!v48) {
        return v61;
      }
      goto LABEL_72;
    }
LABEL_66:
    int v49 = 1;
    goto LABEL_67;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_60;
  }
LABEL_4:
  uint64_t v54 = v1;
  unint64_t v57 = v5;
  unint64_t v58 = v5 & 0xC000000000000001;
  uint64_t v1 = 4;
  uint64_t v55 = OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context;
  uint64_t v56 = v6;
  while (1)
  {
    if (v58) {
      id v7 = (id)MEMORY[0x1C87588E0](v1 - 4, v5);
    }
    else {
      id v7 = *(id *)(v5 + 8 * v1);
    }
    id v8 = v7;
    uint64_t v9 = v1 - 3;
    if (__OFADD__(v1 - 4, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    uint64_t v10 = *(void *)&v59[v55];
    if (v10 == 1)
    {
      id v11 = sub_1C23D16C8(v7);
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v12 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      id v13 = v8;
      swift_bridgeObjectRetain();
      id v14 = objc_msgSend(v13, sel_severity, 0xE000000000000000);
      if (v14
        && (id v15 = v14,
            id v16 = objc_msgSend(v14, sel_localizedPreferredName),
            v15,
            v16))
      {
        uint64_t v17 = sub_1C254F470();
        unint64_t v19 = v18;

        if ((v19 & 0x2000000000000000) != 0) {
          uint64_t v20 = HIBYTE(v19) & 0xF;
        }
        else {
          uint64_t v20 = v17 & 0xFFFFFFFFFFFFLL;
        }

        if (v20)
        {
LABEL_34:
          uint64_t v29 = HIBYTE(v19) & 0xF;
          if ((v19 & 0x2000000000000000) == 0) {
            uint64_t v29 = v17 & 0xFFFFFFFFFFFFLL;
          }
          if (!v29)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            char v30 = (void *)qword_1EBB6FBC8;
            swift_bridgeObjectRetain();
            id v31 = v30;
            swift_bridgeObjectRetain();
            uint64_t v32 = sub_1C254C730();
            unint64_t v34 = v33;
            swift_bridgeObjectRelease();

            goto LABEL_44;
          }
          goto LABEL_47;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
      }
      uint64_t v17 = 0;
      unint64_t v19 = 0xE000000000000000;
      goto LABEL_34;
    }
    if (v10) {
      break;
    }
    id v11 = sub_1C23D16C8(v7);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v21 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRetain();
    id v13 = v8;
    id v22 = objc_msgSend(v13, sel_severity, 0xE000000000000000);
    if (v22
      && (unint64_t v23 = v22,
          id v24 = objc_msgSend(v22, sel_localizedPreferredName),
          v23,
          v24))
    {
      uint64_t v25 = sub_1C254F470();
      unint64_t v27 = v26;

      if ((v27 & 0x2000000000000000) != 0) {
        uint64_t v28 = HIBYTE(v27) & 0xF;
      }
      else {
        uint64_t v28 = v25 & 0xFFFFFFFFFFFFLL;
      }

      if (!v28)
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = 0;
        unint64_t v27 = 0xE000000000000000;
      }
      unint64_t v2 = MEMORY[0x1E4FBC860];
    }
    else
    {

      uint64_t v25 = 0;
      unint64_t v27 = 0xE000000000000000;
    }
    uint64_t v35 = HIBYTE(v27) & 0xF;
    if ((v27 & 0x2000000000000000) == 0) {
      uint64_t v35 = v25 & 0xFFFFFFFFFFFFLL;
    }
    if (!v35)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = (void *)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      id v40 = v39;
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1C254C730();
      unint64_t v34 = v41;
      swift_bridgeObjectRelease();

LABEL_44:
      uint64_t v42 = HIBYTE(v34) & 0xF;
      if ((v34 & 0x2000000000000000) == 0) {
        uint64_t v42 = v32 & 0xFFFFFFFFFFFFLL;
      }
      if (v42)
      {
LABEL_47:
        id v36 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
        objc_msgSend(v36, sel_setDisplayItemType_, 15);
        swift_bridgeObjectRetain();
        uint64_t v43 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        objc_msgSend(v36, sel_setTitle_, v43);

        uint64_t v44 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        objc_msgSend(v36, sel_setSubtitle_, v44);

        objc_msgSend(v36, sel_setSeparatorStyle_, 0);
        objc_msgSend(v36, sel_setSeparatorHidden_, 0);
        objc_msgSend(v36, sel_setExtraTopPadding_, 0);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        id v36 = 0;
      }
      unint64_t v2 = MEMORY[0x1E4FBC860];
      goto LABEL_50;
    }
    id v36 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v36, sel_setDisplayItemType_, 15);
    swift_bridgeObjectRetain();
    uint64_t v37 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_setTitle_, v37);

    uint64_t v38 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_setSubtitle_, v38);

    objc_msgSend(v36, sel_setSeparatorStyle_, 0);
    objc_msgSend(v36, sel_setSeparatorHidden_, 0);
    objc_msgSend(v36, sel_setExtraTopPadding_, 0);
    swift_bridgeObjectRelease_n();

LABEL_50:
    unint64_t v5 = v57;
    if (v11)
    {
      MEMORY[0x1C8757C00](v11);
      if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }
    if (v36)
    {
      MEMORY[0x1C8757C00](v36);
      if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }

    sub_1C22723E8(v2);
    ++v1;
    if (v9 == v56)
    {

      swift_bridgeObjectRelease();
      unint64_t v45 = v60;
      uint64_t v1 = v54;
      goto LABEL_61;
    }
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

id AllergyRecordFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AllergyRecordFormatter.init()()
{
}

id AllergyRecordFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AllergyRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C2310E38()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store);
}

uint64_t sub_1C2310E4C()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context);
}

id sub_1C2310E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (objc_class *)type metadata accessor for AllergyRecordFormatter();
  id v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter] = 0;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1C2310EE0(void *a1)
{
  uint64_t v2 = *(void *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context);
  if (v2 == 1) {
    return sub_1C2310344(a1);
  }
  if (!v2) {
    return sub_1C231019C(a1);
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t sub_1C2310F50(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    if (!v4) {
      return v5;
    }
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1C2274CD0(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    uint64_t v6 = 0;
    uint64_t v5 = v13;
    unint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context);
    while (v4 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x1C87588E0](v6, a1);
      }
      else {
        id v8 = *(id *)(a1 + 8 * v6 + 32);
      }
      objc_super v9 = v8;
      if (v7 >= 2) {
        goto LABEL_18;
      }
      a2 = sub_1C23D1984(v8);

      unint64_t v11 = *(void *)(v13 + 16);
      unint64_t v10 = *(void *)(v13 + 24);
      if (v11 >= v10 >> 1) {
        sub_1C2274CD0(v10 > 1, v11 + 1, 1);
      }
      ++v6;
      *(void *)(v13 + 16) = v11 + 1;
      *(void *)(v13 + 8 * v11 + 32) = a2;
      if (v4 == v6) {
        return v5;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_18:
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AllergyRecordFormatter()
{
  return self;
}

unint64_t sub_1C2311114(uint64_t a1)
{
  unint64_t result = sub_1C231113C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C231113C()
{
  unint64_t result = qword_1EA2E0E50;
  if (!qword_1EA2E0E50)
  {
    type metadata accessor for AllergyRecordFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0E50);
  }
  return result;
}

uint64_t method lookup function for AllergyRecordFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AllergyRecordFormatter);
}

uint64_t dispatch thunk of AllergyRecordFormatter.structuredItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AllergyRecordFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of AllergyRecordFormatter.displayItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

id sub_1C2311224(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1C23F634C(v1);
  unint64_t v4 = v3;

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    id v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    id v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    objc_super v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

id sub_1C2311410(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1C23F6358(v1);
  unint64_t v4 = v3;

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    id v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    id v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    objc_super v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

id sub_1C23115FC(void *a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(a1, sel_recordedDate, 0xE000000000000000);
  id v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  id v11 = sub_1C23898E0(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1C2311774(void *a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(a1, sel_onsetDate, 0xE000000000000000);
  id v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  id v11 = sub_1C23898E0(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1C23118EC(void *a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(a1, sel_lastOccurrenceDate, 0xE000000000000000);
  id v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  id v11 = sub_1C23898E0(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t static HKQuery.sortDescriptorsForCreationDate(ascending:)(char a1)
{
  return sub_1C2311AE4(a1);
}

id static HKQuery.predicateForRecordsCreated(within:)(uint64_t a1)
{
  return sub_1C2311A94(a1);
}

id static HKQuery.predicateForRecordsModified(within:)(uint64_t a1)
{
  return sub_1C2311A94(a1);
}

id sub_1C2311A94(uint64_t a1)
{
  uint64_t v2 = sub_1C254F470();
  id v4 = _sSo7HKQueryC15HealthRecordsUIE19predicateForKeyPath_6withinSo11NSPredicateCSS_10Foundation12DateIntervalVtFZ_0(v2, v3, a1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t static HKQuery.sortDescriptorsForRecordModifiedDate(ascending:)(char a1)
{
  return sub_1C2311AE4(a1);
}

uint64_t sub_1C2311AE4(char a1)
{
  sub_1C21ACA3C();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CEB0;
  sub_1C254F470();
  id v3 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  id v4 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_initWithKey_ascending_, v4, a1 & 1);

  *(void *)(v2 + 32) = v5;
  sub_1C254F730();
  return v2;
}

id _sSo7HKQueryC15HealthRecordsUIE19predicateForKeyPath_6withinSo11NSPredicateCSS_10Foundation12DateIntervalVtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a1;
  uint64_t v25 = a3;
  uint64_t v5 = sub_1C254CAD0();
  uint64_t v23 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21ACA3C();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CD70;
  uint64_t v28 = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  sub_1C23127D4(0, (unint64_t *)&qword_1EBB6F520, (void (*)(uint64_t))sub_1C220D8F8);
  uint64_t v27 = v10;
  uint64_t v11 = swift_allocObject();
  long long v26 = xmmword_1C255CDA0;
  *(_OWORD *)(v11 + 16) = xmmword_1C255CDA0;
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v12 = sub_1C220D950();
  *(void *)(v11 + 64) = v12;
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1C254C500();
  uint64_t v13 = sub_1C254CA50();
  id v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v22 = v6 + 8;
  v14(v8, v5);
  uint64_t v15 = sub_1C21AB51C(0, &qword_1EA2E0E58);
  *(void *)(v11 + 96) = v15;
  unint64_t v16 = sub_1C231276C();
  *(void *)(v11 + 104) = v16;
  *(void *)(v11 + 72) = v13;
  *(void *)(v9 + 32) = sub_1C254F9A0();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v26;
  *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v17 + 64) = v12;
  *(void *)(v17 + 32) = v24;
  *(void *)(v17 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1C254C4E0();
  uint64_t v18 = sub_1C254CA50();
  v14(v8, v23);
  *(void *)(v17 + 96) = v15;
  *(void *)(v17 + 104) = v16;
  *(void *)(v17 + 72) = v18;
  *(void *)(v9 + 40) = sub_1C254F9A0();
  uint64_t v29 = v9;
  sub_1C254F730();
  unint64_t v19 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v19);

  return v20;
}

id _sSo7HKQueryC15HealthRecordsUIE025predicateForRecentAccountC09accountIdSo11NSPredicateC10Foundation4UUIDV_tFZ_0()
{
  uint64_t v0 = sub_1C254CAD0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C254C520();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21ACA3C();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C255CD70;
  uint64_t v9 = self;
  uint64_t v10 = (void *)sub_1C254CB00();
  id v11 = objc_msgSend(v9, sel_predicateForRecordsFromClinicalAccountIdentifier_, v10);

  *(void *)(v8 + 32) = v11;
  sub_1C254CA90();
  static DateInterval.weekInterval(ending:)((uint64_t)v3, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v12 = sub_1C254F470();
  id v14 = _sSo7HKQueryC15HealthRecordsUIE19predicateForKeyPath_6withinSo11NSPredicateCSS_10Foundation12DateIntervalVtFZ_0(v12, v13, (uint64_t)v7);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(void *)(v8 + 40) = v14;
  v18[1] = v8;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  uint64_t v15 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v15);

  return v16;
}

id _sSo7HKQueryC15HealthRecordsUIE027predicateForRelevantAccountC09accountIdSo11NSPredicateC10Foundation4UUIDV_tFZ_0(uint64_t a1)
{
  uint64_t v53 = a1;
  uint64_t v1 = sub_1C254C6F0();
  uint64_t v58 = *(void *)(v1 - 8);
  uint64_t v59 = v1;
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  id v52 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  unint64_t v60 = (char *)&v41 - v4;
  uint64_t v5 = sub_1C254CCC0();
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  MEMORY[0x1F4188790](v5);
  int v49 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254CAD0();
  uint64_t v54 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v50 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v41 - v10;
  sub_1C254CAC0();
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AC98]), sel_init);
  id v13 = objc_msgSend(v12, sel_currentCalendar);

  sub_1C254CC40();
  sub_1C23127D4(0, &qword_1EA2DE7B0, MEMORY[0x1E4F27C88]);
  uint64_t v48 = v14;
  uint64_t v15 = sub_1C254CCB0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  uint64_t v18 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (v18 + 32) & ~v18;
  uint64_t v44 = 2 * v17;
  uint64_t v47 = v18 | 7;
  uint64_t v20 = swift_allocObject();
  long long v46 = xmmword_1C255D0E0;
  *(_OWORD *)(v20 + 16) = xmmword_1C255D0E0;
  unsigned int v45 = *MEMORY[0x1E4F27C20];
  id v21 = *(void (**)(uint64_t))(v16 + 104);
  v21(v20 + v19);
  unsigned int v43 = *MEMORY[0x1E4F27C30];
  v21(v20 + v19 + v17);
  unsigned int v42 = *MEMORY[0x1E4F27BF0];
  v21(v20 + v19 + 2 * v17);
  sub_1C2418274(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v51 = v11;
  uint64_t v22 = v49;
  sub_1C254CC20();
  swift_bridgeObjectRelease();
  uint64_t v23 = v50;
  sub_1C254CA20();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v46;
  ((void (*)(uint64_t, void, uint64_t))v21)(v24 + v19, v45, v15);
  ((void (*)(uint64_t, void, uint64_t))v21)(v24 + v19 + v17, v43, v15);
  ((void (*)(uint64_t, void, uint64_t))v21)(v24 + v19 + v44, v42, v15);
  sub_1C2418274(v24);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v25 = v52;
  sub_1C254CC20();
  swift_bridgeObjectRelease();
  sub_1C21ACA3C();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1C255CD70;
  uint64_t v27 = self;
  uint64_t v28 = (void *)sub_1C254CB00();
  id v29 = objc_msgSend(v27, sel_predicateForRecordsFromClinicalAccountIdentifier_, v28);

  *(void *)(v26 + 32) = v29;
  char v30 = (void *)sub_1C254C660();
  id v31 = v60;
  uint64_t v32 = (void *)sub_1C254C660();
  id v33 = objc_msgSend(v27, sel_predicateForRecordsWithSortDateFromStartDateComponents_endDateComponents_, v30, v32);

  *(void *)(v26 + 40) = v33;
  uint64_t v61 = v26;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  unint64_t v34 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v35 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v34);

  uint64_t v36 = v59;
  uint64_t v37 = *(void (**)(char *, uint64_t))(v58 + 8);
  v37(v25, v59);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v54 + 8);
  uint64_t v39 = v55;
  v38(v23, v55);
  v37(v31, v36);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v22, v57);
  v38(v51, v39);
  return v35;
}

unint64_t sub_1C231276C()
{
  unint64_t result = qword_1EA2E0E60;
  if (!qword_1EA2E0E60)
  {
    sub_1C21AB51C(255, &qword_1EA2E0E58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0E60);
  }
  return result;
}

void sub_1C23127D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550820();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void AddAccountFeedItemData.onboardingType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t AddAccountFeedItemData.sourceIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

unsigned char *AddAccountFeedItemData.init(onboardingType:sourceIdentifier:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(unsigned char *)a4 = *result;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = a3;
  return result;
}

uint64_t sub_1C2312878()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x696472616F626E6FLL;
  }
}

uint64_t sub_1C23128C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C23132B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C23128EC(uint64_t a1)
{
  unint64_t v2 = sub_1C2312DBC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2312928(uint64_t a1)
{
  unint64_t v2 = sub_1C2312DBC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AddAccountFeedItemData.encode(to:)(void *a1)
{
  sub_1C2312E64(0, &qword_1EBB6DDA0, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v12 - v7;
  char v9 = *v1;
  uint64_t v10 = *((void *)v1 + 1);
  v12[0] = *((void *)v1 + 2);
  v12[1] = v10;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C2312DBC();
  sub_1C2550A70();
  char v15 = v9;
  char v14 = 0;
  sub_1C2312E10();
  sub_1C2550790();
  if (!v2)
  {
    char v13 = 1;
    sub_1C2550780();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AddAccountFeedItemData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C2312E64(0, &qword_1EBB6D980, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C2312DBC();
  sub_1C2550A50();
  if (!v2)
  {
    char v17 = 0;
    sub_1C2312EC8();
    sub_1C2550700();
    char v10 = v18;
    char v16 = 1;
    uint64_t v12 = sub_1C25506F0();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(unsigned char *)a2 = v10;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1C2312CD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AddAccountFeedItemData.init(from:)(a1, a2);
}

uint64_t sub_1C2312CE8(void *a1)
{
  return AddAccountFeedItemData.encode(to:)(a1);
}

BOOL _s15HealthRecordsUI22AddAccountFeedItemDataV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v4 = *a1;
  uint64_t v5 = *((void *)a1 + 1);
  uint64_t v6 = *((void *)a1 + 2);
  unsigned int v7 = *a2;
  uint64_t v8 = *((void *)a2 + 2);
  if (v4 <= 0xFD)
  {
    if (v7 > 0xFD) {
      return 0;
    }
    if ((v4 & 0x80) != 0)
    {
      if ((v7 & 0x80) == 0 || ((v4 & 1) == 0) == (v7 & 1)) {
        return 0;
      }
    }
    else if ((v7 & 0x80) != 0 || ((((v4 & 1) == 0) ^ v7) & 1) == 0)
    {
      return 0;
    }
  }
  else if (v7 <= 0xFD)
  {
    return 0;
  }
  if (v6) {
    return v8 && (v5 == *((void *)a2 + 1) && v6 == v8 || (sub_1C2550870() & 1) != 0);
  }
  return !v8;
}

unint64_t sub_1C2312DBC()
{
  unint64_t result = qword_1EBB6F040;
  if (!qword_1EBB6F040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F040);
  }
  return result;
}

unint64_t sub_1C2312E10()
{
  unint64_t result = qword_1EBB6DB98;
  if (!qword_1EBB6DB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6DB98);
  }
  return result;
}

void sub_1C2312E64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2312DBC();
    unint64_t v7 = a3(a1, &type metadata for AddAccountFeedItemData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C2312EC8()
{
  unint64_t result = qword_1EBB6D9C8;
  if (!qword_1EBB6D9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6D9C8);
  }
  return result;
}

uint64_t destroy for AddAccountFeedItemData()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s15HealthRecordsUI22AddAccountFeedItemDataVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AddAccountFeedItemData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AddAccountFeedItemData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AddAccountFeedItemData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AddAccountFeedItemData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AddAccountFeedItemData()
{
  return &type metadata for AddAccountFeedItemData;
}

unsigned char *storeEnumTagSinglePayload for AddAccountFeedItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2313174);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AddAccountFeedItemData.CodingKeys()
{
  return &type metadata for AddAccountFeedItemData.CodingKeys;
}

unint64_t sub_1C23131B0()
{
  unint64_t result = qword_1EA2E0E68;
  if (!qword_1EA2E0E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0E68);
  }
  return result;
}

unint64_t sub_1C2313208()
{
  unint64_t result = qword_1EBB6F050;
  if (!qword_1EBB6F050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F050);
  }
  return result;
}

unint64_t sub_1C2313260()
{
  unint64_t result = qword_1EBB6F048;
  if (!qword_1EBB6F048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F048);
  }
  return result;
}

uint64_t sub_1C23132B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696472616F626E6FLL && a2 == 0xEE0065707954676ELL;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C257CE40)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t type metadata accessor for RecordDetailsDataSource()
{
  uint64_t result = qword_1EA2E0E88;
  if (!qword_1EA2E0E88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2313414()
{
  return swift_initClassMetadata2();
}

void *sub_1C2313468()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DAE0();
  unsigned int v4 = (void *)sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_contentInsets);
  objc_msgSend(v4, sel_setContentInsets_, 10.0);
  return v4;
}

uint64_t sub_1C2313560()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254F230();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v26 = (uint64_t *)((char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned int v4 = dispatch_group_create();
  uint64_t v5 = swift_allocObject();
  sub_1C2314F28(0, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255CD90;
  sub_1C2313B88((void *)(v6 + 32));
  *(void *)(v5 + 16) = v6;
  uint64_t v25 = v5 + 16;
  dispatch_group_enter(v4);
  uint64_t v7 = qword_1EA2E0E70;
  uint64_t v8 = *(void **)(v0 + qword_1EA2E0E70);
  uint64_t v9 = *(void *)(v0 + qword_1EA2E0E78);
  uint64_t v10 = *(void *)(v1 + qword_1EA2E0E80);
  id v11 = (void *)swift_allocObject();
  void v11[2] = v5;
  v11[3] = v1;
  v11[4] = v4;
  id v33 = sub_1C2314FCC;
  unint64_t v34 = v11;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v30 = 1107296256;
  id v31 = sub_1C2313A50;
  uint64_t v32 = &block_descriptor_33;
  uint64_t v12 = _Block_copy(&aBlock);
  id v13 = v8;
  swift_retain();
  swift_retain();
  uint64_t v14 = v4;
  swift_release();
  objc_msgSend(v13, sel_fetchStructuredFieldItemsWithHealthRecordsStore_conceptStore_completion_, v9, v10, v12);
  _Block_release(v12);

  dispatch_group_enter(v14);
  uint64_t v15 = *(void **)(v1 + v7);
  char v16 = (void *)swift_allocObject();
  v16[2] = v5;
  void v16[3] = v1;
  v16[4] = v14;
  id v33 = sub_1C231502C;
  unint64_t v34 = v16;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v30 = 1107296256;
  id v31 = sub_1C2238754;
  uint64_t v32 = &block_descriptor_30_0;
  char v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  char v18 = v14;
  id v19 = v15;
  swift_release();
  objc_msgSend(v19, sel_fetchDetailItemsWithHealthRecordsStore_conceptStore_completion_, v9, v10, v17);
  _Block_release(v17);

  sub_1C254FBD0();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v20 = sub_1C254FC70();
  id v21 = v26;
  uint64_t v22 = v27;
  *uint64_t v26 = v20;
  uint64_t v23 = v28;
  (*(void (**)(uint64_t *, void, uint64_t))(v22 + 104))(v21, *MEMORY[0x1E4FBCBF0], v28);
  LOBYTE(v9) = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v22 + 8))(v21, v23);
  if (v9)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C254DA30();

    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C2313954(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  unint64_t v5 = MEMORY[0x1E4FBC860];
  unint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v6; ++i)
    {
      unint64_t v8 = swift_bridgeObjectRetain();
      sub_1C22723E8(v8);
    }
    swift_bridgeObjectRelease();
    unint64_t v5 = v10;
  }
  swift_retain();
  sub_1C2315038(v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_1C2272668(v9);
  swift_endAccess();
  swift_bridgeObjectRelease();
  dispatch_group_leave(a4);
}

uint64_t sub_1C2313A50(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1C2315AD8(0, (unint64_t *)&qword_1EA2DF648, (unint64_t *)&qword_1EA2DE708, (uint64_t)off_1E644A2F0, MEMORY[0x1E4FBB320]);
  uint64_t v2 = sub_1C254F710();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1C2313AF0(unint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  swift_retain();
  sub_1C2315520(a1);
  swift_release();
  swift_beginAccess();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1C2272668(v6);
  swift_endAccess();
  swift_bridgeObjectRelease();
  dispatch_group_leave(a4);
}

uint64_t sub_1C2313B88@<X0>(void *a1@<X8>)
{
  uint64_t v3 = qword_1EA2E0E70;
  id v4 = objc_msgSend(*(id *)(v1 + qword_1EA2E0E70), sel_meaningfulDateTitle);
  uint64_t v5 = sub_1C254F470();
  unint64_t v7 = v6;

  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v9 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C2314F28(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C255CDA0;
    uint64_t v11 = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v12 = sub_1C220D950();
    *(void *)(v10 + 64) = v12;
    *(void *)(v10 + 32) = v5;
    *(void *)(v10 + 40) = v7;
    id v13 = objc_msgSend(*(id *)(v1 + v3), sel_meaningfulDateString, 0xE000000000000000);
    uint64_t v14 = sub_1C254F470();
    uint64_t v16 = v15;

    *(void *)(v10 + 96) = v11;
    *(void *)(v10 + 104) = v12;
    *(void *)(v10 + 72) = v14;
    *(void *)(v10 + 80) = v16;
    uint64_t v17 = sub_1C254F4B0();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(*(id *)(v1 + v3), sel_meaningfulDateString);
    uint64_t v17 = sub_1C254F470();
    uint64_t v19 = v21;
  }
  id v22 = objc_msgSend(*(id *)(v1 + v3), sel_preferredDisplayName);
  uint64_t v23 = sub_1C254F470();
  uint64_t v25 = v24;

  uint64_t v26 = type metadata accessor for RecordDetailTitleItem();
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = v23;
  v27[3] = v25;
  void v27[4] = v17;
  v27[5] = v19;
  a1[3] = v26;
  uint64_t result = sub_1C2315A90(&qword_1EA2E0ED0, v28, (void (*)(uint64_t))type metadata accessor for RecordDetailTitleItem);
  a1[4] = result;
  *a1 = v27;
  return result;
}

void sub_1C2313E3C()
{
}

void sub_1C2313E58()
{
}

void sub_1C2313E74()
{
}

void sub_1C2313EA0()
{
  uint64_t v1 = *(void **)(v0 + qword_1EA2E0E80);
}

uint64_t sub_1C2313EF0()
{
  uint64_t v0 = sub_1C254DF40();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2313F60()
{
  return type metadata accessor for RecordDetailsDataSource();
}

uint64_t type metadata accessor for RecordDetailTitleItem()
{
  return self;
}

uint64_t sub_1C2313F8C(uint64_t a1, uint64_t a2)
{
  return sub_1C2314748(a1, a2, (void (*)(void))type metadata accessor for RecordDetailTitleCell, &qword_1EA2E0EB0, (void (*)(uint64_t))type metadata accessor for RecordDetailTitleCell);
}

uint64_t sub_1C2313FD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254E890();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI21RecordDetailTitleCell_item;
  swift_beginAccess();
  sub_1C2227014(v6, (uint64_t)v27);
  if (!v28) {
    return sub_1C2227100((uint64_t)v27);
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for RecordDetailTitleItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    v26[0] = v3;
    uint64_t v8 = v26[1];
    MEMORY[0x1C87582A0]();
    swift_bridgeObjectRetain();
    sub_1C254E860();
    id v9 = self;
    id v10 = objc_msgSend(v9, sel_labelColor);
    uint64_t v11 = (void (*)(uint64_t *, void))sub_1C254E7A0();
    sub_1C254E780();
    v11(v27, 0);
    unint64_t v12 = self;
    uint64_t result = (uint64_t)objc_msgSend(v12, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB28C8], 1024);
    if (result)
    {
      id v13 = (void (*)(uint64_t *, void))sub_1C254E7A0();
      sub_1C254E770();
      v13(v27, 0);
      unint64_t v14 = *(void *)(v8 + 40);
      uint64_t v15 = HIBYTE(v14) & 0xF;
      if ((v14 & 0x2000000000000000) == 0) {
        uint64_t v15 = *(void *)(v8 + 32) & 0xFFFFFFFFFFFFLL;
      }
      if (v15)
      {
        swift_bridgeObjectRetain();
        sub_1C254E740();
        id v16 = objc_msgSend(v9, sel_secondaryLabelColor);
        uint64_t v17 = (void (*)(uint64_t *, void))sub_1C254E7F0();
        sub_1C254E780();
        v17(v27, 0);
        id v18 = objc_msgSend(v12, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
        uint64_t v19 = (void (*)(uint64_t *, void))sub_1C254E7F0();
        sub_1C254E770();
        v19(v27, 0);
        sub_1C254E830();
      }
      uint64_t v28 = v2;
      uint64_t v29 = MEMORY[0x1E4FB0F88];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
      uint64_t v21 = v26[0];
      (*(void (**)(uint64_t *, char *, uint64_t))(v26[0] + 16))(boxed_opaque_existential_1, v5, v2);
      MEMORY[0x1C8758230](v27);
      sub_1C2201F2C();
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1C255CDA0;
      *(void *)(v22 + 32) = sub_1C254F470();
      *(void *)(v22 + 40) = v23;
      *(void *)(v22 + 48) = 0x695464726F636552;
      *(void *)(v22 + 56) = 0xEF6C6C6543656C74;
      uint64_t v24 = (void *)sub_1C254F700();
      id v25 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v1, sel_setAccessibilityIdentifier_, v25);
      swift_release();
      swift_bridgeObjectRelease();

      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v5, v2);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_1C23144E0()
{
  return sub_1C2314D24(type metadata accessor for RecordDetailTitleCell);
}

uint64_t type metadata accessor for RecordDetailTitleCell()
{
  return self;
}

uint64_t sub_1C231452C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C22C8BB4(&OBJC_IVAR____TtC15HealthRecordsUI21RecordDetailTitleCell_item, a1);
}

uint64_t sub_1C2314538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2314DF8(a1, a2, a3, &OBJC_IVAR____TtC15HealthRecordsUI21RecordDetailTitleCell_item, (void (*)(uint64_t))sub_1C2313FD4);
}

uint64_t (*sub_1C2314558(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C23145B8;
}

uint64_t sub_1C23145B8(uint64_t a1, char a2)
{
  return sub_1C2314EE4(a1, a2, (uint64_t (*)(uint64_t))sub_1C2313FD4);
}

uint64_t sub_1C23145D0()
{
  uint64_t v4 = sub_1C2550AA0();
  sub_1C254F5A0();
  uint64_t v3 = *(void **)(v0 + 16);
  sub_1C2315AD8(0, &qword_1EA2E0EC0, &qword_1EA2E0EC8, 0x1E4F2B128, MEMORY[0x1E4FBB718]);
  id v1 = v3;
  sub_1C254F4F0();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C23146A4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReferenceRangeItem()
{
  return self;
}

uint64_t sub_1C2314700(uint64_t a1, uint64_t a2)
{
  return sub_1C2314748(a1, a2, (void (*)(void))type metadata accessor for ReferenceRangeCell, &qword_1EA2E0EB8, (void (*)(uint64_t))type metadata accessor for ReferenceRangeCell);
}

uint64_t sub_1C2314748(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  a3();
  sub_1C2315A90(a4, v7, a5);
  return sub_1C254D330();
}

uint64_t sub_1C23147A4()
{
  return sub_1C23145D0();
}

id sub_1C23147C8()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell____lazy_storage___expandedRangeValueView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell____lazy_storage___expandedRangeValueView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell____lazy_storage___expandedRangeValueView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ExpandedRangeValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C2314860()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell_item;
  swift_beginAccess();
  sub_1C2227014(v2, (uint64_t)v19);
  if (v20)
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    type metadata accessor for ReferenceRangeItem();
    if (swift_dynamicCast())
    {
      id v3 = sub_1C23147C8();
      uint64_t v4 = *(void *)(v18 + 16);
      if (v4
        && (id v5 = objc_msgSend(self, sel_referenceRangeViewDataFromInspectableValueInRange_, v4)) != 0)
      {
        id v6 = v5;
        id v7 = v5;
        id v8 = sub_1C22C22C8();
        sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
        id v9 = v7;
        id v10 = (void *)sub_1C254FE50();
        uint64_t v11 = (void *)sub_1C254FE50();
        id v12 = sub_1C21EFF3C(v10, v11);

        objc_msgSend(v8, sel_setAttributedText_, v12);
        id v13 = v9;
        sub_1C2424EA8(v6);
      }
      else
      {
        id v13 = 0;
      }
      sub_1C22C2A88();

      sub_1C2201F2C();
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C255CDA0;
      *(void *)(v14 + 32) = sub_1C254F470();
      *(void *)(v14 + 40) = v15;
      *(void *)(v14 + 48) = 0xD000000000000012;
      *(void *)(v14 + 56) = 0x80000001C2564460;
      id v16 = (void *)sub_1C254F700();
      id v17 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v1, sel_setAccessibilityIdentifier_, v17);
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v19);
  }
}

id sub_1C2314B28(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell____lazy_storage___expandedRangeValueView] = 0;
  id v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell_item];
  id v10 = (objc_class *)type metadata accessor for ReferenceRangeCell();
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v17.receiver = v4;
  v17.super_class = v10;
  id v11 = objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  id v12 = objc_msgSend(v11, sel_contentView);
  id v13 = sub_1C23147C8();
  objc_msgSend(v12, sel_addSubview_, v13);

  id v14 = sub_1C23147C8();
  id v15 = objc_msgSend(v11, sel_contentView);
  objc_msgSend(v14, sel_hk_alignConstraintsWithView_insets_, v15, 16.0, 16.0, 16.0, 16.0);

  return v11;
}

id sub_1C2314D0C()
{
  return sub_1C2314D24(type metadata accessor for ReferenceRangeCell);
}

id sub_1C2314D24(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for ReferenceRangeCell()
{
  return self;
}

uint64_t sub_1C2314DCC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C22C8BB4(&OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell_item, a1);
}

uint64_t sub_1C2314DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2314DF8(a1, a2, a3, &OBJC_IVAR____TtC15HealthRecordsUI18ReferenceRangeCell_item, (void (*)(uint64_t))sub_1C2314860);
}

uint64_t sub_1C2314DF8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t))
{
  uint64_t v8 = v5 + *a4;
  swift_beginAccess();
  sub_1C2232E74(a1, v8);
  uint64_t v9 = swift_endAccess();
  a5(v9);
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C2314E6C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2314ECC;
}

uint64_t sub_1C2314ECC(uint64_t a1, char a2)
{
  return sub_1C2314EE4(a1, a2, (uint64_t (*)(uint64_t))sub_1C2314860);
}

uint64_t sub_1C2314EE4(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

void sub_1C2314F28(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C21FFE74(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2314F90()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2314FCC(uint64_t a1)
{
  sub_1C2313954(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t objectdestroy_23Tm()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C231502C(unint64_t a1)
{
  sub_1C2313AF0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32));
}

void sub_1C2315038(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = a1;
  uint64_t v58 = (void *)MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    if (v4) {
      goto LABEL_3;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_28;
  }
LABEL_3:
  uint64_t v45 = v2;
  unint64_t v53 = v3 & 0xC000000000000001;
  uint64_t v48 = @"UIA.Health.HealthRecords";
  uint64_t v5 = 4;
  long long v47 = xmmword_1C255CDA0;
  uint64_t v52 = v4;
  unint64_t v46 = v3;
  while (1)
  {
    uint64_t v2 = v5 - 4;
    if (v53) {
      id v6 = (id)MEMORY[0x1C87588E0](v5 - 4, v3);
    }
    else {
      id v6 = *(id *)(v3 + 8 * v5);
    }
    id v7 = v6;
    uint64_t v8 = v5 - 3;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (objc_msgSend(v6, sel_displayItemType) != (id)15)
    {
      uint64_t v56 = 0;
      long long v54 = 0u;
      long long v55 = 0u;
      goto LABEL_19;
    }
    id v9 = objc_msgSend(v7, sel_title);
    if (!v9) {
      break;
    }
    uint64_t v10 = v9;
    uint64_t v11 = sub_1C254F470();
    uint64_t v50 = v12;
    uint64_t v51 = v11;

    id v13 = objc_msgSend(v7, sel_subtitle);
    if (v13)
    {
      id v14 = v13;
      uint64_t v49 = sub_1C254F470();
      uint64_t v16 = v15;
    }
    else
    {
      uint64_t v49 = 0;
      uint64_t v16 = 0;
    }
    id v17 = objc_msgSend(v7, sel_title, v45);
    if (!v17) {
      goto LABEL_30;
    }
    uint64_t v18 = v17;
    sub_1C254F470();

    sub_1C2201F2C();
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v47;
    *(void *)(v19 + 32) = sub_1C254F470();
    *(void *)(v19 + 40) = v20;
    uint64_t v21 = (void *)sub_1C254F430();
    id v22 = objc_msgSend(v21, sel_removeSpecialCharactersAndWhiteSpaces);

    uint64_t v23 = sub_1C254F470();
    uint64_t v25 = v24;

    *(void *)&v57[0] = v23;
    *((void *)&v57[0] + 1) = v25;
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t v26 = *((void *)&v57[0] + 1);
    *(void *)(v19 + 48) = *(void *)&v57[0];
    *(void *)(v19 + 56) = v26;
    uint64_t v27 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v28 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (!v28) {
      goto LABEL_31;
    }
    uint64_t v29 = sub_1C254F470();
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();

    uint64_t v32 = type metadata accessor for TitleSubtitleDetailItem(0);
    id v33 = (void *)swift_allocObject();
    sub_1C254CB30();
    uint64_t v34 = v50;
    v33[2] = v51;
    void v33[3] = v34;
    v33[4] = v49;
    v33[5] = v16;
    v33[6] = 0;
    v33[7] = MEMORY[0x1E4FBC860];
    v33[8] = v29;
    v33[9] = v31;
    *((void *)&v55 + 1) = v32;
    uint64_t v56 = sub_1C2315A90(&qword_1EA2DF188, 255, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItem);
    *(void *)&long long v54 = v33;
    unint64_t v3 = v46;
LABEL_19:

    if (*((void *)&v55 + 1))
    {
      sub_1C21F44EC(&v54, (uint64_t)v57);
      sub_1C21F44EC(v57, (uint64_t)&v54);
      id v35 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        id v35 = sub_1C226CD5C(0, v35[2] + 1, 1, v35);
        uint64_t v58 = v35;
      }
      unint64_t v37 = v35[2];
      unint64_t v36 = v35[3];
      if (v37 >= v36 >> 1) {
        uint64_t v58 = sub_1C226CD5C((void *)(v36 > 1), v37 + 1, 1, v35);
      }
      uint64_t v38 = *((void *)&v55 + 1);
      uint64_t v39 = v56;
      uint64_t v40 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v54, *((uint64_t *)&v55 + 1));
      __n128 v41 = MEMORY[0x1F4188790](v40);
      unsigned int v43 = (char *)&v45 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v44 + 16))(v43, v41);
      sub_1C2507304(v37, (uint64_t)v43, (uint64_t *)&v58, v38, v39);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v54);
    }
    else
    {
      sub_1C2227100((uint64_t)&v54);
    }
    ++v5;
    if (v8 == v52) {
      goto LABEL_28;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_1C2315520(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = a1;
  uint64_t v63 = (void *)MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    if (v4) {
      goto LABEL_3;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_30;
  }
LABEL_3:
  uint64_t v50 = v2;
  unint64_t v58 = v3 & 0xC000000000000001;
  unint64_t v53 = @"UIA.Health.HealthRecords";
  uint64_t v5 = 4;
  long long v52 = xmmword_1C255CDA0;
  uint64_t v57 = v4;
  unint64_t v51 = v3;
  while (1)
  {
    uint64_t v2 = v5 - 4;
    if (v58) {
      id v6 = (id)MEMORY[0x1C87588E0](v5 - 4, v3);
    }
    else {
      id v6 = *(id *)(v3 + 8 * v5);
    }
    id v7 = v6;
    uint64_t v8 = v5 - 3;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    id v9 = objc_msgSend(v6, sel_displayItemType);
    if (v9 == (id)6)
    {
      id v18 = objc_msgSend(v7, sel_chartValueWithRange);
      uint64_t v19 = type metadata accessor for ReferenceRangeItem();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v18;
      *((void *)&v60 + 1) = v19;
      uint64_t v61 = sub_1C2315A90(&qword_1EA2E0ED8, v21, (void (*)(uint64_t))type metadata accessor for ReferenceRangeItem);
      *(void *)&long long v59 = v20;
      goto LABEL_21;
    }
    if (v9 != (id)15)
    {
      uint64_t v61 = 0;
      long long v59 = 0u;
      long long v60 = 0u;
      goto LABEL_21;
    }
    id v10 = objc_msgSend(v7, sel_title);
    if (!v10) {
      break;
    }
    uint64_t v11 = v10;
    uint64_t v12 = sub_1C254F470();
    uint64_t v55 = v13;
    uint64_t v56 = v12;

    id v14 = objc_msgSend(v7, sel_subtitle);
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v54 = sub_1C254F470();
      uint64_t v17 = v16;
    }
    else
    {
      uint64_t v54 = 0;
      uint64_t v17 = 0;
    }
    id v22 = objc_msgSend(v7, sel_title, v50);
    if (!v22) {
      goto LABEL_32;
    }
    uint64_t v23 = v22;
    sub_1C254F470();

    sub_1C2201F2C();
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v52;
    *(void *)(v24 + 32) = sub_1C254F470();
    *(void *)(v24 + 40) = v25;
    uint64_t v26 = (void *)sub_1C254F430();
    id v27 = objc_msgSend(v26, sel_removeSpecialCharactersAndWhiteSpaces);

    uint64_t v28 = sub_1C254F470();
    uint64_t v30 = v29;

    *(void *)&v62[0] = v28;
    *((void *)&v62[0] + 1) = v30;
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t v31 = *((void *)&v62[0] + 1);
    *(void *)(v24 + 48) = *(void *)&v62[0];
    *(void *)(v24 + 56) = v31;
    uint64_t v32 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v33 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (!v33) {
      goto LABEL_33;
    }
    uint64_t v34 = sub_1C254F470();
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();

    uint64_t v37 = type metadata accessor for TitleSubtitleDetailItem(0);
    uint64_t v38 = (void *)swift_allocObject();
    sub_1C254CB30();
    uint64_t v39 = v55;
    void v38[2] = v56;
    v38[3] = v39;
    v38[4] = v54;
    v38[5] = v17;
    v38[6] = 0;
    v38[7] = MEMORY[0x1E4FBC860];
    v38[8] = v34;
    v38[9] = v36;
    *((void *)&v60 + 1) = v37;
    uint64_t v61 = sub_1C2315A90(&qword_1EA2DF188, 255, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItem);
    *(void *)&long long v59 = v38;
    unint64_t v3 = v51;
    uint64_t v4 = v57;
LABEL_21:

    if (*((void *)&v60 + 1))
    {
      sub_1C21F44EC(&v59, (uint64_t)v62);
      sub_1C21F44EC(v62, (uint64_t)&v59);
      uint64_t v40 = v63;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v40 = sub_1C226CD5C(0, v40[2] + 1, 1, v40);
        uint64_t v63 = v40;
      }
      unint64_t v42 = v40[2];
      unint64_t v41 = v40[3];
      if (v42 >= v41 >> 1) {
        uint64_t v63 = sub_1C226CD5C((void *)(v41 > 1), v42 + 1, 1, v40);
      }
      uint64_t v43 = *((void *)&v60 + 1);
      uint64_t v44 = v61;
      uint64_t v45 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v59, *((uint64_t *)&v60 + 1));
      __n128 v46 = MEMORY[0x1F4188790](v45);
      uint64_t v48 = (char *)&v50 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v49 + 16))(v48, v46);
      sub_1C2507304(v42, (uint64_t)v48, (uint64_t *)&v63, v43, v44);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v59);
      uint64_t v4 = v57;
    }
    else
    {
      sub_1C2227100((uint64_t)&v59);
    }
    ++v5;
    if (v8 == v4) {
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
}

uint64_t sub_1C2315A90(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2315AD8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C21AB51C(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

double sub_1C2315B48()
{
  double result = 8.0;
  xmmword_1EA303AD0 = xmmword_1C2563B40;
  *(_OWORD *)&qword_1EA303AE0 = xmmword_1C25645C0;
  return result;
}

uint64_t sub_1C2315B68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void **)(v3 + 32);
  unint64_t v9 = *(void **)(v3 + 40);
  uint64_t v10 = *(void **)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  uint64_t v12 = *(void *)(v3 + 64);
  uint64_t v13 = *(void *)(v3 + 72);
  uint64_t v14 = *(void *)(v3 + 80);
  uint64_t v15 = *(void *)(v3 + 88);
  char v16 = *(unsigned char *)(v3 + 100);
  int v17 = *(_DWORD *)(v3 + 96);
  *(void *)a2 = *(void *)v3;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = v11;
  *(void *)(a2 + 64) = v12;
  *(void *)(a2 + 72) = v13;
  *(void *)(a2 + 80) = v14;
  *(void *)(a2 + 88) = v15;
  *(unsigned char *)(a2 + 100) = v16;
  *(_DWORD *)(a2 + 96) = v17;
  return sub_1C22AC0E8(v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C2315C08(uint64_t a1, void *a2)
{
  uint64_t v18 = *(void *)(a1 + 8);
  uint64_t v19 = *(void *)a1;
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v14 = *(void **)(a1 + 40);
  uint64_t v15 = *(void **)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void **)(a1 + 48);
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v10 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 64);
  char v3 = *(unsigned char *)(a1 + 100);
  int v4 = *(_DWORD *)(a1 + 96);
  uint64_t v5 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  uint64_t v6 = *(void *)(a1 + 88);
  swift_beginAccess();
  uint64_t v31 = *(void *)v5;
  uint64_t v23 = *(void *)(v5 + 24);
  uint64_t v24 = *(void *)(v5 + 16);
  uint64_t v21 = *(void **)(v5 + 40);
  id v22 = *(void **)(v5 + 32);
  uint64_t v20 = *(void **)(v5 + 48);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v29 = *(void *)(v5 + 56);
  uint64_t v30 = *(void *)(v5 + 8);
  uint64_t v8 = *(void *)(v5 + 72);
  uint64_t v27 = *(void *)(v5 + 80);
  uint64_t v28 = *(void *)(v5 + 88);
  char v25 = *(unsigned char *)(v5 + 100);
  int v26 = *(_DWORD *)(v5 + 96);
  *(void *)uint64_t v5 = v19;
  *(void *)(v5 + 8) = v18;
  *(void *)(v5 + 16) = v17;
  *(void *)(v5 + 24) = v16;
  *(void *)(v5 + 32) = v15;
  *(void *)(v5 + 40) = v14;
  *(void *)(v5 + 48) = v13;
  *(void *)(v5 + 56) = v12;
  *(void *)(v5 + 64) = v11;
  *(void *)(v5 + 72) = v10;
  *(void *)(v5 + 80) = v2;
  *(void *)(v5 + 88) = v6;
  *(_DWORD *)(v5 + 96) = v4;
  *(unsigned char *)(v5 + 100) = v3;
  sub_1C22AC0E8(v19, v18, v17, v16, v15, v14, v13);
  sub_1C22AC0E8(v31, v30, v24, v23, v22, v21, v20);
  sub_1C22AC064(v31, v30, v24, v23, v22, v21, v20);
  v32[0] = v31;
  v32[1] = v30;
  long long v32[2] = v24;
  v32[3] = v23;
  void v32[4] = v22;
  v32[5] = v21;
  v32[6] = v20;
  v32[7] = v29;
  v32[8] = v7;
  v32[9] = v8;
  v32[10] = v27;
  v32[11] = v28;
  char v34 = v25;
  int v33 = v26;
  sub_1C2315E54((uint64_t)v32);
  return sub_1C22AC064(v31, v30, v24, v23, v22, v21, v20);
}

void sub_1C2315E54(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v59 = *(void *)(a1 + 16);
  long long v60 = *(void **)(a1 + 32);
  uint64_t v61 = *(void *)a1;
  char v3 = *(void **)(a1 + 48);
  long long v62 = *(void **)(a1 + 40);
  uint64_t v63 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 80);
  unint64_t v8 = *(unsigned int *)(a1 + 96) | ((unint64_t)*(unsigned __int8 *)(a1 + 100) << 32);
  uint64_t v9 = v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  uint64_t v10 = *(void *)(a1 + 88);
  swift_beginAccess();
  uint64_t v11 = v2;
  uint64_t v12 = *(void *)v9;
  uint64_t v13 = *(void *)(v9 + 8);
  uint64_t v15 = *(void *)(v9 + 16);
  uint64_t v14 = *(void *)(v9 + 24);
  uint64_t v17 = *(void **)(v9 + 32);
  uint64_t v16 = *(void **)(v9 + 40);
  uint64_t v18 = *(void **)(v9 + 48);
  uint64_t v19 = *(void *)(v9 + 56);
  uint64_t v20 = *(void *)(v9 + 64);
  uint64_t v21 = *(void *)(v9 + 72);
  unint64_t v22 = *(unsigned int *)(v9 + 96) | ((unint64_t)*(unsigned __int8 *)(v9 + 100) << 32);
  int v23 = v8;
  unint64_t v24 = HIDWORD(v8);
  uint64_t v25 = *(void *)(v9 + 80);
  uint64_t v26 = *(void *)(v9 + 88);
  uint64_t v57 = v10;
  uint64_t v58 = v7;
  if (v11)
  {
    unint64_t v54 = v22;
    uint64_t v67 = v61;
    uint64_t v68 = v11;
    uint64_t v69 = v59;
    uint64_t v70 = v63;
    unint64_t v71 = v60;
    id v72 = v62;
    unint64_t v73 = v3;
    uint64_t v74 = v4;
    uint64_t v75 = v5;
    uint64_t v76 = v7;
    uint64_t v77 = v6;
    uint64_t v78 = v10;
    int v79 = v8;
    char v80 = BYTE4(v8);
    uint64_t v27 = v6;
    unint64_t v28 = HIDWORD(v8);
    int v56 = v8;
    if (v13)
    {
      v64[0] = v12;
      v64[1] = v13;
      v64[2] = v15;
      v64[3] = v14;
      void v64[4] = v17;
      v64[5] = v16;
      v64[6] = v18;
      v64[7] = v19;
      v64[8] = v20;
      v64[9] = v21;
      v64[10] = v25;
      v64[11] = v26;
      char v65 = v54 & 1;
      v29.i64[0] = 0xFFFFFFFFFFLL;
      v29.i64[1] = 0xFFFFFFFFFFLL;
      uint64x2_t v30 = (uint64x2_t)vandq_s8((int8x16_t)vdupq_n_s64(v54), v29);
      int16x8_t v31 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v30, (uint64x2_t)xmmword_1C2560720), (int32x4_t)vshlq_u64(v30, (uint64x2_t)xmmword_1C2560710));
      *(int8x8_t *)v31.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v31), (int8x8_t)0x1000100010001);
      unsigned __int32 v66 = vmovn_s16(v31).u32[0];
      uint64_t v32 = v3;
      sub_1C22AC0E8(v61, v11, v59, v63, v60, v62, v3);
      sub_1C22AC0E8(v61, v11, v59, v63, v60, v62, v3);
      char v55 = _s15HealthRecordsUI33UserDomainConceptFeedItemViewDataV2eeoiySbAC_ACtFZ_0((uint64_t)&v67, (uint64_t)v64);
      int v33 = v71;
      char v34 = v72;
      uint64_t v35 = v73;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C22AC064(v61, v11, v59, v63, v60, v62, v32);
      if (v55) {
        return;
      }
LABEL_9:
      sub_1C2318150();
      return;
    }
    uint64_t v51 = v26;
    uint64_t v52 = v25;
    uint64_t v53 = v27;
    uint64_t v36 = v5;
    uint64_t v38 = v61;
    uint64_t v43 = v20;
    uint64_t v44 = v12;
    uint64_t v39 = v59;
    uint64_t v41 = v63;
    char v42 = v28;
    uint64_t v37 = v60;
    uint64_t v40 = v62;
    uint64_t v49 = v18;
    uint64_t v50 = v19;
    uint64_t v47 = v17;
    uint64_t v48 = v16;
    uint64_t v45 = v15;
    uint64_t v46 = v14;
    sub_1C22AC0E8(v61, v11, v59, v63, v60, v62, v3);
    uint64_t v20 = v43;
    uint64_t v12 = v44;
    uint64_t v15 = v45;
    uint64_t v14 = v46;
    uint64_t v17 = v47;
    uint64_t v16 = v48;
    uint64_t v18 = v49;
    uint64_t v19 = v50;
    unint64_t v22 = v54;
    int v23 = v56;
    LOBYTE(v24) = v42;
LABEL_8:
    uint64_t v67 = v38;
    uint64_t v68 = v11;
    uint64_t v69 = v39;
    uint64_t v70 = v41;
    unint64_t v71 = v37;
    id v72 = v40;
    unint64_t v73 = v3;
    uint64_t v74 = v4;
    uint64_t v75 = v36;
    uint64_t v76 = v58;
    uint64_t v77 = v53;
    uint64_t v78 = v57;
    int v79 = v23;
    char v80 = v24;
    uint64_t v81 = v12;
    uint64_t v82 = v13;
    uint64_t v83 = v15;
    uint64_t v84 = v14;
    uint64_t v85 = v17;
    uint64_t v86 = v16;
    unint64_t v87 = v18;
    uint64_t v88 = v19;
    uint64_t v89 = v20;
    uint64_t v90 = v21;
    uint64_t v91 = v52;
    uint64_t v92 = v51;
    int v93 = v22;
    char v94 = BYTE4(v22);
    sub_1C22AC0E8(v12, v13, v15, v14, v17, v16, v18);
    sub_1C2318C3C((uint64_t)&v67);
    goto LABEL_9;
  }
  uint64_t v51 = v26;
  uint64_t v52 = v25;
  uint64_t v53 = v6;
  uint64_t v36 = v5;
  uint64_t v37 = v60;
  uint64_t v38 = v61;
  uint64_t v39 = v59;
  uint64_t v40 = v62;
  uint64_t v41 = v63;
  if (v13) {
    goto LABEL_8;
  }
}