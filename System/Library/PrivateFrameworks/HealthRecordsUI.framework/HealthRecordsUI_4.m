id *CategorySearchDataSourceProvider.deinit()
{
  id *v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 3));

  return v0;
}

uint64_t CategorySearchDataSourceProvider.__deallocating_deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 3));

  return swift_deallocClassInstance();
}

uint64_t sub_1C244F81C()
{
  sub_1C2415E30(0, (unint64_t *)&qword_1EA2DEA38, (unint64_t *)&qword_1EA2DEA40);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255CD90;
  uint64_t v1 = sub_1C244F168();
  unint64_t v2 = sub_1C244F658();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v2;
  return v0;
}

uint64_t dispatch thunk of FeedItemSearchable.searchTerm.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedItemSearchable.searchTerm.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FeedItemSearchable.searchTerm.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for CategorySearchViewController()
{
  uint64_t result = qword_1EA2E3958;
  if (!qword_1EA2E3958) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C244F918()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C244F9A4()
{
  return type metadata accessor for CategorySearchViewController();
}

uint64_t type metadata accessor for CategorySearchDataSourceProvider()
{
  return self;
}

uint64_t method lookup function for CategorySearchDataSourceProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CategorySearchDataSourceProvider);
}

uint64_t dispatch thunk of CategorySearchDataSourceProvider.selectedDataSources(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

void sub_1C244FA0C()
{
  if (!qword_1EBB70058)
  {
    sub_1C21FFF20(255, (unint64_t *)&qword_1EBB6FF68, (unint64_t *)&qword_1EBB6FF60);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB70058);
    }
  }
}

void sub_1C244FA7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_1C244FAE0(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  sub_1C2415E30(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C255CDA0;
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v7 = sub_1C220D950();
  strcpy((char *)(v5 + 32), "localizedTitle");
  *(unsigned char *)(v5 + 47) = -18;
  *(void *)(v5 + 96) = v6;
  *(void *)(v5 + 104) = v7;
  *(void *)(v5 + 64) = v7;
  *(void *)(v5 + 72) = a1;
  *(void *)(v5 + 80) = a2;
  swift_bridgeObjectRetain_n();
  unint64_t v8 = (void *)sub_1C254F9A0();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CDA0;
  *(void *)(v9 + 56) = v6;
  *(void *)(v9 + 64) = v7;
  *(void *)(v9 + 32) = 0xD000000000000014;
  *(void *)(v9 + 40) = 0x80000001C2586A70;
  *(void *)(v9 + 96) = v6;
  *(void *)(v9 + 104) = v7;
  *(void *)(v9 + 72) = a1;
  *(void *)(v9 + 80) = a2;
  v10 = (void *)sub_1C254F9A0();
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255CD70;
  *(void *)(v11 + 32) = v8;
  *(void *)(v11 + 40) = v10;
  sub_1C254F730();
  id v12 = v8;
  id v13 = v10;
  v14 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  v15 = self;
  id v16 = objc_msgSend(v15, sel_orPredicateWithSubpredicates_, v14);

  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C255CD90;
  *(void *)(v17 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v17 + 64) = v7;
  strcpy((char *)(v17 + 32), "indexForSearch");
  *(unsigned char *)(v17 + 47) = -18;
  v18 = (void *)sub_1C254F9A0();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C255CD70;
  *(void *)(v19 + 32) = v16;
  *(void *)(v19 + 40) = v18;
  sub_1C254F730();
  id v20 = v16;
  id v21 = v18;
  v22 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v15, sel_andPredicateWithSubpredicates_, v22);

  return v23;
}

uint64_t sub_1C244FE30(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id ViewControllerFactory.makeUserDomainConceptDetailViewController(for:using:)(void *a1, void *a2)
{
  id v4 = objc_allocWithZone((Class)type metadata accessor for UserDomainConceptDetailViewController());
  id v5 = a1;
  id v6 = a2;
  id v7 = sub_1C23D294C(v5, v6);

  return v7;
}

void __swiftcall ViewControllerFactory.makeRemovedLabsViewController(using:)(UIViewController *__return_ptr retstr, HRProfile *using)
{
  sub_1C21AB7F4(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v27 - v7;
  unint64_t v9 = sub_1C21A9468();
  if (*(void *)(v9 + 16))
  {
    uint64_t v10 = sub_1C21A93C4(2);
    if (v11)
    {
      uint64_t v12 = *(void *)(v9 + 56) + 72 * v10;
      v29 = using;
      char v13 = *(unsigned char *)v12;
      v15 = *(void **)(v12 + 8);
      uint64_t v14 = *(void *)(v12 + 16);
      uint64_t v16 = *(void *)(v12 + 24);
      uint64_t v27 = *(void *)(v12 + 32);
      uint64_t v28 = v14;
      uint64_t v17 = *(void *)(v12 + 40);
      uint64_t v18 = *(void *)(v12 + 48);
      uint64_t v20 = *(void *)(v12 + 56);
      uint64_t v19 = *(void **)(v12 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v21 = v19;
      id v22 = v15;
      swift_bridgeObjectRelease();
      v30[0] = v13;
      using = v29;
      id v31 = v22;
      uint64_t v32 = v28;
      uint64_t v33 = v16;
      uint64_t v34 = v27;
      uint64_t v35 = v17;
      uint64_t v36 = v18;
      uint64_t v37 = v20;
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v24 = sub_1C254CB40();
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
      v25(v8, 1, 1, v24);
      v25(v5, 1, 1, v24);
      objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
      v26 = using;
      sub_1C21FDDB8(v26, v21, (uint64_t)v8, 0, 0, (uint64_t)v5, 0, 0, 0);

      return;
    }
  }
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(self, sel_unknownRecordCategory);
  if (v23)
  {
    sub_1C21AA50C(v23, (uint64_t)v30);
    id v22 = v31;
    id v21 = v38;
    goto LABEL_6;
  }
  __break(1u);
}

void __swiftcall ViewControllerFactory.makeTimelineViewController(for:showsInitialSearchBar:using:queryPredicateByType:)(UIViewController *__return_ptr retstr, WDMedicalRecordCategory *a2, Swift::Bool showsInitialSearchBar, HRProfile *using, Swift::OpaquePointer queryPredicateByType)
{
}

id ViewControllerFactory.makeUserDomainConceptListViewController(for:listType:using:)(unsigned __int8 *a1, uint64_t a2, void *a3)
{
  unsigned __int8 v6 = *a1;
  objc_allocWithZone((Class)type metadata accessor for UserDomainConceptListViewController());
  return sub_1C2539F94(&v6, a2, a3);
}

void ViewControllerFactory.makeHealthRecordsPrivacyPresenter()()
{
}

id sub_1C2450208()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ViewControllerFactory()), sel_init);
  qword_1EBB6ED30 = (uint64_t)result;
  return result;
}

id ViewControllerFactory.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static ViewControllerFactory.shared.getter()
{
  if (qword_1EBB6D858 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_1EBB6ED30;
  return v0;
}

void sub_1C245032C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a1)
  {
    id v9 = a2;
    if (a4) {
      goto LABEL_3;
    }
LABEL_5:
    id v12 = a1;
    uint64_t v10 = 0;
    goto LABEL_6;
  }
  id v9 = a1;
  if (!a4) {
    goto LABEL_5;
  }
LABEL_3:
  v13[4] = a4;
  v13[5] = a5;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1C224E544;
  v13[3] = &block_descriptor_52;
  uint64_t v10 = _Block_copy(v13);
  id v11 = a1;
  sub_1C223E0BC(a4);
  swift_release();
LABEL_6:
  objc_msgSend(v9, sel_presentViewController_animated_completion_, a3, 1, v10);
  _Block_release(v10);
}

char *sub_1C2450548(int a1, void *a2, char *a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_1C2454394(a1, a2, a3, a4, a5, a6);
}

char *sub_1C2450560(void *a1, void *a2, char *a3, uint64_t a4, uint64_t a5, char a6)
{
  char v13 = *a3;
  objc_allocWithZone((Class)type metadata accessor for ClinicalAccountDetailsViewController());
  swift_bridgeObjectRetain();
  id v11 = sub_1C242E68C(a1, a2, &v13, a4, a5);
  if (a6) {
    sub_1C2430440();
  }
  return v11;
}

char *sub_1C2450600(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  char v9 = 0;
  objc_allocWithZone((Class)type metadata accessor for ClinicalAccountDetailsViewController());
  swift_bridgeObjectRetain();
  return sub_1C242E68C(a1, a2, &v9, a3, a4);
}

BOOL sub_1C2450730()
{
  return swift_dynamicCastClass() != 0;
}

void sub_1C24507E8(void *a1, void *a2, void *a3)
{
  id v4 = sub_1C2453138(a1, a3);
  objc_msgSend(a2, sel_presentViewController_animated_completion_, v4, 1, 0);
}

uint64_t sub_1C245084C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  v4[2] = sub_1C254F820();
  v4[3] = sub_1C254F810();
  unint64_t v8 = (uint64_t (*)(void))((char *)a4 + *a4);
  unsigned __int8 v6 = (void *)swift_task_alloc();
  v4[4] = v6;
  *unsigned __int8 v6 = v4;
  v6[1] = sub_1C2450940;
  return v8();
}

uint64_t sub_1C2450940()
{
  swift_task_dealloc();
  uint64_t v1 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2455970, v1, v0);
}

uint64_t sub_1C2450A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C21AB7F4(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_1C254F820();
  swift_retain();
  uint64_t v12 = sub_1C254F810();
  char v13 = (void *)swift_allocObject();
  uint64_t v14 = MEMORY[0x1E4FBCFD8];
  v13[2] = v12;
  v13[3] = v14;
  v13[4] = a2;
  v13[5] = a3;
  sub_1C24D0A0C((uint64_t)v10, a5, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_1C2450BBC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  v4[2] = sub_1C254F820();
  v4[3] = sub_1C254F810();
  uint64_t v8 = (uint64_t (*)(void))((char *)a4 + *a4);
  unsigned __int8 v6 = (void *)swift_task_alloc();
  v4[4] = v6;
  *unsigned __int8 v6 = v4;
  v6[1] = sub_1C22415D0;
  return v8();
}

id sub_1C2450CB0(void *a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for SettingsViewController());
  id v3 = a1;
  id v4 = sub_1C22B3558(v3);

  return v4;
}

unsigned char *sub_1C2450CF8(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v43 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (unsigned __int8 *)&v43 - v15;
  sub_1C2454530(a1, (uint64_t)&v43 - v15, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  uint64_t v17 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C21FD4EC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 32))(v7, v16, v4);
      uint64_t v17 = (unsigned char *)sub_1C2453D38((uint64_t)v7, a2);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      break;
    case 2u:
    case 6u:
    case 7u:
      uint64_t v17 = objc_msgSend(objc_allocWithZone((Class)WDClinicalOnboardingOAuthNavigationViewController), sel_initWithContext_onboardingOptions_sourceIdentifier_profile_existingAccount_, 2, 0, 0, a2, 0);
      id v18 = objc_msgSend(a2, sel_onboardingManager);
      objc_msgSend(v18, sel_registerInflightOnboardingViewController_completion_, v17, 0);
      swift_storeEnumTagMultiPayload();
      unint64_t v19 = BrowseCategory.rawValue.getter();
      uint64_t v21 = v20;
      if (v19 == BrowseCategory.rawValue.getter() && v21 == v22)
      {
        uint64_t v25 = 2;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v24 = sub_1C2550870();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v24) {
          uint64_t v25 = 2;
        }
        else {
          uint64_t v25 = 1;
        }
      }
      sub_1C242B58C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      if (qword_1EBB6D840 != -1) {
        swift_once();
      }
      sub_1C23CCB04(v25, 2, 0);
      goto LABEL_18;
    case 3u:
    case 5u:
      return v17;
    case 4u:
      type metadata accessor for MedicalRecordTimelineViewController();
      uint64_t v35 = MedicalRecordTimelineViewController.__allocating_init(profile:)(a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = v35;
      BrowseCategory.localizedTitle.getter();
      sub_1C242B58C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      id v18 = (id)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_setTitle_, v18);

LABEL_18:
      break;
    case 8u:
      uint64_t v37 = self;
      id v38 = objc_msgSend(a2, sel_healthStore);
      id v39 = objc_msgSend(v37, sel_sharedInstanceForHealthStore_, v38);

      swift_storeEnumTagMultiPayload();
      uint64_t v44 = sub_1C254F540();
      v45 = v40;
      sub_1C254F5A0();
      sub_1C25178E0();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      sub_1C242B58C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      v41 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      uint64_t v17 = objc_msgSend(v39, sel_createClinicalDocumentOverviewViewControllerWithSidebarIdentifier_, v41);

      break;
    default:
      uint64_t v26 = *v16;
      unint64_t v27 = sub_1C21A9468();
      if (*(void *)(v27 + 16) && (uint64_t v28 = sub_1C21A93C4(v26), (v29 & 1) != 0))
      {
        uint64_t v30 = *(void *)(v27 + 56) + 72 * v28;
        id v31 = *(void **)(v30 + 8);
        uint64_t v32 = *(void **)(v30 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v33 = v32;
        id v34 = v31;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        id v42 = objc_msgSend(self, sel_unknownRecordCategory);
        if (!v42)
        {
          __break(1u);
          JUMPOUT(0x1C24512ECLL);
        }
        sub_1C21AA50C(v42, (uint64_t)&v44);
        id v34 = v45;
        id v33 = v46;
      }
      uint64_t v17 = objc_msgSend(v43, sel_makeViewControllerForCategory_usingProfile_, v33, a2);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      break;
  }
  return v17;
}

id sub_1C245138C(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for PresentationContext(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = sub_1C254CB40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_1C2454530((uint64_t)v9, (uint64_t)v6, type metadata accessor for PresentationContext);
  objc_allocWithZone((Class)type metadata accessor for MedicalRecordDetailViewController(0));
  id v11 = a1;
  id v12 = a2;
  id v13 = sub_1C24CD370(v11, v12, (uint64_t)v6);

  id v14 = objc_msgSend(v13, sel_navigationItem);
  objc_msgSend(v14, sel_setLargeTitleDisplayMode_, 2);

  sub_1C242B58C((uint64_t)v9, type metadata accessor for PresentationContext);
  return v13;
}

id ViewControllerFactory.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ViewControllerFactory();
  return objc_msgSendSuper2(&v2, sel_init);
}

id ViewControllerFactory.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ViewControllerFactory();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unsigned char *sub_1C2451768(uint64_t a1, void *a2)
{
  return sub_1C2450CF8(a1, a2);
}

void __swiftcall ViewControllerFactory.makeViewController(for:using:)(UIViewController *__return_ptr retstr, WDMedicalRecordCategory *a2, HRProfile *using)
{
  if (sub_1C2267FD8([(WDMedicalRecordCategory *)a2 categoryType], (uint64_t)&unk_1F1D8EE28))
  {
    id v6 = objc_msgSend(v3, sel_makeTimelineViewControllerForCategory_showsInitialSearchBar_usingProfile_filterPredicatesByType_, a2, 0, using, 0);
    id v7 = v6;
  }
  else
  {
    uint64_t v20 = v3;
    sub_1C21AA50C(a2, (uint64_t)v24);
    if (qword_1EBB6EF30 != -1) {
      swift_once();
    }
    uint64_t v8 = qword_1EBB6FB90;
    uint64_t v9 = [(HRProfile *)using healthStore];
    id v10 = [(HKHealthStore *)v9 profileIdentifier];

    uint64_t v23 = *(void *)(v8 + OBJC_IVAR___HRProfileManager_lock);
    MEMORY[0x1F4188790](v11);
    sub_1C254CEE0();
    type metadata accessor for CountProviderCollection();
    sub_1C21A89AC();
    swift_retain();
    sub_1C254E1D0();

    swift_release();
    v21[2] = v24[2];
    v21[3] = v24[3];
    uint64_t v22 = v25;
    v21[0] = v24[0];
    v21[1] = v24[1];
    sub_1C2201A54((uint64_t)v24);
    id v12 = using;
    uint64_t v13 = sub_1C2497CA0((uint64_t)v21);
    uint64_t v14 = qword_1EBB6FB90;
    uint64_t v15 = [(HRProfile *)v12 healthStore];
    id v16 = [(HKHealthStore *)v15 profileIdentifier];

    uint64_t v23 = *(void *)(v14 + OBJC_IVAR___HRProfileManager_lock);
    MEMORY[0x1F4188790](v17);
    type metadata accessor for AccountStateProvider();
    swift_retain();
    sub_1C254E1D0();

    swift_release();
    uint64_t v18 = *(void *)&v21[0];
    unint64_t v19 = objc_allocWithZone((Class)type metadata accessor for RecordCategoryViewController());
    sub_1C245224C((uint64_t)v24, v12, v13, v18, v20, v19);
    sub_1C2201ABC((uint64_t)v24);
    swift_release();
  }
}

void __swiftcall ViewControllerFactory.makeTimelineViewController(for:showsInitialSearchBar:using:filterPredicatesByType:)(UIViewController *__return_ptr retstr, WDMedicalRecordCategory *a2, Swift::Bool showsInitialSearchBar, HRProfile *using, Swift::OpaquePointer_optional filterPredicatesByType)
{
  rawValue = (unsigned int (*)(uint64_t, uint64_t, uint64_t))filterPredicatesByType.value._rawValue;
  sub_1C21AB7F4(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v14 = sub_1C254CB40();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  v15(v10, 1, 1, v14);
  objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
  swift_bridgeObjectRetain();
  id v16 = using;
  uint64_t v17 = a2;
  sub_1C21FDDB8(v16, a2, (uint64_t)v13, 0, 0, (uint64_t)v10, 0, rawValue, 0);
}

void __swiftcall ViewControllerFactory.makeAlphabeticalViewController(for:using:)(UIViewController *__return_ptr retstr, WDMedicalRecordCategory *a2, HRProfile *using)
{
  sub_1C21AA50C(a2, (uint64_t)v10);
  v5[0] = v10[0];
  v5[1] = v11;
  long long v6 = v12;
  uint64_t v7 = v13;
  long long v8 = v14;
  long long v9 = v15;
  id v4 = objc_allocWithZone((Class)type metadata accessor for ConceptListViewController());
  sub_1C24FB44C(v5, using);
}

id ViewControllerFactory.makeUserDomainConceptListViewController(for:listType:using:)(void *a1, uint64_t a2, void *a3)
{
  sub_1C21AA50C(a1, (uint64_t)v9);
  unsigned __int8 v5 = v9[0];
  long long v6 = v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  unsigned __int8 v8 = v5;
  objc_allocWithZone((Class)type metadata accessor for UserDomainConceptListViewController());
  return sub_1C2539F94(&v8, a2, a3);
}

void ViewControllerFactory.makeImproveHealthRecordsPrivacyPresenter()()
{
}

void sub_1C2452158()
{
  uint64_t v0 = (void *)sub_1C254F430();
  id v1 = objc_msgSend(self, sel_presenterForPrivacySplashWithIdentifier_, v0);

  if (!v1) {
    __break(1u);
  }
}

id sub_1C245224C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, unsigned char *a6)
{
  *(void *)&a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCanceller] = 0;
  *(void *)&a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_aToZCanceller] = 0;
  *(void *)&a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsCanceller] = 0;
  a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_shouldShowPinnedLabsTip] = 0;
  *(void *)&a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_cancellable] = 0;
  a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding] = 0;
  long long v12 = &a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount];
  *(void *)long long v12 = 0;
  v12[8] = 1;
  *(void *)&a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentViewController] = 0;
  a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_isSearching] = 0;
  uint64_t v13 = &a6[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientView];
  sub_1C254D800();
  id v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  long long v15 = a6;
  id v16 = objc_msgSend(v14, sel_init);
  uint64_t v17 = MEMORY[0x1E4F66430];
  *uint64_t v13 = v16;
  v13[1] = v17;
  uint64_t v18 = a5;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientSubscriber] = 0;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer] = 0;
  *(_WORD *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_modePickerState] = 2;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentPalette] = 0;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___scrollView] = 0;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___modePicker] = 0;
  unint64_t v19 = &v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController];
  *unint64_t v19 = 0;
  v19[1] = 0;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController] = 0;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___changeProvider] = 0;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___listManager] = 0;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___viewDataPublisher] = 0;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___udcListViewController] = 1;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___latestViewContoller] = 1;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___lastUpdatedViewController] = 0;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___alphabeticalViewController] = 0;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsOnboardingViewController] = 0;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___labsOnboardingTileDisplayEvaluator] = 0;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile] = a2;
  uint64_t v20 = &v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category];
  *(_OWORD *)uint64_t v20 = *(_OWORD *)a1;
  long long v21 = *(_OWORD *)(a1 + 16);
  long long v22 = *(_OWORD *)(a1 + 32);
  long long v23 = *(_OWORD *)(a1 + 48);
  *((void *)v20 + 8) = *(void *)(a1 + 64);
  *((_OWORD *)v20 + 2) = v22;
  *((_OWORD *)v20 + 3) = v23;
  *((_OWORD *)v20 + 1) = v21;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_countProvider] = a3;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_accountStateProvider] = a4;
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_factory] = a5;
  v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_displayMode] = 0x80;
  char v24 = *(unsigned char *)a1;
  if ((*(unsigned char *)a1 & 0xFC) == 4)
  {
    id v25 = a2;
    sub_1C2201A54(a1);
    swift_retain();
    swift_retain();
    uint64_t v26 = v18;
    id v27 = v18;
    char v28 = 2;
  }
  else
  {
    LOBYTE(v42) = *(unsigned char *)a1;
    id v29 = a2;
    sub_1C2201A54(a1);
    swift_retain();
    swift_retain();
    uint64_t v26 = v18;
    id v30 = v18;
    id v31 = sub_1C2335944(&v42);
    if (*((void *)v31 + 2))
    {
      char v28 = v31[32];
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      char v28 = 1;
    }
  }
  v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_preferredSegment] = v28;
  id v32 = objc_msgSend(self, sel_clearColor);
  uint64_t v33 = sub_1C254DD80();
  uint64_t v34 = MEMORY[0x1E4F665A0];
  uint64_t v43 = v33;
  uint64_t v44 = MEMORY[0x1E4F665A0];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
  sub_1C254DD70();
  uint64_t v35 = (uint64_t)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientColorProvider];
  sub_1C21F44EC(&v42, (uint64_t)&v15[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientColorProvider]);
  LOBYTE(v42) = v24;
  uint64_t v36 = (void *)DisplayCategory.Kind.hkDisplayCategory.getter();
  if (v36)
  {
    uint64_t v37 = v36;
    if (objc_msgSend(v36, sel_color))
    {
      uint64_t v43 = v33;
      uint64_t v44 = v34;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v42);
      sub_1C254DD70();

      swift_beginAccess();
      __swift_destroy_boxed_opaque_existential_1Tm(v35);
      sub_1C21F44EC(&v42, v35);
      swift_endAccess();
    }
    else
    {
    }
  }

  v41.receiver = v15;
  v41.super_class = (Class)type metadata accessor for RecordCategoryViewController();
  id v38 = objc_msgSendSuper2(&v41, sel_initWithNibName_bundle_, 0, 0);
  id v39 = (void *)sub_1C254F430();
  sub_1C2201ABC(a1);
  objc_msgSend(v38, sel_setTitle_, v39);

  swift_release();
  swift_release();

  return v38;
}

char *sub_1C24526C8(void *a1, void *a2, unsigned int (*a3)(uint64_t, uint64_t, uint64_t))
{
  sub_1C21AB7F4(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  unsigned __int8 v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v19 - v10;
  uint64_t v12 = sub_1C254CB40();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  v13(v8, 1, 1, v12);
  objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
  id v14 = a2;
  id v15 = a1;
  swift_bridgeObjectRetain();
  id v16 = sub_1C21FDDB8(v14, a1, (uint64_t)v11, 0, 0, (uint64_t)v8, 0, a3, 0);

  id v17 = objc_msgSend(v16, sel_navigationItem);
  objc_msgSend(v17, sel_setLargeTitleDisplayMode_, 2);

  return v16;
}

id sub_1C2452890(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for PresentationContext(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v60 - v8;
  sub_1C21AB7F4(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)v60 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v60 - v17;
  *(void *)&double v20 = MEMORY[0x1F4188790](v19).n128_u64[0];
  long long v22 = (char *)v60 - v21;
  id v23 = objc_msgSend(a1, sel_primaryConcept, v20);
  id v24 = objc_msgSend(v23, sel_groupByConcept);

  id v70 = v24;
  if (!objc_msgSend(v24, sel_isQualifiedForConceptRoom))
  {
    uint64_t v43 = sub_1C254CB40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v9, 1, 1, v43);
    sub_1C2454530((uint64_t)v9, (uint64_t)v6, type metadata accessor for PresentationContext);
    id v44 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordDetailViewController(0));
    id v45 = a2;
    id v46 = a1;
    v47 = sub_1C24CD370(v46, v45, (uint64_t)v6);

    id v48 = objc_msgSend(v47, sel_navigationItem);
    objc_msgSend(v48, sel_setLargeTitleDisplayMode_, 2);

    sub_1C242B58C((uint64_t)v9, type metadata accessor for PresentationContext);
    id v49 = v70;
LABEL_9:

    return v47;
  }
  v69 = v22;
  v67 = v12;
  HKMedicalRecord.categoryKind.getter(&v71);
  uint64_t v25 = v71;
  unint64_t v26 = sub_1C21A9468();
  uint64_t v27 = *(void *)(v26 + 16);
  id v68 = a2;
  if (v27)
  {
    uint64_t v28 = sub_1C21A93C4(v25);
    if (v29)
    {
      uint64_t v30 = *(void *)(v26 + 56) + 72 * v28;
      char v31 = *(unsigned char *)v30;
      uint64_t v33 = *(void **)(v30 + 8);
      uint64_t v32 = *(void *)(v30 + 16);
      uint64_t v34 = v18;
      uint64_t v35 = *(void *)(v30 + 24);
      uint64_t v65 = *(void *)(v30 + 32);
      uint64_t v66 = v32;
      uint64_t v36 = *(void *)(v30 + 40);
      uint64_t v37 = *(void *)(v30 + 48);
      uint64_t v38 = *(void *)(v30 + 56);
      id v39 = *(void **)(v30 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v40 = v39;
      uint64_t v41 = v35;
      uint64_t v18 = v34;
      id v64 = v40;
      id v42 = v33;
      swift_bridgeObjectRelease();
      v72[0] = v31;
      id v73 = v42;
      uint64_t v74 = v66;
      uint64_t v75 = v41;
      uint64_t v76 = v65;
      uint64_t v65 = v38;
      uint64_t v66 = v36;
      uint64_t v77 = v36;
      uint64_t v78 = v37;
      uint64_t v79 = v38;
LABEL_8:
      v60[2] = v41;
      id v62 = objc_msgSend(v70, sel_identifier);
      uint64_t v51 = sub_1C254CB40();
      v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56);
      uint64_t v53 = (uint64_t)v69;
      v52(v69, 1, 1, v51);
      sub_1C21F4914(v53, (uint64_t)v18);
      v52(v15, 1, 1, v51);
      uint64_t v54 = (uint64_t)v67;
      sub_1C21F4914((uint64_t)v18, (uint64_t)v67);
      v60[1] = objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
      id v63 = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v55 = v64;
      id v56 = v64;
      id v57 = v62;
      id v61 = v62;
      id v58 = v68;
      v47 = sub_1C21FDDB8(v58, v55, (uint64_t)v15, v57, 0, v54, 0, 0, 0);

      v59 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
      sub_1C2455808((uint64_t)v18, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v49 = v63;

      sub_1C2455808((uint64_t)v69, (unint64_t *)&qword_1EA2DEFF0, v59);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  id result = objc_msgSend(self, sel_unknownRecordCategory);
  if (result)
  {
    sub_1C21AA50C(result, (uint64_t)v72);
    id v42 = v73;
    uint64_t v41 = v75;
    uint64_t v65 = v79;
    uint64_t v66 = v77;
    id v64 = v80;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_1C2452E50(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_1C254E560();
  v25[0] = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PresentationContext(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v25 - v13;
  uint64_t v15 = sub_1C254CB40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_1C2454530((uint64_t)v14, (uint64_t)v12, type metadata accessor for PresentationContext);
  objc_allocWithZone((Class)type metadata accessor for MedicalRecordDetailViewController(0));
  id v16 = a1;
  id v17 = a3;
  id v18 = sub_1C24CD370(v16, v17, (uint64_t)v12);

  id v19 = objc_msgSend(v18, sel_navigationItem);
  objc_msgSend(v19, sel_setLargeTitleDisplayMode_, 2);

  sub_1C242B58C((uint64_t)v14, type metadata accessor for PresentationContext);
  v25[1] = &unk_1F1E381C8;
  uint64_t v20 = swift_dynamicCastObjCProtocolConditional();
  if (v20)
  {
    objc_msgSend(a2, sel_showAdaptively_sender_animated_, v20, a2, 1);
  }
  else
  {
    uint64_t v21 = v25[0];

    sub_1C254E510();
    long long v22 = sub_1C254E550();
    os_log_type_t v23 = sub_1C254FA30();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v24 = 0;
      _os_log_impl(&dword_1C21A1000, v22, v23, "Could not make AdaptiveModalPresentedViewController from factory makeDetailViewController(for:using:)", v24, 2u);
      MEMORY[0x1C875A0B0](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  }
}

id sub_1C2453138(void *a1, void *a2)
{
  sub_1C21AB7F4(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v24 - v5;
  if (a1)
  {
    id v7 = a1;
    if (sub_1C224839C(a2))
    {
      v24[1] = a2;
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v8 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      uint64_t v9 = sub_1C254CBD0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
      sub_1C21AB7F4(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1C255CD90;
      id v11 = objc_msgSend(v7, sel_title);
      uint64_t v12 = sub_1C254F470();
      uint64_t v14 = v13;

      *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v10 + 64) = sub_1C220D950();
      *(void *)(v10 + 32) = v12;
      *(void *)(v10 + 40) = v14;
      id v15 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      sub_1C254F4A0();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C2455808((uint64_t)v6, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
      goto LABEL_10;
    }
  }
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v16 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v17 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

LABEL_10:
  id v18 = self;
  id v19 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)sub_1C254C810();
  id v22 = objc_msgSend(v18, sel_basicAlertControllerWithTitle_message_internalError_, v19, v20, v21);

  return v22;
}

void sub_1C24535E0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v8 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C21AB7F4(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CD90;
  id v10 = objc_msgSend(a1, sel_title, 0xE000000000000000);
  uint64_t v11 = sub_1C254F470();
  uint64_t v13 = v12;

  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 64) = sub_1C220D950();
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = v13;
  sub_1C254F440();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v15 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v14, v15, 1);

  id v17 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a3;
  *(void *)(v18 + 24) = a4;
  swift_retain();
  id v19 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_1C24553F0;
  uint64_t v38 = v18;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v34 = 1107296256;
  uint64_t v35 = sub_1C224DAAC;
  uint64_t v36 = &block_descriptor_59;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v21 = self;
  id v22 = objc_msgSend(v21, sel_actionWithTitle_style_handler_, v19, 0, v20, 0xE000000000000000);
  _Block_release(v20);

  objc_msgSend(v16, sel_addAction_, v22);
  id v23 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a5;
  *(void *)(v24 + 24) = a6;
  swift_retain();
  uint64_t v25 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_1C2455468;
  uint64_t v38 = v24;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v34 = 1107296256;
  uint64_t v35 = sub_1C224DAAC;
  uint64_t v36 = &block_descriptor_16_2;
  unint64_t v26 = _Block_copy(&aBlock);
  swift_release();
  id v27 = objc_msgSend(v21, sel_actionWithTitle_style_handler_, v25, 2, v26, 0xE000000000000000);
  _Block_release(v26);

  objc_msgSend(v16, sel_addAction_, v27);
  objc_msgSend(a2, sel_presentViewController_animated_completion_, v16, 1, 0);
}

char *sub_1C2453B54(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1C21AB7F4(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v24 - v12;
  MEMORY[0x1F4188790](v14);
  id v16 = (char *)&v24 - v15;
  if (*(void *)(a2 + 8))
  {
    id v17 = *(void **)(a2 + 64);
    id v18 = v17;
  }
  else
  {
    id v17 = 0;
  }
  sub_1C21F4914(a3, (uint64_t)v16);
  uint64_t v19 = sub_1C254CB40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v13, 1, 1, v19);
  sub_1C21F4914((uint64_t)v16, (uint64_t)v10);
  objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
  id v20 = a1;
  id v21 = a4;
  id v22 = sub_1C21FDDB8(v21, v17, (uint64_t)v13, a1, 0, (uint64_t)v10, 0, 0, 0);

  sub_1C2455808((uint64_t)v16, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  return v22;
}

uint64_t sub_1C2453D38(uint64_t a1, void *a2)
{
  id v20 = a2;
  sub_1C21AB7F4(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = sub_1C254CB40();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v14(v13, a1, v9, v11);
  objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
  uint64_t ObjectType = swift_getObjectType();
  ((void (*)(char *, char *, uint64_t))v14)(v8, v13, v9);
  id v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v16(v8, 0, 1, v9);
  v16(v5, 1, 1, v9);
  uint64_t v17 = (*(uint64_t (**)(id, void, char *, void, void, char *, void, void, void, char))(ObjectType + 960))(v20, 0, v8, 0, 0, v5, 0, 0, 0, 1);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  swift_deallocPartialClassInstance();
  return v17;
}

void sub_1C2453FD8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a6)
  {
    id v14 = a1;
    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v16 = a1;
    uint64_t v15 = 0;
  }
  id v17 = objc_msgSend(objc_allocWithZone((Class)WDClinicalOnboardingOAuthNavigationViewController), sel_initWithContext_onboardingOptions_sourceIdentifier_profile_existingAccount_, a3, 0, v15, a1, 0);

  if (a4)
  {
    objc_msgSend(v17, sel_setGatewayProxyToTry_, a4);
  }
  else
  {
    id v18 = objc_msgSend(a1, sel_onboardingManager);
    id v19 = objc_msgSend(v18, sel_getPendingOnboardingGatewayAndClear);

    objc_msgSend(v17, sel_setGatewayProxyToTry_, v19);
  }
  id v20 = objc_msgSend(a1, sel_onboardingManager);
  id v21 = (void *)swift_allocObject();
  v21[2] = a2;
  v21[3] = v17;
  _OWORD v21[4] = a7;
  v21[5] = a8;
  v25[4] = sub_1C238593C;
  v25[5] = v21;
  v25[0] = MEMORY[0x1E4F143A8];
  v25[1] = 1107296256;
  void v25[2] = sub_1C22F3AD0;
  v25[3] = &block_descriptor_49_1;
  id v22 = _Block_copy(v25);
  id v23 = a2;
  id v24 = v17;
  sub_1C223E0BC(a7);
  swift_release();
  objc_msgSend(v20, sel_registerInflightOnboardingViewController_completion_, v24, v22);
  _Block_release(v22);
}

void sub_1C24541F0(void *a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  id v14 = (objc_class *)type metadata accessor for OnboardingTileViewController();
  uint64_t v15 = (char *)objc_allocWithZone(v14);
  *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI28OnboardingTileViewController_profile] = a1;
  id v16 = &v15[OBJC_IVAR____TtC15HealthRecordsUI28OnboardingTileViewController_sourceIdentifier];
  *(void *)id v16 = a3;
  *((void *)v16 + 1) = a4;
  v24.receiver = v15;
  v24.super_class = v14;
  id v17 = a1;
  swift_bridgeObjectRetain();
  id v18 = objc_msgSendSuper2(&v24, sel_initWithStyle_, 1);
  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v18);
  id v20 = (void *)swift_allocObject();
  v20[2] = a6;
  v20[3] = a7;
  v20[4] = v19;
  v23[4] = sub_1C24558C0;
  v23[5] = v20;
  v23[0] = MEMORY[0x1E4F143A8];
  v23[1] = 1107296256;
  v23[2] = sub_1C224E544;
  v23[3] = &block_descriptor_43;
  id v21 = _Block_copy(v23);
  sub_1C223E0BC(a6);
  id v22 = v19;
  swift_release();
  objc_msgSend(a2, sel_presentViewController_animated_completion_, v22, a5 & 1, v21);
  _Block_release(v21);
}

char *sub_1C2454394(int a1, id a2, char *a3, uint64_t a4, uint64_t a5, char a6)
{
  v20[1] = *(id *)MEMORY[0x1E4F143B8];
  char v10 = *a3;
  id v11 = objc_msgSend(a2, sel_healthStore);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67710]), sel_initWithHealthStore_, v11);

  uint64_t v13 = (void *)sub_1C254CB00();
  v20[0] = 0;
  id v14 = objc_msgSend(v12, sel_accountWithIdentifier_error_, v13, v20);

  uint64_t v15 = (char *)v20[0];
  if (v14)
  {
    LOBYTE(v20[0]) = v10;
    objc_allocWithZone((Class)type metadata accessor for ClinicalAccountDetailsViewController());
    swift_bridgeObjectRetain();
    id v16 = v14;
    id v17 = v15;
    uint64_t v15 = sub_1C242E68C(v16, a2, (char *)v20, a4, a5);
    if (a6) {
      sub_1C2430440();
    }
  }
  else
  {
    id v18 = v20[0];
    sub_1C254C820();

    swift_willThrow();
  }
  return v15;
}

uint64_t sub_1C2454530(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ViewControllerFactory()
{
  return self;
}

void sub_1C24545BC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v7 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v8 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v8, v9, 1, 0xE000000000000000);

  id v11 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  swift_retain();
  uint64_t v13 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1C2455628;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224DAAC;
  aBlock[3] = &block_descriptor_32_0;
  id v14 = _Block_copy(aBlock);
  swift_release();
  uint64_t v15 = self;
  id v16 = objc_msgSend(v15, sel_actionWithTitle_style_handler_, v13, 0, v14, 0xE000000000000000);
  _Block_release(v14);

  objc_msgSend(v10, sel_addAction_, v16);
  id v17 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v18 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v15, sel_actionWithTitle_style_handler_, v18, 2, 0, 0xE000000000000000);

  objc_msgSend(v10, sel_addAction_, v19);
  objc_msgSend(a2, sel_presentViewController_animated_completion_, v10, 1, 0);
}

void _s15HealthRecordsUI21ViewControllerFactoryC018makeOutOfRangeLabsdE05usingSo06UIViewE0CSo9HRProfileC_tF_0(void *a1)
{
  sub_1C21AB7F4(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v65 - v6;
  unint64_t v8 = sub_1C21A9468();
  uint64_t v9 = &selRef_setActionTitle_;
  if (*(void *)(v8 + 16) && (uint64_t v10 = sub_1C21A93C4(2), (v11 & 1) != 0))
  {
    uint64_t v12 = *(void *)(v8 + 56) + 72 * v10;
    id v70 = v7;
    char v13 = *(unsigned char *)v12;
    id v14 = *(void **)(v12 + 8);
    *(void *)&long long v69 = *(void *)(v12 + 16);
    unsigned __int8 v71 = v4;
    uint64_t v15 = *(void *)(v12 + 24);
    uint64_t v16 = *(void *)(v12 + 32);
    uint64_t v17 = *(void *)(v12 + 40);
    uint64_t v18 = *(void *)(v12 + 48);
    id v19 = a1;
    uint64_t v21 = *(void *)(v12 + 56);
    id v20 = *(void **)(v12 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v22 = v20;
    a1 = v19;
    id v23 = v22;
    id v24 = v14;
    uint64_t v25 = v23;
    uint64_t v9 = &selRef_setActionTitle_;
    swift_bridgeObjectRelease();
    v72[0] = v13;
    id v7 = v70;
    id v73 = v24;
    uint64_t v74 = v69;
    uint64_t v75 = v15;
    uint64_t v76 = v16;
    uint64_t v4 = v71;
    uint64_t v77 = v17;
    uint64_t v78 = v18;
    uint64_t v79 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v26 = objc_msgSend(self, sel_unknownRecordCategory);
    if (!v26)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    sub_1C21AA50C(v26, (uint64_t)v72);
    id v24 = v73;
    uint64_t v25 = v80;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1C2455724(0, &qword_1EA2E39C0, &qword_1EA2E39C8, (unint64_t *)&qword_1EA2E39D0);
  uint64_t inited = swift_initStackObject();
  long long v69 = xmmword_1C255CD90;
  *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
  uint64_t v28 = self;
  *(void *)(inited + 32) = objc_msgSend(v28, sel_diagnosticTestResultType);
  char v29 = self;
  *(void *)(inited + 40) = objc_msgSend(v29, sel_predicateForDiagnosticTestResultWithReferenceRangeStatus_, 2);
  unint64_t v30 = sub_1C2205CEC(inited);
  id v31 = objc_msgSend(self, sel_sharedBehavior);
  if (!v31)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v32 = v31;
  id v33 = objc_msgSend(v31, sel_features);

  if (!v33)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  unsigned int v34 = objc_msgSend(v33, sel_stanley);

  if (v34)
  {
    id v35 = a1;
    uint64_t v36 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))sub_1C221D628(v30);
    swift_bridgeObjectRelease();
    uint64_t v37 = sub_1C254CB40();
    uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
    v38(v7, 1, 1, v37);
    v38(v4, 1, 1, v37);
    id v39 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
    sub_1C21FDDB8(v35, v25, (uint64_t)v7, 0, 0, (uint64_t)v4, 0, v36, 0);
LABEL_16:

    return;
  }
  swift_bridgeObjectRelease();
  unint64_t v40 = sub_1C21A9468();
  uint64_t v41 = *(void *)(v40 + 16);
  unsigned __int8 v71 = v4;
  id v70 = v7;
  id v68 = a1;
  id v67 = v25;
  if (v41)
  {
    uint64_t v42 = sub_1C21A93C4(2);
    if (v43)
    {
      uint64_t v44 = *(void *)(v40 + 56) + 72 * v42;
      char v45 = *(unsigned char *)v44;
      id v46 = *(void **)(v44 + 8);
      uint64_t v66 = *(void *)(v44 + 16);
      uint64_t v47 = *(void *)(v44 + 24);
      uint64_t v65 = *(void *)(v44 + 32);
      uint64_t v48 = *(void *)(v44 + 40);
      uint64_t v49 = *(void *)(v44 + 48);
      uint64_t v51 = *(void *)(v44 + 56);
      v50 = *(void **)(v44 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v52 = v50;
      id v53 = v46;
      swift_bridgeObjectRelease();
      v72[0] = v45;
      id v73 = v53;
      uint64_t v74 = v66;
      uint64_t v75 = v47;
      uint64_t v76 = v65;
      uint64_t v77 = v48;
      uint64_t v78 = v49;
      uint64_t v79 = v51;
      id v80 = v52;
LABEL_15:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1C2455724(0, &qword_1EA2DFF08, (unint64_t *)&qword_1EA2E39E0, &qword_1EBB6FF78);
      uint64_t v55 = swift_initStackObject();
      *(_OWORD *)(v55 + 16) = v69;
      *(void *)(v55 + 32) = objc_msgSend(v28, sel_diagnosticTestResultType);
      *(void *)(v55 + 40) = objc_msgSend(v29, sel_predicateForDiagnosticTestResultWithReferenceRangeStatus_, 2);
      id v56 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))sub_1C2204BFC(v55);
      uint64_t v57 = sub_1C254CB40();
      id v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56);
      uint64_t v59 = (uint64_t)v70;
      v58(v70, 1, 1, v57);
      uint64_t v60 = (uint64_t)v71;
      v58(v71, 1, 1, v57);
      id v61 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
      id v62 = v68;
      id v63 = v52;
      swift_bridgeObjectRetain();
      id v64 = sub_1C21FDDB8(v62, v52, v59, 0, 0, v60, 0, v56, 0);

      id v35 = objc_msgSend(v64, sel_navigationItem);
      objc_msgSend(v35, sel_setLargeTitleDisplayMode_, 2);

      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  id v54 = [self v9[249]];
  if (v54)
  {
    sub_1C21AA50C(v54, (uint64_t)v72);
    id v53 = v73;
    id v52 = v80;
    goto LABEL_15;
  }
LABEL_20:
  __break(1u);
}

uint64_t method lookup function for ViewControllerFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ViewControllerFactory);
}

uint64_t dispatch thunk of ViewControllerFactory.makeViewController(forAccount:using:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeAndPresentAddAccountViewController(for:from:onboardingContext:gatewayProxyToTry:sourceIdentifier:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeAndPresentOnboardingTileViewController(for:from:sourceIdentifier:animated:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeAccountDetailViewController(forAccountID:using:style:sourceIdentifier:standalone:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeAccountDetailViewController(for:using:style:sourceIdentifier:standalone:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ViewControllerFactory.objC_makeAccountDetailViewController(for:using:sourceIdentifier:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ViewControllerFactory.viewControllerIsAccountDetailViewController(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeFailedToOnboardAccountAlertController(to:error:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeAndPresentFailedToOnboardAccountAlertController(to:from:error:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeSettingsViewControllerAssumingHealthRecordsAreAvailable(using:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeViewController(for:using:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeViewController(forConcept:fromDisplayCategory:highlightedRecord:using:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeDetailViewController(for:using:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ViewControllerFactory.makeAndShowRecordDetailViewController(for:on:using:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t sub_1C24553B8()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C24553F0(uint64_t a1)
{
  return sub_1C2450A7C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_1F1D9AE80, (uint64_t)&unk_1EA2E39A8);
}

uint64_t block_destroy_helper_55()
{
  return swift_release();
}

uint64_t sub_1C2455430()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2455468(uint64_t a1)
{
  return sub_1C2450A7C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_1F1D9AE58, (uint64_t)&unk_1EA2E3998);
}

uint64_t sub_1C24554A4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_1C222399C;
  return sub_1C2450BBC(a1, v4, v5, v6);
}

uint64_t sub_1C2455568(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_1C2223E3C;
  return sub_1C245084C(a1, v4, v5, v6);
}

uint64_t sub_1C2455628(uint64_t a1)
{
  return sub_1C2450A7C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_1F1D9AEF8, (uint64_t)&unk_1EA2E39B8);
}

uint64_t sub_1C2455664(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_1C2223E3C;
  return sub_1C245084C(a1, v4, v5, v6);
}

void sub_1C2455724(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1C2455780(255, a3, a4);
    unint64_t v5 = sub_1C2550820();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C2455780(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C21AB51C(255, a3);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF60);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C2455808(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C21AB7F4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2455878()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C24558C0()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1(*(void *)(v0 + 32));
  }
  return result;
}

uint64_t sub_1C24558F0()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 48, 7);
}

id _s15HealthRecordsUI33MedicalRecordChartDataTransformerPAAE27defaultUnselectedSeriesMainSo7UIColorCyF_0()
{
  id v0 = objc_msgSend(self, sel_hk_chartInactiveSeriesColor);
  return v0;
}

void sub_1C24559BC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup);
  id v2 = objc_msgSend(v1, sel_superview);
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(v2, sel_intrinsicContentSize);
  }
  else
  {
    objc_msgSend(v1, sel_intrinsicContentSize);
  }
}

void *sub_1C2455A48(uint64_t a1)
{
  uint64_t v1 = (void *)sub_1C2456880(a1);
  id v2 = v1;
  return v1;
}

void sub_1C2455A74(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1C2456580(a1, v2, ObjectType, a2);
}

id sub_1C2455AC4(void *a1, uint64_t a2)
{
  uint64_t v50 = a2;
  uint64_t v4 = sub_1C254C520();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v44 - v12;
  uint64_t v14 = sub_1C254CAD0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v48 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v49 = (char *)&v44 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v44 - v20;
  *(void *)&double v23 = MEMORY[0x1F4188790](v22).n128_u64[0];
  id v52 = a1;
  id v53 = (char *)&v44 - v24;
  id v25 = objc_msgSend(a1, sel_startDate, v23);
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    uint64_t v10 = v13;
    goto LABEL_5;
  }
  id v26 = v25;
  uint64_t v44 = v7;
  uint64_t v45 = v5;
  uint64_t v46 = v4;
  uint64_t v51 = v2;
  sub_1C254CA80();

  id v27 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v27(v13, v21, v14);
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v47(v13, 0, 1, v14);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v28(v13, 1, v14) == 1)
  {
    uint64_t v10 = v13;
    uint64_t v2 = v51;
LABEL_5:
    char v29 = &selRef_lastObject;
LABEL_12:
    sub_1C22178C0((uint64_t)v10);
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_monthYearLabel), v29[492], 0);
    return objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_timeLabel), v29[492], 0);
  }
  unint64_t v30 = v13;
  id v31 = v27;
  v27(v53, v30, v14);
  id v32 = objc_msgSend(v52, sel_endDate);
  if (!v32)
  {
    v47(v10, 1, 1, v14);
    char v29 = &selRef_lastObject;
    goto LABEL_11;
  }
  id v33 = v32;
  sub_1C254CA80();

  v31(v10, v21, v14);
  v47(v10, 0, 1, v14);
  char v29 = &selRef_lastObject;
  if (v28(v10, 1, v14) == 1)
  {
LABEL_11:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v53, v14);
    uint64_t v2 = v51;
    goto LABEL_12;
  }
  unsigned int v34 = v49;
  v31(v49, v10, v14);
  id v35 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v35(v21, v53, v14);
  v35(v48, v34, v14);
  uint64_t v36 = (uint64_t)v44;
  sub_1C254C4F0();
  uint64_t v2 = v51;
  uint64_t v37 = *(void **)(v51 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_monthYearLabel);
  HKTimeScope.bucketDateRangeString(from:)(v36, v50);
  if (v38)
  {
    id v39 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v39 = 0;
  }
  uint64_t v42 = v45;
  uint64_t v41 = v46;
  objc_msgSend(v37, sel_setText_, v39);

  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v36, v41);
  char v43 = *(void (**)(char *, uint64_t))(v15 + 8);
  v43(v34, v14);
  v43(v53, v14);
  return objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_timeLabel), v29[492], 0);
}

id MedicalRecordAnnotationViewDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

char *MedicalRecordAnnotationViewDataSource.init()()
{
  id v1 = self;
  uint64_t v2 = v0;
  id v3 = objc_msgSend(v1, sel_hk_chartLollipopLabelColor);
  id v4 = objc_msgSend(self, sel_hk_chartCurrentValueDateFont);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v5, sel_setFont_, v4);
  objc_msgSend(v5, sel_setTextColor_, v3);
  LODWORD(v6) = 1144750080;
  objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v6);
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_monthYearLabel] = v5;
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  id v8 = v5;
  id v9 = objc_msgSend(v7, sel_init);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v9, sel_setFont_, v4);
  objc_msgSend(v9, sel_setTextColor_, v3);
  if (qword_1EA2DD660 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EA2E0B00;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v11 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setText_, v11, 0xE000000000000000);

  objc_msgSend(v9, sel_setHidden_, 1);
  LODWORD(v12) = 1144750080;
  objc_msgSend(v9, sel_setContentHuggingPriority_forAxis_, 0, v12);
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dividerLabel] = v9;
  id v13 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  id v14 = v9;
  id v15 = objc_msgSend(v13, sel_init);
  objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v15, sel_setFont_, v4);
  objc_msgSend(v15, sel_setTextColor_, v3);
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_timeLabel] = v15;
  sub_1C21ACA3C();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C255CD80;
  *(void *)(v16 + 32) = v8;
  *(void *)(v16 + 40) = v14;
  *(void *)(v16 + 48) = v15;
  uint64_t v31 = v16;
  sub_1C254F730();
  id v17 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C2456988();
  id v18 = v15;
  id v19 = v8;
  id v20 = v14;
  id v21 = v18;
  uint64_t v22 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v17, sel_initWithArrangedSubviews_, v22);

  objc_msgSend(v23, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup] = v23;
  id v24 = v23;

  v30.receiver = v2;
  v30.super_class = (Class)type metadata accessor for MedicalRecordAnnotationViewDataSource();
  id v25 = (char *)objc_msgSendSuper2(&v30, sel_init);
  id v26 = *(void **)&v25[OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup];
  id v27 = v25;
  id v28 = v26;
  objc_msgSend(v28, sel_setAxis_, 1);
  objc_msgSend(*(id *)&v27[OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dividerLabel], sel_setHidden_, 1);

  return v27;
}

id sub_1C2456470()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup);
}

id MedicalRecordAnnotationViewDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordAnnotationViewDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C2456580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = *(id *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_monthYearLabel);
  uint64_t v27 = a2;
  (*(void (**)(uint64_t, uint64_t, __n128))(a4 + 16))(a3, a4, v9);
  id v12 = (id)HKDateFormatterFromTemplate();
  if (!v12) {
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  }
  id v24 = *(void (**)(uint64_t, uint64_t))(a4 + 8);
  v24(a3, a4);
  id v13 = (void *)sub_1C254CA50();
  id v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v25 = v7;
  id v23 = v14;
  v14(v11, v7);
  id v15 = objc_msgSend(v12, sel_stringFromDate_, v13);

  if (!v15)
  {
    sub_1C254F470();
    id v15 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v26, sel_setText_, v15);

  uint64_t v16 = *(void **)(v27 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_timeLabel);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4))
  {
    id v17 = (id)HKDateFormatterFromTemplate();
    if (!v17) {
      id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
    }
    uint64_t ObjectType = swift_getObjectType();
    v24(ObjectType, a4);
    id v19 = (void *)sub_1C254CA50();
    v23(v11, v25);
    id v20 = objc_msgSend(v17, sel_stringFromDate_, v19);

    sub_1C254F470();
    id v21 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v21 = 0;
  }
  objc_msgSend(v16, sel_setText_, v21);
}

uint64_t sub_1C2456880(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup);
  if (a1 == 1)
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup), sel_setAxis_, 0);
    id v3 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dividerLabel);
    id v4 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_timeLabel), sel_text);
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = sub_1C254F470();
      unint64_t v8 = v7;

      swift_bridgeObjectRelease();
      uint64_t v9 = HIBYTE(v8) & 0xF;
      if ((v8 & 0x2000000000000000) == 0) {
        uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
      }
      BOOL v10 = v9 == 0;
    }
    else
    {
      BOOL v10 = 1;
    }
    objc_msgSend(v3, sel_setHidden_, v10);
  }
  else if (!a1)
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup), sel_setAxis_, 1);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dividerLabel), sel_setHidden_, 1);
  }
  return v2;
}

unint64_t sub_1C2456988()
{
  unint64_t result = qword_1EA2DE010;
  if (!qword_1EA2DE010)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DE010);
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordAnnotationViewDataSource()
{
  return self;
}

uint64_t method lookup function for MedicalRecordAnnotationViewDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordAnnotationViewDataSource);
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.dateGroupWidth.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.numberOfValues(forAnnotationView:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.valueViewForColumn(at:orientation:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.showSeparators()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.dateView(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.leftMarginView(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.updateDateGroup(using:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MedicalRecordAnnotationViewDataSource.updateDateGroup(using:timeScope:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

double static DisplayItemProvider.supportedCategory(for:)@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v3 = *a1;
  unint64_t v4 = sub_1C21A9468();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1C21A935C(v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(v4 + 56) + 72 * v5;
    uint64_t v9 = *(void **)(v7 + 8);
    uint64_t v8 = *(void *)(v7 + 16);
    uint64_t v10 = *(void *)(v7 + 40);
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = *(void *)(v7 + 56);
    id v13 = *(void **)(v7 + 64);
    *(unsigned char *)a2 = *(unsigned char *)v7;
    *(void *)(a2 + 8) = v9;
    *(void *)(a2 + 16) = v8;
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(v7 + 24);
    *(void *)(a2 + 40) = v10;
    *(void *)(a2 + 48) = v11;
    *(void *)(a2 + 56) = v12;
    *(void *)(a2 + 64) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v13;
    id v15 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(a2 + 64) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void static DisplayItemProvider.displayCategory(for:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v3 = *a1;
  unint64_t v4 = sub_1C21A9468();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1C21A935C(v3), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(v4 + 56) + 72 * v5;
    char v8 = *(unsigned char *)v7;
    uint64_t v9 = *(void **)(v7 + 8);
    uint64_t v10 = *(void *)(v7 + 16);
    uint64_t v11 = *(void *)(v7 + 24);
    uint64_t v19 = *(void *)(v7 + 32);
    uint64_t v12 = *(void *)(v7 + 40);
    uint64_t v13 = *(void *)(v7 + 48);
    uint64_t v14 = *(void *)(v7 + 56);
    id v15 = *(void **)(v7 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = v15;
    id v17 = v9;
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v8;
    *(void *)(a2 + 8) = v17;
    *(void *)(a2 + 16) = v10;
    *(void *)(a2 + 24) = v11;
    *(void *)(a2 + 32) = v19;
    *(void *)(a2 + 40) = v12;
    *(void *)(a2 + 48) = v13;
    *(void *)(a2 + 56) = v14;
    *(void *)(a2 + 64) = v16;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(self, sel_unknownRecordCategory);
    if (v18)
    {
      sub_1C21AA50C(v18, a2);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t static DisplayItemProvider.supportedSampleTypes.getter()
{
  id v0 = objc_msgSend(self, sel_allSupportedSampleTypes);
  if (!v0) {
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v1 = v0;
  sub_1C21AB51C(0, &qword_1EBB6FF78);
  unint64_t v2 = sub_1C254F710();

  uint64_t v3 = sub_1C249272C(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static DisplayItemProvider.orderedSupportedCategories.getter()
{
  _s15HealthRecordsUI19DisplayItemProviderC19supportedCategoriesShyAA0D8CategoryVGvgZ_0();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C228FD90(v0);
  swift_bridgeObjectRelease();
  uint64_t v3 = v1;
  sub_1C2456EE8((uint64_t *)&v3);
  swift_bridgeObjectRelease();
  return (uint64_t)v3;
}

uint64_t sub_1C2456EE8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C23F36D4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C2458D94(v5);
  *a1 = v2;
  return result;
}

uint64_t static DisplayItemProvider.supportedCategoryTypes.getter()
{
  id v0 = (id)HKMedicalRecordAllSupportedCategoryTypes();
  if (!v0) {
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v1 = v0;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
  unint64_t v2 = sub_1C254F710();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_4;
    }
LABEL_18:
    char v6 = (char *)MEMORY[0x1E4FBC860];
LABEL_19:
    swift_bridgeObjectRelease_n();
    uint64_t v12 = sub_1C2492C68((uint64_t)v6);
    swift_bridgeObjectRelease();
    return v12;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_4:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    char v6 = (char *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1C87588E0](v5, v2);
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      char v8 = v7;
      id v9 = objc_msgSend(v7, sel_integerValue);

      if ((unint64_t)v9 <= 0xA)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v6 = sub_1C226E2D4(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v11 = *((void *)v6 + 2);
        unint64_t v10 = *((void *)v6 + 3);
        if (v11 >= v10 >> 1) {
          char v6 = sub_1C226E2D4((char *)(v10 > 1), v11 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v11 + 1;
        v6[v11 + 32] = (char)v9;
      }
      ++v5;
    }
    while (v3 != v5);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

void static DisplayItemProvider.unknownCategory.getter(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_unknownRecordCategory);
  if (v2)
  {
    sub_1C21AA50C(v2, a1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t DisplayItemProvider.deinit()
{
  return v0;
}

uint64_t DisplayItemProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1C2457190(uint64_t *a1)
{
  sub_1C25509C0();
  sub_1C2284124((uint64_t)a1, (uint64_t)v4);
  sub_1C2284124((uint64_t)v4, (uint64_t)&v5);
  if ((v6 & 1) == 0)
  {
    sub_1C25509E0();
    sub_1C25509D0();
    sub_1C25509D0();
    sub_1C25509D0();
    if (a1[5]) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1C25509E0();
    goto LABEL_6;
  }
  sub_1C25509E0();
  if (!a1[5]) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1C25509E0();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  sub_1C22841AC((uint64_t)a1);
LABEL_6:
  uint64_t v2 = sub_1C2550A10();
  return sub_1C2457BCC(a1, v2);
}

unint64_t sub_1C24572A8(uint64_t a1)
{
  sub_1C254F470();
  sub_1C25509C0();
  sub_1C254F570();
  uint64_t v2 = sub_1C2550A10();
  swift_bridgeObjectRelease();
  return sub_1C2457CDC(a1, v2);
}

unint64_t sub_1C245733C(uint64_t a1)
{
  uint64_t v2 = sub_1C254FF60();
  return sub_1C21AB408(a1, v2, &qword_1EBB6FF78);
}

unint64_t sub_1C2457390(double a1)
{
  uint64_t v2 = sub_1C25509B0();
  return sub_1C2457E54(v2, a1);
}

unint64_t sub_1C24573D8(uint64_t a1)
{
  sub_1C254CB40();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1C2459C1C((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
  uint64_t v3 = sub_1C254F370();
  return sub_1C2458B38(a1, v3, MEMORY[0x1E4F27990], (unint64_t *)&qword_1EA2DE1E8, v2, MEMORY[0x1E4F279B0]);
}

unint64_t sub_1C24574AC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  sub_1C25509C0();
  if (a2)
  {
    sub_1C25509E0();
    swift_bridgeObjectRetain();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    if (a3) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1C25509E0();
    if (a4) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_1C25509E0();
  if (!a3) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1C25509E0();
  id v8 = a3;
  sub_1C254FF80();

  if (a4)
  {
LABEL_4:
    sub_1C25509E0();
    id v9 = a4;
    sub_1C254FF80();

    goto LABEL_8;
  }
LABEL_7:
  sub_1C25509E0();
LABEL_8:
  uint64_t v10 = sub_1C2550A10();
  return sub_1C2457EEC(a1, a2, a3, a4, v10);
}

unint64_t sub_1C24575D0(uint64_t a1)
{
  uint64_t v2 = sub_1C254FF60();
  return sub_1C21AB408(a1, v2, &qword_1EA2DE508);
}

unint64_t sub_1C2457620(uint64_t a1)
{
  uint64_t v2 = sub_1C254FF60();
  return sub_1C21AB408(a1, v2, (unint64_t *)&qword_1EBB70030);
}

unint64_t sub_1C2457670(uint64_t a1)
{
  uint64_t v2 = sub_1C2550310();
  return sub_1C245811C(a1, v2);
}

unint64_t sub_1C24576B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v7 = a4 & 1;
  sub_1C25509C0();
  AccountIcon.Size.hash(into:)();
  uint64_t v8 = sub_1C2550A10();
  return sub_1C24581E4(a1, a2, a3, v7, v8);
}

unint64_t sub_1C245774C(uint64_t a1)
{
  uint64_t v2 = sub_1C25509B0();
  return sub_1C245831C(a1, v2);
}

unint64_t sub_1C2457794(uint64_t a1)
{
  uint64_t v2 = sub_1C254FF60();
  return sub_1C21AB408(a1, v2, (unint64_t *)&unk_1EA2DE0C0);
}

unint64_t sub_1C24577E4(uint64_t a1)
{
  sub_1C254F470();
  sub_1C25509C0();
  sub_1C254F570();
  uint64_t v2 = sub_1C2550A10();
  swift_bridgeObjectRelease();
  return sub_1C2457CDC(a1, v2);
}

unint64_t sub_1C2457874(uint64_t a1)
{
  sub_1C25509C0();
  BrowseCategory.rawValue.getter();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1C2550A10();
  return sub_1C24583B8(a1, v2);
}

void sub_1C24578FC(long long *a1)
{
  long long v2 = a1[3];
  long long v8 = a1[2];
  long long v9 = v2;
  uint64_t v10 = *((void *)a1 + 8);
  long long v3 = a1[1];
  long long v6 = *a1;
  long long v7 = v3;
  sub_1C25509C0();
  DisplayCategory.hash(into:)((uint64_t)v5);
  uint64_t v4 = sub_1C2550A10();
  sub_1C2458564(a1, v4);
}

unint64_t sub_1C2457980(uint64_t a1)
{
  sub_1C25509C0();
  sub_1C25509D0();
  uint64_t v2 = sub_1C2550A10();
  return sub_1C245831C(a1, v2);
}

unint64_t sub_1C24579E8(uint64_t a1)
{
  sub_1C254CAD0();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C2459C1C(&qword_1EA2DD9B0, MEMORY[0x1E4F27928]);
  uint64_t v3 = sub_1C254F370();
  return sub_1C2458B38(a1, v3, MEMORY[0x1E4F27928], &qword_1EA2DDD00, v2, MEMORY[0x1E4F27948]);
}

unint64_t sub_1C2457ABC(char a1)
{
  char v1 = a1 & 1;
  sub_1C25509C0();
  sub_1C25509D0();
  uint64_t v2 = sub_1C2550A10();
  return sub_1C2458CD8(v1, v2);
}

unint64_t sub_1C2457B2C(uint64_t a1)
{
  uint64_t v2 = sub_1C254FF60();
  return sub_1C21AB408(a1, v2, (unint64_t *)&qword_1EA2E39D0);
}

unint64_t sub_1C2457B7C(uint64_t a1)
{
  uint64_t v2 = sub_1C254FF60();
  return sub_1C21AB408(a1, v2, &qword_1EBB6EF58);
}

unint64_t sub_1C2457BCC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v7 = ~v4;
    uint64_t v8 = *(void *)(v2 + 48);
    uint64_t v9 = *a1;
    uint64_t v10 = a1[1];
    uint64_t v11 = a1[2];
    char v12 = *((unsigned char *)a1 + 24);
    do
    {
      uint64_t v13 = (uint64_t *)(v8 + 48 * v5);
      uint64_t v14 = v13[4];
      uint64_t v15 = v13[5];
      if (v13[3])
      {
        if ((v12 & 1) == 0) {
          goto LABEL_4;
        }
      }
      else
      {
        if (v12) {
          goto LABEL_4;
        }
        uint64_t v16 = *v13;
        uint64_t v17 = v13[1];
        uint64_t v18 = v13[2];
        BOOL v19 = v16 == v9 && v17 == v10;
        if (!v19 || v18 != v11) {
          goto LABEL_4;
        }
      }
      uint64_t v21 = a1[5];
      if (v15)
      {
        if (v21)
        {
          BOOL v22 = v14 == a1[4] && v15 == v21;
          if (v22 || (sub_1C2550870() & 1) != 0) {
            return v5;
          }
        }
      }
      else if (!v21)
      {
        return v5;
      }
LABEL_4:
      unint64_t v5 = (v5 + 1) & v7;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_1C2457CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1C254F470();
    uint64_t v8 = v7;
    if (v6 == sub_1C254F470() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1C2550870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1C254F470();
          uint64_t v15 = v14;
          if (v13 == sub_1C254F470() && v15 == v16) {
            break;
          }
          char v18 = sub_1C2550870();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1C2457E54(uint64_t a1, double a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1C2457EEC(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = v5;
    uint64_t v10 = a3;
    uint64_t v12 = a1;
    uint64_t v13 = ~v7;
    uint64_t v32 = ~v7;
    do
    {
      uint64_t v14 = (void *)(*(void *)(v9 + 48) + 32 * v8);
      uint64_t v15 = v14[1];
      uint64_t v16 = (void *)v14[2];
      uint64_t v17 = (void *)v14[3];
      if (v15)
      {
        if (!a2) {
          goto LABEL_4;
        }
        if (*v14 != v12 || v15 != a2)
        {
          char v19 = sub_1C2550870();
          uint64_t v13 = v32;
          if ((v19 & 1) == 0) {
            goto LABEL_4;
          }
        }
      }
      else if (a2)
      {
        goto LABEL_4;
      }
      if (v16)
      {
        if (!v10) {
          goto LABEL_4;
        }
        sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
        id v29 = v17;
        id v20 = v10;
        swift_bridgeObjectRetain();
        id v21 = v16;
        char v22 = sub_1C254FF70();

        if ((v22 & 1) == 0)
        {

          swift_bridgeObjectRelease();
LABEL_25:
          uint64_t v12 = a1;
          uint64_t v10 = a3;
          uint64_t v13 = v32;
          goto LABEL_4;
        }
      }
      else
      {
        if (v10) {
          goto LABEL_4;
        }
        id v23 = v17;
        swift_bridgeObjectRetain();
      }
      if (v17)
      {
        if (!a4)
        {
          swift_bridgeObjectRelease();

          goto LABEL_25;
        }
        sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
        id v24 = v17;
        id v25 = a4;
        char v26 = sub_1C254FF70();

        swift_bridgeObjectRelease();
        uint64_t v12 = a1;
        uint64_t v10 = a3;
        uint64_t v13 = v32;
        if (v26) {
          return v8;
        }
      }
      else
      {
        swift_bridgeObjectRelease();

        uint64_t v12 = a1;
        uint64_t v10 = a3;
        uint64_t v13 = v32;
        if (!a4) {
          return v8;
        }
      }
LABEL_4:
      unint64_t v8 = (v8 + 1) & v13;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_1C245811C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1C22859F4(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x1C8758830](v9, a1);
      sub_1C2298B34((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1C24581E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t result = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v9 = ~v7;
    uint64_t v10 = a3 | a2;
    if (a3 | a2) {
      BOOL v11 = 0;
    }
    else {
      BOOL v11 = (unint64_t)(a1 - 1) < 2;
    }
    if (v10) {
      BOOL v12 = 0;
    }
    else {
      BOOL v12 = a1 == 1;
    }
    if (v10) {
      BOOL v13 = 0;
    }
    else {
      BOOL v13 = a1 == 2;
    }
    uint64_t v14 = v10 | a1;
    double v15 = *(double *)&a1;
    BOOL v18 = (a4 & 1) == 0 || v14 == 0;
    char v19 = v18;
    if (v18) {
      BOOL v11 = 1;
    }
    char v20 = v18 || v12;
    do
    {
      uint64_t v21 = *(void *)(v5 + 48) + 32 * result;
      double v23 = *(double *)v21;
      double v22 = *(double *)(v21 + 8);
      double v24 = *(double *)(v21 + 16);
      if (*(unsigned char *)(v21 + 24) == 1)
      {
        uint64_t v25 = *(void *)&v24 | *(void *)&v22;
        if (v25 | *(void *)&v23)
        {
          if (*(void *)&v23 == 1 && v25 == 0)
          {
            if ((v19 & 1) == 0 && v12) {
              return result;
            }
          }
          else if (*(void *)&v23 == 2 && v25 == 0)
          {
            if ((v20 & 1) == 0 && v13) {
              return result;
            }
          }
          else if (!v11)
          {
            return result;
          }
        }
        else if ((a4 & 1) != 0 && !v14)
        {
          return result;
        }
      }
      else if ((a4 & 1) == 0)
      {
        BOOL v28 = v23 == v15 && v22 == *(double *)&a2;
        if (v28 && v24 == *(double *)&a3) {
          return result;
        }
      }
      unint64_t result = (result + 1) & v9;
    }
    while (((*(void *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1C245831C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1C24583B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v19[1] = a1;
  uint64_t v5 = type metadata accessor for BrowseCategory() - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    while (1)
    {
      sub_1C21A9698(*(void *)(v3 + 48) + v12 * v10, (uint64_t)v8);
      unint64_t v13 = BrowseCategory.rawValue.getter();
      uint64_t v15 = v14;
      if (v13 == BrowseCategory.rawValue.getter() && v15 == v16) {
        break;
      }
      char v17 = sub_1C2550870();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C2268C64((uint64_t)v8);
      if ((v17 & 1) == 0)
      {
        unint64_t v10 = (v10 + 1) & v11;
        if ((*(void *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10)) {
          continue;
        }
      }
      return v10;
    }
    swift_bridgeObjectRelease_n();
    sub_1C2268C64((uint64_t)v8);
  }
  return v10;
}

void sub_1C2458564(void *a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
    return;
  }
  uint64_t v6 = ~v4;
  int v7 = *(unsigned __int8 *)a1;
  uint64_t v59 = a1[4];
  uint64_t v60 = a1[3];
  uint64_t v57 = a1[2];
  uint64_t v58 = a1[5];
  unint64_t v67 = a1[6];
  uint64_t v56 = a1[7];
  uint64_t v62 = ~v4;
  int v65 = v7;
  while (1)
  {
    uint64_t v8 = (void *)(*(void *)(v2 + 48) + 72 * v5);
    if (*(unsigned __int8 *)v8 != v7) {
      goto LABEL_4;
    }
    unint64_t v10 = (void *)v8[1];
    uint64_t v9 = v8[2];
    uint64_t v11 = v8[3];
    uint64_t v66 = v8[4];
    uint64_t v13 = v8[5];
    uint64_t v12 = v8[6];
    uint64_t v15 = v8[7];
    uint64_t v14 = (void *)v8[8];
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = v14;
    id v17 = v10;
    if ((sub_1C254FF70() & 1) == 0)
    {
LABEL_3:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = v63;
      uint64_t v2 = v64;
      uint64_t v6 = v62;

      int v7 = v65;
      goto LABEL_4;
    }
    uint64_t v61 = v15;
    if (v11)
    {
      uint64_t v18 = v13;
      uint64_t v19 = v12;
      if (!v60) {
        goto LABEL_3;
      }
      BOOL v20 = v9 == v57 && v11 == v60;
      if (!v20 && (sub_1C2550870() & 1) == 0) {
        goto LABEL_3;
      }
    }
    else
    {
      uint64_t v18 = v13;
      uint64_t v19 = v12;
      if (v60) {
        goto LABEL_3;
      }
    }
    BOOL v21 = v66 == v59 && v18 == v58;
    if (!v21 && (sub_1C2550870() & 1) == 0) {
      goto LABEL_3;
    }
    if ((unint64_t)v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1C2550620();
      swift_bridgeObjectRelease();
      uint64_t v22 = v49;
    }
    else
    {
      uint64_t v22 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v23 = v67;
    unint64_t v24 = v67 >> 62;
    if (v67 >> 62)
    {
      uint64_t v53 = v22;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1C2550620();
      sub_1C22C04F0((uint64_t)&v67);
      uint64_t v22 = v53;
      if (v53 != v50) {
        goto LABEL_3;
      }
    }
    else if (v22 != *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_3;
    }
    if (v22)
    {
      uint64_t v25 = v19 & 0xFFFFFFFFFFFFFF8;
      uint64_t v26 = (v19 & 0xFFFFFFFFFFFFFF8) + 32;
      if (v19 < 0) {
        uint64_t v25 = v19;
      }
      if ((unint64_t)v19 >> 62) {
        uint64_t v26 = v25;
      }
      uint64_t v27 = v23 & 0xFFFFFFFFFFFFFF8;
      uint64_t v28 = (v23 & 0xFFFFFFFFFFFFFF8) + 32;
      if (v23 < 0) {
        uint64_t v27 = v23;
      }
      if (v24) {
        uint64_t v28 = v27;
      }
      if (v26 != v28) {
        break;
      }
    }
LABEL_44:
    if ((sub_1C22AB474(v61, v56) & 1) == 0) {
      goto LABEL_3;
    }
    char v36 = sub_1C254FF70();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v3 = v63;
    uint64_t v2 = v64;
    uint64_t v6 = v62;
    int v7 = v65;
    if (v36) {
      return;
    }
LABEL_4:
    unint64_t v5 = (v5 + 1) & v6;
    if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      return;
    }
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    unint64_t v55 = v19 & 0xC000000000000001;
    uint64_t v51 = v22;
    if ((v19 & 0xC000000000000001) != 0)
    {
      id v29 = (id)MEMORY[0x1C87588E0](0, v19);
    }
    else
    {
      if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_77;
      }
      id v29 = *(id *)(v19 + 32);
    }
    id v30 = v29;
    unint64_t v54 = v23 & 0xC000000000000001;
    if ((v23 & 0xC000000000000001) != 0)
    {
      id v31 = (id)MEMORY[0x1C87588E0](0, v23);
    }
    else
    {
      if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_78;
      }
      id v31 = *(id *)(v23 + 32);
    }
    uint64_t v32 = v31;
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    char v33 = sub_1C254FF70();
    unsigned int v34 = v30;
    char v35 = v33;

    if ((v35 & 1) == 0) {
      goto LABEL_3;
    }
    if (v51 != 1)
    {
      if (v55)
      {
        id v37 = (id)MEMORY[0x1C87588E0](1, v19);
      }
      else
      {
        if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
          goto LABEL_81;
        }
        id v37 = *(id *)(v19 + 40);
      }
      uint64_t v38 = v37;
      if (v54)
      {
        id v39 = (id)MEMORY[0x1C87588E0](1, v23);
      }
      else
      {
        if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
          goto LABEL_82;
        }
        id v39 = *(id *)(v23 + 40);
      }
      unint64_t v40 = v39;
      char v41 = sub_1C254FF70();

      if ((v41 & 1) == 0) {
        goto LABEL_3;
      }
      uint64_t v52 = 2 - v51;
      uint64_t v42 = 6;
      while (v52 + v42 != 6)
      {
        unint64_t v46 = v42 - 4;
        if (v55)
        {
          id v47 = (id)MEMORY[0x1C87588E0](v42 - 4, v19);
        }
        else
        {
          if (v46 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_79;
          }
          id v47 = *(id *)(v19 + 8 * v42);
        }
        uint64_t v48 = v47;
        if (v54)
        {
          id v43 = (id)MEMORY[0x1C87588E0](v42 - 4, v23);
        }
        else
        {
          if (v46 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_80;
          }
          id v43 = *(id *)(v23 + 8 * v42);
        }
        uint64_t v44 = v43;
        char v45 = sub_1C254FF70();

        ++v42;
        if ((v45 & 1) == 0) {
          goto LABEL_3;
        }
      }
    }
    goto LABEL_44;
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
}

unint64_t sub_1C2458B38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  unint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    id v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_1C2459C1C(v23, v24);
      char v19 = sub_1C254F420();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1C2458CD8(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C2458D94(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C2550800();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_134;
    }
    if (v3) {
      return sub_1C2459574(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_142;
  }
  uint64_t v102 = result;
  v99 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    v109 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v101 = MEMORY[0x1E4FBC860];
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_100:
      if (v11 >= 2)
      {
        uint64_t v92 = *v99;
        do
        {
          unint64_t v93 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_129;
          }
          if (!v92) {
            goto LABEL_141;
          }
          uint64_t v94 = *(void *)&v8[16 * v93 + 32];
          uint64_t v95 = *(void *)&v8[16 * v11 + 24];
          sub_1C24596B4((char *)(v92 + 72 * v94), (char *)(v92 + 72 * *(void *)&v8[16 * v11 + 16]), v92 + 72 * v95, v109);
          if (v1) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_130;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1C23F321C((uint64_t)v8);
          }
          if (v93 >= *((void *)v8 + 2)) {
            goto LABEL_131;
          }
          v96 = &v8[16 * v93 + 32];
          *(void *)v96 = v94;
          *((void *)v96 + 1) = v95;
          unint64_t v97 = *((void *)v8 + 2);
          if (v11 > v97) {
            goto LABEL_132;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v97 - v11));
          *((void *)v8 + 2) = v97 - 1;
          unint64_t v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(void *)(v101 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C254F780();
    *(void *)(v7 + 16) = v6;
    uint64_t v101 = v7;
    v109 = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v100 = *a1 + 184;
  uint64_t v98 = *a1 + 56;
  uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v107 = v3;
  uint64_t v110 = *a1;
  while (1)
  {
    uint64_t v12 = v9++;
    if (v9 >= v3) {
      goto LABEL_34;
    }
    sub_1C2218914();
    uint64_t v13 = sub_1C2550190();
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    uint64_t v9 = v14 + 2;
    uint64_t v108 = v14;
    if (v14 + 2 >= v3) {
      goto LABEL_21;
    }
    uint64_t v16 = v100 + 72 * v14;
    do
    {
      if ((v15 == -1) == (sub_1C2550190() != -1))
      {
        uint64_t v3 = v107;
        if (v15 == -1) {
          goto LABEL_24;
        }
LABEL_33:
        uint64_t v12 = v108;
        goto LABEL_34;
      }
      v16 += 72;
      ++v9;
      uint64_t v3 = v107;
    }
    while (v107 != v9);
    uint64_t v9 = v107;
LABEL_21:
    if (v15 != -1) {
      goto LABEL_33;
    }
LABEL_24:
    uint64_t v12 = v108;
    if (v9 < v108) {
      goto LABEL_137;
    }
    if (v108 < v9)
    {
      uint64_t v17 = 72 * v9;
      uint64_t v18 = 72 * v108;
      uint64_t v19 = v108;
      uint64_t v20 = v9;
      do
      {
        if (v19 != --v20)
        {
          if (!v10) {
            goto LABEL_140;
          }
          BOOL v21 = v8;
          uint64_t v22 = (char *)(v10 + v18);
          uint64_t v23 = v110 + v17;
          char v24 = *v22;
          uint64_t v25 = *((void *)v22 + 1);
          uint64_t v106 = *((void *)v22 + 4);
          long long v105 = *(_OWORD *)(v22 + 40);
          long long v103 = *((_OWORD *)v22 + 1);
          long long v104 = *(_OWORD *)(v22 + 56);
          memmove(v22, (const void *)(v110 + v17 - 72), 0x48uLL);
          *(unsigned char *)(v23 - 72) = v24;
          *(void *)(v23 - 64) = v25;
          *(_OWORD *)(v23 - 56) = v103;
          *(void *)(v23 - 40) = v106;
          *(_OWORD *)(v23 - 32) = v105;
          *(_OWORD *)(v23 - 16) = v104;
          uint64_t v10 = v110;
          uint64_t v8 = v21;
        }
        ++v19;
        v17 -= 72;
        v18 += 72;
      }
      while (v19 < v20);
      uint64_t v3 = v107;
      goto LABEL_33;
    }
LABEL_34:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12)) {
        goto LABEL_133;
      }
      if (v9 - v12 < v102) {
        break;
      }
    }
LABEL_51:
    if (v9 < v12) {
      goto LABEL_128;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1C23F277C(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v42 = *((void *)v8 + 2);
    unint64_t v41 = *((void *)v8 + 3);
    unint64_t v11 = v42 + 1;
    if (v42 >= v41 >> 1) {
      uint64_t v8 = sub_1C23F277C((char *)(v41 > 1), v42 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v11;
    id v43 = v8 + 32;
    uint64_t v44 = &v8[16 * v42 + 32];
    *(void *)uint64_t v44 = v12;
    *((void *)v44 + 1) = v9;
    if (v42)
    {
      while (1)
      {
        unint64_t v45 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v50 = &v43[16 * v11];
          uint64_t v51 = *((void *)v50 - 8);
          uint64_t v52 = *((void *)v50 - 7);
          BOOL v56 = __OFSUB__(v52, v51);
          uint64_t v53 = v52 - v51;
          if (v56) {
            goto LABEL_117;
          }
          uint64_t v55 = *((void *)v50 - 6);
          uint64_t v54 = *((void *)v50 - 5);
          BOOL v56 = __OFSUB__(v54, v55);
          uint64_t v48 = v54 - v55;
          char v49 = v56;
          if (v56) {
            goto LABEL_118;
          }
          unint64_t v57 = v11 - 2;
          uint64_t v58 = &v43[16 * v11 - 32];
          uint64_t v60 = *(void *)v58;
          uint64_t v59 = *((void *)v58 + 1);
          BOOL v56 = __OFSUB__(v59, v60);
          uint64_t v61 = v59 - v60;
          if (v56) {
            goto LABEL_120;
          }
          BOOL v56 = __OFADD__(v48, v61);
          uint64_t v62 = v48 + v61;
          if (v56) {
            goto LABEL_123;
          }
          if (v62 >= v53)
          {
            id v80 = &v43[16 * v45];
            uint64_t v82 = *(void *)v80;
            uint64_t v81 = *((void *)v80 + 1);
            BOOL v56 = __OFSUB__(v81, v82);
            uint64_t v83 = v81 - v82;
            if (v56) {
              goto LABEL_127;
            }
            BOOL v73 = v48 < v83;
            goto LABEL_88;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v74 = *((void *)v8 + 4);
            uint64_t v75 = *((void *)v8 + 5);
            BOOL v56 = __OFSUB__(v75, v74);
            uint64_t v67 = v75 - v74;
            char v68 = v56;
            goto LABEL_82;
          }
          uint64_t v47 = *((void *)v8 + 4);
          uint64_t v46 = *((void *)v8 + 5);
          BOOL v56 = __OFSUB__(v46, v47);
          uint64_t v48 = v46 - v47;
          char v49 = v56;
        }
        if (v49) {
          goto LABEL_119;
        }
        unint64_t v57 = v11 - 2;
        uint64_t v63 = &v43[16 * v11 - 32];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v66 = __OFSUB__(v64, v65);
        uint64_t v67 = v64 - v65;
        char v68 = v66;
        if (v66) {
          goto LABEL_122;
        }
        long long v69 = &v43[16 * v45];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v56 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v56) {
          goto LABEL_125;
        }
        if (__OFADD__(v67, v72)) {
          goto LABEL_126;
        }
        if (v67 + v72 >= v48)
        {
          BOOL v73 = v48 < v72;
LABEL_88:
          if (v73) {
            unint64_t v45 = v57;
          }
          goto LABEL_90;
        }
LABEL_82:
        if (v68) {
          goto LABEL_121;
        }
        uint64_t v76 = &v43[16 * v45];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v56 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v56) {
          goto LABEL_124;
        }
        if (v79 < v67) {
          goto LABEL_14;
        }
LABEL_90:
        unint64_t v84 = v45 - 1;
        if (v45 - 1 >= v11)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        if (!v10) {
          goto LABEL_139;
        }
        v85 = v8;
        uint64_t v86 = v10;
        v87 = &v43[16 * v84];
        uint64_t v88 = *(void *)v87;
        v89 = &v43[16 * v45];
        uint64_t v90 = *((void *)v89 + 1);
        sub_1C24596B4((char *)(v86 + 72 * *(void *)v87), (char *)(v86 + 72 * *(void *)v89), v86 + 72 * v90, v109);
        if (v1) {
          goto LABEL_111;
        }
        if (v90 < v88) {
          goto LABEL_114;
        }
        if (v45 > *((void *)v85 + 2)) {
          goto LABEL_115;
        }
        *(void *)v87 = v88;
        *(void *)&v43[16 * v84 + 8] = v90;
        unint64_t v91 = *((void *)v85 + 2);
        if (v45 >= v91) {
          goto LABEL_116;
        }
        uint64_t v8 = v85;
        unint64_t v11 = v91 - 1;
        memmove(&v43[16 * v45], v89 + 16, 16 * (v91 - 1 - v45));
        *((void *)v85 + 2) = v91 - 1;
        uint64_t v10 = v110;
        if (v91 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    uint64_t v3 = v107;
    if (v9 >= v107) {
      goto LABEL_100;
    }
  }
  if (__OFADD__(v12, v102)) {
    goto LABEL_135;
  }
  if (v12 + v102 >= v3) {
    uint64_t v26 = v3;
  }
  else {
    uint64_t v26 = v12 + v102;
  }
  if (v26 >= v12)
  {
    if (v9 != v26)
    {
      sub_1C2218914();
      uint64_t v27 = v98 + 72 * v9;
      do
      {
        uint64_t v28 = v12;
        uint64_t v29 = v27;
        do
        {
          if (sub_1C2550190() != -1) {
            break;
          }
          if (!v10) {
            goto LABEL_138;
          }
          uint64_t v30 = v29 - 56;
          id v31 = (_OWORD *)(v29 - 128);
          uint64_t v32 = *(void *)(v29 - 64);
          long long v34 = *(_OWORD *)(v29 - 96);
          long long v33 = *(_OWORD *)(v29 - 80);
          *(_OWORD *)(v29 - 72) = *(_OWORD *)v29;
          v29 -= 72;
          char v35 = *(unsigned char *)(v29 + 16);
          uint64_t v36 = *(void *)(v29 + 24);
          uint64_t v37 = *(void *)(v29 + 48);
          long long v38 = *(_OWORD *)(v29 + 32);
          long long v39 = *(_OWORD *)(v29 + 56);
          *(_OWORD *)(v30 + 32) = v34;
          *(_OWORD *)(v30 + 48) = v33;
          *(void *)(v30 + 64) = v32;
          long long v40 = v31[1];
          *(_OWORD *)uint64_t v30 = *v31;
          *(_OWORD *)(v30 + 16) = v40;
          *(unsigned char *)(v29 - 56) = v35;
          *(void *)(v29 - 48) = v36;
          *(_OWORD *)(v29 - 40) = v38;
          *(_OWORD *)(v29 - 16) = v39;
          ++v28;
          *(void *)(v29 - 24) = v37;
        }
        while (v9 != v28);
        ++v9;
        v27 += 72;
      }
      while (v9 != v26);
      uint64_t v9 = v26;
    }
    goto LABEL_51;
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  uint64_t result = sub_1C25505E0();
  __break(1u);
  return result;
}

uint64_t sub_1C2459574(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v21 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    sub_1C2218914();
    uint64_t v7 = v6 + 72 * v4 + 56;
LABEL_5:
    uint64_t v8 = v21;
    uint64_t v9 = v7;
    while (1)
    {
      uint64_t result = sub_1C2550190();
      if (result != -1)
      {
LABEL_4:
        ++v4;
        v7 += 72;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v6) {
        break;
      }
      uint64_t v10 = v9 - 56;
      unint64_t v11 = (_OWORD *)(v9 - 128);
      uint64_t v12 = *(void *)(v9 - 64);
      long long v14 = *(_OWORD *)(v9 - 96);
      long long v13 = *(_OWORD *)(v9 - 80);
      *(_OWORD *)(v9 - 72) = *(_OWORD *)v9;
      v9 -= 72;
      char v15 = *(unsigned char *)(v9 + 16);
      uint64_t v16 = *(void *)(v9 + 24);
      uint64_t v17 = *(void *)(v9 + 48);
      long long v18 = *(_OWORD *)(v9 + 32);
      long long v19 = *(_OWORD *)(v9 + 56);
      *(_OWORD *)(v10 + 32) = v14;
      *(_OWORD *)(v10 + 48) = v13;
      *(void *)(v10 + 64) = v12;
      long long v20 = v11[1];
      *(_OWORD *)uint64_t v10 = *v11;
      *(_OWORD *)(v10 + 16) = v20;
      *(unsigned char *)(v9 - 56) = v15;
      *(void *)(v9 - 48) = v16;
      *(_OWORD *)(v9 - 40) = v18;
      *(_OWORD *)(v9 - 16) = v19;
      ++v8;
      *(void *)(v9 - 24) = v17;
      if (v4 == v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C24596B4(char *__src, char *a2, unint64_t a3, char *a4)
{
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = a2 - __src;
  int64_t v8 = (a2 - __src) / 72;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = (uint64_t)(a3 - (void)a2) / 72;
  uint64_t v23 = __src;
  uint64_t v22 = a4;
  if (v8 >= v10)
  {
    if (v9 >= -71)
    {
      if (a4 != a2 || &a2[72 * v10] <= a4) {
        memmove(a4, a2, 72 * v10);
      }
      char v15 = &a4[72 * v10];
      uint64_t v21 = v15;
      uint64_t v23 = v5;
      if (v6 < v5 && v9 >= 72)
      {
        sub_1C2218914();
        uint64_t v16 = (char *)(a3 - 72);
        do
        {
          uint64_t v17 = v16 + 72;
          if (sub_1C2550190() == -1)
          {
            long long v18 = v5 - 72;
            if (v17 != v5 || v16 >= v5) {
              memmove(v16, v5 - 72, 0x48uLL);
            }
            uint64_t v23 = v5 - 72;
          }
          else
          {
            uint64_t v21 = v15 - 72;
            if (v17 < v15 || v16 >= v15 || v17 != v15) {
              memmove(v16, v15 - 72, 0x48uLL);
            }
            long long v18 = v5;
            v15 -= 72;
          }
          if (v18 <= v6) {
            break;
          }
          v16 -= 72;
          uint64_t v5 = v18;
        }
        while (v15 > a4);
      }
LABEL_40:
      sub_1C23F28A4((void **)&v23, &v22, &v21);
      return 1;
    }
  }
  else if (v7 >= -71)
  {
    unint64_t v11 = a4;
    if (a4 != __src || &__src[72 * v8] <= a4) {
      memmove(a4, __src, 72 * v8);
    }
    uint64_t v21 = &a4[72 * v8];
    if ((unint64_t)v5 < a3 && v7 >= 72)
    {
      sub_1C2218914();
      unint64_t v12 = (unint64_t)a4;
      while (1)
      {
        if (sub_1C2550190() == -1)
        {
          long long v14 = v5 + 72;
          long long v13 = v5;
          if (v6 == v5 && v6 < v14) {
            goto LABEL_18;
          }
        }
        else
        {
          unint64_t v11 = (char *)(v12 + 72);
          long long v13 = (const void *)v12;
          long long v14 = v5;
          if (v6 == (char *)v12)
          {
            v12 += 72;
            if (v6 < v11) {
              goto LABEL_18;
            }
          }
          else
          {
            v12 += 72;
          }
        }
        memmove(v6, v13, 0x48uLL);
LABEL_18:
        v6 += 72;
        if (v12 < (unint64_t)&a4[72 * v8])
        {
          uint64_t v5 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        uint64_t v22 = v11;
        uint64_t v23 = v6;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t _s15HealthRecordsUI19DisplayItemProviderC19supportedCategoriesShyAA0D8CategoryVGvgZ_0()
{
  id v0 = objc_msgSend(self, sel_allSupportedRecordCategories);
  if (!v0) {
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v1 = v0;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FFC0);
  unint64_t v2 = sub_1C254F710();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
LABEL_16:
    uint64_t v17 = sub_1C24919F0(v6);
    swift_bridgeObjectRelease();
    return v17;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C2274784(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    uint64_t v6 = v27;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1C87588E0](v5, v2);
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      sub_1C21AA50C(v7, (uint64_t)v21);
      char v8 = v21[0];
      uint64_t v9 = v22;
      long long v10 = v23;
      uint64_t v11 = v24;
      long long v12 = v25;
      long long v13 = v26;
      uint64_t v27 = v6;
      unint64_t v15 = *(void *)(v6 + 16);
      unint64_t v14 = *(void *)(v6 + 24);
      if (v15 >= v14 >> 1)
      {
        long long v19 = v25;
        long long v20 = v23;
        long long v18 = v26;
        sub_1C2274784(v14 > 1, v15 + 1, 1);
        long long v13 = v18;
        long long v12 = v19;
        long long v10 = v20;
        uint64_t v6 = v27;
      }
      *(void *)(v6 + 16) = v15 + 1;
      uint64_t v16 = v6 + 72 * v15;
      *(unsigned char *)(v16 + 32) = v8;
      ++v5;
      *(void *)(v16 + 40) = v9;
      *(_OWORD *)(v16 + 48) = v10;
      *(void *)(v16 + 64) = v11;
      *(_OWORD *)(v16 + 72) = v12;
      *(_OWORD *)(v16 + 88) = v13;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DisplayItemProvider()
{
  return self;
}

uint64_t method lookup function for DisplayItemProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DisplayItemProvider);
}

uint64_t sub_1C2459C1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2459DC0()
{
  uint64_t v1 = v0;
  sub_1C234829C(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v16 - v3;
  uint64_t v5 = sub_1C254E710();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v9);

  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v1, sel_setBackgroundView_, v10);

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v1, sel_setSelectedBackgroundView_, v11);

  id v12 = objc_msgSend(v1, sel_selectedBackgroundView);
  if (v12)
  {
    long long v13 = v12;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
    unint64_t v14 = (void *)sub_1C254FEE0();
    objc_msgSend(v13, sel_setBackgroundColor_, v14);
  }
  sub_1C254E700();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  MEMORY[0x1C8758250](v4);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C245A040()
{
  uint64_t v1 = sub_1C254E560();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI9ChartCell_item;
  swift_beginAccess();
  sub_1C2227014(v5, (uint64_t)v17);
  if (v17[3])
  {
    sub_1C22270A8();
    type metadata accessor for ChartItem();
    if (swift_dynamicCast())
    {
      swift_release();
      id v6 = objc_msgSend(v0, sel_superview);

      if (v6) {
        sub_1C245A664();
      }
      return;
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v17);
  }
  sub_1C254E510();
  id v7 = v0;
  char v8 = sub_1C254E550();
  os_log_type_t v9 = sub_1C254FA20();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v15 = v1;
    uint64_t v16 = v11;
    uint64_t v12 = v11;
    *(_DWORD *)id v10 = 136446210;
    sub_1C2227014(v5, (uint64_t)v17);
    sub_1C234829C(0, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    uint64_t v13 = sub_1C254F510();
    v17[0] = sub_1C21AD354(v13, v14, &v16);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v8, v9, "Incorrect view model for ChartCell: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v12, -1, -1);
    MEMORY[0x1C875A0B0](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_1C245A3B0()
{
  uint64_t v1 = sub_1C254E560();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI9ChartCell_item;
  swift_beginAccess();
  sub_1C2227014(v5, (uint64_t)v17);
  if (v17[3])
  {
    sub_1C22270A8();
    type metadata accessor for ChartItem();
    if (swift_dynamicCast()) {
      return v16;
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v17);
  }
  sub_1C254E510();
  id v7 = v0;
  char v8 = sub_1C254E550();
  os_log_type_t v9 = sub_1C254FA20();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v1;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v16 = v12;
    *(_DWORD *)uint64_t v11 = 136446210;
    sub_1C2227014(v5, (uint64_t)v17);
    sub_1C234829C(0, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    uint64_t v13 = sub_1C254F510();
    v17[0] = sub_1C21AD354(v13, v14, &v16);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v8, v9, "Incorrect view model for ChartCell: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v12, -1, -1);
    MEMORY[0x1C875A0B0](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return 0;
}

void sub_1C245A664()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C245A3B0();
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v0, sel_viewController);
    if (v4)
    {
      id v28 = v4;
      uint64_t v5 = *(void **)(v3 + 64);
      id v6 = objc_msgSend(v5, sel_view);
      if (v6)
      {
        id v29 = v6;
        objc_msgSend(v28, sel_addChildViewController_, v5);
        objc_msgSend(v29, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        id v7 = objc_msgSend(v1, sel_contentView);
        objc_msgSend(v7, sel_addSubview_, v29);

        char v8 = self;
        sub_1C21ACA3C();
        uint64_t v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_1C255DBA0;
        id v10 = objc_msgSend(v29, sel_leadingAnchor);
        id v11 = objc_msgSend(v1, sel_contentView);
        id v12 = objc_msgSend(v11, sel_leadingAnchor);

        id v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
        *(void *)(v9 + 32) = v13;
        id v14 = objc_msgSend(v29, sel_trailingAnchor);
        id v15 = objc_msgSend(v1, sel_contentView);
        id v16 = objc_msgSend(v15, sel_trailingAnchor);

        id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
        *(void *)(v9 + 40) = v17;
        id v18 = objc_msgSend(v29, sel_topAnchor);
        id v19 = objc_msgSend(v1, sel_contentView);
        id v20 = objc_msgSend(v19, sel_topAnchor);

        id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
        *(void *)(v9 + 48) = v21;
        id v22 = objc_msgSend(v29, sel_bottomAnchor);
        id v23 = objc_msgSend(v1, sel_contentView);
        id v24 = objc_msgSend(v23, sel_bottomAnchor);

        id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v24);
        *(void *)(v9 + 56) = v25;
        sub_1C254F730();
        sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
        long long v26 = (void *)sub_1C254F700();
        swift_bridgeObjectRelease();
        objc_msgSend(v8, sel_activateConstraints_, v26);

        objc_msgSend(v1, sel_invalidateIntrinsicContentSize);
        objc_msgSend(v1, sel_setNeedsLayout);
        swift_release();

        uint64_t v27 = v29;
      }
      else
      {
        swift_release();
        uint64_t v27 = v28;
      }
    }
    else
    {
      swift_release();
    }
  }
}

id sub_1C245AA5C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChartCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ChartCell()
{
  return self;
}

uint64_t sub_1C245AAC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI9ChartCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C245AB18(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI9ChartCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C245A040();
  return sub_1C2227100(a1);
}

void (*sub_1C245AB88(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C245ABE8;
}

void sub_1C245ABE8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C245A040();
  }
}

ValueMetadata *_s9YearRangeVMa()
{
  return &_s9YearRangeVN;
}

uint64_t _s13HealthKitDataVwxx(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13HealthKitDataVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v4 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s13HealthKitDataVwca(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  long long v7 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s13HealthKitDataVwta(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13HealthKitDataVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13HealthKitDataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13HealthKitDataVMa()
{
  return &_s13HealthKitDataVN;
}

uint64_t sub_1C245AE30(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C23F36D4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C245E5B8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1C245AE9C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C23F5310();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C245ED64(v6);
  return sub_1C2550470();
}

id sub_1C245AF18()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C245FFC0(0, &qword_1EA2E41A0, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v27 - v3;
  sub_1C245FFC0(0, &qword_1EA2E33C0, MEMORY[0x1E4F27CA0], v1);
  MEMORY[0x1F4188790](v5 - 8);
  long long v7 = (char *)&v27 - v6;
  uint64_t v8 = sub_1C254C6F0();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  id v15 = (char *)&v27 - v14;
  id v16 = 0;
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    uint64_t v17 = *(void *)(v0 + 24);
    uint64_t v29 = *(void *)(v0 + 16);
    uint64_t v30 = v17;
    uint64_t v31 = v13;
    uint64_t v32 = v12;
    uint64_t v18 = sub_1C254CCC0();
    id v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    v28(v7, 1, 1, v18);
    uint64_t v19 = sub_1C254CD20();
    id v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    v20(v4, 1, 1, v19);
    sub_1C254C6D0();
    v28(v7, 1, 1, v18);
    v20(v4, 1, 1, v19);
    sub_1C254C6D0();
    id v21 = self;
    id v22 = (void *)sub_1C254C660();
    id v23 = (void *)sub_1C254C660();
    id v16 = objc_msgSend(v21, sel_predicateForRecordsWithSortDateFromStartDateComponents_endDateComponents_, v22, v23);

    uint64_t v24 = v32;
    id v25 = *(void (**)(char *, uint64_t))(v31 + 8);
    v25(v11, v32);
    v25(v15, v24);
  }
  return v16;
}

uint64_t sub_1C245B348()
{
  sub_1C245FFC0(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v18 - v2;
  if (*(unsigned char *)(v0 + 32))
  {
    uint64_t v4 = *(void *)(v0 + 48);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v5 = *(void *)(v0 + 24);
    uint64_t v7 = sub_1C254CBD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
    sub_1C2269E20();
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C255CDA0;
    uint64_t v9 = sub_1C2391FCC(v6);
    uint64_t v11 = v10;
    uint64_t v12 = MEMORY[0x1E4FBB1A0];
    *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v13 = sub_1C220D950();
    *(void *)(v8 + 64) = v13;
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v11;
    uint64_t v14 = sub_1C2391FCC(v5);
    *(void *)(v8 + 96) = v12;
    *(void *)(v8 + 104) = v13;
    *(void *)(v8 + 72) = v14;
    *(void *)(v8 + 80) = v15;
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v16 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    uint64_t v4 = sub_1C254F4A0();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C2460024((uint64_t)v3, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
  }
  return v4;
}

uint64_t sub_1C245B5A8()
{
  if (qword_1EA2DD648 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EA2E0AB8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void *)(v0[9] + 16);
  if (v2 == *(void *)(v0[8] + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = v0[10];
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1C2269E20();
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v4 + 16) = xmmword_1C255CD90;
    uint64_t v6 = MEMORY[0x1E4FBB5C8];
    *(void *)(v4 + 56) = v5;
    *(void *)(v4 + 64) = v6;
    *(void *)(v4 + 32) = v2;
    uint64_t v3 = sub_1C254F440();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1C245B714()
{
  uint64_t v1 = v0[14];
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C25502A0();
    swift_bridgeObjectRelease();
    unint64_t v3 = v0[13];
    if (v3) {
      goto LABEL_3;
    }
LABEL_7:
    if (v2 == -1) {
      goto LABEL_5;
    }
    goto LABEL_8;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = v0[13];
  if (!v3) {
    goto LABEL_7;
  }
LABEL_3:
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v2 == v11) {
      goto LABEL_5;
    }
  }
  else if (v2 == *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    uint64_t v4 = v0[15];
    swift_bridgeObjectRetain();
    return v4;
  }
LABEL_8:
  if (qword_1EA2DD648 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EA2E0AB8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C2269E20();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255CD90;
  uint64_t v7 = v0[14];
  if ((v7 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C25502A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)(v7 + 16);
  }
  uint64_t v9 = MEMORY[0x1E4FBB5C8];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v6 + 64) = v9;
  *(void *)(v6 + 32) = v8;
  uint64_t v4 = sub_1C254F440();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C245B93C(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v99 = a2[2];
  uint64_t v100 = *a2;
  uint64_t v5 = a2[4];
  uint64_t v107 = a2[3];
  uint64_t v91 = a2[5];
  uint64_t v92 = a2[6];
  uint64_t v93 = a2[7];
  uint64_t v94 = (void *)a2[1];
  uint64_t v90 = (void *)a2[8];
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(_WORD *)(v3 + 32) = 1;
  *(void *)(v3 + 40) = 0;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C254C730();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();

  *(void *)(v3 + 48) = v7;
  *(void *)(v3 + 56) = v9;
  id v10 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C254C730();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();

  uint64_t v14 = MEMORY[0x1E4FBC870];
  *(void *)(v3 + 80) = v11;
  *(void *)(v3 + 88) = v13;
  *(void *)(v3 + 104) = 0;
  *(void *)(v3 + 112) = v14;
  id v15 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  unint64_t v89 = 0xE000000000000000;
  uint64_t v16 = sub_1C254C730();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();

  *(void *)(v3 + 120) = v16;
  *(void *)(v3 + 128) = v18;
  sub_1C22177F8(a3, v3 + OBJC_IVAR____TtC15HealthRecordsUI26PDFConfigurationDataSource_configuration);
  sub_1C2460278();
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(void *)(v3 + 96) = v19;
  uint64_t v95 = v3;
  if (a1)
  {
    sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C255CEB0;
    *(void *)(inited + 32) = a1;
    *(void *)&long long v121 = inited;
    sub_1C254F730();
    if ((unint64_t)v121 >> 62)
    {
      id v25 = a1;
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (v26) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v22 = a1;
      if (v21)
      {
LABEL_6:
        sub_1C2417308(v121);
        uint64_t v24 = v23;
LABEL_9:
        swift_bridgeObjectRelease();

        *(void *)(v95 + 112) = v24;
        uint64_t v3 = v95;
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    uint64_t v24 = MEMORY[0x1E4FBC870];
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v29 = v99;
  char v28 = v100;
  if (!qword_1F1D8E1B0)
  {
    uint64_t v32 = v107;
LABEL_39:
    *(void *)&long long v121 = v27;
    swift_bridgeObjectRetain();
    sub_1C245AE30((uint64_t *)&v121);
    swift_bridgeObjectRelease();
    uint64_t v80 = v121;
    *(void *)(v3 + 64) = v121;
    if (v94)
    {
      LOBYTE(v121) = v28;
      *((void *)&v121 + 1) = v94;
      *(void *)&long long v122 = v29;
      *((void *)&v122 + 1) = v32;
      *(void *)v123 = v5;
      *(void *)&v123[8] = v91;
      *(void *)&v123[16] = v92;
      *(void *)&v123[24] = v93;
      *(void *)&v123[32] = v90;
      swift_retain();
      if (sub_1C2267D1C(&v121, v80))
      {
        swift_release();
        sub_1C22259B4(0, (unint64_t *)&qword_1EBB70050);
        uint64_t v81 = swift_initStackObject();
        *(_OWORD *)(v81 + 16) = xmmword_1C255CD90;
        long long v82 = v121;
        *(_OWORD *)(v81 + 48) = v122;
        long long v83 = *(_OWORD *)&v123[16];
        *(_OWORD *)(v81 + 64) = *(_OWORD *)v123;
        *(_OWORD *)(v81 + 80) = v83;
        *(void *)(v81 + 96) = *(void *)&v123[32];
        *(_OWORD *)(v81 + 32) = v82;
        sub_1C24602DC(v100, v94, v29, v32, v5, v91, v92, v93, v90);
        sub_1C2417660(v81);
        uint64_t v85 = v84;
        swift_setDeallocating();
        swift_arrayDestroy();

        sub_1C2201B28(v100, v94, v29, v32, v5, v91, v92, v93, v90);
LABEL_45:
        sub_1C221810C(a3);
        uint64_t result = v95;
        *(void *)(v95 + 72) = v85;
        return result;
      }
      sub_1C2201B28(v100, v94, v29, v32, v5, v91, v92, v93, v90);
    }
    else
    {
      swift_retain();
    }
    uint64_t v85 = sub_1C24919F0(v80);
    swift_release();

    goto LABEL_45;
  }
  uint64_t v120 = MEMORY[0x1E4FBC860];
  uint64_t v97 = qword_1F1D8E1B0;
  sub_1C2274784(0, qword_1F1D8E1B0, 0);
  uint64_t v105 = v120;
  id v103 = self;
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  uint64_t v98 = a3;
  uint64_t v32 = v107;
  while (1)
  {
    uint64_t v104 = v30;
    uint64_t v33 = *((unsigned __int8 *)&unk_1F1D8E1A0 + v30 + 32);
    id v34 = objc_msgSend(v103, sel_supportedRecordCategoriesByCategoryType, v89);
    if (v34) {
      break;
    }
    long long v39 = (void *)MEMORY[0x1E4FBC868];
    if (!*(void *)(MEMORY[0x1E4FBC868] + 16)) {
      goto LABEL_32;
    }
LABEL_30:
    uint64_t v62 = sub_1C21A93C4(v33);
    if (v63)
    {
      uint64_t v64 = v39[7] + 72 * v62;
      char v65 = *(unsigned char *)v64;
      BOOL v66 = *(void **)(v64 + 8);
      uint64_t v67 = *(void *)(v64 + 16);
      uint64_t v68 = *(void *)(v64 + 24);
      uint64_t v69 = *(void *)(v64 + 32);
      long long v113 = *(_OWORD *)(v64 + 56);
      long long v116 = *(_OWORD *)(v64 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v70 = *((id *)&v113 + 1);
      id v71 = v66;
      swift_bridgeObjectRelease();
      long long v73 = v113;
      long long v72 = v116;
      char v74 = v65;
      LOBYTE(v121) = v65;
      *((void *)&v121 + 1) = v71;
      *(void *)&long long v122 = v67;
      *((void *)&v122 + 1) = v68;
      *(void *)v123 = v69;
      *(_OWORD *)&v123[8] = v116;
      *(_OWORD *)&v123[24] = v113;
      goto LABEL_34;
    }
LABEL_32:
    swift_bridgeObjectRelease();
    id v75 = objc_msgSend(v103, sel_unknownRecordCategory);
    if (!v75) {
      goto LABEL_49;
    }
    sub_1C21AA50C(v75, (uint64_t)&v121);
    char v74 = v121;
    id v71 = (id)*((void *)&v121 + 1);
    uint64_t v68 = *((void *)&v122 + 1);
    uint64_t v67 = v122;
    uint64_t v69 = *(void *)v123;
    long long v72 = *(_OWORD *)&v123[8];
    long long v73 = *(_OWORD *)&v123[24];
LABEL_34:
    uint64_t v76 = v105;
    unint64_t v78 = *(void *)(v105 + 16);
    unint64_t v77 = *(void *)(v105 + 24);
    if (v78 >= v77 >> 1)
    {
      char v111 = v74;
      long long v114 = v73;
      long long v117 = v72;
      sub_1C2274784(v77 > 1, v78 + 1, 1);
      long long v73 = v114;
      long long v72 = v117;
      char v74 = v111;
      uint64_t v76 = v105;
    }
    *(void *)(v76 + 16) = v78 + 1;
    uint64_t v105 = v76;
    uint64_t v79 = v76 + 72 * v78;
    *(unsigned char *)(v79 + 32) = v74;
    uint64_t v30 = v104 + 1;
    *(void *)(v79 + 40) = v71;
    *(void *)(v79 + 48) = v67;
    *(void *)(v79 + 56) = v68;
    *(void *)(v79 + 64) = v69;
    *(_OWORD *)(v79 + 72) = v72;
    *(_OWORD *)(v79 + 88) = v73;
    a3 = v98;
    uint64_t v29 = v99;
    char v28 = v100;
    if (v104 + 1 == v97)
    {
      uint64_t v3 = v95;
      uint64_t v27 = v105;
      goto LABEL_39;
    }
  }
  char v35 = v34;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FFC0);
  sub_1C21A818C((unint64_t *)&qword_1EBB6F990, (unint64_t *)&qword_1EBB70030);
  unint64_t v36 = sub_1C254F2D0();

  sub_1C21AA128(v36);
  uint64_t v38 = v37;
  swift_bridgeObjectRelease();
  uint64_t v102 = v31;
  unsigned int v101 = v33;
  if (!*(void *)(v38 + 16))
  {
    long long v39 = (void *)MEMORY[0x1E4FBC868];
    swift_bridgeObjectRetain();
LABEL_29:
    swift_bridgeObjectRelease_n();
    uint64_t v31 = v102;
    uint64_t v33 = v101;
    if (!v39[2]) {
      goto LABEL_32;
    }
    goto LABEL_30;
  }
  sub_1C21A95CC();
  long long v39 = (void *)sub_1C2550680();
  uint64_t v40 = *(void *)(v38 + 16);
  v119 = v39;
  swift_bridgeObjectRetain();
  uint64_t v109 = v40;
  if (!v40) {
    goto LABEL_29;
  }
  uint64_t v41 = 0;
  unint64_t v42 = 0;
  uint64_t v108 = v38;
  while (v42 < *(void *)(v38 + 16))
  {
    uint64_t v43 = v38 + v41;
    long long v112 = *(_OWORD *)(v38 + v41 + 80);
    long long v115 = *(_OWORD *)(v38 + v41 + 96);
    char v44 = *(unsigned char *)(v38 + v41 + 40);
    uint64_t v45 = *(unsigned __int8 *)(v43 + 32);
    uint64_t v47 = *(void *)(v43 + 64);
    uint64_t v46 = *(void *)(v43 + 72);
    char v49 = *(void **)(v43 + 48);
    uint64_t v48 = *(void *)(v43 + 56);
    id v110 = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v50 = *((id *)&v115 + 1);
    if (!v49)
    {
      uint64_t v32 = v107;
      goto LABEL_29;
    }
    uint64_t v106 = v50;
    unint64_t v51 = sub_1C21A93C4(v45);
    uint64_t v53 = v39[2];
    BOOL v54 = (v52 & 1) == 0;
    BOOL v55 = __OFADD__(v53, v54);
    uint64_t v56 = v53 + v54;
    if (v55) {
      goto LABEL_47;
    }
    char v57 = v52;
    if (v39[3] < v56)
    {
      sub_1C2279214(v56, 1);
      long long v39 = v119;
      unint64_t v51 = sub_1C21A93C4(v45);
      if ((v57 & 1) != (v58 & 1)) {
        goto LABEL_52;
      }
    }
    if (v57) {
      goto LABEL_50;
    }
    v39[(v51 >> 6) + 8] |= 1 << v51;
    *(unsigned char *)(v39[6] + v51) = v45;
    uint64_t v59 = v39[7] + 72 * v51;
    *(unsigned char *)uint64_t v59 = v44;
    *(void *)(v59 + 8) = v110;
    *(void *)(v59 + 16) = v48;
    *(void *)(v59 + 24) = v47;
    *(void *)(v59 + 32) = v46;
    *(_OWORD *)(v59 + 40) = v112;
    *(_OWORD *)(v59 + 56) = v115;
    uint64_t v60 = v39[2];
    BOOL v55 = __OFADD__(v60, 1);
    uint64_t v61 = v60 + 1;
    if (v55) {
      goto LABEL_48;
    }
    ++v42;
    v39[2] = v61;
    v41 += 80;
    uint64_t v38 = v108;
    uint64_t v32 = v107;
    if (v109 == v42) {
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  v87 = (void *)swift_allocError();
  swift_willThrow();
  id v118 = v87;
  id v88 = v87;
  sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
  if (swift_dynamicCast())
  {
    *(void *)&long long v121 = 0;
    *((void *)&v121 + 1) = 0xE000000000000000;
    sub_1C25503A0();
    sub_1C254F5A0();
    sub_1C25504F0();
    sub_1C254F5A0();
    sub_1C25505F0();
    __break(1u);
LABEL_52:
    sub_1C2550910();
    __break(1u);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_unexpectedError();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C245C420(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v10 = sub_1C254E560();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t result = sub_1C245C754();
    if (!a4) {
      return result;
    }
    return a4(result);
  }
  sub_1C254E510();
  swift_retain();
  id v15 = a2;
  swift_retain();
  id v16 = a2;
  uint64_t v17 = sub_1C254E550();
  int v18 = sub_1C254FA20();
  if (os_log_type_enabled(v17, (os_log_type_t)v18))
  {
    int v28 = v18;
    os_log_t v29 = v17;
    uint64_t v30 = a5;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v31 = a3;
    uint64_t v32 = v27;
    *(_DWORD *)uint64_t v19 = 136315394;
    type metadata accessor for PDFConfigurationDataSource();
    swift_retain();
    uint64_t v20 = sub_1C254F4F0();
    uint64_t v31 = sub_1C21AD354(v20, v21, &v32);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    if (a2)
    {
      swift_getErrorValue();
      uint64_t v22 = sub_1C2550940();
      unint64_t v24 = v23;
    }
    else
    {
      unint64_t v24 = 0xEB000000007D726FLL;
      uint64_t v22 = 0x727265206C696E7BLL;
    }
    uint64_t v31 = sub_1C21AD354(v22, v24, &v32);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    os_log_t v25 = v29;
    _os_log_impl(&dword_1C21A1000, v29, (os_log_type_t)v28, "%s failed to load all accounts: %s)", (uint8_t *)v19, 0x16u);
    uint64_t v26 = v27;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v26, -1, -1);
    MEMORY[0x1C875A0B0](v19, -1, -1);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (a4) {
      return a4(result);
    }
  }
  else
  {
    swift_release_n();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (a4) {
      return a4(result);
    }
  }
  return result;
}

uint64_t sub_1C245C754()
{
  uint64_t v1 = (os_unfair_lock_s *)v0[12];
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  swift_release();
  if (!v0[13])
  {
    unint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2492640(v2);
    swift_bridgeObjectRelease();
    uint64_t v4 = v0[14];
    if ((v4 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C25502A0();
      swift_bridgeObjectRelease();
      uint64_t v4 = v0[14];
      if (!v5) {
        goto LABEL_7;
      }
    }
    else if (!*(void *)(v4 + 16))
    {
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
    sub_1C245C9E8(v3, v4);
    char v7 = v6;
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_8:
      unint64_t v8 = sub_1C2290278(v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if ((v8 & 0x8000000000000000) != 0 || (uint64_t v9 = (void *)v8, (v8 & 0x4000000000000000) != 0))
      {
        uint64_t v9 = sub_1C2290904(v8);
        swift_release();
      }
      uint64_t v22 = v9;
      sub_1C245AE9C((uint64_t *)&v22);
      swift_release();
      v0[13] = v22;
      swift_bridgeObjectRelease();
      unint64_t v10 = v0[13];
      if (!v10) {
        goto LABEL_21;
      }
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v18 = sub_1C2550620();
        swift_bridgeObjectRelease();
        if (v18 == 1)
        {
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_1C2550620();
          swift_bridgeObjectRelease();
          if (v19) {
            goto LABEL_13;
          }
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v11 == 1)
        {
LABEL_13:
          if ((v10 & 0xC000000000000001) != 0)
          {
            id v12 = (id)MEMORY[0x1C87588E0](0, v10);
          }
          else
          {
            if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              uint64_t result = swift_release();
              __break(1u);
              return result;
            }
            id v12 = *(id *)(v10 + 32);
          }
          uint64_t v13 = v12;
          swift_bridgeObjectRelease();
          id v14 = objc_msgSend(v13, sel_title);
          uint64_t v15 = sub_1C254F470();
          uint64_t v17 = v16;

          v0[15] = v15;
          v0[16] = v17;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
LABEL_7:
    v0[14] = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_21:
  uint64_t v20 = (os_unfair_lock_s *)v0[12];
  swift_retain();
  os_unfair_lock_unlock(v20 + 4);
  return swift_release();
}

void sub_1C245C9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = sub_1C25502A0();
    unint64_t v6 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_6:
    if (*(void *)(a1 + 16) < v5) {
      return;
    }
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0) {
    goto LABEL_6;
  }
LABEL_3:
  if (sub_1C25502A0() < v5) {
    return;
  }
LABEL_7:
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1C2550250();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
    sub_1C21A818C(&qword_1EA2DF698, (unint64_t *)&qword_1EA2E1530);
    sub_1C254F940();
    uint64_t v2 = v37;
    uint64_t v33 = v38;
    uint64_t v7 = v39;
    uint64_t v8 = v40;
    unint64_t v9 = v41;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v33 = v2 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v9 = v12 & *(void *)(v2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
  int64_t v32 = (unint64_t)(v7 + 64) >> 6;
  uint64_t v35 = a1 + 56;
  while (1)
  {
    while (1)
    {
      unint64_t v14 = v9;
      uint64_t v15 = v8;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
      if (!sub_1C25502D0()) {
        goto LABEL_46;
      }
      swift_dynamicCast();
      uint64_t v17 = v36;
      uint64_t v34 = v14;
      if (v6) {
        goto LABEL_14;
      }
LABEL_36:
      unint64_t v22 = v6;
      uint64_t v23 = v2;
      if (!*(void *)(a1 + 16)) {
        goto LABEL_43;
      }
      uint64_t v24 = sub_1C254FF60();
      uint64_t v25 = -1 << *(unsigned char *)(a1 + 32);
      unint64_t v26 = v24 & ~v25;
      if (((*(void *)(v35 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
        goto LABEL_43;
      }
      id v27 = *(id *)(*(void *)(a1 + 48) + 8 * v26);
      char v28 = sub_1C254FF70();

      if ((v28 & 1) == 0)
      {
        uint64_t v29 = ~v25;
        while (1)
        {
          unint64_t v26 = (v26 + 1) & v29;
          if (((*(void *)(v35 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
            break;
          }
          id v30 = *(id *)(*(void *)(a1 + 48) + 8 * v26);
          char v31 = sub_1C254FF70();

          if (v31) {
            goto LABEL_42;
          }
        }
LABEL_43:

LABEL_44:
        sub_1C21ABD08();
        return;
      }
LABEL_42:

      uint64_t v2 = v23;
      unint64_t v6 = v22;
      unint64_t v9 = v34;
    }
    if (v9)
    {
      uint64_t v34 = (v9 - 1) & v9;
      unint64_t v16 = __clz(__rbit64(v9)) | (v8 << 6);
      goto LABEL_35;
    }
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      return;
    }
    if (v18 >= v32) {
      goto LABEL_46;
    }
    unint64_t v19 = *(void *)(v33 + 8 * v18);
    ++v8;
    if (!v19)
    {
      uint64_t v8 = v15 + 2;
      if (v15 + 2 >= v32) {
        goto LABEL_46;
      }
      unint64_t v19 = *(void *)(v33 + 8 * v8);
      if (!v19)
      {
        uint64_t v8 = v15 + 3;
        if (v15 + 3 >= v32) {
          goto LABEL_46;
        }
        unint64_t v19 = *(void *)(v33 + 8 * v8);
        if (!v19)
        {
          uint64_t v8 = v15 + 4;
          if (v15 + 4 >= v32) {
            goto LABEL_46;
          }
          unint64_t v19 = *(void *)(v33 + 8 * v8);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_34:
    uint64_t v34 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_35:
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v16);
    unint64_t v36 = v17;
    id v21 = v17;
    if (!v6) {
      goto LABEL_36;
    }
LABEL_14:
    char v13 = sub_1C25502E0();

    unint64_t v9 = v34;
    if ((v13 & 1) == 0) {
      goto LABEL_44;
    }
  }
  uint64_t v20 = v15 + 5;
  while (v32 != v20)
  {
    unint64_t v19 = *(void *)(v33 + 8 * v20++);
    if (v19)
    {
      uint64_t v8 = v20 - 1;
      goto LABEL_34;
    }
  }
LABEL_46:
  sub_1C21ABD08();
}

id sub_1C245CE20(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1C254CD60();
  if (v5 == 2)
  {
    uint64_t v13 = v2[14];
    if (v3[13]) {
      uint64_t v14 = v3[13];
    }
    else {
      uint64_t v14 = MEMORY[0x1E4FBC860];
    }
    swift_getObjectType();
    uint64_t v15 = swift_conformsToProtocol2();
    if (v15) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0;
    }
    if (v15) {
      uint64_t v17 = a2;
    }
    else {
      uint64_t v17 = 0;
    }
    if (v17) {
      id v18 = a2;
    }
    else {
      uint64_t v16 = 0;
    }
    uint64_t v25 = (objc_class *)type metadata accessor for AccountSelectionViewController();
    unint64_t v26 = (char *)objc_allocWithZone(v25);
    uint64_t v27 = OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_iconProvider;
    uint64_t v28 = qword_1EBB6D898;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v29 = v26;
    if (v28 != -1) {
      swift_once();
    }
    *(void *)&v26[v27] = qword_1EBB6EB60;
    id v30 = &v29[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize];
    *(void *)id v30 = 0;
    *((void *)v30 + 1) = 0;
    *((void *)v30 + 2) = 0;
    v30[24] = 1;
    *(void *)&v29[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_accountIcons] = 0;
    *(void *)&v29[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_delegate + 8] = 0;
    uint64_t v31 = swift_unknownObjectWeakInit();
    *(void *)&v29[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_allAccounts] = v14;
    *(void *)&v29[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_selectedAccounts] = v13;
    *(void *)(v31 + 8) = v16;
    swift_unknownObjectWeakAssign();
    swift_retain();

    v43.receiver = v29;
    v43.super_class = v25;
    id v32 = objc_msgSendSuper2(&v43, sel_initWithStyle_, 2);
    goto LABEL_39;
  }
  if (v5 == 1)
  {
    uint64_t v20 = v2[8];
    uint64_t v19 = v2[9];
    swift_getObjectType();
    uint64_t v21 = swift_conformsToProtocol2();
    if (v21) {
      uint64_t v22 = v21;
    }
    else {
      uint64_t v22 = 0;
    }
    if (v21) {
      uint64_t v23 = a2;
    }
    else {
      uint64_t v23 = 0;
    }
    if (v23) {
      id v24 = a2;
    }
    else {
      uint64_t v22 = 0;
    }
    uint64_t v33 = (objc_class *)type metadata accessor for CategorySelectionViewController();
    uint64_t v34 = (char *)objc_allocWithZone(v33);
    *(void *)&v34[OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_delegate + 8] = 0;
    uint64_t v35 = swift_unknownObjectWeakInit();
    *(void *)&v34[OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_allCategories] = v20;
    *(void *)&v34[OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_selectedCategories] = v19;
    *(void *)(v35 + 8) = v22;
    swift_unknownObjectWeakAssign();
    v42.receiver = v34;
    v42.super_class = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v32 = objc_msgSendSuper2(&v42, sel_initWithStyle_, 2);
LABEL_39:
    id v12 = v32;
LABEL_43:
    swift_unknownObjectRelease();
    return v12;
  }
  if (v5) {
    return 0;
  }
  uint64_t v6 = v2[5];
  if (!v6) {
    return 0;
  }
  char v7 = *((unsigned char *)v3 + 33);
  swift_getObjectType();
  uint64_t v8 = swift_conformsToProtocol2();
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v8) {
    uint64_t v10 = a2;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v10) {
    id v11 = a2;
  }
  else {
    uint64_t v9 = 0;
  }
  unint64_t v36 = (objc_class *)type metadata accessor for YearRangePickerViewController();
  uint64_t v37 = objc_allocWithZone(v36);
  uint64_t v38 = &v37[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_defaultCellIdentifier];
  void *v38 = 1819043139;
  v38[1] = 0xE400000000000000;
  *(void *)&v37[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_delegate + 8] = 0;
  uint64_t v39 = swift_unknownObjectWeakInit();
  *(void *)&v37[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_dataSource] = v6;
  v37[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_selectedRow] = v7;
  *(void *)(v39 + 8) = v9;
  swift_unknownObjectWeakAssign();
  v41.receiver = v37;
  v41.super_class = v36;
  swift_retain_n();
  id result = objc_msgSendSuper2(&v41, sel_initWithUsingInsetStyling_, 1);
  if (result)
  {
    id v12 = result;
    swift_release();
    goto LABEL_43;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C245D1A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s13ConfigurationVMa();
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C254CAD0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v67 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v64 = (char *)&v58 - v9;
  sub_1C245FFC0(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v68 = (char *)&v58 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v58 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v62 = (char *)&v58 - v19;
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C229048C(v20);
  swift_bridgeObjectRelease();
  unint64_t v69 = MEMORY[0x1E4FBC860];
  uint64_t v22 = v21[2];
  if (v22)
  {
    swift_retain();
    for (uint64_t i = 0; i != v22; ++i)
    {
      unint64_t v24 = swift_bridgeObjectRetain();
      sub_1C2272BEC(v24);
    }
    swift_release_n();
    unint64_t v25 = v69;
    if (!(v69 >> 62)) {
      goto LABEL_5;
    }
  }
  else
  {
    swift_release();
    unint64_t v25 = MEMORY[0x1E4FBC860];
    if (!(MEMORY[0x1E4FBC860] >> 62))
    {
LABEL_5:
      uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  uint64_t v26 = result;
LABEL_6:
  uint64_t v59 = v1;
  uint64_t v60 = v12;
  uint64_t v65 = v6;
  char v58 = v4;
  unint64_t v61 = v25;
  if (v26)
  {
    if (v26 < 1)
    {
      __break(1u);
      goto LABEL_36;
    }
    uint64_t v28 = (id *)(v25 + 32);
    BOOL v66 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    uint64_t v29 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    id v30 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
    uint64_t v31 = MEMORY[0x1E4FBC860];
    uint64_t v63 = v5;
    do
    {
      uint64_t v32 = (uint64_t)v17;
      id v33 = *v28;
      id v34 = objc_msgSend(v33, sel_meaningfulDate);
      if (v34)
      {
        uint64_t v35 = v34;
        unint64_t v36 = v68;
        sub_1C254CA80();

        uint64_t v37 = 0;
      }
      else
      {
        uint64_t v37 = 1;
        unint64_t v36 = v68;
      }
      (*v66)(v36, v37, 1, v5);
      uint64_t v38 = (uint64_t)v36;
      uint64_t v17 = (char *)v32;
      sub_1C22AE66C(v38, v32);

      if ((*v29)(v32, 1, v5) == 1)
      {
        sub_1C2460024(v32, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
      }
      else
      {
        uint64_t v39 = *v30;
        uint64_t v40 = v64;
        (*v30)(v64, v32, v5);
        v39(v67, (uint64_t)v40, v5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v31 = sub_1C226D864(0, *(void *)(v31 + 16) + 1, 1, v31);
        }
        unint64_t v42 = *(void *)(v31 + 16);
        unint64_t v41 = *(void *)(v31 + 24);
        if (v42 >= v41 >> 1) {
          uint64_t v31 = sub_1C226D864(v41 > 1, v42 + 1, 1, v31);
        }
        *(void *)(v31 + 16) = v42 + 1;
        unint64_t v43 = v31
            + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))
            + *(void *)(v65 + 72) * v42;
        uint64_t v5 = v63;
        v39((char *)v43, (uint64_t)v67, v63);
      }
      ++v28;
      --v26;
    }
    while (v26);
  }
  else
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease_n();
  char v44 = v62;
  sub_1C245D850(v31, v62);
  uint64_t v45 = v65;
  uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
  if (v46(v44, 1, v5) == 1)
  {
    swift_bridgeObjectRelease();
    return sub_1C2460024((uint64_t)v44, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  }
  uint64_t v47 = sub_1C245DC98();
  char v49 = v48;
  id v50 = *(void (**)(char *, uint64_t))(v45 + 8);
  v50(v44, v5);
  if (v49) {
    return swift_bridgeObjectRelease();
  }
  char v44 = v60;
  sub_1C245DF74(v31, v60);
  swift_bridgeObjectRelease();
  if (v46(v44, 1, v5) == 1) {
    return sub_1C2460024((uint64_t)v44, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  }
  int64_t v51 = sub_1C245DC98();
  char v53 = v52;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v50)(v44, v5);
  if ((v53 & 1) == 0)
  {
    BOOL v54 = v59;
    if (v47 == v51)
    {
      v54[6] = sub_1C2391FCC(v47);
      v54[7] = v55;
      swift_bridgeObjectRelease();
    }
    uint64_t v56 = (uint64_t)v58;
    sub_1C22177F8((uint64_t)v54 + OBJC_IVAR____TtC15HealthRecordsUI26PDFConfigurationDataSource_configuration, (uint64_t)v58);
    type metadata accessor for YearRangePickerDataSource();
    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_delegate + 8) = 0;
    uint64_t result = swift_unknownObjectWeakInit();
    if (v51 >= v47)
    {
      *(void *)(v57 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_pickerRange) = sub_1C22903AC(v47, v51);
      *(void *)(v57 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear) = v47;
      *(void *)(v57 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear) = v51;
      sub_1C22179D4(v56, v57 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_configuration);
      v54[5] = v57;
      return swift_release();
    }
LABEL_36:
    __break(1u);
  }
  return result;
}

uint64_t sub_1C245D850@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_1C245FFC0(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = sub_1C254CAD0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18)
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
    v20(v9, 1, 1, v10, v15);
    goto LABEL_5;
  }
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v37 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v11 + 16);
  uint64_t v38 = v11 + 16;
  v37(v9, a1 + v19, v10, v15);
  uint64_t v32 = a1;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v39)(v9, 0, 1, v10);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v36 = v11 + 48;
  if (v35(v9, 1, v10) == 1)
  {
    uint64_t v20 = v39;
LABEL_5:
    sub_1C2460024((uint64_t)v9, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v20)(a2, 1, 1, v10);
  }
  uint64_t v31 = a2;
  id v34 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v34(v17, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v22 = v18 - 1;
  if (v22)
  {
    uint64_t v24 = *(void *)(v11 + 72);
    unint64_t v25 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v33 = v24;
    unint64_t v26 = v32 + v24 + v19;
    uint64_t v27 = v34;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v37)(v6, v26, v10);
      ((void (*)(char *, void, uint64_t, uint64_t))v39)(v6, 0, 1, v10);
      if (v35(v6, 1, v10) == 1) {
        break;
      }
      v27(v13, v6, v10);
      sub_1C2399450();
      char v28 = sub_1C254F3B0();
      uint64_t v29 = *v25;
      if (v28)
      {
        v29(v17, v10);
        v27(v17, v13, v10);
      }
      else
      {
        v29(v13, v10);
      }
      v26 += v33;
      if (!--v22) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v39)(v6, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1C2460024((uint64_t)v6, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  uint64_t v23 = v31;
  v34(v31, v17, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v39)(v23, 0, 1, v10);
}

uint64_t sub_1C245DC98()
{
  uint64_t v15 = sub_1C254C6F0();
  uint64_t v0 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C254CCC0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_hk_gregorianCalendarWithUTCTimeZone);
  sub_1C254CC40();

  sub_1C245FFC0(0, &qword_1EA2DE7B0, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v8 = sub_1C254CCB0();
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255CD90;
  (*(void (**)(unint64_t, void, uint64_t))(v9 + 104))(v11 + v10, *MEMORY[0x1E4F27C20], v8);
  sub_1C2418274(v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C254CC20();
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_1C254C6A0();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v15);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v12;
}

uint64_t sub_1C245DF74@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_1C245FFC0(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - v8;
  uint64_t v10 = sub_1C254CAD0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v30 - v16;
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18)
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
    v20(v9, 1, 1, v10, v15);
    goto LABEL_5;
  }
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v37 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v11 + 16);
  uint64_t v38 = v11 + 16;
  v37(v9, a1 + v19, v10, v15);
  uint64_t v32 = a1;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v39)(v9, 0, 1, v10);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v36 = v11 + 48;
  if (v35(v9, 1, v10) == 1)
  {
    uint64_t v20 = v39;
LABEL_5:
    sub_1C2460024((uint64_t)v9, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v20)(a2, 1, 1, v10);
  }
  uint64_t v31 = a2;
  id v34 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v34(v17, v9, v10);
  swift_bridgeObjectRetain();
  uint64_t v22 = v18 - 1;
  if (v22)
  {
    uint64_t v24 = *(void *)(v11 + 72);
    unint64_t v25 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v33 = v24;
    unint64_t v26 = v32 + v24 + v19;
    uint64_t v27 = v34;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v37)(v6, v26, v10);
      ((void (*)(char *, void, uint64_t, uint64_t))v39)(v6, 0, 1, v10);
      if (v35(v6, 1, v10) == 1) {
        break;
      }
      v27(v13, v6, v10);
      sub_1C2399450();
      char v28 = sub_1C254F3B0();
      uint64_t v29 = *v25;
      if (v28)
      {
        v29(v17, v10);
        v27(v17, v13, v10);
      }
      else
      {
        v29(v13, v10);
      }
      v26 += v33;
      if (!--v22) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v39)(v6, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1C2460024((uint64_t)v6, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  uint64_t v23 = v31;
  v34(v31, v17, v10);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v39)(v23, 0, 1, v10);
}

uint64_t sub_1C245E3BC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C221810C(v0 + OBJC_IVAR____TtC15HealthRecordsUI26PDFConfigurationDataSource_configuration);
  return v0;
}

uint64_t sub_1C245E42C()
{
  sub_1C245E3BC();
  return swift_deallocClassInstance();
}

uint64_t sub_1C245E484()
{
  return type metadata accessor for PDFConfigurationDataSource();
}

uint64_t type metadata accessor for PDFConfigurationDataSource()
{
  uint64_t result = qword_1EA2E3A90;
  if (!qword_1EA2E3A90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C245E4D8()
{
  uint64_t result = _s13ConfigurationVMa();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C245E5B8(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C2550800();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_153;
    }
    if (v3) {
      return sub_1C245F630(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_161;
  }
  uint64_t v113 = result;
  id v110 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v120 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_119:
      unsigned int v101 = v11;
      uint64_t v112 = v8;
      if (v12 >= 2)
      {
        uint64_t v102 = *v110;
        do
        {
          unint64_t v103 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_148;
          }
          if (!v102) {
            goto LABEL_160;
          }
          uint64_t v104 = v101;
          uint64_t v105 = *(void *)&v101[16 * v103 + 32];
          uint64_t v106 = *(void *)&v101[16 * v12 + 24];
          sub_1C245F8C8((char *)(v102 + 72 * v105), (char *)(v102 + 72 * *(void *)&v101[16 * v12 + 16]), v102 + 72 * v106, v120);
          if (v1) {
            break;
          }
          if (v106 < v105) {
            goto LABEL_149;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v104 = sub_1C23F321C((uint64_t)v104);
          }
          if (v103 >= *((void *)v104 + 2)) {
            goto LABEL_150;
          }
          uint64_t v107 = &v104[16 * v103 + 32];
          *(void *)uint64_t v107 = v105;
          *((void *)v107 + 1) = v106;
          unint64_t v108 = *((void *)v104 + 2);
          if (v12 > v108) {
            goto LABEL_151;
          }
          memmove(&v104[16 * v12 + 16], &v104[16 * v12 + 32], 16 * (v108 - v12));
          unsigned int v101 = v104;
          *((void *)v104 + 2) = v108 - 1;
          unint64_t v12 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v112 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v112 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C254F780();
    *(void *)(v7 + 16) = v6;
    uint64_t v112 = v7;
    uint64_t v120 = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v111 = *a1 + 40;
  uint64_t v109 = *a1 + 56;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v114 = v3;
  uint64_t v121 = v10;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_47;
    }
    uint64_t v14 = v10 + 72 * v9;
    uint64_t v15 = *(void *)(v14 + 32);
    uint64_t v16 = *(void *)(v14 + 40);
    uint64_t v17 = v10 + 72 * v13;
    if (v15 == *(void *)(v17 + 32) && v16 == *(void *)(v17 + 40))
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3)
      {
        uint64_t v9 = v13 + 2;
        goto LABEL_69;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1C2550870();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_37;
      }
    }
    uint64_t v21 = (void *)(v111 + 72 * v20);
    do
    {
      uint64_t v23 = v10 + 72 * v9;
      if (*(v21 - 1) == *(void *)(v23 + 32) && *v21 == *(void *)(v23 + 40))
      {
        if (v19) {
          goto LABEL_38;
        }
      }
      else if ((v19 ^ sub_1C2550870()))
      {
        goto LABEL_37;
      }
      uint64_t v22 = v20 + 1;
      v21 += 9;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_37:
    uint64_t v9 = v20;
    if ((v19 & 1) == 0) {
      goto LABEL_47;
    }
LABEL_38:
    if (v20 < v13) {
      goto LABEL_156;
    }
    if (v13 < v20) {
      break;
    }
    uint64_t v9 = v20;
LABEL_47:
    if (v9 < v3) {
      goto LABEL_48;
    }
LABEL_69:
    if (v9 < v13) {
      goto LABEL_147;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C23F277C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v52 = *((void *)v11 + 2);
    unint64_t v51 = *((void *)v11 + 3);
    unint64_t v12 = v52 + 1;
    if (v52 >= v51 >> 1) {
      uint64_t v11 = sub_1C23F277C((char *)(v51 > 1), v52 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    char v53 = v11 + 32;
    BOOL v54 = &v11[16 * v52 + 32];
    *(void *)BOOL v54 = v13;
    *((void *)v54 + 1) = v9;
    if (v52)
    {
      while (1)
      {
        unint64_t v55 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v60 = &v53[16 * v12];
          uint64_t v61 = *((void *)v60 - 8);
          uint64_t v62 = *((void *)v60 - 7);
          BOOL v66 = __OFSUB__(v62, v61);
          uint64_t v63 = v62 - v61;
          if (v66) {
            goto LABEL_136;
          }
          uint64_t v65 = *((void *)v60 - 6);
          uint64_t v64 = *((void *)v60 - 5);
          BOOL v66 = __OFSUB__(v64, v65);
          uint64_t v58 = v64 - v65;
          char v59 = v66;
          if (v66) {
            goto LABEL_137;
          }
          unint64_t v67 = v12 - 2;
          uint64_t v68 = &v53[16 * v12 - 32];
          uint64_t v70 = *(void *)v68;
          uint64_t v69 = *((void *)v68 + 1);
          BOOL v66 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          if (v66) {
            goto LABEL_139;
          }
          BOOL v66 = __OFADD__(v58, v71);
          uint64_t v72 = v58 + v71;
          if (v66) {
            goto LABEL_142;
          }
          if (v72 >= v63)
          {
            uint64_t v90 = &v53[16 * v55];
            uint64_t v92 = *(void *)v90;
            uint64_t v91 = *((void *)v90 + 1);
            BOOL v66 = __OFSUB__(v91, v92);
            uint64_t v93 = v91 - v92;
            if (v66) {
              goto LABEL_146;
            }
            BOOL v83 = v58 < v93;
            goto LABEL_106;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v84 = *((void *)v11 + 4);
            uint64_t v85 = *((void *)v11 + 5);
            BOOL v66 = __OFSUB__(v85, v84);
            uint64_t v77 = v85 - v84;
            char v78 = v66;
            goto LABEL_100;
          }
          uint64_t v57 = *((void *)v11 + 4);
          uint64_t v56 = *((void *)v11 + 5);
          BOOL v66 = __OFSUB__(v56, v57);
          uint64_t v58 = v56 - v57;
          char v59 = v66;
        }
        if (v59) {
          goto LABEL_138;
        }
        unint64_t v67 = v12 - 2;
        long long v73 = &v53[16 * v12 - 32];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v76 = __OFSUB__(v74, v75);
        uint64_t v77 = v74 - v75;
        char v78 = v76;
        if (v76) {
          goto LABEL_141;
        }
        uint64_t v79 = &v53[16 * v55];
        uint64_t v81 = *(void *)v79;
        uint64_t v80 = *((void *)v79 + 1);
        BOOL v66 = __OFSUB__(v80, v81);
        uint64_t v82 = v80 - v81;
        if (v66) {
          goto LABEL_144;
        }
        if (__OFADD__(v77, v82)) {
          goto LABEL_145;
        }
        if (v77 + v82 >= v58)
        {
          BOOL v83 = v58 < v82;
LABEL_106:
          if (v83) {
            unint64_t v55 = v67;
          }
          goto LABEL_108;
        }
LABEL_100:
        if (v78) {
          goto LABEL_140;
        }
        uint64_t v86 = &v53[16 * v55];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v66 = __OFSUB__(v87, v88);
        uint64_t v89 = v87 - v88;
        if (v66) {
          goto LABEL_143;
        }
        if (v89 < v77) {
          goto LABEL_15;
        }
LABEL_108:
        unint64_t v94 = v55 - 1;
        if (v55 - 1 >= v12)
        {
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
          goto LABEL_155;
        }
        if (!v10) {
          goto LABEL_158;
        }
        uint64_t v95 = v10;
        v96 = &v53[16 * v94];
        uint64_t v97 = *(void *)v96;
        uint64_t v98 = &v53[16 * v55];
        uint64_t v99 = *((void *)v98 + 1);
        sub_1C245F8C8((char *)(v95 + 72 * *(void *)v96), (char *)(v95 + 72 * *(void *)v98), v95 + 72 * v99, v120);
        if (v1) {
          goto LABEL_116;
        }
        if (v99 < v97) {
          goto LABEL_133;
        }
        if (v55 > *((void *)v11 + 2)) {
          goto LABEL_134;
        }
        *(void *)v96 = v97;
        *(void *)&v53[16 * v94 + 8] = v99;
        unint64_t v100 = *((void *)v11 + 2);
        if (v55 >= v100) {
          goto LABEL_135;
        }
        unint64_t v12 = v100 - 1;
        memmove(&v53[16 * v55], v98 + 16, 16 * (v100 - 1 - v55));
        *((void *)v11 + 2) = v100 - 1;
        uint64_t v10 = v121;
        if (v100 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v114;
    if (v9 >= v114)
    {
      uint64_t v8 = v112;
      goto LABEL_119;
    }
  }
  uint64_t v25 = 72 * v20;
  uint64_t v26 = 72 * v13;
  uint64_t v27 = v20;
  uint64_t v28 = v13;
  do
  {
    if (v28 != --v27)
    {
      if (!v10) {
        goto LABEL_159;
      }
      uint64_t v29 = v10 + v26;
      uint64_t v30 = v10 + v25;
      uint64_t v31 = (const void *)(v10 + v25 - 72);
      char v118 = *(unsigned char *)(v10 + v26);
      uint64_t v32 = *(void *)(v10 + v26 + 8);
      uint64_t v119 = *(void *)(v29 + 32);
      long long v117 = *(_OWORD *)(v29 + 40);
      long long v115 = *(_OWORD *)(v29 + 16);
      long long v116 = *(_OWORD *)(v29 + 56);
      memmove((void *)v29, v31, 0x48uLL);
      *(unsigned char *)(v30 - 72) = v118;
      *(void *)(v30 - 64) = v32;
      uint64_t v10 = v121;
      *(_OWORD *)(v30 - 56) = v115;
      *(void *)(v30 - 40) = v119;
      *(_OWORD *)(v30 - 32) = v117;
      *(_OWORD *)(v30 - 16) = v116;
    }
    ++v28;
    v25 -= 72;
    v26 += 72;
  }
  while (v28 < v27);
  uint64_t v9 = v20;
  uint64_t v3 = v114;
  if (v20 >= v114) {
    goto LABEL_69;
  }
LABEL_48:
  if (__OFSUB__(v9, v13)) {
    goto LABEL_152;
  }
  if (v9 - v13 >= v113) {
    goto LABEL_69;
  }
  if (__OFADD__(v13, v113)) {
    goto LABEL_154;
  }
  if (v13 + v113 >= v3) {
    uint64_t v33 = v3;
  }
  else {
    uint64_t v33 = v13 + v113;
  }
  if (v33 >= v13)
  {
    if (v9 != v33)
    {
      uint64_t v34 = v109 + 72 * v9;
      do
      {
        uint64_t v35 = v10 + 72 * v9;
        uint64_t v36 = *(void *)(v35 + 32);
        uint64_t v37 = *(void *)(v35 + 40);
        uint64_t v38 = v13;
        uint64_t v39 = v34;
        do
        {
          BOOL v40 = v36 == *(void *)(v39 - 96) && v37 == *(void *)(v39 - 88);
          if (v40 || (sub_1C2550870() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_157;
          }
          uint64_t v41 = v39 - 56;
          unint64_t v42 = (_OWORD *)(v39 - 128);
          uint64_t v43 = *(void *)(v39 - 64);
          long long v45 = *(_OWORD *)(v39 - 96);
          long long v44 = *(_OWORD *)(v39 - 80);
          *(_OWORD *)(v39 - 72) = *(_OWORD *)v39;
          v39 -= 72;
          char v46 = *(unsigned char *)(v39 + 16);
          uint64_t v47 = *(void *)(v39 + 24);
          uint64_t v36 = *(void *)(v39 + 48);
          long long v48 = *(_OWORD *)(v39 + 32);
          long long v49 = *(_OWORD *)(v39 + 56);
          *(_OWORD *)(v41 + 32) = v45;
          *(_OWORD *)(v41 + 48) = v44;
          *(void *)(v41 + 64) = v43;
          long long v50 = v42[1];
          *(_OWORD *)uint64_t v41 = *v42;
          *(_OWORD *)(v41 + 16) = v50;
          *(unsigned char *)(v39 - 56) = v46;
          *(void *)(v39 - 48) = v47;
          *(_OWORD *)(v39 - 40) = v48;
          *(_OWORD *)(v39 - 16) = v49;
          uint64_t v37 = v49;
          ++v38;
          *(void *)(v39 - 24) = v36;
        }
        while (v9 != v38);
        ++v9;
        v34 += 72;
      }
      while (v9 != v33);
      uint64_t v9 = v33;
    }
    goto LABEL_69;
  }
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  uint64_t result = sub_1C25505E0();
  __break(1u);
  return result;
}

uint64_t sub_1C245ED64(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C2550800();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_150;
    }
    if (v3) {
      return sub_1C245F744(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_158;
  }
  uint64_t v120 = result;
  long long v117 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v133 = MEMORY[0x1E4FBC860];
    v128 = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_116:
      if (v11 >= 2)
      {
        uint64_t v111 = *v117;
        do
        {
          unint64_t v112 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_145;
          }
          if (!v111) {
            goto LABEL_157;
          }
          uint64_t v113 = *(void *)&v8[16 * v112 + 32];
          uint64_t v114 = *(void *)&v8[16 * v11 + 24];
          sub_1C245FBA8((void **)(v111 + 8 * v113), (id *)(v111 + 8 * *(void *)&v8[16 * v11 + 16]), (id *)(v111 + 8 * v114), v128);
          if (v1) {
            break;
          }
          if (v114 < v113) {
            goto LABEL_146;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1C23F321C((uint64_t)v8);
          }
          if (v112 >= *((void *)v8 + 2)) {
            goto LABEL_147;
          }
          long long v115 = &v8[16 * v112 + 32];
          *(void *)long long v115 = v113;
          *((void *)v115 + 1) = v114;
          unint64_t v116 = *((void *)v8 + 2);
          if (v11 > v116) {
            goto LABEL_148;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v116 - v11));
          *((void *)v8 + 2) = v116 - 1;
          unint64_t v11 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(void *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C254F730();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
    uint64_t v7 = sub_1C254F780();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v128 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v133 = v7;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v118 = *a1 + 16;
  uint64_t v119 = *a1 - 8;
  uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v125 = v3;
  uint64_t v129 = *a1;
  while (2)
  {
    uint64_t v12 = v9 + 1;
    uint64_t v124 = v9;
    if (v9 + 1 >= v3) {
      goto LABEL_45;
    }
    uint64_t v121 = v8;
    uint64_t v13 = *(void **)(v10 + 8 * v9);
    id v14 = *(id *)(v10 + 8 * v12);
    id v15 = v13;
    id v16 = objc_msgSend(v14, sel_title);
    uint64_t v17 = sub_1C254F470();
    uint64_t v19 = v18;

    id v20 = objc_msgSend(v15, sel_title);
    uint64_t v21 = sub_1C254F470();
    uint64_t v23 = v22;

    if (v17 == v21 && v19 == v23) {
      int v126 = 0;
    }
    else {
      int v126 = sub_1C2550870();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v12 = v9 + 2;
    uint64_t v3 = v125;
    if (v9 + 2 >= v125) {
      goto LABEL_36;
    }
    uint64_t v25 = (id *)(v118 + 8 * v9);
    while (1)
    {
      uint64_t v130 = v12;
      uint64_t v27 = *(v25 - 1);
      id v28 = *v25;
      id v29 = v27;
      id v30 = objc_msgSend(v28, sel_title);
      uint64_t v31 = sub_1C254F470();
      uint64_t v33 = v32;

      id v34 = objc_msgSend(v29, sel_title);
      uint64_t v35 = sub_1C254F470();
      uint64_t v37 = v36;

      if (v31 == v35 && v33 == v37)
      {

        swift_bridgeObjectRelease_n();
        if (v126)
        {
          uint64_t v8 = v121;
          uint64_t v9 = v124;
          uint64_t v3 = v125;
          uint64_t v10 = v129;
          uint64_t v12 = v130;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      int v26 = sub_1C2550870();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v126 ^ v26)) {
        break;
      }
LABEL_25:
      uint64_t v12 = v130 + 1;
      ++v25;
      uint64_t v3 = v125;
      if (v125 == v130 + 1)
      {
        uint64_t v12 = v125;
        goto LABEL_35;
      }
    }
    uint64_t v3 = v125;
    uint64_t v12 = v130;
LABEL_35:
    uint64_t v9 = v124;
LABEL_36:
    uint64_t v8 = v121;
    uint64_t v10 = v129;
    if (v126)
    {
LABEL_37:
      if (v12 < v9) {
        goto LABEL_151;
      }
      if (v9 < v12)
      {
        uint64_t v39 = (uint64_t *)(v119 + 8 * v12);
        uint64_t v40 = v12;
        uint64_t v41 = v9;
        unint64_t v42 = (uint64_t *)(v10 + 8 * v9);
        do
        {
          if (v41 != --v40)
          {
            if (!v10) {
              goto LABEL_156;
            }
            uint64_t v43 = *v42;
            *unint64_t v42 = *v39;
            *uint64_t v39 = v43;
          }
          ++v41;
          --v39;
          ++v42;
        }
        while (v41 < v40);
      }
    }
LABEL_45:
    if (v12 >= v3) {
      goto LABEL_68;
    }
    if (__OFSUB__(v12, v9)) {
      goto LABEL_149;
    }
    if (v12 - v9 >= v120)
    {
LABEL_68:
      if (v12 < v9) {
        goto LABEL_144;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1C23F277C(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v63 = *((void *)v8 + 2);
      unint64_t v62 = *((void *)v8 + 3);
      unint64_t v11 = v63 + 1;
      if (v63 >= v62 >> 1) {
        uint64_t v8 = sub_1C23F277C((char *)(v62 > 1), v63 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v11;
      uint64_t v64 = v8 + 32;
      uint64_t v65 = &v8[16 * v63 + 32];
      *(void *)uint64_t v65 = v9;
      *((void *)v65 + 1) = v12;
      uint64_t v132 = v12;
      if (!v63)
      {
        unint64_t v11 = 1;
LABEL_14:
        uint64_t v3 = v125;
        uint64_t v9 = v132;
        if (v132 >= v125) {
          goto LABEL_116;
        }
        continue;
      }
      while (1)
      {
        unint64_t v66 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v71 = &v64[16 * v11];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_133;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_134;
          }
          unint64_t v78 = v11 - 2;
          uint64_t v79 = &v64[16 * v11 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_136;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_139;
          }
          if (v83 >= v74)
          {
            unsigned int v101 = &v64[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_143;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_105;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v95 = *((void *)v8 + 4);
            uint64_t v96 = *((void *)v8 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_99;
          }
          uint64_t v68 = *((void *)v8 + 4);
          uint64_t v67 = *((void *)v8 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_135;
        }
        unint64_t v78 = v11 - 2;
        uint64_t v84 = &v64[16 * v11 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_138;
        }
        uint64_t v90 = &v64[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_141;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_142;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_105:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v89) {
          goto LABEL_137;
        }
        uint64_t v97 = &v64[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_140;
        }
        if (v100 < v88) {
          goto LABEL_14;
        }
LABEL_107:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v11)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!v10) {
          goto LABEL_155;
        }
        uint64_t v106 = &v64[16 * v105];
        uint64_t v107 = *(void *)v106;
        unint64_t v108 = &v64[16 * v66];
        uint64_t v109 = *((void *)v108 + 1);
        sub_1C245FBA8((void **)(v10 + 8 * *(void *)v106), (id *)(v10 + 8 * *(void *)v108), (id *)(v10 + 8 * v109), v128);
        if (v1) {
          goto LABEL_127;
        }
        if (v109 < v107) {
          goto LABEL_130;
        }
        if (v66 > *((void *)v8 + 2)) {
          goto LABEL_131;
        }
        *(void *)uint64_t v106 = v107;
        *(void *)&v64[16 * v105 + 8] = v109;
        unint64_t v110 = *((void *)v8 + 2);
        if (v66 >= v110) {
          goto LABEL_132;
        }
        unint64_t v11 = v110 - 1;
        memmove(&v64[16 * v66], v108 + 16, 16 * (v110 - 1 - v66));
        *((void *)v8 + 2) = v110 - 1;
        if (v110 <= 2) {
          goto LABEL_14;
        }
      }
    }
    break;
  }
  if (__OFADD__(v9, v120)) {
    goto LABEL_152;
  }
  if (v9 + v120 >= v3) {
    uint64_t v44 = v3;
  }
  else {
    uint64_t v44 = v9 + v120;
  }
  if (v44 >= v9)
  {
    if (v12 != v44)
    {
      long long v122 = v8;
      uint64_t v123 = v44;
      uint64_t v45 = v119 + 8 * v12;
      do
      {
        uint64_t v47 = *(void **)(v10 + 8 * v12);
        uint64_t v127 = v45;
        uint64_t v131 = v12;
        while (1)
        {
          long long v48 = *(void **)v45;
          id v49 = v47;
          id v50 = v48;
          id v51 = objc_msgSend(v49, sel_title);
          uint64_t v52 = sub_1C254F470();
          uint64_t v54 = v53;

          id v55 = objc_msgSend(v50, sel_title);
          uint64_t v56 = sub_1C254F470();
          uint64_t v58 = v57;

          if (v52 == v56 && v54 == v58)
          {

            swift_bridgeObjectRelease_n();
            uint64_t v10 = v129;
            uint64_t v46 = v131;
            goto LABEL_56;
          }
          char v60 = sub_1C2550870();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v10 = v129;
          if ((v60 & 1) == 0) {
            break;
          }
          if (!v129) {
            goto LABEL_154;
          }
          uint64_t v61 = *(void **)v45;
          uint64_t v47 = *(void **)(v45 + 8);
          *(void *)uint64_t v45 = v47;
          *(void *)(v45 + 8) = v61;
          v45 -= 8;
          ++v9;
          uint64_t v46 = v131;
          if (v131 == v9) {
            goto LABEL_56;
          }
        }
        uint64_t v46 = v131;
LABEL_56:
        uint64_t v12 = v46 + 1;
        uint64_t v45 = v127 + 8;
        uint64_t v9 = v124;
      }
      while (v12 != v123);
      uint64_t v12 = v123;
      uint64_t v8 = v122;
    }
    goto LABEL_68;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  uint64_t result = sub_1C25505E0();
  __break(1u);
  return result;
}

uint64_t sub_1C245F630(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 72 * a3 + 56;
LABEL_5:
    uint64_t v9 = v7 + 72 * v4;
    uint64_t result = *(void *)(v9 + 32);
    uint64_t v10 = *(void *)(v9 + 40);
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    while (1)
    {
      BOOL v13 = result == *(void *)(v12 - 96) && v10 == *(void *)(v12 - 88);
      if (v13 || (uint64_t result = sub_1C2550870(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 72;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v14 = v12 - 56;
      id v15 = (_OWORD *)(v12 - 128);
      uint64_t v16 = *(void *)(v12 - 64);
      long long v18 = *(_OWORD *)(v12 - 96);
      long long v17 = *(_OWORD *)(v12 - 80);
      *(_OWORD *)(v12 - 72) = *(_OWORD *)v12;
      v12 -= 72;
      char v19 = *(unsigned char *)(v12 + 16);
      uint64_t v20 = *(void *)(v12 + 24);
      uint64_t result = *(void *)(v12 + 48);
      long long v21 = *(_OWORD *)(v12 + 32);
      long long v22 = *(_OWORD *)(v12 + 56);
      *(_OWORD *)(v14 + 32) = v18;
      *(_OWORD *)(v14 + 48) = v17;
      *(void *)(v14 + 64) = v16;
      long long v23 = v15[1];
      *(_OWORD *)uint64_t v14 = *v15;
      *(_OWORD *)(v14 + 16) = v23;
      *(unsigned char *)(v12 - 56) = v19;
      *(void *)(v12 - 48) = v20;
      *(_OWORD *)(v12 - 40) = v21;
      *(_OWORD *)(v12 - 16) = v22;
      uint64_t v10 = v22;
      ++v11;
      *(void *)(v12 - 24) = result;
      if (v4 == v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C245F744(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v23 = result;
  if (a3 != a2)
  {
    uint64_t v25 = *a4;
    uint64_t v4 = *a4 + 8 * a3 - 8;
LABEL_6:
    uint64_t v6 = *(void **)(v25 + 8 * a3);
    uint64_t v7 = v23;
    uint64_t v24 = v4;
    uint64_t v26 = a3;
    while (1)
    {
      uint64_t v8 = *(void **)v4;
      id v9 = v6;
      id v10 = v8;
      id v11 = objc_msgSend(v9, sel_title);
      uint64_t v12 = sub_1C254F470();
      uint64_t v14 = v13;

      id v15 = objc_msgSend(v10, sel_title);
      uint64_t v16 = sub_1C254F470();
      uint64_t v18 = v17;

      if (v12 == v16 && v14 == v18)
      {

        uint64_t result = swift_bridgeObjectRelease_n();
        uint64_t v5 = v26;
LABEL_5:
        a3 = v5 + 1;
        uint64_t v4 = v24 + 8;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v20 = sub_1C2550870();

      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = v26;
      if ((v20 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v25) {
        break;
      }
      long long v21 = *(void **)v4;
      uint64_t v6 = *(void **)(v4 + 8);
      *(void *)uint64_t v4 = v6;
      *(void *)(v4 + 8) = v21;
      v4 -= 8;
      if (v26 == ++v7) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C245F8C8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 72;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 72;
  uint64_t v25 = __src;
  uint64_t v24 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -71)
    {
      if (__dst != a2 || &a2[72 * v11] <= __dst) {
        memmove(__dst, a2, 72 * v11);
      }
      uint64_t v17 = &v4[72 * v11];
      uint64_t v23 = v17;
      uint64_t v25 = v6;
      if (v7 < v6 && v10 >= 72)
      {
        uint64_t v18 = (char *)(a3 - 72);
        do
        {
          char v19 = v18 + 72;
          BOOL v20 = *((void *)v17 - 5) == *((void *)v6 - 5) && *((void *)v17 - 4) == *((void *)v6 - 4);
          if (v20 || (sub_1C2550870() & 1) == 0)
          {
            uint64_t v23 = v17 - 72;
            if (v19 < v17 || v18 >= v17 || v19 != v17) {
              memmove(v18, v17 - 72, 0x48uLL);
            }
            long long v21 = v6;
            v17 -= 72;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            long long v21 = v6 - 72;
            if (v19 != v6 || v18 >= v6) {
              memmove(v18, v6 - 72, 0x48uLL);
            }
            uint64_t v25 = v6 - 72;
            if (v21 <= v7) {
              break;
            }
          }
          v18 -= 72;
          uint64_t v6 = v21;
        }
        while (v17 > v4);
      }
LABEL_48:
      sub_1C23F28A4((void **)&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -71)
  {
    if (__dst != __src || &__src[72 * v9] <= __dst) {
      memmove(__dst, __src, 72 * v9);
    }
    uint64_t v12 = &v4[72 * v9];
    uint64_t v23 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 72)
    {
      uint64_t v13 = v4;
      while (1)
      {
        BOOL v14 = *((void *)v6 + 4) == *((void *)v13 + 4) && *((void *)v6 + 5) == *((void *)v13 + 5);
        if (v14 || (sub_1C2550870() & 1) == 0)
        {
          uint64_t v4 = v13 + 72;
          uint64_t v16 = v13;
          id v15 = v6;
          if (v7 == v13)
          {
            v13 += 72;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v13 += 72;
          }
        }
        else
        {
          id v15 = v6 + 72;
          uint64_t v16 = v6;
          if (v7 == v6 && v7 < v15) {
            goto LABEL_22;
          }
        }
        memmove(v7, v16, 0x48uLL);
LABEL_22:
        v7 += 72;
        if (v13 < v12)
        {
          uint64_t v6 = v15;
          if ((unint64_t)v15 < a3) {
            continue;
          }
        }
        uint64_t v24 = v4;
        uint64_t v25 = v7;
        goto LABEL_48;
      }
    }
    goto LABEL_48;
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C245FBA8(void **__src, id *a2, id *a3, void **__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = (char *)a3 - (char *)a2;
  uint64_t v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v12 = (char *)a3 - (char *)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v61 = __src;
  char v60 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_53;
    }
    if (__dst != a2 || &a2[v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    id v51 = v4;
    uint64_t v31 = &v4[v13];
    char v59 = v31;
    uint64_t v61 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_52:
      sub_1C23F2978(&v61, &v60, &v59);
      return 1;
    }
    uint64_t v32 = v6;
    uint64_t v56 = v7;
    while (1)
    {
      uint64_t v52 = v31;
      uint64_t v54 = v6;
      uint64_t v58 = v5;
      id v34 = *--v31;
      uint64_t v33 = v34;
      uint64_t v35 = *--v32;
      id v36 = v33;
      id v37 = v35;
      id v38 = objc_msgSend(v36, sel_title);
      uint64_t v39 = sub_1C254F470();
      uint64_t v41 = v40;

      id v42 = objc_msgSend(v37, sel_title);
      uint64_t v43 = sub_1C254F470();
      uint64_t v45 = v44;

      if (v39 == v43 && v41 == v45) {
        break;
      }
      char v47 = sub_1C2550870();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v48 = v58;
      uint64_t v5 = v58 - 1;
      if ((v47 & 1) == 0) {
        goto LABEL_46;
      }
      unint64_t v49 = (unint64_t)v56;
      uint64_t v31 = v52;
      if (v58 != v54 || v5 >= v54) {
        *uint64_t v5 = *v32;
      }
      uint64_t v61 = v32;
LABEL_50:
      if ((unint64_t)v32 > v49)
      {
        uint64_t v6 = v32;
        if (v31 > v51) {
          continue;
        }
      }
      goto LABEL_52;
    }

    swift_bridgeObjectRelease_n();
    long long v48 = v58;
    uint64_t v5 = v58 - 1;
LABEL_46:
    uint64_t v32 = v54;
    unint64_t v49 = (unint64_t)v56;
    char v59 = v31;
    if (v48 < v52 || v5 >= v52 || v48 != v52) {
      *uint64_t v5 = *v31;
    }
    goto LABEL_50;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v53 = &v4[v10];
    char v59 = v53;
    if (v6 < v5 && v8 >= 8)
    {
      uint64_t v57 = v5;
      while (1)
      {
        id v55 = v7;
        BOOL v14 = v6;
        id v15 = *v4;
        id v16 = *v6;
        id v17 = v15;
        id v18 = objc_msgSend(v16, sel_title);
        uint64_t v19 = sub_1C254F470();
        uint64_t v21 = v20;

        id v22 = objc_msgSend(v17, sel_title);
        uint64_t v23 = sub_1C254F470();
        uint64_t v25 = v24;

        if (v19 == v23 && v21 == v25) {
          break;
        }
        char v27 = sub_1C2550870();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0) {
          goto LABEL_23;
        }
        id v28 = v14 + 1;
        id v29 = v55;
        id v30 = v57;
        if (v55 < v14 || v55 >= v28 || v55 != v14) {
          *id v55 = *v14;
        }
LABEL_26:
        uint64_t v7 = v29 + 1;
        if (v4 < v53)
        {
          uint64_t v6 = v28;
          if (v28 < v30) {
            continue;
          }
        }
        uint64_t v61 = v7;
        goto LABEL_52;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      id v29 = v55;
      id v30 = v57;
      if (v55 != v4) {
        *id v55 = *v4;
      }
      char v60 = ++v4;
      id v28 = v14;
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_53:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

void sub_1C245FFC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2460024(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C245FFC0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2460094()
{
  uint64_t v0 = sub_1C254CD60();
  if (v0 == 2)
  {
    if (qword_1EBB6EF40 == -1) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  if (v0 == 1)
  {
    if (qword_1EBB6EF40 == -1) {
      goto LABEL_9;
    }
LABEL_12:
    swift_once();
    goto LABEL_9;
  }
  if (v0) {
    return 0;
  }
  if (qword_1EBB6EF40 != -1) {
    goto LABEL_12;
  }
LABEL_9:
  id v1 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v2;
}

void sub_1C2460278()
{
  if (!qword_1EA2E3AA0)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C2550430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3AA0);
    }
  }
}

void sub_1C24602DC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v9 = a9;
    id v10 = a2;
  }
}

uint64_t sub_1C246035C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void sub_1C24603B0()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3AA8 = v1;
  unk_1EA2E3AB0 = v3;
}

void sub_1C2460488()
{
  id v0 = self;
  uint64_t v1 = (void *)sub_1C254F430();
  id v2 = objc_msgSend(v0, sel_modelSpecificLocalizedStringKeyForKey_, v1);

  if (v2)
  {
    sub_1C254F470();

    if (qword_1EBB6D9B0 != -1) {
      swift_once();
    }
    id v3 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C254C730();
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    qword_1EA2E3AB8 = v4;
    unk_1EA2E3AC0 = v6;
  }
  else
  {
    __break(1u);
  }
}

void sub_1C24605D0()
{
  qword_1EA2E3AC8 = 0x403E000000000000;
}

void sub_1C24605E0()
{
  qword_1EA2E3AD0 = 0x405A800000000000;
}

id sub_1C24605F4()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___doneButton;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___doneButton);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___doneButton);
  }
  else
  {
    id v4 = sub_1C2460658(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2460658(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_boldButton);
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v4 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setTitle_forState_, v4, 0, 0xE000000000000000);

  objc_msgSend(v2, sel_addTarget_action_forControlEvents_, a1, sel_doneButtonTapped_, 64);
  return v2;
}

id sub_1C24607AC()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___spinner;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___spinner);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___spinner);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
    id v5 = objc_msgSend(self, sel_systemWhiteColor);
    objc_msgSend(v4, sel_setColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_startAnimating);
    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C2460888(void *a1, void *a2, uint64_t a3)
{
  v3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_readyToDismiss] = 0;
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_cancellable] = 0;
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___doneButton] = 0;
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController____lazy_storage___spinner] = 0;
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_onboardingSession] = a1;
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account] = a2;
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_selectedItems] = a3;
  uint64_t v5 = qword_1EA2DD820;
  id v6 = a1;
  id v7 = a2;
  if (v5 != -1) {
    swift_once();
  }
  unint64_t v8 = (void *)sub_1C254F430();
  if (qword_1EA2DD828 != -1) {
    swift_once();
  }
  sub_1C24678F8(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CD90;
  id v10 = objc_msgSend(v7, sel_title);
  uint64_t v11 = sub_1C254F470();
  uint64_t v13 = v12;

  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 64) = sub_1C220D950();
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = v13;
  sub_1C254F4B0();
  BOOL v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingSharingHealthDataViewController();
  id v15 = objc_msgSendSuper2(&v17, sel_initWithTitle_detailText_icon_contentLayout_, v8, v14, 0, 3);

  return v15;
}

void sub_1C2460B80()
{
  id v0 = sub_1C24605F4();
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6FA60);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C255D0E0;
  *(void *)(v1 + 32) = sub_1C254F470();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = 0xD000000000000010;
  *(void *)(v1 + 56) = 0x80000001C25754F0;
  *(void *)(v1 + 64) = 1701736260;
  *(void *)(v1 + 72) = 0xE400000000000000;
  id v3 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v0, sel_setAccessibilityIdentifier_, v4);
}

void sub_1C2460C88()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v61 - v7;
  if (qword_1EBB6EFD0 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EBB70020;
  id v10 = (void *)sub_1C254F430();
  id v11 = objc_msgSend(self, sel_imageNamed_inBundle_, v10, v9);

  if (!v11)
  {
    sub_1C254E510();
    char v47 = sub_1C254E550();
    os_log_type_t v48 = sub_1C254FA40();
    if (os_log_type_enabled(v47, v48))
    {
      unint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v63 = v50;
      uint64_t v64 = ObjectType;
      *(_DWORD *)unint64_t v49 = 136315138;
      swift_getMetatypeMetadata();
      uint64_t v62 = v2;
      uint64_t v51 = sub_1C254F4F0();
      uint64_t v64 = sub_1C21AD354(v51, v52, &v63);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v47, v48, "[%s]: couldn't find image 'HealthLink_Onboarding_SharingInProgressWithSpinnerPlaceholder'", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v50, -1, -1);
      MEMORY[0x1C875A0B0](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v62);
      return;
    }

    char v59 = *(void (**)(char *, uint64_t))(v3 + 8);
    char v60 = v5;
LABEL_18:
    v59(v60, v2);
    return;
  }
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v11);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v13 = sub_1C24607AC();
  objc_msgSend(v12, sel_addSubview_, v13);

  id v14 = objc_msgSend(v0, sel_headerView);
  id v15 = objc_msgSend(v14, sel_customIconContainerView);

  if (!v15)
  {
    sub_1C254E510();
    uint64_t v53 = sub_1C254E550();
    os_log_type_t v54 = sub_1C254FA40();
    if (os_log_type_enabled(v53, v54))
    {
      id v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      uint64_t v62 = v2;
      uint64_t v63 = v56;
      *(_DWORD *)id v55 = 136315138;
      id v61 = v55 + 4;
      uint64_t v64 = ObjectType;
      swift_getMetatypeMetadata();
      uint64_t v57 = sub_1C254F4F0();
      uint64_t v64 = sub_1C21AD354(v57, v58, &v63);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v53, v54, "[%s]: there is no customIconContainerView", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v56, -1, -1);
      MEMORY[0x1C875A0B0](v55, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v62);
      return;
    }

    char v59 = *(void (**)(char *, uint64_t))(v3 + 8);
    char v60 = v8;
    goto LABEL_18;
  }
  objc_msgSend(v15, sel_addSubview_, v12);
  id v61 = self;
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C2565090;
  id v17 = sub_1C24607AC();
  id v18 = objc_msgSend(v17, sel_centerXAnchor);

  id v19 = objc_msgSend(v12, sel_leadingAnchor);
  if (qword_1EA2DD838 != -1) {
    swift_once();
  }
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, *(double *)&qword_1EA2E3AD0);

  *(void *)(v16 + 32) = v20;
  id v21 = sub_1C24607AC();
  id v22 = objc_msgSend(v21, sel_centerYAnchor);

  id v23 = objc_msgSend(v12, sel_topAnchor);
  id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, 60.5);

  *(void *)(v16 + 40) = v24;
  id v25 = sub_1C24607AC();
  id v26 = objc_msgSend(v25, sel_heightAnchor);

  if (qword_1EA2DD830 != -1) {
    swift_once();
  }
  id v27 = objc_msgSend(v26, sel_constraintEqualToConstant_, *(double *)&qword_1EA2E3AC8);

  *(void *)(v16 + 48) = v27;
  id v28 = sub_1C24607AC();
  id v29 = objc_msgSend(v28, sel_widthAnchor);

  id v30 = objc_msgSend(v29, sel_constraintEqualToConstant_, *(double *)&qword_1EA2E3AC8);
  *(void *)(v16 + 56) = v30;
  id v31 = objc_msgSend(v12, sel_centerYAnchor);
  id v32 = objc_msgSend(v15, sel_centerYAnchor);
  id v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);

  *(void *)(v16 + 64) = v33;
  id v34 = objc_msgSend(v12, sel_centerXAnchor);
  id v35 = objc_msgSend(v15, sel_centerXAnchor);
  id v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v35);

  *(void *)(v16 + 72) = v36;
  id v37 = objc_msgSend(v12, sel_heightAnchor);
  id v38 = objc_msgSend(v15, sel_heightAnchor);
  id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

  *(void *)(v16 + 80) = v39;
  id v40 = objc_msgSend(v12, sel_widthAnchor);
  id v41 = objc_msgSend(v15, sel_heightAnchor);
  objc_msgSend(v11, sel_size);
  double v43 = v42;
  objc_msgSend(v11, sel_size);
  id v45 = objc_msgSend(v40, sel_constraintEqualToAnchor_multiplier_, v41, v43 / v44);

  *(void *)(v16 + 88) = v45;
  uint64_t v64 = v16;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  uint64_t v62 = sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v61, sel_activateConstraints_, v62);

  uint64_t v46 = (void *)v62;
}

uint64_t sub_1C2461580()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB6EFD0 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EBB70020;
  uint64_t v7 = (void *)sub_1C254F430();
  id v8 = objc_msgSend(self, sel_imageNamed_inBundle_, v7, v6);

  if (v8)
  {
    if (qword_1EBB6D9B0 != -1) {
      swift_once();
    }
    id v9 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C254C730();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();

    id v13 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C24678F8(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C255CD90;
    id v15 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account], sel_title);
    uint64_t v16 = sub_1C254F470();
    uint64_t v18 = v17;

    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 64) = sub_1C220D950();
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 40) = v18;
    uint64_t v19 = sub_1C254F4B0();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    sub_1C2461FFC(v8, v10, v12, v19, v21, v0);

    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C254E510();
    id v23 = sub_1C254E550();
    os_log_type_t v24 = sub_1C254FA20();
    if (os_log_type_enabled(v23, v24))
    {
      id v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v29 = v26;
      uint64_t v30 = ObjectType;
      *(_DWORD *)id v25 = 136315138;
      swift_getMetatypeMetadata();
      uint64_t v27 = sub_1C254F4F0();
      uint64_t v30 = sub_1C21AD354(v27, v28, &v29);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v23, v24, "[%s] Could not load image HealthLink_Onboarding_SharingCompleted", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v26, -1, -1);
      MEMORY[0x1C875A0B0](v25, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_1C2461A28(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1C254E560();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB6EFD0 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EBB70020;
  uint64_t v10 = (void *)sub_1C254F430();
  id v11 = objc_msgSend(self, sel_imageNamed_inBundle_, v10, v9);

  if (v11)
  {
    if (qword_1EBB6D9B0 != -1) {
      swift_once();
    }
    uint64_t v46 = v11;
    uint64_t v42 = a1;
    id v12 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1C254C730();
    uint64_t v45 = v13;
    swift_bridgeObjectRelease();

    uint64_t v14 = self;
    id v15 = (void *)sub_1C254F430();
    id v16 = objc_msgSend(v14, sel_modelSpecificLocalizedStringKeyForKey_, v15);

    if (v16)
    {
      sub_1C254F470();

      id v17 = (id)qword_1EBB6D998;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_1C24678F8(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1C255CDA0;
      uint64_t v19 = OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account;
      id v20 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account], sel_title);
      uint64_t v21 = sub_1C254F470();
      uint64_t v23 = v22;

      uint64_t v24 = MEMORY[0x1E4FBB1A0];
      *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v25 = sub_1C220D950();
      *(void *)(v18 + 64) = v25;
      *(void *)(v18 + 32) = v21;
      *(void *)(v18 + 40) = v23;
      id v43 = v2;
      id v26 = objc_msgSend(*(id *)&v2[v19], sel_title);
      uint64_t v27 = sub_1C254F470();
      uint64_t v29 = v28;

      *(void *)(v18 + 96) = v24;
      *(void *)(v18 + 104) = v25;
      *(void *)(v18 + 72) = v27;
      *(void *)(v18 + 80) = v29;
      uint64_t v30 = sub_1C254F4B0();
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      if (objc_msgSend(self, sel_isAppleInternalInstall))
      {
        uint64_t v47 = v30;
        uint64_t v48 = v32;
        swift_bridgeObjectRetain();
        sub_1C254F5A0();
        swift_bridgeObjectRelease();
        uint64_t v33 = v47;
        uint64_t v34 = v48;
        swift_getErrorValue();
        sub_1C2550940();
        uint64_t v47 = v33;
        uint64_t v48 = v34;
        swift_bridgeObjectRetain();
        sub_1C254F5A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v30 = v47;
        uint64_t v32 = v48;
      }
      id v35 = v46;
      sub_1C2461FFC(v46, v44, v45, v30, v32, v43);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1C254E510();
    id v36 = sub_1C254E550();
    os_log_type_t v37 = sub_1C254FA20();
    if (os_log_type_enabled(v36, v37))
    {
      id v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v49 = v39;
      *(_DWORD *)id v38 = 136315138;
      uint64_t v47 = ObjectType;
      swift_getMetatypeMetadata();
      uint64_t v40 = sub_1C254F4F0();
      uint64_t v47 = sub_1C21AD354(v40, v41, &v49);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v36, v37, "[%s] Could not load image HealthLink_Onboarding_Error", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v39, -1, -1);
      MEMORY[0x1C875A0B0](v38, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_1C2461FFC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, id a6)
{
  id v6 = a6;
  id v8 = objc_msgSend(a6, sel_headerView);
  id v9 = objc_msgSend(v8, sel_customIconContainerView);

  if (!v9)
  {
LABEL_14:
    sub_1C25503A0();
    sub_1C254F5A0();
    id v43 = objc_msgSend(v6, sel_headerView);
    id v44 = objc_msgSend(v43, sel_description);
    sub_1C254F470();

    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C25505F0();
    __break(1u);
    return;
  }
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, a1);
  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v10, sel_setAlpha_, 0.0);
  objc_msgSend(v9, sel_addSubview_, v10);
  id v11 = objc_msgSend(v10, sel_centerXAnchor);
  id v12 = objc_msgSend(v9, sel_centerXAnchor);
  id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  objc_msgSend(v13, sel_setActive_, 1);
  id v14 = objc_msgSend(v10, sel_centerYAnchor);
  id v15 = objc_msgSend(v9, sel_centerYAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  objc_msgSend(v16, sel_setActive_, 1);
  id v17 = objc_msgSend(v10, sel_heightAnchor);
  id v18 = objc_msgSend(v9, sel_heightAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  objc_msgSend(v19, sel_setActive_, 1);
  id v20 = objc_msgSend(v10, sel_widthAnchor);
  id v21 = objc_msgSend(v9, sel_heightAnchor);
  objc_msgSend(a1, sel_size);
  double v23 = v22;
  objc_msgSend(a1, sel_size);
  id v25 = objc_msgSend(v20, sel_constraintEqualToAnchor_multiplier_, v21, v23 / v24);

  objc_msgSend(v25, sel_setActive_, 1);
  id v26 = (void *)swift_allocObject();
  v26[2] = v10;
  v26[3] = v6;
  v26[4] = a2;
  v26[5] = a3;
  v26[6] = a4;
  v26[7] = a5;
  v26[8] = nullsub_1;
  v26[9] = 0;
  id v27 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v6;
  id v28 = objc_msgSend(v9, sel_subviews);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
  unint64_t v29 = sub_1C254F710();

  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v39) {
      goto LABEL_4;
    }
  }
  else if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_4:
    if ((v29 & 0xC000000000000001) != 0)
    {
      id v30 = (id)MEMORY[0x1C87588E0](0, v29);
      goto LABEL_7;
    }
    if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v30 = *(id *)(v29 + 32);
LABEL_7:
      uint64_t v31 = v30;
      swift_bridgeObjectRelease();
      uint64_t v32 = self;
      uint64_t v33 = (void *)swift_allocObject();
      v33[2] = v31;
      v33[3] = sub_1C24679B8;
      v33[4] = v26;
      os_log_type_t v54 = sub_1C2467A20;
      id v55 = v33;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v51 = 1107296256;
      unint64_t v52 = sub_1C224E544;
      uint64_t v53 = &block_descriptor_116;
      uint64_t v34 = _Block_copy(&aBlock);
      id v35 = v31;
      swift_retain();
      swift_release();
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v35;
      os_log_type_t v54 = sub_1C2340244;
      id v55 = (void *)v36;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v51 = 1107296256;
      unint64_t v52 = sub_1C246035C;
      uint64_t v53 = &block_descriptor_122;
      os_log_type_t v37 = _Block_copy(&aBlock);
      id v38 = v35;
      swift_release();
      objc_msgSend(v32, sel_animateWithDuration_animations_completion_, v34, v37, 0.3);

      swift_release();
      _Block_release(v37);
      _Block_release(v34);

      return;
    }
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_setAlpha_, 1.0);
  id v40 = objc_msgSend(v6, sel_headerView);
  unint64_t v41 = (void *)sub_1C254F430();
  objc_msgSend(v40, sel_setTitle_, v41);

  id v42 = objc_msgSend(v6, (SEL)&selRef_fetchClinicalOptInDataCollectionFilePathsWithCompletion_);
  id v49 = (id)sub_1C254F430();
  objc_msgSend(v42, sel_setDetailText_, v49);

  swift_release();
}

uint64_t sub_1C2462740(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  objc_msgSend(a1, sel_setAlpha_, 1.0);
  id v9 = objc_msgSend(a2, sel_headerView);
  id v10 = (void *)sub_1C254F430();
  objc_msgSend(v9, sel_setTitle_, v10);

  id v11 = objc_msgSend(a2, sel_headerView);
  id v12 = (void *)sub_1C254F430();
  objc_msgSend(v11, sel_setDetailText_, v12);

  return a7();
}

uint64_t sub_1C246283C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  sub_1C2466EE0(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v52 - v3;
  sub_1C24670C8();
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2467188(0);
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v58 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24671F0(0, &qword_1EA2E3B78, sub_1C2467188, (void (*)(void))sub_1C24672DC);
  uint64_t v62 = *(void *)(v10 - 8);
  uint64_t v63 = v10;
  MEMORY[0x1F4188790](v10);
  id v61 = (char *)&v52 - v11;
  sub_1C2467310();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C254F230();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  id v20 = (uint64_t *)((char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *id v20 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FBCBF0], v17);
  char v21 = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 8))(v20, v17);
  if (v21)
  {
    sub_1C2460C88();
    id v23 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v23, sel_setRightBarButtonItem_, 0);

    double v24 = (unsigned __int8 *)&v1[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_readyToDismiss];
    v1[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_readyToDismiss] = 0;
    id v25 = sub_1C24605F4();
    objc_msgSend(v25, sel_setEnabled_, *v24);

    objc_msgSend(v1, sel_setModalInPresentation_, (*v24 & 1) == 0);
    id v26 = *(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account];
    id v27 = (void *)sub_1C2463EA4(v26);

    id v65 = v27;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v1;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_1C2467464;
    *(void *)(v29 + 24) = v28;
    id v30 = v1;
    uint64_t v54 = v14;
    unint64_t v52 = v16;
    uint64_t v31 = v30;
    sub_1C254E9D0();
    uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C2466D7C(0, &qword_1EA2E3B58, MEMORY[0x1E4F1AAE0]);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
    uint64_t v53 = v13;
    sub_1C2466E14(&qword_1EA2E3B60, &qword_1EA2E3B58, v32);
    sub_1C254EC60();
    swift_release();
    swift_release();
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v31;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = sub_1C24674A0;
    *(void *)(v34 + 24) = v33;
    id v35 = v31;
    sub_1C254E9D0();
    sub_1C24671BC();
    uint64_t v37 = v57;
    uint64_t v36 = v58;
    sub_1C254EC60();
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v37);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v35;
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = sub_1C24674A8;
    *(void *)(v39 + 24) = v38;
    id v40 = v35;
    sub_1C254E9D0();
    sub_1C24672DC();
    uint64_t v42 = v60;
    unint64_t v41 = v61;
    sub_1C254EC60();
    swift_release();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v36, v42);
    id v65 = (id)sub_1C254FC70();
    uint64_t v43 = sub_1C254FC20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v4, 1, 1, v43);
    sub_1C24673DC();
    sub_1C22611AC();
    id v44 = v52;
    uint64_t v45 = v63;
    sub_1C254EC70();
    sub_1C2258214((uint64_t)v4);

    (*(void (**)(char *, uint64_t))(v62 + 8))(v41, v45);
    uint64_t v46 = swift_allocObject();
    uint64_t v47 = ObjectType;
    *(void *)(v46 + 16) = v40;
    *(void *)(v46 + 24) = v47;
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v40;
    *(void *)(v48 + 24) = v47;
    sub_1C24674F8(&qword_1EA2E3B98, (void (*)(uint64_t))sub_1C2467310);
    id v49 = v40;
    uint64_t v50 = v53;
    uint64_t v51 = sub_1C254EC10();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v50);
    *(void *)&v49[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_cancellable] = v51;
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C246310C(void *a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1C2466CC8();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = ObjectType;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C2466D7C(0, &qword_1EA2E3B28, MEMORY[0x1E4F1AC28]);
  sub_1C2466E14(&qword_1EA2E3B30, &qword_1EA2E3B28, v11);
  id v12 = a1;
  id v13 = a2;
  sub_1C254EB10();
  sub_1C24674F8(&qword_1EA2E3B40, (void (*)(uint64_t))sub_1C2466CC8);
  uint64_t v14 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

uint64_t sub_1C24632E4(void *a1, void *a2)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1C2466CC8();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a1;
  v10[4] = ObjectType;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C2466D7C(0, &qword_1EA2E3B28, MEMORY[0x1E4F1AC28]);
  sub_1C2466E14(&qword_1EA2E3B30, &qword_1EA2E3B28, v11);
  id v12 = a2;
  id v13 = a1;
  sub_1C254EB10();
  sub_1C24674F8(&qword_1EA2E3B40, (void (*)(uint64_t))sub_1C2466CC8);
  uint64_t v14 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

uint64_t sub_1C24634BC(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1C2466CC8();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = ObjectType;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C2466D7C(0, &qword_1EA2E3B28, MEMORY[0x1E4F1AC28]);
  sub_1C2466E14(&qword_1EA2E3B30, &qword_1EA2E3B28, v9);
  id v10 = a1;
  sub_1C254EB10();
  sub_1C24674F8(&qword_1EA2E3B40, (void (*)(uint64_t))sub_1C2466CC8);
  uint64_t v11 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

void sub_1C2463680(void **a1, unsigned char *a2)
{
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = &a2[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_readyToDismiss];
  a2[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_readyToDismiss] = 1;
  id v10 = sub_1C24605F4();
  objc_msgSend(v10, sel_setEnabled_, *v9);

  objc_msgSend(a2, sel_setModalInPresentation_, (*v9 & 1) == 0);
  if (v8)
  {
    id v11 = v8;
    sub_1C254E510();
    id v12 = v8;
    id v13 = v8;
    uint64_t v14 = sub_1C254E550();
    os_log_type_t v15 = sub_1C254FA20();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v26 = v24;
      *(_DWORD *)uint64_t v16 = 136446466;
      uint64_t v17 = sub_1C2550AA0();
      uint64_t v25 = sub_1C21AD354(v17, v18, &v26);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2082;
      uint64_t v25 = (uint64_t)v8;
      id v19 = v8;
      sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
      uint64_t v20 = sub_1C254F510();
      uint64_t v25 = sub_1C21AD354(v20, v21, &v26);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v14, v15, "[%{public}s]: Error during sharing initiation: %{public}s", (uint8_t *)v16, 0x16u);
      uint64_t v22 = v24;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v22, -1, -1);
      MEMORY[0x1C875A0B0](v16, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1C2461A28((uint64_t)v8);
  }
}

uint64_t sub_1C2463970(void **a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v44 = a3;
  uint64_t v5 = sub_1C254CB40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254E560();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = *a1;
  sub_1C254E4F0();
  id v13 = v12;
  uint64_t v14 = sub_1C254E550();
  os_log_type_t v15 = sub_1C254FA40();
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v45 = v5;
    uint64_t v18 = v17;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v48 = v43;
    *(_DWORD *)uint64_t v18 = 136315394;
    int v41 = v16;
    uint64_t v19 = sub_1C2550AA0();
    uint64_t v44 = v8;
    uint64_t v47 = sub_1C21AD354(v19, v20, &v48);
    uint64_t v42 = v9;
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v40[1] = v18 + 14;
    id v21 = objc_msgSend(v13, sel_identifier);
    uint64_t v22 = v46;
    sub_1C254CB20();

    sub_1C24674F8((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v23 = sub_1C2550810();
    unint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v22, v45);
    uint64_t v47 = sub_1C21AD354(v23, v25, &v48);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v14, (os_log_type_t)v41, "[%s] Successfully started sharing for account %s)", (uint8_t *)v18, 0x16u);
    uint64_t v26 = v43;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v26, -1, -1);
    uint64_t v27 = v18;
    uint64_t v5 = v45;
    MEMORY[0x1C875A0B0](v27, -1, -1);

    uint64_t v28 = &selRef_addSubview_;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v44);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v28 = &selRef_addSubview_;
  }
  id v29 = objc_msgSend(*(id *)(*(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_onboardingSession]+ OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_ingestionStore);
  id v30 = (void *)sub_1C254F430();
  sub_1C2466EE0(0, &qword_1EA2E3BA0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBBE00]);
  unint64_t v31 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1C255CD90;
  unint64_t v33 = v32 + v31;
  id v34 = [*(id *)&a2[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account] v28[378]];
  id v35 = v46;
  sub_1C254CB20();

  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v33, v35, v5);
  uint64_t v36 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_ingestHealthRecordsWithOptions_reason_accountIdentifiers_completion_, 0, v30, v36, 0);

  uint64_t v37 = &a2[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_readyToDismiss];
  a2[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_readyToDismiss] = 1;
  id v38 = sub_1C24605F4();
  objc_msgSend(v38, sel_setEnabled_, *v37);

  objc_msgSend(a2, sel_setModalInPresentation_, (*v37 & 1) == 0);
  return sub_1C2461580();
}

uint64_t sub_1C2463EA4(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1C2466C60();
  uint64_t v4 = v3;
  uint64_t v25 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2466D7C(0, &qword_1EA2E3B18, MEMORY[0x1E4F1ACE0]);
  uint64_t v8 = v7;
  uint64_t v26 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v25 - v9;
  sub_1C2466CC8();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  os_log_type_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = v1;
    v18[3] = v17;
    v18[4] = ObjectType;
    uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AC28];
    sub_1C2466D7C(0, &qword_1EA2E3B28, MEMORY[0x1E4F1AC28]);
    sub_1C2466E14(&qword_1EA2E3B30, &qword_1EA2E3B28, v19);
    id v20 = a1;
    id v21 = v1;
    sub_1C254EB10();
    sub_1C24674F8(&qword_1EA2E3B40, (void (*)(uint64_t))sub_1C2466CC8);
    uint64_t v22 = sub_1C254EBC0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    uint64_t v28 = a1;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
    id v23 = a1;
    sub_1C254EAD0();
    sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
    sub_1C254EAB0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v4);
    sub_1C2466E14(&qword_1EA2E3B38, &qword_1EA2E3B18, MEMORY[0x1E4F1ACE0]);
    uint64_t v22 = sub_1C254EBC0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  }
  return v22;
}

uint64_t sub_1C246429C(uint64_t a1, uint64_t a2, char *a3, void *a4, uint64_t a5)
{
  uint64_t v39 = a3;
  sub_1C2466EE0(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  id v38 = (char *)v35 - v10;
  uint64_t v11 = sub_1C254E560();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  swift_retain();
  sub_1C254E510();
  uint64_t v16 = sub_1C254E550();
  os_log_type_t v17 = sub_1C254FA40();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v36 = v11;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v37 = a4;
    uint64_t v21 = v20;
    uint64_t v41 = v20;
    *(_DWORD *)uint64_t v19 = 136315138;
    v35[1] = v19 + 4;
    uint64_t v22 = sub_1C2550AA0();
    uint64_t v40 = sub_1C21AD354(v22, v23, &v41);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v16, v17, "[%s] Persisting newly logged in account...", v19, 0xCu);
    swift_arrayDestroy();
    uint64_t v24 = v21;
    a4 = v37;
    MEMORY[0x1C875A0B0](v24, -1, -1);
    MEMORY[0x1C875A0B0](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v36);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v25 = v39;
  uint64_t v26 = *(void **)&v39[OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_onboardingSession];
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = v25;
  v27[3] = sub_1C2466F7C;
  v27[4] = v15;
  v27[5] = a5;
  uint64_t v28 = sub_1C254F840();
  uint64_t v29 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v38, 1, 1, v28);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = 0;
  *(void *)(v30 + 24) = 0;
  *(void *)(v30 + 32) = v26;
  *(void *)(v30 + 40) = a4;
  *(unsigned char *)(v30 + 48) = 1;
  *(void *)(v30 + 56) = sub_1C2466F90;
  *(void *)(v30 + 64) = v27;
  id v31 = v25;
  id v32 = v26;
  id v33 = a4;
  swift_retain();
  sub_1C24D0A0C(v29, (uint64_t)&unk_1EA2E3B48, v30);
  swift_release();
  return swift_release();
}

void sub_1C2464650(void *a1, void *a2, uint64_t a3, void (*a4)(void, void), uint64_t a5, uint64_t a6)
{
  uint64_t v60 = a6;
  uint64_t v11 = sub_1C254CB40();
  uint64_t v58 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C254E560();
  uint64_t v61 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v54 - v18;
  if (a1)
  {
    uint64_t v20 = *(void **)(a3
                   + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account);
    *(void *)(a3 + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_account) = a1;
    id v21 = a1;

    sub_1C254E510();
    id v22 = v21;
    unint64_t v23 = sub_1C254E550();
    os_log_type_t v24 = sub_1C254FA40();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v57 = a4;
      uint64_t v27 = v26;
      uint64_t v56 = swift_slowAlloc();
      uint64_t v63 = v56;
      *(_DWORD *)uint64_t v27 = 136315394;
      int v55 = v25;
      uint64_t v28 = sub_1C2550AA0();
      uint64_t v59 = v14;
      uint64_t v62 = sub_1C21AD354(v28, v29, &v63);
      uint64_t v60 = a5;
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      id v30 = objc_msgSend(v22, sel_identifier, v27 + 14);
      sub_1C254CB20();

      sub_1C24674F8((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
      uint64_t v31 = sub_1C2550810();
      unint64_t v33 = v32;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v11);
      uint64_t v62 = sub_1C21AD354(v31, v33, &v63);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v23, (os_log_type_t)v55, "[%s] Successfully persisted newly logged in account %s", (uint8_t *)v27, 0x16u);
      uint64_t v34 = v56;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v34, -1, -1);
      uint64_t v35 = v27;
      a4 = v57;
      MEMORY[0x1C875A0B0](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v59);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v14);
    }
    id v49 = v22;
    a4(a1, 0);
  }
  else
  {
    uint64_t v59 = v14;
    sub_1C254E510();
    id v36 = a2;
    id v37 = a2;
    id v38 = sub_1C254E550();
    os_log_type_t v39 = sub_1C254FA20();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v57 = a4;
      uint64_t v41 = v40;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v63 = v42;
      *(_DWORD *)uint64_t v41 = 136315394;
      uint64_t v43 = sub_1C2550AA0();
      uint64_t v62 = sub_1C21AD354(v43, v44, &v63);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      uint64_t v62 = (uint64_t)a2;
      id v45 = a2;
      sub_1C24678F8(0, (unint64_t *)&unk_1EBB6F530, (unint64_t *)&qword_1EBB70060, MEMORY[0x1E4FBC0E8], MEMORY[0x1E4FBB718]);
      uint64_t v46 = sub_1C254F510();
      uint64_t v62 = sub_1C21AD354(v46, v47, &v63);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v38, v39, "[%s] Error persisting newly logged in account: %s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v42, -1, -1);
      uint64_t v48 = v41;
      a4 = v57;
      MEMORY[0x1C875A0B0](v48, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v19, v59);
    id v50 = a2;
    if (!a2)
    {
      uint64_t v51 = self;
      unint64_t v52 = (void *)sub_1C254F430();
      id v50 = objc_msgSend(v51, sel_hk_error_description_, 11, v52);
    }
    id v53 = a2;
    a4(v50, 1);
  }
}

void sub_1C2464CA4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v61 = a5;
  uint64_t v71 = sub_1C254E220();
  uint64_t v9 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v66 = (char *)&v57 - v13;
  uint64_t v74 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v63 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v64 = (char *)&v57 - v17;
  uint64_t v18 = sub_1C254CB40();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  id v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = a2;
  uint64_t v60 = v22;
  swift_retain();
  id v23 = objc_msgSend(a3, sel_identifier);
  sub_1C254CB20();

  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  id v24 = objc_allocWithZone(MEMORY[0x1E4F2B500]);
  int v25 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v24, sel_initForClinicalAccountIdentifier_, v25);

  id v27 = objc_msgSend(*(id *)(*(void *)(a4+ OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_onboardingSession)+ OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_healthStore);
  id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B4F0]), sel_initWithHealthStore_recipientIdentifier_, v27, v26);

  unint64_t v76 = MEMORY[0x1E4FBC860];
  uint64_t v29 = *(void *)(a4
                  + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_selectedItems);
  uint64_t v69 = *(void *)(v29 + 16);
  if (v69)
  {
    id v57 = v28;
    id v58 = v26;
    uint64_t v59 = a3;
    uint64_t v30 = v63;
    unint64_t v62 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v67 = v29 + v62;
    uint64_t v31 = (void (**)(char *, char *, uint64_t))(v9 + 16);
    uint64_t v73 = v9 + 32;
    uint64_t v32 = swift_bridgeObjectRetain();
    unint64_t v33 = 0;
    uint64_t v34 = v71;
    uint64_t v72 = v11;
    uint64_t v35 = v74;
    uint64_t v36 = (uint64_t)v64;
    uint64_t v68 = v32;
    while (v33 < *(void *)(v32 + 16))
    {
      uint64_t v37 = *(void *)(v30 + 72);
      sub_1C22667C4(v67 + v37 * v33, v36);
      uint64_t v38 = *(void *)(v36 + *(int *)(v35 + 52));
      unint64_t v70 = v33;
      if (v38)
      {
        int64_t v39 = *(void *)(v38 + 16);
        if (v39)
        {
          aBlock[0] = MEMORY[0x1E4FBC860];
          uint64_t v40 = v38;
          swift_bridgeObjectRetain();
          sub_1C2274BC0(0, v39, 0);
          uint64_t v41 = v71;
          uint64_t v65 = v40;
          uint64_t v42 = v40 + v62;
          do
          {
            sub_1C22667C4(v42, (uint64_t)v15);
            (*v31)(v11, &v15[*(int *)(v35 + 48)], v41);
            sub_1C2266828((uint64_t)v15);
            uint64_t v43 = aBlock[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C2274BC0(0, *(void *)(v43 + 16) + 1, 1);
              uint64_t v41 = v71;
              uint64_t v43 = aBlock[0];
            }
            unint64_t v45 = *(void *)(v43 + 16);
            unint64_t v44 = *(void *)(v43 + 24);
            if (v45 >= v44 >> 1)
            {
              sub_1C2274BC0(v44 > 1, v45 + 1, 1);
              uint64_t v41 = v71;
              uint64_t v43 = aBlock[0];
            }
            *(void *)(v43 + 16) = v45 + 1;
            unint64_t v46 = v43
                + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
                + *(void *)(v9 + 72) * v45;
            uint64_t v11 = v72;
            (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v46, v72, v41);
            aBlock[0] = v43;
            v42 += v37;
            --v39;
            uint64_t v35 = v74;
          }
          while (v39);
          swift_bridgeObjectRelease();
          uint64_t v30 = v63;
        }
        else
        {
          uint64_t v43 = MEMORY[0x1E4FBC860];
        }
        sub_1C2272810(v43);
        uint64_t v34 = v71;
        uint64_t v36 = (uint64_t)v64;
      }
      else
      {
        (*v31)(v66, (char *)(v36 + *(int *)(v35 + 48)), v34);
        unint64_t v47 = v76;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v47 = sub_1C226C270(0, *(void *)(v47 + 16) + 1, 1, v47);
        }
        unint64_t v49 = *(void *)(v47 + 16);
        unint64_t v48 = *(void *)(v47 + 24);
        if (v49 >= v48 >> 1) {
          unint64_t v47 = sub_1C226C270(v48 > 1, v49 + 1, 1, v47);
        }
        *(void *)(v47 + 16) = v49 + 1;
        uint64_t v34 = v71;
        (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v47+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v49, v66, v71);
        unint64_t v76 = v47;
        uint64_t v35 = v74;
      }
      unint64_t v33 = v70 + 1;
      sub_1C2266828(v36);
      uint64_t v32 = v68;
      if (v33 == v69)
      {
        swift_bridgeObjectRelease();
        a3 = v59;
        id v26 = v58;
        id v28 = v57;
        goto LABEL_22;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_22:
    uint64_t v50 = swift_bridgeObjectRetain();
    sub_1C22B4F8C(v50);
    swift_bridgeObjectRelease_n();
    sub_1C21AB51C(0, &qword_1EA2E0090);
    uint64_t v51 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    unint64_t v52 = (void *)swift_allocObject();
    uint64_t v53 = v60;
    v52[2] = sub_1C2467AE8;
    v52[3] = v53;
    uint64_t v54 = v61;
    v52[4] = a3;
    v52[5] = v54;
    aBlock[4] = sub_1C24678C8;
    aBlock[5] = v52;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C22AE944;
    aBlock[3] = &block_descriptor_107_0;
    int v55 = _Block_copy(aBlock);
    id v56 = a3;
    swift_release();
    objc_msgSend(v28, sel_addSharingAuthorizations_completion_, v51, v55);

    _Block_release(v55);
  }
}

uint64_t sub_1C2465420@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_1C2466D7C(0, &qword_1EA2E3B28, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  id v9 = a1;
  id v10 = a2;
  uint64_t result = sub_1C254EAF0();
  *a4 = result;
  return result;
}

void sub_1C24654C8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  id v32 = a4;
  uint64_t v33 = a5;
  uint64_t v8 = sub_1C254CAD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C254CB40();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void *)(a3
                  + OBJC_IVAR____TtC15HealthRecordsUI56ClinicalSharingOnboardingSharingHealthDataViewController_onboardingSession);
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  uint64_t v18 = *(void **)(v17 + OBJC_IVAR___WDClinicalAccountOnboardingSession_profile);
  swift_retain();
  id v19 = objc_msgSend(v18, sel_clinicalAccountStore);
  id v20 = v32;
  id v21 = objc_msgSend(v32, sel_identifier);
  sub_1C254CB20();

  uint64_t v22 = (void *)sub_1C254CB00();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1C254C9D0();
  id v23 = (void *)sub_1C254CA50();
  id v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v11, v8);
  sub_1C254C9D0();
  int v25 = (void *)sub_1C254CA50();
  v24(v11, v8);
  id v26 = (void *)sub_1C254F960();
  id v27 = (void *)sub_1C254F960();
  id v28 = (void *)swift_allocObject();
  v28[2] = sub_1C2467AE8;
  v28[3] = v16;
  uint64_t v29 = v33;
  v28[4] = v20;
  v28[5] = v29;
  aBlock[4] = sub_1C246780C;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C22AE944;
  aBlock[3] = &block_descriptor_91;
  uint64_t v30 = _Block_copy(aBlock);
  id v31 = v20;
  swift_release();
  objc_msgSend(v19, sel_updateClinicalSharingStatusForAccountWithIdentifier_firstSharedDate_lastSharedDate_userStatus_multiDeviceStatus_primaryDeviceName_completion_, v22, v23, v25, v26, v27, 0, v30);
  _Block_release(v30);
}

void sub_1C2465810(uint64_t a1, void *a2, void (*a3)(void, void), uint64_t a4, uint64_t a5, uint64_t a6, const char *a7, const char *a8)
{
  uint64_t v46 = a6;
  uint64_t v14 = sub_1C254E560();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  id v20 = (char *)v42 - v19;
  if (a2)
  {
    uint64_t v43 = a7;
    id v21 = a2;
    sub_1C254E510();
    id v22 = a2;
    id v23 = a2;
    id v24 = sub_1C254E550();
    os_log_type_t v25 = sub_1C254FA20();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v45 = v14;
      uint64_t v28 = v27;
      uint64_t v48 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      unint64_t v44 = a3;
      uint64_t v29 = sub_1C2550AA0();
      uint64_t v47 = sub_1C21AD354(v29, v30, &v48);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      uint64_t v47 = (uint64_t)a2;
      id v31 = a2;
      sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
      uint64_t v32 = sub_1C254F510();
      uint64_t v47 = sub_1C21AD354(v32, v33, &v48);
      a3 = v44;
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v24, v25, v43, (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v28, -1, -1);
      MEMORY[0x1C875A0B0](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v45);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    id v41 = a2;
    a3(a2, 1);
  }
  else
  {
    uint64_t v43 = a8;
    uint64_t v45 = v14;
    sub_1C254E510();
    uint64_t v34 = sub_1C254E550();
    uint64_t v35 = sub_1C254FA40();
    if (os_log_type_enabled(v34, (os_log_type_t)v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      v42[1] = a4;
      uint64_t v38 = v37;
      uint64_t v48 = v37;
      unint64_t v44 = a3;
      *(_DWORD *)uint64_t v36 = 136315138;
      uint64_t v39 = sub_1C2550AA0();
      uint64_t v47 = sub_1C21AD354(v39, v40, &v48);
      a3 = v44;
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v34, (os_log_type_t)v35, v43, v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v38, -1, -1);
      MEMORY[0x1C875A0B0](v36, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v45);
    a3(a5, 0);
  }
}

uint64_t sub_1C2465C54@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_1C2466D7C(0, &qword_1EA2E3B28, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  id v7 = a1;
  uint64_t result = sub_1C254EAF0();
  *a3 = result;
  return result;
}

void sub_1C2465CFC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  id v9 = objc_allocWithZone(MEMORY[0x1E4F67770]);
  swift_retain();
  id v10 = objc_msgSend(v9, sel_init);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a3;
  v11[3] = sub_1C2467AE8;
  v11[4] = v8;
  v11[5] = a4;
  v14[4] = sub_1C2467558;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  v14[2] = sub_1C22BAC14;
  v14[3] = &block_descriptor_60;
  uint64_t v12 = _Block_copy(v14);
  id v13 = a3;
  swift_release();
  objc_msgSend(v10, sel_shareHealthDataWithOptions_reason_completion_, 0, 1, v12);

  _Block_release(v12);
}

void sub_1C2465E50(unint64_t a1, void *a2, void *a3, void (*a4)(id, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1C254E560();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v69 - v15;
  MEMORY[0x1F4188790](v17);
  id v20 = (char *)&v69 - v19;
  if (!a1)
  {
    sub_1C254E510();
    id v35 = a2;
    id v36 = a2;
    uint64_t v37 = sub_1C254E550();
    uint64_t v38 = sub_1C254FA20();
    if (os_log_type_enabled(v37, (os_log_type_t)v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v72 = v12;
      uint64_t v40 = v39;
      id v41 = (void *)swift_slowAlloc();
      uint64_t v75 = a5;
      uint64_t v42 = v41;
      BOOL v77 = v41;
      *(_DWORD *)uint64_t v40 = 136315394;
      uint64_t v43 = sub_1C2550AA0();
      uint64_t v76 = sub_1C21AD354(v43, v44, (uint64_t *)&v77);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2080;
      uint64_t v76 = (uint64_t)a2;
      id v45 = a2;
      sub_1C24678F8(0, (unint64_t *)&unk_1EBB6F530, (unint64_t *)&qword_1EBB70060, MEMORY[0x1E4FBC0E8], MEMORY[0x1E4FBB718]);
      uint64_t v46 = sub_1C254F510();
      uint64_t v76 = sub_1C21AD354(v46, v47, (uint64_t *)&v77);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v37, (os_log_type_t)v38, "[%s] Error sharing to clinicalSharingClient: %s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v42, -1, -1);
      MEMORY[0x1C875A0B0](v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v72);
      id v48 = a2;
      if (!a2) {
        goto LABEL_16;
      }
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
      id v48 = a2;
      if (!a2)
      {
LABEL_16:
        unint64_t v49 = self;
        uint64_t v50 = (void *)sub_1C254F430();
        id v48 = objc_msgSend(v49, sel_hk_error_description_, 11, v50);
      }
    }
    id v51 = a2;
    a4(v48, 1);

    return;
  }
  unint64_t v70 = v18;
  uint64_t v75 = a5;
  uint64_t v73 = a4;
  sub_1C254E510();
  id v21 = sub_1C254E550();
  os_log_type_t v22 = sub_1C254FA40();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v71 = v13;
  id v74 = a3;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v72 = v12;
    os_log_type_t v25 = (uint8_t *)v24;
    uint64_t v26 = (void *)swift_slowAlloc();
    BOOL v77 = v26;
    *(_DWORD *)os_log_type_t v25 = 136315138;
    uint64_t v69 = v25 + 4;
    uint64_t v27 = sub_1C2550AA0();
    uint64_t v76 = sub_1C21AD354(v27, v28, (uint64_t *)&v77);
    uint64_t v13 = v71;
    sub_1C2550120();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v21, v22, "[%s] Successfully completed sync to clinicalSharingClient", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v26, -1, -1);
    uint64_t v29 = v25;
    uint64_t v12 = v72;
    MEMORY[0x1C875A0B0](v29, -1, -1);
  }

  unint64_t v30 = *(void (**)(char *, uint64_t))(v13 + 8);
  v30(v16, v12);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1C2550620();
    if (!v31) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v31 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v31) {
      goto LABEL_19;
    }
  }
  if (v31 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v32 = 0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v33 = (id)MEMORY[0x1C87588E0](v32, a1);
    }
    else {
      id v33 = *(id *)(a1 + 8 * v32 + 32);
    }
    uint64_t v34 = v33;
    ++v32;
    BOOL v77 = v33;
    sub_1C2466630(&v77, a2, a6);
  }
  while (v31 != v32);
LABEL_19:
  swift_bridgeObjectRelease();
  id v52 = v74;
  uint64_t v53 = sub_1C246756C(a1, v52);

  if (v53 && (id v54 = objc_msgSend(v53, sel_error), v53, v54))
  {
    id v55 = v54;
    v73(v54, 1);

    id v56 = v70;
    sub_1C254E510();
    id v57 = v55;
    id v58 = sub_1C254E550();
    os_log_type_t v59 = sub_1C254FA40();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      uint64_t v61 = (void *)swift_slowAlloc();
      BOOL v77 = v61;
      *(_DWORD *)uint64_t v60 = 136315394;
      uint64_t v62 = sub_1C2550AA0();
      uint64_t v72 = v12;
      uint64_t v76 = sub_1C21AD354(v62, v63, (uint64_t *)&v77);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 12) = 2080;
      uint64_t v76 = (uint64_t)v57;
      sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
      id v64 = v57;
      uint64_t v65 = sub_1C254F510();
      uint64_t v76 = sub_1C21AD354(v65, v66, (uint64_t *)&v77);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v58, v59, "[%s] Error sharing to clinicalSharingClient: %s", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v61, -1, -1);
      MEMORY[0x1C875A0B0](v60, -1, -1);

      uint64_t v67 = v72;
      uint64_t v68 = v56;
    }
    else
    {

      uint64_t v68 = v56;
      uint64_t v67 = v12;
    }
    v30(v68, v67);
  }
  else
  {
    v73(v52, 0);
  }
}

uint64_t sub_1C2466630(void **a1, void *a2, uint64_t a3)
{
  uint64_t v41 = a3;
  uint64_t v6 = sub_1C254CB40();
  uint64_t v42 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254E560();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  sub_1C254E510();
  id v14 = v13;
  id v15 = a2;
  id v16 = v14;
  id v17 = a2;
  uint64_t v18 = sub_1C254E550();
  int v43 = sub_1C254FA40();
  if (os_log_type_enabled(v18, (os_log_type_t)v43))
  {
    os_log_t v37 = v18;
    uint64_t v38 = v10;
    uint64_t v39 = v9;
    uint64_t v40 = v3;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v45 = v36;
    *(_DWORD *)uint64_t v19 = 136315650;
    uint64_t v20 = sub_1C2550AA0();
    uint64_t v44 = sub_1C21AD354(v20, v21, &v45);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v41 = v19 + 14;
    id v22 = objc_msgSend(v16, sel_accountID);
    sub_1C254CB20();

    sub_1C24674F8((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v23 = sub_1C2550810();
    unint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v6);
    uint64_t v44 = sub_1C21AD354(v23, v25, &v45);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2080;
    if (a2)
    {
      uint64_t v44 = (uint64_t)a2;
      id v26 = a2;
      sub_1C24678F8(0, (unint64_t *)&unk_1EBB6F530, (unint64_t *)&qword_1EBB70060, MEMORY[0x1E4FBC0E8], MEMORY[0x1E4FBB718]);
      uint64_t v27 = sub_1C254F4F0();
      unint64_t v29 = v28;
    }
    else
    {
      unint64_t v29 = 0xEA00000000006C75;
      uint64_t v27 = 0x6673736563637553;
    }
    uint64_t v31 = v38;
    uint64_t v32 = v39;
    uint64_t v44 = sub_1C21AD354(v27, v29, &v45);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    os_log_t v33 = v37;
    _os_log_impl(&dword_1C21A1000, v37, (os_log_type_t)v43, "[%s] Sync Result. Account: %s %s", (uint8_t *)v19, 0x20u);
    uint64_t v34 = v36;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v34, -1, -1);
    MEMORY[0x1C875A0B0](v19, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v12, v32);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

id sub_1C2466B7C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingSharingHealthDataViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalSharingOnboardingSharingHealthDataViewController()
{
  return self;
}

void sub_1C2466C60()
{
  if (!qword_1EA2E3B10)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EA2E1530);
    unint64_t v0 = sub_1C254EAC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3B10);
    }
  }
}

void sub_1C2466CC8()
{
  if (!qword_1EA2E3B20)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AC28];
    sub_1C2466D7C(255, &qword_1EA2E3B28, MEMORY[0x1E4F1AC28]);
    sub_1C2466E14(&qword_1EA2E3B30, &qword_1EA2E3B28, v0);
    unint64_t v1 = sub_1C254EB20();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E3B20);
    }
  }
}

void sub_1C2466D7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C21AB51C(255, (unint64_t *)&qword_1EA2E1530);
    uint64_t v7 = sub_1C21FFE74(255, (unint64_t *)&qword_1EBB70060);
    unint64_t v8 = a3(a1, v6, v7, MEMORY[0x1E4FBC0F0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2466E14(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2466D7C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2466E58()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2466E98@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2465420(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_1C2466ED4(uint64_t a1, uint64_t a2)
{
  return sub_1C246429C(a1, a2, *(char **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

void sub_1C2466EE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2466F44()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2466F7C(uint64_t a1, char a2)
{
  return sub_1C252353C(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_1C2466F88()
{
  return objectdestroy_31Tm(48);
}

void sub_1C2466F90(void *a1, void *a2)
{
  sub_1C2464650(a1, a2, *(void *)(v2 + 16), *(void (**)(void, void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1C2466F9C()
{
  swift_unknownObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C2466FEC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v10 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1C222399C;
  return sub_1C2529C24(a1, v4, v5, v6, v7, v8, v10, v9);
}

void sub_1C24670C8()
{
  if (!qword_1EA2E3B50)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C2466D7C(255, &qword_1EA2E3B58, MEMORY[0x1E4F1AAE0]);
    sub_1C2466E14(&qword_1EA2E3B60, &qword_1EA2E3B58, v0);
    unint64_t v1 = sub_1C254E950();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E3B50);
    }
  }
}

void sub_1C2467188(uint64_t a1)
{
}

uint64_t sub_1C24671BC()
{
  return sub_1C24674F8(&qword_1EA2E3B70, (void (*)(uint64_t))sub_1C24670C8);
}

void sub_1C24671F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C2466D7C(255, &qword_1EA2E3B58, MEMORY[0x1E4F1AAE0]);
    a3(255);
    sub_1C2466E14(&qword_1EA2E3B60, &qword_1EA2E3B58, v7);
    a4();
    unint64_t v8 = sub_1C254E950();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C24672DC()
{
  return sub_1C24674F8(&qword_1EA2E3B80, sub_1C2467188);
}

void sub_1C2467310()
{
  if (!qword_1EA2E3B88)
  {
    sub_1C24671F0(255, &qword_1EA2E3B78, sub_1C2467188, (void (*)(void))sub_1C24672DC);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    sub_1C24673DC();
    sub_1C22611AC();
    unint64_t v0 = sub_1C254E9B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3B88);
    }
  }
}

unint64_t sub_1C24673DC()
{
  unint64_t result = qword_1EA2E3B90;
  if (!qword_1EA2E3B90)
  {
    sub_1C24671F0(255, &qword_1EA2E3B78, sub_1C2467188, (void (*)(void))sub_1C24672DC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3B90);
  }
  return result;
}

uint64_t sub_1C2467464(void *a1)
{
  return sub_1C246310C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C246746C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C24674A0(void *a1)
{
  return sub_1C24632E4(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C24674A8(void *a1)
{
  return sub_1C24634BC(a1);
}

uint64_t sub_1C24674B0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C24674E8(void **a1)
{
  sub_1C2463680(a1, *(unsigned char **)(v1 + 16));
}

uint64_t sub_1C24674F0(void **a1)
{
  return sub_1C2463970(a1, *(unsigned char **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C24674F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2467540@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2465C54(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_1C2467548(uint64_t a1, uint64_t a2)
{
  sub_1C2465CFC(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C2467550()
{
  return objectdestroy_31Tm(48);
}

void sub_1C2467558(unint64_t a1, void *a2)
{
  sub_1C2465E50(a1, a2, *(void **)(v2 + 16), *(void (**)(id, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t block_destroy_helper_56()
{
  return swift_release();
}

void (**sub_1C246756C(unint64_t a1, void *a2))(char *, uint64_t)
{
  uint64_t v3 = v2;
  id v25 = a2;
  uint64_t v24 = sub_1C254CB40();
  uint64_t v5 = *(void (***)(char *, uint64_t))(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v20 - v9;
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_1C2550620())
  {
    v20[1] = v3;
    uint64_t v21 = v11;
    unint64_t v22 = a1;
    unint64_t v23 = a1 & 0xC000000000000001;
    uint64_t v12 = v5 + 1;
    uint64_t v13 = 4;
    uint64_t v14 = v24;
    while (1)
    {
      id v15 = v23 ? (char *)MEMORY[0x1C87588E0](v13 - 4, a1) : (char *)*(id *)(a1 + 8 * v13);
      uint64_t v5 = (void (**)(char *, uint64_t))v15;
      a1 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      id v16 = objc_msgSend(v15, sel_accountID);
      sub_1C254CB20();

      id v17 = objc_msgSend(v25, sel_identifier);
      sub_1C254CB20();

      LOBYTE(v17) = sub_1C254CB10();
      uint64_t v3 = *v12;
      (*v12)(v7, v14);
      v3(v10, v14);
      if (v17)
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v13;
      BOOL v18 = a1 == v21;
      a1 = v22;
      if (v18) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_15:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C24677C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2465420(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

void sub_1C24677FC(uint64_t a1, uint64_t a2)
{
  sub_1C24654C8(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

void sub_1C246780C(uint64_t a1, void *a2)
{
  sub_1C2465810(a1, a2, *(void (**)(void, void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), "[%s] Error updating user status: %s", "[%s] Successfully updated user status");
}

uint64_t sub_1C246783C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2465420(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

void sub_1C2467878(uint64_t a1, uint64_t a2)
{
  sub_1C2464CA4(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t objectdestroy_87Tm()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C24678C8(uint64_t a1, void *a2)
{
  sub_1C2465810(a1, a2, *(void (**)(void, void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), "[%s] Error adding Authorization Identifiers: %s", "[%s] Successfully added Authorization Identifiers");
}

void sub_1C24678F8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C21FFE74(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2467960()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1C24679B8()
{
  return sub_1C2462740(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(uint64_t (**)(void))(v0 + 64));
}

uint64_t sub_1C24679CC()
{
  return objectdestroy_31Tm(40);
}

uint64_t objectdestroy_31Tm(uint64_t a1)
{
  swift_release();
  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t sub_1C2467A20()
{
  return (*(uint64_t (**)(id))(v0 + 24))(objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 0.0));
}

uint64_t sub_1C2467A5C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C2467B00()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI18TextViewController____lazy_storage___textView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI18TextViewController____lazy_storage___textView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI18TextViewController____lazy_storage___textView);
  }
  else
  {
    id v4 = sub_1C2467B60();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2467B60()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1DD8]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setEditable_, 0);
  objc_msgSend(v0, sel_setAlwaysBounceVertical_, 1);
  objc_msgSend(v0, sel_setDataDetectorTypes_, 2);
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v0, sel_setFont_, v1);
  objc_msgSend(v1, sel_lineHeight);
  objc_msgSend(v0, sel_setTextContainerInset_, v2, 10.0, v2, 10.0);

  return v0;
}

void sub_1C2467C5C(uint64_t *a1@<X8>)
{
  id v2 = sub_1C2467B00();
  id v3 = objc_msgSend(v2, sel_text);

  if (v3)
  {
    uint64_t v4 = sub_1C254F470();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  *a1 = v4;
  a1[1] = v6;
}

void sub_1C2467CD4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  swift_bridgeObjectRetain();
  id v2 = sub_1C2467B00();
  if (v1)
  {
    id v3 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = 0;
  }
  objc_msgSend(v2, sel_setText_, v3);
}

uint64_t sub_1C2467D68()
{
  id v0 = sub_1C2467B00();
  id v1 = objc_msgSend(v0, sel_text);

  if (!v1) {
    return 0;
  }
  uint64_t v2 = sub_1C254F470();

  return v2;
}

void sub_1C2467DDC(uint64_t a1, uint64_t a2)
{
  id v3 = sub_1C2467B00();
  if (a2)
  {
    id v4 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }
  objc_msgSend(v3, sel_setText_, v4);
}

void (*sub_1C2467E68(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  id v3 = sub_1C2467B00();
  id v4 = objc_msgSend(v3, sel_text);

  if (v4)
  {
    uint64_t v5 = sub_1C254F470();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1C2467EFC;
}

void sub_1C2467EFC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v3 = sub_1C2467B00();
    id v6 = v3;
    if (v2)
    {
      id v4 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      id v3 = v6;
    }
    else
    {
      id v4 = 0;
    }
    objc_msgSend(v3, sel_setText_, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v5 = sub_1C2467B00();
    id v6 = v5;
    if (v2)
    {
      id v4 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      id v5 = v6;
    }
    else
    {
      id v4 = 0;
    }
    objc_msgSend(v5, sel_setText_, v4);
  }
}

void sub_1C2467FE0()
{
  v32.receiver = v0;
  v32.super_class = (Class)type metadata accessor for TextViewController();
  objc_msgSendSuper2(&v32, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setLargeTitleDisplayMode_, 2);

  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v3 = v2;
  id v4 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  id v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v6 = v5;
  id v7 = sub_1C2467B00();
  objc_msgSend(v6, sel_addSubview_, v7);

  id v8 = sub_1C2467B00();
  id v9 = objc_msgSend(v8, sel_leadingAnchor);

  id v10 = objc_msgSend(v0, sel_view);
  if (!v10)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v11 = v10;
  id v12 = objc_msgSend(v10, sel_leadingAnchor);

  id v13 = objc_msgSend(v9, sel_constraintEqualToSystemSpacingAfterAnchor_multiplier_, v12, 1.0);
  objc_msgSend(v13, sel_setActive_, 1);

  id v14 = objc_msgSend(v0, sel_view);
  if (!v14)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v15 = v14;
  id v16 = objc_msgSend(v14, sel_trailingAnchor);

  id v17 = sub_1C2467B00();
  id v18 = objc_msgSend(v17, sel_trailingAnchor);

  id v19 = objc_msgSend(v16, sel_constraintEqualToSystemSpacingAfterAnchor_multiplier_, v18, 1.0);
  objc_msgSend(v19, sel_setActive_, 1);

  id v20 = sub_1C2467B00();
  id v21 = objc_msgSend(v20, sel_topAnchor);

  id v22 = objc_msgSend(v0, sel_view);
  if (!v22)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v23 = v22;
  id v24 = objc_msgSend(v22, sel_topAnchor);

  id v25 = objc_msgSend(v21, sel_constraintEqualToSystemSpacingBelowAnchor_multiplier_, v24, 1.0);
  objc_msgSend(v25, sel_setActive_, 1);

  id v26 = objc_msgSend(v0, sel_view);
  if (v26)
  {
    uint64_t v27 = v26;
    id v28 = objc_msgSend(v26, sel_bottomAnchor);

    id v29 = sub_1C2467B00();
    id v30 = objc_msgSend(v29, sel_bottomAnchor);

    id v31 = objc_msgSend(v28, sel_constraintEqualToSystemSpacingBelowAnchor_multiplier_, v30, 1.0);
    objc_msgSend(v31, sel_setActive_, 1);

    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t type metadata accessor for TextViewController()
{
  return self;
}

id TextViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    id v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id TextViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI18TextViewController____lazy_storage___textView] = 0;
  if (a2)
  {
    id v5 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for TextViewController();
  id v6 = objc_msgSendSuper2(&v8, sel_initWithNibName_bundle_, v5, a3);

  return v6;
}

id TextViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id TextViewController.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI18TextViewController____lazy_storage___textView] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for TextViewController();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id TextViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for TextViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TextViewController);
}

uint64_t dispatch thunk of TextViewController.text.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of TextViewController.text.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of TextViewController.text.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t sub_1C2468794(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v9 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2274ACC(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v9;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x1C87588E0](v5, a1);
      }
      else {
        swift_retain();
      }
      double v6 = sub_1C23C615C();
      swift_release();
      unint64_t v8 = *(void *)(v9 + 16);
      unint64_t v7 = *(void *)(v9 + 24);
      if (v8 >= v7 >> 1) {
        sub_1C2274ACC(v7 > 1, v8 + 1, 1);
      }
      ++v5;
      *(void *)(v9 + 16) = v8 + 1;
      *(double *)(v9 + 8 * v8 + 32) = v6;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C24688F8(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v9 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2274AAC(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v9;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x1C87588E0](v5, a1);
      }
      else {
        swift_retain();
      }
      swift_getKeyPath();
      swift_retain();
      swift_getAtKeyPath();
      swift_release();
      swift_release_n();
      unint64_t v7 = *(void *)(v9 + 16);
      unint64_t v6 = *(void *)(v9 + 24);
      if (v7 >= v6 >> 1) {
        sub_1C2274AAC(v6 > 1, v7 + 1, 1);
      }
      ++v5;
      *(void *)(v9 + 16) = v7 + 1;
      *(void *)(v9 + 8 * v7 + 32) = v8;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2468A94(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v10 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C227504C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v10;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = MEMORY[0x1C87588E0](v5, a1);
      }
      else
      {
        uint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
        swift_retain();
      }
      uint64_t v7 = *(void *)(v6 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      unint64_t v9 = *(void *)(v10 + 16);
      unint64_t v8 = *(void *)(v10 + 24);
      if (v9 >= v8 >> 1) {
        sub_1C227504C(v8 > 1, v9 + 1, 1);
      }
      ++v5;
      *(void *)(v10 + 16) = v9 + 1;
      *(void *)(v10 + 8 * v9 + 32) = v7;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2468BEC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    int64_t v6 = *(void *)(a1 + 16);
  }
  else {
    int64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_1C2274ACC(0, v6, 0);
  int64_t v31 = v5;
  unint64_t v32 = v4;
  uint64_t v33 = a1;
  if (v6)
  {
    uint64_t v7 = (double *)(a1 + 32);
    unint64_t v8 = (double *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v10 = v6;
    uint64_t v11 = a2;
    while (v4)
    {
      if (!v5) {
        goto LABEL_36;
      }
      double v12 = *v8;
      if (*v7 > *v8) {
        double v12 = *v7;
      }
      if (*v7 <= 0.0) {
        double v13 = 0.0;
      }
      else {
        double v13 = v12;
      }
      unint64_t v15 = *(void *)(v34 + 16);
      unint64_t v14 = *(void *)(v34 + 24);
      if (v15 >= v14 >> 1)
      {
        uint64_t v29 = v11;
        uint64_t result = sub_1C2274ACC(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v29;
      }
      --v5;
      *(void *)(v34 + 16) = v15 + 1;
      *(double *)(v34 + 8 * v15 + 32) = v13;
      --v4;
      ++v8;
      ++v7;
      if (!--v10) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v11 = a2;
LABEL_18:
    if (v32 <= v31)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v34;
    }
    uint64_t v16 = 0;
    if (v6 <= v31) {
      int64_t v17 = v31;
    }
    else {
      int64_t v17 = v6;
    }
    int64_t v18 = v17 - v6;
    unint64_t v19 = v32 - v6;
    int64_t v20 = v31 - v6;
    uint64_t v21 = 8 * v6 + 32;
    uint64_t v22 = v33 + v21;
    uint64_t v23 = v11 + v21;
    while (v19 != v16)
    {
      if (v20 == v16) {
        goto LABEL_34;
      }
      if (v18 == v16) {
        goto LABEL_38;
      }
      double v24 = *(double *)(v22 + 8 * v16);
      double v25 = *(double *)(v23 + 8 * v16);
      if (v24 > v25) {
        double v25 = *(double *)(v22 + 8 * v16);
      }
      if (v24 <= 0.0) {
        double v26 = 0.0;
      }
      else {
        double v26 = v25;
      }
      unint64_t v28 = *(void *)(v34 + 16);
      unint64_t v27 = *(void *)(v34 + 24);
      if (v28 >= v27 >> 1)
      {
        uint64_t v30 = v11;
        uint64_t result = sub_1C2274ACC(v27 > 1, v28 + 1, 1);
        uint64_t v11 = v30;
      }
      *(void *)(v34 + 16) = v28 + 1;
      *(double *)(v34 + 8 * v28 + 32) = v26;
      if (v19 == ++v16) {
        goto LABEL_34;
      }
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

void *sub_1C2468E2C(void *(*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v6 = a4;
  uint64_t v7 = a3;
  unint64_t v8 = *(void *)(a3 + 16);
  unint64_t v9 = *(void *)(a4 + 16);
  if (v9 >= v8) {
    int64_t v10 = *(void *)(a3 + 16);
  }
  else {
    int64_t v10 = *(void *)(a4 + 16);
  }
  uint64_t v40 = MEMORY[0x1E4FBC860];
  sub_1C2274ACC(0, v10, 0);
  uint64_t v11 = v40;
  int64_t v32 = v10;
  uint64_t v34 = v6;
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    while (v8 != v13)
    {
      if (v9 == v13) {
        goto LABEL_30;
      }
      uint64_t v14 = *(void *)(v6 + 8 * v13 + 32);
      uint64_t v36 = *(void *)(v7 + 8 * v13 + 32);
      uint64_t v37 = v14;
      char v38 = 0;
      uint64_t result = a1(&v39, &v36);
      if (v5)
      {
LABEL_27:
        swift_release();
        goto LABEL_28;
      }
      uint64_t v5 = 0;
      uint64_t v15 = v7;
      uint64_t v16 = v39;
      uint64_t v40 = v11;
      unint64_t v18 = *(void *)(v11 + 16);
      unint64_t v17 = *(void *)(v11 + 24);
      if (v18 >= v17 >> 1)
      {
        uint64_t result = (void *)sub_1C2274ACC(v17 > 1, v18 + 1, 1);
        uint64_t v11 = v40;
      }
      ++v13;
      *(void *)(v11 + 16) = v18 + 1;
      *(void *)(v11 + 8 * v18 + 32) = v16;
      uint64_t v7 = v15;
      uint64_t v6 = v34;
      if (v32 == v13) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
LABEL_14:
    if (v8 <= v9)
    {
LABEL_28:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)v11;
    }
    unint64_t v19 = v8;
    uint64_t v20 = 0;
    if (v32 <= (uint64_t)v9) {
      int64_t v21 = v9;
    }
    else {
      int64_t v21 = v32;
    }
    int64_t v30 = v21 - v32;
    uint64_t v22 = v6;
    unint64_t v23 = v19 - v32;
    unint64_t v31 = v9 - v32;
    uint64_t v24 = 8 * v32 + 32;
    uint64_t v33 = v7 + v24;
    uint64_t v25 = v22 + v24;
    while (v23 != v20)
    {
      if (v31 == v20) {
        goto LABEL_28;
      }
      if (v30 == v20) {
        goto LABEL_32;
      }
      uint64_t v26 = *(void *)(v25 + 8 * v20);
      uint64_t v36 = *(void *)(v33 + 8 * v20);
      uint64_t v37 = v26;
      uint64_t result = a1(&v39, &v36);
      if (v5) {
        goto LABEL_27;
      }
      uint64_t v5 = 0;
      uint64_t v27 = v39;
      uint64_t v40 = v11;
      unint64_t v29 = *(void *)(v11 + 16);
      unint64_t v28 = *(void *)(v11 + 24);
      if (v29 >= v28 >> 1)
      {
        uint64_t result = (void *)sub_1C2274ACC(v28 > 1, v29 + 1, 1);
        uint64_t v11 = v40;
      }
      *(void *)(v11 + 16) = v29 + 1;
      *(void *)(v11 + 8 * v29 + 32) = v27;
      if (v23 == ++v20) {
        goto LABEL_28;
      }
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

double sub_1C24690E0()
{
  if ((*(unsigned char *)(v0 + 120) & 1) == 0) {
    return *(double *)(v0 + 112);
  }
  double result = sub_1C2469210(v0);
  *(double *)(v0 + 112) = result;
  *(unsigned char *)(v0 + 120) = 0;
  return result;
}

uint64_t sub_1C2469118(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v9 = *(void **)(v4 + 24);
  uint64_t v10 = *(void *)(v4 + 32);
  uint64_t v11 = *(void *)(v4 + 40);
  double v12 = *(void **)(v4 + 72);
  long long v20 = *(_OWORD *)(v4 + 80);
  uint64_t v13 = *(void *)(v4 + 96);
  uint64_t v14 = *(void *)(v4 + 104);
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 120) = 1;
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = v9;
  *(void *)(v15 + 32) = v10;
  *(void *)(v15 + 40) = v11;
  *(void *)(v15 + 48) = a2;
  *(void *)(v15 + 56) = a3;
  *(void *)(v15 + 64) = a4;
  *(void *)(v15 + 72) = v12;
  *(_OWORD *)(v15 + 80) = v20;
  *(void *)(v15 + 96) = v13;
  *(void *)(v15 + 104) = v14;
  *(void *)(v15 + 112) = 0;
  id v16 = a2;
  id v17 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v18 = v9;
  return v15;
}

double sub_1C2469210(uint64_t a1)
{
  if (!*(void *)(a1 + 24))
  {
    double v2 = 0.0;
    goto LABEL_5;
  }
  if (qword_1EA2DD568 != -1) {
    goto LABEL_38;
  }
  while (1)
  {
    double v2 = *(double *)&qword_1EA303908;
LABEL_5:
    unint64_t v3 = *(void *)(a1 + 16);
    unint64_t v4 = v3 >> 62;
    if (v3 >> 62) {
      break;
    }
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
    {
      double v8 = 0.0;
      goto LABEL_13;
    }
    uint64_t v6 = v5 - 1;
    if (!__OFSUB__(v5, 1)) {
      goto LABEL_8;
    }
LABEL_37:
    __break(1u);
LABEL_38:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v21) {
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C2550620();
  swift_bridgeObjectRelease();
  uint64_t v6 = v22 - 1;
  if (__OFSUB__(v22, 1)) {
    goto LABEL_37;
  }
LABEL_8:
  double v7 = (double)v6;
  if (qword_1EA2DD528 != -1) {
    swift_once();
  }
  double v8 = *(double *)&qword_1EA3038C8 * v7;
  if (!v4)
  {
LABEL_13:
    uint64_t v10 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v9 = swift_bridgeObjectRetain_n();
    goto LABEL_14;
  }
  while (2)
  {
    swift_bridgeObjectRetain_n();
    unint64_t v9 = sub_1C2550620();
    uint64_t v10 = v9;
LABEL_14:
    double v11 = 0.0;
    double v12 = 0.0;
    if (v10)
    {
      if (v10 >= 1)
      {
        uint64_t v13 = 0;
        do
        {
          if ((v3 & 0xC000000000000001) != 0) {
            MEMORY[0x1C87588E0](v13, v3);
          }
          else {
            swift_retain();
          }
          ++v13;
          double v14 = sub_1C23C5C10();
          swift_release();
          double v12 = v12 + v14;
        }
        while (v10 != v13);
        goto LABEL_21;
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      uint64_t v16 = MEMORY[0x1C87588E0](v9, v3);
LABEL_29:
      swift_bridgeObjectRelease();
      sub_1C21F4424(v16 + 72, (uint64_t)v23);
      swift_release();
      uint64_t v17 = v24;
      uint64_t v18 = v25;
      __swift_project_boxed_opaque_existential_1Tm(v23, v24);
      double v19 = (*(double (**)(uint64_t, uint64_t))(v18 + 48))(v17, v18);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
      goto LABEL_32;
    }
LABEL_21:
    swift_bridgeObjectRelease_n();
    if (!*(void *)(a1 + 48)) {
      return v8 + v2 + v12 + v11;
    }
    double v11 = *(double *)(a1 + 64);
    if (!v4)
    {
      uint64_t v15 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v15) {
        goto LABEL_31;
      }
LABEL_24:
      unint64_t v9 = v15 - 1;
      if (__OFSUB__(v15, 1)) {
        goto LABEL_40;
      }
      if ((v3 & 0xC000000000000001) != 0) {
        goto LABEL_41;
      }
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v9 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v16 = *(void *)(v3 + 8 * v9 + 32);
        swift_retain();
        goto LABEL_29;
      }
      __break(1u);
LABEL_44:
      double v8 = 0.0;
      continue;
    }
    break;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C2550620();
  if (v15) {
    goto LABEL_24;
  }
LABEL_31:
  swift_bridgeObjectRelease();
  double v19 = 0.0;
LABEL_32:
  double v11 = v11 + v19;
  return v8 + v2 + v12 + v11;
}

uint64_t sub_1C2469534()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t _s4PageCMa()
{
  return self;
}

uint64_t _s10ColumnInfoVwCP(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

void *_s10ColumnInfoVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t _s10ColumnInfoVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

ValueMetadata *_s10ColumnInfoVMa()
{
  return &_s10ColumnInfoVN;
}

uint64_t sub_1C2469690()
{
  unint64_t v2 = *(void *)(v0 + 64);
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  unint64_t v1 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_15:
    MEMORY[0x1C87588E0](0, v2);
    goto LABEL_6;
  }
  if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_17;
  }
  swift_retain();
LABEL_6:
  uint64_t v5 = sub_1C246AE18();
  swift_release();
  unint64_t v6 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C23C6988(v6, -INFINITY);
  if (v3 < 1)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  uint64_t v7 = result;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v9 = v7;
  do
  {
    if (v1) {
      MEMORY[0x1C87588E0](v8, v2);
    }
    else {
      swift_retain();
    }
    ++v8;
    uint64_t v10 = sub_1C246AE18();
    swift_release();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    double v11 = sub_1C2468E2C((void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1C246C6EC, 0, v9, v10);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v9 = (uint64_t)v11;
  }
  while (v3 != v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return (uint64_t)v11;
}

uint64_t sub_1C2469864@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C2469690();
  *a1 = result;
  return result;
}

uint64_t sub_1C2469890@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v108 = *a1;
  *a3 = *a1;
  if (a2 >> 62) {
    goto LABEL_69;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v109 = v4;
  uint64_t v110 = v3;
  if (!v4)
  {
LABEL_70:
    unint64_t v35 = 0;
    goto LABEL_71;
  }
LABEL_3:
  unint64_t v5 = 0;
  unint64_t v6 = v3 & 0xC000000000000001;
  uint64_t v101 = v3 + 32;
  unint64_t v103 = v3 & 0xC000000000000001;
  do
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = MEMORY[0x1C87588E0](v5, v3);
    }
    else
    {
      uint64_t v7 = *(void *)(v101 + 8 * v5);
      swift_bridgeObjectRetain();
      swift_retain();
    }
    uint64_t v8 = *(void *)(v7 + 64);
    uint64_t v111 = v8;
    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0) {
        uint64_t v3 = *(void *)(v7 + 64);
      }
      else {
        uint64_t v3 = v8 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain_n();
      uint64_t v9 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (!v9)
      {
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        swift_bridgeObjectRetain();
        uint64_t v4 = sub_1C2550620();
        uint64_t v109 = v4;
        uint64_t v110 = v3;
        if (!v4) {
          goto LABEL_70;
        }
        goto LABEL_3;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9) {
        goto LABEL_66;
      }
    }
    unint64_t v105 = v5;
    if ((v111 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1C87588E0](0);
    }
    else
    {
      if (!*(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_67;
      }
      swift_retain();
    }
    uint64_t v10 = sub_1C246AE18();
    swift_release();
    uint64_t v3 = *(void *)(v10 + 16);
    swift_bridgeObjectRelease();
    if (v3)
    {
      uint64_t v11 = sub_1C254F780();
      *(void *)(v11 + 16) = v3;
      memset_pattern16((void *)(v11 + 32), &unk_1C256B5E0, 8 * v3);
    }
    else
    {
      uint64_t v11 = MEMORY[0x1E4FBC860];
    }
    if (v9 < 1) {
      goto LABEL_68;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    uint64_t v114 = v9;
    do
    {
      if ((v111 & 0xC000000000000001) != 0) {
        MEMORY[0x1C87588E0](v12, v111);
      }
      else {
        swift_retain();
      }
      uint64_t v117 = v12;
      uint64_t v13 = sub_1C246AE18();
      swift_release();
      unint64_t v14 = *(void *)(v11 + 16);
      unint64_t v15 = *(void *)(v13 + 16);
      if (v15 >= v14) {
        int64_t v16 = *(void *)(v11 + 16);
      }
      else {
        int64_t v16 = *(void *)(v13 + 16);
      }
      uint64_t v130 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C2274ACC(0, v16, 0);
      uint64_t v128 = v11;
      int64_t v120 = v15;
      unint64_t v123 = v14;
      if (v16)
      {
        uint64_t v17 = (double *)(v11 + 32);
        uint64_t v18 = (double *)(v13 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int64_t v19 = v16;
        while (v14)
        {
          if (!v15) {
            goto LABEL_62;
          }
          if (*v17 > *v18) {
            double v20 = *v17;
          }
          else {
            double v20 = *v18;
          }
          unint64_t v22 = *(void *)(v130 + 16);
          unint64_t v21 = *(void *)(v130 + 24);
          if (v22 >= v21 >> 1) {
            sub_1C2274ACC(v21 > 1, v22 + 1, 1);
          }
          --v15;
          *(void *)(v130 + 16) = v22 + 1;
          *(double *)(v130 + 8 * v22 + 32) = v20;
          --v14;
          ++v18;
          ++v17;
          if (!--v19) {
            goto LABEL_36;
          }
        }
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        uint64_t v4 = v109;
        uint64_t v3 = v110;
        unint64_t v35 = v5;
LABEL_71:
        if (v35 != v4)
        {
          unint64_t v103 = v3 & 0xC000000000000001;
          if ((v3 & 0xC000000000000001) != 0) {
            goto LABEL_207;
          }
          if ((v35 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v35 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            swift_retain();
            goto LABEL_76;
          }
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          __break(1u);
LABEL_215:
          __break(1u);
        }
        goto LABEL_216;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_36:
      if (v123 > v120)
      {
        uint64_t v23 = 0;
        uint64_t v24 = 8 * v16;
        uint64_t v25 = v128 + 8 * v16;
        if (v16 <= v120) {
          int64_t v26 = v120;
        }
        else {
          int64_t v26 = v16;
        }
        int64_t v27 = v26 - v16;
        unint64_t v28 = v123 - v16;
        int64_t v29 = v120 - v16;
        uint64_t v30 = v25 + 32;
        uint64_t v31 = v13 + v24 + 32;
        while (v28 != v23)
        {
          if (v29 == v23) {
            goto LABEL_17;
          }
          if (v27 == v23) {
            goto LABEL_64;
          }
          if (*(double *)(v30 + 8 * v23) > *(double *)(v31 + 8 * v23)) {
            uint64_t v32 = *(void *)(v30 + 8 * v23);
          }
          else {
            uint64_t v32 = *(void *)(v31 + 8 * v23);
          }
          unint64_t v34 = *(void *)(v130 + 16);
          unint64_t v33 = *(void *)(v130 + 24);
          if (v34 >= v33 >> 1) {
            sub_1C2274ACC(v33 > 1, v34 + 1, 1);
          }
          *(void *)(v130 + 16) = v34 + 1;
          *(void *)(v130 + 8 * v34 + 32) = v32;
          if (v28 == ++v23) {
            goto LABEL_17;
          }
        }
        goto LABEL_63;
      }
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v12 = v117 + 1;
      swift_bridgeObjectRelease();
      uint64_t v11 = v130;
    }
    while (v117 + 1 != v114);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v3 = *(void *)(v130 + 16);
    unint64_t v35 = swift_bridgeObjectRelease();
    if (v3 == v108) {
      goto LABEL_65;
    }
    ++v5;
    if (__OFADD__(v105, 1))
    {
      while (1)
      {
        __break(1u);
LABEL_207:
        MEMORY[0x1C87588E0](v35, v3);
LABEL_76:
        uint64_t v36 = sub_1C2469690();
        swift_release();
        unint64_t v37 = *(void *)(v36 + 16);
        swift_bridgeObjectRelease();
        uint64_t v3 = sub_1C23C6988(v37, -INFINITY);
        if (!v109) {
          goto LABEL_217;
        }
        uint64_t v38 = v110;
        uint64_t v102 = v110 + 32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v39 = 0;
        uint64_t v99 = v3;
        while (2)
        {
          if (v103)
          {
            uint64_t v3 = v39;
            unint64_t v35 = MEMORY[0x1C87588E0](v39, v38);
            unint64_t v40 = v35;
            ++v39;
            if (__OFADD__(v3, 1)) {
              goto LABEL_202;
            }
          }
          else
          {
            if ((v39 & 0x8000000000000000) != 0) {
              goto LABEL_210;
            }
            if (v39 >= *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_211;
            }
            unint64_t v40 = *(void *)(v102 + 8 * v39);
            unint64_t v35 = swift_retain();
            BOOL v41 = __OFADD__(v39++, 1);
            if (v41)
            {
LABEL_202:
              __break(1u);
LABEL_203:
              __break(1u);
LABEL_204:
              __break(1u);
              break;
            }
          }
          unint64_t v42 = *(void *)(v40 + 64);
          unint64_t v112 = v42;
          if (v42 >> 62)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v3 = sub_1C2550620();
            unint64_t v35 = swift_bridgeObjectRelease();
            if (!v3) {
              goto LABEL_203;
            }
          }
          else
          {
            uint64_t v3 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
            unint64_t v35 = swift_bridgeObjectRetain();
            if (!v3) {
              goto LABEL_203;
            }
          }
          if ((v112 & 0xC000000000000001) != 0)
          {
            MEMORY[0x1C87588E0](0);
          }
          else
          {
            if (!*(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_204;
            }
            swift_retain();
          }
          uint64_t v43 = sub_1C246AE18();
          swift_release();
          uint64_t v44 = *(void *)(v43 + 16);
          swift_bridgeObjectRelease();
          if (v44)
          {
            uint64_t v45 = sub_1C254F780();
            *(void *)(v45 + 16) = v44;
            uint64_t v106 = v45;
            memset_pattern16((void *)(v45 + 32), &unk_1C256B5E0, 8 * v44);
          }
          else
          {
            uint64_t v106 = MEMORY[0x1E4FBC860];
          }
          unint64_t v35 = v112;
          if (v3 >= 1)
          {
            swift_bridgeObjectRetain();
            uint64_t v46 = v106;
            swift_bridgeObjectRetain();
            uint64_t v47 = 0;
            uint64_t v115 = v3;
            do
            {
              uint64_t v118 = v47;
              if ((v112 & 0xC000000000000001) != 0) {
                MEMORY[0x1C87588E0](v47, v112);
              }
              else {
                swift_retain();
              }
              uint64_t v48 = sub_1C246AE18();
              swift_release();
              unint64_t v49 = *(void *)(v46 + 16);
              unint64_t v50 = *(void *)(v48 + 16);
              if (v50 >= v49) {
                int64_t v51 = *(void *)(v46 + 16);
              }
              else {
                int64_t v51 = *(void *)(v48 + 16);
              }
              uint64_t v131 = MEMORY[0x1E4FBC860];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1C2274ACC(0, v51, 0);
              uint64_t v38 = v131;
              uint64_t v126 = v48;
              uint64_t v129 = v46;
              int64_t v121 = v50;
              unint64_t v124 = v49;
              if (v51)
              {
                id v52 = (double *)(v46 + 32);
                uint64_t v53 = (double *)(v48 + 32);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                int64_t v54 = v51;
                while (v49)
                {
                  if (!v50) {
                    goto LABEL_138;
                  }
                  if (*v52 > *v53) {
                    double v55 = *v52;
                  }
                  else {
                    double v55 = *v53;
                  }
                  unint64_t v57 = *(void *)(v131 + 16);
                  unint64_t v56 = *(void *)(v131 + 24);
                  if (v57 >= v56 >> 1) {
                    sub_1C2274ACC(v56 > 1, v57 + 1, 1);
                  }
                  --v50;
                  *(void *)(v131 + 16) = v57 + 1;
                  *(double *)(v131 + 8 * v57 + 32) = v55;
                  --v49;
                  ++v53;
                  ++v52;
                  if (!--v54) {
                    goto LABEL_114;
                  }
                }
                __break(1u);
LABEL_138:
                __break(1u);
LABEL_139:
                __break(1u);
LABEL_140:
                __break(1u);
LABEL_141:
                uint64_t v3 = v99;
                goto LABEL_142;
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
LABEL_114:
              if (v124 > v121)
              {
                uint64_t v58 = 0;
                if (v51 <= v121) {
                  int64_t v59 = v121;
                }
                else {
                  int64_t v59 = v51;
                }
                int64_t v60 = v59 - v51;
                unint64_t v61 = v124 - v51;
                int64_t v62 = v121 - v51;
                uint64_t v63 = v129 + 8 * v51 + 32;
                uint64_t v64 = v126 + 8 * v51 + 32;
                while (v61 != v58)
                {
                  if (v62 == v58) {
                    goto LABEL_95;
                  }
                  if (v60 == v58) {
                    goto LABEL_140;
                  }
                  if (*(double *)(v63 + 8 * v58) > *(double *)(v64 + 8 * v58)) {
                    uint64_t v65 = *(void *)(v63 + 8 * v58);
                  }
                  else {
                    uint64_t v65 = *(void *)(v64 + 8 * v58);
                  }
                  unint64_t v67 = *(void *)(v131 + 16);
                  unint64_t v66 = *(void *)(v131 + 24);
                  if (v67 >= v66 >> 1) {
                    sub_1C2274ACC(v66 > 1, v67 + 1, 1);
                  }
                  *(void *)(v131 + 16) = v67 + 1;
                  *(void *)(v131 + 8 * v67 + 32) = v65;
                  if (v61 == ++v58) {
                    goto LABEL_95;
                  }
                }
                goto LABEL_139;
              }
LABEL_95:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              uint64_t v3 = v129;
              swift_bridgeObjectRelease_n();
              uint64_t v47 = v118 + 1;
              swift_bridgeObjectRelease();
              uint64_t v46 = v131;
            }
            while (v118 + 1 != v115);
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            if (*(void *)(v131 + 16) != v108)
            {
              swift_bridgeObjectRelease();
              uint64_t v38 = v110;
              if (v39 != v109) {
                continue;
              }
              goto LABEL_141;
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v3 = (uint64_t)sub_1C2468E2C((void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1C246C6EC, 0, v99, v131);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            uint64_t v99 = v3;
            uint64_t v38 = v110;
            if (v39 != v109) {
              continue;
            }
LABEL_142:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            a3[1] = v3;
            swift_bridgeObjectRetain();
            uint64_t v68 = 0;
LABEL_143:
            if (v103)
            {
              uint64_t v3 = v68;
              uint64_t v69 = MEMORY[0x1C87588E0](v68, v38);
            }
            else
            {
              uint64_t v69 = *(void *)(v102 + 8 * v68);
              swift_retain();
            }
            BOOL v41 = __OFADD__(v68++, 1);
            if (v41) {
              goto LABEL_212;
            }
            unint64_t v70 = *(void *)(v69 + 64);
            unint64_t v113 = v70;
            if (v70 >> 62)
            {
              uint64_t v3 = v68;
              swift_bridgeObjectRetain_n();
              uint64_t v71 = sub_1C2550620();
              swift_bridgeObjectRelease();
              if (!v71) {
                goto LABEL_213;
              }
            }
            else
            {
              uint64_t v71 = *(void *)((v70 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v71) {
                goto LABEL_213;
              }
            }
            uint64_t v104 = v69;
            if ((v113 & 0xC000000000000001) != 0)
            {
              MEMORY[0x1C87588E0](0);
            }
            else
            {
              if (!*(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_214;
              }
              swift_retain();
            }
            uint64_t v72 = sub_1C246AE18();
            swift_release();
            uint64_t v73 = *(void *)(v72 + 16);
            swift_bridgeObjectRelease();
            if (v73)
            {
              uint64_t v74 = sub_1C254F780();
              *(void *)(v74 + 16) = v73;
              uint64_t v107 = v74;
              memset_pattern16((void *)(v74 + 32), &unk_1C256B5E0, 8 * v73);
            }
            else
            {
              uint64_t v107 = MEMORY[0x1E4FBC860];
            }
            if (v71 >= 1)
            {
              swift_bridgeObjectRetain();
              uint64_t v75 = v107;
              swift_bridgeObjectRetain();
              uint64_t v76 = 0;
              uint64_t v116 = v71;
              while (1)
              {
                uint64_t v119 = v76;
                if ((v113 & 0xC000000000000001) != 0) {
                  MEMORY[0x1C87588E0](v76, v113);
                }
                else {
                  swift_retain();
                }
                uint64_t v77 = sub_1C246AE18();
                swift_release();
                unint64_t v78 = *(void *)(v75 + 16);
                unint64_t v79 = *(void *)(v77 + 16);
                int64_t v80 = v79 >= v78 ? *(void *)(v75 + 16) : *(void *)(v77 + 16);
                uint64_t v132 = MEMORY[0x1E4FBC860];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1C2274ACC(0, v80, 0);
                uint64_t v127 = v77;
                int64_t v122 = v79;
                unint64_t v125 = v78;
                if (v80) {
                  break;
                }
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
LABEL_176:
                if (v125 > v122)
                {
                  uint64_t v88 = 0;
                  if (v80 <= v122) {
                    int64_t v89 = v122;
                  }
                  else {
                    int64_t v89 = v80;
                  }
                  int64_t v90 = v89 - v80;
                  unint64_t v91 = v125 - v80;
                  int64_t v92 = v122 - v80;
                  uint64_t v93 = v75 + 8 * v80 + 32;
                  uint64_t v94 = v127 + 8 * v80 + 32;
                  while (v91 != v88)
                  {
                    if (v92 == v88) {
                      goto LABEL_157;
                    }
                    if (v90 == v88) {
                      goto LABEL_200;
                    }
                    if (*(double *)(v93 + 8 * v88) > *(double *)(v94 + 8 * v88)) {
                      uint64_t v95 = *(void *)(v93 + 8 * v88);
                    }
                    else {
                      uint64_t v95 = *(void *)(v94 + 8 * v88);
                    }
                    unint64_t v97 = *(void *)(v132 + 16);
                    unint64_t v96 = *(void *)(v132 + 24);
                    if (v97 >= v96 >> 1) {
                      sub_1C2274ACC(v96 > 1, v97 + 1, 1);
                    }
                    *(void *)(v132 + 16) = v97 + 1;
                    *(void *)(v132 + 8 * v97 + 32) = v95;
                    if (v91 == ++v88) {
                      goto LABEL_157;
                    }
                  }
                  goto LABEL_199;
                }
LABEL_157:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
                uint64_t v76 = v119 + 1;
                swift_bridgeObjectRelease();
                uint64_t v75 = v132;
                if (v119 + 1 == v116)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  uint64_t v3 = *(void *)(v132 + 16);
                  swift_bridgeObjectRelease();
                  if (v3 != v108)
                  {
                    swift_release();
                    uint64_t v38 = v110;
                    if (v68 != v109) {
                      goto LABEL_143;
                    }
                    goto LABEL_218;
                  }
LABEL_201:
                  swift_bridgeObjectRelease();
                  sub_1C21F4424(v104 + 72, (uint64_t)(a3 + 2));
                  return swift_release();
                }
              }
              uint64_t v81 = (double *)(v75 + 32);
              uint64_t v82 = (double *)(v77 + 32);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              int64_t v83 = v80;
              unint64_t v84 = v78;
              while (v84)
              {
                if (!v79) {
                  goto LABEL_198;
                }
                if (*v81 > *v82) {
                  double v85 = *v81;
                }
                else {
                  double v85 = *v82;
                }
                unint64_t v87 = *(void *)(v132 + 16);
                unint64_t v86 = *(void *)(v132 + 24);
                if (v87 >= v86 >> 1) {
                  sub_1C2274ACC(v86 > 1, v87 + 1, 1);
                }
                --v79;
                *(void *)(v132 + 16) = v87 + 1;
                *(double *)(v132 + 8 * v87 + 32) = v85;
                --v84;
                ++v82;
                ++v81;
                if (!--v83) {
                  goto LABEL_176;
                }
              }
              __break(1u);
LABEL_198:
              __break(1u);
LABEL_199:
              __break(1u);
LABEL_200:
              __break(1u);
              goto LABEL_201;
            }
            goto LABEL_215;
          }
          break;
        }
        __break(1u);
      }
    }
    uint64_t v3 = v110;
    unint64_t v6 = v103;
  }
  while (v5 != v109);
LABEL_216:
  __break(1u);
LABEL_217:
  swift_bridgeObjectRelease();
  a3[1] = v3;
  __break(1u);
LABEL_218:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

void sub_1C246A72C(void *a1, void *a2, double a3)
{
  if (qword_1EA2DD588 != -1) {
LABEL_79:
  }
    swift_once();
  double v6 = *(double *)&qword_1EA303928;
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  __swift_project_boxed_opaque_existential_1Tm(a2, v7);
  double v9 = 0.0;
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8))
  {
    uint64_t v10 = a2[3];
    uint64_t v11 = a2[4];
    __swift_project_boxed_opaque_existential_1Tm(a2, v10);
    double v9 = (*(double (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11) + a3;
  }
  if (qword_1EA2DD570 != -1) {
    swift_once();
  }
  double v12 = *(double *)&qword_1EA303910;
  uint64_t v13 = a1[2];
  if (v13)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x1E4FBC860];
    do
    {
      double v18 = *(double *)&a1[v14 + 4];
      if (v18 > 0.0)
      {
        *(void *)&v82[0] = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C2274ACC(0, *(void *)(v15 + 16) + 1, 1);
          uint64_t v15 = *(void *)&v82[0];
        }
        unint64_t v17 = *(void *)(v15 + 16);
        unint64_t v16 = *(void *)(v15 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1C2274ACC(v16 > 1, v17 + 1, 1);
          uint64_t v15 = *(void *)&v82[0];
        }
        *(void *)(v15 + 16) = v17 + 1;
        *(double *)(v15 + 8 * v17 + 32) = v18;
      }
      ++v14;
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
  }
  uint64_t v19 = *(void *)(v15 + 16);
  swift_release();
  uint64_t v20 = a2[3];
  uint64_t v21 = a2[4];
  __swift_project_boxed_opaque_existential_1Tm(a2, v20);
  BOOL v22 = ((*(uint64_t (**)(uint64_t, uint64_t))(v21 + 56))(v20, v21) & 1) == 0;
  BOOL v23 = __OFSUB__(v19, v22);
  uint64_t v24 = v19 - v22;
  if (v23)
  {
    __break(1u);
LABEL_81:
    swift_once();
    goto LABEL_56;
  }
  double v25 = v12 - (v6 + v9);
  double v26 = (double)v24;
  uint64_t v27 = a2[3];
  uint64_t v28 = a2[4];
  __swift_project_boxed_opaque_existential_1Tm(a2, v27);
  double v29 = (*(double (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28) * v26;
  uint64_t v30 = a2[3];
  uint64_t v31 = a2[4];
  __swift_project_boxed_opaque_existential_1Tm(a2, v30);
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 72);
  swift_bridgeObjectRetain();
  uint64_t v33 = v32(v30, v31);
  uint64_t v34 = *(void *)(v33 + 16);
  if (!v34)
  {
    swift_bridgeObjectRelease();
    uint64_t v55 = a1[2];
    if (v55) {
      goto LABEL_48;
    }
    goto LABEL_55;
  }
  uint64_t v77 = v13;
  unint64_t v78 = a2;
  unint64_t v35 = 0;
  a3 = v25 - v29;
  uint64_t v36 = v33 + 32;
  while (1)
  {
    if (v35 >= *(void *)(v33 + 16))
    {
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
      goto LABEL_79;
    }
    int64_t v37 = *(void *)(v36 + 8 * v35);
    if (v37 >= v13) {
      goto LABEL_22;
    }
    if (v37 < 0) {
      goto LABEL_73;
    }
    if ((unint64_t)v37 >= a1[2]) {
      goto LABEL_74;
    }
    uint64_t v38 = v33;
    a2 = a1;
    a1 += 4;
    double v39 = *(double *)&a1[v37];
    uint64_t v40 = v78[3];
    uint64_t v41 = v78[4];
    __swift_project_boxed_opaque_existential_1Tm(v78, v40);
    uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 80))(v40, v41);
    if ((unint64_t)v37 >= *(void *)(v42 + 16)) {
      goto LABEL_75;
    }
    double v43 = *(double *)(v42 + 8 * v37 + 32);
    swift_bridgeObjectRelease();
    if (v43 < v39) {
      break;
    }
    a1 = a2;
    uint64_t v33 = v38;
LABEL_21:
    uint64_t v13 = v77;
LABEL_22:
    if (++v35 == v34)
    {
      swift_bridgeObjectRelease();
      goto LABEL_47;
    }
  }
  uint64_t v44 = a2[2];
  if (!v44)
  {
    double v45 = 0.0;
    if (a3 >= 0.0) {
      goto LABEL_46;
    }
    goto LABEL_35;
  }
  double v45 = 0.0;
  uint64_t v46 = (double *)a1;
  uint64_t v47 = a2[2];
  do
  {
    double v48 = *v46++;
    double v45 = v45 + v48;
    --v47;
  }
  while (v47);
  if (a3 < v45)
  {
LABEL_35:
    if (v37 >= v44) {
      goto LABEL_76;
    }
    double v49 = *(double *)&a1[v37];
    uint64_t v50 = v78[3];
    uint64_t v51 = v78[4];
    __swift_project_boxed_opaque_existential_1Tm(v78, v50);
    uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 80))(v50, v51);
    if (v37 >= *(void *)(v52 + 16)) {
      goto LABEL_77;
    }
    double v53 = a3 - (v45 - v49);
    double v54 = *(double *)(v52 + 8 * v37 + 32);
    swift_bridgeObjectRelease();
    if (v53 <= v54) {
      double v53 = v54;
    }
    a1 = a2;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a1 = sub_1C23C6FCC(a2);
    }
    if (v37 >= a1[2]) {
      goto LABEL_78;
    }
    uint64_t v33 = v38;
    *(double *)&a1[v37 + 4] = v53;
    goto LABEL_21;
  }
LABEL_46:
  swift_bridgeObjectRelease();
  a1 = a2;
LABEL_47:
  a2 = v78;
  uint64_t v55 = a1[2];
  if (!v55) {
    goto LABEL_55;
  }
LABEL_48:
  if (v55 == 1)
  {
    uint64_t v56 = 0;
    double v57 = 0.0;
    goto LABEL_53;
  }
  uint64_t v56 = v55 & 0x7FFFFFFFFFFFFFFELL;
  uint64_t v58 = (double *)(a1 + 5);
  double v57 = 0.0;
  uint64_t v59 = v55 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    double v57 = v57 + *(v58 - 1) + *v58;
    v58 += 2;
    v59 -= 2;
  }
  while (v59);
  if (v55 != v56)
  {
LABEL_53:
    uint64_t v60 = v55 - v56;
    unint64_t v61 = (double *)&a1[v56 + 4];
    do
    {
      double v62 = *v61++;
      double v57 = v57 + v62;
      --v60;
    }
    while (v60);
  }
LABEL_55:
  if (qword_1EA2DD530 != -1) {
    goto LABEL_81;
  }
LABEL_56:
  uint64_t v63 = a2[3];
  uint64_t v64 = a2[4];
  __swift_project_boxed_opaque_existential_1Tm(a2, v63);
  uint64_t v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 88))(v63, v64);
  double v66 = 0.0;
  if (v67) {
    return;
  }
  uint64_t v68 = v65 + 1;
  if (__OFADD__(v65, 1))
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  uint64_t v69 = a1[2];
  if (v69 < v68)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  if (v68 < 0)
  {
LABEL_85:
    __break(1u);
    return;
  }
  sub_1C21F4424((uint64_t)a2, (uint64_t)v82);
  sub_1C21F4424((uint64_t)v82, (uint64_t)v79);
  uint64_t v70 = swift_allocObject();
  sub_1C21F44EC(v82, v70 + 16);
  if (v68 == v69)
  {
    swift_bridgeObjectRetain_n();
    swift_retain();
  }
  else
  {
    uint64_t v71 = a1 + 4;
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v72 = a1 + 5;
    uint64_t v73 = v68;
    while (1)
    {
      if (v73 < v68 || v73 >= v69)
      {
        __break(1u);
        goto LABEL_83;
      }
      double v76 = *(double *)&v71[v73];
      if (v76 <= 0.0) {
        break;
      }
LABEL_65:
      ++v73;
      uint64_t v74 = v80;
      uint64_t v75 = v81;
      __swift_project_boxed_opaque_existential_1Tm(v79, v80);
      double v66 = v66 + v76 + (*(double (**)(uint64_t, uint64_t))(v75 + 16))(v74, v75);
      if (v73 == v69) {
        goto LABEL_62;
      }
    }
    while (v69 - 1 != v73)
    {
      double v76 = *(double *)&v72[v73++];
      if (v76 > 0.0) {
        goto LABEL_65;
      }
    }
  }
LABEL_62:
  swift_release_n();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v79);
}

uint64_t sub_1C246AE18()
{
  uint64_t v1 = v0;
  unint64_t v2 = *(void *)(v0 + 80);
  unint64_t v20 = MEMORY[0x1E4FBC860];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_1C2550620();
    uint64_t v3 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = MEMORY[0x1C87588E0](v5++, v2);
      unint64_t v7 = *(void *)(v6 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1C2272FBC(v7);
    }
    while (v3 != v5);
  }
  else
  {
    unint64_t v8 = v2 + 32;
    do
    {
      v8 += 8;
      unint64_t v9 = swift_bridgeObjectRetain();
      sub_1C2272FBC(v9);
      --v3;
    }
    while (v3);
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  uint64_t v10 = sub_1C2468A94(v20);
  uint64_t result = swift_bridgeObjectRelease();
  if (!*(void *)(v10 + 16))
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v11 = sub_1C23C6988(*(void *)(*(void *)(v10 + 32) + 16), -INFINITY);
  double v12 = (void *)v11;
  uint64_t v13 = *(void *)(v10 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    uint64_t v15 = v12;
    do
    {
      uint64_t v16 = *(void *)(v10 + 8 * v14++ + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1C2468E2C((void *(*)(uint64_t *__return_ptr, uint64_t *))sub_1C246B4C4, 0, (uint64_t)v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = (void *)v11;
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v1 + 72);
  if (v17)
  {
    uint64_t v18 = *(void *)(v17 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C2468BEC((uint64_t)v15, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return v19;
  }
  return (uint64_t)v15;
}

void sub_1C246B07C(void *a1, char a2, void *a3)
{
  uint64_t v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v9 = a1[6];
  uint64_t v10 = a1[7];
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)*a3;
  unint64_t v12 = sub_1C245774C(v8);
  uint64_t v14 = v11[2];
  BOOL v15 = (v13 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15)) {
    goto LABEL_24;
  }
  unint64_t v17 = v12;
  char v18 = v13;
  uint64_t v19 = v11[3];
  swift_bridgeObjectRetain();
  if (v19 >= v16)
  {
    if (a2)
    {
      if (v18) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1C24AE4A4();
      if (v18) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v24 = (void *)*a3;
    *(void *)(*a3 + 8 * (v17 >> 6) + 64) |= 1 << v17;
    *(void *)(v24[6] + 8 * v17) = v8;
    double v25 = (void *)(v24[7] + 24 * v17);
    *double v25 = v7;
    v25[1] = v9;
    void v25[2] = v10;
    uint64_t v26 = v24[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    void v24[2] = v28;
    uint64_t v29 = v4 - 1;
    if (!v29)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v30 = a1 + 10;
    while (1)
    {
      uint64_t v32 = *((void *)v30 - 2);
      uint64_t v31 = *((void *)v30 - 1);
      long long v48 = *v30;
      uint64_t v33 = (void *)*a3;
      unint64_t v34 = sub_1C245774C(v32);
      uint64_t v36 = v33[2];
      BOOL v37 = (v35 & 1) == 0;
      uint64_t v38 = v36 + v37;
      if (__OFADD__(v36, v37)) {
        break;
      }
      unint64_t v39 = v34;
      char v40 = v35;
      uint64_t v41 = v33[3];
      swift_bridgeObjectRetain();
      if (v41 < v38)
      {
        sub_1C227AF18(v38, 1);
        unint64_t v42 = sub_1C245774C(v32);
        if ((v40 & 1) != (v43 & 1)) {
          goto LABEL_26;
        }
        unint64_t v39 = v42;
      }
      if (v40) {
        goto LABEL_10;
      }
      uint64_t v44 = (void *)*a3;
      *(void *)(*a3 + 8 * (v39 >> 6) + 64) |= 1 << v39;
      *(void *)(v44[6] + 8 * v39) = v32;
      uint64_t v45 = v44[7] + 24 * v39;
      *(void *)uint64_t v45 = v31;
      *(_OWORD *)(v45 + 8) = v48;
      uint64_t v46 = v44[2];
      BOOL v27 = __OFADD__(v46, 1);
      uint64_t v47 = v46 + 1;
      if (v27) {
        goto LABEL_25;
      }
      v44[2] = v47;
      v30 += 2;
      if (!--v29) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1C227AF18(v16, a2 & 1);
  unint64_t v20 = sub_1C245774C(v8);
  if ((v18 & 1) == (v21 & 1))
  {
    unint64_t v17 = v20;
    if ((v18 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    BOOL v22 = (void *)swift_allocError();
    swift_willThrow();
    id v23 = v22;
    sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1C2550910();
  __break(1u);
LABEL_27:
  sub_1C25503A0();
  sub_1C254F5A0();
  sub_1C25504F0();
  sub_1C254F5A0();
  sub_1C25505F0();
  __break(1u);
}

uint64_t sub_1C246B424(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

double *sub_1C246B4C4@<X0>(double *result@<X0>, double *a2@<X8>)
{
  double v2 = *result;
  if (*result <= result[1]) {
    double v2 = result[1];
  }
  *a2 = v2;
  return result;
}

uint64_t sub_1C246B4D8(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4) {
    return v5;
  }
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C2274A8C(0, v4, 0);
  uint64_t v5 = v25;
  uint64_t result = sub_1C246B424(a1);
  uint64_t v8 = result;
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(a1 + 36) != v10) {
      goto LABEL_16;
    }
    uint64_t v22 = *(void *)(*(void *)(a1 + 48) + 8 * v8);
    sub_1C2469890(&v22, a2, (uint64_t *)v23);
    if (v3)
    {
      swift_release();
      return v5;
    }
    uint64_t v3 = 0;
    uint64_t v25 = v5;
    unint64_t v14 = *(void *)(v5 + 16);
    unint64_t v13 = *(void *)(v5 + 24);
    if (v14 >= v13 >> 1)
    {
      sub_1C2274A8C(v13 > 1, v14 + 1, 1);
      uint64_t v5 = v25;
    }
    *(void *)(v5 + 16) = v14 + 1;
    uint64_t v15 = v5 + 56 * v14;
    long long v16 = v23[0];
    long long v17 = v23[1];
    long long v18 = v23[2];
    *(void *)(v15 + 80) = v24;
    *(_OWORD *)(v15 + 48) = v17;
    *(_OWORD *)(v15 + 64) = v18;
    *(_OWORD *)(v15 + 32) = v16;
    uint64_t result = sub_1C24861A0(v8, v10, v12 & 1, a1);
    uint64_t v8 = result;
    uint64_t v10 = v19;
    char v12 = v20 & 1;
    if (!--v4)
    {
      sub_1C220012C(result, v19, v20 & 1);
      return v5;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1C246B690(unint64_t a1, void *a2, void *a3, double a4)
{
  unint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_42;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v61 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2550490();
    if ((v6 & 0x8000000000000000) == 0)
    {
      uint64_t v8 = 0;
      uint64_t v47 = a3 + 9;
      unint64_t v48 = v5 & 0xC000000000000001;
      unint64_t v43 = v5 + 32;
      uint64_t v44 = v6;
      unint64_t v45 = v5;
      while (1)
      {
        if (v8 == v6)
        {
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        uint64_t v50 = v8;
        if (v48)
        {
          uint64_t v9 = MEMORY[0x1C87588E0](v8, v5);
        }
        else
        {
          uint64_t v9 = *(void *)(v43 + 8 * v8);
          swift_retain();
        }
        uint64_t v21 = MEMORY[0x1E4FBC860];
        uint64_t v22 = a3[12];
        uint64_t v23 = a3[13];
        __swift_project_boxed_opaque_existential_1Tm(v47, v22);
        (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
        uint64_t v24 = a3[12];
        uint64_t v25 = a3[13];
        __swift_project_boxed_opaque_existential_1Tm(v47, v24);
        uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 88))(v24, v25);
        char v28 = v27;
        unint64_t v5 = *(void *)(v9 + 80);
        if (v5 >> 62)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v29 = sub_1C2550620();
          if (v29)
          {
LABEL_14:
            *(void *)&v59[0] = v21;
            sub_1C2550490();
            if ((v29 & 0x8000000000000000) == 0)
            {
              uint64_t v46 = v9;
              uint64_t v30 = 0;
              char v31 = v28 & 1;
              unint64_t v52 = v5;
              unint64_t v53 = v5 & 0xC000000000000001;
              uint64_t v51 = v29;
              while (v30 != v29)
              {
                uint64_t v57 = v30;
                if (v53) {
                  uint64_t v38 = MEMORY[0x1C87588E0](v30, v5);
                }
                else {
                  uint64_t v38 = swift_retain();
                }
                uint64_t v39 = MEMORY[0x1E4FBC860];
                uint64_t v55 = v38;
                unint64_t v40 = *(void *)(v38 + 48);
                if (v40 >> 62)
                {
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v41 = sub_1C2550620();
                  if (v41)
                  {
LABEL_24:
                    uint64_t v60 = v39;
                    sub_1C2550490();
                    if ((v41 & 0x8000000000000000) == 0)
                    {
                      uint64_t v42 = 0;
                      while (v41 != v42)
                      {
                        if ((v40 & 0xC000000000000001) != 0) {
                          MEMORY[0x1C87588E0](v42, v40);
                        }
                        else {
                          swift_retain();
                        }
                        ++v42;
                        sub_1C23CA894(a2, v26, v31, a4);
                        swift_release();
                        sub_1C2550460();
                        sub_1C25504A0();
                        sub_1C25504B0();
                        sub_1C2550470();
                        if (v41 == v42)
                        {
                          uint64_t v54 = v60;
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          goto LABEL_17;
                        }
                      }
                      __break(1u);
                      return v61;
                    }
LABEL_39:
                    __break(1u);
                    goto LABEL_40;
                  }
                }
                else
                {
                  uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v41) {
                    goto LABEL_24;
                  }
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v54 = v39;
LABEL_17:
                uint64_t v30 = v57 + 1;
                uint64_t v32 = *(void **)(v55 + 16);
                uint64_t v33 = *(void *)(v55 + 24);
                uint64_t v34 = *(void *)(v55 + 32);
                char v35 = *(unsigned char *)(v55 + 40);
                _s15SizedValueGroupCMa();
                uint64_t v36 = swift_allocObject();
                *(void *)(v36 + 16) = v32;
                *(void *)(v36 + 24) = v33;
                *(void *)(v36 + 32) = v34;
                *(unsigned char *)(v36 + 40) = v35;
                *(void *)(v36 + 48) = v54;
                id v37 = v32;
                swift_release();
                sub_1C2550460();
                sub_1C25504A0();
                sub_1C25504B0();
                sub_1C2550470();
                uint64_t v29 = v51;
                unint64_t v5 = v52;
                if (v57 + 1 == v51)
                {
                  uint64_t v56 = *(void *)&v59[0];
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v9 = v46;
                  goto LABEL_7;
                }
              }
              __break(1u);
              goto LABEL_39;
            }
LABEL_41:
            __break(1u);
LABEL_42:
            swift_bridgeObjectRetain();
            uint64_t v6 = sub_1C2550620();
            swift_bridgeObjectRelease();
            goto LABEL_3;
          }
        }
        else
        {
          uint64_t v29 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v29) {
            goto LABEL_14;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v56 = v21;
LABEL_7:
        uint64_t v8 = v50 + 1;
        uint64_t v10 = *(void **)(v9 + 16);
        uint64_t v11 = *(void *)(v9 + 24);
        uint64_t v12 = *(void *)(v9 + 32);
        unint64_t v13 = *(void **)(v9 + 40);
        uint64_t v14 = *(void *)(v9 + 48);
        uint64_t v15 = *(void *)(v9 + 56);
        char v16 = *(unsigned char *)(v9 + 64);
        uint64_t v17 = *(void *)(v9 + 72);
        sub_1C21F4424(v9 + 88, (uint64_t)v59);
        _s11SizedRecordCMa();
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 128) = 0;
        *(unsigned char *)(v18 + 136) = 1;
        *(void *)(v18 + 16) = v10;
        *(void *)(v18 + 24) = v11;
        *(void *)(v18 + 32) = v12;
        *(void *)(v18 + 40) = v13;
        *(void *)(v18 + 48) = v14;
        *(void *)(v18 + 56) = v15;
        *(unsigned char *)(v18 + 64) = v16;
        *(void *)(v18 + 72) = v17;
        *(void *)(v18 + 80) = v56;
        sub_1C21F44EC(v59, v18 + 88);
        swift_retain();
        id v19 = v10;
        id v20 = v13;
        swift_release();
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
        uint64_t v6 = v44;
        unint64_t v5 = v45;
        if (v50 + 1 == v44) {
          return v61;
        }
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C246BBC0(unint64_t a1, unint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v4) {
      return result;
    }
    uint64_t v29 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2550490();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    unint64_t v26 = a2;
    uint64_t v6 = 0;
    unint64_t v27 = v3 & 0xC000000000000001;
    while (v4 != v6)
    {
      if (v27)
      {
        unint64_t v7 = (void *)MEMORY[0x1C87588E0](v6, v3);
      }
      else
      {
        unint64_t v7 = *(void **)(v3 + 8 * v6 + 32);
        swift_retain();
      }
      a2 = v26;
      uint64_t v8 = sub_1C23C628C();
      if (!*(void *)(v26 + 16)) {
        goto LABEL_16;
      }
      unint64_t v9 = sub_1C245774C(v8);
      if ((v10 & 1) == 0) {
        goto LABEL_17;
      }
      ++v6;
      uint64_t v11 = *(void *)(v26 + 56) + 24 * v9;
      uint64_t v12 = *(void **)v11;
      double v13 = *(double *)(v11 + 16);
      swift_bridgeObjectRetain_n();
      swift_retain();
      unint64_t v14 = swift_bridgeObjectRetain();
      uint64_t v15 = sub_1C246B690(v14, v12, v7, v13);
      swift_bridgeObjectRelease();
      swift_release();
      a2 = v3;
      char v16 = (void *)v7[2];
      uint64_t v17 = v7[3];
      uint64_t v18 = v7[4];
      uint64_t v19 = v4;
      id v20 = (void *)v7[5];
      uint64_t v21 = v7[6];
      uint64_t v22 = v7[7];
      sub_1C21F4424((uint64_t)(v7 + 9), (uint64_t)v28);
      _s12SizedSectionCMa();
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 112) = 0;
      *(unsigned char *)(v23 + 120) = 1;
      *(void *)(v23 + 128) = 0;
      *(unsigned char *)(v23 + 136) = 1;
      *(void *)(v23 + 144) = 0;
      *(unsigned char *)(v23 + 152) = 1;
      *(void *)(v23 + 16) = v16;
      *(void *)(v23 + 24) = v17;
      *(void *)(v23 + 32) = v18;
      *(void *)(v23 + 40) = v20;
      *(void *)(v23 + 64) = v15;
      *(void *)(v23 + 48) = v21;
      *(void *)(v23 + 56) = v22;
      sub_1C21F44EC(v28, v23 + 72);
      id v24 = v16;
      unint64_t v3 = a2;
      id v25 = v20;
      uint64_t v4 = v19;
      swift_release();
      swift_bridgeObjectRelease_n();
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      if (v19 == v6) {
        return v29;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C246BE30(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_1C2468794(a1);
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v15 = (double *)(v13 + 32);
    double v16 = 0.0;
    do
    {
      double v17 = *v15++;
      double v18 = v17;
      if (v16 <= v17) {
        double v16 = v18;
      }
      --v14;
    }
    while (v14);
  }
  else
  {
    double v16 = 0.0;
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1C24688F8(a1);
  uint64_t v20 = sub_1C2492670(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C246B4D8(v20, a1);
  swift_bridgeObjectRelease();
  unint64_t v46 = a1;
  swift_bridgeObjectRelease();
  int64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v42 = a3;
    uint64_t v43 = a4;
    uint64_t v44 = a6;
    uint64_t v45 = a7;
    uint64_t v51 = MEMORY[0x1E4FBC860];
    sub_1C2274A6C(0, v22, 0);
    uint64_t v23 = v21 + 32;
    uint64_t v24 = v51;
    do
    {
      sub_1C246C160(v23, (uint64_t)v49);
      uint64_t v26 = v49[0];
      id v25 = (void *)v49[1];
      sub_1C21F4424((uint64_t)v50, (uint64_t)v48);
      sub_1C246A72C(v25, v50, v16);
      uint64_t v28 = v27;
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      sub_1C246C1C4((uint64_t)v49);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C2274A6C(0, *(void *)(v24 + 16) + 1, 1);
        uint64_t v24 = v51;
      }
      unint64_t v34 = *(void *)(v24 + 16);
      unint64_t v33 = *(void *)(v24 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1C2274A6C(v33 > 1, v34 + 1, 1);
        uint64_t v24 = v51;
      }
      *(void *)(v24 + 16) = v34 + 1;
      char v35 = (void *)(v24 + 32 * v34);
      v35[4] = v26;
      v35[5] = v28;
      v35[6] = v30;
      v35[7] = v32;
      v23 += 56;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    a6 = v44;
    a7 = v45;
    a4 = v43;
    a3 = v42;
    if (*(void *)(v24 + 16)) {
      goto LABEL_16;
    }
LABEL_18:
    uint64_t v36 = MEMORY[0x1E4FBC868];
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(MEMORY[0x1E4FBC860] + 16)) {
    goto LABEL_18;
  }
LABEL_16:
  sub_1C246C220();
  uint64_t v36 = sub_1C2550680();
LABEL_19:
  v49[0] = v36;
  id v37 = (void *)swift_bridgeObjectRetain();
  sub_1C246B07C(v37, 1, v49);
  swift_bridgeObjectRelease();
  unint64_t v38 = v49[0];
  swift_retain();
  uint64_t v39 = sub_1C246BBC0(v46, v38);
  swift_bridgeObjectRelease();
  swift_release();
  id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B18]), sel_init);
  _s4PageCMa();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 120) = 1;
  *(void *)(result + 16) = v39;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(void *)(result + 48) = a5;
  *(void *)(result + 56) = a6;
  *(void *)(result + 64) = a7;
  *(void *)(result + 72) = v40;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(double *)(result + 96) = v16;
  *(void *)(result + 104) = v38;
  *(void *)(result + 112) = 0;
  return result;
}

uint64_t sub_1C246C160(uint64_t a1, uint64_t a2)
{
  sub_1C2283DD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C246C1C4(uint64_t a1)
{
  sub_1C2283DD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C246C220()
{
  if (!qword_1EA2DF6B8)
  {
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF6B8);
    }
  }
}

uint64_t sub_1C246C288()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C246C2C0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 16);
  return result;
}

void _s13PaginatedDataVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 144);
}

uint64_t _s13PaginatedDataVwcp(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  unint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v6 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v7;
  uint64_t v8 = *(void **)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  unint64_t v9 = *(void **)(a2 + 144);
  *(void *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  id v10 = v3;
  id v11 = v4;
  id v12 = v5;
  id v13 = v6;
  swift_bridgeObjectRetain();
  id v14 = v8;
  id v15 = v9;
  return a1;
}

uint64_t _s13PaginatedDataVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  unint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  long long v7 = *(void **)(a2 + 24);
  uint64_t v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v10 = *(void **)(a1 + 48);
  id v11 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v11;
  id v12 = v11;

  long long v13 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v13;
  id v14 = *(void **)(a1 + 80);
  id v15 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v15;
  id v16 = v15;

  long long v17 = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v17;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  double v18 = *(void **)(a2 + 120);
  uint64_t v19 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = v18;
  id v20 = v18;

  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v21 = *(void **)(a2 + 144);
  int64_t v22 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = v21;
  id v23 = v21;

  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t _s13PaginatedDataVwta(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  long long v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  long long v6 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v7 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);

  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  swift_bridgeObjectRelease();
  long long v8 = *(void **)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);

  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  long long v9 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);

  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  return a1;
}

uint64_t _s13PaginatedDataVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13PaginatedDataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13PaginatedDataVMa()
{
  return &_s13PaginatedDataVN;
}

double *sub_1C246C6EC@<X0>(double *a1@<X0>, double *a2@<X8>)
{
  return sub_1C246B4C4(a1, a2);
}

void AccountStatusSummaryTileFeedItemData.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C246E828(0, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v41 - v9;
  id v11 = a1;
  sub_1C22AD574(v11, 0, 0, 0, (uint64_t)v10);
  uint64_t v12 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12) == 1)
  {

    sub_1C246E8F0((uint64_t)v10, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    uint64_t v13 = type metadata accessor for AccountStatusSummaryTileFeedItemData();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
  else
  {
    sub_1C246E8F0((uint64_t)v10, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    id v14 = objc_msgSend(v11, sel_identifier);
    sub_1C254CB20();

    id v15 = objc_msgSend(v11, sel_provenance);
    id v16 = objc_msgSend(v15, sel_brand);

    if (v16)
    {
      uint64_t v46 = v4;
      id v17 = objc_msgSend(v16, sel_externalID);
      uint64_t v18 = sub_1C254F470();
      uint64_t v44 = v19;
      uint64_t v45 = v18;

      id v20 = objc_msgSend(v16, sel_batchID);
      uint64_t v21 = sub_1C254F470();
      uint64_t v42 = v22;
      uint64_t v43 = v21;

      id v23 = objc_msgSend(v11, sel_provenance);
      id v24 = objc_msgSend(v23, sel_title);

      uint64_t v25 = sub_1C254F470();
      uint64_t v27 = v26;

      id v28 = objc_msgSend(v11, sel_provenance);
      id v29 = objc_msgSend(v28, sel_subtitle);

      uint64_t v30 = v5;
      if (v29)
      {
        uint64_t v31 = sub_1C254F470();
        unint64_t v33 = v32;
      }
      else
      {
        uint64_t v31 = 0;
        unint64_t v33 = 0xE000000000000000;
      }
      id v34 = objc_msgSend(v11, sel_state);
      char v35 = (int *)type metadata accessor for AccountStatusSummaryTileFeedItemData();
      HKClinicalAccount.summaryTileType.getter(a2 + v35[9]);

      (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(a2, v7, v46);
      uint64_t v36 = (uint64_t *)(a2 + v35[5]);
      uint64_t v37 = v44;
      *uint64_t v36 = v45;
      v36[1] = v37;
      uint64_t v38 = v42;
      v36[2] = v43;
      v36[3] = v38;
      uint64_t v39 = (uint64_t *)(a2 + v35[6]);
      *uint64_t v39 = v25;
      v39[1] = v27;
      id v40 = (uint64_t *)(a2 + v35[7]);
      uint64_t *v40 = v31;
      v40[1] = v33;
      *(void *)(a2 + v35[8]) = v34;
      *(void *)(a2 + v35[10]) = 0;
      (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v35 - 1) + 56))(a2, 0, 1, v35);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for AccountStatusSummaryTileFeedItemData()
{
  uint64_t result = qword_1EBB6E430;
  if (!qword_1EBB6E430) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AccountStatusSummaryTileFeedItemData.accountId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C254CB40();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t AccountStatusSummaryTileFeedItemData.brandId.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for AccountStatusSummaryTileFeedItemData() + 20));
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  uint64_t v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t AccountStatusSummaryTileFeedItemData.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccountStatusSummaryTileFeedItemData() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountStatusSummaryTileFeedItemData.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccountStatusSummaryTileFeedItemData() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountStatusSummaryTileFeedItemData.state.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for AccountStatusSummaryTileFeedItemData() + 32));
}

uint64_t AccountStatusSummaryTileFeedItemData.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AccountStatusSummaryTileFeedItemData() + 36);
  return sub_1C224BDD4(v3, a1);
}

uint64_t AccountStatusSummaryTileFeedItemData.accounts.getter()
{
  type metadata accessor for AccountStatusSummaryTileFeedItemData();
  return swift_bridgeObjectRetain();
}

uint64_t AccountStatusSummaryTileFeedItemData.hash(into:)(uint64_t a1)
{
  uint64_t v3 = sub_1C254E290();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v14 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C246E828(0, &qword_1EBB6E3F8, MEMORY[0x1E4F67698], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v13 - v7;
  sub_1C254CB40();
  sub_1C2470140((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
  sub_1C254F380();
  uint64_t v9 = type metadata accessor for AccountStatusSummaryTileFeedItemData();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  sub_1C25509D0();
  sub_1C224BDD4(v1 + *(int *)(v9 + 36), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
  {
    sub_1C25509E0();
  }
  else
  {
    id v10 = v14;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v14, v8, v3);
    sub_1C25509E0();
    sub_1C2470140(&qword_1EA2E3BB0, MEMORY[0x1E4F67698]);
    sub_1C254F380();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
  }
  uint64_t v11 = *(void *)(v1 + *(int *)(v9 + 40));
  if (!v11) {
    return sub_1C25509E0();
  }
  sub_1C25509E0();
  swift_bridgeObjectRetain();
  sub_1C23EA9F4(a1, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C246D0E4()
{
  uint64_t result = 0x49746E756F636361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6449646E617262;
      break;
    case 2:
      uint64_t result = 0x656C746974;
      break;
    case 3:
      uint64_t result = 0x656C746974627573;
      break;
    case 4:
      uint64_t result = 0x6574617473;
      break;
    case 5:
      uint64_t result = 1701869940;
      break;
    case 6:
      uint64_t result = 0x73746E756F636361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C246D1BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C246FE6C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C246D1E4(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1C246D1F0(uint64_t a1)
{
  unint64_t v2 = sub_1C246E780();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C246D22C(uint64_t a1)
{
  unint64_t v2 = sub_1C246E780();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AccountStatusSummaryTileFeedItemData.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C246E88C(0, &qword_1EA2E3BB8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C246E780();
  sub_1C2550A70();
  LOBYTE(v18) = 0;
  sub_1C254CB40();
  sub_1C2470140(&qword_1EA2DE8E8, MEMORY[0x1E4F27990]);
  sub_1C25507D0();
  if (!v2)
  {
    id v10 = (int *)type metadata accessor for AccountStatusSummaryTileFeedItemData();
    uint64_t v11 = (long long *)(v3 + v10[5]);
    long long v12 = *v11;
    uint64_t v14 = *((void *)v11 + 2);
    uint64_t v13 = *((void *)v11 + 3);
    long long v18 = v12;
    uint64_t v19 = v14;
    uint64_t v20 = v13;
    char v17 = 1;
    sub_1C246E7D4();
    sub_1C25507D0();
    LOBYTE(v18) = 2;
    sub_1C25507A0();
    LOBYTE(v18) = 3;
    sub_1C25507A0();
    *(void *)&long long v18 = *(void *)(v3 + v10[8]);
    char v17 = 4;
    type metadata accessor for HKClinicalAccountState(0);
    sub_1C2470140(&qword_1EA2E3BD0, type metadata accessor for HKClinicalAccountState);
    sub_1C25507D0();
    LOBYTE(v18) = 5;
    sub_1C254E290();
    sub_1C2470140(&qword_1EA2E3BD8, MEMORY[0x1E4F67698]);
    sub_1C2550790();
    *(void *)&long long v18 = *(void *)(v3 + v10[10]);
    char v17 = 6;
    sub_1C246E828(0, &qword_1EA2E3BE0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB320]);
    sub_1C246EA48(&qword_1EA2E3BE8, &qword_1EA2DE8E8);
    sub_1C2550790();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t AccountStatusSummaryTileFeedItemData.hashValue.getter()
{
  sub_1C25509C0();
  AccountStatusSummaryTileFeedItemData.hash(into:)((uint64_t)v1);
  return sub_1C2550A10();
}

uint64_t AccountStatusSummaryTileFeedItemData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  sub_1C246E828(0, &qword_1EBB6E3F8, MEMORY[0x1E4F67698], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v29 - v4;
  uint64_t v6 = sub_1C254CB40();
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v33 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C246E88C(0, &qword_1EA2E3BF0, MEMORY[0x1E4FBBDC0]);
  uint64_t v35 = v8;
  uint64_t v31 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v29 - v9;
  uint64_t v11 = (int *)type metadata accessor for AccountStatusSummaryTileFeedItemData();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C246E780();
  id v34 = v10;
  uint64_t v14 = (uint64_t)v36;
  sub_1C2550A50();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  id v29 = v5;
  uint64_t v15 = v32;
  uint64_t v36 = a1;
  LOBYTE(v37) = 0;
  sub_1C2470140(&qword_1EA2DE8D8, MEMORY[0x1E4F27990]);
  uint64_t v16 = v33;
  sub_1C2550740();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v13, v16, v6);
  char v40 = 1;
  sub_1C246E960();
  sub_1C2550740();
  uint64_t v17 = v38;
  uint64_t v18 = v39;
  uint64_t v19 = &v13[v11[5]];
  *(_OWORD *)uint64_t v19 = v37;
  *((void *)v19 + 2) = v17;
  *((void *)v19 + 3) = v18;
  LOBYTE(v37) = 2;
  uint64_t v20 = sub_1C2550710();
  uint64_t v21 = v31;
  uint64_t v22 = (uint64_t *)&v13[v11[6]];
  uint64_t *v22 = v20;
  v22[1] = v23;
  LOBYTE(v37) = 3;
  uint64_t v24 = sub_1C2550710();
  uint64_t v25 = (uint64_t *)&v13[v11[7]];
  *uint64_t v25 = v24;
  v25[1] = v26;
  type metadata accessor for HKClinicalAccountState(0);
  char v40 = 4;
  sub_1C2470140(&qword_1EA2E3C00, type metadata accessor for HKClinicalAccountState);
  sub_1C2550740();
  *(void *)&v13[v11[8]] = v37;
  sub_1C254E290();
  LOBYTE(v37) = 5;
  sub_1C2470140(&qword_1EA2E3C08, MEMORY[0x1E4F67698]);
  uint64_t v27 = (uint64_t)v29;
  sub_1C2550700();
  sub_1C246E9B4(v27, (uint64_t)&v13[v11[9]]);
  sub_1C246E828(0, &qword_1EA2E3BE0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB320]);
  char v40 = 6;
  sub_1C246EA48(&qword_1EA2E3C10, &qword_1EA2DE8D8);
  sub_1C2550700();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v34, v35);
  *(void *)&v13[v11[10]] = v37;
  sub_1C224C2B4((uint64_t)v13, v30);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
  return sub_1C246EB08((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AccountStatusSummaryTileFeedItemData);
}

uint64_t sub_1C246DDCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AccountStatusSummaryTileFeedItemData.init(from:)(a1, a2);
}

uint64_t sub_1C246DDE4(void *a1)
{
  return AccountStatusSummaryTileFeedItemData.encode(to:)(a1);
}

uint64_t sub_1C246DDFC()
{
  sub_1C25509C0();
  AccountStatusSummaryTileFeedItemData.hash(into:)((uint64_t)v1);
  return sub_1C2550A10();
}

uint64_t sub_1C246DE40()
{
  sub_1C25509C0();
  AccountStatusSummaryTileFeedItemData.hash(into:)((uint64_t)v1);
  return sub_1C2550A10();
}

uint64_t AccountStatusSummaryTileFeedItemData.init(accountId:type:accounts:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, a1, v8, v10);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  uint64_t v13 = (int *)type metadata accessor for AccountStatusSummaryTileFeedItemData();
  uint64_t v14 = a4 + v13[9];
  uint64_t v15 = sub_1C254E290();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v14, a2, v15);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4, v12, v8);
  uint64_t v18 = (void *)(a4 + v13[5]);
  void *v18 = 1162760014;
  v18[1] = 0xE400000000000000;
  v18[2] = 1162760014;
  v18[3] = 0xE400000000000000;
  uint64_t v19 = (void *)(a4 + v13[6]);
  *uint64_t v19 = 0xD000000000000019;
  v19[1] = 0x80000001C2587570;
  uint64_t v20 = (void *)(a4 + v13[7]);
  *uint64_t v20 = 0;
  v20[1] = 0xE000000000000000;
  *(void *)(a4 + v13[8]) = 3;
  *(void *)(a4 + v13[10]) = a3;
  return result;
}

uint64_t sub_1C246E090()
{
  return sub_1C254F6E0();
}

uint64_t sub_1C246E120()
{
  return sub_1C254F6C0();
}

uint64_t _s15HealthRecordsUI36AccountStatusSummaryTileFeedItemDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254E290();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v65[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C224BD54();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v65[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C246E828(0, &qword_1EBB6E3F8, MEMORY[0x1E4F67698], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v65[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v65[-v16];
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = &v65[-v19];
  if ((sub_1C254CB10() & 1) == 0) {
    return 0;
  }
  char v67 = v7;
  uint64_t v68 = v4;
  uint64_t v69 = v5;
  uint64_t v70 = v11;
  uint64_t v21 = (int *)type metadata accessor for AccountStatusSummaryTileFeedItemData();
  uint64_t v22 = v21[5];
  uint64_t v23 = *(void *)(a1 + v22);
  uint64_t v24 = *(void *)(a1 + v22 + 8);
  uint64_t v25 = *(void *)(a1 + v22 + 16);
  uint64_t v26 = *(void *)(a1 + v22 + 24);
  uint64_t v27 = (void *)(a2 + v22);
  uint64_t v28 = v27[2];
  uint64_t v29 = v27[3];
  BOOL v30 = v23 == *v27 && v24 == v27[1];
  uint64_t v71 = v21;
  if (v30 || (v31 = sub_1C2550870(), v21 = v71, v32 = v31, uint64_t result = 0, (v32 & 1) != 0))
  {
    if (v25 == v28 && v26 == v29 || (v34 = sub_1C2550870(), v21 = v71, v35 = v34, uint64_t result = 0, (v35 & 1) != 0))
    {
      uint64_t v36 = v21[6];
      uint64_t v37 = *(void *)(a1 + v36);
      uint64_t v38 = *(void *)(a1 + v36 + 8);
      uint64_t v39 = (void *)(a2 + v36);
      if (v37 == *v39 && v38 == v39[1]) {
        goto LABEL_34;
      }
      char v40 = sub_1C2550870();
      uint64_t v21 = v71;
      char v41 = v40;
      uint64_t result = 0;
      if (v41)
      {
LABEL_34:
        uint64_t v42 = v21[7];
        uint64_t v43 = *(void *)(a1 + v42);
        uint64_t v44 = *(void *)(a1 + v42 + 8);
        uint64_t v45 = (void *)(a2 + v42);
        if (v43 == *v45 && v44 == v45[1]) {
          goto LABEL_16;
        }
        char v46 = sub_1C2550870();
        uint64_t v21 = v71;
        char v47 = v46;
        uint64_t result = 0;
        if (v47)
        {
LABEL_16:
          if (*(void *)(a1 + v21[8]) == *(void *)(a2 + v21[8]))
          {
            unint64_t v48 = v21;
            sub_1C224BDD4(a1 + v21[9], (uint64_t)v20);
            sub_1C224BDD4(a2 + v48[9], (uint64_t)v17);
            uint64_t v49 = *(int *)(v9 + 48);
            uint64_t v50 = (uint64_t)v70;
            uint64_t v51 = (uint64_t)&v70[v49];
            sub_1C224BDD4((uint64_t)v20, (uint64_t)v70);
            sub_1C224BDD4((uint64_t)v17, v51);
            uint64_t v52 = v68;
            unint64_t v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
            if (v53(v50, 1, v68) == 1)
            {
              uint64_t v54 = v52;
              uint64_t v55 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F67698];
              sub_1C246E8F0((uint64_t)v17, &qword_1EBB6E3F8, MEMORY[0x1E4F67698]);
              sub_1C246E8F0((uint64_t)v20, &qword_1EBB6E3F8, v55);
              if (v53(v51, 1, v54) == 1)
              {
                sub_1C246E8F0((uint64_t)v70, &qword_1EBB6E3F8, MEMORY[0x1E4F67698]);
                goto LABEL_26;
              }
              goto LABEL_22;
            }
            sub_1C224BDD4(v50, (uint64_t)v14);
            if (v53(v51, 1, v52) == 1)
            {
              uint64_t v56 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F67698];
              sub_1C246E8F0((uint64_t)v17, &qword_1EBB6E3F8, MEMORY[0x1E4F67698]);
              sub_1C246E8F0((uint64_t)v20, &qword_1EBB6E3F8, v56);
              (*(void (**)(unsigned char *, uint64_t))(v69 + 8))(v14, v52);
LABEL_22:
              sub_1C246EB08((uint64_t)v70, (uint64_t (*)(void))sub_1C224BD54);
              return 0;
            }
            uint64_t v57 = v69;
            uint64_t v58 = v67;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v69 + 32))(v67, v51, v52);
            sub_1C2470140((unint64_t *)&qword_1EA2DF0B8, MEMORY[0x1E4F67698]);
            int v66 = sub_1C254F420();
            uint64_t v59 = *(void (**)(unsigned char *, uint64_t))(v57 + 8);
            v59(v58, v52);
            uint64_t v60 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F67698];
            sub_1C246E8F0((uint64_t)v17, &qword_1EBB6E3F8, MEMORY[0x1E4F67698]);
            sub_1C246E8F0((uint64_t)v20, &qword_1EBB6E3F8, v60);
            v59(v14, v52);
            sub_1C246E8F0(v50, &qword_1EBB6E3F8, v60);
            if (v66)
            {
LABEL_26:
              uint64_t v61 = v71[10];
              uint64_t v62 = *(void *)(a2 + v61);
              if (*(void *)(a1 + v61))
              {
                if (v62)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v63 = swift_bridgeObjectRetain();
                  char v64 = sub_1C22AB284(v63, v62);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v64) {
                    return 1;
                  }
                }
              }
              else if (!v62)
              {
                return 1;
              }
            }
          }
          return 0;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1C246E780()
{
  unint64_t result = qword_1EA2E3BC0;
  if (!qword_1EA2E3BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3BC0);
  }
  return result;
}

unint64_t sub_1C246E7D4()
{
  unint64_t result = qword_1EA2E3BC8;
  if (!qword_1EA2E3BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3BC8);
  }
  return result;
}

void sub_1C246E828(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C246E88C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C246E780();
    unint64_t v7 = a3(a1, &type metadata for AccountStatusSummaryTileFeedItemData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C246E8F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C246E828(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C246E960()
{
  unint64_t result = qword_1EA2E3BF8;
  if (!qword_1EA2E3BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3BF8);
  }
  return result;
}

uint64_t sub_1C246E9B4(uint64_t a1, uint64_t a2)
{
  sub_1C246E828(0, &qword_1EBB6E3F8, MEMORY[0x1E4F67698], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C246EA48(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C246E828(255, &qword_1EA2E3BE0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB320]);
    sub_1C2470140(a2, MEMORY[0x1E4F27990]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C246EB08(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C246EB68()
{
  return sub_1C2470140(&qword_1EA2E3C18, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemData);
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountStatusSummaryTileFeedItemData(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C254CB40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = v11[3];
    v10[2] = v11[2];
    v10[3] = v13;
    uint64_t v14 = (uint64_t *)((char *)a1 + v9);
    uint64_t v15 = (uint64_t *)((char *)a2 + v9);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    uint64_t v19 = (uint64_t *)((char *)a1 + v17);
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = *(uint64_t *)((char *)a2 + v18);
    *uint64_t v19 = v21;
    v19[1] = v22;
    *(uint64_t *)((char *)a1 + v18) = v23;
    uint64_t v24 = a3[9];
    __dst = (char *)a1 + v24;
    uint64_t v25 = (char *)a2 + v24;
    uint64_t v26 = sub_1C254E290();
    uint64_t v30 = *(void *)(v26 - 8);
    char v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31(v25, 1, v26))
    {
      sub_1C246E828(0, &qword_1EBB6E3F8, MEMORY[0x1E4F67698], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v25, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v26);
    }
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AccountStatusSummaryTileFeedItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = sub_1C254E290();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AccountStatusSummaryTileFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  uint64_t v13 = (void *)(a1 + v8);
  uint64_t v14 = (void *)(a2 + v8);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  uint64_t v22 = *(void *)(a2 + v17);
  void *v18 = v20;
  v18[1] = v21;
  *(void *)(a1 + v17) = v22;
  uint64_t v23 = a3[9];
  uint64_t v30 = a3;
  __dst = (void *)(a1 + v23);
  uint64_t v24 = (const void *)(a2 + v23);
  uint64_t v25 = sub_1C254E290();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v24, 1, v25))
  {
    sub_1C246E828(0, &qword_1EBB6E3F8, MEMORY[0x1E4F67698], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(__dst, v24, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
  }
  *(void *)(a1 + v30[10]) = *(void *)(a2 + v30[10]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountStatusSummaryTileFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = *(void *)(v9 + 16);
  v8[3] = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = sub_1C254E290();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v17, v18, v19);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    sub_1C246E828(0, &qword_1EBB6E3F8, MEMORY[0x1E4F67698], MEMORY[0x1E4FBB718]);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_7:
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AccountStatusSummaryTileFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  long long v9 = *(_OWORD *)(a2 + v7);
  long long v10 = *(_OWORD *)(a2 + v7 + 16);
  uint64_t v11 = (_OWORD *)(a1 + v7);
  *uint64_t v11 = v9;
  v11[1] = v10;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_1C254E290();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    sub_1C246E828(0, &qword_1EBB6E3F8, MEMORY[0x1E4F67698], MEMORY[0x1E4FBB718]);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t assignWithTake for AccountStatusSummaryTileFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  v8[2] = *(void *)(v9 + 16);
  v8[3] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  int v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = sub_1C254E290();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    sub_1C246E828(0, &qword_1EBB6E3F8, MEMORY[0x1E4F67698], MEMORY[0x1E4FBB718]);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountStatusSummaryTileFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C246F868);
}

uint64_t sub_1C246F868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_1C246E828(0, &qword_1EBB6E3F8, MEMORY[0x1E4F67698], MEMORY[0x1E4FBB718]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for AccountStatusSummaryTileFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C246F9DC);
}

uint64_t sub_1C246F9DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C254CB40();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    sub_1C246E828(0, &qword_1EBB6E3F8, MEMORY[0x1E4F67698], MEMORY[0x1E4FBB718]);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1C246FB3C()
{
  sub_1C254CB40();
  if (v0 <= 0x3F)
  {
    sub_1C246E828(319, &qword_1EBB6E3F8, MEMORY[0x1E4F67698], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AccountStatusSummaryTileFeedItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C246FD2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountStatusSummaryTileFeedItemData.CodingKeys()
{
  return &type metadata for AccountStatusSummaryTileFeedItemData.CodingKeys;
}

unint64_t sub_1C246FD68()
{
  unint64_t result = qword_1EA2E3C20;
  if (!qword_1EA2E3C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3C20);
  }
  return result;
}

unint64_t sub_1C246FDC0()
{
  unint64_t result = qword_1EA2E3C28;
  if (!qword_1EA2E3C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3C28);
  }
  return result;
}

unint64_t sub_1C246FE18()
{
  unint64_t result = qword_1EA2E3C30;
  if (!qword_1EA2E3C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3C30);
  }
  return result;
}

uint64_t sub_1C246FE6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000064;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449646E617262 && a2 == 0xE700000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73746E756F636361 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1C2470140(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id NSAttributedString.init(leadingImage:text:font:displayScale:imageTintColor:textColor:adjustsImageSizeForAccessibilityContentSizeCategory:)(void *a1, double a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7, char a8)
{
  id v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v15 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v14, sel_initWithLeadingImage_text_font_displayScale_imageTintColor_textColor_adjustsImageSizeForAccessibilityContentSizeCategory_, a1, v15, a5, a6, a7, a8 & 1, a2);

  return v16;
}

id NSAttributedString.init(image:font:displayScale:tintColor:adjustsImageSizeForAccessibilityContentSizeCategory:)(void *a1, void *a2, void *a3, char a4, double a5)
{
  id v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithImage_font_displayScale_tintColor_adjustsImageSizeForAccessibilityContentSizeCategory_, a1, a2, a3, a4 & 1, a5);

  return v8;
}

id sub_1C24702E8(double a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, void *a7, void *a8)
{
  uint64_t v13 = sub_1C254F470();
  uint64_t v15 = v14;
  id v16 = a4;
  id v17 = a6;
  id v18 = a7;
  return _sSo18NSAttributedStringC15HealthRecordsUIE12leadingImage4text4font12displayScale14imageTintColor0hN007adjustsg27SizeForAccessibilityContentP8CategoryABSo7UIImageC_SSSo6UIFontC12CoreGraphics7CGFloatVSo7UIColorCSgASSbtcfc_0(v16, a1, v13, v15, v17, a7, a8);
}

id NSAttributedString.init(image:font:displayScale:tintColor:adjustsImageSizeForAccessibilityContentSizeCategory:)(void *a1, void *a2, void *a3, char a4)
{
  char v31 = a3;
  uint64_t v7 = sub_1C2550850();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(self, sel_textAttachmentWithImage_, a1);
  objc_msgSend(v11, sel_setAdjustsImageSizeForAccessibilityContentSizeCategory_, a4 & 1);
  objc_msgSend(a2, sel_descender);
  uint64_t v12 = *(void (**)(char *, void, uint64_t))(v8 + 104);
  v12(v10, *MEMORY[0x1E4FBBEB0], v7);
  sub_1C254CDC0();
  double v14 = v13;
  sub_1C254CDC0();
  double v16 = v15;
  id v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, v7);
  objc_msgSend(a1, sel_size);
  objc_msgSend(a1, sel_size);
  objc_msgSend(a2, sel_lineHeight);
  objc_msgSend(a2, sel_lineHeight);
  v12(v10, *MEMORY[0x1E4FBBEA8], v7);
  sub_1C254CDC0();
  double v19 = v18;
  sub_1C254CDC0();
  double v21 = v20;
  v17(v10, v7);
  uint64_t v22 = v31;
  objc_msgSend(v11, sel_setBounds_, v14, v16, v19, v21);
  if (v22)
  {
    sub_1C21AB51C(0, &qword_1EA2E3C40);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    id v24 = v22;
    id v25 = objc_msgSend(ObjCClassFromMetadata, sel_attributedStringWithAttachment_, v11);
    uint64_t v26 = *MEMORY[0x1E4FB0700];
    id v27 = v24;
    objc_msgSend(v25, sel_addAttribute_value_range_, v26, v27, 0, objc_msgSend(v25, sel_length));

    id v28 = objc_msgSend(v32, sel_initWithAttributedString_, v25);
    id v29 = a1;
    id v11 = a2;
    a1 = v27;
    a2 = v27;
  }
  else
  {
    id v29 = objc_msgSend(self, sel_attributedStringWithAttachment_, v11);
    id v28 = objc_msgSend(v32, sel_initWithAttributedString_, v29);
  }

  return v28;
}

id sub_1C2470708(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, char a6)
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  return NSAttributedString.init(image:font:displayScale:tintColor:adjustsImageSizeForAccessibilityContentSizeCategory:)(v9, v10, a5, a6);
}

id sub_1C2470780(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  uint64_t v9 = sub_1C254F470();
  uint64_t v11 = v10;
  id v12 = a4;
  id v13 = a5;
  id v14 = a6;
  id v15 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v9, v11, a4, a5, a6);

  swift_bridgeObjectRelease();
  return v15;
}

id _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  if (a4)
  {
    id v6 = a4;
    id v7 = objc_msgSend(v6, sel_imageWithRenderingMode_, 2);
    id v8 = objc_msgSend(self, sel_textAttachmentWithImage_, v7);

    sub_1C21AB51C(0, &qword_1EA2E3C40);
    id v9 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v8);
    uint64_t v10 = (void **)MEMORY[0x1E4FB0700];
    if (a3)
    {
      sub_1C2470ED8(0, &qword_1EA2E3C48, (void (*)(uint64_t))sub_1C2470F2C);
      id v33 = v6;
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
      id v12 = *v10;
      *(void *)(inited + 32) = *v10;
      *(void *)(inited + 40) = a3;
      id v13 = a3;
      id v14 = v12;
      unint64_t v15 = sub_1C2204AF4(inited);
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      sub_1C221CED8(v15);
      swift_bridgeObjectRelease();
      id v16 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      id v17 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1C21F1054();
      double v18 = (void *)sub_1C254F2C0();
      swift_bridgeObjectRelease();
      double v19 = v16;
      id v6 = v33;
      id v20 = objc_msgSend(v19, sel_initWithString_attributes_, v17, v18);

      double v21 = a5;
      if (!a5)
      {
LABEL_5:
        objc_msgSend(v9, sel_appendAttributedString_, v20);

        return v9;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      id v31 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      id v32 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      id v20 = objc_msgSend(v31, sel_initWithString_, v32);

      double v21 = a5;
      if (!a5) {
        goto LABEL_5;
      }
    }
    sub_1C2470ED8(0, (unint64_t *)&qword_1EA2E4460, (void (*)(uint64_t))sub_1C21F0FE8);
    uint64_t v22 = swift_initStackObject();
    *(_OWORD *)(v22 + 16) = xmmword_1C255CD90;
    int v23 = (void *)*MEMORY[0x1E4FB0700];
    *(void *)(v22 + 32) = *MEMORY[0x1E4FB0700];
    *(void *)(v22 + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
    *(void *)(v22 + 40) = v21;
    id v24 = v21;
    id v25 = v23;
    sub_1C2203C38(v22);
    type metadata accessor for Key(0);
    sub_1C21F1054();
    uint64_t v26 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_addAttributes_range_, v26, 0, objc_msgSend(v9, sel_length));

    goto LABEL_5;
  }
  id v28 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  id v29 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v28, sel_initWithString_, v29);

  return v30;
}

id _sSo18NSAttributedStringC15HealthRecordsUIE12leadingImage4text4font12displayScale14imageTintColor0hN007adjustsg27SizeForAccessibilityContentP8CategoryABSo7UIImageC_SSSo6UIFontC12CoreGraphics7CGFloatVSo7UIColorCSgASSbtcfc_0(void *a1, double a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7)
{
  id v8 = v7;
  sub_1C21AB51C(0, &qword_1EA2E3C40);
  id v14 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithImage_font_displayScale_tintColor_adjustsImageSizeForAccessibilityContentSizeCategory_, a1, a5, a6, 1, a2);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C2470ED8(0, (unint64_t *)&qword_1EA2E4460, (void (*)(uint64_t))sub_1C21F0FE8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
  id v16 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
  *(void *)(inited + 40) = a7;
  id v17 = v16;
  id v18 = a7;
  sub_1C2203C38(inited);
  id v19 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  id v20 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C21F1054();
  double v21 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v19, sel_initWithString_attributes_, v20, v21);

  objc_msgSend(v14, sel_appendAttributedString_, v22);
  uint64_t v23 = *MEMORY[0x1E4FB06F8];
  id v24 = a5;
  objc_msgSend(v14, sel_addAttribute_value_range_, v23, v24, 0, objc_msgSend(v14, sel_length));

  id v25 = objc_msgSend(v8, sel_initWithAttributedString_, v14);
  return v25;
}

void sub_1C2470ED8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550820();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2470F2C()
{
  if (!qword_1EA2E3C50)
  {
    type metadata accessor for Key(255);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB70010);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E3C50);
    }
  }
}

CGSize __swiftcall CGSize.inset(by:)(UIEdgeInsets by)
{
  double v3 = v1 - by.left - by.right;
  double v4 = v2 - by.top - by.bottom;
  double v5 = v3;
  result.height = v4;
  result.width = v5;
  return result;
}

double CGSize.rounded(_:toScaleOf:)(int a1, id a2)
{
  objc_msgSend(a2, sel_displayScale);
  sub_1C254CDC0();
  double v4 = v3;
  objc_msgSend(a2, sel_displayScale);
  sub_1C254CDC0();
  return v4;
}

{
  id v3;
  double v4;
  double v5;
  id v6;

  double v3 = objc_msgSend(a2, sel_traitCollection);
  sub_1C254CDD0();
  double v5 = v4;

  id v6 = objc_msgSend(a2, sel_traitCollection);
  sub_1C254CDD0();

  return v5;
}

CGSize __swiftcall CGSize.outset(by:)(NSDirectionalEdgeInsets by)
{
  CGFloat v3 = by.leading + v1 + by.trailing;
  double v4 = by.top + v2 + by.bottom;
  double v5 = v3;
  result.height = v4;
  result.width = v5;
  return result;
}

double CGSize.rounded(_:toScale:)()
{
  sub_1C254CDC0();
  double v1 = v0;
  sub_1C254CDC0();
  return v1;
}

double static CGSize.maxDimension.getter()
{
  return 1.79769313e308;
}

double static CGSize.maxSize.getter()
{
  return 1.79769313e308;
}

double CGSize.maxDimension.getter(double result, double a2)
{
  if (result <= a2) {
    return a2;
  }
  return result;
}

Swift::Bool __swiftcall CGSize.contains(_:)(CGSize a1)
{
  return a1.height <= v2 && a1.width <= v1;
}

BOOL CGSize.isZero.getter(double a1, double a2)
{
  return a2 == 0.0 && a1 == 0.0;
}

CGSize __swiftcall CGSize.scaled(for:)(UIFont a1)
{
  double v2 = v1;
  -[objc_class _scaledValueForValue:](a1.super.isa, sel__scaledValueForValue_);
  double v5 = v4;
  [(objc_class *)a1.super.isa _scaledValueForValue:v2];
  double v7 = v6;
  double v8 = v5;
  result.height = v7;
  result.width = v8;
  return result;
}

uint64_t TransientConceptType.hash(into:)()
{
  return sub_1C25509D0();
}

BOOL static TransientConceptType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TransientConceptType.hashValue.getter()
{
  return sub_1C2550A10();
}

uint64_t TransientConceptForChart.uniqueIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void TransientConceptForChart.conceptType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t TransientConceptForChart.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransientConceptForChart.chartsBloodPressure.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t TransientConceptForChart.hidesOutOfRangeFilter.getter()
{
  return *(unsigned __int8 *)(v0 + 41);
}

void __swiftcall TransientConceptForChart.init(conceptIdentifier:conceptType:displayName:chartsBloodPressure:hidesOutOfRangeFilter:)(HealthRecordsUI::TransientConceptForChart *__return_ptr retstr, Swift::String conceptIdentifier, HealthRecordsUI::TransientConceptType conceptType, Swift::String displayName, Swift::Bool chartsBloodPressure, Swift::Bool hidesOutOfRangeFilter)
{
  HealthRecordsUI::TransientConceptType v6 = *(unsigned char *)conceptType;
  retstr->conceptIdentifier = conceptIdentifier;
  retstr->conceptType = v6;
  retstr->displayName = displayName;
  retstr->chartsBloodPressure = chartsBloodPressure;
  retstr->hidesOutOfRangeFilter = hidesOutOfRangeFilter;
}

uint64_t TransientConceptForChart.hash(into:)()
{
  return sub_1C25509E0();
}

uint64_t TransientConceptForChart.hashValue.getter()
{
  return sub_1C2550A10();
}

uint64_t sub_1C24714A4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C24714D4()
{
  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t sub_1C24714E4()
{
  return sub_1C2550A10();
}

uint64_t _s15HealthRecordsUI24TransientConceptForChartV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a1 + 41);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  int v10 = *(unsigned __int8 *)(a2 + 40);
  int v11 = *(unsigned __int8 *)(a2 + 41);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v7) {
      return 0;
    }
  }
  else
  {
    char v12 = sub_1C2550870();
    uint64_t result = 0;
    if ((v12 & 1) == 0 || v2 != v7) {
      return result;
    }
  }
  if (v3 == v8 && v4 == v9)
  {
    if (v5 != v10) {
      return 0;
    }
    return v6 ^ v11 ^ 1u;
  }
  char v14 = sub_1C2550870();
  uint64_t result = 0;
  if ((v14 & 1) != 0 && ((v5 ^ v10) & 1) == 0) {
    return v6 ^ v11 ^ 1u;
  }
  return result;
}

unint64_t sub_1C24716AC()
{
  unint64_t result = qword_1EA2E3C58;
  if (!qword_1EA2E3C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3C58);
  }
  return result;
}

unint64_t sub_1C2471704()
{
  unint64_t result = qword_1EA2E3C60;
  if (!qword_1EA2E3C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3C60);
  }
  return result;
}

uint64_t dispatch thunk of MedicalRecordChartDefining.displayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MedicalRecordChartDefining.chartsBloodPressure.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MedicalRecordChartDefining.hidesOutOfRangeFilter.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MedicalRecordChartDefining.uniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

unsigned char *storeEnumTagSinglePayload for TransientConceptType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2471874);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransientConceptType()
{
  return &type metadata for TransientConceptType;
}

uint64_t destroy for TransientConceptForChart()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TransientConceptForChart(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TransientConceptForChart(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TransientConceptForChart(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransientConceptForChart(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 42)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransientConceptForChart(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 42) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransientConceptForChart()
{
  return &type metadata for TransientConceptForChart;
}

uint64_t dispatch thunk of MedicalRecordChartPointRepresentable.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MedicalRecordChartPointRepresentable.conceptForChart.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MedicalRecordChartPointRepresentable.recordCategoryType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MedicalRecordChartPointRepresentable.chartableCodedQuantitySet()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t static RecordTitleWithSubtitleView.reuseIdentifier.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_1EA2E3C68;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static RecordTitleWithSubtitleView.reuseIdentifier.setter(uint64_t a1, void *a2)
{
  qword_1EA2E3C68 = a1;
  off_1EA2E3C70 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static RecordTitleWithSubtitleView.reuseIdentifier.modify())()
{
  return j__swift_endAccess;
}

id sub_1C2471C34()
{
  return sub_1C2471C94(&OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___recordsHeadingLabel, MEMORY[0x1E4FB2990], 32770, (SEL *)&selRef_labelColor);
}

id sub_1C2471C54()
{
  return sub_1C2471C94(&OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___titleLabel, MEMORY[0x1E4FB2998], 32770, (SEL *)&selRef_labelColor);
}

id sub_1C2471C74()
{
  return sub_1C2471C94(&OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___subtitleLabel, MEMORY[0x1E4FB2950], 0x8000, (SEL *)&selRef_secondaryLabelColor);
}

id sub_1C2471C94(uint64_t *a1, id *a2, uint64_t a3, SEL *a4)
{
  uint64_t v5 = *a1;
  unsigned int v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    id v7 = *(id *)(v4 + *a1);
  }
  else
  {
    uint64_t v10 = v4;
    id v11 = objc_msgSend(objc_allocWithZone((Class)sub_1C254D400()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v11, sel_setNumberOfLines_, 0);
    objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v12 = *a2;
    sub_1C254D3F0();
    sub_1C254D3E0();
    id v13 = self;
    id v7 = v11;
    id v14 = [v13 *a4];
    objc_msgSend(v7, sel_setTextColor_, v14);

    unint64_t v15 = *(void **)(v10 + v5);
    *(void *)(v10 + v5) = v7;

    unsigned int v6 = 0;
  }
  id v16 = v6;
  return v7;
}

uint64_t sub_1C2471DA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1C2227014(v3, (uint64_t)v14);
  if (v14[3])
  {
    sub_1C22270A8();
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      long long v5 = v10[1];
      long long v6 = v10[2];
      uint64_t v7 = v11;
      uint64_t v8 = v12;
      char v9 = v13;
      *(_OWORD *)a1 = v10[0];
      *(_OWORD *)(a1 + 16) = v5;
      *(_OWORD *)(a1 + 32) = v6;
      *(void *)(a1 + 48) = v7;
      *(void *)(a1 + 56) = v8;
      *(unsigned char *)(a1 + 64) = v9;
      return result;
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v14);
  }
  *(void *)&v10[0] = 0;
  *((void *)&v10[0] + 1) = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  v14[0] = 0xD000000000000026;
  v14[1] = 0x80000001C2587630;
  sub_1C2227014(v3, (uint64_t)v10);
  sub_1C2253E44();
  sub_1C254F510();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C25505F0();
  __break(1u);
  return result;
}

uint64_t sub_1C2471F04(uint64_t a1, void *a2)
{
  sub_1C2227014(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1C2232E74((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C2471F78();
  return sub_1C2227100((uint64_t)v5);
}

id sub_1C2471F78()
{
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item];
  swift_beginAccess();
  sub_1C2227014(v1, (uint64_t)v18);
  if (!v18[3])
  {
    sub_1C2227100((uint64_t)v18);
    goto LABEL_10;
  }
  sub_1C22270A8();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    v16[0] = 0;
    v16[1] = 0xE000000000000000;
    sub_1C25503A0();
    swift_bridgeObjectRelease();
    v18[0] = 0xD000000000000026;
    v18[1] = 0x80000001C2587630;
    sub_1C2227014(v1, (uint64_t)v16);
    sub_1C2253E44();
    sub_1C254F510();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    id result = (id)sub_1C25505F0();
    __break(1u);
    return result;
  }
  id v2 = sub_1C2471C34();
  uint64_t v3 = v2;
  if (v17 == 1)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v5 = sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setText_, v5, 0xE000000000000000);

    char v6 = 1;
    uint64_t v3 = (void *)v5;
  }
  else
  {
    objc_msgSend(v2, sel_setText_, 0);
    char v6 = 0;
  }

  v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_needsToLayoutFirstHeader] = v6;
  id v7 = sub_1C2471C54();
  uint64_t v8 = (void *)sub_1C254F430();
  objc_msgSend(v7, sel_setText_, v8);

  id v9 = sub_1C2471C74();
  uint64_t v10 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setText_, v10);

  uint64_t v11 = self;
  uint64_t v12 = OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_customConstraints;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  char v13 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_deactivateConstraints_, v13);

  *(void *)&v0[v12] = sub_1C2472B6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v14 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_activateConstraints_, v14);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_1C2472348@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C247239C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C2471F78();
  return sub_1C2227100(a1);
}

id (*sub_1C247240C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C247246C;
}

id sub_1C247246C(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2471F78();
  }
  return result;
}

id RecordTitleWithSubtitleView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id RecordTitleWithSubtitleView.init(frame:)(double a1, double a2, double a3, double a4)
{
  v4[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_needsToLayoutFirstHeader] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___recordsHeadingLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___subtitleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_customConstraints] = MEMORY[0x1E4FBC860];
  id v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item];
  uint64_t v10 = (objc_class *)type metadata accessor for RecordTitleWithSubtitleView();
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v13.receiver = v4;
  v13.super_class = v10;
  id v11 = objc_msgSendSuper2(&v13, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C247270C();

  return v11;
}

uint64_t type metadata accessor for RecordTitleWithSubtitleView()
{
  return self;
}

id sub_1C247270C()
{
  id v1 = sub_1C2471C34();
  objc_msgSend(v0, sel_addSubview_, v1);

  id v2 = sub_1C2471C54();
  objc_msgSend(v0, sel_addSubview_, v2);

  id v3 = sub_1C2471C74();
  objc_msgSend(v0, sel_addSubview_, v3);

  id v4 = self;
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_customConstraints;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  char v6 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_deactivateConstraints_, v6);

  *(void *)&v0[v5] = sub_1C2472B6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v7 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v7);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

void sub_1C2472864(void *a1)
{
  id v2 = v1;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for RecordTitleWithSubtitleView();
  objc_msgSendSuper2(&v12, sel_traitCollectionDidChange_, a1);
  id v4 = objc_msgSend(v2, sel_traitCollection);
  uint64_t v5 = v4;
  if (!a1)
  {
    if (!v4) {
      return;
    }

    goto LABEL_7;
  }
  if (!v4
    || (sub_1C21AB51C(0, &qword_1EBB6FF98),
        id v6 = a1,
        char v7 = sub_1C254FF70(),
        v6,
        v6,
        v5,
        (v7 & 1) == 0))
  {
LABEL_7:
    uint64_t v8 = self;
    uint64_t v9 = OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_customConstraints;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_deactivateConstraints_, v10);

    *(void *)&v2[v9] = sub_1C2472B6C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    id v11 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_activateConstraints_, v11);

    objc_msgSend(v2, sel_setNeedsLayout);
  }
}

id sub_1C2472A6C()
{
  id v1 = self;
  uint64_t v2 = OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_customConstraints;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  id v3 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_deactivateConstraints_, v3);

  *(void *)&v0[v2] = sub_1C2472B6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v4 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v4);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_1C2472B6C()
{
  int v1 = v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_needsToLayoutFirstHeader];
  sub_1C21ACA3C();
  if (v1 == 1)
  {
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1C255E110;
    id v3 = sub_1C2471C34();
    id v4 = objc_msgSend(v3, sel_topAnchor);

    id v5 = objc_msgSend(v0, (SEL)&selRef_unsupportedSearchResults + 3);
    id v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, 10.0);

    *(void *)(v2 + 32) = v6;
    id v7 = sub_1C2471C34();
    id v8 = objc_msgSend(v7, sel_leadingAnchor);

    id v9 = objc_msgSend(v0, sel_leadingAnchor);
    id v10 = objc_msgSend(v8, (SEL)&selRef_chartDataCacheController + 7, v9, 2.0);

    *(void *)(v2 + 40) = v10;
    id v11 = objc_msgSend(v0, sel_trailingAnchor);
    id v12 = sub_1C2471C34();
    id v13 = objc_msgSend(v12, sel_trailingAnchor);

    id v14 = objc_msgSend(v11, (SEL)&selRef_chartDataCacheController + 7, v13, 2.0);
    *(void *)(v2 + 48) = v14;
    id v15 = sub_1C2471C54();
    id v16 = objc_msgSend(v15, (SEL)&selRef_unsupportedSearchResults + 3);

    id v17 = sub_1C2471C34();
    id v18 = objc_msgSend(v17, sel_bottomAnchor);

    id v19 = objc_msgSend(v16, (SEL)&selRef_chartDataCacheController + 7, v18, 10.0);
    *(void *)(v2 + 56) = v19;
    id v20 = sub_1C2471C54();
    id v21 = objc_msgSend(v20, sel_leadingAnchor);

    id v22 = sub_1C2471C34();
    id v23 = objc_msgSend(v22, sel_leadingAnchor);

    id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
    *(void *)(v2 + 64) = v24;
    id v25 = sub_1C2471C54();
    id v26 = objc_msgSend(v25, sel_trailingAnchor);

    id v27 = sub_1C2471C34();
    id v28 = objc_msgSend(v27, sel_trailingAnchor);

    id v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v28);
    *(void *)(v2 + 72) = v29;
    id v30 = sub_1C2471C74();
    id v31 = objc_msgSend(v30, sel_topAnchor);

    id v32 = sub_1C2471C54();
    id v33 = objc_msgSend(v32, sel_bottomAnchor);

    id v34 = objc_msgSend(v31, (SEL)&selRef_chartDataCacheController + 7, v33, 4.0);
    *(void *)(v2 + 80) = v34;
    id v35 = sub_1C2471C74();
    id v36 = objc_msgSend(v35, sel_leadingAnchor);

    id v37 = sub_1C2471C54();
    id v38 = objc_msgSend(v37, sel_leadingAnchor);

    id v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v38);
    *(void *)(v2 + 88) = v39;
    id v40 = sub_1C2471C74();
    id v41 = objc_msgSend(v40, sel_trailingAnchor);

    id v42 = sub_1C2471C54();
    id v43 = objc_msgSend(v42, sel_trailingAnchor);

    id v44 = objc_msgSend(v41, sel_constraintLessThanOrEqualToAnchor_, v43);
    *(void *)(v2 + 96) = v44;
    id v45 = objc_msgSend(v0, sel_bottomAnchor);
    id v46 = sub_1C2471C74();
    id v47 = objc_msgSend(v46, sel_bottomAnchor);

    id v48 = objc_msgSend(v45, (SEL)&selRef_chartDataCacheController + 7, v47, 12.0);
    *(void *)(v2 + 104) = v48;
  }
  else
  {
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1C255EBD0;
    id v49 = sub_1C2471C54();
    id v50 = objc_msgSend(v49, sel_topAnchor);

    id v51 = objc_msgSend(v0, sel_topAnchor);
    id v52 = objc_msgSend(v50, sel_constraintEqualToAnchor_constant_, v51, 10.0);

    *(void *)(v2 + 32) = v52;
    id v53 = sub_1C2471C54();
    id v54 = objc_msgSend(v53, sel_leadingAnchor);

    id v55 = objc_msgSend(v0, sel_leadingAnchor);
    id v56 = objc_msgSend(v54, sel_constraintEqualToAnchor_constant_, v55, 2.0);

    *(void *)(v2 + 40) = v56;
    id v57 = objc_msgSend(v0, sel_trailingAnchor);
    id v58 = sub_1C2471C54();
    id v59 = objc_msgSend(v58, sel_trailingAnchor);

    id v60 = objc_msgSend(v57, sel_constraintEqualToAnchor_constant_, v59, 2.0);
    *(void *)(v2 + 48) = v60;
    id v61 = sub_1C2471C74();
    id v62 = objc_msgSend(v61, sel_topAnchor);

    id v63 = sub_1C2471C54();
    id v64 = objc_msgSend(v63, sel_bottomAnchor);

    id v65 = objc_msgSend(v62, sel_constraintEqualToAnchor_constant_, v64, 4.0);
    *(void *)(v2 + 56) = v65;
    id v66 = sub_1C2471C74();
    id v67 = objc_msgSend(v66, sel_leadingAnchor);

    id v68 = sub_1C2471C54();
    id v69 = objc_msgSend(v68, sel_leadingAnchor);

    id v70 = objc_msgSend(v67, sel_constraintEqualToAnchor_, v69);
    *(void *)(v2 + 64) = v70;
    id v71 = sub_1C2471C74();
    id v72 = objc_msgSend(v71, sel_trailingAnchor);

    id v73 = sub_1C2471C54();
    id v74 = objc_msgSend(v73, sel_trailingAnchor);

    id v75 = objc_msgSend(v72, sel_constraintLessThanOrEqualToAnchor_, v74);
    *(void *)(v2 + 72) = v75;
    id v76 = objc_msgSend(v0, sel_bottomAnchor);
    id v77 = sub_1C2471C74();
    id v78 = objc_msgSend(v77, sel_bottomAnchor);

    id v79 = objc_msgSend(v76, sel_constraintEqualToAnchor_constant_, v78, 12.0);
    *(void *)(v2 + 80) = v79;
  }
  sub_1C254F730();
  return v2;
}

id RecordTitleWithSubtitleView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecordTitleWithSubtitleView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C24733E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C2473440(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C2471F78();
  return sub_1C2227100(a1);
}

id (*sub_1C24734B4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = *v1;
  swift_beginAccess();
  return sub_1C247246C;
}

uint64_t sub_1C2473518()
{
  swift_beginAccess();
  uint64_t v0 = qword_1EA2E3C68;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1C247356C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a2);
}

uint64_t method lookup function for RecordTitleWithSubtitleView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecordTitleWithSubtitleView);
}

uint64_t dispatch thunk of RecordTitleWithSubtitleView.headerItem.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of RecordTitleWithSubtitleView.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of RecordTitleWithSubtitleView.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of RecordTitleWithSubtitleView.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of RecordTitleWithSubtitleView.commonInit()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of RecordTitleWithSubtitleView.updateFonts()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of RecordTitleWithSubtitleView.setUpConstraints()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

void sub_1C247377C()
{
  v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_needsToLayoutFirstHeader] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___recordsHeadingLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView____lazy_storage___subtitleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_customConstraints] = MEMORY[0x1E4FBC860];
  int v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordTitleWithSubtitleView_item];
  *(_OWORD *)int v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;

  sub_1C25505F0();
  __break(1u);
}

uint64_t sub_1C2473838(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C23F5310();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C24773E8(v6);
  return sub_1C2550470();
}

uint64_t sub_1C24738B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  type metadata accessor for EntriesDataSource(0);
  sub_1C2478E24((unint64_t *)&qword_1EA2E28D8, (void (*)(uint64_t))type metadata accessor for EntriesDataSource);
  uint64_t v4 = sub_1C254EDA0();
  uint64_t v6 = v5;
  uint64_t v7 = sub_1C254EA20();
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v3;
  return swift_retain();
}

uint64_t sub_1C2473968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1C2478C08();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2478F50();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1C254EB70();
    swift_release();
    swift_release();
    uint64_t v13 = swift_release();
    MEMORY[0x1F4188790](v13);
    *(&v15 - 4) = (uint64_t)&v16;
    *(&v15 - 3) = (uint64_t)sub_1C2473D58;
    *(&v15 - 2) = 0;
    sub_1C247941C(0, &qword_1EA2E3D20, sub_1C2477368, (void (*)(uint64_t))sub_1C2478CCC, (void (*)(void))sub_1C2478DF0);
    sub_1C2478E6C();
    sub_1C254EF80();
    swift_bridgeObjectRelease();
    sub_1C254EE70();
    sub_1C2478E24(&qword_1EA2E3D60, (void (*)(uint64_t))sub_1C2478C08);
    sub_1C254F060();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(v15, v12, v9);
  }
  else
  {
    type metadata accessor for EntriesDataSource(0);
    sub_1C2478E24((unint64_t *)&qword_1EA2E28D8, (void (*)(uint64_t))type metadata accessor for EntriesDataSource);
    uint64_t result = sub_1C254ED90();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2473CE4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C254EB70();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C2473D58(void **a1)
{
  uint64_t v1 = *a1;
  sub_1C2478D48();
  sub_1C2478D9C();
  id v2 = v1;
  return sub_1C254ED50();
}

uint64_t sub_1C2473DE0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2473968(*v1, a1);
}

uint64_t sub_1C2473DE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = sub_1C254EE10();
  sub_1C2474124(a1, (uint64_t)&v55);
  uint64_t v38 = v56;
  uint64_t v39 = v55;
  char v40 = v57;
  char v27 = v60;
  uint64_t v33 = v61;
  uint64_t v34 = v59;
  uint64_t v32 = v62;
  char v29 = v63;
  uint64_t v30 = v58;
  uint64_t v31 = v64;
  uint64_t v37 = sub_1C254EF70();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = sub_1C254EE10();
  sub_1C24742EC(a1, (uint64_t)&v55);
  uint64_t v25 = v56;
  uint64_t v26 = v55;
  char v4 = v57;
  uint64_t v23 = v59;
  uint64_t v24 = v58;
  char v5 = v61;
  uint64_t v6 = v63;
  uint64_t v21 = v62;
  uint64_t v22 = v60;
  uint64_t v7 = v65;
  uint64_t v8 = v66;
  char v9 = v67;
  uint64_t v10 = v68;
  char v11 = v64;
  uint64_t v12 = sub_1C254EF30();
  uint64_t v13 = swift_getKeyPath();
  char v52 = v27;
  *((void *)&v41 + 1) = 0;
  LOBYTE(v42) = 1;
  *((void *)&v42 + 1) = v26;
  *(void *)&long long v43 = v25;
  BYTE8(v43) = v4;
  *(void *)&long long v44 = v24;
  *((void *)&v44 + 1) = v23;
  *(void *)&long long v45 = v22;
  BYTE8(v45) = v5;
  *(void *)&long long v46 = v21;
  *((void *)&v46 + 1) = v6;
  LOBYTE(v47) = v11;
  *((void *)&v47 + 1) = v7;
  *(void *)&long long v48 = v8;
  BYTE8(v48) = v9;
  *(void *)&long long v49 = v10;
  *((void *)&v49 + 1) = v13;
  long long v14 = v47;
  long long v15 = v48;
  long long v16 = v49;
  char v54 = 1;
  char v53 = v40;
  *(void *)a2 = v36;
  *(unsigned char *)(a2 + 16) = 1;
  *(unsigned char *)(a2 + 40) = v40;
  char v51 = v29;
  *(void *)(a2 + 56) = v34;
  *(unsigned char *)(a2 + 64) = v52;
  *(unsigned char *)(a2 + 88) = v29;
  *(void *)&long long v41 = v28;
  *(void *)(a2 + 48) = v30;
  long long v17 = v45;
  *(_OWORD *)(a2 + 200) = v46;
  *(_OWORD *)(a2 + 184) = v17;
  long long v18 = v43;
  *(_OWORD *)(a2 + 168) = v44;
  *(_OWORD *)(a2 + 152) = v18;
  *(void *)(a2 + 264) = v12;
  *(_OWORD *)(a2 + 248) = v16;
  *(_OWORD *)(a2 + 232) = v15;
  *(_OWORD *)(a2 + 216) = v14;
  long long v19 = v41;
  *(_OWORD *)(a2 + 136) = v42;
  *(_OWORD *)(a2 + 120) = v19;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 24) = v39;
  *(void *)(a2 + 32) = v38;
  *(void *)(a2 + 72) = v33;
  *(void *)(a2 + 80) = v32;
  *(void *)(a2 + 96) = v31;
  *(void *)(a2 + 104) = KeyPath;
  *(void *)(a2 + 112) = v37;
  char v57 = 1;
  uint64_t v58 = v26;
  uint64_t v59 = v25;
  LOBYTE(v60) = v4;
  uint64_t v61 = v24;
  uint64_t v62 = v23;
  uint64_t v63 = v22;
  LOBYTE(v64) = v5;
  uint64_t v65 = v21;
  uint64_t v66 = v6;
  char v67 = v11;
  uint64_t v68 = v7;
  uint64_t v69 = v8;
  char v70 = v9;
  uint64_t v71 = v10;
  uint64_t v72 = v13;
  uint64_t v50 = v12;
  uint64_t v73 = v12;
  uint64_t v55 = v28;
  uint64_t v56 = 0;
  sub_1C22C6CAC(v39, v38, v40);
  swift_bridgeObjectRetain();
  sub_1C22C6CAC(v33, v32, v29);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1C24791C8((uint64_t)&v41);
  sub_1C2479290((uint64_t)&v55);
  sub_1C22C6C58(v39, v38, v40);
  swift_bridgeObjectRelease();
  sub_1C22C6C58(v33, v32, v29);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2474124@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_identifier);
  uint64_t v5 = sub_1C254F470();
  uint64_t v7 = v6;

  uint64_t v24 = v5;
  uint64_t v25 = v7;
  sub_1C2218914();
  uint64_t v8 = sub_1C254F010();
  uint64_t v10 = v9;
  char v12 = v11;
  uint64_t v14 = v13;
  id v15 = objc_msgSend(a1, sel_currentVersion, v24, v25);
  if (v15 && v15 != (id)-1)
  {
    objc_msgSend(a1, sel_currentVersion);
    sub_1C2201F84();
    sub_1C25501D0();
  }
  char v16 = v12 & 1;
  uint64_t v17 = sub_1C254F010();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  *(void *)a2 = v8;
  *(void *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 16) = v16;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = v17;
  *(void *)(a2 + 56) = v18;
  *(unsigned char *)(a2 + 64) = v20 & 1;
  *(void *)(a2 + 72) = v22;
  sub_1C22C6CAC(v8, v10, v16);
  swift_bridgeObjectRetain();
  sub_1C22C6CAC(v17, v19, v21);
  swift_bridgeObjectRetain();
  sub_1C22C6C58(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_1C22C6C58(v8, v10, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C24742EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C254EFE0();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1C254CAD0();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1C254EE60();
  id v7 = objc_msgSend(a1, sel_schemaType, MEMORY[0x1F4188790](v6 - 8).n128_f64[0]);
  sub_1C254F470();

  sub_1C2218914();
  uint64_t v28 = sub_1C254F010();
  uint64_t v29 = v8;
  uint64_t v27 = v9;
  char v11 = v10 & 1;
  sub_1C254EE50();
  sub_1C254EE40();
  objc_msgSend(a1, sel_schemaVersion);
  sub_1C254EE20();
  sub_1C254EE40();
  sub_1C254EE80();
  uint64_t v12 = sub_1C254F000();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  id v19 = objc_msgSend(a1, sel_currentVersionDate);
  sub_1C254CA80();

  sub_1C254EFD0();
  uint64_t v20 = sub_1C254EFF0();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  *(void *)a2 = v28;
  *(void *)(a2 + 8) = v29;
  *(unsigned char *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v27;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v14;
  *(unsigned char *)(a2 + 48) = v18;
  *(void *)(a2 + 56) = v16;
  *(void *)(a2 + 64) = 0;
  *(unsigned char *)(a2 + 72) = 1;
  *(void *)(a2 + 80) = v20;
  *(void *)(a2 + 88) = v21;
  *(unsigned char *)(a2 + 96) = v23 & 1;
  *(void *)(a2 + 104) = v25;
  sub_1C22C6CAC(v28, v29, v11);
  swift_bridgeObjectRetain();
  sub_1C22C6CAC(v12, v14, v18);
  swift_bridgeObjectRetain();
  sub_1C22C6CAC(v20, v22, v24);
  swift_bridgeObjectRetain();
  sub_1C22C6C58(v20, v22, v24);
  swift_bridgeObjectRelease();
  sub_1C22C6C58(v12, v14, v18);
  swift_bridgeObjectRelease();
  sub_1C22C6C58(v28, v29, v11);
  return swift_bridgeObjectRelease();
}

void *sub_1C2474610@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C254EEA0();
  sub_1C2473DE8(v3, (uint64_t)v6);
  memcpy(&__src[7], v6, 0x110uLL);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  return memcpy((void *)(a1 + 17), __src, 0x117uLL);
}

uint64_t sub_1C2474690(void *a1)
{
  sub_1C2479358();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16[0] = sub_1C24748A8(a1);
  uint64_t v13 = v16;
  uint64_t v14 = sub_1C247587C;
  uint64_t v15 = 0;
  sub_1C247941C(0, &qword_1EA2E3D78, sub_1C24794C8, (void (*)(uint64_t))type metadata accessor for EntryDetail.EntryDetailRow, (void (*)(void))sub_1C247951C);
  sub_1C2479550();
  sub_1C254EF80();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(a1, sel_identifier);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  v16[0] = v8;
  v16[1] = v10;
  sub_1C2478E24(&qword_1EA2E3DA0, (void (*)(uint64_t))sub_1C2479358);
  sub_1C2218914();
  sub_1C254F070();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C24748A8(void *a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C247AD98(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  v148 = (char *)&v147 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v149 = (char *)&v147 - v6;
  sub_1C247AD98(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], v2);
  MEMORY[0x1F4188790](v7 - 8);
  v152 = (char *)&v147 - v8;
  sub_1C247AD98(0, &qword_1EA2E3DB0, type metadata accessor for EntryDetail.EntryDetailRow, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = type metadata accessor for EntryDetail.EntryDetailRow(0);
  uint64_t v10 = *(void *)(*(void *)(v9 - 8) + 72);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C256BB00;
  uint64_t v150 = v12;
  uint64_t v13 = (char *)(v12 + v11);
  id v159 = a1;
  id v14 = objc_msgSend(a1, sel_identifier);
  uint64_t v15 = sub_1C254F470();
  uint64_t v17 = v16;

  char v18 = &v13[*(int *)(v9 + 24)];
  uint64_t v19 = sub_1C254CAD0();
  uint64_t v20 = *(void *)(v19 - 8);
  v158 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v21 = v20 + 56;
  v158(v18, 1, 1, v19);
  *(void *)uint64_t v13 = 0x696669746E656449;
  *((void *)v13 + 1) = 0xEA00000000007265;
  *((void *)v13 + 2) = v15;
  *((void *)v13 + 3) = v17;
  uint64_t v156 = v10;
  uint64_t v22 = &v13[v10];
  id v23 = objc_msgSend(a1, sel_schemaType);
  uint64_t v24 = sub_1C254F470();
  uint64_t v26 = v25;

  uint64_t v27 = v158;
  v158(&v13[v10 + *(int *)(v9 + 24)], 1, 1, v19);
  *(void *)uint64_t v22 = 0x7954616D65686353;
  *((void *)v22 + 1) = 0xEA00000000006570;
  *((void *)v22 + 2) = v24;
  *((void *)v22 + 3) = v26;
  uint64_t v28 = v9;
  uint64_t v29 = 2 * v10;
  uint64_t v30 = &v13[2 * v10];
  id v31 = v159;
  id v160 = objc_msgSend(v159, sel_schemaVersion);
  unint64_t v151 = sub_1C2201F84();
  uint64_t v32 = sub_1C25501D0();
  uint64_t v34 = v33;
  v27(&v30[*(int *)(v28 + 24)], 1, 1, v19);
  strcpy(v30, "SchemaVersion");
  *((_WORD *)v30 + 7) = -4864;
  *((void *)v30 + 2) = v32;
  *((void *)v30 + 3) = v34;
  v154 = v13;
  id v35 = &v13[v29 + v156];
  uint64_t v36 = v31;
  objc_msgSend(v31, sel_settings);
  id v37 = (id)HKStringFromOntologyShardSettings();
  uint64_t v38 = sub_1C254F470();
  uint64_t v40 = v39;

  long long v41 = &v35[*(int *)(v28 + 24)];
  uint64_t v157 = v19;
  uint64_t v155 = v21;
  v27(v41, 1, 1, v19);
  *(void *)id v35 = 0x73676E6974746553;
  *((void *)v35 + 1) = 0xE800000000000000;
  *((void *)v35 + 2) = v38;
  *((void *)v35 + 3) = v40;
  id v42 = objc_msgSend(v36, sel_slot);
  uint64_t v43 = 1701736302;
  unint64_t v44 = 0xE400000000000000;
  if ((id)*MEMORY[0x1E4F2A2E0] != v42)
  {
    id v160 = objc_msgSend(v36, sel_slot);
    uint64_t v43 = sub_1C25501D0();
    unint64_t v44 = v45;
  }
  uint64_t v47 = v156;
  uint64_t v46 = v157;
  long long v48 = v154;
  long long v49 = (char *)v154 + 4 * v156;
  uint64_t v50 = v158;
  v158(&v49[*(int *)(v28 + 24)], 1, 1, v157);
  *(void *)long long v49 = 1953459283;
  *((void *)v49 + 1) = 0xE400000000000000;
  *((void *)v49 + 2) = v43;
  *((void *)v49 + 3) = v44;
  uint64_t v51 = (uint64_t)v48 + 5 * v47;
  uint64_t v52 = sub_1C2479668((uint64_t)objc_msgSend(v159, sel_desiredState));
  uint64_t v54 = v53;
  id v55 = objc_msgSend(v159, sel_desiredStateDate);
  uint64_t v56 = (uint64_t)v152;
  sub_1C254CA80();

  v50((char *)v56, 0, 1, v46);
  uint64_t v57 = v56;
  id v58 = v159;
  strcpy((char *)v51, "DesiredState");
  *(unsigned char *)(v51 + 13) = 0;
  *(_WORD *)(v51 + 14) = -5120;
  *(void *)(v51 + 16) = v52;
  *(void *)(v51 + 24) = v54;
  sub_1C247977C(v56, v51 + *(int *)(v28 + 24), (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  id v59 = objc_msgSend(v58, sel_currentVersion);
  if (v59)
  {
    if (v59 == (id)-1)
    {
      unint64_t v60 = 0xEC00000064656E69;
      uint64_t v61 = 0x6D72657465646E75;
    }
    else
    {
      id v160 = objc_msgSend(v58, sel_currentVersion);
      uint64_t v61 = sub_1C25501D0();
      unint64_t v60 = v62;
    }
  }
  else
  {
    uint64_t v61 = 1701736302;
    unint64_t v60 = 0xE400000000000000;
  }
  uint64_t v63 = v156;
  uint64_t v64 = v154;
  uint64_t v65 = (char *)v154 + 6 * v156;
  id v66 = objc_msgSend(v58, sel_currentVersionDate);
  sub_1C254CA80();

  uint64_t v68 = v157;
  char v67 = v158;
  v158((char *)v57, 0, 1, v157);
  strcpy(v65, "CurrentVersion");
  v65[15] = -18;
  *((void *)v65 + 2) = v61;
  *((void *)v65 + 3) = v60;
  uint64_t v69 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C247977C((uint64_t)v152, (uint64_t)&v65[*(int *)(v28 + 24)], (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  uint64_t v147 = (uint64_t)v64 - v63;
  uint64_t v70 = (uint64_t)&v64[v63] - v63;
  id v71 = objc_msgSend(v159, sel_currentRegion);
  uint64_t v72 = sub_1C254F470();
  uint64_t v153 = v28;
  uint64_t v74 = v73;

  id v75 = objc_msgSend(v159, sel_currentRegionDate);
  sub_1C254CA80();

  v67(v152, 0, 1, v68);
  id v76 = v159;
  strcpy((char *)v70, "CurrentRegion");
  *(_WORD *)(v70 + 14) = -4864;
  *(void *)(v70 + 16) = v72;
  *(void *)(v70 + 24) = v74;
  uint64_t v77 = (uint64_t)v152;
  uint64_t v78 = v153;
  sub_1C247977C((uint64_t)v152, v70 + *(int *)(v153 + 24), (unint64_t *)&qword_1EBB6F550, v69);
  id v79 = objc_msgSend(v76, sel_currentLocale);
  if (v79)
  {
    uint64_t v80 = v79;
    uint64_t v81 = sub_1C254F470();
    uint64_t v83 = v82;
  }
  else
  {
    uint64_t v81 = 0;
    uint64_t v83 = 0;
  }
  uint64_t v84 = 1701736302;
  double v85 = (char *)&v154[v156];
  id v86 = objc_msgSend(v76, sel_currentLocaleDate);
  sub_1C254CA80();

  v158((char *)v77, 0, 1, v157);
  strcpy(v85, "CurrentLocale");
  *((_WORD *)v85 + 7) = -4864;
  *((void *)v85 + 2) = v81;
  *((void *)v85 + 3) = v83;
  sub_1C247977C(v77, (uint64_t)&v85[*(int *)(v78 + 24)], (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  id v87 = objc_msgSend(v76, sel_availableVersion);
  if (v87)
  {
    if (v87 == (id)-1)
    {
      unint64_t v88 = 0xEC00000064656E69;
      uint64_t v84 = 0x6D72657465646E75;
    }
    else
    {
      id v160 = objc_msgSend(v76, sel_availableVersion);
      uint64_t v84 = sub_1C25501D0();
      unint64_t v88 = v89;
    }
  }
  else
  {
    unint64_t v88 = 0xE400000000000000;
  }
  uint64_t v90 = v156;
  unint64_t v91 = v154;
  int64_t v92 = (void *)((char *)v154 + 9 * v156);
  id v93 = objc_msgSend(v76, sel_availableVersionDate);
  sub_1C254CA80();

  uint64_t v94 = v157;
  v158((char *)v77, 0, 1, v157);
  *int64_t v92 = 0xD000000000000010;
  v92[1] = 0x80000001C2587750;
  v92[2] = v84;
  v92[3] = v88;
  uint64_t v95 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C247977C(v77, (uint64_t)v92 + *(int *)(v78 + 24), (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  uint64_t v96 = (uint64_t)v91 + 10 * v90;
  uint64_t v97 = sub_1C2479668((uint64_t)objc_msgSend(v159, sel_availableState));
  uint64_t v99 = v98;
  id v100 = objc_msgSend(v159, sel_availableStateDate);
  sub_1C254CA80();

  uint64_t v101 = v94;
  uint64_t v102 = v158;
  v158((char *)v77, 0, 1, v101);
  strcpy((char *)v96, "AvailableState");
  *(unsigned char *)(v96 + 15) = -18;
  *(void *)(v96 + 16) = v97;
  *(void *)(v96 + 24) = v99;
  sub_1C247977C(v77, v96 + *(int *)(v153 + 24), (unint64_t *)&qword_1EBB6F550, v95);
  unint64_t v103 = (void *)((char *)v91 + 11 * v90);
  id v104 = objc_msgSend(v159, sel_availableRegion);
  uint64_t v105 = sub_1C254F470();
  uint64_t v107 = v106;

  id v108 = objc_msgSend(v159, sel_availableRegionDate);
  sub_1C254CA80();

  v102((char *)v77, 0, 1, v157);
  id v109 = v159;
  *unint64_t v103 = 0x6C62616C69617641;
  v103[1] = 0xEF6E6F6967655265;
  v103[2] = v105;
  v103[3] = v107;
  uint64_t v110 = v153;
  sub_1C247977C(v77, (uint64_t)v103 + *(int *)(v153 + 24), (unint64_t *)&qword_1EBB6F550, v95);
  uint64_t v111 = v109;
  id v112 = objc_msgSend(v109, sel_availableLocale);
  if (v112)
  {
    unint64_t v113 = v112;
    uint64_t v114 = sub_1C254F470();
    uint64_t v116 = v115;
  }
  else
  {
    uint64_t v114 = 0;
    uint64_t v116 = 0;
  }
  uint64_t v118 = (uint64_t)v148;
  uint64_t v117 = (uint64_t)v149;
  uint64_t v119 = (void *)((char *)v154 + 12 * v156);
  int64_t v120 = v111;
  id v121 = objc_msgSend(v111, sel_availableLocaleDate);
  sub_1C254CA80();

  v158((char *)v77, 0, 1, v157);
  void *v119 = 0x6C62616C69617641;
  v119[1] = 0xEF656C61636F4C65;
  v119[2] = v114;
  v119[3] = v116;
  sub_1C247977C(v77, (uint64_t)v119 + *(int *)(v110 + 24), (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  id v122 = objc_msgSend(v120, sel_availableURL);
  if (v122)
  {
    unint64_t v123 = v122;
    sub_1C254C8A0();

    uint64_t v124 = sub_1C254C900();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v118, 0, 1, v124);
  }
  else
  {
    uint64_t v124 = sub_1C254C900();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v118, 1, 1, v124);
  }
  sub_1C247977C(v118, v117, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  sub_1C254C900();
  uint64_t v125 = *(void *)(v124 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v117, 1, v124) == 1)
  {
    sub_1C247AF60(v117, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
    uint64_t v126 = 0;
    uint64_t v127 = 0;
  }
  else
  {
    uint64_t v126 = sub_1C254C840();
    uint64_t v127 = v128;
    (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v117, v124);
  }
  uint64_t v129 = (char *)v154 + 13 * v156;
  id v130 = objc_msgSend(v120, sel_availableURLDate);
  sub_1C254CA80();

  v158((char *)v77, 0, 1, v157);
  strcpy(v129, "AvailableURL");
  v129[13] = 0;
  *((_WORD *)v129 + 7) = -5120;
  *((void *)v129 + 2) = v126;
  *((void *)v129 + 3) = v127;
  sub_1C247977C(v77, (uint64_t)&v129[*(int *)(v153 + 24)], (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  id v131 = objc_msgSend(v120, sel_availableChecksum);
  if (v131)
  {
    uint64_t v132 = v131;
    uint64_t v133 = sub_1C254F470();
    uint64_t v135 = v134;
  }
  else
  {
    uint64_t v133 = 0;
    uint64_t v135 = 0;
  }
  uint64_t v136 = v156;
  v137 = (void *)((char *)v154 + 14 * v156);
  id v138 = objc_msgSend(v120, sel_availableChecksumDate);
  sub_1C254CA80();

  v158((char *)v77, 0, 1, v157);
  void *v137 = 0xD000000000000011;
  v137[1] = 0x80000001C2587770;
  v137[2] = v133;
  v137[3] = v135;
  uint64_t v139 = v153;
  v140 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C247977C(v77, (uint64_t)v137 + *(int *)(v153 + 24), (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  uint64_t v141 = v147 + 16 * v136;
  id v160 = objc_msgSend(v120, sel_availableSize);
  uint64_t v142 = sub_1C25501D0();
  uint64_t v144 = v143;
  id v145 = objc_msgSend(v120, sel_availableSizeDate);
  sub_1C254CA80();

  v158((char *)v77, 0, 1, v157);
  strcpy((char *)v141, "AvailableSize");
  *(_WORD *)(v141 + 14) = -4864;
  *(void *)(v141 + 16) = v142;
  *(void *)(v141 + 24) = v144;
  sub_1C247977C(v77, v141 + *(int *)(v139 + 24), (unint64_t *)&qword_1EBB6F550, v140);
  return v150;
}

uint64_t sub_1C247587C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C247AFD0(a1, a2, type metadata accessor for EntryDetail.EntryDetailRow);
}

uint64_t sub_1C24758AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  sub_1C247AD98(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v38 - v4;
  uint64_t v6 = sub_1C254CAD0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C247AAA8();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v38 - v14;
  MEMORY[0x1F4188790](v16);
  char v18 = (char *)&v38 - v17;
  *(void *)uint64_t v15 = sub_1C254EE10();
  *((void *)v15 + 1) = 0;
  v15[16] = 1;
  sub_1C247AE64();
  sub_1C2475C9C(a1, (uint64_t)&v15[*(int *)(v19 + 44)]);
  uint64_t v20 = (uint64_t)v18;
  sub_1C247AEFC((uint64_t)v15, (uint64_t)v18);
  uint64_t v21 = type metadata accessor for EntryDetail.EntryDetailRow(0);
  sub_1C21EA654((uint64_t)a1 + *(int *)(v21 + 24), (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1C247AF60((uint64_t)v5, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
    uint64_t v43 = 0;
    uint64_t v44 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v27 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    uint64_t v44 = sub_1C254EE10();
    sub_1C2476060((uint64_t)&v46);
    uint64_t v23 = v47;
    uint64_t v24 = v48;
    uint64_t v25 = v49;
    uint64_t v26 = v50;
    uint64_t v42 = v51;
    uint64_t v43 = v46;
    uint64_t v41 = sub_1C254F090();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v29 = v9;
    uint64_t v27 = KeyPath;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
    uint64_t v22 = 1;
  }
  uint64_t v39 = v20;
  uint64_t v40 = v12;
  sub_1C247AFD0(v20, (uint64_t)v12, (uint64_t (*)(void))sub_1C247AAA8);
  uint64_t v30 = v45;
  sub_1C247AFD0((uint64_t)v12, v45, (uint64_t (*)(void))sub_1C247AAA8);
  sub_1C247AA08();
  uint64_t v32 = (uint64_t *)(v30 + *(int *)(v31 + 48));
  uint64_t v34 = v43;
  uint64_t v33 = v44;
  *uint64_t v32 = v44;
  v32[1] = 0;
  v32[2] = v22;
  v32[3] = v34;
  v32[4] = v23;
  v32[5] = v24;
  v32[6] = v25;
  v32[7] = v26;
  uint64_t v35 = v22;
  uint64_t v36 = v42;
  v32[8] = v42;
  v32[9] = v27;
  v32[10] = v41;
  sub_1C247B038(v33, 0, v35, v34, v23, v24, v25, v26, v36);
  sub_1C247B0AC(v39);
  sub_1C247B108(v33, 0, v35, v34, v23, v24, v25, v26, v36);
  return sub_1C247B0AC((uint64_t)v40);
}

uint64_t sub_1C2475C9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C254EEF0();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v44 = &v41[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C247ABCC();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unsigned __int8 v50 = &v41[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v43 = &v41[-v11];
  MEMORY[0x1F4188790](v12);
  uint64_t v51 = &v41[-v13];
  uint64_t v14 = a1[1];
  uint64_t v53 = *a1;
  uint64_t v54 = v14;
  sub_1C2218914();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C254F010();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_1C254EF60();
  uint64_t v20 = sub_1C254EFC0();
  uint64_t v45 = v21;
  uint64_t v46 = v20;
  int v42 = v22;
  uint64_t v47 = v23;
  swift_release();
  sub_1C22C6C58(v15, v17, v19);
  swift_bridgeObjectRelease();
  if (a1[3])
  {
    uint64_t v24 = a1[2];
    unint64_t v25 = a1[3];
  }
  else
  {
    unint64_t v25 = 0xE300000000000000;
    uint64_t v24 = 7104878;
  }
  uint64_t v53 = v24;
  uint64_t v54 = v25;
  swift_bridgeObjectRetain();
  uint64_t v53 = sub_1C254F010();
  uint64_t v54 = v26;
  char v55 = v27 & 1;
  uint64_t v56 = v28;
  uint64_t v29 = v44;
  sub_1C254EEE0();
  uint64_t v30 = v43;
  uint64_t v31 = v49;
  sub_1C254F040();
  (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v29, v31);
  sub_1C22C6C58(v53, v54, v55);
  swift_bridgeObjectRelease();
  uint64_t v32 = v51;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v51, v30, v7);
  LOBYTE(v53) = v42 & 1;
  char v52 = 1;
  uint64_t v33 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16);
  uint64_t v34 = v50;
  v33(v50, v32, v7);
  LOBYTE(v32) = v53;
  uint64_t v35 = v45;
  uint64_t v36 = v46;
  *(void *)a2 = v46;
  *(void *)(a2 + 8) = v35;
  *(unsigned char *)(a2 + 16) = (_BYTE)v32;
  char v37 = v52;
  *(void *)(a2 + 24) = v47;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = v37;
  sub_1C247AB5C();
  v33((unsigned char *)(a2 + *(int *)(v38 + 64)), v34, v7);
  sub_1C22C6CAC(v36, v35, (char)v32);
  uint64_t v39 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  v39(v51, v7);
  v39(v34, v7);
  sub_1C22C6C58(v36, v35, v53);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2476060@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)sub_1C254CA50();
  id v3 = (id)HKDiagnosticStringFromDate();

  sub_1C254F470();
  sub_1C2218914();
  uint64_t v4 = sub_1C254F010();
  uint64_t v6 = v5;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  char v8 = v7 & 1;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v7 & 1;
  *(void *)(a1 + 40) = v9;
  sub_1C22C6CAC(v4, v5, v7 & 1);
  swift_bridgeObjectRetain();
  sub_1C22C6C58(v4, v6, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2476138@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1C254EEA0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  sub_1C247A970();
  return sub_1C24758AC(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_1C2476180@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C247618C()
{
  return sub_1C2474690(*v0);
}

uint64_t sub_1C2476194@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C254EB70();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C2476214()
{
  return sub_1C254EB80();
}

uint64_t sub_1C2476290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  uint64_t v5 = sub_1C254E560();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = sub_1C254F820();
  v4[12] = sub_1C254F810();
  uint64_t v6 = (void *)swift_task_alloc();
  v4[13] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1C247639C;
  return sub_1C24768D0();
}

uint64_t sub_1C247639C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 112) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C254F7D0();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C24765E0;
  }
  else
  {
    *(void *)(v4 + 120) = a1;
    uint64_t v5 = sub_1C254F7D0();
    uint64_t v7 = v9;
    uint64_t v8 = sub_1C247651C;
  }
  return MEMORY[0x1F4188298](v8, v5, v7);
}

uint64_t sub_1C247651C()
{
  uint64_t v1 = v0[15];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[6] = v1;
  swift_retain();
  sub_1C254EB80();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1C24765E0()
{
  uint64_t v26 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = (void *)v0[14];
  swift_release();
  sub_1C254E510();
  swift_retain();
  id v3 = v2;
  swift_retain();
  id v4 = v2;
  uint64_t v5 = sub_1C254E550();
  os_log_type_t v6 = sub_1C254FA20();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (void *)v0[14];
    uint64_t v22 = v0[9];
    uint64_t v8 = (void *)v0[7];
    uint64_t v23 = v0[8];
    uint64_t v24 = v0[10];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v25 = v10;
    *(_DWORD *)uint64_t v9 = 136446466;
    v0[2] = *v8;
    sub_1C24786B8();
    uint64_t v11 = sub_1C254F4F0();
    v0[3] = sub_1C21AD354(v11, v12, &v25);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2082;
    v0[4] = v7;
    id v13 = v7;
    sub_1C2206F9C();
    uint64_t v14 = sub_1C254F4F0();
    v0[5] = sub_1C21AD354(v14, v15, &v25);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v5, v6, "[%{public}s] Unable to load ontology registry: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v10, -1, -1);
    MEMORY[0x1C875A0B0](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  else
  {
    uint64_t v16 = (void *)v0[14];
    uint64_t v18 = v1[9];
    uint64_t v17 = v1[10];
    uint64_t v19 = v1[8];

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v1[1];
  return v20();
}

uint64_t sub_1C24768D0()
{
  v1[16] = v0;
  sub_1C254F820();
  v1[17] = sub_1C254F810();
  uint64_t v3 = sub_1C254F7D0();
  v1[18] = v3;
  v1[19] = v2;
  return MEMORY[0x1F4188298](sub_1C2476968, v3, v2);
}

uint64_t sub_1C2476968()
{
  id v1 = objc_msgSend(*(id *)(v0[16] + 16), sel_healthStore);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B300]), sel_initWithHealthStore_, v1);
  v0[20] = v2;

  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1C2476AB4;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C2476D50;
  v0[13] = &block_descriptor_3;
  v0[14] = v3;
  objc_msgSend(v2, sel_ontologyShardRegistryEntriesWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2476AB4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 168) = v2;
  uint64_t v3 = *(void *)(v1 + 152);
  uint64_t v4 = *(void *)(v1 + 144);
  if (v2) {
    uint64_t v5 = sub_1C2476CD8;
  }
  else {
    uint64_t v5 = sub_1C2476BE4;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C2476BE4()
{
  uint64_t v8 = v0;
  swift_release();
  uint64_t v1 = *(void *)(v0 + 120);
  if (v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    unint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v2 = (uint64_t)sub_1C229091C(v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v7 = v2;
  sub_1C2473838(&v7);

  swift_bridgeObjectRelease();
  uint64_t v3 = v7;
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_1C2476CD8()
{
  uint64_t v1 = *(void **)(v0 + 160);
  swift_release();
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C2476D50(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C2206F9C();
    uint64_t v5 = swift_allocError();
    *unint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    sub_1C247739C();
    **(void **)(*(void *)(v3 + 64) + 40) = sub_1C254F710();
    return swift_continuation_throwingResume();
  }
}

BOOL sub_1C2476E18(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *a2;
  id v4 = objc_msgSend(*a1, sel_identifier);
  uint64_t v5 = sub_1C254F470();
  uint64_t v7 = v6;

  id v8 = objc_msgSend(v3, sel_identifier);
  uint64_t v9 = sub_1C254F470();
  uint64_t v11 = v10;

  BOOL v12 = v5 == v9 && v7 == v11;
  if (!v12 && (sub_1C2550870() & 1) == 0) {
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v2, sel_schemaType);
  uint64_t v14 = sub_1C254F470();
  uint64_t v16 = v15;

  id v17 = objc_msgSend(v3, sel_schemaType);
  uint64_t v18 = sub_1C254F470();
  uint64_t v20 = v19;

  if (v14 == v18 && v16 == v20) {
    goto LABEL_9;
  }
  if (sub_1C2550870())
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(v2, sel_schemaVersion);
    return (uint64_t)objc_msgSend(v3, sel_schemaVersion) <= (uint64_t)v21;
  }
  else
  {
LABEL_10:
    char v23 = sub_1C2550870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v23 & 1;
  }
}

uint64_t sub_1C2476FDC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUIP33_766154230A8DC4663A59392D072AE21B17EntriesDataSource__entries;
  sub_1C247AD98(0, &qword_1EA2E3CC0, (uint64_t (*)(uint64_t))sub_1C2477368, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1C24770B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C254EA30();
  *a1 = result;
  return result;
}

uint64_t HKOntologyShardRegistryEntry.id.getter()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_identifier);
  type metadata accessor for HKOntologyShardIdentifier(0);
  sub_1C25504F0();

  sub_1C254F5A0();
  id v3 = objc_msgSend(v1, sel_schemaType);
  type metadata accessor for HKOntologyShardSchemaType(0);
  sub_1C25504F0();

  sub_1C254F5A0();
  objc_msgSend(v1, sel_schemaVersion);
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C2477238()
{
  return MEMORY[0x1E4FBB1B0];
}

uint64_t sub_1C2477244@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HKOntologyShardRegistryEntry.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C2477270()
{
  return type metadata accessor for EntriesDataSource(0);
}

uint64_t type metadata accessor for EntriesDataSource(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E3CB0);
}

void sub_1C2477298()
{
  sub_1C247AD98(319, &qword_1EA2E3CC0, (uint64_t (*)(uint64_t))sub_1C2477368, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1C2477368(uint64_t a1)
{
}

unint64_t sub_1C247739C()
{
  unint64_t result = qword_1EA2DFBD0;
  if (!qword_1EA2DFBD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DFBD0);
  }
  return result;
}

uint64_t sub_1C24773DC()
{
  return MEMORY[0x1E4F1ABE8];
}

void sub_1C24773E8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t v5 = sub_1C2550800();
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_146;
    }
    if (v4) {
      sub_1C2477CA8(0, v4, 1, a1);
    }
    return;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_155;
  }
  uint64_t v124 = v5;
  uint64_t v126 = v4;
  id v121 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v135 = MEMORY[0x1E4FBC860];
    __dst = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      unint64_t v64 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      goto LABEL_111;
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    sub_1C247739C();
    uint64_t v8 = sub_1C254F780();
    *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    uint64_t v4 = v126;
    __dst = (void **)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v135 = v8;
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v122 = *a1 - 8;
  uint64_t v123 = *a1 + 16;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v132 = *a1;
  do
  {
    uint64_t v12 = v10;
    uint64_t v13 = v10 + 1;
    uint64_t v127 = v10;
    if (v10 + 1 < v4)
    {
      uint64_t v14 = *(void **)(v11 + 8 * v13);
      uint64_t v15 = v10;
      uint64_t v133 = *(void **)(v11 + 8 * v10);
      uint64_t v16 = v133;
      id v134 = v14;
      id v17 = v14;
      id v18 = v16;
      BOOL v19 = sub_1C2476E18(&v134, &v133);
      if (v2)
      {
        swift_bridgeObjectRelease();

        goto LABEL_124;
      }
      BOOL v20 = v19;

      uint64_t v21 = v15 + 2;
      uint64_t v12 = v15;
      if (v15 + 2 < v4)
      {
        uint64_t v22 = (void **)(v123 + 8 * v15);
        while (1)
        {
          char v23 = *v22;
          uint64_t v133 = *(v22 - 1);
          uint64_t v24 = v133;
          id v134 = v23;
          id v25 = v23;
          id v26 = v24;
          BOOL v27 = sub_1C2476E18(&v134, &v133);

          if ((v20 ^ v27)) {
            break;
          }
          ++v22;
          uint64_t v4 = v126;
          if (v126 == ++v21)
          {
            uint64_t v21 = v126;
            goto LABEL_21;
          }
        }
        uint64_t v4 = v126;
LABEL_21:
        uint64_t v12 = v127;
      }
      uint64_t v11 = v132;
      if (v20)
      {
        if (v21 < v12) {
          goto LABEL_150;
        }
        uint64_t v13 = v21;
        if (v12 < v21)
        {
          uint64_t v28 = (uint64_t *)(v122 + 8 * v21);
          uint64_t v29 = v21;
          uint64_t v30 = v12;
          uint64_t v31 = (uint64_t *)(v132 + 8 * v12);
          do
          {
            if (v30 != --v29)
            {
              if (!v132) {
                goto LABEL_153;
              }
              uint64_t v32 = *v31;
              *uint64_t v31 = *v28;
              *uint64_t v28 = v32;
            }
            ++v30;
            --v28;
            ++v31;
          }
          while (v30 < v29);
        }
      }
      else
      {
        uint64_t v13 = v21;
      }
    }
    if (v13 >= v4) {
      goto LABEL_60;
    }
    if (__OFSUB__(v13, v12)) {
      goto LABEL_147;
    }
    if (v13 - v12 >= v124) {
      goto LABEL_60;
    }
    if (__OFADD__(v12, v124)) {
      goto LABEL_148;
    }
    if (v12 + v124 >= v4) {
      uint64_t v33 = v4;
    }
    else {
      uint64_t v33 = v12 + v124;
    }
    if (v33 < v12)
    {
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      sub_1C25505E0();
      __break(1u);
      return;
    }
    if (v13 == v33) {
      goto LABEL_60;
    }
    uint64_t v119 = v9;
    uint64_t v120 = v2;
    uint64_t v34 = v122 + 8 * v13;
    uint64_t v125 = v33;
    while (2)
    {
      uint64_t v36 = *(void **)(v11 + 8 * v13);
      uint64_t v37 = v12;
      uint64_t v128 = v34;
      uint64_t v130 = v13;
      while (1)
      {
        uint64_t v38 = *(void **)v34;
        id v39 = v36;
        id v40 = v38;
        id v41 = objc_msgSend(v39, sel_identifier);
        uint64_t v42 = sub_1C254F470();
        uint64_t v44 = v43;

        id v45 = objc_msgSend(v40, sel_identifier);
        uint64_t v46 = sub_1C254F470();
        uint64_t v48 = v47;

        BOOL v49 = v42 == v46 && v44 == v48;
        if (v49 || (sub_1C2550870() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v50 = objc_msgSend(v39, sel_schemaType);
          uint64_t v51 = sub_1C254F470();
          uint64_t v53 = v52;

          id v54 = objc_msgSend(v40, sel_schemaType);
          uint64_t v55 = sub_1C254F470();
          uint64_t v57 = v56;

          if (v51 == v55 && v53 == v57) {
            goto LABEL_53;
          }
          if (sub_1C2550870())
          {
LABEL_53:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v58 = objc_msgSend(v39, sel_schemaVersion);
            id v59 = objc_msgSend(v40, sel_schemaVersion);

            if ((uint64_t)v59 > (uint64_t)v58) {
              break;
            }
            goto LABEL_56;
          }
        }
        char v60 = sub_1C2550870();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v60 & 1) == 0) {
          break;
        }
LABEL_56:
        uint64_t v11 = v132;
        uint64_t v35 = v130;
        if (!v132) {
          goto LABEL_151;
        }
        uint64_t v61 = *(void **)v34;
        uint64_t v36 = *(void **)(v34 + 8);
        *(void *)uint64_t v34 = v36;
        *(void *)(v34 + 8) = v61;
        v34 -= 8;
        if (v130 == ++v37) {
          goto LABEL_43;
        }
      }
      uint64_t v11 = v132;
      uint64_t v35 = v130;
LABEL_43:
      uint64_t v13 = v35 + 1;
      uint64_t v12 = v127;
      uint64_t v34 = v128 + 8;
      if (v13 != v125) {
        continue;
      }
      break;
    }
    uint64_t v13 = v125;
    uint64_t v9 = v119;
    uint64_t v2 = v120;
LABEL_60:
    if (v13 < v12) {
      goto LABEL_145;
    }
    uint64_t v131 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1C23F277C(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v63 = *((void *)v9 + 2);
    unint64_t v62 = *((void *)v9 + 3);
    unint64_t v64 = v63 + 1;
    uint64_t v11 = v132;
    if (v63 >= v62 >> 1)
    {
      id v112 = sub_1C23F277C((char *)(v62 > 1), v63 + 1, 1, v9);
      uint64_t v11 = v132;
      uint64_t v9 = v112;
    }
    *((void *)v9 + 2) = v64;
    uint64_t v65 = v9 + 32;
    id v66 = &v9[16 * v63 + 32];
    *(void *)id v66 = v127;
    *((void *)v66 + 1) = v13;
    if (v63)
    {
      while (2)
      {
        unint64_t v67 = v64 - 1;
        if (v64 >= 4)
        {
          uint64_t v72 = &v65[16 * v64];
          uint64_t v73 = *((void *)v72 - 8);
          uint64_t v74 = *((void *)v72 - 7);
          BOOL v78 = __OFSUB__(v74, v73);
          uint64_t v75 = v74 - v73;
          if (v78) {
            goto LABEL_130;
          }
          uint64_t v77 = *((void *)v72 - 6);
          uint64_t v76 = *((void *)v72 - 5);
          BOOL v78 = __OFSUB__(v76, v77);
          uint64_t v70 = v76 - v77;
          char v71 = v78;
          if (v78) {
            goto LABEL_131;
          }
          unint64_t v79 = v64 - 2;
          uint64_t v80 = &v65[16 * v64 - 32];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v78 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          if (v78) {
            goto LABEL_133;
          }
          BOOL v78 = __OFADD__(v70, v83);
          uint64_t v84 = v70 + v83;
          if (v78) {
            goto LABEL_136;
          }
          if (v84 >= v75)
          {
            uint64_t v102 = &v65[16 * v67];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v78 = __OFSUB__(v103, v104);
            uint64_t v105 = v103 - v104;
            if (v78) {
              goto LABEL_140;
            }
            BOOL v95 = v70 < v105;
          }
          else
          {
LABEL_79:
            if (v71) {
              goto LABEL_132;
            }
            unint64_t v79 = v64 - 2;
            double v85 = &v65[16 * v64 - 32];
            uint64_t v87 = *(void *)v85;
            uint64_t v86 = *((void *)v85 + 1);
            BOOL v88 = __OFSUB__(v86, v87);
            uint64_t v89 = v86 - v87;
            char v90 = v88;
            if (v88) {
              goto LABEL_135;
            }
            unint64_t v91 = &v65[16 * v67];
            uint64_t v93 = *(void *)v91;
            uint64_t v92 = *((void *)v91 + 1);
            BOOL v78 = __OFSUB__(v92, v93);
            uint64_t v94 = v92 - v93;
            if (v78) {
              goto LABEL_138;
            }
            if (__OFADD__(v89, v94)) {
              goto LABEL_139;
            }
            if (v89 + v94 < v70) {
              goto LABEL_91;
            }
            BOOL v95 = v70 < v94;
          }
          if (v95) {
            unint64_t v67 = v79;
          }
        }
        else
        {
          if (v64 == 3)
          {
            uint64_t v69 = *((void *)v9 + 4);
            uint64_t v68 = *((void *)v9 + 5);
            BOOL v78 = __OFSUB__(v68, v69);
            uint64_t v70 = v68 - v69;
            char v71 = v78;
            goto LABEL_79;
          }
          uint64_t v96 = *((void *)v9 + 4);
          uint64_t v97 = *((void *)v9 + 5);
          BOOL v78 = __OFSUB__(v97, v96);
          uint64_t v89 = v97 - v96;
          char v90 = v78;
LABEL_91:
          if (v90) {
            goto LABEL_134;
          }
          uint64_t v98 = &v65[16 * v67];
          uint64_t v100 = *(void *)v98;
          uint64_t v99 = *((void *)v98 + 1);
          BOOL v78 = __OFSUB__(v99, v100);
          uint64_t v101 = v99 - v100;
          if (v78) {
            goto LABEL_137;
          }
          if (v101 < v89) {
            goto LABEL_108;
          }
        }
        unint64_t v106 = v67 - 1;
        if (v67 - 1 >= v64)
        {
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          goto LABEL_149;
        }
        if (!v11) {
          goto LABEL_152;
        }
        uint64_t v107 = &v65[16 * v106];
        uint64_t v108 = *(void *)v107;
        id v109 = &v65[16 * v67];
        uint64_t v110 = *((void *)v109 + 1);
        sub_1C2477D98((void **)(v11 + 8 * *(void *)v107), (void **)(v11 + 8 * *(void *)v109), v11 + 8 * v110, __dst);
        if (v2) {
          goto LABEL_122;
        }
        if (v110 < v108) {
          goto LABEL_127;
        }
        if (v67 > *((void *)v9 + 2)) {
          goto LABEL_128;
        }
        *(void *)uint64_t v107 = v108;
        *(void *)&v65[16 * v106 + 8] = v110;
        unint64_t v111 = *((void *)v9 + 2);
        if (v67 >= v111) {
          goto LABEL_129;
        }
        unint64_t v64 = v111 - 1;
        memmove(&v65[16 * v67], v109 + 16, 16 * (v111 - 1 - v67));
        *((void *)v9 + 2) = v111 - 1;
        uint64_t v11 = v132;
        if (v111 <= 2) {
          goto LABEL_108;
        }
        continue;
      }
    }
    unint64_t v64 = 1;
LABEL_108:
    uint64_t v4 = v126;
    uint64_t v10 = v131;
  }
  while (v131 < v126);
LABEL_111:
  if (v64 >= 2)
  {
    uint64_t v113 = *v121;
    do
    {
      unint64_t v114 = v64 - 2;
      if (v64 < 2) {
        goto LABEL_141;
      }
      if (!v113) {
        goto LABEL_154;
      }
      uint64_t v115 = *(void *)&v9[16 * v114 + 32];
      uint64_t v116 = *(void *)&v9[16 * v64 + 24];
      sub_1C2477D98((void **)(v113 + 8 * v115), (void **)(v113 + 8 * *(void *)&v9[16 * v64 + 16]), v113 + 8 * v116, __dst);
      if (v2) {
        break;
      }
      if (v116 < v115) {
        goto LABEL_142;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1C23F321C((uint64_t)v9);
      }
      if (v114 >= *((void *)v9 + 2)) {
        goto LABEL_143;
      }
      uint64_t v117 = &v9[16 * v114 + 32];
      *(void *)uint64_t v117 = v115;
      *((void *)v117 + 1) = v116;
      unint64_t v118 = *((void *)v9 + 2);
      if (v64 > v118) {
        goto LABEL_144;
      }
      memmove(&v9[16 * v64 + 16], &v9[16 * v64 + 32], 16 * (v118 - v64));
      *((void *)v9 + 2) = v118 - 1;
      unint64_t v64 = v118 - 1;
    }
    while (v118 > 2);
  }
LABEL_122:
  swift_bridgeObjectRelease();
LABEL_124:
  *(void *)((v135 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_1C254F730();
  swift_bridgeObjectRelease();
}

void sub_1C2477CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = a1;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 8 * a3 - 8;
LABEL_4:
    uint64_t v9 = *(void **)(v7 + 8 * v5);
    uint64_t v10 = v8;
    while (1)
    {
      id v19 = v9;
      id v18 = *(void **)v10;
      uint64_t v11 = v18;
      id v12 = v9;
      id v13 = v11;
      BOOL v14 = sub_1C2476E18(&v19, &v18);

      if (v4) {
        break;
      }
      if (v14)
      {
        if (!v7)
        {
          __break(1u);
          return;
        }
        uint64_t v15 = *(void **)v10;
        uint64_t v9 = *(void **)(v10 + 8);
        *(void *)uint64_t v10 = v9;
        *(void *)(v10 + 8) = v15;
        v10 -= 8;
        if (v5 != ++v6) {
          continue;
        }
      }
      ++v5;
      v8 += 8;
      uint64_t v6 = a1;
      if (v5 != a2) {
        goto LABEL_4;
      }
      return;
    }
  }
}

uint64_t sub_1C2477D98(void **__src, void **a2, unint64_t a3, void **__dst)
{
  uint64_t v35 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  id v41 = __src;
  id v40 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 >= -7)
    {
      if (__dst != a2 || &a2[v12] <= __dst)
      {
        memmove(__dst, a2, 8 * v12);
        __dst = v35;
      }
      uint64_t v21 = &__dst[v12];
      id v39 = v21;
      id v41 = v5;
      if (v6 < v5 && v10 >= 8)
      {
        uint64_t v22 = (id *)(a3 - 8);
        char v23 = v5;
        uint64_t v34 = v6;
        while (1)
        {
          uint64_t v24 = v21;
          id v25 = *--v21;
          id v38 = v25;
          id v26 = *--v23;
          uint64_t v37 = v26;
          id v27 = v38;
          id v28 = v26;
          BOOL v29 = sub_1C2476E18(&v38, &v37);
          if (v36) {
            break;
          }
          BOOL v30 = v29;
          uint64_t v36 = 0;
          uint64_t v31 = v22 + 1;

          if (v30)
          {
            uint64_t v32 = v35;
            if (v31 != v5 || v22 >= v5) {
              id *v22 = *v23;
            }
            id v41 = v23;
            uint64_t v21 = v24;
          }
          else
          {
            id v39 = v21;
            uint64_t v32 = v35;
            if (v31 < v24 || v22 >= v24 || v31 != v24) {
              id *v22 = *v21;
            }
            char v23 = v5;
          }
          if (v23 > v34)
          {
            --v22;
            uint64_t v5 = v23;
            if (v21 > v32) {
              continue;
            }
          }
          goto LABEL_48;
        }
      }
      goto LABEL_48;
    }
  }
  else if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst)
    {
      memmove(__dst, __src, 8 * v9);
      __dst = v35;
    }
    id v13 = &__dst[v9];
    id v39 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      while (1)
      {
        id v38 = *v5;
        BOOL v14 = __dst;
        uint64_t v37 = *__dst;
        uint64_t v15 = v37;
        id v16 = v38;
        id v17 = v15;
        BOOL v18 = sub_1C2476E18(&v38, &v37);
        if (v36) {
          break;
        }
        BOOL v19 = v18;

        if (v19)
        {
          BOOL v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5) {
            *uint64_t v6 = *v5;
          }
          __dst = v14;
        }
        else
        {
          if (v6 != v14) {
            *uint64_t v6 = *v14;
          }
          __dst = v14 + 1;
          id v40 = v14 + 1;
          BOOL v20 = v5;
        }
        uint64_t v36 = 0;
        id v41 = ++v6;
        if (__dst < v13)
        {
          uint64_t v5 = v20;
          if ((unint64_t)v20 < a3) {
            continue;
          }
        }
        goto LABEL_48;
      }
    }
LABEL_48:
    sub_1C23F2978(&v41, &v40, &v39);
    return 1;
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C24780D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  sub_1C2477368(0);
  sub_1C2478CCC();
  sub_1C2478DF0();
  sub_1C2478E24(&qword_1EA2E3D50, (void (*)(uint64_t))sub_1C2478CCC);
  sub_1C2478E24(&qword_1EA2E3D68, (void (*)(uint64_t))sub_1C247739C);
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1C254F150();
}

uint64_t sub_1C2478224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  sub_1C24794C8(0);
  type metadata accessor for EntryDetail.EntryDetailRow(0);
  sub_1C247951C();
  sub_1C2478E24(&qword_1EA2E3D98, (void (*)(uint64_t))type metadata accessor for EntryDetail.EntryDetailRow);
  sub_1C2478E24(&qword_1EA2E3DA8, (void (*)(uint64_t))type metadata accessor for EntryDetail.EntryDetailRow);
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1C254F150();
}

uint64_t sub_1C247836C(void *a1)
{
  uint64_t v2 = v1;
  sub_1C247AD98(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v19 - v5;
  sub_1C247AD98(0, &qword_1EA2E3CC0, (uint64_t (*)(uint64_t))sub_1C2477368, MEMORY[0x1E4F1AC70]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v12 = v2 + OBJC_IVAR____TtC15HealthRecordsUIP33_766154230A8DC4663A59392D072AE21B17EntriesDataSource__entries;
  v19[1] = MEMORY[0x1E4FBC860];
  sub_1C2477368(0);
  sub_1C254EB30();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  *(void *)(v2 + 16) = a1;
  uint64_t v13 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  sub_1C254F820();
  id v14 = a1;
  swift_retain();
  uint64_t v15 = sub_1C254F810();
  id v16 = (void *)swift_allocObject();
  uint64_t v17 = MEMORY[0x1E4FBCFD8];
  void v16[2] = v15;
  v16[3] = v17;
  v16[4] = v2;
  sub_1C24D0A0C((uint64_t)v6, (uint64_t)&unk_1EA2E3CD0, (uint64_t)v16);
  swift_release();
  return v2;
}

uint64_t sub_1C24785C4()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2478604(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C222399C;
  return sub_1C2476290(a1, v4, v5, v6);
}

unint64_t sub_1C24786B8()
{
  unint64_t result = qword_1EA2E3CE0;
  if (!qword_1EA2E3CE0)
  {
    type metadata accessor for EntriesDataSource(255);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E3CE0);
  }
  return result;
}

uint64_t destroy for OntologyRegistryView(id *a1)
{
  return swift_release();
}

void *_s15HealthRecordsUI20OntologyRegistryViewVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for OntologyRegistryView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for OntologyRegistryView(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for OntologyRegistryView()
{
  return &type metadata for OntologyRegistryView;
}

uint64_t sub_1C2478838()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for RegistryList(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for RegistryList(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for RegistryList(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for RegistryList(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RegistryList(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RegistryList()
{
  return &type metadata for RegistryList;
}

unint64_t sub_1C24789D4()
{
  unint64_t result = qword_1EA2E3CE8;
  if (!qword_1EA2E3CE8)
  {
    sub_1C2478A4C();
    sub_1C2478B10();
    sub_1C2478B64();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3CE8);
  }
  return result;
}

void sub_1C2478A4C()
{
  if (!qword_1EA2E3CF0)
  {
    sub_1C247AD98(255, &qword_1EA2E3CF8, (uint64_t (*)(uint64_t))sub_1C2478ADC, MEMORY[0x1E4F3DF18]);
    unint64_t v0 = sub_1C254ED80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3CF0);
    }
  }
}

void sub_1C2478ADC(uint64_t a1)
{
}

unint64_t sub_1C2478B10()
{
  unint64_t result = qword_1EA2E3D08;
  if (!qword_1EA2E3D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3D08);
  }
  return result;
}

unint64_t sub_1C2478B64()
{
  unint64_t result = qword_1EA2E3D10;
  if (!qword_1EA2E3D10)
  {
    sub_1C247AD98(255, &qword_1EA2E3CF8, (uint64_t (*)(uint64_t))sub_1C2478ADC, MEMORY[0x1E4F3DF18]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3D10);
  }
  return result;
}

uint64_t sub_1C2478BEC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C2478C08()
{
  if (!qword_1EA2E3D18)
  {
    sub_1C247941C(255, &qword_1EA2E3D20, sub_1C2477368, (void (*)(uint64_t))sub_1C2478CCC, (void (*)(void))sub_1C2478DF0);
    sub_1C2478E6C();
    unint64_t v0 = sub_1C254EF90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3D18);
    }
  }
}

void sub_1C2478CCC()
{
  if (!qword_1EA2E3D28)
  {
    sub_1C2478D48();
    sub_1C2478D9C();
    unint64_t v0 = sub_1C254ED60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3D28);
    }
  }
}

unint64_t sub_1C2478D48()
{
  unint64_t result = qword_1EA2E3D30;
  if (!qword_1EA2E3D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3D30);
  }
  return result;
}

unint64_t sub_1C2478D9C()
{
  unint64_t result = qword_1EA2E3D38;
  if (!qword_1EA2E3D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3D38);
  }
  return result;
}

uint64_t sub_1C2478DF0()
{
  return sub_1C2478E24(&qword_1EA2E3D40, sub_1C2477368);
}

uint64_t sub_1C2478E24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2478E6C()
{
  unint64_t result = qword_1EA2E3D48;
  if (!qword_1EA2E3D48)
  {
    sub_1C247941C(255, &qword_1EA2E3D20, sub_1C2477368, (void (*)(uint64_t))sub_1C2478CCC, (void (*)(void))sub_1C2478DF0);
    sub_1C2478E24(&qword_1EA2E3D50, (void (*)(uint64_t))sub_1C2478CCC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3D48);
  }
  return result;
}

void sub_1C2478F50()
{
  if (!qword_1EA2E3D58)
  {
    sub_1C2478C08();
    sub_1C2478E24(&qword_1EA2E3D60, (void (*)(uint64_t))sub_1C2478C08);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA2E3D58);
    }
  }
}

uint64_t sub_1C2479004()
{
  return sub_1C24780D0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C2479010()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2479048(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = *a1;
  return v2(&v4);
}

id sub_1C2479084@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

ValueMetadata *type metadata accessor for EntryDetail()
{
  return &type metadata for EntryDetail;
}

ValueMetadata *type metadata accessor for EntryRow()
{
  return &type metadata for EntryRow;
}

uint64_t sub_1C24790B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C2479138()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C2479154()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C2479170@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C254EDF0();
  *a1 = result;
  return result;
}

uint64_t sub_1C247919C()
{
  return sub_1C254EE00();
}

uint64_t sub_1C24791C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 112);
  char v7 = *(unsigned char *)(a1 + 120);
  sub_1C22C6CAC(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_1C22C6CAC(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_1C22C6CAC(v5, v6, v7);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1C2479290(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 112);
  char v7 = *(unsigned char *)(a1 + 120);
  sub_1C22C6C58(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_1C22C6C58(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_1C22C6C58(v5, v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

void sub_1C2479358()
{
  if (!qword_1EA2E3D70)
  {
    sub_1C247941C(255, &qword_1EA2E3D78, sub_1C24794C8, (void (*)(uint64_t))type metadata accessor for EntryDetail.EntryDetailRow, (void (*)(void))sub_1C247951C);
    sub_1C2479550();
    unint64_t v0 = sub_1C254EF90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3D70);
    }
  }
}

void sub_1C247941C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_1C254F160();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C24794C8(uint64_t a1)
{
}

uint64_t type metadata accessor for EntryDetail.EntryDetailRow(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E3DB8);
}

uint64_t sub_1C247951C()
{
  return sub_1C2478E24(&qword_1EA2E3D88, sub_1C24794C8);
}

unint64_t sub_1C2479550()
{
  unint64_t result = qword_1EA2E3D90;
  if (!qword_1EA2E3D90)
  {
    sub_1C247941C(255, &qword_1EA2E3D78, sub_1C24794C8, (void (*)(uint64_t))type metadata accessor for EntryDetail.EntryDetailRow, (void (*)(void))sub_1C247951C);
    sub_1C2478E24(&qword_1EA2E3D98, (void (*)(uint64_t))type metadata accessor for EntryDetail.EntryDetailRow);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3D90);
  }
  return result;
}

uint64_t sub_1C2479634()
{
  return sub_1C2478224(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C2479640()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C2479668(uint64_t a1)
{
  uint64_t result = 0x6E776F6E6B6E55;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 0x746F6D6552206E4FLL;
      break;
    case 2:
      uint64_t result = 0x646567617453;
      break;
    case 3:
      uint64_t result = 0x646574726F706D49;
      break;
    default:
      sub_1C254F5A0();
      type metadata accessor for HKOntologyShardState(0);
      sub_1C25504F0();
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_1C247977C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C247AD98(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t *sub_1C24797FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    unint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C254CAD0();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      sub_1C247AD98(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_1C24799B4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_1C2479A8C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C254CAD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    sub_1C247AD98(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

void *sub_1C2479BF4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C254CAD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1C247AD98(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_1C2479DD8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C254CAD0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_1C247AD98(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *sub_1C2479F18(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1C254CAD0();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    sub_1C247AD98(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_1C247A0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C247A0F0);
}

uint64_t sub_1C247A0F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C247AD98(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C247A1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C247A1E4);
}

uint64_t sub_1C247A1E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C247AD98(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C247A2BC()
{
  sub_1C247AD98(319, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1C247A38C()
{
  return sub_1C2478E24(&qword_1EA2E3DC8, (void (*)(uint64_t))sub_1C247A3D4);
}

void sub_1C247A3D4()
{
  if (!qword_1EA2E3DD0)
  {
    sub_1C247AD98(255, &qword_1EA2E3DD8, (uint64_t (*)(uint64_t))sub_1C247A488, MEMORY[0x1E4F3F108]);
    sub_1C247A650(&qword_1EA2E3E48, &qword_1EA2E3DD8, (uint64_t (*)(uint64_t))sub_1C247A488);
    unint64_t v0 = sub_1C254F130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3DD0);
    }
  }
}

void sub_1C247A488()
{
  if (!qword_1EA2E3DE0)
  {
    sub_1C247A70C(255, &qword_1EA2E3DE8, (void (*)(uint64_t))sub_1C247A530);
    sub_1C247A70C(255, &qword_1EA2E3E20, (void (*)(uint64_t))sub_1C247A790);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E3DE0);
    }
  }
}

void sub_1C247A530()
{
  if (!qword_1EA2E3DF0)
  {
    sub_1C247AD98(255, &qword_1EA2E3DF8, (uint64_t (*)(uint64_t))sub_1C247A5E4, MEMORY[0x1E4F3F108]);
    sub_1C247A650(&qword_1EA2E3E08, &qword_1EA2E3DF8, (uint64_t (*)(uint64_t))sub_1C247A5E4);
    unint64_t v0 = sub_1C254F120();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3DF0);
    }
  }
}

void sub_1C247A5E4()
{
  if (!qword_1EA2E3E00)
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA2E3E00);
    }
  }
}

uint64_t sub_1C247A650(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C247AD98(255, a2, a3, MEMORY[0x1E4F3F108]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C247A6B4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C22C67A8(255, a3);
    unint64_t v4 = sub_1C254EF00();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C247A70C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1C247A6B4(255, &qword_1EA2E3E10, &qword_1EA2E3E18);
    unint64_t v4 = sub_1C254ED80();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C247A790()
{
  if (!qword_1EA2E3E28)
  {
    sub_1C247AD98(255, &qword_1EA2E3E30, (uint64_t (*)(uint64_t))sub_1C247A844, MEMORY[0x1E4F3F108]);
    sub_1C247A650(&qword_1EA2E3E40, &qword_1EA2E3E30, (uint64_t (*)(uint64_t))sub_1C247A844);
    unint64_t v0 = sub_1C254F120();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3E28);
    }
  }
}

void sub_1C247A844()
{
  if (!qword_1EA2E3E38)
  {
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EA2E3E38);
    }
  }
}

uint64_t sub_1C247A8B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C247A954()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C247A970()
{
  if (!qword_1EA2E3E50)
  {
    sub_1C247AD98(255, &qword_1EA2E3E58, (uint64_t (*)(uint64_t))sub_1C247AA08, MEMORY[0x1E4F3F108]);
    unint64_t v0 = sub_1C254ED30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3E50);
    }
  }
}

void sub_1C247AA08()
{
  if (!qword_1EA2E3E60)
  {
    sub_1C247AAA8();
    sub_1C247AD98(255, &qword_1EA2E3E90, (uint64_t (*)(uint64_t))sub_1C247AC64, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E3E60);
    }
  }
}

void sub_1C247AAA8()
{
  if (!qword_1EA2E3E68)
  {
    sub_1C247AD98(255, &qword_1EA2E3E70, (uint64_t (*)(uint64_t))sub_1C247AB5C, MEMORY[0x1E4F3F108]);
    sub_1C247A650(&qword_1EA2E3E88, &qword_1EA2E3E70, (uint64_t (*)(uint64_t))sub_1C247AB5C);
    unint64_t v0 = sub_1C254F120();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3E68);
    }
  }
}

void sub_1C247AB5C()
{
  if (!qword_1EA2E3E78)
  {
    sub_1C247ABCC();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA2E3E78);
    }
  }
}

void sub_1C247ABCC()
{
  if (!qword_1EA2E3E80)
  {
    sub_1C254EEF0();
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA2E3E80);
    }
  }
}

void sub_1C247AC64()
{
  if (!qword_1EA2E3E98)
  {
    sub_1C247ACE4();
    sub_1C247A6B4(255, &qword_1EA2E3EC0, &qword_1EA2E3EC8);
    unint64_t v0 = sub_1C254ED80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3E98);
    }
  }
}

void sub_1C247ACE4()
{
  if (!qword_1EA2E3EA0)
  {
    sub_1C247AD98(255, &qword_1EA2E3EA8, (uint64_t (*)(uint64_t))sub_1C247ADFC, MEMORY[0x1E4F3F108]);
    sub_1C247A650(&qword_1EA2E3EB8, &qword_1EA2E3EA8, (uint64_t (*)(uint64_t))sub_1C247ADFC);
    unint64_t v0 = sub_1C254F120();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3EA0);
    }
  }
}

void sub_1C247AD98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C247ADFC()
{
  if (!qword_1EA2E3EB0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E3EB0);
    }
  }
}

void sub_1C247AE64()
{
  if (!qword_1EA2E3ED0)
  {
    sub_1C247AD98(255, &qword_1EA2E3E70, (uint64_t (*)(uint64_t))sub_1C247AB5C, MEMORY[0x1E4F3F108]);
    unint64_t v0 = sub_1C254ED30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3ED0);
    }
  }
}

uint64_t sub_1C247AEFC(uint64_t a1, uint64_t a2)
{
  sub_1C247AAA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C247AF60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C247AD98(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C247AFD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C247B038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  if (a9)
  {
    sub_1C22C6CAC(a6, a7, a8 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C247B0AC(uint64_t a1)
{
  sub_1C247AAA8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C247B108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  if (a9)
  {
    sub_1C22C6C58(a6, a7, a8 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C247B17C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C254EDB0();
  *a1 = result;
  return result;
}

uint64_t sub_1C247B1A8()
{
  return sub_1C254EDC0();
}

uint64_t sub_1C247B1D4()
{
  return sub_1C2478E24(&qword_1EA2E3ED8, (void (*)(uint64_t))sub_1C247B21C);
}

void sub_1C247B21C()
{
  if (!qword_1EA2E3EE0)
  {
    sub_1C247AD98(255, &qword_1EA2E3E58, (uint64_t (*)(uint64_t))sub_1C247AA08, MEMORY[0x1E4F3F108]);
    sub_1C247A650(&qword_1EA2E3EE8, &qword_1EA2E3E58, (uint64_t (*)(uint64_t))sub_1C247AA08);
    unint64_t v0 = sub_1C254F130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3EE0);
    }
  }
}

uint64_t sub_1C247B2D8()
{
  return sub_1C254D330();
}

int64x2_t sub_1C247B30C()
{
  int64x2_t result = vdupq_n_s64(0x4046800000000000uLL);
  xmmword_1EA303D00 = (__int128)result;
  return result;
}

uint64_t sub_1C247B324(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI22TopAlignedIconListCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C2227014(v3, (uint64_t)v9);
  if (v10)
  {
    sub_1C22270A8();
    if (swift_dynamicCast())
    {
      v11[0] = v5;
      v11[1] = v6;
      v11[2] = v7;
      uint64_t v12 = v8;
      sub_1C247B538((uint64_t)v11);
      sub_1C247BF54((uint64_t)v11);
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v9);
  }
  return sub_1C2227100(a1);
}

void (*sub_1C247B400(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0xA8uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI22TopAlignedIconListCell_item;
  v3[19] = v1;
  v3[20] = v4;
  swift_beginAccess();
  return sub_1C247B46C;
}

void sub_1C247B46C(void **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (uint64_t)*a1 + 56;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_1C2227014(v3[19] + v3[20], (uint64_t)(v3 + 14));
    if (v3[17])
    {
      sub_1C22270A8();
      if (swift_dynamicCast())
      {
        long long v5 = *(_OWORD *)(v4 + 16);
        *(_OWORD *)uint64_t v3 = *(_OWORD *)v4;
        *((_OWORD *)v3 + 1) = v5;
        *((_OWORD *)v3 + 2) = *(_OWORD *)(v4 + 32);
        v3[6] = *(void *)(v4 + 48);
        sub_1C247B538((uint64_t)v3);
        sub_1C247BF54((uint64_t)v3);
      }
    }
    else
    {
      sub_1C2227100((uint64_t)(v3 + 14));
    }
  }
  free(v3);
}

void sub_1C247B538(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254E890();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1C87582A0](v6);
  swift_bridgeObjectRetain();
  sub_1C254E860();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  sub_1C254FE50();
  uint64_t v9 = (void (*)(void *, void))sub_1C254E7A0();
  sub_1C254E770();
  v9(v54, 0);
  swift_bridgeObjectRetain();
  sub_1C254E740();
  sub_1C254FE50();
  uint64_t v10 = (void (*)(void *, void))sub_1C254E7F0();
  sub_1C254E770();
  v10(v54, 0);
  id v11 = objc_msgSend(self, sel_secondaryLabelColor);
  uint64_t v12 = (void (*)(void *, void))sub_1C254E7F0();
  sub_1C254E780();
  v12(v54, 0);
  int v13 = self;
  if (qword_1EA2DD840 != -1) {
    swift_once();
  }
  id v14 = objc_msgSend(v13, sel_hk_transparentInterfaceImageWithSize_, xmmword_1EA303D00);
  sub_1C254E870();
  int v15 = (void *)sub_1C254E720();
  self;
  uint64_t v16 = (void *)swift_dynamicCastObjCClass();
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = objc_msgSend(v16, sel_textLayoutGuide);
    if (v18)
    {
      BOOL v19 = v18;
      id v20 = objc_msgSend(v17, sel_imageLayoutGuide);
      if (v20)
      {
        id v49 = v15;
        uint64_t v51 = v5;
        uint64_t v52 = v4;
        id v53 = v20;
        objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        id v21 = objc_msgSend(v2, sel_contentView);
        objc_msgSend(v21, sel_addSubview_, v17);

        id v22 = objc_msgSend(v2, sel_contentView);
        objc_msgSend(v17, sel_hk_alignConstraintsWithView_, v22);

        id v23 = objc_msgSend(v2, sel_separatorLayoutGuide);
        id v24 = objc_msgSend(v23, sel_leadingAnchor);

        id v25 = objc_msgSend(v19, (SEL)&selRef_minusOrderedSet_ + 2);
        id v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

        objc_msgSend(v26, sel_setActive_, 1);
        id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
        objc_msgSend(v27, sel_setImage_, *(void *)(a1 + 48));
        objc_msgSend(v27, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
        id v28 = objc_msgSend(v2, sel_contentView);
        objc_msgSend(v28, sel_addSubview_, v27);

        id v48 = self;
        sub_1C21ACA3C();
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_1C255DBA0;
        id v30 = objc_msgSend(v27, sel_topAnchor);
        id v50 = v19;
        id v31 = objc_msgSend(v19, sel_topAnchor);
        id v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

        *(void *)(v29 + 32) = v32;
        id v33 = objc_msgSend(v27, sel_leadingAnchor);
        id v34 = v53;
        id v35 = objc_msgSend(v53, sel_leadingAnchor);
        id v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);

        *(void *)(v29 + 40) = v36;
        id v37 = objc_msgSend(v27, sel_widthAnchor);
        id v38 = objc_msgSend(v34, sel_widthAnchor);
        id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

        *(void *)(v29 + 48) = v39;
        id v40 = objc_msgSend(v27, sel_heightAnchor);
        id v41 = objc_msgSend(v34, sel_heightAnchor);
        id v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_, v41);

        *(void *)(v29 + 56) = v42;
        v54[0] = v29;
        sub_1C254F730();
        sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
        uint64_t v43 = (void *)sub_1C254F700();
        swift_bridgeObjectRelease();
        objc_msgSend(v48, sel_activateConstraints_, v43);

        uint64_t v44 = *(void **)&v2[OBJC_IVAR____TtC15HealthRecordsUI22TopAlignedIconListCell_iconView];
        *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI22TopAlignedIconListCell_iconView] = v27;
        id v45 = v27;
        if (v44)
        {
          objc_msgSend(v44, sel_removeFromSuperview);
        }
        uint64_t v46 = *(void **)&v2[OBJC_IVAR____TtC15HealthRecordsUI22TopAlignedIconListCell_listContentView];
        *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI22TopAlignedIconListCell_listContentView] = v17;
        id v47 = v49;
        objc_msgSend(v46, sel_removeFromSuperview);

        (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v52);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

id sub_1C247BDF0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TopAlignedIconListCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TopAlignedIconListCell()
{
  return self;
}

uint64_t sub_1C247BEA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI22TopAlignedIconListCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

void (*sub_1C247BEFC(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C247B400(v2);
  return sub_1C2231658;
}

uint64_t sub_1C247BF54(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

void destroy for TopAlignedIconListItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_super v2 = *(void **)(a1 + 48);
}

void *initializeWithCopy for TopAlignedIconListItem(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  __n128 v6 = (void *)a2[6];
  a1[6] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v6;
  return a1;
}

void *assignWithCopy for TopAlignedIconListItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[6];
  uint64_t v5 = (void *)a2[6];
  a1[6] = v5;
  id v6 = v5;

  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TopAlignedIconListItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for TopAlignedIconListItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TopAlignedIconListItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TopAlignedIconListItem()
{
  return &type metadata for TopAlignedIconListItem;
}

unint64_t sub_1C247C224()
{
  unint64_t result = qword_1EA2E3750;
  if (!qword_1EA2E3750)
  {
    type metadata accessor for TopAlignedIconListCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3750);
  }
  return result;
}

uint64_t ClinicalSharingOnboardingInformationalViewController.__allocating_init(onboardingSession:flowType:selectedAccount:delegate:)(char *a1, char *a2, void *a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  return ClinicalSharingOnboardingInformationalViewController.init(onboardingSession:flowType:selectedAccount:delegate:)(a1, a2, a3, a4);
}

unint64_t HKClinicalSharingOnboardingFlowType.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

void sub_1C247C2E8()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3F08 = v1;
  unk_1EA2E3F10 = v3;
}

void sub_1C247C3C0()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3F18 = v1;
  unk_1EA2E3F20 = v3;
}

void sub_1C247C498()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3F28 = v1;
  unk_1EA2E3F30 = v3;
}

void sub_1C247C570()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3F38 = v1;
  unk_1EA2E3F40 = v3;
}

void sub_1C247C648()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3F48 = v1;
  unk_1EA2E3F50 = v3;
}

void sub_1C247C720()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3F58 = v1;
  unk_1EA2E3F60 = v3;
}

void sub_1C247C7F8()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3F68 = v1;
  unk_1EA2E3F70 = v3;
}

void sub_1C247C8D0()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3F78 = v1;
  unk_1EA2E3F80 = v3;
}

void sub_1C247C9A8()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3F88 = v1;
  unk_1EA2E3F90 = v3;
}

void sub_1C247CA80()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3F98 = v1;
  unk_1EA2E3FA0 = v3;
}

void sub_1C247CB58()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3FA8 = v1;
  unk_1EA2E3FB0 = v3;
}

void sub_1C247CC30()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3FB8 = v1;
  unk_1EA2E3FC0 = v3;
}

void sub_1C247CD08()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3FC8 = v1;
  unk_1EA2E3FD0 = v3;
}

void sub_1C247CDE0()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3FD8 = v1;
  unk_1EA2E3FE0 = v3;
}

void sub_1C247CEB8()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3FE8 = v1;
  unk_1EA2E3FF0 = v3;
}

void sub_1C247CF90()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E3FF8 = v1;
  unk_1EA2E4000 = v3;
}

id sub_1C247D068()
{
  uint64_t v1 = OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController____lazy_storage___logoView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController____lazy_storage___logoView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController____lazy_storage___logoView);
  }
  else
  {
    if (qword_1EA2DD4A8 != -1) {
      swift_once();
    }
    id v4 = objc_msgSend(objc_allocWithZone((Class)WDBrandLogoView), sel_initWithSize_, *(double *)&qword_1EA2DEA28);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t ClinicalSharingOnboardingInformationalViewController.init(onboardingSession:flowType:selectedAccount:delegate:)(char *a1, char *a2, void *a3, uint64_t a4)
{
  uint64_t v72 = a4;
  uint64_t v8 = sub_1C254E560();
  uint64_t v66 = *(void *)(v8 - 8);
  uint64_t v67 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v65 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_accountIconProvider;
  uint64_t v11 = qword_1EBB6D898;
  char v71 = v4;
  uint64_t v12 = v4;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v68 = v10;
  *(void *)&v71[v10] = qword_1EBB6EB60;
  uint64_t v13 = OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_gatewayProxyToTry;
  *(void *)&v12[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_gatewayProxyToTry] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v12[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_accountStateCancellable] = 0;
  *(void *)&v12[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController____lazy_storage___logoView] = 0;
  *(void *)&v12[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession] = a1;
  *(void *)&v12[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_flowType] = a2;
  *(void *)&v12[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_selectedAccount] = a3;
  id v14 = *(void **)&a1[OBJC_IVAR___WDClinicalAccountOnboardingSession_profile];
  id v15 = a3;
  uint64_t v16 = v12;
  uint64_t v17 = (uint64_t)a3;
  swift_retain();
  uint64_t v70 = a1;
  id v18 = objc_msgSend(v14, sel_onboardingManager);
  id v19 = objc_msgSend(v18, sel_getPendingOnboardingGatewayAndClear);

  id v20 = *(void **)&v16[v13];
  id v21 = v16;
  *(void *)&v16[v13] = v19;

  swift_unknownObjectWeakAssign();
  id v69 = v15;
  if ((unint64_t)(a2 - 1) < 2)
  {
    uint64_t v22 = v17;
    if (v17)
    {
      uint64_t v67 = v17;
      uint64_t v23 = qword_1EA2DD850;
      id v24 = v15;
      id v25 = v21;
      if (v23 != -1) {
        swift_once();
      }
      sub_1C2269E20();
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1C255CD90;
      id v27 = objc_msgSend(v24, sel_title);
      uint64_t v28 = sub_1C254F470();
      uint64_t v30 = v29;

      *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v26 + 64) = sub_1C220D950();
      *(void *)(v26 + 32) = v28;
      *(void *)(v26 + 40) = v30;
      sub_1C254F4B0();
      id v31 = objc_msgSend(v24, sel_title);
      uint64_t v32 = sub_1C254F470();
      uint64_t v34 = v33;

      swift_beginAccess();
      swift_beginAccess();
      swift_retain();
      id v35 = sub_1C2538408(v32, v34, 60.0);
      swift_endAccess();
      swift_endAccess();
      swift_release();
      a2 = (char *)objc_msgSend(v35, sel_scaledToTargetSize_, 60.0, 60.0);

      swift_bridgeObjectRelease();
      uint64_t v22 = v67;
      goto LABEL_24;
    }
    id v25 = v21;

    uint64_t v43 = v65;
    sub_1C254E510();
    uint64_t v44 = sub_1C254E550();
    os_log_type_t v45 = sub_1C254FA40();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl(&dword_1C21A1000, v44, v45, "ClinicalSharingOnboardingInformationalViewController: there is no selected account.", v46, 2u);
      MEMORY[0x1C875A0B0](v46, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v66 + 8))(v43, v67);
    if (qword_1EA2DD848 != -1) {
      swift_once();
    }
    uint64_t v47 = qword_1EBB6EFD0;
    swift_bridgeObjectRetain();
    if (v47 != -1) {
      swift_once();
    }
    id v48 = (id)qword_1EBB70020;
    id v49 = (void *)sub_1C254F430();
    a2 = (char *)objc_msgSend(self, sel_imageNamed_inBundle_, v49, v48);

    if (a2)
    {
LABEL_24:
      if (qword_1EA2DD858 != -1) {
        swift_once();
      }
      uint64_t v40 = unk_1EA2E3F30;
      swift_bridgeObjectRetain();
      if (v22) {
        goto LABEL_27;
      }
      goto LABEL_15;
    }
    goto LABEL_35;
  }
  if (!a2)
  {

    uint64_t v36 = v17;
    if (qword_1EA2DD848 != -1) {
      swift_once();
    }
    uint64_t v37 = qword_1EBB6EFD0;
    swift_bridgeObjectRetain();
    if (v37 != -1) {
      swift_once();
    }
    id v38 = (id)qword_1EBB70020;
    id v39 = (void *)sub_1C254F430();
    a2 = (char *)objc_msgSend(self, sel_imageNamed_inBundle_, v39, v38);

    if (a2)
    {
      id v25 = v21;
      uint64_t v40 = 0;
      if (v36)
      {
LABEL_27:
        id v50 = v69;
        uint64_t v51 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        if (v40)
        {
          uint64_t v52 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v52 = 0;
        }
        id v53 = (objc_class *)type metadata accessor for ClinicalSharingOnboardingInformationalViewController();
        v74.receiver = v25;
        v74.super_class = v53;
        id v54 = objc_msgSendSuper2(&v74, sel_initWithTitle_detailText_icon_contentLayout_, v51, v52, 0, 2);

        uint64_t v55 = (char *)v54;
        sub_1C247F30C();
        id v56 = sub_1C247D068();
        objc_msgSend(v56, sel_setImage_, a2);

        id v57 = objc_msgSend(*(id *)(*(void *)&v55[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession]+ OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_healthStore);
        id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0A0]), sel_initWithHealthStore_, v57);

        id v59 = objc_msgSend(objc_allocWithZone((Class)WDClinicalSourcesDataProvider), sel_initWithHealthRecordsStore_, v58);
        id v60 = sub_1C247D068();
        objc_msgSend(v60, sel_fetchBrandable_dataProvider_, v50, v59);

        swift_unknownObjectRelease();
        return (uint64_t)v55;
      }
LABEL_15:
      id v41 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      if (v40)
      {
        id v42 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v42 = 0;
      }
      uint64_t v61 = (objc_class *)type metadata accessor for ClinicalSharingOnboardingInformationalViewController();
      v75.receiver = v25;
      v75.super_class = v61;
      unint64_t v62 = a2;
      uint64_t v55 = (char *)objc_msgSendSuper2(&v75, sel_initWithTitle_detailText_icon_contentLayout_, v41, v42, v62, 2);

      swift_unknownObjectRelease();
      return (uint64_t)v55;
    }
    __break(1u);
LABEL_35:
    __break(1u);
  }
  uint64_t v73 = a2;
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

id ClinicalSharingOnboardingInformationalViewController.__deallocating_deinit()
{
  if (*(void *)&v0[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_accountStateCancellable])
  {
    swift_retain();
    sub_1C254EA00();
    swift_release();
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingInformationalViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C247DBDC()
{
  v70.receiver = v0;
  v70.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingInformationalViewController();
  objc_msgSendSuper2(&v70, sel_viewDidLoad);
  id v1 = objc_msgSend(self, sel_boldButton);
  uint64_t v2 = sub_1C254F470();
  id v4 = v3;
  uint64_t v5 = *(void *)&v0[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_flowType];
  id v6 = (void *)&unk_1EA2E4000;
  uint64_t v68 = v2;
  if (v5 != 2)
  {
    uint64_t v67 = v3;
    if (v5 == 1)
    {
      if (qword_1EA2DD860 != -1) {
        swift_once();
      }
      id v7 = (void *)sub_1C254F430();
      if (qword_1EA2DD868 != -1) {
        swift_once();
      }
      uint64_t v8 = (void *)sub_1C254F430();
      uint64_t v9 = (void *)sub_1C254F430();
      uint64_t v10 = self;
      id v11 = objc_msgSend(v10, sel__systemImageNamed_, v9);

      if (!v11)
      {
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_image_, v7, v8, v11);

      if (qword_1EA2DD880 != -1) {
        swift_once();
      }
      uint64_t v12 = (void *)sub_1C254F430();
      if (qword_1EA2DD888 != -1) {
        swift_once();
      }
      uint64_t v13 = (void *)sub_1C254F430();
      id v14 = (void *)sub_1C254F430();
      id v15 = objc_msgSend(v10, sel__systemImageNamed_, v14);

      if (!v15) {
        goto LABEL_63;
      }
      objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_image_, v12, v13, v15);

      if (qword_1EA2DD8B8 != -1) {
        swift_once();
      }
      uint64_t v16 = (void *)sub_1C254F430();
      objc_msgSend(v1, sel_setTitle_forState_, v16, 0);

      objc_msgSend(v1, sel_addTarget_action_forControlEvents_, v0, sel_nextButtonTappedForAccountLogin_, 64);
      id v17 = objc_msgSend(v0, sel_buttonTray);
      objc_msgSend(v17, sel_addButton_, v1);

      sub_1C2200144(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1C255CDA0;
      *(void *)(v18 + 32) = v68;
      *(void *)(v18 + 40) = v67;
      strcpy((char *)(v18 + 48), "SetupSHaring");
      *(unsigned char *)(v18 + 61) = 0;
      *(_WORD *)(v18 + 62) = -5120;
      id v4 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v19 = (id)HKUIJoinStringsForAutomationIdentifier();

      if (!v19)
      {
        __break(1u);
        goto LABEL_17;
      }
    }
    else
    {
      if (v5)
      {
LABEL_70:
        uint64_t result = sub_1C25508E0();
        __break(1u);
        return result;
      }
      if (qword_1EA2DD870 != -1) {
        swift_once();
      }
      id v39 = (void *)sub_1C254F430();
      if (qword_1EA2DD878 != -1) {
        swift_once();
      }
      uint64_t v40 = (void *)sub_1C254F430();
      id v41 = (void *)sub_1C254F430();
      id v42 = self;
      id v43 = objc_msgSend(v42, sel__systemImageNamed_, v41);

      if (!v43) {
        goto LABEL_66;
      }
      objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_image_, v39, v40, v43);

      if (qword_1EA2DD890 != -1) {
        swift_once();
      }
      uint64_t v44 = (void *)sub_1C254F430();
      if (qword_1EA2DD898 != -1) {
        swift_once();
      }
      os_log_type_t v45 = (void *)sub_1C254F430();
      uint64_t v46 = (void *)sub_1C254F430();
      id v47 = objc_msgSend(v42, sel__systemImageNamed_, v46);

      if (!v47) {
        goto LABEL_67;
      }
      objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_image_, v44, v45, v47);

      if (qword_1EA2DD8A0 != -1) {
        swift_once();
      }
      id v48 = (void *)sub_1C254F430();
      if (qword_1EA2DD8A8 != -1) {
        swift_once();
      }
      id v49 = (void *)sub_1C254F430();
      id v50 = (void *)sub_1C254F430();
      id v51 = objc_msgSend(v42, sel__systemImageNamed_, v50);

      if (!v51) {
        goto LABEL_68;
      }
      objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_image_, v48, v49, v51);

      id v6 = &unk_1EA2E4000;
      if (qword_1EA2DD8B0 != -1) {
        swift_once();
      }
      uint64_t v52 = (void *)sub_1C254F430();
      objc_msgSend(v1, sel_setTitle_forState_, v52, 0);

      objc_msgSend(v1, sel_addTarget_action_forControlEvents_, v0, sel_nextButtonTappedForProviderSearch_, 64);
      id v53 = objc_msgSend(v0, sel_buttonTray);
      objc_msgSend(v53, sel_addButton_, v1);

      sub_1C2200144(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_1C255CDA0;
      *(void *)(v54 + 32) = v68;
      *(void *)(v54 + 40) = v67;
      *(void *)(v54 + 48) = 0x6972616853776F48;
      *(void *)(v54 + 56) = 0xEF736B726F57676ELL;
      uint64_t v55 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v19 = (id)HKUIJoinStringsForAutomationIdentifier();

      if (!v19) {
        goto LABEL_69;
      }
    }
    uint64_t v34 = sub_1C254F470();
    uint64_t v36 = v56;
    goto LABEL_54;
  }
LABEL_17:
  if (qword_1EA2DD860 != -1) {
    swift_once();
  }
  id v20 = (void *)sub_1C254F430();
  if (qword_1EA2DD868 != -1) {
    swift_once();
  }
  id v21 = (void *)sub_1C254F430();
  uint64_t v22 = (void *)sub_1C254F430();
  uint64_t v23 = self;
  id v24 = objc_msgSend(v23, sel__systemImageNamed_, v22);

  if (!v24) {
    goto LABEL_62;
  }
  objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_image_, v20, v21, v24);

  if (qword_1EA2DD880 != -1) {
    swift_once();
  }
  id v25 = (void *)sub_1C254F430();
  if (qword_1EA2DD888 != -1) {
    swift_once();
  }
  uint64_t v26 = (void *)sub_1C254F430();
  id v27 = (void *)sub_1C254F430();
  id v28 = objc_msgSend(v23, sel__systemImageNamed_, v27);

  if (!v28) {
    goto LABEL_64;
  }
  objc_msgSend(v0, sel_addBulletedListItemWithTitle_description_image_, v25, v26, v28);

  if (qword_1EA2DD8B8 != -1) {
    swift_once();
  }
  uint64_t v29 = (void *)sub_1C254F430();
  objc_msgSend(v1, sel_setTitle_forState_, v29, 0);

  objc_msgSend(v1, sel_addTarget_action_forControlEvents_, v0, sel_nextButtonTappedForAuthorizationSelection_, 64);
  id v30 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v30, sel_addButton_, v1);

  sub_1C2200144(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C255CDA0;
  *(void *)(v31 + 32) = v68;
  *(void *)(v31 + 40) = v4;
  strcpy((char *)(v31 + 48), "SetupSHaring");
  *(unsigned char *)(v31 + 61) = 0;
  *(_WORD *)(v31 + 62) = -5120;
  uint64_t v32 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v33 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v33) {
    goto LABEL_65;
  }
  uint64_t v34 = sub_1C254F470();
  uint64_t v36 = v35;

  if ((*(unsigned char *)(*(void *)&v0[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession]
                 + OBJC_IVAR___WDClinicalAccountOnboardingSession_options) & 1) != 0)
  {
    id v6 = (void *)&unk_1EA2E4000;
    goto LABEL_55;
  }
  id v37 = objc_msgSend(self, sel_linkButton);
  if (qword_1EA2DD8C0 != -1) {
    swift_once();
  }
  id v38 = (void *)sub_1C254F430();
  objc_msgSend(v37, sel_setTitle_forState_, v38, 0);

  objc_msgSend(v37, sel_addTarget_action_forControlEvents_, v0, sel_skipButtonTappedForAuthorizationSelection_, 64);
  id v19 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v19, sel_addButton_, v37);

  id v6 = (void *)&unk_1EA2E4000;
LABEL_54:

LABEL_55:
  uint64_t v57 = *(void *)&v0[v6[6]];
  uint64_t v58 = OBJC_IVAR___WDClinicalAccountOnboardingSession_context;
  if (*(void *)(v57 + OBJC_IVAR___WDClinicalAccountOnboardingSession_context) != 2)
  {
    id v59 = objc_msgSend(v0, sel_navigationItem);
    id v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_cancelButtonTapped_);
    objc_msgSend(v59, sel_setRightBarButtonItem_, v60);
  }
  id v61 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EA2DD758 != -1) {
    swift_once();
  }
  objc_msgSend(v61, sel_addObserver_selector_name_object_, v0, sel_didReceiveClinicalAccountOnboardingCompletionWithNotification_, qword_1EA2E2870, 0, v67);

  sub_1C247EAEC();
  unint64_t v62 = *(void **)(v57 + OBJC_IVAR___WDClinicalAccountOnboardingSession_sharingClient);
  unint64_t v63 = (void *)sub_1C254F430();
  sub_1C22CC2DC(*(void *)(v57 + v58));
  uint64_t v64 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  aBlock[4] = nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C22AE944;
  aBlock[3] = &block_descriptor_61;
  uint64_t v65 = _Block_copy(aBlock);
  objc_msgSend(v62, sel_submitOnboardingAnalyticsForStepIdentifier_context_completion_, v63, v64, v65);
  _Block_release(v65);

  sub_1C247EFC8(v1, v34, v36);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C247EAEC()
{
  uint64_t v1 = v0;
  sub_1C2482C80(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v17 - v3;
  sub_1C22B3B24();
  uint64_t v17 = *(void *)(v5 - 8);
  uint64_t v18 = v5;
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB6EF30 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1EBB6FB90;
  id v9 = objc_msgSend(*(id *)(*(void *)(v0 + OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession)+ OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_healthStore);
  id v10 = objc_msgSend(v9, sel_profileIdentifier);

  id v19 = *(id *)(v8 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v11);
  *(&v17 - 2) = v8;
  *(&v17 - 1) = (uint64_t)v10;
  sub_1C254CEE0();
  type metadata accessor for AccountStateProvider();
  sub_1C2482F70((unint64_t *)&qword_1EBB6F240, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();

  swift_release();
  uint64_t v12 = *(void *)(v20 + 24);
  swift_retain();
  swift_release();
  uint64_t v20 = v12;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v19 = (id)sub_1C254FC70();
  uint64_t v13 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  sub_1C21A842C();
  sub_1C2482F70((unint64_t *)&unk_1EA2DE3C8, (void (*)(uint64_t))sub_1C21A842C);
  sub_1C22611AC();
  sub_1C254EC70();
  sub_1C2482ED0((uint64_t)v4, (uint64_t)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2482C80);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C2482F70((unint64_t *)&unk_1EA2DE3D8, (void (*)(uint64_t))sub_1C22B3B24);
  uint64_t v14 = v18;
  uint64_t v15 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v14);
  *(void *)(v1 + OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_accountStateCancellable) = v15;
  return swift_release();
}

void sub_1C247EFC8(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1C2200144(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  v29[1] = (id)4;
  *(_OWORD *)(v7 + 16) = xmmword_1C255CDA0;
  *(void *)(v7 + 32) = a2;
  *(void *)(v7 + 40) = a3;
  swift_bridgeObjectRetain();
  id v8 = objc_msgSend(a1, sel_currentTitle);
  id v9 = v8;
  if (v8)
  {
    id v10 = objc_msgSend(v8, sel_removeSpecialCharactersAndWhiteSpaces);

    id v9 = (void *)sub_1C254F470();
    unint64_t v12 = v11;
  }
  else
  {
    unint64_t v12 = 0xE000000000000000;
  }
  *(void *)(v7 + 48) = v9;
  *(void *)(v7 + 56) = v12;
  uint64_t v13 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v14 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(a1, sel_setAccessibilityIdentifier_, v14);
  id v15 = objc_msgSend(v3, sel_navigationItem);
  id v16 = objc_msgSend(v15, sel_rightBarButtonItem);

  if (v16)
  {
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C255CDA0;
    *(void *)(v17 + 32) = a2;
    *(void *)(v17 + 40) = a3;
    *(void *)(v17 + 48) = 0x6C65636E6143;
    *(void *)(v17 + 56) = 0xE600000000000000;
    swift_bridgeObjectRetain();
    uint64_t v18 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v19 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v16, sel_setAccessibilityIdentifier_, v19);
  }
  id v20 = objc_msgSend(v3, sel_headerView, 2);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = *(_OWORD *)v29;
  *(void *)(v21 + 32) = a2;
  *(void *)(v21 + 40) = a3;
  swift_bridgeObjectRetain();
  id v22 = objc_msgSend(v3, sel_headerView);
  id v23 = objc_msgSend(v22, sel_title);

  if (!v23)
  {
    sub_1C254F470();
    id v23 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  id v24 = objc_msgSend(v23, sel_removeSpecialCharactersAndWhiteSpaces);

  uint64_t v25 = sub_1C254F470();
  uint64_t v27 = v26;

  *(void *)(v21 + 48) = v25;
  *(void *)(v21 + 56) = v27;
  id v28 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v30 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v20, sel_setAccessibilityIdentifier_, v30);
}

void sub_1C247F30C()
{
  id v1 = objc_msgSend(v0, sel_headerView);
  id v2 = objc_msgSend(v1, sel_customIconContainerView);

  if (v2)
  {
    objc_msgSend(v2, sel_setClipsToBounds_, 0);
    id v3 = sub_1C247D068();
    objc_msgSend(v2, sel_addSubview_, v3);

    id v4 = sub_1C247D068();
    id v5 = objc_msgSend(v4, sel_widthAnchor);

    if (qword_1EA2DD4A8 != -1) {
      swift_once();
    }
    id v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, *(double *)&qword_1EA2DEA28);

    objc_msgSend(v6, sel_setActive_, 1);
    id v7 = sub_1C247D068();
    id v8 = objc_msgSend(v7, sel_heightAnchor);

    id v9 = objc_msgSend(v8, sel_constraintEqualToConstant_, *(double *)&qword_1EA2DEA28);
    objc_msgSend(v9, sel_setActive_, 1);

    id v10 = sub_1C247D068();
    id v11 = objc_msgSend(v10, sel_centerXAnchor);

    id v12 = objc_msgSend(v2, sel_centerXAnchor);
    id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

    objc_msgSend(v13, sel_setActive_, 1);
    id v14 = sub_1C247D068();
    id v15 = objc_msgSend(v14, sel_centerYAnchor);

    id v16 = objc_msgSend(v2, sel_centerYAnchor);
    id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

    objc_msgSend(v17, sel_setActive_, 1);
  }
}

void sub_1C247F5C0()
{
  id v1 = objc_msgSend(v0, sel_navigationController);
  if (v1)
  {
    id v2 = v1;
    self;
    uint64_t v3 = swift_dynamicCastObjCClass();
    if (v3)
    {
      id v4 = (void *)v3;
      uint64_t v5 = *(void *)&v0[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession];
      id v6 = objc_msgSend(objc_allocWithZone((Class)WDClinicalOnboardingViewController), sel_initWithProfile_gatewayProxy_, *(void *)(v5 + OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), *(void *)&v0[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_gatewayProxyToTry]);
      objc_msgSend(v6, sel_setShowOnlyClinicalSharingCapableProviders_, 1);
      objc_msgSend(v4, sel_pushViewController_animated_, v6, 1);
      id v7 = *(void **)(v5 + OBJC_IVAR___WDClinicalAccountOnboardingSession_sharingClient);
      id v8 = (void *)sub_1C254F430();
      sub_1C22CC2DC(*(void *)(v5 + OBJC_IVAR___WDClinicalAccountOnboardingSession_context));
      id v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C22AE944;
      aBlock[3] = &block_descriptor_37;
      id v10 = _Block_copy(aBlock);
      objc_msgSend(v7, sel_submitOnboardingAnalyticsForStepIdentifier_context_completion_, v8, v9, v10);
      _Block_release(v10);

      return;
    }
  }
  sub_1C25503A0();
  sub_1C254F5A0();
  objc_msgSend(v0, sel_navigationController);
  sub_1C244D208();
  sub_1C254F4F0();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C25505F0();
  __break(1u);
}

void sub_1C247F8BC()
{
  id v1 = v0;
  sub_1C2482C80(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v32 - v3;
  uint64_t v5 = sub_1C254E560();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v32 - v10;
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v32 - v13;
  id v15 = *(void **)&v1[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_selectedAccount];
  if (v15)
  {
    id v16 = v15;
    if (objc_msgSend(v16, sel_needsLoginToEnableClinicalSharing))
    {
      sub_1C254E510();
      id v17 = sub_1C254E550();
      os_log_type_t v18 = sub_1C254FA40();
      if (os_log_type_enabled(v17, v18))
      {
        id v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v19 = 0;
        _os_log_impl(&dword_1C21A1000, v17, v18, "ClinicalSharingOnboardingInformationalViewController: account needs login to enable clinical sharing", v19, 2u);
        MEMORY[0x1C875A0B0](v19, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
      uint64_t v20 = sub_1C254F840();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v4, 1, 1, v20);
      sub_1C254F820();
      id v21 = v16;
      id v22 = v1;
      uint64_t v23 = sub_1C254F810();
      id v24 = (void *)swift_allocObject();
      uint64_t v25 = MEMORY[0x1E4FBCFD8];
      void v24[2] = v23;
      v24[3] = v25;
      _OWORD v24[4] = v22;
      v24[5] = v21;
      sub_1C24D0A0C((uint64_t)v4, (uint64_t)&unk_1EA2E4058, (uint64_t)v24);
      swift_release();
    }
    else
    {
      sub_1C254E510();
      uint64_t v29 = sub_1C254E550();
      os_log_type_t v30 = sub_1C254FA40();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl(&dword_1C21A1000, v29, v30, "ClinicalSharingOnboardingInformationalViewController: account is logged in and has necessary scopes, proceeding to data selection", v31, 2u);
        MEMORY[0x1C875A0B0](v31, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      sub_1C2480144(v16, 1, 0);
    }
  }
  else
  {
    sub_1C254E510();
    uint64_t v26 = sub_1C254E550();
    os_log_type_t v27 = sub_1C254FA40();
    if (os_log_type_enabled(v26, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v28 = 0;
      _os_log_impl(&dword_1C21A1000, v26, v27, "ClinicalSharingOnboardingInformationalViewController: there is no selected account, starting provider search", v28, 2u);
      MEMORY[0x1C875A0B0](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C247F5C0();
  }
}

uint64_t sub_1C247FCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = sub_1C254F820();
  v5[3] = sub_1C254F810();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[4] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_1C22415D0;
  return sub_1C247FD90(a5);
}

uint64_t sub_1C247FD90(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_1C254F820();
  v2[4] = sub_1C254F810();
  uint64_t v4 = sub_1C254F7D0();
  v2[5] = v4;
  v2[6] = v3;
  return MEMORY[0x1F4188298](sub_1C247FE28, v4, v3);
}

uint64_t sub_1C247FE28()
{
  id v1 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EA2DD768 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[3];
  objc_msgSend(v1, sel_addObserver_selector_name_object_, v2, sel_didReceiveOAuthCompletionWithNotification_, qword_1EA2E2880, 0);

  uint64_t v3 = *(void **)(*(void *)(v2 + OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession)
                + OBJC_IVAR___WDClinicalAccountOnboardingSession_profile);
  type metadata accessor for ClinicalAccountManager();
  uint64_t v4 = (void *)swift_allocObject();
  v0[7] = v4;
  uint64_t v5 = MEMORY[0x1E4FBC870];
  v4[5] = 0;
  v4[6] = 0;
  v4[4] = v5;
  v4[2] = v3;
  v4[3] = objc_msgSend(v3, sel_clinicalAccountStore);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C247FFB8;
  uint64_t v8 = v0[2];
  uint64_t v7 = v0[3];
  return ClinicalAccountManager.startRelogin(to:from:)(v8, v7);
}

uint64_t sub_1C247FFB8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return MEMORY[0x1F4188298](sub_1C24800D8, v3, v2);
}

uint64_t sub_1C24800D8()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1C2480144(void *a1, char a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C254F230();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (void *)((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *id v11 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBF0], v8);
  char v12 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    uint64_t v13 = *(void **)&v4[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession];
    id v14 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingDataTypeSelectionViewController(0));
    id v15 = v13;
    id v16 = a1;
    id v17 = sub_1C220F0DC(v15, v16);

    if (a3)
    {
      id v18 = objc_msgSend(v17, sel_navigationItem);
      objc_msgSend(v18, sel_setHidesBackButton_animated_, 1, 0);
    }
    id v19 = objc_msgSend(v4, sel_navigationController);
    if (v19)
    {
      uint64_t v20 = v19;
      objc_msgSend(v19, sel_pushViewController_animated_, v17, a2 & 1);
    }
    id v21 = *(void **)&v15[OBJC_IVAR___WDClinicalAccountOnboardingSession_sharingClient];
    id v22 = (void *)sub_1C254F430();
    sub_1C22CC2DC(*(void *)&v15[OBJC_IVAR___WDClinicalAccountOnboardingSession_context]);
    uint64_t v23 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    aBlock[4] = nullsub_1;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C22AE944;
    aBlock[3] = &block_descriptor_18_3;
    id v24 = _Block_copy(aBlock);
    objc_msgSend(v21, sel_submitOnboardingAnalyticsForStepIdentifier_context_completion_, v22, v23, v24);
    _Block_release(v24);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C2480438()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_selectedAccount);
  if (v6)
  {
    id v12 = v6;
    sub_1C2480144(v12, 1, 0);
    uint64_t v7 = v12;
  }
  else
  {
    sub_1C254E510();
    uint64_t v8 = sub_1C254E550();
    os_log_type_t v9 = sub_1C254FA40();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1C21A1000, v8, v9, "ClinicalSharingOnboardingInformationalViewController: there is no selected account.", v10, 2u);
      MEMORY[0x1C875A0B0](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1C247F5C0();
  }
}

void sub_1C24805F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2482C80(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v42 - v7;
  uint64_t v9 = sub_1C254E560();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v42 - v14;
  id v16 = *(void **)&v1[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_selectedAccount];
  if (v16)
  {
    uint64_t v45 = v3;
    self;
    uint64_t v17 = swift_dynamicCastObjCClass();
    id v18 = v16;
    id v19 = v18;
    if (v17)
    {
      sub_1C254E510();
      uint64_t v20 = sub_1C254E550();
      os_log_type_t v21 = sub_1C254FA40();
      if (os_log_type_enabled(v20, v21))
      {
        id v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v22 = 0;
        _os_log_impl(&dword_1C21A1000, v20, v21, "ClinicalSharingOnboardingInformationalViewController: skipping clinical sharing for a new account, persisting account and finishing", v22, 2u);
        MEMORY[0x1C875A0B0](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      uint64_t v23 = *(void **)&v1[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession];
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v1;
      uint64_t v25 = sub_1C254F840();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 1, 1, v25);
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = 0;
      *(void *)(v26 + 24) = 0;
      *(void *)(v26 + 32) = v23;
      *(void *)(v26 + 40) = v17;
      *(unsigned char *)(v26 + 48) = 0;
      *(void *)(v26 + 56) = sub_1C2482D1C;
      *(void *)(v26 + 64) = v24;
      id v27 = v19;
      id v28 = v1;
      id v29 = v23;
      swift_retain();
      sub_1C24D0A0C((uint64_t)v8, (uint64_t)&unk_1EA2E3B48, v26);

      swift_release();
      swift_release();
    }
    else
    {
      id v44 = v18;
      sub_1C254E510();
      os_log_type_t v30 = sub_1C254E550();
      uint64_t v31 = sub_1C254FA40();
      if (os_log_type_enabled(v30, (os_log_type_t)v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl(&dword_1C21A1000, v30, (os_log_type_t)v31, "ClinicalSharingOnboardingInformationalViewController: skipping clinical sharing for existing account, triggering ingestion and finishing", v32, 2u);
        MEMORY[0x1C875A0B0](v32, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v43 = *(void *)&v1[OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_onboardingSession];
      id v33 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v43
                                                                  + OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_ingestionStore));
      uint64_t v34 = (void *)sub_1C254F430();
      sub_1C2482C80(0, &qword_1EA2E3BA0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBBE00]);
      uint64_t v35 = v45;
      unint64_t v36 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1C255CD90;
      unint64_t v38 = v37 + v36;
      id v39 = v44;
      id v40 = objc_msgSend(v44, sel_identifier);
      sub_1C254CB20();

      (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v38, v5, v2);
      id v41 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      objc_msgSend(v33, sel_ingestHealthRecordsWithOptions_reason_accountIdentifiers_completion_, 0, v34, v41, 0);

      sub_1C252B094();
      objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
  }
}

uint64_t sub_1C2480B88(void *a1, void *a2, void *a3)
{
  uint64_t v6 = sub_1C254F1C0();
  uint64_t v20 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C254F200();
  uint64_t v9 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v12 = (void *)sub_1C254FC70();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a3;
  v13[4] = a2;
  aBlock[4] = sub_1C2482DBC;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_34_1;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a1;
  id v16 = a3;
  id v17 = a2;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C2482F70((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C2482C80(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v19);
}

void sub_1C2480E8C(uint64_t a1, void *a2, id a3)
{
  if (a1)
  {
    sub_1C252B094();
    objc_msgSend(a2, sel_dismissViewControllerAnimated_completion_, 1, 0);
    return;
  }
  if (qword_1EBB6D858 != -1)
  {
    swift_once();
    if (a3) {
      goto LABEL_7;
    }
LABEL_9:
    id v5 = objc_msgSend(self, sel_hk_error_userInfo_, 0, 0);
    goto LABEL_10;
  }
  if (!a3) {
    goto LABEL_9;
  }
LABEL_7:
  id v5 = a3;
LABEL_10:
  id v6 = a3;
  id v7 = sub_1C2453138(0, v5);

  objc_msgSend(a2, sel_presentViewController_animated_completion_, v7, 1, 0);
}

uint64_t sub_1C2480FDC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v6 = a1;
  sub_1C25501E0();
  uint64_t v7 = swift_unknownObjectRelease();
  a4(v7);

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v9);
}

id ClinicalSharingOnboardingInformationalViewController.__allocating_init(title:detailText:symbolName:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  id v12 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    uint64_t v13 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v14 = 0;
    goto LABEL_6;
  }
  uint64_t v13 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
LABEL_6:
  id v15 = objc_msgSend(objc_allocWithZone(v8), sel_initWithTitle_detailText_symbolName_contentLayout_, v12, v13, v14, a7);

  return v15;
}

void ClinicalSharingOnboardingInformationalViewController.init(title:detailText:symbolName:contentLayout:)()
{
}

id ClinicalSharingOnboardingInformationalViewController.__allocating_init(title:detailText:icon:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v11 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (a4)
  {
    id v12 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v12 = 0;
  }
  id v13 = objc_msgSend(objc_allocWithZone(v7), sel_initWithTitle_detailText_icon_contentLayout_, v11, v12, a5, a6);

  return v13;
}

void ClinicalSharingOnboardingInformationalViewController.init(title:detailText:icon:contentLayout:)()
{
}

void sub_1C2481320()
{
  uint64_t v1 = v0;
  if (objc_msgSend(self, sel_isAppleInternalInstall))
  {
    sub_1C25503A0();
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    sub_1C2550940();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t v2 = (void *)sub_1C254F430();
    uint64_t v3 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v2, v3, 1);

    id v5 = (void *)sub_1C254F430();
    id v6 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v5, 0, 0);

    objc_msgSend(v4, sel_addAction_, v6);
    objc_msgSend(v1, sel_presentViewController_animated_completion_, v4, 1, 0);
  }
}

uint64_t sub_1C24814D8(uint64_t a1)
{
  uint64_t v2 = sub_1C254F1C0();
  uint64_t v22 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C254F200();
  uint64_t v20 = *(void *)(v5 - 8);
  uint64_t v21 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254C580();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v12 = (void *)sub_1C254FC70();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  id v15 = v19;
  *(void *)(v14 + 16) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, v11, v8);
  aBlock[4] = sub_1C2482C1C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_21_0;
  id v16 = _Block_copy(aBlock);
  id v17 = v15;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C2482F70((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C2482C80(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v7, v4, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v7, v21);
}

void sub_1C248188C()
{
  uint64_t v1 = v0;
  uint64_t v50 = sub_1C254E560();
  uint64_t v2 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  id v4 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v47 - v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v47 - v9;
  uint64_t v11 = sub_1C254F230();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (void *)((char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t *v14 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCBF0], v11);
  uint64_t v15 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    uint64_t v15 = (uint64_t)objc_msgSend(self, sel_defaultCenter);
    if (qword_1EA2DD768 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  objc_msgSend((id)v15, sel_removeObserver_name_object_, v1, qword_1EA2E2880, 0);

  uint64_t v16 = sub_1C254C570();
  if (!v16)
  {
    long long v54 = 0u;
    long long v55 = 0u;
LABEL_13:
    sub_1C2482ED0((uint64_t)&v54, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2200144);
    goto LABEL_14;
  }
  uint64_t v17 = v16;
  unint64_t v51 = 0xD00000000000002BLL;
  unint64_t v52 = 0x80000001C25770A0;
  sub_1C2550330();
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_1C2457670((uint64_t)v53), (v19 & 1) != 0))
  {
    sub_1C21A9A38(*(void *)(v17 + 56) + 32 * v18, (uint64_t)&v54);
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1C2298B34((uint64_t)v53);
  if (!*((void *)&v55 + 1)) {
    goto LABEL_13;
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
  if (swift_dynamicCast())
  {
    id v20 = v53[0];
    sub_1C254E510();
    id v21 = v20;
    id v22 = v20;
    uint64_t v23 = sub_1C254E550();
    os_log_type_t v24 = sub_1C254FA20();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(void *)&long long v54 = v49;
      *(_DWORD *)uint64_t v25 = 136315138;
      v47[1] = v25 + 4;
      id v48 = v25;
      v53[0] = v20;
      id v26 = v20;
      id v27 = v20;
      sub_1C25508F0();
      id v28 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v29 = sub_1C254F4F0();
      unint64_t v31 = v30;

      v53[0] = (id)sub_1C21AD354(v29, v31, (uint64_t *)&v54);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      uint64_t v32 = v48;
      _os_log_impl(&dword_1C21A1000, v23, v24, "ClinicalSharingOnboardingInformationalViewController: error logging in: %s", v48, 0xCu);
      uint64_t v33 = v49;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v33, -1, -1);
      MEMORY[0x1C875A0B0](v32, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v50);
    uint64_t v45 = (void *)sub_1C254C810();
    unsigned int v46 = objc_msgSend(v45, sel_hk_isUserCanceledError);

    if (!v46) {
      sub_1C2481320();
    }

    return;
  }
LABEL_14:
  uint64_t v34 = sub_1C254C570();
  if (!v34)
  {
    long long v54 = 0u;
    long long v55 = 0u;
    uint64_t v38 = v50;
LABEL_25:
    sub_1C2482ED0((uint64_t)&v54, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2200144);
    goto LABEL_26;
  }
  uint64_t v35 = v34;
  unint64_t v51 = 0xD00000000000002DLL;
  unint64_t v52 = 0x80000001C2577040;
  sub_1C2550330();
  if (*(void *)(v35 + 16) && (unint64_t v36 = sub_1C2457670((uint64_t)v53), (v37 & 1) != 0))
  {
    sub_1C21A9A38(*(void *)(v35 + 56) + 32 * v36, (uint64_t)&v54);
  }
  else
  {
    long long v54 = 0u;
    long long v55 = 0u;
  }
  uint64_t v38 = v50;
  swift_bridgeObjectRelease();
  sub_1C2298B34((uint64_t)v53);
  if (!*((void *)&v55 + 1)) {
    goto LABEL_25;
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
  if (swift_dynamicCast())
  {

    sub_1C254E510();
    id v39 = sub_1C254E550();
    os_log_type_t v40 = sub_1C254FA40();
    if (os_log_type_enabled(v39, v40))
    {
      id v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v41 = 0;
      _os_log_impl(&dword_1C21A1000, v39, v40, "ClinicalSharingOnboardingInformationalViewController: account logged in again, OAuth navigation controller will proceed to data selection", v41, 2u);
      MEMORY[0x1C875A0B0](v41, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v38);
    return;
  }
LABEL_26:
  sub_1C254E510();
  uint64_t v42 = sub_1C254E550();
  os_log_type_t v43 = sub_1C254FA20();
  if (os_log_type_enabled(v42, v43))
  {
    id v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v44 = 0;
    _os_log_impl(&dword_1C21A1000, v42, v43, "ClinicalSharingOnboardingInformationalViewController: login completed with neither error nor account", v44, 2u);
    MEMORY[0x1C875A0B0](v44, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v38);
}

void sub_1C2482068()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CB40();
  uint64_t v57 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v4 = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1C254E560();
  uint64_t v5 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v7 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v53 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v53 - v12;
  uint64_t v14 = sub_1C254C570();
  if (!v14)
  {
    long long v62 = 0u;
    long long v63 = 0u;
LABEL_11:
    sub_1C2482ED0((uint64_t)&v62, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2200144);
    goto LABEL_13;
  }
  uint64_t v15 = v14;
  unint64_t v59 = 0xD00000000000003FLL;
  unint64_t v60 = 0x80000001C2581A00;
  sub_1C2550330();
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_1C2457670((uint64_t)v61), (v17 & 1) != 0))
  {
    sub_1C21A9A38(*(void *)(v15 + 56) + 32 * v16, (uint64_t)&v62);
  }
  else
  {
    long long v62 = 0u;
    long long v63 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1C2298B34((uint64_t)v61);
  if (!*((void *)&v63 + 1)) {
    goto LABEL_11;
  }
  uint64_t v56 = v1;
  sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
  if (swift_dynamicCast())
  {
    unint64_t v18 = (void *)v61[0];
    sub_1C254E510();
    id v19 = v18;
    id v20 = v18;
    id v21 = sub_1C254E550();
    os_log_type_t v22 = sub_1C254FA20();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      *(void *)&long long v62 = v57;
      *(_DWORD *)uint64_t v23 = 136315138;
      long long v55 = v23 + 4;
      v61[0] = (uint64_t)v18;
      id v24 = v18;
      id v25 = v18;
      sub_1C25508F0();
      id v26 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v27 = sub_1C254F4F0();
      unint64_t v29 = v28;

      v61[0] = sub_1C21AD354(v27, v29, (uint64_t *)&v62);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v21, v22, "ClinicalSharingOnboardingInformationalViewController: didReceiveClinicalAccountOnboardingCompletion with error %s", v23, 0xCu);
      uint64_t v30 = v57;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v30, -1, -1);
      MEMORY[0x1C875A0B0](v23, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v58);
    unint64_t v51 = (void *)sub_1C254C810();
    unsigned int v52 = objc_msgSend(v51, sel_hk_isUserCanceledError);

    if (!v52) {
      sub_1C2481320();
    }

    return;
  }
  uint64_t v1 = v56;
LABEL_13:
  uint64_t v31 = sub_1C254C570();
  if (!v31)
  {
    long long v62 = 0u;
    long long v63 = 0u;
LABEL_23:
    sub_1C2482ED0((uint64_t)&v62, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2200144);
    goto LABEL_24;
  }
  uint64_t v32 = v31;
  unint64_t v59 = 0xD000000000000041;
  unint64_t v60 = 0x80000001C25819B0;
  sub_1C2550330();
  if (*(void *)(v32 + 16) && (unint64_t v33 = sub_1C2457670((uint64_t)v61), (v34 & 1) != 0))
  {
    sub_1C21A9A38(*(void *)(v32 + 56) + 32 * v33, (uint64_t)&v62);
  }
  else
  {
    long long v62 = 0u;
    long long v63 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1C2298B34((uint64_t)v61);
  if (!*((void *)&v63 + 1)) {
    goto LABEL_23;
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
  if (swift_dynamicCast())
  {
    uint64_t v35 = (void *)v61[0];
    sub_1C254E510();
    id v36 = v35;
    char v37 = sub_1C254E550();
    os_log_type_t v38 = sub_1C254FA40();
    int v39 = v38;
    if (os_log_type_enabled(v37, v38))
    {
      LODWORD(v55) = v39;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v56 = v1;
      id v41 = (uint8_t *)v40;
      uint64_t v54 = swift_slowAlloc();
      v61[0] = v54;
      *(_DWORD *)id v41 = 136315138;
      v53[1] = v41 + 4;
      id v42 = objc_msgSend(v36, sel_identifier);
      sub_1C254CB20();

      sub_1C2482F70((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
      uint64_t v43 = sub_1C2550810();
      unint64_t v45 = v44;
      (*(void (**)(char *, uint64_t))(v57 + 8))(v4, v2);
      *(void *)&long long v62 = sub_1C21AD354(v43, v45, v61);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v37, (os_log_type_t)v55, "ClinicalSharingOnboardingInformationalViewController: onboarded account %s successfully", v41, 0xCu);
      uint64_t v46 = v54;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v46, -1, -1);
      MEMORY[0x1C875A0B0](v41, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v58);
    sub_1C2480144(v36, 0, 1);

    return;
  }
LABEL_24:
  uint64_t v47 = v58;
  sub_1C254E510();
  id v48 = sub_1C254E550();
  os_log_type_t v49 = sub_1C254FA20();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v50 = 0;
    _os_log_impl(&dword_1C21A1000, v48, v49, "ClinicalSharingOnboardingInformationalViewController: onboarding completed with neither error nor account", v50, 2u);
    MEMORY[0x1C875A0B0](v50, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v47);
}

uint64_t sub_1C24828C8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6 = sub_1C254C580();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254C540();
  id v10 = a1;
  a4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1C24829B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C875A200](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    uint64_t v8 = MEMORY[0x1C875A200](v6 + OBJC_IVAR___HRClinicalSharingOnboardingInformationalViewController_delegate);
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      if (v2 && v4 == 1)
      {
        id v10 = v2;
        objc_msgSend(v9, sel_didCompleteOnboardingFor_, v3);

        swift_unknownObjectRelease();
        sub_1C220022C(v2, v3);
      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {
    }
  }
}

uint64_t type metadata accessor for ClinicalSharingOnboardingInformationalViewController()
{
  return self;
}

uint64_t block_destroy_helper_57()
{
  return swift_release();
}

unint64_t sub_1C2482AC0()
{
  unint64_t result = qword_1EA2E4048;
  if (!qword_1EA2E4048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA2E4048);
  }
  return result;
}

ValueMetadata *type metadata accessor for HKClinicalSharingOnboardingFlowType()
{
  return &type metadata for HKClinicalSharingOnboardingFlowType;
}

uint64_t method lookup function for ClinicalSharingOnboardingInformationalViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClinicalSharingOnboardingInformationalViewController);
}

uint64_t dispatch thunk of ClinicalSharingOnboardingInformationalViewController.__allocating_init(onboardingSession:flowType:selectedAccount:delegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t sub_1C2482B50()
{
  uint64_t v1 = sub_1C254C580();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_1C2482C1C()
{
}

void sub_1C2482C80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2482CE4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2482D1C(void *a1, void *a2)
{
  return sub_1C2480B88(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1C2482D24()
{
  swift_unknownObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C2482D74()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C2482DBC()
{
  sub_1C2480E8C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(id *)(v0 + 32));
}

uint64_t sub_1C2482DC8()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C2482E10(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_1C2223E3C;
  return sub_1C247FCD4(a1, v4, v5, v7, v6);
}

uint64_t sub_1C2482ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C2482F30()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2482F68(uint64_t a1)
{
  sub_1C24829B8(a1, v1);
}

uint64_t sub_1C2482F70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1C2482FD8()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleLabel);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v4, sel_setNumberOfLines_, 0);
    id v5 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2908]);
    objc_msgSend(v4, sel_setFont_, v5);

    objc_msgSend(v4, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C24830D0()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___subtitleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___subtitleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___subtitleLabel);
  }
  else
  {
    id v4 = sub_1C2483130();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2483130()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v0, sel_setFont_, v1);

  id v2 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v0;
}

uint64_t sub_1C2483228()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleHorizontalConstraints;
  if (*(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleHorizontalConstraints])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleHorizontalConstraints];
  }
  else
  {
    id v3 = v0;
    sub_1C21ACA3C();
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C255CD70;
    id v5 = sub_1C2482FD8();
    id v6 = objc_msgSend(v5, sel_leadingAnchor);

    id v7 = objc_msgSend(v3, sel_leadingAnchor);
    id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

    *(void *)(v4 + 32) = v8;
    id v9 = objc_msgSend(v3, sel_trailingAnchor);
    id v10 = sub_1C2482FD8();
    id v11 = objc_msgSend(v10, sel_trailingAnchor);

    id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
    *(void *)(v4 + 40) = v12;
    sub_1C254F730();
    uint64_t v2 = v4;
    *(void *)&v3[v1] = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

id sub_1C24833A4(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___subtitleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI19StackedTwoLabelView____lazy_storage___titleHorizontalConstraints] = 0;
  v41.receiver = v4;
  v41.super_class = (Class)type metadata accessor for StackedTwoLabelView();
  id v9 = objc_msgSendSuper2(&v41, sel_initWithFrame_, a1, a2, a3, a4);
  id v10 = sub_1C2482FD8();
  objc_msgSend(v9, sel_addSubview_, v10);

  id v11 = v9;
  id v12 = sub_1C24830D0();
  objc_msgSend(v11, sel_addSubview_, v12);

  uint64_t v13 = self;
  sub_1C2483228();
  sub_1C21F34D4();
  uint64_t v14 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_activateConstraints_, v14);

  sub_1C21ACA3C();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C255DB90;
  id v16 = sub_1C2482FD8();
  id v17 = objc_msgSend(v16, sel_topAnchor);

  id v18 = objc_msgSend(v11, sel_topAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(void *)(v15 + 32) = v19;
  id v20 = sub_1C24830D0();
  id v21 = objc_msgSend(v20, sel_topAnchor);

  id v22 = sub_1C2482FD8();
  id v23 = objc_msgSend(v22, sel_bottomAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  *(void *)(v15 + 40) = v24;
  id v25 = sub_1C24830D0();
  id v26 = objc_msgSend(v25, sel_leadingAnchor);

  id v27 = sub_1C2482FD8();
  id v28 = objc_msgSend(v27, sel_leadingAnchor);

  id v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v28);
  *(void *)(v15 + 48) = v29;
  id v30 = sub_1C24830D0();
  id v31 = objc_msgSend(v30, sel_trailingAnchor);

  id v32 = sub_1C2482FD8();
  id v33 = objc_msgSend(v32, sel_trailingAnchor);

  id v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v33);
  *(void *)(v15 + 56) = v34;
  id v35 = sub_1C24830D0();
  id v36 = objc_msgSend(v35, sel_bottomAnchor);

  id v37 = objc_msgSend(v11, sel_bottomAnchor);
  id v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v37);

  *(void *)(v15 + 64) = v38;
  sub_1C254F730();
  int v39 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_activateConstraints_, v39);

  return v11;
}

id sub_1C2483850()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StackedTwoLabelView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for StackedTwoLabelView()
{
  return self;
}

uint64_t sub_1C2483904(void *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C2550250();
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    sub_1C22000E8((unint64_t *)&qword_1EBB6EFD8, &qword_1EBB6EF58);
    sub_1C254F940();
    uint64_t v2 = v36;
    uint64_t v35 = v37;
    uint64_t v4 = v38;
    uint64_t v5 = v39;
    unint64_t v6 = v40;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v35 = a2 + 56;
    uint64_t v8 = ~v7;
    uint64_t v9 = -v7;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v4 = v8;
    uint64_t v5 = 0;
  }
  int64_t v34 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    if (v2 < 0)
    {
      if (!sub_1C25502D0()) {
        goto LABEL_44;
      }
      sub_1C21AB51C(0, &qword_1EBB6EF58);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v41;
      swift_unknownObjectRelease();
      uint64_t v13 = v5;
      uint64_t v11 = v6;
      if (!v41) {
        goto LABEL_44;
      }
    }
    else
    {
      if (v6)
      {
        uint64_t v11 = (v6 - 1) & v6;
        unint64_t v12 = __clz(__rbit64(v6)) | (v5 << 6);
        uint64_t v13 = v5;
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_47;
        }
        if (v15 >= v34) {
          goto LABEL_44;
        }
        unint64_t v16 = *(void *)(v35 + 8 * v15);
        uint64_t v13 = v5 + 1;
        if (!v16)
        {
          uint64_t v13 = v5 + 2;
          if (v5 + 2 >= v34) {
            goto LABEL_44;
          }
          unint64_t v16 = *(void *)(v35 + 8 * v13);
          if (!v16)
          {
            uint64_t v13 = v5 + 3;
            if (v5 + 3 >= v34) {
              goto LABEL_44;
            }
            unint64_t v16 = *(void *)(v35 + 8 * v13);
            if (!v16)
            {
              uint64_t v13 = v5 + 4;
              if (v5 + 4 >= v34) {
                goto LABEL_44;
              }
              unint64_t v16 = *(void *)(v35 + 8 * v13);
              if (!v16)
              {
                uint64_t v13 = v5 + 5;
                if (v5 + 5 >= v34) {
                  goto LABEL_44;
                }
                unint64_t v16 = *(void *)(v35 + 8 * v13);
                if (!v16)
                {
                  uint64_t v17 = v5 + 6;
                  while (v34 != v17)
                  {
                    unint64_t v16 = *(void *)(v35 + 8 * v17++);
                    if (v16)
                    {
                      uint64_t v13 = v17 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_44:
                  sub_1C21ABD08();
                  return (uint64_t)a1;
                }
              }
            }
          }
        }
LABEL_31:
        uint64_t v11 = (v16 - 1) & v16;
        unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
      }
      id v14 = *(id *)(*(void *)(v2 + 48) + 8 * v12);
      if (!v14) {
        goto LABEL_44;
      }
    }
    id v18 = v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    objc_super v41 = a1;
    unint64_t v21 = sub_1C2457B7C((uint64_t)v18);
    uint64_t v22 = a1[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      break;
    }
    char v25 = v20;
    if (a1[3] >= v24)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v20) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_1C24B0920();
        if (v25) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      sub_1C227F564(v24, isUniquelyReferenced_nonNull_native);
      unint64_t v26 = sub_1C2457B7C((uint64_t)v18);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_48;
      }
      unint64_t v21 = v26;
      if (v25)
      {
LABEL_8:
        *(void *)(a1[7] + 8 * v21) = 0;
        goto LABEL_9;
      }
    }
    a1[(v21 >> 6) + 8] |= 1 << v21;
    uint64_t v28 = 8 * v21;
    *(void *)(a1[6] + v28) = v18;
    *(void *)(a1[7] + v28) = 0;
    uint64_t v29 = a1[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_46;
    }
    a1[2] = v31;
    id v32 = v18;
LABEL_9:

    swift_bridgeObjectRelease();
    uint64_t v5 = v13;
    unint64_t v6 = v11;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  sub_1C21AB51C(0, &qword_1EBB6EF58);
  uint64_t result = sub_1C2550910();
  __break(1u);
  return result;
}

uint64_t sub_1C2483D24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

id sub_1C2483D30()
{
  uint64_t v1 = *(void **)(v0 + 32);
  if (v1)
  {
    id v2 = *(id *)(v0 + 32);
  }
  else
  {
    id v3 = (void *)sub_1C24840B8();
    uint64_t v4 = *(void **)(v0 + 32);
    *(void *)(v0 + 32) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_1C2483D88()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C254EB70();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C2483DFC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2484A58();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2483E54()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = sub_1C2483D30();
  objc_msgSend(v1, sel_stopQuery_, v2);

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC15HealthRecordsUI23SampleTypeCountProvider__sampleCounts;
  sub_1C2484C24(0, &qword_1EBB6F470, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_1C2483F28()
{
  sub_1C2483E54();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2483F80()
{
  return type metadata accessor for SampleTypeCountProvider();
}

uint64_t type metadata accessor for SampleTypeCountProvider()
{
  uint64_t result = qword_1EBB6FDB8;
  if (!qword_1EBB6FDB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2483FD4()
{
  sub_1C2484C24(319, &qword_1EBB6F470, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C24840B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 16);
  if ((v2 & 0xC000000000000001) == 0)
  {
    uint64_t v4 = *(void *)(v2 + 16);
    swift_bridgeObjectRetain();
    if (v4)
    {
      uint64_t v30 = v0;
      uint64_t v35 = MEMORY[0x1E4FBC860];
      sub_1C2550490();
      uint64_t v32 = sub_1C2486524(v2);
      uint64_t v33 = v7;
      char v34 = v8 & 1;
LABEL_7:
      uint64_t v9 = self;
      do
      {
        while (1)
        {
          int64_t v15 = v32;
          uint64_t v16 = v33;
          char v17 = v34;
          sub_1C24862B0(v32, v33, v34, v2, &qword_1EBB6EF58);
          id v19 = v18;
          id v20 = objc_msgSend(v18, sel_sampleType);
          id v21 = objc_msgSend(v9, sel_queryDescriptorWithSampleType_, v20);

          sub_1C2550460();
          sub_1C25504A0();
          sub_1C25504B0();
          uint64_t result = sub_1C2550470();
          if ((v2 & 0xC000000000000001) != 0) {
            break;
          }
          int64_t v10 = sub_1C24861A4(v15, v16, v17, v2);
          uint64_t v12 = v11;
          char v14 = v13;
          sub_1C220012C(v15, v16, v17);
          uint64_t v32 = v10;
          uint64_t v33 = v12;
          char v34 = v14 & 1;
          if (!--v4) {
            goto LABEL_14;
          }
        }
        if ((v17 & 1) == 0) {
          goto LABEL_18;
        }
        if (sub_1C2550260()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_1C2486F94();
        uint64_t v22 = (void (*)(void *, void))sub_1C254F920();
        sub_1C2550300();
        v22(aBlock, 0);
        --v4;
      }
      while (v4);
LABEL_14:
      sub_1C220012C(v32, v33, v34);
      swift_bridgeObjectRelease();
      uint64_t v1 = v30;
      goto LABEL_16;
    }
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    uint64_t v23 = swift_allocObject();
    swift_weakInit();
    id v24 = objc_allocWithZone(MEMORY[0x1E4F2B2C8]);
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    swift_retain();
    char v25 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1C248703C;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C2485BBC;
    aBlock[3] = &block_descriptor_34_2;
    unint64_t v26 = _Block_copy(aBlock);
    id v27 = objc_msgSend(v24, sel_initWithQueryDescriptors_updateHandler_, v25, v26);

    _Block_release(v26);
    swift_release();
    swift_release();
    aBlock[0] = v1;
    type metadata accessor for SampleTypeCountProvider();
    id v28 = v27;
    swift_retain();
    sub_1C254F4F0();
    uint64_t v29 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v28, sel_setDebugIdentifier_, v29);

    return (uint64_t)v28;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C25502A0();
  if (!v3) {
    goto LABEL_15;
  }
  uint64_t v4 = v3;
  uint64_t v35 = MEMORY[0x1E4FBC860];
  sub_1C2550490();
  uint64_t result = sub_1C2550240();
  uint64_t v32 = result;
  uint64_t v33 = v6;
  char v34 = 1;
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v30 = v0;
    goto LABEL_7;
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1C24844D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  if (!a5)
  {
LABEL_22:
    sub_1C2486BB0();
    sub_1C2486C50(&qword_1EBB6F3E8, (void (*)(uint64_t))sub_1C2486BB0);
    swift_retain();
    sub_1C254EB00();
    swift_release();
    return swift_release();
  }
  uint64_t v46 = v9;
  uint64_t v47 = v7;
  uint64_t v11 = *(void *)(result + 16);
  uint64_t v48 = v6;
  uint64_t v49 = result;
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v12 = a5;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C25502A0();
    if (!v13) {
      goto LABEL_17;
    }
    uint64_t v14 = v13;
    uint64_t v54 = MEMORY[0x1E4FBC860];
    sub_1C2550490();
    int64_t v51 = sub_1C2550240();
    uint64_t v52 = v15;
    char v53 = 1;
    if ((v14 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
    __break(1u);
  }
  uint64_t v14 = *(void *)(v11 + 16);
  id v16 = a5;
  swift_bridgeObjectRetain();
  if (!v14)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v31 = MEMORY[0x1E4FBC860];
LABEL_18:
    uint64_t v32 = v46;
    sub_1C254E510();
    id v33 = a5;
    id v34 = a5;
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C254E550();
    uint64_t v36 = a5;
    os_log_type_t v37 = sub_1C254FA20();
    if (os_log_type_enabled(v35, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      v50[0] = v39;
      *(_DWORD *)uint64_t v38 = 136446466;
      int64_t v51 = (int64_t)v36;
      id v40 = v36;
      sub_1C2206F9C();
      uint64_t v41 = sub_1C254F510();
      int64_t v51 = sub_1C21AD354(v41, v42, v50);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      *(_WORD *)(v38 + 12) = 2082;
      int64_t v51 = v31;
      sub_1C248707C();
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_1C254F510();
      int64_t v51 = sub_1C21AD354(v43, v44, v50);
      sub_1C2550120();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v35, v37, "Error %{public}s observing change for sample types: %{public}s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v39, -1, -1);
      MEMORY[0x1C875A0B0](v38, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v48);
    goto LABEL_22;
  }
  uint64_t v54 = MEMORY[0x1E4FBC860];
  sub_1C2550490();
  int64_t v51 = sub_1C2486524(v11);
  uint64_t v52 = v17;
  char v53 = v18 & 1;
LABEL_9:
  unint64_t v45 = a5;
  while (1)
  {
    while (1)
    {
      int64_t v24 = v51;
      uint64_t v25 = v52;
      char v26 = v53;
      sub_1C24862B0(v51, v52, v53, v11, &qword_1EBB6EF58);
      id v28 = v27;
      id v29 = objc_msgSend(v27, sel_sampleType);

      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      uint64_t result = sub_1C2550470();
      if ((v11 & 0xC000000000000001) != 0) {
        break;
      }
      int64_t v19 = sub_1C24861A4(v24, v25, v26, v11);
      uint64_t v21 = v20;
      char v23 = v22;
      sub_1C220012C(v24, v25, v26);
      int64_t v51 = v19;
      uint64_t v52 = v21;
      char v53 = v23 & 1;
      if (!--v14) {
        goto LABEL_16;
      }
    }
    if ((v26 & 1) == 0) {
      break;
    }
    if (sub_1C2550260()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_1C2486F94();
    uint64_t v30 = (void (*)(uint64_t *, void))sub_1C254F920();
    sub_1C2550300();
    v30(v50, 0);
    if (!--v14)
    {
LABEL_16:
      sub_1C220012C(v51, v52, v53);
      uint64_t v31 = v54;
      swift_bridgeObjectRelease();
      a5 = v45;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

void sub_1C2484A58()
{
  id v1 = objc_allocWithZone(MEMORY[0x1E4F2B428]);
  sub_1C21AB51C(0, &qword_1EBB6EF58);
  sub_1C22000E8((unint64_t *)&qword_1EBB6EFD8, &qword_1EBB6EF58);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v2 = (void *)sub_1C254F8E0();
  swift_bridgeObjectRelease();
  v7[4] = sub_1C2486EC4;
  uint64_t v8 = v0;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  v7[2] = sub_1C2300950;
  v7[3] = &block_descriptor_62;
  uint64_t v3 = _Block_copy(v7);
  id v4 = objc_msgSend(v1, sel_initWithQueryDescriptors_resultsHandler_, v2, v3);

  _Block_release(v3);
  swift_release();
  v7[0] = v0;
  type metadata accessor for SampleTypeCountProvider();
  swift_retain();
  id v5 = v4;
  sub_1C254F4F0();
  uint64_t v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setDebugIdentifier_, v6);

  objc_msgSend(*(id *)(v0 + 24), sel_executeQuery_, v5);
}

void sub_1C2484C24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C2486EDC(255, (unint64_t *)&unk_1EBB6F480, MEMORY[0x1E4FBAEA0]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C2484CA0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C254E560();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
LABEL_4:
    if (!a2) {
      return result;
    }
    goto LABEL_7;
  }
  id v10 = a3;
  sub_1C254E510();
  id v11 = a3;
  swift_retain();
  id v12 = a3;
  swift_retain();
  uint64_t v13 = sub_1C254E550();
  os_log_type_t v14 = sub_1C254FA20();
  int v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v31 = v6;
    uint64_t v17 = v16;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v32 = (uint64_t)a3;
    v33[0] = v29;
    *(_DWORD *)uint64_t v17 = 136446466;
    id v18 = a3;
    sub_1C2206F9C();
    int v28 = v15;
    uint64_t v19 = sub_1C254F510();
    uint64_t v30 = v5;
    uint64_t v32 = sub_1C21AD354(v19, v20, v33);
    v27[2] = v33;
    sub_1C2550120();
    swift_bridgeObjectRelease();

    *(_WORD *)(v17 + 12) = 2082;
    v27[1] = v17 + 14;
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    sub_1C22000E8((unint64_t *)&qword_1EBB6EFD8, &qword_1EBB6EF58);
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1C254F900();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v32 = sub_1C21AD354(v21, v23, v33);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v13, (os_log_type_t)v28, "Error %{public}s querying count with descriptors: %{public}s", (uint8_t *)v17, 0x16u);
    uint64_t v24 = v29;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v24, -1, -1);
    MEMORY[0x1C875A0B0](v17, -1, -1);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v9, v30);
    goto LABEL_4;
  }

  swift_release_n();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  if (!a2) {
    return result;
  }
LABEL_7:
  if ((a2 & 0xC000000000000001) != 0) {
    uint64_t v25 = sub_1C2485D08();
  }
  else {
    sub_1C2485F88(a2);
  }
  uint64_t v26 = v25;
  swift_getKeyPath();
  swift_getKeyPath();
  v33[0] = v26;
  swift_retain();
  return sub_1C254EB80();
}

void *sub_1C248505C()
{
  if (*(void *)(v0 + 48))
  {
    id v1 = *(void **)(v0 + 48);
  }
  else
  {
    id v1 = sub_1C2485814();
    *(void *)(v0 + 48) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

void *sub_1C24850B8(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  sub_1C2484C24(0, &qword_1EBB6F468, MEMORY[0x1E4F1AC60]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790]();
  id v10 = (char *)v21 - v9;
  sub_1C24870E4();
  v21[0] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790]();
  os_log_type_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2205B6C(MEMORY[0x1E4FBC860]);
  v21[1] = v15;
  sub_1C237EEE8();
  swift_allocObject();
  uint64_t v16 = sub_1C254EAA0();
  v2[5] = 0;
  v2[6] = 0;
  v2[3] = a1;
  v2[4] = v16;
  v2[2] = a2;
  id v17 = a2;
  sub_1C248505C();
  swift_beginAccess();
  sub_1C2484C24(0, &qword_1EBB6F470, MEMORY[0x1E4F1AC70]);
  sub_1C254EB40();
  swift_endAccess();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1C23602D8();
  sub_1C248717C();
  sub_1C254EC00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_allocObject();
  swift_weakInit();
  sub_1C2486C50(&qword_1EBB6F388, (void (*)(uint64_t))sub_1C24870E4);
  uint64_t v18 = v21[0];
  uint64_t v19 = sub_1C254ECC0();

  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v18);
  v3[5] = v19;
  swift_release();
  return v3;
}

uint64_t sub_1C24853FC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
LABEL_39:
    *a2 = v7;
    return result;
  }
  uint64_t v5 = *(void *)(result + 24);
  uint64_t v41 = *(void *)(v5 + 16);
  if (!v41)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
LABEL_38:
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  id v40 = a2;
  swift_bridgeObjectRetain_n();
  uint64_t v6 = 0;
  uint64_t v7 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    uint64_t v8 = v5 + 32 + 72 * v6;
    long long v9 = *(_OWORD *)(v8 + 16);
    long long v10 = *(_OWORD *)(v8 + 32);
    uint64_t v11 = *(void *)(v8 + 64);
    long long v46 = *(_OWORD *)(v8 + 48);
    long long v12 = *(_OWORD *)v8;
    uint64_t v47 = v11;
    long long v44 = v9;
    long long v45 = v10;
    long long v43 = v12;
    uint64_t v13 = v46;
    v48[0] = v46;
    if ((unint64_t)v46 >> 62) {
      break;
    }
    uint64_t v14 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_1C2201A54((uint64_t)&v43);
    sub_1C23A0374((uint64_t)v48);
    sub_1C2201A54((uint64_t)&v43);
    sub_1C23A0374((uint64_t)v48);
    uint64_t v42 = v6;
    if (v14) {
      goto LABEL_8;
    }
LABEL_23:
    uint64_t v16 = 0;
LABEL_24:
    sub_1C22C04F0((uint64_t)v48);
    sub_1C22C04F0((uint64_t)v48);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C24578FC(&v43);
    unint64_t v27 = v26;
    uint64_t v28 = v7[2];
    BOOL v29 = (v25 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      goto LABEL_41;
    }
    char v31 = v25;
    if (v7[3] >= v30)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v25) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_1C24B0AF4();
        if (v31) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_1C227F84C(v30, isUniquelyReferenced_nonNull_native);
      sub_1C24578FC(&v43);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_44;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_4:
        *(void *)(v7[7] + 8 * v27) = v16;
        goto LABEL_5;
      }
    }
    v7[(v27 >> 6) + 8] |= 1 << v27;
    uint64_t v34 = v7[6] + 72 * v27;
    *(_OWORD *)uint64_t v34 = v43;
    long long v35 = v44;
    long long v36 = v45;
    long long v37 = v46;
    *(void *)(v34 + 64) = v47;
    *(_OWORD *)(v34 + 32) = v36;
    *(_OWORD *)(v34 + 48) = v37;
    *(_OWORD *)(v34 + 16) = v35;
    *(void *)(v7[7] + 8 * v27) = v16;
    uint64_t v38 = v7[2];
    BOOL v23 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v23) {
      goto LABEL_43;
    }
    v7[2] = v39;
    sub_1C2201A54((uint64_t)&v43);
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v6 = v42 + 1;
    sub_1C2201ABC((uint64_t)&v43);
    sub_1C2201ABC((uint64_t)&v43);
    if (v42 + 1 == v41)
    {
      swift_bridgeObjectRelease();
      a2 = v40;
      goto LABEL_38;
    }
  }
  sub_1C2201A54((uint64_t)&v43);
  sub_1C23A0374((uint64_t)v48);
  sub_1C2201A54((uint64_t)&v43);
  sub_1C23A0374((uint64_t)v48);
  uint64_t v14 = sub_1C2550620();
  uint64_t v42 = v6;
  if (!v14) {
    goto LABEL_23;
  }
LABEL_8:
  if (v14 < 1) {
    goto LABEL_42;
  }
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  while (1)
  {
    id v17 = (v13 & 0xC000000000000001) != 0
        ? (id)MEMORY[0x1C87588E0](v15, v13)
        : *(id *)(v13 + 8 * v15 + 32);
    uint64_t v18 = v17;
    if (*(void *)(v3 + 16))
    {
      id v19 = v17;
      unint64_t v20 = sub_1C2457B7C((uint64_t)v19);
      uint64_t v22 = (v21 & 1) != 0 ? *(void *)(*(void *)(v3 + 56) + 8 * v20) : 0;
    }
    else
    {
      uint64_t v22 = 0;
    }

    BOOL v23 = __OFADD__(v16, v22);
    v16 += v22;
    if (v23) {
      break;
    }
    if (v14 == ++v15) {
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  uint64_t result = sub_1C2550910();
  __break(1u);
  return result;
}

uint64_t sub_1C2485794()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1C254EA70();
    return swift_release();
  }
  return result;
}

void *sub_1C2485814()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = MEMORY[0x1E4FBC870];
  uint64_t v24 = MEMORY[0x1E4FBC870];
  uint64_t v22 = *(void *)(v1 + 16);
  if (!v22)
  {
LABEL_17:
    id v17 = *(void **)(v0 + 16);
    type metadata accessor for SampleTypeCountProvider();
    swift_allocObject();
    id v18 = v17;
    id v19 = sub_1C24865AC(v2, v18);

    return v19;
  }
  uint64_t v21 = v1 + 32;
  swift_bridgeObjectRetain_n();
  uint64_t v3 = 0;
  while (1)
  {
    id v4 = (void *)(v21 + 72 * v3);
    uint64_t v5 = (void *)v4[1];
    unint64_t v6 = v4[6];
    uint64_t v7 = (void *)v4[8];
    if (v6 >> 62) {
      break;
    }
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    id v9 = v7;
    uint64_t result = v5;
    if (v8) {
      goto LABEL_6;
    }
LABEL_3:
    ++v3;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (v3 == v22)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v2 = v24;
      uint64_t v0 = v20;
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  id v15 = v7;
  id v16 = v5;
  uint64_t result = (void *)sub_1C2550620();
  uint64_t v8 = (uint64_t)result;
  if (!result) {
    goto LABEL_3;
  }
LABEL_6:
  if (v8 >= 1)
  {
    if ((v6 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        long long v12 = (void *)MEMORY[0x1C87588E0](i, v6);
        sub_1C2368BB8(&v23, v12);
      }
    }
    else
    {
      uint64_t v13 = (void **)(v6 + 32);
      do
      {
        uint64_t v14 = *v13++;
        sub_1C2368BB8(&v23, v14);

        --v8;
      }
      while (v8);
    }
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2485A44()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CategoryCountProvider()
{
  return self;
}

uint64_t sub_1C2485AC0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C254EB70();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C2485B40()
{
  return sub_1C254EB80();
}

uint64_t sub_1C2485BBC(uint64_t a1, void *a2, uint64_t a3, void *aBlock, void *a5)
{
  uint64_t v7 = a3;
  id v9 = *(void (**)(id, uint64_t, uint64_t (*)(), uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C21AB51C(0, &qword_1EBB6FF78);
    sub_1C22000E8((unint64_t *)&qword_1EBB6FF80, &qword_1EBB6FF78);
    uint64_t v7 = sub_1C254F8F0();
  }
  long long v10 = _Block_copy(aBlock);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  swift_retain();
  id v12 = a2;
  id v13 = a5;
  v9(v12, v7, sub_1C2249590, v11, a5);
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2485D08()
{
  if (sub_1C25502A0())
  {
    sub_1C2486EDC(0, (unint64_t *)&qword_1EBB6F4D8, MEMORY[0x1E4FBBD58]);
    uint64_t v0 = sub_1C2550680();
  }
  else
  {
    uint64_t v0 = MEMORY[0x1E4FBC868];
  }
  uint64_t v17 = v0;
  sub_1C2550520();
  swift_unknownObjectRetain();
  uint64_t v1 = sub_1C25505B0();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    do
    {
      swift_dynamicCast();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
      swift_dynamicCast();
      uint64_t v10 = sub_1C254F950();

      uint64_t v0 = v17;
      unint64_t v11 = *(void *)(v17 + 16);
      if (*(void *)(v17 + 24) <= v11)
      {
        sub_1C227F564(v11 + 1, 1);
        uint64_t v0 = v17;
      }
      uint64_t result = sub_1C254FF60();
      uint64_t v4 = v0 + 64;
      uint64_t v5 = -1 << *(unsigned char *)(v0 + 32);
      unint64_t v6 = result & ~v5;
      unint64_t v7 = v6 >> 6;
      if (((-1 << v6) & ~*(void *)(v0 + 64 + 8 * (v6 >> 6))) != 0)
      {
        unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v0 + 64 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v12 = 0;
        unint64_t v13 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v13 && (v12 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          BOOL v14 = v7 == v13;
          if (v7 == v13) {
            unint64_t v7 = 0;
          }
          v12 |= v14;
          uint64_t v15 = *(void *)(v4 + 8 * v7);
        }
        while (v15 == -1);
        unint64_t v8 = __clz(__rbit64(~v15)) + (v7 << 6);
      }
      *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
      uint64_t v9 = 8 * v8;
      *(void *)(*(void *)(v0 + 48) + v9) = v16;
      *(void *)(*(void *)(v0 + 56) + v9) = v10;
      ++*(void *)(v0 + 16);
      uint64_t v2 = (void *)sub_1C25505B0();
    }
    while (v2);
  }
  swift_release();
  return v0;
}

void sub_1C2485F88(uint64_t a1)
{
  sub_1C2486EDC(0, (unint64_t *)&qword_1EBB6F4D8, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = sub_1C2550650();
  uint64_t v3 = (void *)v2;
  int64_t v4 = 0;
  uint64_t v26 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v24 = v6;
  int64_t v25 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v2 + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    uint64_t v17 = *(void **)(*(void *)(v26 + 56) + 8 * i);
    id v18 = *(id *)(*(void *)(v26 + 48) + 8 * i);
    id v19 = v17;
    uint64_t v20 = sub_1C254F950();

    *(void *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v3[6] + 8 * i) = v18;
    *(void *)(v3[7] + 8 * i) = v20;
    uint64_t v21 = v3[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v23;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v14 >= v25) {
      return;
    }
    unint64_t v15 = *(void *)(v24 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v25) {
        return;
      }
      unint64_t v15 = *(void *)(v24 + 8 * v4);
      if (!v15)
      {
        int64_t v4 = v14 + 2;
        if (v14 + 2 >= v25) {
          return;
        }
        unint64_t v15 = *(void *)(v24 + 8 * v4);
        if (!v15) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v25) {
    return;
  }
  unint64_t v15 = *(void *)(v24 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v25) {
      return;
    }
    unint64_t v15 = *(void *)(v24 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
}

int64_t sub_1C24861A4(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1C2486288(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1C248629C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1C24862B0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v8 = a4;
      }
      else {
        uint64_t v8 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x1C87587D0](a1, a2, v8);
      sub_1C21AB51C(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_1C2550280() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1C2550290();
  sub_1C21AB51C(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v18;
  swift_unknownObjectRelease();
  uint64_t v9 = sub_1C254FF60();
  uint64_t v10 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v9 & ~v10;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v11 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v12 = sub_1C254FF70();

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = ~v10;
    do
    {
      unint64_t v7 = (v7 + 1) & v13;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_26;
      }
      id v14 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v15 = sub_1C254FF70();
    }
    while ((v15 & 1) == 0);
  }

LABEL_20:
  int64_t v16 = *(void **)(*(void *)(a4 + 48) + 8 * v7);
  id v17 = v16;
}

uint64_t sub_1C2486524(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_1C24865AC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  sub_1C23A5C5C();
  MEMORY[0x1F4188790]();
  unint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254FC50();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  MEMORY[0x1F4188790]();
  unint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2486B68(0);
  uint64_t v39 = v11;
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790]();
  long long v35 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2486C98(0, (unint64_t *)&unk_1EBB6F3C0, (uint64_t (*)(uint64_t))sub_1C2486B68, sub_1C2486D7C, MEMORY[0x1E4F1AAB0]);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v42 = v13;
  uint64_t v43 = v14;
  MEMORY[0x1F4188790]();
  long long v36 = (char *)&v33 - v15;
  v2[4] = 0;
  sub_1C2486BB0();
  uint64_t v33 = v16;
  swift_allocObject();
  uint64_t v17 = sub_1C254EA50();
  uint64_t v18 = MEMORY[0x1E4FBC870];
  v2[5] = v17;
  v2[6] = v18;
  id v40 = v2 + 6;
  v2[2] = a1;
  v2[3] = a2;
  id v19 = a2;
  swift_bridgeObjectRetain();
  uint64_t v20 = (void *)sub_1C2483904(MEMORY[0x1E4FBC868], a1);
  swift_bridgeObjectRelease();
  uint64_t v34 = v3;
  swift_beginAccess();
  id v44 = v20;
  sub_1C2486EDC(0, (unint64_t *)&unk_1EBB6F480, MEMORY[0x1E4FBAEA0]);
  sub_1C254EB30();
  swift_endAccess();
  id v45 = (id)v3[5];
  swift_retain();
  sub_1C254FC30();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v44 = (id)sub_1C254FC70();
  uint64_t v21 = sub_1C254FC20();
  BOOL v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v7, 1, 1, v21);
  sub_1C2486C1C();
  sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v23 = v35;
  sub_1C254EC80();
  sub_1C2258214((uint64_t)v7);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v38);
  swift_release();
  id v45 = (id)sub_1C254FC70();
  v22(v7, 1, 1, v21);
  sub_1C2486D7C();
  uint64_t v24 = v36;
  uint64_t v25 = v39;
  sub_1C254EC70();
  sub_1C2258214((uint64_t)v7);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v25);
  uint64_t v26 = swift_allocObject();
  unint64_t v27 = v34;
  swift_weakInit();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_1C2486DE8;
  *(void *)(v28 + 24) = v26;
  sub_1C2486E28();
  uint64_t v29 = v42;
  sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v29);
  swift_beginAccess();
  sub_1C254E9F0();
  swift_endAccess();
  swift_release();
  uint64_t v30 = (void *)v27[3];
  id v31 = sub_1C2483D30();
  objc_msgSend(v30, sel_executeQuery_, v31);

  sub_1C2484A58();
  return v27;
}

void sub_1C2486B68(uint64_t a1)
{
}

void sub_1C2486BB0()
{
  if (!qword_1EBB6F3F8)
  {
    unint64_t v0 = sub_1C254EA60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F3F8);
    }
  }
}

uint64_t sub_1C2486C1C()
{
  return sub_1C2486C50(&qword_1EBB6F3F0, (void (*)(uint64_t))sub_1C2486BB0);
}

uint64_t sub_1C2486C50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2486C98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    v11[2] = a4();
    _OWORD v11[3] = sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
    unint64_t v9 = a5(a1, v11);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2486D7C()
{
  return sub_1C2486C50(&qword_1EBB6F3A8, sub_1C2486B68);
}

uint64_t sub_1C2486DB0()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2486DE8()
{
  return sub_1C2483DFC();
}

uint64_t sub_1C2486DF0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1C2486E28()
{
  unint64_t result = qword_1EBB6F3B8;
  if (!qword_1EBB6F3B8)
  {
    sub_1C2486C98(255, (unint64_t *)&unk_1EBB6F3C0, (uint64_t (*)(uint64_t))sub_1C2486B68, sub_1C2486D7C, MEMORY[0x1E4F1AAB0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F3B8);
  }
  return result;
}

uint64_t sub_1C2486EC4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1C2484CA0(a1, a2, a3);
}

uint64_t block_destroy_helper_58()
{
  return swift_release();
}

void sub_1C2486EDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C21AB51C(255, &qword_1EBB6EF58);
    uint64_t v7 = sub_1C22000E8((unint64_t *)&qword_1EBB6EFD8, &qword_1EBB6EF58);
    unint64_t v8 = a3(a1, v6, MEMORY[0x1E4FBB550], v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2486F94()
{
  if (!qword_1EA2E4080)
  {
    sub_1C21AB51C(255, &qword_1EBB6EF58);
    sub_1C22000E8((unint64_t *)&qword_1EBB6EFD8, &qword_1EBB6EF58);
    unint64_t v0 = sub_1C254F930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4080);
    }
  }
}

uint64_t sub_1C248703C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1C24844D4(a1, a2, a3, a4, a5);
}

uint64_t sub_1C2487044()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C248707C()
{
  if (!qword_1EA2E4088)
  {
    sub_1C21AB51C(255, &qword_1EBB6FF78);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, &qword_1EA2E4088);
    }
  }
}

void sub_1C24870E4()
{
  if (!qword_1EBB6F390)
  {
    sub_1C2484C24(255, &qword_1EBB6F468, MEMORY[0x1E4F1AC60]);
    sub_1C23602D8();
    sub_1C248717C();
    unint64_t v0 = sub_1C254E930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F390);
    }
  }
}

unint64_t sub_1C248717C()
{
  unint64_t result = qword_1EBB6F460;
  if (!qword_1EBB6F460)
  {
    sub_1C2484C24(255, &qword_1EBB6F468, MEMORY[0x1E4F1AC60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F460);
  }
  return result;
}

uint64_t sub_1C24871F0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C24853FC(a1, a2);
}

uint64_t sub_1C24871F8()
{
  return sub_1C2485794();
}

unint64_t static AccountStatusSummaryTileFeedItemIdentifierFactory.makeComponent(accountId:)()
{
  return 0xD00000000000001DLL;
}

unint64_t static AccountStatusSummaryTileFeedItemIdentifierFactory.makeComponentForPrefix()()
{
  return 0xD000000000000024;
}

uint64_t static AccountStatusSummaryTileFeedItemIdentifierFactory.make(for:type:profile:)(void *a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v2).n128_u64[0];
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_identifier, v4);
  sub_1C254CB20();

  uint64_t v8 = _s15HealthRecordsUI49AccountStatusSummaryTileFeedItemIdentifierFactoryV4make9accountId4type7profileSS10Foundation4UUIDV_0A14RecordServices08ClinicaldfG4TypeO0A8Platform13SourceProfileOtFZ_0((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v8;
}

unint64_t _s15HealthRecordsUI49AccountStatusSummaryTileFeedItemIdentifierFactoryV22makeComponentForPrefix4typeSS0A14RecordServices08ClinicaldfG4TypeO_tFZ_0()
{
  return 0xD000000000000025;
}

uint64_t _s15HealthRecordsUI49AccountStatusSummaryTileFeedItemIdentifierFactoryV4make9accountId4type7profileSS10Foundation4UUIDV_0A14RecordServices08ClinicaldfG4TypeO0A8Platform13SourceProfileOtFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255CDA0;
  id v7 = (void *)sub_1C254CF00();
  _s15HealthRecordsUI49AccountStatusSummaryTileFeedItemIdentifierFactoryV22makeComponentForPrefix4typeSS0A14RecordServices08ClinicaldfG4TypeO_tFZ_0();
  if (v7)
  {
    unint64_t v18 = 0x656C69666F72505BLL;
    unint64_t v19 = 0xE90000000000003ALL;
    id v8 = v7;
    v17[1] = a1;
    id v9 = v8;
    id v10 = objc_msgSend(v8, sel_identifier);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();

    unint64_t v11 = v18;
    unint64_t v12 = v19;
  }
  else
  {
    unint64_t v12 = 0x80000001C2578680;
    unint64_t v11 = 0xD000000000000013;
  }
  unint64_t v18 = v11;
  unint64_t v19 = v12;
  sub_1C254F5A0();

  swift_bridgeObjectRelease();
  unint64_t v13 = v19;
  *(void *)(v6 + 32) = v18;
  *(void *)(v6 + 40) = v13;
  unint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v18 = 0xD00000000000001DLL;
  unint64_t v19 = 0x80000001C2587F60;
  sub_1C2373844();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  unint64_t v14 = v19;
  *(void *)(v6 + 48) = v18;
  *(void *)(v6 + 56) = v14;
  unint64_t v18 = v6;
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
  sub_1C226BF44();
  uint64_t v15 = sub_1C254F390();
  swift_bridgeObjectRelease();
  return v15;
}

ValueMetadata *type metadata accessor for AccountStatusSummaryTileFeedItemIdentifierFactory()
{
  return &type metadata for AccountStatusSummaryTileFeedItemIdentifierFactory;
}

BOOL CGRect.isZero.getter(double a1, double a2, double a3, double a4)
{
  v5.origin.x = 0.0;
  v5.origin.y = 0.0;
  v5.size.width = 0.0;
  v5.size.height = 0.0;
  return CGRectEqualToRect(*(CGRect *)&a1, v5);
}

uint64_t sub_1C24877DC(uint64_t a1)
{
  v2[22] = a1;
  v2[23] = v1;
  uint64_t v4 = sub_1C254E560();
  v2[24] = v4;
  v2[25] = *(void *)(v4 - 8);
  v2[26] = swift_task_alloc();
  uint64_t v5 = sub_1C254CB40();
  v2[27] = v5;
  v2[28] = *(void *)(v5 - 8);
  v2[29] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v2[30] = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1C2487930;
  return sub_1C24883D8(a1, 5);
}

uint64_t sub_1C2487930()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(void *)(v2 + 272) = v0;
    return MEMORY[0x1F4188298](sub_1C2487ED8, 0, 0);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 248) = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_1C2487AB0;
    return sub_1C24D57C8(5);
  }
}

uint64_t sub_1C2487AB0()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(void *)(v2 + 272) = v0;
    uint64_t v3 = sub_1C2487ED8;
  }
  else
  {
    uint64_t v3 = sub_1C2487BD0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C2487BD0()
{
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void **)(*(void *)(v0 + 184) + 24);
  id v5 = objc_msgSend(*(id *)(v0 + 176), sel_identifier);
  sub_1C254CB20();

  uint64_t v6 = sub_1C254CB00();
  *(void *)(v0 + 256) = v6;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 280;
  *(void *)(v0 + 24) = sub_1C2487D3C;
  uint64_t v7 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1C24D5718;
  *(void *)(v0 + 104) = &block_descriptor_4;
  *(void *)(v0 + 112) = v7;
  objc_msgSend(v4, sel_deleteAccountWithIdentifier_deletionReason_completion_, v6, 3, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1C2487D3C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 264) = v1;
  if (v1) {
    uint64_t v2 = sub_1C2488344;
  }
  else {
    uint64_t v2 = sub_1C2487E4C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2487E4C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 280);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C2487ED8()
{
  uint64_t v46 = v0;
  uint64_t v1 = *(void **)(v0 + 176);
  uint64_t v2 = *(void **)(v0 + 272);
  sub_1C254E510();
  id v3 = v1;
  id v4 = v2;
  id v5 = v3;
  id v6 = v2;
  uint64_t v7 = sub_1C254E550();
  os_log_type_t v8 = sub_1C254FA20();
  uint64_t v9 = &selRef_addSubview_;
  if (os_log_type_enabled(v7, v8))
  {
    id v10 = *(void **)(v0 + 272);
    os_log_type_t type = v8;
    uint64_t v12 = *(void *)(v0 + 224);
    uint64_t v11 = *(void *)(v0 + 232);
    uint64_t v13 = *(void *)(v0 + 216);
    uint64_t v42 = *(void *)(v0 + 200);
    uint64_t v43 = *(void *)(v0 + 192);
    uint64_t v44 = *(void *)(v0 + 208);
    unint64_t v14 = *(void **)(v0 + 176);
    log = v7;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v45 = v39;
    *(_DWORD *)uint64_t v15 = 136315394;
    id v16 = objc_msgSend(v14, sel_identifier);
    sub_1C254CB20();

    sub_1C2373844();
    uint64_t v17 = sub_1C2550810();
    unint64_t v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    *(void *)(v0 + 168) = sub_1C21AD354(v17, v19, &v45);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    *(void *)(v0 + 160) = v10;
    id v20 = v10;
    id v21 = v10;
    sub_1C2206F9C();
    sub_1C25508F0();
    id v22 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v23 = sub_1C254F4F0();
    unint64_t v25 = v24;

    *(void *)(v0 + 152) = sub_1C21AD354(v23, v25, &v45);
    sub_1C2550120();
    uint64_t v9 = &selRef_addSubview_;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, log, type, "Failed to stop oslo sharing with account: %s, error: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v39, -1, -1);
    MEMORY[0x1C875A0B0](v15, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v43);
  }
  else
  {
    uint64_t v26 = *(void **)(v0 + 272);
    uint64_t v28 = *(void *)(v0 + 200);
    uint64_t v27 = *(void *)(v0 + 208);
    uint64_t v29 = *(void *)(v0 + 192);
    uint64_t v30 = *(void **)(v0 + 176);

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  }
  uint64_t v32 = *(void *)(v0 + 224);
  uint64_t v31 = *(void *)(v0 + 232);
  uint64_t v33 = *(void *)(v0 + 216);
  uint64_t v34 = *(void **)(*(void *)(v0 + 184) + 24);
  id v35 = [*(id *)(v0 + 176) v9[378]];
  sub_1C254CB20();

  uint64_t v36 = sub_1C254CB00();
  *(void *)(v0 + 256) = v36;
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 280;
  *(void *)(v0 + 24) = sub_1C2487D3C;
  uint64_t v37 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1C24D5718;
  *(void *)(v0 + 104) = &block_descriptor_4;
  *(void *)(v0 + 112) = v37;
  objc_msgSend(v34, sel_deleteAccountWithIdentifier_deletionReason_completion_, v36, 3, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1C2488344()
{
  uint64_t v1 = *(void **)(v0 + 256);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_1C24883D8(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v4 = sub_1C254CB40();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C248849C, 0, 0);
}

uint64_t sub_1C248849C()
{
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 128);
  id v5 = *(void **)(*(void *)(v0 + 136) + 24);
  id v6 = objc_msgSend(*(id *)(v0 + 120), sel_identifier);
  sub_1C254CB20();

  uint64_t v7 = sub_1C254CB00();
  *(void *)(v0 + 168) = v7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  id v8 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v4);
  *(void *)(v0 + 176) = v8;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1C2488640;
  uint64_t v9 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1C24D5F28;
  *(void *)(v0 + 104) = &block_descriptor_4;
  *(void *)(v0 + 112) = v9;
  objc_msgSend(v5, sel_updateClinicalSharingStatusForAccountWithIdentifier_firstSharedDate_lastSharedDate_userStatus_multiDeviceStatus_primaryDeviceName_completion_, v7, 0, 0, v8, 0, 0, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1C2488640()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_1C24887C4;
  }
  else {
    uint64_t v2 = sub_1C2488750;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2488750()
{
  uint64_t v1 = *(void **)(v0 + 168);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C24887C4()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = (void *)v0[21];
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

id HealthRecordsSupportedChange.store.getter()
{
  return *v0;
}

uint64_t HealthRecordsSupportedChange.isSupported.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1C248885C@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C254EB70();
  swift_release();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1C24888E4(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return sub_1C254EB80();
}

uint64_t sub_1C2488968()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C254EB70();
  swift_release();
  return swift_release();
}

uint64_t sub_1C24889E8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return sub_1C254EB80();
}

void (*sub_1C2488A64(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1C254EB60();
  return sub_1C23B6204;
}

uint64_t sub_1C2488AF0()
{
  return swift_endAccess();
}

uint64_t sub_1C2488B70(uint64_t a1)
{
  sub_1C21A78B8(0, &qword_1EBB6F448, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v13 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  v11((char *)&v13 - v9, a1, v3, v8);
  ((void (*)(char *, char *, uint64_t))v11)(v6, v10, v3);
  swift_beginAccess();
  sub_1C21A78B8(0, (unint64_t *)&unk_1EBB6FA38, MEMORY[0x1E4F1AC70]);
  sub_1C254EB50();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

uint64_t sub_1C2488D14(uint64_t a1)
{
  sub_1C21A78B8(0, &qword_1EBB6F448, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  __n128 v5 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v8 - v6, a1, v3, v5);
  swift_beginAccess();
  sub_1C21A78B8(0, (unint64_t *)&unk_1EBB6FA38, MEMORY[0x1E4F1AC70]);
  sub_1C254EB50();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*sub_1C2488E6C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_1C21A78B8(0, &qword_1EBB6F448, MEMORY[0x1E4F1AC60]);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener__latestChange;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_1C21A78B8(0, (unint64_t *)&unk_1EBB6FA38, MEMORY[0x1E4F1AC70]);
  v3[16] = v9;
  sub_1C254EB40();
  swift_endAccess();
  return sub_1C23B690C;
}

id HealthRecordsSupportedStateChangeListener.__allocating_init(handler:)(uint64_t a1, uint64_t a2)
{
  sub_1C21A78B8(0, (unint64_t *)&unk_1EBB6FA38, MEMORY[0x1E4F1AC70]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - v8;
  id v10 = (char *)objc_allocWithZone(v2);
  uint64_t v11 = &v10[OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener__latestChange];
  uint64_t v17 = 0;
  char v18 = 0;
  sub_1C21A77E4();
  uint64_t v12 = v10;
  sub_1C254EB30();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v9, v6);
  uint64_t v13 = &v12[OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener_handler];
  *(void *)uint64_t v13 = a1;
  *((void *)v13 + 1) = a2;
  swift_retain();

  v16.receiver = v12;
  v16.super_class = v2;
  id v14 = objc_msgSendSuper2(&v16, sel_init);
  swift_release();
  return v14;
}

uint64_t sub_1C2489128(void *a1, int a2)
{
  uint64_t v5 = sub_1C254E560();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E520();
  id v9 = v2;
  id v10 = a1;
  uint64_t v11 = (char *)v9;
  id v12 = v10;
  uint64_t v13 = sub_1C254E550();
  os_log_type_t v14 = sub_1C254FA40();
  int v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v35 = v30;
    *(_DWORD *)uint64_t v16 = 136446722;
    int v29 = v15;
    uint64_t ObjectType = swift_getObjectType();
    sub_1C248969C();
    uint64_t v31 = v5;
    uint64_t v17 = sub_1C254F510();
    int v32 = a2;
    uint64_t ObjectType = sub_1C21AD354(v17, v18, &v35);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    *(_WORD *)(v16 + 12) = 2082;
    uint64_t ObjectType = (uint64_t)v12;
    sub_1C24896D8();
    id v19 = v12;
    uint64_t v20 = sub_1C254F510();
    uint64_t ObjectType = sub_1C21AD354(v20, v21, &v35);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    *(_WORD *)(v16 + 22) = 2082;
    uint64_t ObjectType = 0;
    unint64_t v34 = 0xE000000000000000;
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t ObjectType = sub_1C21AD354(ObjectType, v34, &v35);
    sub_1C2550120();
    LOBYTE(a2) = v32;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v13, (os_log_type_t)v29, "%{public}s: healthRecordsSupportedDidChange (store: %{public}s, to: %{public}s)", (uint8_t *)v16, 0x20u);
    uint64_t v22 = v30;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v22, -1, -1);
    MEMORY[0x1C875A0B0](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v31);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v23 = *(void (**)(uint64_t *))&v11[OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener_handler];
  uint64_t ObjectType = (uint64_t)v12;
  char v24 = a2 & 1;
  LOBYTE(v34) = a2 & 1;
  id v25 = v12;
  v23(&ObjectType);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t ObjectType = (uint64_t)v25;
  LOBYTE(v34) = v24;
  uint64_t v26 = v11;
  return sub_1C254EB80();
}

id HealthRecordsSupportedStateChangeListener.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void HealthRecordsSupportedStateChangeListener.init()()
{
}

id HealthRecordsSupportedStateChangeListener.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthRecordsSupportedStateChangeListener();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1C248969C()
{
  unint64_t result = qword_1EA2E40A8;
  if (!qword_1EA2E40A8)
  {
    type metadata accessor for HealthRecordsSupportedStateChangeListener();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E40A8);
  }
  return result;
}

unint64_t sub_1C24896D8()
{
  unint64_t result = qword_1EA2E40B0;
  if (!qword_1EA2E40B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E40B0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for HealthRecordsSupportedChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for HealthRecordsSupportedChange(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for HealthRecordsSupportedChange(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t storeEnumTagSinglePayload for HealthRecordsSupportedChange(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthRecordsSupportedChange()
{
  return &type metadata for HealthRecordsSupportedChange;
}

uint64_t sub_1C2489834()
{
  return type metadata accessor for HealthRecordsSupportedStateChangeListener();
}

void sub_1C248983C()
{
  sub_1C21A78B8(319, (unint64_t *)&unk_1EBB6FA38, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for HealthRecordsSupportedStateChangeListener(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthRecordsSupportedStateChangeListener);
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.latestChange.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.latestChange.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.latestChange.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.$latestChange.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.$latestChange.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.__allocating_init(handler:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.healthRecordsSupportedDidChange(healthRecordsStore:to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t sub_1C2489A60()
{
  sub_1C248BF54(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v18 - v2;
  uint64_t v4 = sub_1C254CAD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v18 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v14 = type metadata accessor for UserDomainConceptViewData();
  sub_1C21EA654(v0 + *(int *)(v14 + 36), (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1C248C1E8((uint64_t)v3, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
    char v15 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v3, v4);
    sub_1C254CAC0();
    sub_1C254CA20();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v10, v4);
    char v15 = sub_1C254CA70();
    v16(v7, v4);
    v16(v13, v4);
  }
  return v15 & 1;
}

uint64_t sub_1C2489CB4()
{
  uint64_t v1 = v0;
  sub_1C248BF54(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = sub_1C254CAD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v24 - v13;
  *(void *)&double v16 = MEMORY[0x1F4188790](v15).n128_u64[0];
  uint64_t v18 = (char *)&v24 - v17;
  id v19 = objc_msgSend(v1, sel_meaningfulDate, v16);
  if (v19)
  {
    uint64_t v20 = v19;
    sub_1C254CA80();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v4, 1, 1, v8);
  }
  sub_1C22AE66C((uint64_t)v4, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1C248C1E8((uint64_t)v7, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
    char v21 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v7, v8);
    sub_1C254CAC0();
    sub_1C254CA20();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
    v22(v14, v8);
    char v21 = sub_1C254CA70();
    v22(v11, v8);
    v22(v18, v8);
  }
  return v21 & 1;
}

uint64_t sub_1C2489F88()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v7 = (void *)v0[4];
  swift_bridgeObjectRetain();
  id v8 = objc_msgSend(v7, sel_UUID);
  sub_1C254CB20();

  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v10[0] = v6;
  v10[1] = v5;
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10[0];
}

uint64_t sub_1C248A0CC()
{
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PinnedConceptItem()
{
  return self;
}

uint64_t sub_1C248A138()
{
  return sub_1C2489F88();
}

void *sub_1C248A15C(void *a1, uint64_t a2, void *a3)
{
  sub_1C236F5D4();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  MEMORY[0x1F4188790](v7);
  long long v55 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C248BDE0();
  uint64_t v62 = v9;
  uint64_t v60 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v59 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C248BFB8(0, &qword_1EA2E4150, (void (*)(uint64_t))sub_1C248BDE0, (void (*)(void))sub_1C248BF1C);
  uint64_t v63 = *(void *)(v11 - 8);
  uint64_t v64 = v11;
  MEMORY[0x1F4188790](v11);
  id v61 = (char *)&v48 - v12;
  sub_1C248BF54(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v48 - v14;
  sub_1C248BFB8(0, (unint64_t *)&qword_1EA2E2568, (void (*)(uint64_t))sub_1C248C060, (void (*)(void))sub_1C248C0C8);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v21 = MEMORY[0x1E4FBC870];
  v3[9] = 0;
  v3[10] = v21;
  v3[5] = a1;
  v3[6] = a2;
  v3[7] = a3;
  type metadata accessor for UserDomainConceptDataProvider();
  uint64_t v22 = (void *)swift_allocObject();
  uint64_t v23 = MEMORY[0x1E4FBC868];
  v22[2] = MEMORY[0x1E4FBC868];
  v22[3] = v23;
  v22[4] = a3;
  v3[8] = v22;
  id v58 = a3;
  id v53 = a1;
  swift_retain();
  uint64_t v24 = ConceptsDataSource.init(arrangedSections:isHidden:)(MEMORY[0x1E4FBC860], 0);
  id v25 = v24;
  uint64_t v26 = (void *)v24[9];
  if (v26)
  {
    uint64_t v27 = (void *)v24[5];
    swift_retain_n();
    id v28 = v26;
    if (objc_msgSend(v27, sel_isLowUtility))
    {

      char v29 = 1;
    }
    else
    {
      id v30 = v28;
      char v29 = sub_1C2489CB4();
    }
  }
  else
  {
    swift_retain_n();
    char v29 = 1;
  }
  sub_1C244073C(v29 & 1);
  swift_release();
  id v65 = (id)sub_1C254E450();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v66 = (id)sub_1C254FC70();
  uint64_t v31 = sub_1C254FC20();
  uint64_t v54 = a2;
  uint64_t v51 = v31;
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  uint64_t v52 = v32 + 56;
  v50(v15, 1, 1, v31);
  sub_1C248C060();
  sub_1C248C0C8();
  unint64_t v48 = sub_1C22611AC();
  sub_1C254EC70();
  uint64_t v49 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C248C1E8((uint64_t)v15, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28]);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1C248C108(&qword_1EA2E2590, (unint64_t *)&qword_1EA2E2568, (void (*)(uint64_t))sub_1C248C060, (void (*)(void))sub_1C248C0C8);
  sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  swift_beginAccess();
  sub_1C254E9F0();
  swift_endAccess();
  swift_release();
  uint64_t v33 = v25[8];
  unint64_t v34 = (void *)swift_allocObject();
  uint64_t v35 = v53;
  v34[2] = v53;
  v34[3] = 0;
  v34[4] = v33;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_1C236F76C;
  *(void *)(v36 + 24) = v34;
  uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C248BE94(0, &qword_1EA2E1AA8, MEMORY[0x1E4F1AC28]);
  sub_1C248BD9C(&qword_1EA2E1AB8, &qword_1EA2E1AA8, v37);
  swift_retain_n();
  id v38 = v35;
  uint64_t v39 = v55;
  sub_1C254EB10();
  sub_1C248BCAC(&qword_1EA2E1AC0, 255, (void (*)(uint64_t))sub_1C236F5D4);
  uint64_t v40 = v57;
  uint64_t v41 = (void *)sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v39, v40);
  swift_release();
  id v65 = v41;
  id v66 = 0;
  uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C248BE94(0, &qword_1EA2E4140, MEMORY[0x1E4F1AAE0]);
  sub_1C248BD9C(&qword_1EA2E4148, &qword_1EA2E4140, v42);
  uint64_t v43 = v59;
  sub_1C254EBE0();
  swift_release();
  id v65 = (id)sub_1C254FC70();
  v50(v15, 1, 1, v51);
  sub_1C248BF1C();
  uint64_t v45 = v61;
  uint64_t v44 = v62;
  sub_1C254EC70();
  sub_1C248C1E8((uint64_t)v15, (unint64_t *)&qword_1EBB6F4A0, v49);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v44);
  swift_allocObject();
  swift_weakInit();
  sub_1C248C108((unint64_t *)&unk_1EA2E4160, &qword_1EA2E4150, (void (*)(uint64_t))sub_1C248BDE0, (void (*)(void))sub_1C248BF1C);
  uint64_t v46 = v64;
  sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v46);
  swift_beginAccess();
  sub_1C254E9F0();
  swift_endAccess();
  swift_release();
  swift_release();

  swift_release();
  return v25;
}

uint64_t sub_1C248AA94()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    swift_retain();
    sub_1C254D560();
    swift_release();
    sub_1C248BF54(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
    sub_1C254D9B0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
    uint64_t v2 = *(void **)(v1 + 40);
    char v3 = sub_1C254E430();
    sub_1C248AD70(v2, v3 & 1, v5);
    sub_1C243B55C(0, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C255CD90;
    sub_1C21F4424((uint64_t)v5, v4 + 32);
    sub_1C254D990();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
    sub_1C254DA10();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C248AC84(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    if (v1)
    {
      uint64_t v4 = *(void **)(result + 72);
      *(void *)(result + 72) = v1;
      id v5 = v1;
    }
    uint64_t v6 = *(void **)(v3 + 72);
    if (v6)
    {
      uint64_t v7 = *(void **)(v3 + 40);
      swift_retain();
      id v8 = v6;
      if (objc_msgSend(v7, sel_isLowUtility))
      {

        char v9 = 1;
      }
      else
      {
        id v10 = v8;
        char v9 = sub_1C2489CB4();
      }
    }
    else
    {
      swift_retain();
      char v9 = 1;
    }
    sub_1C244073C(v9 & 1);
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1C248AD70@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = type metadata accessor for PinnedConceptItem();
  uint64_t v8 = swift_allocObject();
  type metadata accessor for PinnedConceptCell();
  sub_1C248BCAC(&qword_1EA2E4128, 255, (void (*)(uint64_t))type metadata accessor for PinnedConceptCell);
  id v9 = a1;
  swift_retain();
  *(void *)(v8 + 16) = sub_1C254D330();
  *(void *)(v8 + 24) = v10;
  *(void *)(v8 + 32) = v9;
  *(unsigned char *)(v8 + 40) = a2;
  *(void *)(v8 + 48) = sub_1C248BD2C;
  *(void *)(v8 + 56) = v6;
  swift_release();
  a3[3] = v7;
  uint64_t result = sub_1C248BCAC(&qword_1EA2E4130, v11, (void (*)(uint64_t))type metadata accessor for PinnedConceptItem);
  a3[4] = result;
  *a3 = v8;
  return result;
}

uint64_t sub_1C248AEC8()
{
  uint64_t v0 = sub_1C254E4C0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    unint64_t v9 = sub_1C254E400();
    if (v9 >> 62) {
      uint64_t v10 = sub_1C2550620();
    }
    else {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v10)
    {
      uint64_t v11 = *(void **)(v8 + 56);
      type metadata accessor for OnboardingTileAppearanceManager();
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 16) = v11;
      id v13 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
      id v14 = v11;
      uint64_t v15 = (void *)sub_1C254F430();
      id v16 = objc_msgSend(v13, sel_initWithCategory_domainName_healthStore_, 0, v15, v14);

      *(void *)(inited + 24) = v16;
      swift_storeEnumTagMultiPayload();
      sub_1C221B650(1, (uint64_t)v6);
      swift_release();
      swift_release();
      sub_1C22ECE6C((uint64_t)v6);
    }
    ListConceptManager.togglePinState(for:onCommitHandler:)(*(void **)(v8 + 40), 0, 0, (uint64_t)v3);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    if (qword_1EBB6D840 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void *)(v8 + 40);
    uint64_t v18 = *(void *)(v8 + 48);
    uint64_t v20 = 0;
    char v21 = 1;
    sub_1C23CE38C(v17, v18, 3, 1, &v20);
    return swift_release();
  }
  return result;
}

void sub_1C248B17C()
{
}

uint64_t sub_1C248B1AC()
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

id *sub_1C248B1FC()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C248B254()
{
  sub_1C248B1FC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PinnedConceptDataSource()
{
  return self;
}

uint64_t sub_1C248B2AC()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - v5;
  sub_1C254DA90();
  sub_1C254DA80();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  uint64_t v8 = sub_1C254DB40();
  v7(v6, v0);
  return v8;
}

uint64_t sub_1C248B3C8()
{
  return sub_1C254E160();
}

uint64_t sub_1C248B424()
{
  return sub_1C254FAE0();
}

uint64_t sub_1C248B4B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254E890();
  MEMORY[0x1F4188790](v10 - 8);
  if (sub_1C254F470() == a1 && v11 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v13 = sub_1C2550870();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_13:
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v18 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C254E820();
    uint64_t v19 = sub_1C254D2A0();
    swift_allocObject();
    uint64_t v20 = sub_1C254D280();
    a3[3] = v19;
    uint64_t result = sub_1C248BCAC((unint64_t *)&qword_1EBB6E7D8, 255, MEMORY[0x1E4F66208]);
    a3[4] = result;
    *a3 = v20;
    return result;
  }
  if (sub_1C254F470() == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      a3[3] = sub_1C254D3D0();
      a3[4] = sub_1C248BCAC(&qword_1EA2DE998, 255, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1C254D3C0();
    }
  }
  char v21 = sub_1C254E430();
  sub_1C248B8EC(v21 & 1);
  v22[0] = 0x74497265746F6F46;
  v22[1] = 0xEB000000005F6D65;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  a3[3] = sub_1C254DEA0();
  a3[4] = sub_1C248BCAC(&qword_1EA2DE9A0, 255, MEMORY[0x1E4F665E8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1C254DE90();
}

uint64_t sub_1C248B8EC(char a1)
{
  sub_1C248BF54(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v17 - v3;
  if (a1)
  {
    uint64_t v5 = sub_1C254CBD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    sub_1C243B55C(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C255CD90;
    id v7 = objc_msgSend(self, sel_mainBundle);
    id v8 = objc_msgSend(v7, sel_preferredLocalizations);

    uint64_t v9 = MEMORY[0x1E4FBB1A0];
    uint64_t v10 = sub_1C254F710();

    Swift::String v11 = HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v10);
    swift_bridgeObjectRelease();
    *(void *)(v6 + 56) = v9;
    *(void *)(v6 + 64) = sub_1C220D950();
    *(Swift::String *)(v6 + 32) = v11;
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v12 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    uint64_t v13 = sub_1C254F4A0();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C248C1E8((uint64_t)v4, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
    return v13;
  }
  else
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v15 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C254C730();
    swift_bridgeObjectRelease();

    return v16;
  }
}

uint64_t sub_1C248BC40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C248B4B0(a1, a2, a3);
}

uint64_t sub_1C248BC64(uint64_t a1, uint64_t a2)
{
  return sub_1C248BCAC(&qword_1EA2E4120, a2, (void (*)(uint64_t))type metadata accessor for PinnedConceptDataSource);
}

uint64_t sub_1C248BCAC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C248BCF4()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C248BD2C()
{
  return sub_1C248AEC8();
}

void sub_1C248BD34()
{
  if (!qword_1EA2E1AB0)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EA2DFB78);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E1AB0);
    }
  }
}

uint64_t sub_1C248BD9C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C248BE94(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C248BDE0()
{
  if (!qword_1EA2E4138)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C248BE94(255, &qword_1EA2E4140, MEMORY[0x1E4F1AAE0]);
    sub_1C248BD9C(&qword_1EA2E4148, &qword_1EA2E4140, v0);
    unint64_t v1 = sub_1C254E910();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E4138);
    }
  }
}

void sub_1C248BE94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    sub_1C248BD34();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C21FFE74(255, (unint64_t *)&qword_1EBB70060);
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C248BF1C()
{
  return sub_1C248BCAC(&qword_1EA2E4158, 255, (void (*)(uint64_t))sub_1C248BDE0);
}

void sub_1C248BF54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C248BFB8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    a4();
    sub_1C22611AC();
    unint64_t v6 = sub_1C254E9B0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C248C060()
{
  if (!qword_1EA2E2570)
  {
    sub_1C254E4C0();
    unint64_t v0 = sub_1C254E9E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2570);
    }
  }
}

uint64_t sub_1C248C0C8()
{
  return sub_1C248BCAC(&qword_1EA2E2578, 255, (void (*)(uint64_t))sub_1C248C060);
}

uint64_t sub_1C248C100()
{
  return sub_1C248AA94();
}

uint64_t sub_1C248C108(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C248BFB8(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C248C158()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C248C1A0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C248C1D8(void *a1@<X8>)
{
  sub_1C236EE04(*(void (**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_1C248C1E0(void **a1)
{
  return sub_1C248AC84(a1);
}

uint64_t sub_1C248C1E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C248BF54(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id sub_1C248C258()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.78, 0.78, 0.8, 0.5);
  qword_1EA303D10 = (uint64_t)result;
  return result;
}

id SignedClinicalDataPreviewViewController.__allocating_init(records:importer:)(unint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return SignedClinicalDataPreviewViewController.init(records:importer:)(a1, a2);
}

uint64_t sub_1C248C2F0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C23F5310();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C248F584(v6);
  return sub_1C2550470();
}

id sub_1C248C428()
{
  return sub_1C248F4F0(type metadata accessor for SignedClinicalDataPreviewTableViewCell);
}

id sub_1C248C440()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController____lazy_storage___gmtDateFormatter;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController____lazy_storage___gmtDateFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController____lazy_storage___gmtDateFormatter);
  }
  else
  {
    id v4 = sub_1C248C4A0();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C248C4A0()
{
  sub_1C2490C34(0, &qword_1EA2E41A0, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v8 - v1;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v3, sel_setDateStyle_, 3);
  objc_msgSend(v3, sel_setTimeStyle_, 0);
  sub_1C254CD00();
  uint64_t v4 = sub_1C254CD20();
  uint64_t v5 = *(void *)(v4 - 8);
  id v6 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) != 1)
  {
    id v6 = (void *)sub_1C254CD10();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
  }
  objc_msgSend(v3, sel_setTimeZone_, v6);

  return v3;
}

id SignedClinicalDataPreviewViewController.init(records:importer:)(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_addToHealthButton;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_addToHealthButton] = 0;
  uint64_t v8 = OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController____lazy_storage___gmtDateFormatter;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController____lazy_storage___gmtDateFormatter] = 0;
  type metadata accessor for SignedClinicalDataImportHandler();
  swift_allocObject();
  swift_retain();
  uint64_t v9 = v4;
  uint64_t v10 = sub_1C23DA2F8(a1, a2);
  if (v3)
  {
    swift_release();

    id v11 = *(id *)&v4[v8];
    type metadata accessor for SignedClinicalDataPreviewViewController();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)&v9[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_handler] = v10;

    swift_retain();
    sub_1C23D96C0();
    swift_release();
    id v12 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1C23D988C();
    swift_release();
    uint64_t v13 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    swift_retain();
    id v14 = sub_1C23D9A58();
    swift_release();
    v16.receiver = v9;
    v16.super_class = (Class)type metadata accessor for SignedClinicalDataPreviewViewController();
    id v11 = objc_msgSendSuper2(&v16, sel_initWithTitle_detailText_icon_adoptTableViewScrollView_, v12, v13, v14, 1);

    swift_release();
  }
  return v11;
}

uint64_t type metadata accessor for SignedClinicalDataPreviewViewController()
{
  return self;
}

void sub_1C248C814()
{
  uint64_t v1 = v0;
  v52.receiver = v0;
  v52.super_class = (Class)type metadata accessor for SignedClinicalDataPreviewViewController();
  objc_msgSendSuper2(&v52, sel_viewDidLoad);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v1, sel_setTableView_, v2);

  id v3 = objc_msgSend(v1, sel_tableView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v4 = v3;
  objc_msgSend(v3, sel_setAllowsSelection_, 0);

  id v5 = objc_msgSend(v1, sel_tableView);
  if (!v5)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v6 = v5;
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_systemBackgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v8);

  id v9 = objc_msgSend(v1, sel_tableView);
  if (!v9)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v10 = v9;
  objc_msgSend(v9, sel_setSeparatorStyle_, 0);

  id v11 = objc_msgSend(v1, sel_tableView);
  if (!v11)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v12 = v11;
  objc_msgSend(v11, sel_setDataSource_, v1);

  id v13 = objc_msgSend(v1, sel_tableView);
  if (!v13)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v14 = v13;
  objc_msgSend(v13, sel_setDelegate_, v1);

  id v15 = objc_msgSend(v1, sel_tableView);
  if (!v15)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  objc_super v16 = v15;
  type metadata accessor for SignedClinicalDataPreviewTableViewCell();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v18 = objc_msgSend(ObjCClassFromMetadata, sel_defaultReuseIdentifier);
  if (!v18)
  {
    sub_1C254F470();
    id v18 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v16, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v18);

  id v19 = objc_msgSend(v1, sel_headerView);
  objc_msgSend(v19, sel_setAllowFullWidthIcon_, 1);

  id v20 = objc_msgSend(v1, sel_headerView);
  LODWORD(v21) = 1036831949;
  objc_msgSend(v20, sel_setTitleHyphenationFactor_, v21);

  id v22 = objc_msgSend(v1, sel_headerView);
  uint64_t v23 = (void *)sub_1C254F700();
  id v24 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v22, sel_setAccessibilityIdentifier_, v24);
  id v25 = objc_msgSend(v1, sel_navigationController);
  objc_msgSend(v25, sel_setNavigationBarHidden_, 1);

  id v26 = objc_msgSend(v1, sel_navigationController);
  if (v26)
  {
    uint64_t v27 = v26;
    objc_msgSend(v26, sel_setModalInPresentation_, 1);
  }
  id v28 = &selRef_lastObject;
  char v29 = &selRef_addSubview_;
  if (*(unsigned char *)(*(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_handler]
                + 16))
  {
    id v30 = objc_msgSend(self, sel_accessoryButton);
    id v31 = objc_msgSend(v7, sel_systemBlueColor);
    objc_msgSend(v30, sel_setTintColor_, v31);

    if (qword_1EA2DD660 != -1) {
      swift_once();
    }
    id v32 = (id)qword_1EA2E0B00;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v33 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v28 = &selRef_lastObject;
    objc_msgSend(v30, sel_setTitle_forState_, v33, 0, 0xE000000000000000);

    char v29 = &selRef_addSubview_;
    objc_msgSend(v30, sel_addTarget_action_forControlEvents_, v1, sel_learnMoreButtonTapped_, 64);
    id v34 = objc_msgSend(v1, sel_headerView);
    objc_msgSend(v34, sel_addAccessoryButton_, v30);
  }
  id v35 = objc_msgSend(self, sel_boldButton);
  id v36 = objc_msgSend(v7, sel_systemBlueColor);
  objc_msgSend(v35, sel_setTintColor_, v36);

  sub_1C23DA120();
  uint64_t v37 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, v28[500], v37, 0);

  objc_msgSend(v35, v29[1], v1, sel_addRecords, 64);
  id v38 = (void *)sub_1C254F700();
  id v39 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v35, sel_setAccessibilityIdentifier_, v39);
  id v40 = objc_msgSend(v1, sel_buttonTray);
  objc_msgSend(v40, sel_addButton_, v35);

  uint64_t v41 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_addToHealthButton];
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_addToHealthButton] = v35;
  id v42 = v35;

  id v43 = objc_msgSend(self, sel_linkButton);
  uint64_t v44 = v29;
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v45 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v46 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v43, (SEL)v28 + 536, v46, 0, 0xE000000000000000);

  objc_msgSend(v43, (SEL)v44 + 917, v1, sel_dismissPreview, 64);
  uint64_t v47 = (void *)sub_1C254F700();
  id v48 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v43, sel_setAccessibilityIdentifier_, v48);
  id v49 = objc_msgSend(v1, sel_buttonTray);
  objc_msgSend(v49, sel_addButton_, v43);

  id v50 = objc_msgSend(v1, sel_tableView);
  if (v50)
  {
    uint64_t v51 = v50;
    objc_msgSend(v50, sel_reloadData);

    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t type metadata accessor for SignedClinicalDataPreviewTableViewCell()
{
  return self;
}

id sub_1C248D0A4(char a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for SignedClinicalDataPreviewViewController();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  id v3 = objc_msgSend(v1, sel_navigationController);
  if (v3)
  {
    uint64_t v4 = v3;
    objc_msgSend(v3, sel_setNavigationBarHidden_, 1);
  }
  id result = objc_msgSend(v1, sel_isMovingToParentViewController);
  if (result)
  {
    uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_handler];
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    if (*(void *)(v6 + 32))
    {
      uint64_t v8 = swift_allocObject();
      swift_weakInit();
      swift_retain_n();
      uint64_t v9 = swift_retain();
      sub_1C23466B0(v9, v8, (uint64_t)sub_1C248D544, v7);
      swift_release_n();
      swift_release();
      swift_release();
    }
    else
    {
      swift_beginAccess();
    }
    return (id)swift_release();
  }
  return result;
}

void sub_1C248D214(char a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254F1C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254F200();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  id v12 = (void *)MEMORY[0x1C875A200](a2 + 16);
  if (v12)
  {
    id v13 = v12;
    if (a1)
    {
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
      uint64_t v18 = sub_1C254FC70();
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v13;
      aBlock[4] = sub_1C2490C98;
      aBlock[5] = v14;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C224E544;
      aBlock[3] = &block_descriptor_29_0;
      id v15 = _Block_copy(aBlock);
      id v16 = v13;
      swift_release();
      sub_1C254F1E0();
      aBlock[0] = MEMORY[0x1E4FBC860];
      sub_1C220DA34();
      sub_1C2490C34(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
      sub_1C21FFDEC();
      sub_1C2550200();
      uint64_t v17 = (void *)v18;
      MEMORY[0x1C87581B0](0, v11, v7, v15);
      _Block_release(v15);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    else
    {
    }
  }
}

uint64_t sub_1C248D50C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C248D544(char a1)
{
  sub_1C248D214(a1, v1);
}

uint64_t sub_1C248D54C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C248D5D8(unint64_t a1, void *a2)
{
  uint64_t v4 = sub_1C254F1C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C254F200();
  uint64_t v8 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v11 = (void *)sub_1C254FC70();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  aBlock[4] = sub_1C2490C24;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_63;
  id v13 = _Block_copy(aBlock);
  sub_1C23DCC20(a1);
  id v14 = a2;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C220DA34();
  sub_1C2490C34(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v10, v7, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v17);
}

void sub_1C248D89C(unint64_t a1, uint64_t a2)
{
  if (a1 >> 61 == 3)
  {
    id v4 = (id)(a1 & 0x1FFFFFFFFFFFFFFFLL);
    sub_1C248DD78((void *)(a1 & 0x1FFFFFFFFFFFFFFFLL));
    uint64_t v5 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_addToHealthButton);
    if (v5)
    {
      objc_msgSend(v5, sel_hidesBusyIndicator);
      sub_1C23DCC68(a1);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1C248DB8C(a1);
  }
}

void sub_1C248D9E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254F230();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *uint64_t v5 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  char v6 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    id v7 = objc_msgSend(v1, sel_presentingViewController);
    if (v7)
    {
      uint64_t v8 = v7;
      objc_msgSend(v7, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1C248DB8C(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254F230();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *id v7 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  char v8 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_1C24EF650(v9);
    swift_bridgeObjectRelease();
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = sub_1C254FE00();
      uint64_t v14 = v13;
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v14 = 0;
    }
    objc_allocWithZone((Class)type metadata accessor for SignedClinicalDataRecordAddedViewController());
    sub_1C23DCC20(a1);
    id v15 = sub_1C241F4E0(a1, v12, v14);
    id v16 = objc_msgSend(v2, sel_navigationController);
    if (v16)
    {
      uint64_t v17 = v16;
      objc_msgSend(v16, sel_pushViewController_animated_, v15, 1);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1C248DD78(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254F230();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *id v7 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  char v8 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    if (qword_1EA2DD680 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  id v9 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v10 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v11 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (a1) {
    a1 = (void *)sub_1C254C810();
  }
  id v13 = objc_msgSend(self, sel_basicAlertControllerWithTitle_message_internalError_, v11, v12, a1);

  objc_msgSend(v2, sel_presentViewController_animated_completion_, v13, 1, 0);
}

void sub_1C248E054()
{
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v1 = objc_allocWithZone(MEMORY[0x1E4F83AE8]);
  uint64_t v2 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithTitle_, v2, 0xE000000000000000);

  uint64_t v4 = (void *)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  id v5 = v4;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_addSectionWithHeader_content_, 0, v6, 0xE000000000000000);

  id v7 = (void *)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  id v8 = v7;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  id v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_addSectionWithHeader_content_, 0, v9, 0xE000000000000000);

  id v10 = (void *)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  id v11 = v10;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_addSectionWithHeader_content_, 0, v12, 0xE000000000000000);

  id v13 = (void *)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  id v14 = v13;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  id v15 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_addSectionWithHeader_content_, 0, v15, 0xE000000000000000);

  swift_arrayDestroy();
  id v16 = objc_msgSend(v3, sel_navigationItem);
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v19, sel_dismissAnimated_);
  objc_msgSend(v16, sel_setRightBarButtonItem_, v17);

  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F83AC0]), sel_initWithRootViewController_, v3);
  objc_msgSend(v19, sel_showViewController_sender_, v18, v19);
}

uint64_t sub_1C248E5A8()
{
  unint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_handler)
                 + 24);
  if (!(v1 >> 62)) {
    return *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C2550620();
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1C248E6AC(void *a1, id a2)
{
  uint64_t v3 = v2;
  type metadata accessor for SignedClinicalDataPreviewTableViewCell();
  id v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultReuseIdentifier);
  if (!v6)
  {
    sub_1C254F470();
    id v6 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  id v7 = (void *)sub_1C254CD30();
  id v8 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v6, v7);

  id v9 = (void *)swift_dynamicCastClassUnconditional();
  uint64_t v10 = *(void *)(*(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI39SignedClinicalDataPreviewViewController_handler]
                  + 24);
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1C254CD80();
  if ((v10 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v12 = *(id *)(v10 + 8 * v11 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_20;
  }
  id v12 = (id)MEMORY[0x1C87588E0](v11, v10);
LABEL_7:
  id v6 = v12;
  swift_bridgeObjectRelease();
  sub_1C21F0F44(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C255D0E0;
  *(void *)(v13 + 32) = 0x74726F706D49;
  *(void *)(v13 + 40) = 0xE600000000000000;
  *(void *)(v13 + 48) = 0x4377656976657250;
  *(void *)(v13 + 56) = 0xEB000000006C6C65;
  id v14 = v8;
  unint64_t v42 = sub_1C254CD60();
  sub_1C2201F84();
  *(void *)(v13 + 64) = sub_1C25501D0();
  *(void *)(v13 + 72) = v15;
  id v16 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v17 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v9, sel_setBaseAccessibilityIdentifier_, v17);
  id v18 = v14;
  id v19 = objc_msgSend(v6, sel_recordTypeDisplayName);
  if (!v19)
  {
    sub_1C254F470();
    id v19 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v9, sel_setPrimaryText_, v19);

  a2 = v18;
  id v20 = objc_msgSend(v6, sel_items);
  sub_1C21AB51C(0, &qword_1EA2DFBB0);
  uint64_t v21 = sub_1C254F710();

  if ((v21 & 0x8000000000000000) == 0 && (v21 & 0x4000000000000000) == 0)
  {
    uint64_t v22 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
LABEL_20:
  unint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v22 = (uint64_t)sub_1C229094C(v41);
  swift_bridgeObjectRelease();
LABEL_12:
  unint64_t v42 = v22;
  sub_1C248C2F0((uint64_t *)&v42);
  swift_bridgeObjectRelease();
  unint64_t v23 = v42;
  id v24 = v3;
  sub_1C2490648(v23, (uint64_t)v24);
  swift_release();

  sub_1C21AB51C(0, (unint64_t *)&unk_1EA2E4190);
  id v25 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setDetailItems_, v25);

  id v26 = a2;
  id v27 = sub_1C24EF74C();
  objc_msgSend(v9, sel_setSecondaryAttributedText_, v27);

  id v28 = v26;
  id v29 = objc_msgSend(v6, sel_subject);
  id v30 = objc_msgSend(v29, sel_fullName);

  if (!v30)
  {
    sub_1C254F470();
    id v30 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v9, sel_setPatientName_, v30);

  id v31 = objc_msgSend(v6, sel_subject);
  id v32 = objc_msgSend(v31, sel_birthDate);

  if (v32)
  {
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C255CD90;
    id v34 = v28;
    id v35 = objc_msgSend(v32, sel_displayString);
    uint64_t v36 = sub_1C254F470();
    uint64_t v38 = v37;

    *(void *)(v33 + 32) = v36;
    *(void *)(v33 + 40) = v38;
    id v39 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setPatientDetails_, v39);
  }
  return v9;
}

uint64_t sub_1C248ECF0(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return 0;
  }
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v2;
}

double sub_1C248EF04()
{
  return *MEMORY[0x1E4FB2F28];
}

double sub_1C248EFF4(uint64_t a1, uint64_t a2)
{
  double result = *MEMORY[0x1E4FB2F28];
  if (!a2) {
    return 10.0;
  }
  return result;
}

id SignedClinicalDataPreviewViewController.__allocating_init(title:detailText:symbolName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    uint64_t v10 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    unint64_t v11 = 0;
    goto LABEL_6;
  }
  uint64_t v10 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  unint64_t v11 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
LABEL_6:
  id v12 = objc_msgSend(objc_allocWithZone(v6), sel_initWithTitle_detailText_symbolName_, v9, v10, v11);

  return v12;
}

void SignedClinicalDataPreviewViewController.init(title:detailText:symbolName:)()
{
}

id SignedClinicalDataPreviewViewController.__allocating_init(title:detailText:icon:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v6 = v5;
  id v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v10 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = objc_msgSend(objc_allocWithZone(v6), sel_initWithTitle_detailText_icon_, v9, v10, a5);

  return v11;
}

void SignedClinicalDataPreviewViewController.init(title:detailText:icon:)()
{
}

id SignedClinicalDataPreviewViewController.__allocating_init(title:detailText:symbolName:adoptTableViewScrollView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  id v8 = v7;
  id v12 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    uint64_t v13 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    id v14 = 0;
    goto LABEL_6;
  }
  uint64_t v13 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  id v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
LABEL_6:
  id v15 = objc_msgSend(objc_allocWithZone(v8), sel_initWithTitle_detailText_symbolName_adoptTableViewScrollView_, v12, v13, v14, a7 & 1);

  return v15;
}

void SignedClinicalDataPreviewViewController.init(title:detailText:symbolName:adoptTableViewScrollView:)()
{
}

id SignedClinicalDataPreviewViewController.__allocating_init(title:detailText:icon:adoptTableViewScrollView:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6)
{
  id v7 = v6;
  id v11 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (a4)
  {
    id v12 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v12 = 0;
  }
  id v13 = objc_msgSend(objc_allocWithZone(v7), sel_initWithTitle_detailText_icon_adoptTableViewScrollView_, v11, v12, a5, a6 & 1);

  return v13;
}

void SignedClinicalDataPreviewViewController.init(title:detailText:icon:adoptTableViewScrollView:)()
{
}

id SignedClinicalDataPreviewViewController.__deallocating_deinit()
{
  return sub_1C248F4F0(type metadata accessor for SignedClinicalDataPreviewViewController);
}

id sub_1C248F4F0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_1C248F584(uint64_t *a1)
{
  uint64_t v136 = sub_1C254CAD0();
  uint64_t v2 = *(void *)(v136 - 8);
  MEMORY[0x1F4188790](v136);
  uint64_t v135 = (char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v134 = (char *)&v121 - v5;
  uint64_t v6 = a1[1];
  uint64_t v7 = sub_1C2550800();
  if (v7 >= v6)
  {
    if (v6 < 0) {
      goto LABEL_134;
    }
    if (v6) {
      sub_1C248FF10(0, v6, 1, a1);
    }
    return;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_142;
  }
  uint64_t v126 = v7;
  if (v6 < 2)
  {
    id v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v139 = MEMORY[0x1E4FBC860];
    uint64_t v131 = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      unint64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_100:
      uint64_t v112 = v132;
      if (v14 >= 2)
      {
        uint64_t v113 = *a1;
        do
        {
          unint64_t v114 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_129;
          }
          if (!v113) {
            goto LABEL_141;
          }
          uint64_t v115 = v11;
          uint64_t v116 = v11 + 32;
          uint64_t v117 = *(void *)&v11[16 * v114 + 32];
          uint64_t v118 = *(void *)&v11[16 * v14 + 24];
          sub_1C2490140(v113 + 8 * v117, (id *)(v113 + 8 * *(void *)&v116[16 * v14 - 16]), (id *)(v113 + 8 * v118), v131);
          if (v112) {
            break;
          }
          if (v118 < v117) {
            goto LABEL_130;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v115 = sub_1C23F321C((uint64_t)v115);
          }
          if (v114 >= *((void *)v115 + 2)) {
            goto LABEL_131;
          }
          uint64_t v119 = &v115[16 * v114 + 32];
          *(void *)uint64_t v119 = v117;
          *((void *)v119 + 1) = v118;
          unint64_t v120 = *((void *)v115 + 2);
          if (v14 > v120) {
            goto LABEL_132;
          }
          id v11 = v115;
          memmove(&v115[16 * v14 + 16], &v115[16 * v14 + 32], 16 * (v120 - v14));
          *((void *)v115 + 2) = v120 - 1;
          unint64_t v14 = v120 - 1;
        }
        while (v120 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C254F730();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1C21AB51C(0, &qword_1EA2DFBB0);
    uint64_t v10 = sub_1C254F780();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    uint64_t v131 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v139 = v10;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v133 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v124 = v13 + 16;
  uint64_t v122 = a1;
  uint64_t v123 = v13 - 8;
  id v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v129 = v6;
  uint64_t v137 = v13;
  while (1)
  {
    uint64_t v15 = v12;
    uint64_t v16 = v12 + 1;
    uint64_t v128 = v12;
    if (v12 + 1 < v6)
    {
      id v17 = *(void **)(v13 + 8 * v12);
      id v18 = *(id *)(v13 + 8 * v16);
      id v19 = v17;
      id v20 = objc_msgSend(v19, sel_relevantDate);
      uint64_t v21 = v134;
      sub_1C254CA80();

      id v22 = objc_msgSend(v18, sel_relevantDate);
      unint64_t v23 = v135;
      sub_1C254CA80();

      LODWORD(v138) = sub_1C254CA70();
      id v24 = *v133;
      id v25 = v23;
      uint64_t v26 = v136;
      (*v133)(v25, v136);
      v24(v21, v26);

      uint64_t v6 = v129;
      uint64_t v16 = v15 + 2;
      if (v15 + 2 < v6)
      {
        uint64_t v125 = v11;
        id v27 = (id *)(v124 + 8 * v15);
        while (1)
        {
          id v28 = *(v27 - 1);
          id v29 = *v27;
          id v30 = v28;
          id v31 = objc_msgSend(v30, sel_relevantDate);
          id v32 = v134;
          sub_1C254CA80();

          id v33 = objc_msgSend(v29, sel_relevantDate);
          id v34 = v135;
          sub_1C254CA80();

          LODWORD(v33) = sub_1C254CA70();
          id v35 = v34;
          uint64_t v36 = v136;
          v24(v35, v136);
          v24(v32, v36);

          if ((v138 ^ v33)) {
            break;
          }
          ++v27;
          uint64_t v6 = v129;
          if (v129 == ++v16)
          {
            uint64_t v16 = v129;
            id v11 = v125;
            goto LABEL_22;
          }
        }
        id v11 = v125;
        uint64_t v6 = v129;
LABEL_22:
        uint64_t v15 = v128;
      }
      uint64_t v13 = v137;
      if (v138)
      {
        if (v16 < v15) {
          goto LABEL_135;
        }
        if (v15 < v16)
        {
          uint64_t v37 = (uint64_t *)(v123 + 8 * v16);
          uint64_t v38 = v16;
          uint64_t v39 = v15;
          id v40 = (uint64_t *)(v137 + 8 * v15);
          do
          {
            if (v39 != --v38)
            {
              if (!v13) {
                goto LABEL_140;
              }
              uint64_t v41 = *v40;
              uint64_t *v40 = *v37;
              *uint64_t v37 = v41;
            }
            ++v39;
            --v37;
            ++v40;
          }
          while (v39 < v38);
        }
      }
    }
    if (v16 >= v6) {
      goto LABEL_50;
    }
    if (__OFSUB__(v16, v15)) {
      goto LABEL_133;
    }
    if (v16 - v15 >= v126) {
      goto LABEL_50;
    }
    if (__OFADD__(v15, v126)) {
      goto LABEL_136;
    }
    uint64_t v42 = v15 + v126 >= v6 ? v6 : v15 + v126;
    if (v42 < v15) {
      break;
    }
    if (v16 != v42)
    {
      uint64_t v125 = v11;
      uint64_t v43 = v123 + 8 * v16;
      uint64_t v127 = v42;
      do
      {
        uint64_t v44 = *(void **)(v13 + 8 * v16);
        uint64_t v45 = v15;
        uint64_t v130 = v43;
        while (1)
        {
          uint64_t v46 = v16;
          uint64_t v47 = *(void **)v43;
          id v48 = v44;
          id v138 = v48;
          id v49 = v47;
          id v50 = objc_msgSend(v49, sel_relevantDate);
          uint64_t v51 = v134;
          sub_1C254CA80();

          id v52 = objc_msgSend(v48, sel_relevantDate);
          id v53 = v135;
          sub_1C254CA80();

          LOBYTE(v52) = sub_1C254CA70();
          uint64_t v54 = *v133;
          long long v55 = v53;
          uint64_t v56 = v136;
          (*v133)(v55, v136);
          v54(v51, v56);

          if ((v52 & 1) == 0) {
            break;
          }
          uint64_t v13 = v137;
          if (!v137) {
            goto LABEL_138;
          }
          uint64_t v16 = v46;
          uint64_t v57 = *(void **)v43;
          uint64_t v44 = *(void **)(v43 + 8);
          *(void *)uint64_t v43 = v44;
          *(void *)(v43 + 8) = v57;
          v43 -= 8;
          if (v46 == ++v45) {
            goto LABEL_43;
          }
        }
        uint64_t v13 = v137;
        uint64_t v16 = v46;
LABEL_43:
        ++v16;
        uint64_t v43 = v130 + 8;
        uint64_t v15 = v128;
      }
      while (v16 != v127);
      uint64_t v16 = v127;
      id v11 = v125;
    }
LABEL_50:
    if (v16 < v15) {
      goto LABEL_128;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v138 = (id)v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      id v11 = sub_1C23F277C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v60 = *((void *)v11 + 2);
    unint64_t v59 = *((void *)v11 + 3);
    unint64_t v14 = v60 + 1;
    uint64_t v13 = v137;
    if (v60 >= v59 >> 1)
    {
      unint64_t v111 = sub_1C23F277C((char *)(v59 > 1), v60 + 1, 1, v11);
      uint64_t v13 = v137;
      id v11 = v111;
    }
    *((void *)v11 + 2) = v14;
    id v61 = v11 + 32;
    uint64_t v62 = &v11[16 * v60 + 32];
    id v63 = v138;
    *(void *)uint64_t v62 = v15;
    *((void *)v62 + 1) = v63;
    if (v60)
    {
      while (1)
      {
        unint64_t v64 = v14 - 1;
        if (v14 >= 4)
        {
          id v69 = &v61[16 * v14];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_117;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_118;
          }
          unint64_t v76 = v14 - 2;
          uint64_t v77 = &v61[16 * v14 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_120;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_123;
          }
          if (v81 >= v72)
          {
            uint64_t v99 = &v61[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_127;
            }
            BOOL v92 = v67 < v102;
            goto LABEL_87;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v93 = *((void *)v11 + 4);
            uint64_t v94 = *((void *)v11 + 5);
            BOOL v75 = __OFSUB__(v94, v93);
            uint64_t v86 = v94 - v93;
            char v87 = v75;
            goto LABEL_81;
          }
          uint64_t v66 = *((void *)v11 + 4);
          uint64_t v65 = *((void *)v11 + 5);
          BOOL v75 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          char v68 = v75;
        }
        if (v68) {
          goto LABEL_119;
        }
        unint64_t v76 = v14 - 2;
        uint64_t v82 = &v61[16 * v14 - 32];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v85 = __OFSUB__(v83, v84);
        uint64_t v86 = v83 - v84;
        char v87 = v85;
        if (v85) {
          goto LABEL_122;
        }
        BOOL v88 = &v61[16 * v64];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_125;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_126;
        }
        if (v86 + v91 >= v67)
        {
          BOOL v92 = v67 < v91;
LABEL_87:
          if (v92) {
            unint64_t v64 = v76;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v87) {
          goto LABEL_121;
        }
        BOOL v95 = &v61[16 * v64];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v75 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_124;
        }
        if (v98 < v86) {
          goto LABEL_14;
        }
LABEL_89:
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v14)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        if (!v13) {
          goto LABEL_139;
        }
        uint64_t v104 = v11;
        uint64_t v105 = &v61[16 * v103];
        uint64_t v106 = *(void *)v105;
        uint64_t v107 = &v61[16 * v64];
        uint64_t v108 = *((void *)v107 + 1);
        uint64_t v109 = v132;
        sub_1C2490140(v13 + 8 * *(void *)v105, (id *)(v13 + 8 * *(void *)v107), (id *)(v13 + 8 * v108), v131);
        uint64_t v132 = v109;
        if (v109) {
          goto LABEL_111;
        }
        if (v108 < v106) {
          goto LABEL_114;
        }
        if (v64 > *((void *)v104 + 2)) {
          goto LABEL_115;
        }
        *(void *)uint64_t v105 = v106;
        *(void *)&v61[16 * v103 + 8] = v108;
        unint64_t v110 = *((void *)v104 + 2);
        if (v64 >= v110) {
          goto LABEL_116;
        }
        id v11 = v104;
        unint64_t v14 = v110 - 1;
        memmove(&v61[16 * v64], v107 + 16, 16 * (v110 - 1 - v64));
        *((void *)v104 + 2) = v110 - 1;
        uint64_t v13 = v137;
        if (v110 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_14:
    uint64_t v6 = v129;
    uint64_t v12 = (uint64_t)v138;
    if ((uint64_t)v138 >= v129)
    {
      a1 = v122;
      goto LABEL_100;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  sub_1C25505E0();
  __break(1u);
}

void sub_1C248FF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v30 = a1;
  uint64_t v35 = sub_1C254CAD0();
  MEMORY[0x1F4188790](v35);
  id v34 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v33 = (char *)&v28 - v10;
  uint64_t v29 = a2;
  if (a3 != a2)
  {
    uint64_t v11 = *a4;
    uint64_t v32 = v9 + 8;
    uint64_t v36 = v11;
    uint64_t v12 = v11 + 8 * a3 - 8;
    unint64_t v14 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v13 = v33;
LABEL_5:
    uint64_t v15 = *(void **)(v36 + 8 * a3);
    uint64_t v16 = v30;
    uint64_t v31 = v12;
    while (1)
    {
      id v17 = *(void **)v12;
      id v18 = v15;
      id v37 = v18;
      id v19 = v17;
      id v20 = objc_msgSend(v19, sel_relevantDate);
      sub_1C254CA80();

      id v21 = objc_msgSend(v18, sel_relevantDate);
      id v22 = v34;
      sub_1C254CA80();

      LOBYTE(v21) = sub_1C254CA70();
      uint64_t v23 = a3;
      id v24 = *v14;
      id v25 = v22;
      uint64_t v26 = v35;
      (*v14)(v25, v35);
      v24(v13, v26);
      a3 = v23;

      if ((v21 & 1) == 0)
      {
LABEL_4:
        a3 = v23 + 1;
        uint64_t v12 = v31 + 8;
        if (v23 + 1 == v29) {
          return;
        }
        goto LABEL_5;
      }
      if (!v36) {
        break;
      }
      id v27 = *(void **)v12;
      uint64_t v15 = *(void **)(v12 + 8);
      *(void *)uint64_t v12 = v15;
      *(void *)(v12 + 8) = v27;
      v12 -= 8;
      if (v23 == ++v16) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C2490140(uint64_t a1, id *a2, id *a3, void **a4)
{
  uint64_t v57 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v56 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v54 = a3;
  long long v55 = (char *)&v48 - v12;
  uint64_t v13 = (uint64_t)a2 - a1;
  uint64_t v14 = v13 / 8;
  uint64_t v15 = a2;
  uint64_t v16 = (char *)a3 - (char *)a2;
  uint64_t v17 = v16 / 8;
  id v61 = v11;
  unint64_t v60 = a4;
  id v58 = v11;
  if (v13 / 8 >= v16 / 8)
  {
    if (v16 < -7) {
      goto LABEL_41;
    }
    if (a4 != v15 || &v15[v17] <= a4)
    {
      memmove(a4, v15, 8 * v17);
      uint64_t v11 = v58;
    }
    uint64_t v31 = &a4[v17];
    unint64_t v59 = v31;
    id v61 = v15;
    if (v16 < 8 || v11 >= v15) {
      goto LABEL_40;
    }
    id v49 = (void (**)(char *, uint64_t))(v8 + 8);
    id v50 = a4;
    uint64_t v32 = v54 - 1;
    id v33 = v15;
    while (1)
    {
      uint64_t v54 = v15;
      id v52 = v31;
      id v53 = v32 + 1;
      uint64_t v35 = v31 - 1;
      uint64_t v36 = *--v33;
      id v37 = *(v31 - 1);
      id v51 = v37;
      id v38 = v36;
      id v39 = objc_msgSend(v38, sel_relevantDate);
      id v40 = v55;
      sub_1C254CA80();

      id v41 = objc_msgSend(v37, sel_relevantDate);
      uint64_t v42 = v56;
      sub_1C254CA80();

      LOBYTE(v41) = sub_1C254CA70();
      uint64_t v43 = *v49;
      uint64_t v44 = v42;
      uint64_t v45 = v57;
      (*v49)(v44, v57);
      v43(v40, v45);

      if (v41) {
        break;
      }
      unint64_t v59 = v35;
      if (v53 < v52 || v32 >= v52)
      {
        *uint64_t v32 = *v35;
        id v33 = v54;
        uint64_t v31 = v35;
        goto LABEL_28;
      }
      unint64_t v46 = (unint64_t)v50;
      id v34 = v58;
      id v33 = v54;
      if (v53 != v52) {
        *uint64_t v32 = *v35;
      }
      uint64_t v31 = v35;
      if ((unint64_t)v35 <= v46) {
        goto LABEL_40;
      }
LABEL_29:
      --v32;
      uint64_t v15 = v33;
      if (v33 <= v34) {
        goto LABEL_40;
      }
    }
    uint64_t v31 = v52;
    if (v53 != v54 || v32 >= v54) {
      *uint64_t v32 = *v33;
    }
    id v61 = v33;
LABEL_28:
    id v34 = v58;
    if (v31 <= v50) {
      goto LABEL_40;
    }
    goto LABEL_29;
  }
  if (v13 >= -7)
  {
    if (a4 != v11 || &v11[v14] <= a4)
    {
      memmove(a4, v58, 8 * v14);
      uint64_t v11 = v58;
    }
    id v53 = &a4[v14];
    unint64_t v59 = v53;
    if (v13 >= 8 && v15 < v54)
    {
      id v52 = (void **)(v8 + 8);
      id v18 = v55;
      do
      {
        id v58 = v11;
        id v19 = *a4;
        id v20 = *v15;
        id v21 = v19;
        id v22 = a4;
        id v23 = objc_msgSend(v21, sel_relevantDate);
        sub_1C254CA80();

        id v24 = objc_msgSend(v20, sel_relevantDate);
        id v25 = v56;
        sub_1C254CA80();

        LOBYTE(v24) = sub_1C254CA70();
        uint64_t v26 = (void (*)(char *, uint64_t))*v52;
        id v27 = v25;
        uint64_t v28 = v57;
        ((void (*)(char *, uint64_t))*v52)(v27, v57);
        v26(v18, v28);

        if (v24)
        {
          a4 = v22;
          unint64_t v29 = (unint64_t)(v15 + 1);
          uint64_t v30 = v58;
          if (v58 < v15 || (unint64_t)v58 >= v29 || v58 != v15) {
            *id v58 = *v15;
          }
        }
        else
        {
          uint64_t v30 = v58;
          if (v58 != v22) {
            *id v58 = *v22;
          }
          a4 = v22 + 1;
          unint64_t v60 = v22 + 1;
          unint64_t v29 = (unint64_t)v15;
        }
        uint64_t v11 = v30 + 1;
        id v61 = v11;
        if (a4 >= v53) {
          break;
        }
        uint64_t v15 = (id *)v29;
      }
      while (v29 < (unint64_t)v54);
    }
LABEL_40:
    sub_1C23F2978(&v61, &v60, &v59);
    return 1;
  }
LABEL_41:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2490648(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = a2;
  uint64_t v31 = sub_1C254CAD0();
  uint64_t v5 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v30 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = sub_1C2550620())
  {
    id v25 = v3;
    uint64_t v26 = v7;
    unint64_t v28 = a1;
    unint64_t v29 = a1 & 0xC000000000000001;
    id v27 = (void (**)(char *, uint64_t))(v5 + 8);
    for (uint64_t i = 4; ; ++i)
    {
      uint64_t v5 = i - 4;
      id v9 = v29 ? (id)MEMORY[0x1C87588E0](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v10 = v9;
      uint64_t v11 = i - 3;
      if (__OFADD__(v5, 1)) {
        break;
      }
      id v12 = objc_msgSend(v9, sel_primaryConcept);
      sub_1C226AEF4();
      uint64_t v14 = v13;

      id v15 = sub_1C248C440();
      id v16 = objc_msgSend(v10, sel_relevantDate);
      uint64_t v17 = v30;
      sub_1C254CA80();

      id v18 = (void *)sub_1C254CA50();
      (*v27)(v17, v31);
      id v19 = objc_msgSend(v15, sel_stringFromDate_, v18);

      sub_1C254F470();
      if (v14)
      {
        uint64_t v3 = (uint64_t *)sub_1C254F430();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v3 = 0;
      }
      uint64_t v20 = v26;
      id v21 = objc_allocWithZone(MEMORY[0x1E4F67B90]);
      id v22 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      id v23 = objc_msgSend(v21, sel_initWithPrimaryText_secondaryText_, v3, v22);

      if (v23)
      {
        uint64_t v3 = &v33;
        MEMORY[0x1C8757C00]();
        if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();
      }
      a1 = v28;
      if (v11 == v20)
      {
        swift_bridgeObjectRelease();
        return v33;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t method lookup function for SignedClinicalDataPreviewViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SignedClinicalDataPreviewViewController);
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.__allocating_init(records:importer:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.numberOfSections(in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:numberOfRowsInSection:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:cellForRowAt:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:titleForHeaderInSection:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:titleForFooterInSection:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:estimatedHeightForRowAt:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:heightForHeaderInSection:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:heightForFooterInSection:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of SignedClinicalDataPreviewViewController.tableView(_:viewForFooterInSection:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t sub_1C2490BA4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2490BDC(unint64_t a1)
{
  return sub_1C248D5D8(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C2490BE4()
{
  sub_1C23DCC68(*(void *)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C2490C24()
{
  sub_1C248D89C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t block_destroy_helper_59()
{
  return swift_release();
}

void sub_1C2490C34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2490C98()
{
  sub_1C220BA74(*(void **)(v0 + 16));
}

uint64_t sub_1C2490CAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BrowseCategory();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)&v24 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v24 - v10;
  sub_1C24926E4(&qword_1EBB6FAD8, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  uint64_t result = sub_1C254F910();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_1C2492CDC(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    sub_1C2492D44((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    sub_1C2368E58((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_1C2370434((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t Date.medicalDateAdjustedToCurrentCalendar()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  sub_1C2491474(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v33 = (char *)&v27 - v2;
  uint64_t v3 = sub_1C254C6F0();
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v31 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1C254CCC0();
  uint64_t v5 = *(void *)(v32 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v32);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v27 - v9;
  id v11 = objc_msgSend(self, sel_referenceCalendar);
  sub_1C254CC40();

  sub_1C2491474(0, &qword_1EA2DE7B0, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v12 = sub_1C254CCB0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C256C4D0;
  unint64_t v17 = v16 + v15;
  int64_t v18 = *(void (**)(unint64_t, void, uint64_t))(v13 + 104);
  v18(v17, *MEMORY[0x1E4F27C00], v12);
  v18(v17 + v14, *MEMORY[0x1E4F27C20], v12);
  v18(v17 + 2 * v14, *MEMORY[0x1E4F27C30], v12);
  v18(v17 + 3 * v14, *MEMORY[0x1E4F27BF0], v12);
  v18(v17 + 4 * v14, *MEMORY[0x1E4F27C10], v12);
  unint64_t v19 = v31;
  v18(v17 + 5 * v14, *MEMORY[0x1E4F27C48], v12);
  v18(v17 + 6 * v14, *MEMORY[0x1E4F27C50], v12);
  sub_1C24924A4(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C254CC20();
  unint64_t v20 = v33;
  swift_bridgeObjectRelease();
  sub_1C254CC80();
  sub_1C254CC50();
  int64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  unint64_t v22 = v8;
  uint64_t v23 = v32;
  v21(v22, v32);
  uint64_t v24 = sub_1C254CAD0();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v29);
    v21(v10, v23);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(v30, v20, v24);
  }
  return result;
}

void sub_1C2491474(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t static Date.startOfToday.getter()
{
  uint64_t v0 = sub_1C254CAD0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C254CCC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CC80();
  sub_1C254CA90();
  sub_1C254CC00();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t static Date.endOfToday.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_1C254CCB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2491474(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = sub_1C254CAD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v26 = sub_1C254CCC0();
  uint64_t v24 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CC80();
  sub_1C254CA90();
  uint64_t v25 = v14;
  sub_1C254CC00();
  uint64_t v17 = *MEMORY[0x1E4F27BF0];
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v23(v4, v17, v1);
  sub_1C254CC60();
  int64_t v18 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v28 = v2 + 8;
  uint64_t v29 = v1;
  v18(v4, v1);
  unint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v11, v8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = v29;
    v23(v4, *MEMORY[0x1E4F27C50], v29);
    sub_1C254CC60();
    v18(v4, v21);
    v19(v7, v8);
    v19(v25, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v16, v26);
  }
  return result;
}

uint64_t sub_1C24919F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1C220732C();
  uint64_t result = sub_1C254F910();
  uint64_t v9 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      long long v5 = *(_OWORD *)(v4 + 48);
      void v10[2] = *(_OWORD *)(v4 + 32);
      _OWORD v10[3] = v5;
      uint64_t v11 = *(void *)(v4 + 64);
      long long v6 = *(_OWORD *)(v4 + 16);
      v10[0] = *(_OWORD *)v4;
      v10[1] = v6;
      sub_1C2201A54((uint64_t)v10);
      sub_1C2366E18((uint64_t)v8, (unsigned __int8 *)v10);
      uint64_t v7 = (void *)v8[1];

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v4 += 72;
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_1C2491AD0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  long long v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v62 = (uint64_t)&v56 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v56 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v56 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v56 - v16;
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  unint64_t v20 = (char *)&v56 - v19;
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v64 = (uint64_t)&v56 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v56 - v23;
  uint64_t v25 = *(void *)(a1 + 16);
  sub_1C24926E4(&qword_1EA2DF880, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  uint64_t v26 = sub_1C254F910();
  uint64_t v60 = v25;
  if (v25)
  {
    uint64_t v66 = v17;
    uint64_t v67 = v6;
    uint64_t v56 = v2;
    uint64_t v27 = 0;
    uint64_t v28 = *(unsigned __int8 *)(v3 + 80);
    id v58 = v20;
    uint64_t v59 = a1 + ((v28 + 32) & ~v28);
    uint64_t v68 = *(void *)(v3 + 72);
    uint64_t v29 = v62;
    uint64_t v30 = v26;
    uint64_t v57 = v11;
    while (1)
    {
      uint64_t v61 = v27;
      sub_1C2492CDC(v59 + v68 * v27, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C25509C0();
      swift_bridgeObjectRetain();
      sub_1C254F570();
      sub_1C254F570();
      uint64_t v31 = sub_1C2550A10();
      uint64_t v32 = -1 << *(unsigned char *)(v30 + 32);
      unint64_t v33 = v31 & ~v32;
      uint64_t v34 = v30;
      uint64_t v35 = v30 + 56;
      if (((*(void *)(v35 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33) & 1) == 0) {
        break;
      }
      uint64_t v65 = ~v32;
      while (1)
      {
        unint64_t v20 = v14;
        sub_1C2492CDC(*(void *)(v34 + 48) + v33 * v68, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        if (*((void *)v11 + 2) == *((void *)v24 + 2) && *((void *)v11 + 3) == *((void *)v24 + 3)) {
          break;
        }
        char v38 = sub_1C2550870();
        sub_1C2492CDC((uint64_t)v11, v29, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        id v39 = (void *)v29;
        id v40 = v67;
        sub_1C2492CDC((uint64_t)v24, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        if (v38) {
          goto LABEL_16;
        }
        sub_1C2370434((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C2370434((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C2370434((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        uint64_t v29 = (uint64_t)v39;
        uint64_t v14 = v20;
LABEL_8:
        unint64_t v33 = (v33 + 1) & v65;
        if (((*(void *)(v35 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33) & 1) == 0) {
          goto LABEL_19;
        }
      }
      sub_1C2492CDC((uint64_t)v11, v29, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      id v39 = (void *)v29;
      id v40 = v67;
      sub_1C2492CDC((uint64_t)v24, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_16:
      if (*v39 != *v40 || v39[1] != v40[1])
      {
        char v36 = sub_1C2550870();
        uint64_t v29 = v62;
        sub_1C2370434(v62, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C2370434((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C2370434((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        uint64_t v14 = v20;
        if (v36) {
          goto LABEL_3;
        }
        goto LABEL_8;
      }
      uint64_t v29 = v62;
      sub_1C2370434(v62, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C2370434((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C2370434((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      uint64_t v14 = v20;
LABEL_3:
      uint64_t v30 = v34;
LABEL_4:
      swift_bridgeObjectRelease();
      uint64_t v27 = v61 + 1;
      sub_1C2370434((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if (v27 == v60) {
        return v30;
      }
    }
LABEL_19:
    uint64_t v30 = v34;
    swift_bridgeObjectRelease();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v42 = v64;
    sub_1C2492CDC((uint64_t)v24, v64, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    uint64_t v69 = v30;
    if (*(void *)(v30 + 24) > *(void *)(v30 + 16))
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C22BC110();
        uint64_t v30 = v69;
      }
      goto LABEL_40;
    }
    unint64_t v20 = v58;
    if (isUniquelyReferenced_nonNull_native) {
      sub_1C2280FDC();
    }
    else {
      sub_1C236CFC4();
    }
    uint64_t v30 = v69;
    sub_1C25509C0();
    sub_1C254F570();
    sub_1C254F570();
    uint64_t v43 = sub_1C2550A10();
    uint64_t v44 = -1 << *(unsigned char *)(v30 + 32);
    unint64_t v33 = v43 & ~v44;
    uint64_t v65 = v30 + 56;
    if ((*(void *)(v30 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33))
    {
      uint64_t v63 = ~v44;
      while (1)
      {
        unint64_t v46 = v24;
        uint64_t v47 = v30;
        sub_1C2492CDC(*(void *)(v30 + 48) + v33 * v68, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        BOOL v48 = *((void *)v20 + 2) == *(void *)(v42 + 16) && *((void *)v20 + 3) == *(void *)(v42 + 24);
        uint64_t v49 = v42;
        if (v48) {
          break;
        }
        char v50 = sub_1C2550870();
        id v51 = v66;
        sub_1C2492CDC((uint64_t)v20, (uint64_t)v66, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C2492CDC(v49, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        if (v50) {
          goto LABEL_36;
        }
        sub_1C2370434((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C2370434((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C2370434((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        uint64_t v42 = v64;
        uint64_t v30 = v47;
        uint64_t v24 = v46;
LABEL_28:
        unint64_t v33 = (v33 + 1) & v63;
        if (((*(void *)(v65 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
        {
          uint64_t v11 = v57;
          goto LABEL_40;
        }
      }
      id v51 = v66;
      sub_1C2492CDC((uint64_t)v20, (uint64_t)v66, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C2492CDC(v49, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_36:
      uint64_t v30 = v47;
      if (*v51 == *(void *)v14 && v51[1] == *((void *)v14 + 1)) {
        goto LABEL_45;
      }
      char v45 = sub_1C2550870();
      sub_1C2370434((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C2370434((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C2370434((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      uint64_t v42 = v64;
      uint64_t v24 = v46;
      if (v45) {
        goto LABEL_46;
      }
      goto LABEL_28;
    }
LABEL_40:
    *(void *)(v30 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v33;
    sub_1C2492D44(v42, *(void *)(v30 + 48) + v33 * v68, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    uint64_t v52 = *(void *)(v30 + 16);
    BOOL v53 = __OFADD__(v52, 1);
    uint64_t v54 = v52 + 1;
    if (!v53)
    {
      *(void *)(v30 + 16) = v54;
      goto LABEL_4;
    }
    __break(1u);
LABEL_45:
    sub_1C2370434((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1C2370434((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1C2370434((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_46:
    uint64_t result = sub_1C2550900();
    __break(1u);
  }
  else
  {
    return v26;
  }
  return result;
}

uint64_t sub_1C2492308(uint64_t a1)
{
  uint64_t v2 = sub_1C254E220();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  long long v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1C24926E4(&qword_1EA2DF688, MEMORY[0x1E4F66840]);
  uint64_t result = sub_1C254F910();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1C2367908((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1C24924A4(uint64_t a1)
{
  uint64_t v2 = sub_1C254CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  long long v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1C24926E4(&qword_1EA2DF9E8, MEMORY[0x1E4F27C88]);
  uint64_t result = sub_1C254F910();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1C2367C2C((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1C2492640(unint64_t a1)
{
  return sub_1C249295C(a1, (unint64_t *)&qword_1EA2E1530, 0x1E4F67708, &qword_1EA2DF698, (void (*)(id *, uint64_t))sub_1C2367F50);
}

uint64_t sub_1C2492670(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1C254F910();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_1C23681F0(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1C24926E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C249272C(unint64_t a1)
{
  return sub_1C249295C(a1, &qword_1EBB6FF78, 0x1E4F2B448, (unint64_t *)&qword_1EBB6FF80, (void (*)(id *, uint64_t))sub_1C23682EC);
}

uint64_t sub_1C249275C(unint64_t a1)
{
  return sub_1C249295C(a1, &qword_1EA2DF9B0, 0x1E4F2AD10, &qword_1EA2DF9B8, (void (*)(id *, uint64_t))sub_1C236858C);
}

uint64_t sub_1C249278C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for CategoryRecordQueryDescription();
  sub_1C24926E4(&qword_1EBB6F878, (void (*)(uint64_t))type metadata accessor for CategoryRecordQueryDescription);
  uint64_t result = sub_1C254F910();
  uint64_t v4 = result;
  uint64_t v9 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C2550620();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v5) {
      return v4;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      return v4;
    }
  }
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = MEMORY[0x1C87588E0](i, a1);
      }
      else
      {
        uint64_t v7 = *(void *)(a1 + 8 * i + 32);
        swift_retain();
      }
      sub_1C236882C(&v8, v7);
      swift_release();
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C24928FC(unint64_t a1)
{
  return sub_1C249295C(a1, &qword_1EBB6EF58, 0x1E4F2B3D0, (unint64_t *)&qword_1EBB6EFD8, (void (*)(id *, uint64_t))sub_1C2368BB8);
}

uint64_t sub_1C249292C(unint64_t a1)
{
  return sub_1C249295C(a1, (unint64_t *)&qword_1EBB70030, 0x1E4F28ED0, (unint64_t *)&qword_1EBB6F990, (void (*)(id *, uint64_t))sub_1C2369194);
}

uint64_t sub_1C249295C(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  sub_1C21AB51C(0, a2);
  sub_1C21A818C(a4, a2);
  uint64_t result = sub_1C254F910();
  uint64_t v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C2550620();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v11) {
      return v17;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      return v17;
    }
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        uint64_t v13 = MEMORY[0x1C87588E0](i, a1);
        a5(&v16, v13);
      }
    }
    else
    {
      uint64_t v14 = (void **)(a1 + 32);
      do
      {
        uint64_t v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2492ADC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserDomainConceptViewData();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1C24926E4(&qword_1EA2DF988, (void (*)(uint64_t))type metadata accessor for UserDomainConceptViewData);
  uint64_t result = sub_1C254F910();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_1C2492CDC(v11, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      sub_1C2369434((uint64_t)v8, v5);
      sub_1C2370434((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_1C2492C68(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1C2206AA8();
  uint64_t result = sub_1C254F910();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1C2369868(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1C2492CDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2492D44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2492DAC(dispatch_group_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v89 = a4;
  uint64_t v88 = a3;
  uint64_t v7 = *v4;
  uint64_t v95 = sub_1C254F1C0();
  uint64_t v8 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  BOOL v92 = (char *)v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254F200();
  uint64_t v93 = *(void *)(v10 - 8);
  uint64_t v94 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v90 = (char *)v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1C254F1D0();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  BOOL v85 = (char *)v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1C254CB40();
  uint64_t v13 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v15 = (char *)v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = MEMORY[0x1E4FBC860];
  *(void *)(v16 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v91 = v16;
  uint64_t v99 = v4;
  uint64_t v97 = (void *)(v16 + 16);
  if (a2)
  {
    unint64_t isa = (unint64_t)a1[13].isa;
    if (isa) {
      swift_bridgeObjectRetain();
    }
    else {
      unint64_t isa = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    uint64_t v19 = swift_bridgeObjectRetain();
    unint64_t isa = sub_1C2290278(v19);
    swift_bridgeObjectRelease();
  }
  uint64_t v98 = v7;
  if (!(isa >> 62))
  {
    uint64_t v20 = *(void *)((isa & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20)
    {
      uint64_t aBlock = v17;
      sub_1C2550490();
      goto LABEL_9;
    }
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  uint64_t v69 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v69) {
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (v20)
  {
    uint64_t aBlock = v17;
    sub_1C2550490();
    if ((v20 & 0x8000000000000000) == 0)
    {
LABEL_9:
      LODWORD(v100) = a2;
      dispatch_group_t v101 = a1;
      uint64_t v84 = v8;
      uint64_t v21 = self;
      uint64_t v22 = v13;
      uint64_t v23 = 0;
      uint64_t v24 = (void (**)(char *, uint64_t))(v22 + 8);
      do
      {
        if ((isa & 0xC000000000000001) != 0) {
          id v25 = (id)MEMORY[0x1C87588E0](v23, isa);
        }
        else {
          id v25 = *(id *)(isa + 8 * v23 + 32);
        }
        uint64_t v26 = v25;
        ++v23;
        id v27 = objc_msgSend(v25, sel_identifier);
        sub_1C254CB20();

        uint64_t v28 = (void *)sub_1C254CB00();
        (*v24)(v15, v102);
        id v29 = objc_msgSend(v21, sel_predicateForRecordsFromClinicalAccountIdentifier_, v28);

        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
      }
      while (v20 != v23);
      swift_bridgeObjectRelease();
      a1 = v101;
      LOBYTE(a2) = v100;
      goto LABEL_15;
    }
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    uint64_t v70 = v86;
    uint64_t v71 = v85;
    uint64_t v72 = v87;
    (*(void (**)(char *, void, uint64_t))(v86 + 104))(v85, *MEMORY[0x1E4FBCB48], v87);
    uint64_t v73 = v8;
    uint64_t v74 = (void *)sub_1C254FCC0();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
    uint64_t v75 = swift_allocObject();
    uint64_t v76 = v89;
    *(void *)(v75 + 16) = v88;
    *(void *)(v75 + 24) = v76;
    *((void *)&v107 + 1) = sub_1C249506C;
    uint64_t v108 = (void *)v75;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v105 = 1107296256;
    uint64_t v106 = sub_1C224E544;
    *(void *)&long long v107 = &block_descriptor_37_0;
    uint64_t v77 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v78 = v90;
    sub_1C254F1E0();
    uint64_t v103 = v17;
    sub_1C221B1F8((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    sub_1C221B1A0();
    sub_1C221B1F8((unint64_t *)&qword_1EBB6FF40, (void (*)(uint64_t))sub_1C221B1A0);
    uint64_t v79 = v92;
    uint64_t v80 = v95;
    sub_1C2550200();
    MEMORY[0x1C87581B0](0, v78, v79, v77);
    _Block_release(v77);

    (*(void (**)(char *, uint64_t))(v73 + 8))(v79, v80);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v78, v94);
    swift_release();
    swift_release();
    uint64_t v68 = 0;
    uint64_t v67 = nullsub_1;
    goto LABEL_32;
  }
  uint64_t v84 = v8;
  swift_bridgeObjectRelease();
LABEL_15:
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  uint64_t v30 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  uint64_t v31 = self;
  id v32 = objc_msgSend(v31, sel_orPredicateWithSubpredicates_, v30);

  if ((a2 & 1) != 0 || (id v33 = sub_1C245AF18()) == 0)
  {
    id v39 = v32;
    char v40 = 0;
  }
  else
  {
    uint64_t v34 = v33;
    sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1C255CD70;
    *(void *)(v35 + 32) = v32;
    *(void *)(v35 + 40) = v34;
    uint64_t aBlock = v35;
    sub_1C254F730();
    id v36 = v32;
    id v37 = v34;
    char v38 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v39 = objc_msgSend(v31, sel_andPredicateWithSubpredicates_, v38);

    char v40 = 1;
  }
  id v41 = dispatch_group_create();
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = sub_1C22068CC(MEMORY[0x1E4FBC860]);
  sub_1C254CEE0();
  swift_allocObject();
  uint64_t v100 = sub_1C254CED0();
  if (a2)
  {
    uint64_t v43 = a1[8].isa;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v44 = swift_bridgeObjectRetain();
    uint64_t v43 = sub_1C228FD90(v44);
    swift_bridgeObjectRelease();
  }
  dispatch_group_t v101 = v41;
  uint64_t v102 = v42;
  uint64_t v45 = v43[2];
  if (v45)
  {
    id v83 = v32;
    swift_bridgeObjectRetain();
    v82[1] = v43;
    unint64_t v46 = v43 + 6;
    uint64_t v96 = v39;
    char v47 = v40;
    do
    {
      uint64_t v48 = v46[5];
      uint64_t v49 = (void *)v46[6];
      id v51 = (void *)v46[3];
      uint64_t v50 = v46[4];
      BOOL v53 = (void *)*(v46 - 1);
      uint64_t v52 = (uint64_t (*)(uint64_t))*v46;
      LOBYTE(aBlock) = *((unsigned char *)v46 - 16);
      uint64_t v105 = (uint64_t)v53;
      uint64_t v106 = v52;
      long long v107 = *(_OWORD *)(v46 + 1);
      uint64_t v108 = v51;
      uint64_t v109 = v50;
      uint64_t v110 = v48;
      unint64_t v111 = v49;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v54 = v49;
      id v55 = v53;
      sub_1C2493A00((uint64_t)&aBlock, v101, (int)v99, v96, v100, v47, v102, v97, v98);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v46 += 9;
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease();
    id v32 = v83;
    id v39 = v96;
  }
  swift_bridgeObjectRelease();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v56 = v86;
  uint64_t v57 = v85;
  uint64_t v58 = v87;
  (*(void (**)(char *, void, uint64_t))(v86 + 104))(v85, *MEMORY[0x1E4FBCB48], v87);
  uint64_t v59 = (void *)sub_1C254FCC0();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
  uint64_t v60 = (void *)swift_allocObject();
  uint64_t v61 = v89;
  v60[2] = v88;
  void v60[3] = v61;
  v60[4] = v102;
  *((void *)&v107 + 1) = sub_1C2495058;
  uint64_t v108 = v60;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v105 = 1107296256;
  uint64_t v106 = sub_1C224E544;
  *(void *)&long long v107 = &block_descriptor_31;
  uint64_t v62 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  uint64_t v63 = v90;
  sub_1C254F1E0();
  uint64_t v103 = MEMORY[0x1E4FBC860];
  sub_1C221B1F8((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C221B1A0();
  sub_1C221B1F8((unint64_t *)&qword_1EBB6FF40, (void (*)(uint64_t))sub_1C221B1A0);
  uint64_t v64 = v92;
  uint64_t v65 = v95;
  sub_1C2550200();
  dispatch_group_t v66 = v101;
  sub_1C254FBE0();
  _Block_release(v62);

  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v64, v65);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v63, v94);
  swift_release();
  swift_release();
  uint64_t v67 = sub_1C2495064;
  uint64_t v68 = v91;
LABEL_32:
  type metadata accessor for CancellationToken();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  *(void *)(result + 24) = v67;
  *(void *)(result + 32) = v68;
  return result;
}

uint64_t sub_1C2493A00(uint64_t a1, dispatch_group_t group, int a3, void *a4, uint64_t a5, char a6, uint64_t a7, void *a8, uint64_t a9)
{
  long long v16 = *(_OWORD *)(a1 + 48);
  void v25[2] = *(_OWORD *)(a1 + 32);
  v25[3] = v16;
  uint64_t v26 = *(void *)(a1 + 64);
  long long v17 = *(_OWORD *)(a1 + 16);
  v25[0] = *(_OWORD *)a1;
  v25[1] = v17;
  dispatch_group_enter(group);
  uint64_t v18 = swift_allocObject();
  long long v19 = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 56) = *(_OWORD *)(a1 + 16);
  long long v20 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v18 + 72) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v18 + 88) = v20;
  *(unsigned char *)(v18 + 16) = a6;
  *(void *)(v18 + 24) = a5;
  *(void *)(v18 + 32) = a7;
  uint64_t v21 = *(void *)(a1 + 64);
  *(_OWORD *)(v18 + 40) = v19;
  *(void *)(v18 + 104) = v21;
  *(void *)(v18 + 112) = group;
  *(void *)(v18 + 120) = a9;
  swift_retain();
  swift_retain();
  sub_1C2201A54((uint64_t)v25);
  uint64_t v22 = group;
  sub_1C24941F4(a1, a4, a5, (uint64_t)sub_1C2495138, v18);
  swift_release();
  uint64_t v23 = swift_retain();
  MEMORY[0x1C8757C00](v23);
  if (*(void *)((*a8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  return swift_release();
}

void sub_1C2493B84(unint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, NSObject *a7)
{
  char v40 = a6;
  uint64_t v12 = sub_1C254E560();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v20 = (id)a1;
    sub_1C254E510();
    id v21 = (id)a1;
    id v22 = (id)a1;
    uint64_t v23 = sub_1C254E550();
    os_log_type_t v24 = sub_1C254FA20();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      id v39 = a7;
      uint64_t v26 = v25;
      uint64_t v27 = swift_slowAlloc();
      v41[0] = v27;
      *(_DWORD *)uint64_t v26 = 136446466;
      uint64_t v28 = sub_1C2550AA0();
      uint64_t v42 = sub_1C21AD354(v28, v29, v41);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      uint64_t v42 = a1;
      id v30 = (id)a1;
      sub_1C2206F9C();
      uint64_t v31 = sub_1C254F4F0();
      uint64_t v42 = sub_1C21AD354(v31, v32, v41);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      sub_1C2285A50((id)a1, 1);
      sub_1C2285A50((id)a1, 1);
      _os_log_impl(&dword_1C21A1000, v23, v24, "[%{public}s]: Could not fetch records for PDF generation, error: %{public}s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v27, -1, -1);
      uint64_t v33 = v26;
      a7 = v39;
      MEMORY[0x1C875A0B0](v33, -1, -1);

      sub_1C2285A50((id)a1, 1);
    }
    else
    {
      sub_1C2285A50((id)a1, 1);
      sub_1C2285A50((id)a1, 1);
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    goto LABEL_27;
  }
  if ((a3 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    if (!(a1 >> 62)) {
      goto LABEL_21;
    }
    goto LABEL_25;
  }
  v41[0] = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_5;
    }
LABEL_24:
    sub_1C2285A50((id)a1, 0);
    a1 = MEMORY[0x1E4FBC860];
    if (!(MEMORY[0x1E4FBC860] >> 62)) {
      goto LABEL_21;
    }
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C2550620();
  if (!v16) {
    goto LABEL_24;
  }
LABEL_5:
  id v39 = a7;
  if (v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v18 = (id)MEMORY[0x1C87588E0](i, a1);
      }
      else {
        id v18 = *(id *)(a1 + 8 * i + 32);
      }
      long long v19 = v18;
      if (objc_msgSend(v18, sel_isDateLess, v39))
      {
      }
      else
      {
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
      }
    }
    sub_1C2285A50((id)a1, 0);
    a1 = v41[0];
    a7 = v39;
    if (!((unint64_t)v41[0] >> 62))
    {
LABEL_21:
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_22:
        sub_1C254CEB0();
        uint64_t v34 = a7;
        uint64_t v35 = *v40;
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v42 = *(void *)(a5 + 16);
        *(void *)(a5 + 16) = 0x8000000000000000;
        uint64_t v37 = v35;
        a7 = v34;
        sub_1C2366A2C(a1, v37, isUniquelyReferenced_nonNull_native);
        *(void *)(a5 + 16) = v42;
        swift_bridgeObjectRelease();
        swift_endAccess();
        sub_1C254CEC0();
LABEL_27:
        dispatch_group_leave(a7);
        return;
      }
LABEL_26:
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v38) {
      goto LABEL_22;
    }
    goto LABEL_26;
  }
  __break(1u);
}

uint64_t sub_1C249402C(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  a1(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2494094(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v2 = *(void *)(a1 + 16);
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_1C2550620();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = MEMORY[0x1C87588E0](i, v2);
      }
      else
      {
        uint64_t v8 = *(void *)(v2 + 8 * i + 32);
        swift_retain();
      }
      swift_beginAccess();
      if (*(unsigned char *)(v8 + 16) != 1)
      {
        *(unsigned char *)(v8 + 16) = 1;
        swift_beginAccess();
        char v6 = *(void (**)(uint64_t))(v8 + 24);
        uint64_t v7 = swift_retain();
        v6(v7);
        swift_release();
      }
      swift_release();
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C24941F4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a4;
  *(void *)(v11 + 24) = a5;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C249490C;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1C2494A94;
  *(void *)(v14 + 24) = v13;
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6FA60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
  *(void *)(inited + 32) = sub_1C254F470();
  *(void *)(inited + 40) = v16;
  *(void *)(inited + 48) = sub_1C254F470();
  *(void *)(inited + 56) = v17;
  swift_retain();
  swift_retain();
  unint64_t v18 = swift_bridgeObjectRetain();
  unint64_t v19 = sub_1C2494D14(v18, (void *)inited);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  id v20 = a2;
  sub_1C2494AA8(v19, v20);
  swift_bridgeObjectRelease();

  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C255CEB0;
  sub_1C254F470();
  id v22 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v23 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v22, sel_initWithKey_ascending_, v23, 0);

  *(void *)(v21 + 32) = v24;
  sub_1C254F730();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1C22290C4;
  *(void *)(v25 + 24) = v14;
  id v26 = objc_allocWithZone(MEMORY[0x1E4F2B430]);
  sub_1C21AB51C(0, &qword_1EBB6EF58);
  swift_retain();
  uint64_t v27 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  uint64_t v28 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1C2494F44;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2274608;
  aBlock[3] = &block_descriptor_64;
  unint64_t v29 = _Block_copy(aBlock);
  id v30 = objc_msgSend(v26, sel_initWithQueryDescriptors_sortDescriptors_followingAnchor_upToAndIncludingAnchor_distinctByKeyPaths_limit_resultsHandler_, v27, v28, 0, 0, 0, 0, v29);

  _Block_release(v29);
  swift_release();
  objc_msgSend(*(id *)(v6 + 16), sel_executeQuery_, v30);
  uint64_t v31 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v32 = (void *)swift_allocObject();
  v32[2] = v31;
  v32[3] = v30;
  v32[4] = sub_1C22290C4;
  v32[5] = v14;
  type metadata accessor for CancellationToken();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  *(void *)(result + 24) = sub_1C2494FD4;
  *(void *)(result + 32) = v32;
  return result;
}

void sub_1C2494640(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void (*a5)(void, void))
{
  if (!a2 || (unint64_t v7 = sub_1C21EF864(a2)) == 0)
  {
    uint64_t v13 = 0;
    goto LABEL_18;
  }
  unint64_t v8 = v7;
  unint64_t v19 = (void *)MEMORY[0x1E4FBC860];
  if (v7 >> 62)
  {
    uint64_t v9 = sub_1C2550620();
    if (v9) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v9) {
    goto LABEL_17;
  }
LABEL_5:
  if (v9 < 1)
  {
    __break(1u);
    return;
  }
  unint64_t v18 = a5;
  for (uint64_t i = 0; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0) {
      id v11 = (id)MEMORY[0x1C87588E0](i, v8);
    }
    else {
      id v11 = *(id *)(v8 + 8 * i + 32);
    }
    uint64_t v12 = v11;
    if (objc_msgSend(v11, sel_isDisplayable, v18))
    {
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  a5 = v18;
  uint64_t v13 = v19;
LABEL_18:
  sub_1C2405F2C();
  uint64_t v14 = (void *)swift_allocError();
  uint64_t v15 = v14;
  if (a4)
  {
    id v16 = a4;

    swift_bridgeObjectRelease();
    uint64_t v17 = 1;
  }
  else if (v13)
  {

    uint64_t v17 = 0;
    a4 = v13;
  }
  else
  {
    uint64_t v17 = 1;
    a4 = v14;
  }
  a5(a4, v17);
  sub_1C2285A50(a4, v17);
}

uint64_t sub_1C2494828(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void))
{
  uint64_t v5 = a1 + 16;
  swift_beginAccess();
  uint64_t v6 = (void *)MEMORY[0x1C875A200](v5);
  if (v6)
  {
    unint64_t v7 = v6;
    objc_msgSend(v6, sel_stopQuery_, a2);
  }
  return a3(MEMORY[0x1E4FBC860], 0);
}

uint64_t type metadata accessor for PDFDataProvider()
{
  return self;
}

uint64_t sub_1C24948D4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C249490C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1C2494940()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2494980(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1;
  char v9 = a2 & 1;
  sub_1C254CEB0();
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t *))(a4 + 16);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a4 + 16);
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = 0;
  sub_1C223E0BC((uint64_t)v5);
  sub_1C221794C(v6);
  uint64_t result = sub_1C254CEC0();
  if (v5)
  {
    swift_retain();
    v5(&v8);
    sub_1C221794C((uint64_t)v5);
    return sub_1C221794C((uint64_t)v5);
  }
  return result;
}

uint64_t sub_1C2494A54()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2494A94(uint64_t a1)
{
  return sub_1C2494980(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_1C2494AA8(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    id result = (id)MEMORY[0x1E4FBC860];
    if (!v4) {
      return result;
    }
    uint64_t v16 = MEMORY[0x1E4FBC860];
    id result = (id)sub_1C2550490();
    if (v4 < 0)
    {
      __break(1u);
LABEL_17:
      __break(1u);
      return result;
    }
    uint64_t v6 = 0;
    unint64_t v15 = v3 & 0xC000000000000001;
    unint64_t v7 = v3;
    while (v4 != v6)
    {
      if (v15) {
        id v8 = (id)MEMORY[0x1C87588E0](v6, v3);
      }
      else {
        id v8 = *(id *)(v3 + 8 * v6 + 32);
      }
      char v9 = v8;
      id v10 = objc_msgSend(v8, sel_sampleType);
      sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1C255CD70;
      id result = objc_msgSend(v9, sel_predicate);
      if (!result) {
        goto LABEL_17;
      }
      ++v6;
      *(void *)(v11 + 32) = result;
      *(void *)(v11 + 40) = a2;
      sub_1C254F730();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
      id v12 = a2;
      uint64_t v13 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v13);

      objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B3D0]), sel_initWithSampleType_predicate_, v10, v14);
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      unint64_t v3 = v7;
      if (v4 == v6) {
        return (id)v16;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C2494D14(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_31;
  }
  for (uint64_t i = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = sub_1C2550620())
  {
    unint64_t v19 = v2;
    unint64_t v4 = 0;
    uint64_t v21 = v2 & 0xFFFFFFFFFFFFFF8;
    unint64_t v22 = v2 & 0xC000000000000001;
    id v20 = (void *)(v2 + 32);
    while (1)
    {
      if (v22)
      {
        id v5 = (id)MEMORY[0x1C87588E0](v4, v19);
      }
      else
      {
        if (v4 >= *(void *)(v21 + 16))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        id v5 = (id)v20[v4];
      }
      uint64_t v6 = v5;
      if (__OFADD__(v4++, 1)) {
        goto LABEL_29;
      }
      id v8 = objc_msgSend(v5, sel_sampleType);
      id v9 = objc_msgSend(v8, sel_identifier);

      uint64_t v10 = sub_1C254F470();
      unint64_t v2 = (unint64_t)v11;

      uint64_t v12 = a2[2];
      if (!v12) {
        goto LABEL_25;
      }
      BOOL v13 = a2[4] == v10 && a2[5] == v2;
      if (!v13 && (sub_1C2550870() & 1) == 0) {
        break;
      }
LABEL_4:

      swift_bridgeObjectRelease();
LABEL_5:
      if (v4 == i) {
        return v24;
      }
    }
    if (v12 == 1)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      unint64_t v2 = (unint64_t)&v24;
      sub_1C2550470();
      goto LABEL_5;
    }
    id v14 = a2 + 7;
    uint64_t v15 = 1;
    while (1)
    {
      uint64_t v16 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        break;
      }
      BOOL v17 = *(v14 - 1) == v10 && *v14 == v2;
      if (v17 || (sub_1C2550870() & 1) != 0) {
        goto LABEL_4;
      }
      v14 += 2;
      ++v15;
      if (v16 == v12) {
        goto LABEL_25;
      }
    }
LABEL_30:
    __break(1u);
LABEL_31:
    ;
  }
  return MEMORY[0x1E4FBC860];
}

void sub_1C2494F44(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  sub_1C2494640(a1, a2, a3, a4, *(void (**)(void, void))(v4 + 16));
}

uint64_t block_destroy_helper_60()
{
  return swift_release();
}

uint64_t sub_1C2494F54()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2494F8C()
{
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C2494FD4()
{
  return sub_1C2494828(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void, void))(v0 + 32));
}

uint64_t sub_1C2494FE0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2495018()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2495058()
{
  return sub_1C249402C(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_1C2495064()
{
  return sub_1C2494094(v0);
}

uint64_t sub_1C249506C()
{
  uint64_t v1 = *(void (**)(void))(v0 + 16);
  sub_1C22068CC(MEMORY[0x1E4FBC860]);
  v1();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C24950C0()
{
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 128, 7);
}

void sub_1C2495138(unint64_t a1, char a2)
{
  sub_1C2493B84(a1, a2 & 1, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), (unsigned __int8 *)(v2 + 40), *(NSObject **)(v2 + 112));
}

id HKChartableCodedQuantity.representsSystolicBloodPressure.getter()
{
  return sub_1C2495188((SEL *)&selRef_loinc_systolicBloodPressureCoding);
}

id HKChartableCodedQuantity.representsDiastolicBloodPressure.getter()
{
  return sub_1C2495188((SEL *)&selRef_loinc_diastolicBloodPressureCoding);
}

id sub_1C2495188(SEL *a1)
{
  id v3 = objc_msgSend(v1, sel_codings);
  sub_1C21AB51C(0, &qword_1EA2DE858);
  unint64_t v4 = sub_1C254F710();

  if (v4 >> 62) {
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1C2550620())
  {
    uint64_t v6 = self;
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87588E0](v7 - 4, v4) : *(id *)(v4 + 8 * v7);
      id v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v11 = [v6 *a1];
      id v12 = objc_msgSend(v9, sel_isEquivalent_, v11);

      if (v12) {
        goto LABEL_15;
      }

      ++v7;
      if (v10 == v5) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  id v12 = 0;
LABEL_14:
  id v9 = 0;
LABEL_15:
  swift_bridgeObjectRelease_n();

  return v12;
}

id sub_1C2495300()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = *(id *)(v0 + 16);
  }
  else
  {
    id v3 = (void *)sub_1C254F430();
    id v4 = objc_msgSend(self, sel_unitFromString_, v3);

    uint64_t v5 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v4;
    id v2 = v4;

    uint64_t v1 = 0;
  }
  id v6 = v1;
  return v2;
}

void sub_1C2495394()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if (v1) {
    goto LABEL_5;
  }
  id v2 = objc_msgSend(self, sel_sharedInstance);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(self, sel_dataTypeWithCode_, 80);
    id v5 = objc_msgSend(v3, sel_displayTypeForObjectTypeUnifyingBloodPressureTypes_, v4);

    if (v5)
    {
      id v6 = *(void **)(v0 + 24);
      *(void *)(v0 + 24) = v5;
      v5;

      uint64_t v1 = 0;
LABEL_5:
      id v7 = v1;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1C249546C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v42 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    id v41 = 0;
    if (a4) {
      goto LABEL_10;
    }
LABEL_20:
    id v30 = 0;
    goto LABEL_21;
  }
  uint64_t v40 = a1;
  id v11 = a3;
  id v12 = objc_msgSend(v11, sel_minimumQuantity);
  double v13 = 0.0;
  double v14 = 0.0;
  if (v12)
  {
    id v15 = sub_1C2495300();
    objc_msgSend(v12, sel_doubleValueForUnit_, v15);
    double v14 = v16;
  }
  id v17 = objc_msgSend(v11, sel_maximumQuantity);
  if (v17)
  {
    id v18 = sub_1C2495300();
    objc_msgSend(v17, sel_doubleValueForUnit_, v18);
    double v13 = v19;
  }
  if (v12)
  {
    id v20 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v14);
    if (!v17) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  id v20 = 0;
  if (v17) {
LABEL_8:
  }
    id v17 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v13);
LABEL_9:
  id v41 = objc_msgSend(self, (SEL)0x1F838336ALL, v20, v17);

  a1 = v40;
  if (!a4) {
    goto LABEL_20;
  }
LABEL_10:
  id v21 = a4;
  id v22 = objc_msgSend(v21, sel_minimumQuantity);
  double v23 = 0.0;
  double v24 = 0.0;
  if (v22)
  {
    id v25 = sub_1C2495300();
    objc_msgSend(v22, sel_doubleValueForUnit_, v25);
    double v24 = v26;
  }
  id v27 = objc_msgSend(v21, sel_maximumQuantity);
  if (v27)
  {
    id v28 = sub_1C2495300();
    objc_msgSend(v27, sel_doubleValueForUnit_, v28);
    double v23 = v29;
  }
  if (v22) {
    id v22 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v24);
  }
  if (v27) {
    id v27 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v23);
  }
  id v30 = objc_msgSend(self, (SEL)0x1F838336ALL, v22, v27);

LABEL_21:
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v31(v10, a1, v42);
  if (a2 == 1)
  {
    char v32 = 0;
    goto LABEL_31;
  }
  if (a2 == 4)
  {
    char v32 = 0;
LABEL_30:
    a2 = 9;
    goto LABEL_31;
  }
  if (a2 != 2)
  {
    char v32 = 1;
    goto LABEL_30;
  }
  char v32 = 0;
  a2 = 6;
LABEL_31:
  uint64_t v33 = (objc_class *)type metadata accessor for BloodPressureChartData();
  uint64_t v34 = objc_allocWithZone(v33);
  v34[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_partOfOutOfRangeSeries] = 0;
  uint64_t v35 = v42;
  v31(&v34[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_date], (uint64_t)v10, v42);
  *(void *)&v34[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_dateFormat] = a2;
  v34[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_hasTime] = v32;
  v43.receiver = v34;
  v43.super_class = v33;
  id v36 = objc_msgSendSuper2(&v43, sel_init);
  uint64_t v37 = v41;
  objc_msgSend(v36, sel_setSystolicRange_, v41);
  objc_msgSend(v36, sel_setDiastolicRange_, v30);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v35);
  return v36;
}

id sub_1C2495970(void *a1)
{
  id v1 = objc_msgSend(a1, sel_keyColor);
  if (!v1) {
    id v1 = objc_msgSend(self, sel_blackColor);
  }
  type metadata accessor for BloodPressureChartSeries();
  id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultSeriesWithDiastolicColor_, v1);

  return v2;
}

id sub_1C2495AC4(void *a1)
{
  id v1 = a1;
  sub_1C2495394();
  id v3 = v2;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B28]), sel_init);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B30]), sel_initWithGraphSeries_baseDisplayType_valueFormatter_dataTypeCode_, v1, v3, v4, 80);

  return v5;
}

uint64_t BloodPressureDataTransformer.deinit()
{
  return v0;
}

uint64_t BloodPressureDataTransformer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id HKMedicalCoding.representsSystolicBloodPressure.getter()
{
  return sub_1C2495C90((SEL *)&selRef_loinc_systolicBloodPressureCoding);
}

id HKMedicalCoding.representsDiastolicBloodPressure.getter()
{
  return sub_1C2495C90((SEL *)&selRef_loinc_diastolicBloodPressureCoding);
}

id sub_1C2495C90(SEL *a1)
{
  id v2 = [self *a1];
  id v3 = objc_msgSend(v1, sel_isEquivalent_, v2);

  return v3;
}

BOOL sub_1C2495CF0(void *a1)
{
  id v1 = a1;
  BOOL v2 = HKCodedValueCollection.representsCanonicalBloodPressure.getter();

  return v2;
}

BOOL HKCodedValueCollection.representsCanonicalBloodPressure.getter()
{
  uint64_t v1 = (uint64_t)v0;
  BOOL v2 = &selRef_addSubview_;
  id v3 = objc_msgSend(v0, sel_codedValues);
  id v4 = (id)sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DFBC8);
  unint64_t v5 = sub_1C254F710();

  if (v5 >> 62) {
    goto LABEL_29;
  }
  unint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  swift_bridgeObjectRelease();
  if (v6 == 2)
  {
    id v7 = [(id)v1 v2[113]];
    unint64_t v8 = sub_1C254F710();

    if (v8 >> 62)
    {
LABEL_31:
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1C2550620();
      uint64_t v45 = v6;
      if (v9) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v45 = 2;
      if (v9)
      {
LABEL_6:
        id v36 = v4;
        uint64_t v37 = v1;
        uint64_t v10 = 0;
        unint64_t v46 = v8 & 0xC000000000000001;
        unint64_t v39 = v8 + 32;
        uint64_t v41 = v9;
        unint64_t v43 = v8;
        while (1)
        {
          if (v46)
          {
            id v11 = (id)MEMORY[0x1C87588E0](v10, v8);
            BOOL v12 = __OFADD__(v10++, 1);
            if (v12) {
              goto LABEL_30;
            }
          }
          else
          {
            id v11 = *(id *)(v39 + 8 * v10);
            BOOL v12 = __OFADD__(v10++, 1);
            if (v12)
            {
LABEL_30:
              __break(1u);
              goto LABEL_31;
            }
          }
          uint64_t v48 = v11;
          id v13 = objc_msgSend(v11, sel_codings, v36);
          sub_1C21AB51C(0, &qword_1EA2DE858);
          unint64_t v14 = sub_1C254F710();

          if (v14 >> 62)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v15 = sub_1C2550620();
            swift_bridgeObjectRelease();
            if (v15)
            {
LABEL_15:
              double v16 = self;
              BOOL v2 = (char **)(v14 & 0xC000000000000001);
              uint64_t v1 = 4;
              while (1)
              {
                id v4 = (id)(v1 - 4);
                id v17 = v2 ? (id)MEMORY[0x1C87588E0](v1 - 4, v14) : *(id *)(v14 + 8 * v1);
                id v18 = v17;
                unint64_t v6 = v1 - 3;
                if (__OFADD__(v4, 1)) {
                  break;
                }
                id v4 = objc_msgSend(v16, sel_loinc_systolicBloodPressureCoding);
                unsigned int v19 = objc_msgSend(v18, sel_isEquivalent_, v4);

                if (v19)
                {
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease_n();
                  goto LABEL_26;
                }
                ++v1;
                if (v6 == v15) {
                  goto LABEL_7;
                }
              }
              __break(1u);
LABEL_29:
              swift_bridgeObjectRetain();
              unint64_t v6 = sub_1C2550620();
              swift_bridgeObjectRelease();
              goto LABEL_3;
            }
          }
          else
          {
            uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v15) {
              goto LABEL_15;
            }
          }
LABEL_7:
          swift_bridgeObjectRelease_n();

          unint64_t v8 = v43;
          if (v10 == v41)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v48 = 0;
LABEL_26:
            unint64_t v6 = v45;
            uint64_t v1 = v37;
            BOOL v2 = &selRef_addSubview_;
            goto LABEL_33;
          }
        }
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v48 = 0;
LABEL_33:
    id v20 = objc_msgSend((id)v1, v2[113], v36);
    unint64_t v21 = sub_1C254F710();

    if (v21 >> 62) {
      goto LABEL_60;
    }
    id v22 = *(void **)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v22; id v22 = (void *)sub_1C2550620())
    {
      double v23 = 0;
      unint64_t v42 = v21;
      unint64_t v44 = v21 & 0xC000000000000001;
      unint64_t v38 = v21 + 32;
      uint64_t v40 = v22;
      while (1)
      {
        id v24 = v44 ? (id)MEMORY[0x1C87588E0](v23, v21) : *(id *)(v38 + 8 * (void)v23);
        id v25 = v24;
        BOOL v12 = __OFADD__(v23, 1);
        double v23 = (char *)v23 + 1;
        if (v12) {
          break;
        }
        id v26 = objc_msgSend(v24, sel_codings);
        sub_1C21AB51C(0, &qword_1EA2DE858);
        unint64_t v21 = sub_1C254F710();

        char v47 = v25;
        if (v21 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v27 = sub_1C2550620();
          swift_bridgeObjectRelease();
          if (v27)
          {
LABEL_43:
            id v28 = self;
            unint64_t v6 = v21 & 0xC000000000000001;
            uint64_t v29 = 4;
            while (1)
            {
              id v30 = v6 ? (id)MEMORY[0x1C87588E0](v29 - 4, v21) : *(id *)(v21 + 8 * v29);
              uint64_t v31 = v30;
              uint64_t v32 = v29 - 3;
              if (__OFADD__(v29 - 4, 1)) {
                break;
              }
              id v33 = objc_msgSend(v28, sel_loinc_diastolicBloodPressureCoding);
              unsigned int v34 = objc_msgSend(v31, sel_isEquivalent_, v33);

              if (v34)
              {
                swift_bridgeObjectRelease_n();
                unint64_t v6 = v45;
                id v22 = v47;
                goto LABEL_54;
              }
              ++v29;
              if (v32 == v27) {
                goto LABEL_36;
              }
            }
            __break(1u);
            break;
          }
        }
        else
        {
          uint64_t v27 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v27) {
            goto LABEL_43;
          }
        }
LABEL_36:
        swift_bridgeObjectRelease_n();

        unint64_t v21 = v42;
        unint64_t v6 = v45;
        if (v23 == v40)
        {
          id v22 = 0;
          goto LABEL_54;
        }
      }
      __break(1u);
LABEL_60:
      swift_bridgeObjectRetain();
    }
LABEL_54:
    swift_bridgeObjectRelease_n();

    if (v48) {
  }
    }
  return v6 == 2;
}

id sub_1C24962B4(void *a1)
{
  id v1 = a1;
  HKCodedValueCollection.canonicalBloodPressureDisplay.getter();
  uint64_t v3 = v2;

  if (v3)
  {
    id v4 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }
  return v4;
}

uint64_t HKCodedValueCollection.canonicalBloodPressureDisplay.getter()
{
  uint64_t v1 = (uint64_t)&selRef_addSubview_;
  id v2 = objc_msgSend(v0, sel_codedValues);
  id v3 = (id)sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DFBC8);
  unint64_t v4 = sub_1C254F710();

  if (v4 >> 62) {
    goto LABEL_29;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  swift_bridgeObjectRelease();
  if (v5 != 2) {
    return 0;
  }
  id v6 = [v0 *(SEL *)(v1 + 904)];
  unint64_t v7 = sub_1C254F710();

  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_6;
    }
LABEL_32:
    swift_bridgeObjectRelease_n();
    id v60 = 0;
    goto LABEL_33;
  }
LABEL_31:
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C2550620();
  if (!v8) {
    goto LABEL_32;
  }
LABEL_6:
  id v49 = v3;
  uint64_t v50 = v0;
  uint64_t v9 = 0;
  unint64_t v56 = v7;
  unint64_t v58 = v7 & 0xC000000000000001;
  unint64_t v52 = v7 + 32;
  uint64_t v54 = v8;
  do
  {
    if (v58)
    {
      id v10 = (id)MEMORY[0x1C87588E0](v9, v7);
      BOOL v11 = __OFADD__(v9++, 1);
      if (v11) {
        goto LABEL_30;
      }
    }
    else
    {
      id v10 = *(id *)(v52 + 8 * v9);
      BOOL v11 = __OFADD__(v9++, 1);
      if (v11)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
    }
    id v60 = v10;
    id v12 = objc_msgSend(v10, sel_codings, v49);
    sub_1C21AB51C(0, &qword_1EA2DE858);
    unint64_t v13 = sub_1C254F710();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v14 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (v14)
      {
LABEL_15:
        uint64_t v15 = self;
        uint64_t v1 = 4;
        while (1)
        {
          id v16 = (v13 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1C87588E0](v1 - 4, v13)
              : *(id *)(v13 + 8 * v1);
          id v17 = v16;
          uint64_t v0 = (void *)(v1 - 3);
          if (__OFADD__(v1 - 4, 1)) {
            break;
          }
          id v18 = objc_msgSend(v15, sel_loinc_systolicBloodPressureCoding);
          id v3 = objc_msgSend(v17, sel_isEquivalent_, v18);

          if (v3)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            goto LABEL_26;
          }
          ++v1;
          if (v0 == (void *)v14) {
            goto LABEL_7;
          }
        }
        __break(1u);
LABEL_29:
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_1C2550620();
        swift_bridgeObjectRelease();
        goto LABEL_3;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14) {
        goto LABEL_15;
      }
    }
LABEL_7:
    swift_bridgeObjectRelease_n();

    unint64_t v7 = v56;
  }
  while (v9 != v54);
  swift_bridgeObjectRelease_n();
  id v60 = 0;
LABEL_26:
  uint64_t v0 = v50;
  uint64_t v1 = 0x1E644E000;
LABEL_33:
  id v19 = objc_msgSend(v0, *(SEL *)(v1 + 904), v49);
  unint64_t v20 = sub_1C254F710();

  if (v20 >> 62)
  {
LABEL_60:
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1C2550620();
    if (v53) {
      goto LABEL_35;
    }
LABEL_61:
    swift_bridgeObjectRelease_n();
    unsigned int v34 = 0;
    uint64_t v35 = v60;
    if (v60) {
      goto LABEL_55;
    }
LABEL_62:

    return 0;
  }
  uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v53 = v21;
  if (!v21) {
    goto LABEL_61;
  }
LABEL_35:
  uint64_t v22 = 0;
  unint64_t v55 = v20;
  unint64_t v57 = v20 & 0xC000000000000001;
  unint64_t v51 = v20 + 32;
  while (1)
  {
    if (v57)
    {
      id v23 = (id)MEMORY[0x1C87588E0](v22, v20);
      BOOL v11 = __OFADD__(v22++, 1);
      if (v11) {
        goto LABEL_59;
      }
    }
    else
    {
      id v23 = *(id *)(v51 + 8 * v22);
      BOOL v11 = __OFADD__(v22++, 1);
      if (v11)
      {
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
    }
    uint64_t v59 = v23;
    id v24 = objc_msgSend(v23, sel_codings);
    sub_1C21AB51C(0, &qword_1EA2DE858);
    unint64_t v25 = sub_1C254F710();

    if (v25 >> 62) {
      break;
    }
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v26) {
      goto LABEL_44;
    }
LABEL_36:
    swift_bridgeObjectRelease_n();

    unint64_t v20 = v55;
    if (v22 == v53) {
      goto LABEL_61;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v26 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v26) {
    goto LABEL_36;
  }
LABEL_44:
  uint64_t v27 = self;
  unint64_t v20 = v25 & 0xC000000000000001;
  uint64_t v28 = 4;
  while (1)
  {
    if (v20) {
      id v29 = (id)MEMORY[0x1C87588E0](v28 - 4, v25);
    }
    else {
      id v29 = *(id *)(v25 + 8 * v28);
    }
    id v30 = v29;
    uint64_t v31 = v28 - 3;
    if (__OFADD__(v28 - 4, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    id v32 = objc_msgSend(v27, sel_loinc_diastolicBloodPressureCoding);
    unsigned int v33 = objc_msgSend(v30, sel_isEquivalent_, v32);

    if (v33) {
      break;
    }
    ++v28;
    if (v31 == v26) {
      goto LABEL_36;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  unsigned int v34 = v59;
  uint64_t v35 = v60;
  if (!v60) {
    goto LABEL_62;
  }
LABEL_55:
  id v36 = objc_msgSend(v35, sel_value);
  id v37 = objc_msgSend(v36, sel_displayString);

  uint64_t v38 = sub_1C254F470();
  uint64_t v40 = v39;

  if (!v34)
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  id v41 = objc_msgSend(v34, sel_value);
  id v42 = objc_msgSend(v41, sel_displayString);

  uint64_t v43 = sub_1C254F470();
  uint64_t v45 = v44;

  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBBE00]);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1C255CDA0;
  *(void *)(v46 + 32) = v38;
  *(void *)(v46 + 40) = v40;
  *(void *)(v46 + 48) = v43;
  *(void *)(v46 + 56) = v45;
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
  sub_1C226BF44();
  uint64_t v47 = sub_1C254F390();
  swift_bridgeObjectRelease();

  return v47;
}

id sub_1C2496A08(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = sub_1C254CAD0();
  uint64_t v9 = *(void *)(v8 - 8);
  id v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  BOOL v11 = 0;
  if (v10(a2, 1, v8) != 1)
  {
    BOOL v11 = (void *)sub_1C254CA50();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  }
  if (v10(a3, 1, v8) == 1)
  {
    id v12 = 0;
  }
  else
  {
    id v12 = (void *)sub_1C254CA50();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a3, v8);
  }
  id v13 = objc_msgSend(v4, sel_initWithDataType_startDate_endDate_, a1, v11, v12);

  return v13;
}

id sub_1C2496B6C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v126 = a3;
  id v123 = a2;
  v158[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v148 = sub_1C254E560();
  unint64_t v6 = *(void *)(v148 - 8);
  MEMORY[0x1F4188790](v148);
  uint64_t v139 = (char *)v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v143 = (char *)v122 - v9;
  MEMORY[0x1F4188790](v10);
  v149 = (char *)v122 - v11;
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v137 = (char *)v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v136 = (char *)v122 - v15;
  uint64_t v141 = sub_1C254CAD0();
  uint64_t v132 = *(void *)(v141 - 8);
  MEMORY[0x1F4188790](v141);
  id v17 = (char *)v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v128 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F679A0]), sel_init);
  id v18 = objc_msgSend(a1, sel_date);
  v140 = v17;
  sub_1C254CA80();

  id v19 = objc_msgSend(a1, sel_quantities);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E21B0);
  unint64_t v20 = sub_1C254F710();

  if (v20 >> 62)
  {
LABEL_66:
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_3;
    }
LABEL_67:
    swift_bridgeObjectRelease();
    id v110 = 0;
    id v118 = 0;
    id v117 = v128;
    goto LABEL_68;
  }
  uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v22) {
    goto LABEL_67;
  }
LABEL_3:
  id v142 = 0;
  id v146 = 0;
  uint64_t v133 = 0;
  unint64_t v152 = v20 & 0xC000000000000001;
  uint64_t v145 = v20 & 0xFFFFFFFFFFFFFF8;
  unint64_t v144 = v20 + 32;
  id v131 = (id)*MEMORY[0x1E4F2A620];
  uint64_t v135 = (void (**)(char *, char *, uint64_t))(v132 + 16);
  id v134 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v132 + 56);
  uint64_t v147 = (void (**)(char *, uint64_t))(v6 + 8);
  unint64_t v6 = 0;
  uint64_t v130 = &v157;
  id v127 = (id)*MEMORY[0x1E4F2A618];
  *(void *)&long long v21 = 138543362;
  long long v138 = v21;
  *(void *)&long long v21 = 138543618;
  long long v129 = v21;
  v122[1] = MEMORY[0x1E4FBC840] + 8;
  uint64_t v153 = v4;
  uint64_t v150 = v22;
  unint64_t v151 = v20;
  do
  {
    if (v152)
    {
      id v25 = (id)MEMORY[0x1C87588E0](v6, v20);
      BOOL v26 = __OFADD__(v6++, 1);
      if (v26) {
        goto LABEL_64;
      }
    }
    else
    {
      if (v6 >= *(void *)(v145 + 16)) {
        goto LABEL_65;
      }
      id v25 = *(id *)(v144 + 8 * v6);
      BOOL v26 = __OFADD__(v6++, 1);
      if (v26) {
        goto LABEL_64;
      }
    }
    unint64_t v154 = v6;
    id v155 = v25;
    id v27 = objc_msgSend(v25, sel_codings);
    unint64_t v6 = sub_1C21AB51C(0, &qword_1EA2DE858);
    unint64_t v20 = sub_1C254F710();

    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1C2550620();
      if (v28)
      {
LABEL_15:
        id v29 = self;
        uint64_t v30 = 4;
        while (1)
        {
          if ((v20 & 0xC000000000000001) != 0) {
            id v31 = (id)MEMORY[0x1C87588E0](v30 - 4, v20);
          }
          else {
            id v31 = *(id *)(v20 + 8 * v30);
          }
          id v32 = v31;
          uint64_t v4 = v30 - 3;
          if (__OFADD__(v30 - 4, 1))
          {
            __break(1u);
            goto LABEL_63;
          }
          id v33 = objc_msgSend(v29, sel_loinc_systolicBloodPressureCoding);
          unsigned int v34 = objc_msgSend(v32, sel_isEquivalent_, v33);

          if (v34) {
            break;
          }
          ++v30;
          if (v4 == v28) {
            goto LABEL_22;
          }
        }
        swift_bridgeObjectRelease_n();
        id v47 = v146;
        if (v146)
        {
          id v48 = v146;
        }
        else
        {
          sub_1C21AB51C(0, &qword_1EA2E41A8);
          uint64_t v50 = (void *)MEMORY[0x1C8757F70](v131);
          unint64_t v51 = *v135;
          uint64_t v52 = (uint64_t)v136;
          uint64_t v54 = v140;
          uint64_t v53 = v141;
          (*v135)(v136, v140, v141);
          unint64_t v55 = *v134;
          (*v134)(v52, 0, 1, v53);
          uint64_t v56 = (uint64_t)v137;
          v51(v137, v54, v53);
          v55(v56, 0, 1, v53);
          id v57 = objc_allocWithZone(MEMORY[0x1E4F2B5B0]);
          id v146 = sub_1C2496A08(v50, v52, v56);
          id v47 = v146;
          id v48 = 0;
        }
        uint64_t v4 = v153;
        id v58 = v48;
        id v59 = sub_1C2495300();
        v158[0] = 0;
        id v60 = v155;
        id v61 = objc_msgSend(v155, sel_chartableCodedQuantityInUnit_adoptUnitIfNullUnit_error_, v59, 1, v158);

        id v62 = v158[0];
        uint64_t v63 = v143;
        if (v61)
        {
LABEL_43:
          id v92 = v62;
          objc_msgSend(v47, sel_updateMinMaxWithChartableCodedQuantity_, v61);
        }
        else
        {
          id v64 = v158[0];
          uint64_t v65 = (void *)sub_1C254C820();

          swift_willThrow();
          uint64_t v133 = 0;
          sub_1C254E4F0();
          id v66 = v60;
          id v67 = v65;
          id v68 = v66;
          id v69 = v65;
          uint64_t v70 = sub_1C254E550();
          os_log_type_t v71 = sub_1C254FA20();
          int v72 = v71;
          if (os_log_type_enabled(v70, v71))
          {
            uint64_t v73 = swift_slowAlloc();
            int v125 = v72;
            uint64_t v74 = v73;
            uint64_t v75 = (void *)swift_slowAlloc();
            id v155 = (id)swift_slowAlloc();
            uint64_t v156 = (uint64_t)v68;
            v158[0] = v155;
            *(_DWORD *)uint64_t v74 = v129;
            uint64_t v76 = v68;
            os_log_t v124 = v70;
            uint64_t v70 = v76;
            sub_1C2550120();
            *uint64_t v75 = v68;

            *(_WORD *)(v74 + 12) = 2082;
            uint64_t v156 = (uint64_t)v65;
            id v77 = v65;
            sub_1C2206F9C();
            uint64_t v78 = sub_1C254F4F0();
            uint64_t v156 = sub_1C21AD354(v78, v79, (uint64_t *)v158);
            uint64_t v4 = v153;
            sub_1C2550120();
            swift_bridgeObjectRelease();

            os_log_t v80 = v124;
            _os_log_impl(&dword_1C21A1000, v124, (os_log_type_t)v125, "Cannot represent coded quantity %{public}@ [systole] in mmHg: %{public}s", (uint8_t *)v74, 0x16u);
            sub_1C23C5780();
            swift_arrayDestroy();
            MEMORY[0x1C875A0B0](v75, -1, -1);
            id v81 = v155;
LABEL_46:
            swift_arrayDestroy();
            MEMORY[0x1C875A0B0](v81, -1, -1);
            MEMORY[0x1C875A0B0](v74, -1, -1);
          }
          else
          {

LABEL_49:
          }

          (*v147)(v63, v148);
        }
        uint64_t v24 = v150;
        unint64_t v20 = v151;
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v28 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v28) {
        goto LABEL_15;
      }
    }
LABEL_22:
    swift_bridgeObjectRelease_n();
    id v35 = objc_msgSend(v155, sel_codings);
    unint64_t v6 = sub_1C254F710();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_1C2550620();
      uint64_t v4 = v153;
      if (v20)
      {
LABEL_24:
        id v36 = self;
        uint64_t v37 = 4;
        while (1)
        {
          id v38 = (v6 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x1C87588E0](v37 - 4, v6)
              : *(id *)(v6 + 8 * v37);
          uint64_t v39 = v38;
          uint64_t v40 = v37 - 3;
          if (__OFADD__(v37 - 4, 1)) {
            break;
          }
          id v41 = objc_msgSend(v36, sel_loinc_diastolicBloodPressureCoding);
          unsigned int v42 = objc_msgSend(v39, sel_isEquivalent_, v41);

          if (v42)
          {
            swift_bridgeObjectRelease_n();
            id v47 = v142;
            if (v142)
            {
              id v49 = v142;
            }
            else
            {
              sub_1C21AB51C(0, &qword_1EA2E41A8);
              uint64_t v82 = (void *)MEMORY[0x1C8757F70](v127);
              id v83 = *v135;
              uint64_t v84 = (uint64_t)v136;
              uint64_t v86 = v140;
              uint64_t v85 = v141;
              (*v135)(v136, v140, v141);
              uint64_t v87 = *v134;
              (*v134)(v84, 0, 1, v85);
              uint64_t v88 = (uint64_t)v137;
              v83(v137, v86, v85);
              v87(v88, 0, 1, v85);
              id v89 = objc_allocWithZone(MEMORY[0x1E4F2B5B0]);
              id v142 = sub_1C2496A08(v82, v84, v88);
              id v47 = v142;
              id v49 = 0;
            }
            id v90 = v49;
            id v91 = sub_1C2495300();
            v158[0] = 0;
            id v60 = v155;
            id v61 = objc_msgSend(v155, sel_chartableCodedQuantityInUnit_adoptUnitIfNullUnit_error_, v91, 1, v158);

            id v62 = v158[0];
            uint64_t v63 = v139;
            if (v61) {
              goto LABEL_43;
            }
            id v93 = v158[0];
            uint64_t v65 = (void *)sub_1C254C820();

            swift_willThrow();
            uint64_t v133 = 0;
            sub_1C254E4F0();
            id v94 = v60;
            id v95 = v65;
            id v68 = v94;
            id v96 = v65;
            uint64_t v70 = sub_1C254E550();
            os_log_type_t v97 = sub_1C254FA20();
            int v98 = v97;
            if (os_log_type_enabled(v70, v97))
            {
              uint64_t v99 = swift_slowAlloc();
              int v125 = v98;
              uint64_t v74 = v99;
              uint64_t v100 = (void *)swift_slowAlloc();
              id v155 = (id)swift_slowAlloc();
              uint64_t v156 = (uint64_t)v68;
              v158[0] = v155;
              *(_DWORD *)uint64_t v74 = v129;
              dispatch_group_t v101 = v68;
              os_log_t v124 = v70;
              uint64_t v70 = v101;
              sub_1C2550120();
              *uint64_t v100 = v68;

              *(_WORD *)(v74 + 12) = 2082;
              uint64_t v156 = (uint64_t)v65;
              id v102 = v65;
              sub_1C2206F9C();
              uint64_t v103 = sub_1C254F4F0();
              uint64_t v156 = sub_1C21AD354(v103, v104, (uint64_t *)v158);
              uint64_t v4 = v153;
              sub_1C2550120();
              swift_bridgeObjectRelease();

              os_log_t v80 = v124;
              _os_log_impl(&dword_1C21A1000, v124, (os_log_type_t)v125, "Cannot represent coded quantity %{public}@ [diastole] in mmHg: %{public}s", (uint8_t *)v74, 0x16u);
              sub_1C23C5780();
              swift_arrayDestroy();
              MEMORY[0x1C875A0B0](v100, -1, -1);
              id v81 = v155;
              goto LABEL_46;
            }

            goto LABEL_49;
          }
          ++v37;
          if (v40 == v20) {
            goto LABEL_31;
          }
        }
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
    }
    else
    {
      unint64_t v20 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v4 = v153;
      if (v20) {
        goto LABEL_24;
      }
    }
LABEL_31:
    swift_bridgeObjectRelease_n();
    sub_1C254E4F0();
    uint64_t v43 = v155;
    id v23 = sub_1C254E550();
    os_log_type_t v44 = sub_1C254FA20();
    if (os_log_type_enabled(v23, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = v138;
      *(void *)(v45 + 4) = v43;
      void *v46 = v43;
      _os_log_impl(&dword_1C21A1000, v23, v44, "Unexpected quantity on a blood pressure tuple that we will ignore: %{public}@", (uint8_t *)v45, 0xCu);
      sub_1C23C5780();
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v46, -1, -1);
      MEMORY[0x1C875A0B0](v45, -1, -1);
    }
    else
    {

      id v23 = v43;
    }
    uint64_t v24 = v150;

    (*v147)(v149, v148);
    unint64_t v20 = v151;
LABEL_6:
    unint64_t v6 = v154;
  }
  while (v154 != v24);
  swift_bridgeObjectRelease();
  if (v146)
  {
    id v105 = v146;
    id v106 = v123;
    sub_1C2495394();
    uint64_t v108 = v107;
    id v109 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B10]), sel_initWithStatistics_options_unit_displayType_sourceTimeZone_, v105, 12, v106, v107, 0);

    objc_msgSend(v128, sel_setSystolicChartPoint_, v109);
  }
  id v110 = v142;
  if (v142)
  {
    id v111 = v142;
    id v112 = v123;
    id v113 = v111;
    sub_1C2495394();
    uint64_t v115 = v114;
    id v116 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B10]), sel_initWithStatistics_options_unit_displayType_sourceTimeZone_, v113, 12, v112, v114, 0);

    id v117 = v128;
    objc_msgSend(v128, sel_setDiastolicChartPoint_, v116);
  }
  else
  {
    id v117 = v128;
  }
  id v118 = v146;
LABEL_68:
  uint64_t v119 = (uint64_t)v140;
  unint64_t v120 = (void *)sub_1C254CA50();
  objc_msgSend(v117, sel_setDate_, v120);

  objc_msgSend(v117, sel_setUserInfo_, sub_1C249546C(v119, v126, v118, v110));
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v119, v141);
  return v117;
}

uint64_t type metadata accessor for BloodPressureDataTransformer()
{
  return self;
}

uint64_t method lookup function for BloodPressureDataTransformer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BloodPressureDataTransformer);
}

uint64_t dispatch thunk of BloodPressureDataTransformer.chartPoint(for:in:with:dataSourceType:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of BloodPressureDataTransformer.graphSeries(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of BloodPressureDataTransformer.chartDisplayType(with:displayName:unitName:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t sub_1C2497CA0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254F230();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v8 = *(_OWORD *)(a1 + 48);
  long long v25 = *(_OWORD *)(a1 + 32);
  long long v26 = v8;
  uint64_t v27 = *(void *)(a1 + 64);
  long long v9 = *(_OWORD *)(a1 + 16);
  long long v23 = *(_OWORD *)a1;
  long long v24 = v9;
  sub_1C22023A4();
  *uint64_t v7 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  LOBYTE(a1) = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (a1)
  {
    swift_beginAccess();
    uint64_t v11 = *(void *)(v2 + 32);
    if (*(void *)(v11 + 16))
    {
      sub_1C2201A54((uint64_t)&v23);
      swift_bridgeObjectRetain();
      sub_1C24578FC(&v23);
      if (v13)
      {
        uint64_t v14 = *(void **)(*(void *)(v11 + 56) + 8 * v12);
        swift_retain();
        swift_bridgeObjectRelease();
        sub_1C2201ABC((uint64_t)&v23);
        return (uint64_t)v14;
      }
      swift_bridgeObjectRelease();
      sub_1C2201ABC((uint64_t)&v23);
    }
    sub_1C2498294();
    uint64_t v15 = swift_allocObject();
    long long v16 = v25;
    long long v17 = v26;
    long long v18 = v23;
    *(_OWORD *)(v15 + 48) = v24;
    *(_OWORD *)(v15 + 64) = v16;
    *(_OWORD *)(v15 + 80) = v17;
    *(void *)(v15 + 96) = v27;
    *(_OWORD *)(v15 + 16) = xmmword_1C255CD90;
    *(_OWORD *)(v15 + 32) = v18;
    id v19 = *(void **)(v2 + 16);
    type metadata accessor for CategoryCountProvider();
    swift_allocObject();
    sub_1C2201A54((uint64_t)&v23);
    uint64_t v14 = sub_1C24850B8(v15, v19);
    swift_beginAccess();
    sub_1C2201A54((uint64_t)&v23);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *(void *)(v2 + 32);
    *(void *)(v2 + 32) = 0x8000000000000000;
    sub_1C23668FC((uint64_t)v14, &v23, isUniquelyReferenced_nonNull_native);
    *(void *)(v2 + 32) = v22;
    swift_bridgeObjectRelease();
    sub_1C2201ABC((uint64_t)&v23);
    swift_endAccess();
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2497F34()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CountProviderCollection()
{
  return self;
}

uint64_t sub_1C2497FA0(void *a1)
{
  type metadata accessor for CountProviderCollection();
  uint64_t v2 = (void *)swift_allocObject();
  v2[4] = MEMORY[0x1E4FBC868];
  v2[2] = a1;
  id v3 = a1;
  uint64_t v4 = _s15HealthRecordsUI19DisplayItemProviderC19supportedCategoriesShyAA0D8CategoryVGvgZ_0();
  uint64_t v5 = sub_1C228FD90(v4);
  swift_bridgeObjectRelease();
  type metadata accessor for CategoryCountProvider();
  swift_allocObject();
  id v6 = v3;
  uint64_t v7 = sub_1C24850B8((uint64_t)v5, v6);
  v2[3] = v7;
  uint64_t v8 = v7[3];
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)MEMORY[0x1E4FBC868];
LABEL_18:
    swift_bridgeObjectRelease();
    swift_release();

    swift_beginAccess();
    v2[4] = v10;
    swift_bridgeObjectRelease();
    return (uint64_t)v2;
  }
  id v34 = v6;
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v10 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v11 = 32;
  while (1)
  {
    long long v35 = *(_OWORD *)(v8 + v11);
    long long v13 = *(_OWORD *)(v8 + v11 + 16);
    long long v14 = *(_OWORD *)(v8 + v11 + 32);
    long long v15 = *(_OWORD *)(v8 + v11 + 48);
    uint64_t v39 = *(void *)(v8 + v11 + 64);
    long long v37 = v14;
    long long v38 = v15;
    long long v36 = v13;
    sub_1C2201A54((uint64_t)&v35);
    swift_retain();
    sub_1C2201A54((uint64_t)&v35);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C24578FC(&v35);
    unint64_t v19 = v18;
    uint64_t v20 = v10[2];
    BOOL v21 = (v17 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      break;
    }
    char v23 = v17;
    if (v10[3] >= v22)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v17) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1C24B06C4();
        if (v23) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1C227EF5C(v22, isUniquelyReferenced_nonNull_native);
      sub_1C24578FC(&v35);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_21;
      }
      unint64_t v19 = v24;
      if (v23)
      {
LABEL_3:
        uint64_t v12 = v10[7];
        swift_release();
        *(void *)(v12 + 8 * v19) = v7;
        goto LABEL_4;
      }
    }
    v10[(v19 >> 6) + 8] |= 1 << v19;
    uint64_t v26 = v10[6] + 72 * v19;
    *(_OWORD *)uint64_t v26 = v35;
    long long v27 = v36;
    long long v28 = v37;
    long long v29 = v38;
    *(void *)(v26 + 64) = v39;
    *(_OWORD *)(v26 + 32) = v28;
    *(_OWORD *)(v26 + 48) = v29;
    *(_OWORD *)(v26 + 16) = v27;
    *(void *)(v10[7] + 8 * v19) = v7;
    uint64_t v30 = v10[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_20;
    }
    void v10[2] = v32;
    sub_1C2201A54((uint64_t)&v35);
LABEL_4:
    swift_bridgeObjectRelease();
    sub_1C2201ABC((uint64_t)&v35);
    sub_1C2201ABC((uint64_t)&v35);
    v11 += 72;
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      id v6 = v34;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1C2550910();
  __break(1u);
  return result;
}

void sub_1C2498294()
{
  if (!qword_1EBB70050)
  {
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB70050);
    }
  }
}

id HKClinicalBrand.init(_:)()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_1C254F430();
  uint64_t v2 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v0, sel_initWithExternalID_batchID_, v1, v2);

  return v3;
}

void BrandIdentifier.init(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_externalID);
  uint64_t v5 = sub_1C254F470();
  uint64_t v7 = v6;

  id v8 = objc_msgSend(a1, sel_batchID);
  uint64_t v9 = sub_1C254F470();
  uint64_t v11 = v10;

  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v11;
}

uint64_t BrandIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C24984AC()
{
  if (*v0) {
    return 0x64496863746162;
  }
  else {
    return 0x6C616E7265747865;
  }
}

uint64_t sub_1C24984EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2499378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2498514(uint64_t a1)
{
  unint64_t v2 = sub_1C2498FC4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2498550(uint64_t a1)
{
  unint64_t v2 = sub_1C2498FC4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t BrandIdentifier.encode(to:)(void *a1)
{
  sub_1C2499018(0, &qword_1EA2E41B0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  v11[1] = *(void *)(v1 + 24);
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C2498FC4();
  sub_1C2550A70();
  char v13 = 0;
  uint64_t v9 = v11[3];
  sub_1C25507A0();
  if (!v9)
  {
    char v12 = 1;
    sub_1C25507A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t BrandIdentifier.hashValue.getter()
{
  return sub_1C2550A10();
}

uint64_t BrandIdentifier.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C2499018(0, &qword_1EA2E41C0, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C2498FC4();
  sub_1C2550A50();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v21 = 0;
  uint64_t v10 = sub_1C2550710();
  uint64_t v12 = v11;
  char v20 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C2550710();
  uint64_t v15 = v14;
  long long v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v19 = v13;
  v16(v9, v6);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v19;
  a2[3] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2498998@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return BrandIdentifier.init(from:)(a1, a2);
}

uint64_t sub_1C24989B0(void *a1)
{
  return BrandIdentifier.encode(to:)(a1);
}

uint64_t sub_1C24989C8()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2498A30()
{
  sub_1C254F570();
  return sub_1C254F570();
}

uint64_t sub_1C2498A80()
{
  return sub_1C2550A10();
}

id BrandIdentifier.clinicalBrand.getter()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F2ACE0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1C254F430();
  uint64_t v2 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v0, sel_initWithExternalID_batchID_, v1, v2);

  return v3;
}

unint64_t static BrandIdentifier.localDevelopmentSampleBrandID.getter()
{
  return 0xD000000000000015;
}

unint64_t static BrandIdentifier.localDevelopmentSampleBrandBatchID.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t BrandIdentifier.isLocalDevelopmentSampleBrand.getter()
{
  if (*v0 == 0xD000000000000015 && v0[1] == 0x80000001C25886C0) {
    return 1;
  }
  else {
    return sub_1C2550870();
  }
}

void static BrandIdentifier.localDevelopmentSampleBrandIdentifier()(void *a1@<X8>)
{
  *a1 = 0xD000000000000015;
  a1[1] = 0x80000001C25886C0;
  a1[2] = 0xD00000000000001ALL;
  a1[3] = 0x80000001C25886E0;
}

uint64_t sub_1C2498C50(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_externalID);
  uint64_t v3 = sub_1C254F470();
  uint64_t v5 = v4;

  if (v3 == 0xD000000000000015 && v5 == 0x80000001C25886C0)
  {

    swift_bridgeObjectRelease();
    char v6 = 1;
  }
  else
  {
    char v6 = sub_1C2550870();

    swift_bridgeObjectRelease();
  }
  return v6 & 1;
}

uint64_t HKClinicalBrand.isLocalDevelopmentSampleBrand.getter()
{
  id v1 = objc_msgSend(v0, sel_externalID);
  uint64_t v2 = sub_1C254F470();
  uint64_t v4 = v3;

  if (v2 == 0xD000000000000015 && v4 == 0x80000001C25886C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
}

id static HKClinicalBrand.localDevelopmentSampleBrand()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F2ACE0]);
  id v1 = (void *)sub_1C254F430();
  uint64_t v2 = (void *)sub_1C254F430();
  id v3 = objc_msgSend(v0, sel_initWithExternalID_batchID_, v1, v2);

  return v3;
}

id sub_1C2498E70()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F2ACE0]);
  id v1 = (void *)sub_1C254F430();
  uint64_t v2 = (void *)sub_1C254F430();
  id v3 = objc_msgSend(v0, sel_initWithExternalID_batchID_, v1, v2);

  return v3;
}

uint64_t _s15HealthRecordsUI15BrandIdentifierV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1C2550870(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1C2550870();
    }
  }
  return result;
}

unint64_t sub_1C2498FC4()
{
  unint64_t result = qword_1EA2E41B8;
  if (!qword_1EA2E41B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E41B8);
  }
  return result;
}

void sub_1C2499018(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2498FC4();
    unint64_t v7 = a3(a1, &type metadata for BrandIdentifier.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C2499080()
{
  unint64_t result = qword_1EA2E41C8;
  if (!qword_1EA2E41C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E41C8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BrandIdentifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BrandIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrandIdentifier()
{
  return &type metadata for BrandIdentifier;
}

unsigned char *storeEnumTagSinglePayload for BrandIdentifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2499238);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BrandIdentifier.CodingKeys()
{
  return &type metadata for BrandIdentifier.CodingKeys;
}

unint64_t sub_1C2499274()
{
  unint64_t result = qword_1EA2E41D0;
  if (!qword_1EA2E41D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E41D0);
  }
  return result;
}

unint64_t sub_1C24992CC()
{
  unint64_t result = qword_1EA2E41D8;
  if (!qword_1EA2E41D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E41D8);
  }
  return result;
}

unint64_t sub_1C2499324()
{
  unint64_t result = qword_1EA2E41E0;
  if (!qword_1EA2E41E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E41E0);
  }
  return result;
}

uint64_t sub_1C2499378(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616E7265747865 && a2 == 0xEA00000000006449;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64496863746162 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id IconTextListView.__allocating_init(textStyle:iconSize:interItemSpacingHorizontal:interItemSpacingVertical:hidesIconsForAccessibilityTextSizes:)(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  id v13 = objc_allocWithZone(v6);
  id v14 = sub_1C249A5A4(a1, a2, a3, a4, a5, a6);

  return v14;
}

id IconTextListView.init(textStyle:iconSize:interItemSpacingHorizontal:interItemSpacingVertical:hidesIconsForAccessibilityTextSizes:)(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  id v7 = sub_1C249A5A4(a1, a2, a3, a4, a5, a6);

  return v7;
}

void sub_1C24995A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = *(id *)a1;
  if (*(void *)a1)
  {
    uint64_t v7 = *(void *)(a1 + 8);
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v6);
    objc_msgSend(v6, sel_setContentMode_, 1);
    objc_msgSend(v6, sel_setTintColor_, v7);
  }
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v9 = (void *)sub_1C254F430();
  objc_msgSend(v8, sel_setText_, v9);

  objc_msgSend(v8, sel_setTextColor_, a4);
  objc_msgSend(v8, sel_setFont_, *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_font]);
  if (v6) {
    objc_msgSend(v4, sel_addSubview_, v6);
  }
  objc_msgSend(v4, sel_addSubview_, v8);
  uint64_t v10 = &v4[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_items];
  swift_beginAccess();
  uint64_t v11 = *(void **)v10;
  id v12 = v6;
  id v13 = v8;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v10 = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v11 = sub_1C226E2E8(0, v11[2] + 1, 1, v11);
    *(void *)uint64_t v10 = v11;
  }
  unint64_t v16 = v11[2];
  unint64_t v15 = v11[3];
  if (v16 >= v15 >> 1)
  {
    uint64_t v11 = sub_1C226E2E8((void *)(v15 > 1), v16 + 1, 1, v11);
    *(void *)uint64_t v10 = v11;
  }
  v11[2] = v16 + 1;
  char v17 = &v11[2 * v16];
  v17[4] = v6;
  void v17[5] = v13;
  swift_endAccess();
  objc_msgSend(v4, sel_setNeedsLayout);
}

id sub_1C24997A4()
{
  id v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_items];
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    unsigned int v4 = (id *)(v2 + 40);
    do
    {
      id v6 = *(v4 - 1);
      id v5 = *v4;
      id v7 = *v4;
      if (v6)
      {
        id v6 = v6;
        objc_msgSend(v6, sel_removeFromSuperview);
      }
      objc_msgSend(v5, sel_removeFromSuperview);

      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  *(void *)id v1 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  return objc_msgSend(v0, sel_setNeedsLayout);
}

void sub_1C2499894()
{
  uint64_t v1 = sub_1C2550850();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unsigned int v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (objc_class *)type metadata accessor for IconTextListView();
  v72.receiver = v0;
  v72.super_class = v5;
  objc_msgSendSuper2(&v72, sel_layoutSubviews);
  id v6 = objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection);
  objc_msgSend(v0, sel_layoutMargins);
  double v8 = v7;
  objc_msgSend(v0, sel_layoutMargins);
  double v10 = v9;
  objc_msgSend(v0, sel_bounds);
  double Width = CGRectGetWidth(v73);
  id v12 = &v0[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_items];
  swift_beginAccess();
  uint64_t v13 = *(void *)v12;
  if (*(void *)(*(void *)v12 + 16))
  {
    id v60 = v6;
    double v54 = Width - v8;
    id v14 = *(id *)(v13 + 40);
    double v69 = Width - v8 - v10;
    objc_msgSend(v14, sel_sizeThatFits_, v69, 1.79769313e308);
    uint64_t v15 = v2 + 104;
    unint64_t v16 = *(void (**)(char *, void, uint64_t))(v2 + 104);
    v16(v4, *MEMORY[0x1E4FBBEA8], v1);
    id v17 = objc_msgSend(v14, sel_traitCollection);
    objc_msgSend(v17, sel_displayScale);
    sub_1C254CDC0();
    objc_msgSend(v17, sel_displayScale);
    sub_1C254CDC0();
    double v19 = v18;

    uint64_t v22 = *(void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v21 = v2 + 8;
    char v20 = v22;
    v22(v4, v1);
    id v53 = v14;

    uint64_t v23 = *(void *)(*(void *)v12 + 16);
    if (v23)
    {
      unint64_t v55 = v16;
      uint64_t v56 = v15;
      uint64_t v59 = v21;
      unint64_t v24 = (CGFloat *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_iconSize];
      uint64_t v61 = OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_hidesIconsForAccessibilityTextSizes;
      double v67 = *(double *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_interItemSpacingVertical];
      uint64_t v63 = OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_interItemSpacingHorizontal;
      unsigned int v66 = *MEMORY[0x1E4FBBEB0];
      double v58 = v8;
      double v57 = v10;
      if (v60 == (id)1) {
        double v25 = v10;
      }
      else {
        double v25 = v8;
      }
      double v62 = v25;
      uint64_t v52 = swift_bridgeObjectRetain();
      uint64_t v26 = (void **)(v52 + 40);
      double v27 = 0.0;
      long long v28 = &selRef_lastObject;
      double v68 = v19;
      while (1)
      {
        id v34 = *(v26 - 1);
        long long v35 = *v26;
        double v36 = v24[1];
        if (v36 <= v19) {
          double v36 = v19;
        }
        double v71 = v36;
        if (v34) {
          break;
        }
        id v29 = v35;
        id v30 = 0;
        double v31 = v62;
        double v32 = v27;
        double v33 = v69;
LABEL_8:
        objc_msgSend(v35, v28[355], v31, v32, v33, v19, v52);

        double v27 = v27 + v67 + v71;
        v26 += 2;
        if (!--v23)
        {

          swift_bridgeObjectRelease();
          return;
        }
      }
      char v37 = v0[v61];
      id v38 = v34;
      uint64_t v70 = v35;
      if (v37)
      {
        id v39 = v35;
        id v40 = objc_msgSend(v0, sel_traitCollection, v52);
        id v41 = objc_msgSend(v40, sel_preferredContentSizeCategory);

        LOBYTE(v40) = sub_1C254FD50();
        double v42 = 0.0;
        double v43 = 0.0;
        double v44 = 0.0;
        double v31 = v62;
        double v32 = v27;
        double v33 = v69;
        double v45 = 0.0;
        if (v40)
        {
LABEL_21:
          long long v28 = &selRef_lastObject;
          objc_msgSend(v38, sel_setFrame_, v42, v43, v44, v45, v52);
          id v30 = v38;
          v76.origin.x = 0.0;
          v76.origin.y = 0.0;
          v76.size.width = 0.0;
          v76.size.height = 0.0;
          v75.origin.x = v42;
          v75.origin.y = v43;
          v75.size.width = v44;
          v75.size.height = v45;
          objc_msgSend(v30, sel_setHidden_, CGRectEqualToRect(v75, v76));

          double v19 = v68;
          long long v35 = v70;
          goto LABEL_8;
        }
      }
      else
      {
        id v46 = v35;
      }
      id v64 = v38;
      uint64_t v65 = v23;
      double v42 = v58;
      id v47 = v60;
      if (v60 == (id)1) {
        double v42 = v54 - *v24;
      }
      id v48 = v55;
      v55(v4, v66, v1);
      sub_1C254CDE0();
      double v43 = v49;
      v20(v4, v1);
      double v44 = *v24;
      double v45 = v24[1];
      double v31 = v57;
      if (v47 != (id)1)
      {
        v74.origin.x = v42;
        v74.origin.y = v43;
        v74.size.width = *v24;
        v74.size.height = v24[1];
        double v31 = CGRectGetMaxX(v74) + *(double *)&v0[v63];
      }
      v48(v4, v66, v1);
      sub_1C254CDE0();
      double v32 = v50;
      v20(v4, v1);
      double v33 = v69 - *v24 - *(double *)&v0[v63];
      id v38 = v64;
      uint64_t v23 = v65;
      goto LABEL_21;
    }
    id v51 = v53;
  }
  else
  {
    id v51 = 0;
  }
}

double sub_1C2499EE8(double a1)
{
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_font), sel_lineHeight);
  swift_beginAccess();
  return a1;
}

void sub_1C2499FE4(void *a1)
{
  v26.receiver = v1;
  v26.super_class = (Class)type metadata accessor for IconTextListView();
  objc_msgSendSuper2(&v26, sel_traitCollectionDidChange_, a1);
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (a1)
  {
    id v5 = objc_msgSend(a1, sel_preferredContentSizeCategory);
    uint64_t v6 = sub_1C254F470();
    uint64_t v8 = v7;
    if (v6 == sub_1C254F470() && v8 == v9)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v11 = sub_1C2550870();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0) {
        goto LABEL_11;
      }
    }
    id v12 = objc_msgSend(v1, sel_traitCollection);
    id v13 = objc_msgSend(v12, sel_legibilityWeight);

    if (v13 == objc_msgSend(a1, sel_legibilityWeight)) {
      goto LABEL_16;
    }
    goto LABEL_11;
  }

LABEL_11:
  id v14 = objc_msgSend(self, sel_preferredFontForTextStyle_, *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_textStyle]);
  uint64_t v15 = OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_font;
  unint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_font];
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_font] = v14;

  id v17 = &v1[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_items];
  swift_beginAccess();
  uint64_t v18 = *(void *)v17;
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = 40;
    do
    {
      objc_msgSend(*(id *)(v18 + v20), sel_setFont_, *(void *)&v1[v15]);
      v20 += 16;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v1, sel_setNeedsLayout);
LABEL_16:
  if (v1[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_hidesIconsForAccessibilityTextSizes] == 1)
  {
    id v21 = objc_msgSend(v1, sel_traitCollection);
    id v22 = objc_msgSend(v21, sel_preferredContentSizeCategory);

    char v23 = sub_1C254FD50();
    if (!a1
      || (id v24 = objc_msgSend(a1, sel_preferredContentSizeCategory),
          int v25 = sub_1C254FD50() & 1,
          v24,
          v25 != (v23 & 1)))
    {
      objc_msgSend(v1, sel_setNeedsLayout);
    }
  }
}

id IconTextListView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void IconTextListView.init(frame:)()
{
}

id IconTextListView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IconTextListView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void IconTextListView.addItem(for:iconSize:)(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  LOBYTE(v12) = *(unsigned char *)a1;
  DisplayCategory.Kind.systemImageName.getter();
  if (v5)
  {
    id v6 = objc_msgSend(v1, sel_traitCollection, v12);
    uint64_t v7 = (void *)sub_1C254F430();
    id v8 = objc_msgSend(self, sel_systemImageNamed_compatibleWithTraitCollection_, v7, v6);
    swift_bridgeObjectRelease();

    if (v8)
    {
      id v9 = v8;
      id v10 = v2;
      goto LABEL_6;
    }
  }
  else
  {
    id v8 = 0;
  }
  objc_super v2 = 0;
LABEL_6:
  id v11 = objc_msgSend(self, sel_labelColor, v8, v2);
  sub_1C24995A8((uint64_t)&v12, v3, v4, (uint64_t)v11);

  sub_1C220022C(v8, v2);
}

id sub_1C249A5A4(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_items] = MEMORY[0x1E4FBC860];
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_textStyle] = a1;
  id v13 = self;
  id v14 = v6;
  id v15 = objc_msgSend(v13, sel_preferredFontForTextStyle_, a1);
  *(void *)&v14[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_font] = v15;
  unint64_t v16 = (double *)&v14[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_iconSize];
  *unint64_t v16 = a3;
  v16[1] = a4;
  *(double *)&v14[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_interItemSpacingHorizontal] = a5;
  *(double *)&v14[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_interItemSpacingVertical] = a6;
  v14[OBJC_IVAR____TtC15HealthRecordsUI16IconTextListView_hidesIconsForAccessibilityTextSizes] = a2;

  v18.receiver = v14;
  v18.super_class = (Class)type metadata accessor for IconTextListView();
  return objc_msgSendSuper2(&v18, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
}

uint64_t type metadata accessor for IconTextListView()
{
  return self;
}

uint64_t method lookup function for IconTextListView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IconTextListView);
}

uint64_t dispatch thunk of IconTextListView.__allocating_init(textStyle:iconSize:interItemSpacingHorizontal:interItemSpacingVertical:hidesIconsForAccessibilityTextSizes:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of IconTextListView.addItem(icon:text:textColor:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of IconTextListView.removeAll()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t assignWithCopy for IconTextListView.Icon(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

ValueMetadata *type metadata accessor for IconTextListView.Icon()
{
  return &type metadata for IconTextListView.Icon;
}

uint64_t assignWithCopy for IconTextListView.ListItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

ValueMetadata *type metadata accessor for IconTextListView.ListItem()
{
  return &type metadata for IconTextListView.ListItem;
}

HealthRecordsUI::MedicalRecordTimelineHeaderItem::HeaderType_optional __swiftcall MedicalRecordTimelineHeaderItem.HeaderType.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (HealthRecordsUI::MedicalRecordTimelineHeaderItem::HeaderType_optional)rawValue;
}

uint64_t MedicalRecordTimelineHeaderItem.HeaderType.rawValue.getter()
{
  return *v0;
}

HealthRecordsUI::MedicalRecordTimelineHeaderItem::HeaderType_optional sub_1C249A868(Swift::Int *a1)
{
  return MedicalRecordTimelineHeaderItem.HeaderType.init(rawValue:)(*a1);
}

uint64_t MedicalRecordTimelineHeaderItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C249A8AC()
{
  return 0x7449726564616548;
}

void sub_1C249A91C()
{
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40)) {
    sub_1C254F570();
  }
  uint64_t v1 = *(void **)(v0 + 56);
  if (v1)
  {
    id v3 = v1;
    id v2 = objc_msgSend(v3, sel_bundleIdentifier);
    sub_1C254F470();

    sub_1C254F570();
    swift_bridgeObjectRelease();
  }
}

uint64_t MedicalRecordTimelineHeaderItem.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_uuid;
  uint64_t v2 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineHeaderItem.__deallocating_deinit()
{
  MedicalRecordTimelineHeaderItem.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C249AB50()
{
  return sub_1C2550A10();
}

uint64_t sub_1C249AB90()
{
  return sub_1C2550A10();
}

void sub_1C249ABD4()
{
}

uint64_t sub_1C249ABF8()
{
  return sub_1C2550A10();
}

uint64_t sub_1C249AC38()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C249AC78()
{
  return 0x7449726564616548;
}

uint64_t sub_1C249ACE8(uint64_t *a1, uint64_t *a2)
{
  return _s15HealthRecordsUI31MedicalRecordTimelineHeaderItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

id sub_1C249ACF4()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___titleLabel);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v4, sel_setNumberOfLines_, 0);
    uint64_t v5 = self;
    id v6 = objc_msgSend(v5, sel_labelColor);
    objc_msgSend(v4, sel_setTextColor_, v6);

    id v7 = v4;
    id v8 = objc_msgSend(v5, sel_clearColor);
    objc_msgSend(v7, sel_setBackgroundColor_, v8);

    objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v9 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_1C249AE18()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___subtitleLabel;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___subtitleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___subtitleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    id v6 = (void *)sub_1C254FE50();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    id v7 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setClipsToBounds_, 0);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_1C249AF6C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___separatorView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___separatorView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___separatorView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67C08]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    HKUIOnePixel();
    objc_msgSend(v4, sel_setSeparatorThickness_);
    id v5 = objc_msgSend(self, sel_separatorColor);
    objc_msgSend(v4, sel_setColor_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

uint64_t sub_1C249B058(uint64_t a1, void *a2)
{
  sub_1C249D358(a1, (uint64_t)v5, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  sub_1C249D3C4((uint64_t)v5, v3, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  swift_endAccess();
  sub_1C249B108();
  return sub_1C249D430((uint64_t)v5, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t sub_1C249B108()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  sub_1C249D358(v1, (uint64_t)v12, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  if (v12[3])
  {
    sub_1C22270A8();
    type metadata accessor for MedicalRecordTimelineHeaderItem(0);
    if (swift_dynamicCast())
    {
      LOBYTE(v12[0]) = *(unsigned char *)(v11 + 64);
      char v2 = v12[0];
      sub_1C249C6E8(v12);
      uint64_t v3 = *(void *)(v11 + 16);
      id v4 = *(void **)(v11 + 24);
      uint64_t v5 = *(void *)(v11 + 32);
      uint64_t v6 = *(void *)(v11 + 40);
      LOBYTE(v12[0]) = v2;
      sub_1C249C5B0(v3, v4, v5, v6, v12);
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
      id v7 = (void *)sub_1C254FE50();
      id v8 = sub_1C249ACF4();
      objc_msgSend(v8, sel_setFont_, v7);

      id v9 = sub_1C249AF6C();
      objc_msgSend(v9, sel_setHidden_, (*(unsigned char *)(v11 + 48) & 1) == 0);

      LOBYTE(v12[0]) = *(unsigned char *)(v11 + 64);
      sub_1C249C964((char *)v12);
      return swift_release();
    }
  }
  else
  {
    sub_1C249D430((uint64_t)v12, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  }
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  sub_1C249D358(v1, (uint64_t)v12, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  sub_1C249DBB8(0, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  sub_1C254F510();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C25505F0();
  __break(1u);
  return result;
}

uint64_t sub_1C249B3A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  return sub_1C249D358(v3, a1, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t sub_1C249B410(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  sub_1C249D3C4(a1, v3, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  swift_endAccess();
  sub_1C249B108();
  return sub_1C249D430(a1, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t (*sub_1C249B4B4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C249B514;
}

uint64_t sub_1C249B514(uint64_t a1, char a2)
{
  return sub_1C249BCA8(a1, a2, (uint64_t (*)(uint64_t))sub_1C249B108);
}

uint64_t sub_1C249B52C(uint64_t a1, void *a2)
{
  id v4 = (void (*)(uint64_t))MEMORY[0x1E4F66300];
  sub_1C249DBB8(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v10 - v6;
  sub_1C249D358(a1, (uint64_t)&v10 - v6, &qword_1EA2DF2E0, v4);
  uint64_t v8 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_sectionContext;
  swift_beginAccess();
  sub_1C249D3C4((uint64_t)v7, v8, &qword_1EA2DF2E0, v4);
  swift_endAccess();
  sub_1C249B634();
  return sub_1C249D430((uint64_t)v7, &qword_1EA2DF2E0, v4);
}

uint64_t sub_1C249B634()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CD90();
  uint64_t v27 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void (*)(uint64_t))MEMORY[0x1E4F66300];
  sub_1C249DBB8(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = sub_1C254D370();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_sectionContext;
  swift_beginAccess();
  sub_1C249D358(v13, (uint64_t)v8, &qword_1EA2DF2E0, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_1C249D430((uint64_t)v8, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  uint64_t v15 = v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  sub_1C249D358(v15, (uint64_t)&v29, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  if (v31)
  {
    sub_1C22270A8();
    type metadata accessor for MedicalRecordTimelineHeaderItem(0);
    if (swift_dynamicCast())
    {
      uint64_t v26 = v28;
      uint64_t v29 = 0;
      unint64_t v30 = 0xE000000000000000;
      sub_1C25503A0();
      uint64_t v16 = sub_1C254F470();
      unint64_t v18 = v17;
      swift_bridgeObjectRelease();
      uint64_t v29 = v16;
      unint64_t v30 = v18;
      sub_1C254F5A0();
      sub_1C254D360();
      uint64_t v19 = sub_1C254CD80();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v2);
      uint64_t v28 = v19;
      sub_1C2550810();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      uint64_t v20 = v29;
      unint64_t v21 = v30;
      id v22 = sub_1C249ACF4();
      uint64_t v29 = v20;
      unint64_t v30 = v21;
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      char v23 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v22, sel_setAccessibilityIdentifier_, v23);

      id v24 = sub_1C249AE18();
      uint64_t v29 = v20;
      unint64_t v30 = v21;
      sub_1C254F5A0();
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      int v25 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v24, sel_setAccessibilityIdentifier_, v25);
      swift_release();
    }
  }
  else
  {
    sub_1C249D430((uint64_t)&v29, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1C249BB1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_sectionContext;
  swift_beginAccess();
  return sub_1C249D358(v3, a1, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
}

uint64_t sub_1C249BB8C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_sectionContext;
  swift_beginAccess();
  id v4 = (void (*)(uint64_t))MEMORY[0x1E4F66300];
  sub_1C249D3C4(a1, v3, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  swift_endAccess();
  sub_1C249B634();
  return sub_1C249D430(a1, &qword_1EA2DF2E0, v4);
}

uint64_t (*sub_1C249BC30(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C249BC90;
}

uint64_t sub_1C249BC90(uint64_t a1, char a2)
{
  return sub_1C249BCA8(a1, a2, (uint64_t (*)(uint64_t))sub_1C249B634);
}

uint64_t sub_1C249BCA8(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

uint64_t sub_1C249BCEC@<X0>(char *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  sub_1C249D358(v3, (uint64_t)v7, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  if (!v8)
  {
    uint64_t result = sub_1C249D430((uint64_t)v7, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    goto LABEL_5;
  }
  sub_1C22270A8();
  type metadata accessor for MedicalRecordTimelineHeaderItem(0);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_5:
    char v5 = 4;
    goto LABEL_6;
  }
  char v5 = *(unsigned char *)(v6 + 64);
  uint64_t result = swift_release();
LABEL_6:
  *a1 = v5;
  return result;
}

id MedicalRecordTimelineHeaderItemCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicalRecordTimelineHeaderItemCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___subtitleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___separatorView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_customConstraints] = MEMORY[0x1E4FBC860];
  id v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = &v4[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_sectionContext];
  uint64_t v11 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
  id v12 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C249BFA0();

  return v12;
}

id sub_1C249BFA0()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v2, sel_setClipsToBounds_, 0);

  id v3 = objc_msgSend(v1, sel_contentView);
  id v4 = sub_1C249ACF4();
  objc_msgSend(v3, sel_addSubview_, v4);

  id v5 = objc_msgSend(v1, sel_contentView);
  id v6 = sub_1C249AE18();
  objc_msgSend(v5, sel_addSubview_, v6);

  id v7 = objc_msgSend(v1, sel_contentView);
  id v8 = sub_1C249AF6C();
  objc_msgSend(v7, sel_addSubview_, v8);

  uint64_t v9 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  sub_1C249D358(v9, (uint64_t)v15, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  if (v16)
  {
    sub_1C22270A8();
    type metadata accessor for MedicalRecordTimelineHeaderItem(0);
    if (swift_dynamicCast())
    {
      swift_release();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
      uint64_t v10 = (void *)sub_1C254FE50();
      id v11 = sub_1C249ACF4();
      objc_msgSend(v11, sel_setFont_, v10);
    }
  }
  else
  {
    sub_1C249D430((uint64_t)v15, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  }
  sub_1C249D358(v9, (uint64_t)v15, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  if (!v16)
  {
    sub_1C249D430((uint64_t)v15, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    goto LABEL_9;
  }
  sub_1C22270A8();
  type metadata accessor for MedicalRecordTimelineHeaderItem(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    char v12 = 4;
    goto LABEL_10;
  }
  char v12 = *(unsigned char *)(v14 + 64);
  swift_release();
LABEL_10:
  v15[0] = v12;
  return sub_1C249C964(v15);
}

void sub_1C249C298(void *a1)
{
  id v2 = v1;
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
  objc_msgSendSuper2(&v15, sel_traitCollectionDidChange_, a1);
  id v4 = objc_msgSend(v2, sel_traitCollection);
  id v5 = v4;
  if (!a1)
  {
    if (!v4) {
      return;
    }

LABEL_7:
    uint64_t v8 = (uint64_t)v2 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
    swift_beginAccess();
    sub_1C249D358(v8, (uint64_t)v13, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    if (v14)
    {
      sub_1C22270A8();
      type metadata accessor for MedicalRecordTimelineHeaderItem(0);
      if (swift_dynamicCast())
      {
        swift_release();
        sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
        uint64_t v9 = (void *)sub_1C254FE50();
        id v10 = sub_1C249ACF4();
        objc_msgSend(v10, sel_setFont_, v9);
      }
    }
    else
    {
      sub_1C249D430((uint64_t)v13, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    }
    sub_1C249D358(v8, (uint64_t)v13, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    if (v14)
    {
      sub_1C22270A8();
      type metadata accessor for MedicalRecordTimelineHeaderItem(0);
      if (swift_dynamicCast())
      {
        char v11 = *(unsigned char *)(v12 + 64);
        swift_release();
LABEL_16:
        v13[0] = v11;
        sub_1C249C964(v13);
        return;
      }
    }
    else
    {
      sub_1C249D430((uint64_t)v13, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    }
    char v11 = 4;
    goto LABEL_16;
  }
  if (!v4) {
    goto LABEL_7;
  }
  sub_1C21AB51C(0, &qword_1EBB6FF98);
  id v6 = a1;
  char v7 = sub_1C254FF70();

  if ((v7 & 1) == 0) {
    goto LABEL_7;
  }
}

void sub_1C249C5B0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  if (*a5 != 4)
  {
    id v7 = sub_1C249ACF4();
    if (a2) {
      a2 = (void *)sub_1C254F430();
    }
    objc_msgSend(v7, sel_setText_, a2);

    id v8 = sub_1C249AE18();
    if (a4) {
      uint64_t v9 = (void *)sub_1C254F430();
    }
    else {
      uint64_t v9 = 0;
    }
    objc_msgSend(v8, sel_setText_, v9);

    id v10 = sub_1C249AE18();
    objc_msgSend(v10, sel_setHidden_, a4 == 0);
  }
}

void sub_1C249C6E8(unsigned char *a1)
{
  sub_1C249DBB8(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v15 - v6;
  switch(*a1)
  {
    case 2:
      sub_1C254E700();
      goto LABEL_4;
    case 3:
      sub_1C254E700();
      uint64_t v10 = sub_1C254E710();
      uint64_t v11 = *(void *)(v10 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      uint64_t v12 = MEMORY[0x1C8758250](v7);
      MEMORY[0x1C8758240](v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10))
      {
        uint64_t v13 = (void (*)(uint64_t))MEMORY[0x1E4FB0F28];
        sub_1C249D358((uint64_t)v4, (uint64_t)v7, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28]);
        MEMORY[0x1C8758250](v7);
        sub_1C249D430((uint64_t)v4, &qword_1EA2DF3E0, v13);
      }
      else
      {
        id v14 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
        sub_1C254E6C0();
        uint64_t v9 = v4;
LABEL_5:
        MEMORY[0x1C8758250](v9);
      }
      return;
    case 4:
      return;
    default:
      sub_1C254E6F0();
LABEL_4:
      uint64_t v8 = sub_1C254E710();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
      uint64_t v9 = v7;
      goto LABEL_5;
  }
}

id sub_1C249C964(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = self;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_customConstraints;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_deactivateConstraints_, v5);

  char v8 = v2;
  *(void *)&v1[v4] = sub_1C249CA80(&v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v6);

  return objc_msgSend(v1, sel_setNeedsLayout);
}

uint64_t sub_1C249CA80(unsigned char *a1)
{
  char v2 = v1;
  int v3 = *a1;
  if (v3 == 4)
  {
LABEL_7:
    double v5 = 0.0;
    double v4 = 2.0;
    double v6 = -16.0;
  }
  else
  {
    double v4 = 18.0;
    double v5 = 10.0;
    double v6 = 10.0;
    switch(*a1)
    {
      case 1:
        goto LABEL_7;
      case 2:
        break;
      case 3:
        double v4 = 22.0;
        double v6 = 0.0;
        break;
      default:
        id v7 = sub_1C249AF6C();
        unsigned int v8 = objc_msgSend(v7, sel_isHidden);

        if (v8) {
          double v6 = 0.0;
        }
        else {
          double v6 = 10.0;
        }
        double v5 = 6.0;
        double v4 = 2.0;
        break;
    }
  }
  sub_1C21ACA3C();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CE50;
  id v10 = sub_1C249ACF4();
  id v11 = objc_msgSend(v10, sel_topAnchor);

  id v12 = objc_msgSend(v2, sel_contentView);
  id v13 = objc_msgSend(v12, (SEL)&selRef_unsupportedSearchResults + 3);

  id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v13, v5);
  *(void *)(v9 + 32) = v14;
  id v15 = objc_msgSend(v2, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v16 = objc_msgSend(v15, sel_trailingAnchor);

  id v17 = sub_1C249ACF4();
  id v18 = objc_msgSend(v17, sel_trailingAnchor);

  id v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v18, 2.0);
  *(void *)(v9 + 40) = v19;
  id v20 = sub_1C249AE18();
  id v21 = objc_msgSend(v20, (SEL)&selRef_unsupportedSearchResults + 3);

  id v22 = sub_1C249ACF4();
  id v23 = objc_msgSend(v22, sel_bottomAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, 4.0);
  *(void *)(v9 + 48) = v24;
  id v25 = sub_1C249AE18();
  id v26 = objc_msgSend(v25, sel_leadingAnchor);

  id v27 = sub_1C249ACF4();
  id v28 = objc_msgSend(v27, sel_leadingAnchor);

  id v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v28);
  *(void *)(v9 + 56) = v29;
  id v30 = sub_1C249AE18();
  id v31 = objc_msgSend(v30, sel_trailingAnchor);

  id v32 = sub_1C249ACF4();
  id v33 = objc_msgSend(v32, sel_trailingAnchor);

  id v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v33);
  *(void *)(v9 + 64) = v34;
  id v35 = sub_1C249AF6C();
  id v36 = objc_msgSend(v35, sel_leadingAnchor);

  id v37 = objc_msgSend(v2, sel_contentView);
  id v38 = objc_msgSend(v37, sel_leadingAnchor);

  id v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v38);
  *(void *)(v9 + 72) = v39;
  id v40 = sub_1C249AF6C();
  id v41 = objc_msgSend(v40, sel_trailingAnchor);

  id v42 = objc_msgSend(v2, sel_contentView);
  id v43 = objc_msgSend(v42, sel_trailingAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_, v43);
  *(void *)(v9 + 80) = v44;
  id v45 = sub_1C249AF6C();
  id v46 = objc_msgSend(v45, sel_topAnchor);

  id v47 = sub_1C249AE18();
  id v48 = objc_msgSend(v47, sel_bottomAnchor);

  id v49 = objc_msgSend(v46, (SEL)&selRef_chartDataCacheController + 7, v48, 8.0);
  *(void *)(v9 + 88) = v49;
  id v50 = objc_msgSend(v2, sel_contentView);
  id v51 = objc_msgSend(v50, sel_bottomAnchor);

  id v52 = sub_1C249AE18();
  id v53 = objc_msgSend(v52, sel_bottomAnchor);

  id v54 = objc_msgSend(v51, (SEL)&selRef_chartDataCacheController + 7, v53, v6);
  *(void *)(v9 + 96) = v54;
  uint64_t v65 = v9;
  sub_1C254F730();
  id v55 = sub_1C249ACF4();
  id v56 = objc_msgSend(v55, sel_leadingAnchor);

  id v57 = objc_msgSend(v2, sel_contentView);
  double v58 = v57;
  if (v3 == 4 || (v3 & 0xFE) != 2)
  {
    id v60 = objc_msgSend(v57, sel_leadingAnchor);

    id v61 = objc_msgSend(v56, (SEL)&selRef_chartDataCacheController + 7, v60, v4);
  }
  else
  {
    id v59 = objc_msgSend(v57, sel_layoutMarginsGuide);

    id v60 = objc_msgSend(v59, sel_leadingAnchor);
    id v61 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v60);
  }
  id v62 = v61;

  id v63 = v62;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();

  return v65;
}

id MedicalRecordTimelineHeaderItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s15HealthRecordsUI31MedicalRecordTimelineHeaderItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || *(void *)(a1 + 24) != *(void *)(a2 + 24))
  {
    char v5 = sub_1C2550870();
    uint64_t result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a2 + 40);
  if (!v7)
  {
    if (v8) {
      return 0;
    }
    goto LABEL_15;
  }
  if (!v8) {
    return 0;
  }
  BOOL v9 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && v7 == v8;
  if (v9 || (v10 = sub_1C2550870(), uint64_t result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    if (*(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48)
      && *(unsigned __int8 *)(a1 + 64) == *(unsigned __int8 *)(a2 + 64))
    {
      if (*(void *)(a1 + 72) == *(void *)(a2 + 72) && *(void *)(a1 + 80) == *(void *)(a2 + 80)) {
        return 1;
      }
      return sub_1C2550870();
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C249D358(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C249DBB8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C249D3C4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C249DBB8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C249D430(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C249DBB8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t type metadata accessor for MedicalRecordTimelineHeaderItem(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E4258);
}

uint64_t type metadata accessor for MedicalRecordTimelineHeaderItemCell(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E4268);
}

unint64_t sub_1C249D4D0()
{
  unint64_t result = qword_1EA2E4248;
  if (!qword_1EA2E4248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4248);
  }
  return result;
}

unint64_t sub_1C249D528()
{
  unint64_t result = qword_1EA2E4250;
  if (!qword_1EA2E4250)
  {
    type metadata accessor for MedicalRecordTimelineHeaderItem(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4250);
  }
  return result;
}

uint64_t sub_1C249D580@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item;
  swift_beginAccess();
  return sub_1C249D358(v3, a2, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t sub_1C249D5F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_sectionContext;
  swift_beginAccess();
  return sub_1C249D358(v3, a2, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
}

uint64_t sub_1C249D670()
{
  return type metadata accessor for MedicalRecordTimelineHeaderItem(0);
}

uint64_t sub_1C249D678()
{
  uint64_t result = sub_1C254CB40();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for MedicalRecordTimelineHeaderItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineHeaderItem);
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

unsigned char *storeEnumTagSinglePayload for MedicalRecordTimelineHeaderItem.HeaderType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C249D890);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicalRecordTimelineHeaderItem.HeaderType()
{
  return &type metadata for MedicalRecordTimelineHeaderItem.HeaderType;
}

uint64_t sub_1C249D8C8()
{
  return type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
}

void sub_1C249D8D0()
{
  sub_1C249DBB8(319, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedicalRecordTimelineHeaderItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineHeaderItemCell);
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.sectionContext.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.sectionContext.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.sectionContext.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.headerType.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.commonInit()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of MedicalRecordTimelineHeaderItemCell.setUpConstraints(type:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

void sub_1C249DBB8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C249DC0C()
{
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___subtitleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell____lazy_storage___separatorView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_customConstraints] = MEMORY[0x1E4FBC860];
  unint64_t v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_item];
  *(_OWORD *)unint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  objc_super v2 = &v0[OBJC_IVAR____TtC15HealthRecordsUI35MedicalRecordTimelineHeaderItemCell_sectionContext];
  uint64_t v3 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);

  sub_1C25505F0();
  __break(1u);
}

uint64_t sub_1C249DD0C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1C2274ACC(0, v2, 0);
    uint64_t result = v8;
    unint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 16);
      unint64_t v6 = *(void *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_1C2274ACC(v6 > 1, v7 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v7 + 1;
      *(void *)(result + 8 * v7 + 32) = v5;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C249DDD0(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    sub_1C2274ACC(0, v2, 0);
    uint64_t result = v8;
    unint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *v4;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 16);
      unint64_t v6 = *(void *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_1C2274ACC(v6 > 1, v7 + 1, 1);
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v7 + 1;
      *(void *)(result + 8 * v7 + 32) = v5;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1C249DE94(void **a1)
{
  int64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int64_t v2 = (void *)sub_1C23F3850(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  uint64_t result = sub_1C24A0D50(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1C249DF00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = qword_1EA2DD5C0;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  id v5 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  unint64_t v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C21F1054();
  unint64_t v7 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v107 = objc_msgSend(v5, sel_initWithString_attributes_, v6, v7);

  uint64_t v8 = qword_1EA2DD5E0;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  id v9 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  char v10 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v11 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v106 = objc_msgSend(v9, sel_initWithString_attributes_, v10, v11);

  id v12 = &selRef_addSubview_;
  if (a1[7])
  {
    id v13 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v15 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v109 = objc_msgSend(v13, (SEL)&selRef_errorHandler, v14, v15);
  }
  else
  {
    id v109 = 0;
  }
  unint64_t v16 = 0x1E4F28000uLL;
  if (a1[5])
  {
    id v17 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v18 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v19 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(v17, (SEL)&selRef_errorHandler, v18, v19);
  }
  else
  {
    id v20 = 0;
  }
  id v105 = v20;
  uint64_t v21 = a1[8];
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v108 = a1;
  if (v22)
  {
    uint64_t v112 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C2550490();
    id v23 = (unsigned char *)(v21 + 72);
    do
    {
      uint64_t v24 = *((void *)v23 - 5);
      uint64_t v25 = *((void *)v23 - 4);
      uint64_t v26 = *((void *)v23 - 3);
      uint64_t v27 = *((void *)v23 - 2);
      uint64_t v28 = *((void *)v23 - 1);
      char v29 = *v23;
      v23 += 48;
      v110[0] = v24;
      v110[1] = v25;
      v110[2] = v26;
      v110[3] = v27;
      v110[4] = v28;
      char v111 = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C249E910((uint64_t)v110);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      --v22;
    }
    while (v22);
    uint64_t v103 = v112;
    swift_bridgeObjectRelease();
    unint64_t v16 = 0x1E4F28000;
    id v12 = &selRef_addSubview_;
  }
  else
  {
    uint64_t v103 = MEMORY[0x1E4FBC860];
  }
  sub_1C24A17D0();
  uint64_t v104 = v30;
  uint64_t v31 = qword_1EA2DD630;
  swift_bridgeObjectRetain();
  if (v31 != -1) {
    swift_once();
  }
  unint64_t v32 = v16;
  id v33 = objc_allocWithZone(*(Class *)(v16 + 2840));
  swift_bridgeObjectRetain();
  id v34 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v35 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v36 = objc_msgSend(v33, v12[460], v34, v35);

  if (qword_1EA2DD570 != -1) {
    swift_once();
  }
  id v102 = v36;
  objc_msgSend(v36, sel_boundingRectWithSize_options_context_, 1, 0, *(double *)&qword_1EA303910, 1.79769313e308);
  double v38 = v37;
  double v40 = v39;
  id v41 = (void (*)(uint64_t))v108[15];
  uint64_t v42 = v108[16];
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v41;
  *(void *)(v43 + 24) = v42;
  uint64_t v101 = v43;
  id v44 = (void (*)(uint64_t))v108[17];
  uint64_t v45 = v108[18];
  uint64_t v46 = swift_allocObject();
  uint64_t v87 = v44;
  *(void *)(v46 + 16) = v44;
  *(void *)(v46 + 24) = v45;
  uint64_t v100 = v46;
  id v48 = (void (*)(uint64_t, uint64_t))v108[19];
  uint64_t v47 = v108[20];
  uint64_t v49 = swift_allocObject();
  uint64_t v88 = v48;
  *(void *)(v49 + 16) = v48;
  *(void *)(v49 + 24) = v47;
  uint64_t v99 = v49;
  swift_retain();
  swift_retain();
  swift_retain();
  double v50 = sub_1C24A09D8();
  uint64_t v97 = v51;
  double v98 = v50;
  double v52 = sub_1C24A09D8();
  uint64_t v95 = v53;
  double v96 = v52;
  double v54 = 0.0;
  double v55 = 0.0;
  uint64_t v56 = 0;
  if (v109) {
    double v55 = sub_1C24A09D8();
  }
  uint64_t v93 = v56;
  double v94 = v55;
  uint64_t v57 = 0;
  if (v105)
  {
    double v54 = sub_1C24A09D8();
    uint64_t v57 = v58;
  }
  double v91 = ceil(v38);
  double v92 = ceil(v40);
  double v59 = sub_1C24A09D8();
  uint64_t v89 = v60;
  double v90 = v59;
  v41(8);
  id v61 = objc_allocWithZone(*(Class *)(v32 + 2840));
  swift_bridgeObjectRetain();
  id v62 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v63 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v64 = objc_msgSend(v61, sel_initWithString_attributes_, v62, v63);

  double v65 = sub_1C24A09D8();
  uint64_t v67 = v66;

  v87(8);
  id v68 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  double v69 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v70 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v71 = objc_msgSend(v68, sel_initWithString_attributes_, v69, v70);

  double v72 = sub_1C24A09D8();
  uint64_t v74 = v73;

  v88(8, 88);
  id v75 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  CGRect v76 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v77 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v78 = objc_msgSend(v75, sel_initWithString_attributes_, v76, v77);

  double v79 = sub_1C24A09D8();
  uint64_t v81 = v80;

  LOBYTE(v112) = v109 == 0;
  sub_1C24A1ACC(0, &qword_1EA2E0F30, (uint64_t)&_s10SortedDataVN, (uint64_t (*)(void, uint64_t))_s7PDFDataVMa);
  uint64_t v83 = (uint64_t)v108 + *(int *)(v82 + 28);
  sub_1C24A1ACC(0, &qword_1EA2E21C8, (uint64_t)&_s9SizedDataVN, (uint64_t (*)(void, uint64_t))_s7PDFDataVMa);
  uint64_t v85 = v84;
  sub_1C22177F8(v83, a2 + *(int *)(v84 + 28));
  *(void *)a2 = v107;
  *(double *)(a2 + 8) = v98;
  *(void *)(a2 + 16) = v97;
  *(void *)(a2 + 24) = v106;
  *(double *)(a2 + 32) = v96;
  *(void *)(a2 + 40) = v95;
  *(void *)(a2 + 48) = v109;
  *(double *)(a2 + 56) = v94;
  *(void *)(a2 + 64) = v93;
  *(unsigned char *)(a2 + 72) = v112;
  *(void *)(a2 + 80) = v105;
  *(double *)(a2 + 88) = v54;
  *(void *)(a2 + 96) = v57;
  *(unsigned char *)(a2 + 104) = v105 == 0;
  *(void *)(a2 + 112) = v103;
  *(void *)(a2 + 120) = v104;
  *(double *)(a2 + 128) = v90;
  *(void *)(a2 + 136) = v89;
  *(void *)(a2 + 144) = v102;
  *(double *)(a2 + 152) = v91;
  *(double *)(a2 + 160) = v92;
  *(void *)(a2 + 168) = sub_1C24A1A50;
  *(void *)(a2 + 176) = v101;
  *(double *)(a2 + 184) = v65;
  *(void *)(a2 + 192) = v67;
  *(void *)(a2 + 200) = sub_1C24A2FB4;
  *(void *)(a2 + 208) = v100;
  *(double *)(a2 + 216) = v72;
  *(void *)(a2 + 224) = v74;
  *(void *)(a2 + 232) = sub_1C24A1A6C;
  *(void *)(a2 + 240) = v99;
  *(double *)(a2 + 248) = v79;
  *(void *)(a2 + 256) = v81;
  *(void *)(a2 + 264) = sub_1C24A0A68;
  *(void *)(a2 + 272) = 0;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(a2, 0, 1, v85);
}

uint64_t sub_1C249E910(uint64_t a1)
{
  uint64_t v2 = qword_1EA2DD5B8;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
LABEL_149:
  }
    swift_once();
  id v3 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C21F1054();
  id v5 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v267 = objc_msgSend(v3, sel_initWithString_attributes_, v4, v5);

  uint64_t v6 = qword_1EA2DD7F0;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EA303C88;
  uint64_t v8 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v8, v7);

  if (!v9)
  {
    __break(1u);
    swift_release();
    __break(1u);
    JUMPOUT(0x1C24A07C4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 40);
  sub_1C22B3DF8(v11, (uint64_t *)v308);
  id v266 = v9;
  switch(v11)
  {
    case 1:
      sub_1C21F4424((uint64_t)v308, (uint64_t)&v306);
      uint64_t v72 = *(void *)(v10 + 16);
      id v13 = (void *)MEMORY[0x1E4FBC860];
      if (!v72) {
        goto LABEL_104;
      }
      uint64_t v307 = MEMORY[0x1E4FBC860];
      sub_1C2550490();
      uint64_t v73 = 0;
      uint64_t v287 = v10 + 32;
      uint64_t v74 = &selRef_setUnsupportedSearchResults_;
      id v279 = (id)(MEMORY[0x1E4FBC838] + 8);
      uint64_t v274 = v72;
      do
      {
        uint64_t v80 = v287 + 40 * v73;
        uint64_t v81 = *(void *)(v80 + 24);
        uint64_t v82 = *(void *)(v80 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v301 = v82;
        uint64_t v83 = swift_bridgeObjectRetain();
        id v292 = (id)MEMORY[0x1C87594F0](v83);
        uint64_t v84 = qword_1EA2DD5F0;
        swift_bridgeObjectRetain();
        if (v84 != -1) {
          swift_once();
        }
        id v85 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        swift_bridgeObjectRetain();
        uint64_t v86 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        uint64_t v87 = (void *)sub_1C254F2C0();
        swift_bridgeObjectRelease();
        id v300 = objc_msgSend(v85, sel_initWithString_attributes_, v86, v87);

        if (v81)
        {
          uint64_t v88 = qword_1EA2DD600;
          swift_bridgeObjectRetain();
          uint64_t v89 = v301;
          if (v88 != -1) {
            swift_once();
          }
          id v90 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
          swift_bridgeObjectRetain();
          double v91 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
          double v92 = (void *)sub_1C254F2C0();
          swift_bridgeObjectRelease();
          id v93 = objc_msgSend(v90, sel_initWithString_attributes_, v91, v92);
        }
        else
        {
          id v93 = 0;
          uint64_t v89 = v301;
        }
        id v94 = objc_msgSend(v300, v74[74], v266);
        uint64_t v95 = sub_1C254F470();
        unint64_t v97 = v96;

        swift_bridgeObjectRelease();
        uint64_t v98 = HIBYTE(v97) & 0xF;
        if ((v97 & 0x2000000000000000) == 0) {
          uint64_t v98 = v95 & 0xFFFFFFFFFFFFLL;
        }
        double v99 = 0.0;
        double v100 = 0.0;
        double v101 = 0.0;
        if (v98)
        {
          objc_msgSend(v300, sel_size);
          double v100 = ceil(v102);
          double v101 = ceil(v103);
        }
        double v104 = 0.0;
        if (v93)
        {
          id v105 = [v93 v74[74]];
          uint64_t v106 = sub_1C254F470();
          unint64_t v108 = v107;

          swift_bridgeObjectRelease();
          uint64_t v109 = HIBYTE(v108) & 0xF;
          if ((v108 & 0x2000000000000000) == 0) {
            uint64_t v109 = v106 & 0xFFFFFFFFFFFFLL;
          }
          if (v109)
          {
            objc_msgSend(v93, sel_size);
            double v99 = ceil(v110);
            double v104 = ceil(v111);
          }
        }
        sub_1C24A1ACC(0, (unint64_t *)&qword_1EBB6F4E0, (uint64_t)v279, MEMORY[0x1E4FBBE00]);
        uint64_t v112 = swift_allocObject();
        *(_OWORD *)(v112 + 16) = xmmword_1C255CEB0;
        uint64_t v113 = *(void *)(v89 + 16);
        if (v113)
        {
          *(void *)&v305[0] = MEMORY[0x1E4FBC860];
          sub_1C2550490();
          unint64_t v114 = (uint64_t *)(v89 + 72);
          do
          {
            long long v115 = *(_OWORD *)(v114 - 3);
            uint64_t v116 = *(v114 - 1);
            uint64_t v117 = *v114;
            long long v309 = *(_OWORD *)(v114 - 5);
            long long v310 = v115;
            *(void *)&long long v311 = v116;
            *((void *)&v311 + 1) = v117;
            sub_1C24A1B18();
            sub_1C2550460();
            sub_1C25504A0();
            sub_1C25504B0();
            sub_1C2550470();
            v114 += 6;
            --v113;
          }
          while (v113);
          uint64_t v75 = *(void *)&v305[0];
          uint64_t v76 = v274;
          uint64_t v74 = &selRef_setUnsupportedSearchResults_;
        }
        else
        {
          uint64_t v75 = MEMORY[0x1E4FBC860];
          uint64_t v76 = v274;
        }
        ++v73;
        _s15SizedValueGroupCMa();
        uint64_t v77 = swift_allocObject();
        *(void *)(v77 + 24) = 0;
        *(void *)(v77 + 32) = 0;
        *(void *)(v77 + 16) = 0;
        *(unsigned char *)(v77 + 40) = 1;
        *(void *)(v77 + 48) = v75;
        *(void *)(v112 + 32) = v77;
        *(void *)&v305[0] = v112;
        sub_1C254F730();
        uint64_t v78 = *(void *)&v305[0];
        sub_1C21F4424((uint64_t)&v306, (uint64_t)v305);
        _s11SizedRecordCMa();
        uint64_t v79 = swift_allocObject();
        *(void *)(v79 + 128) = 0;
        *(unsigned char *)(v79 + 136) = 1;
        *(void *)(v79 + 16) = v300;
        *(double *)(v79 + 24) = v100;
        *(double *)(v79 + 32) = v101;
        *(void *)(v79 + 40) = v93;
        *(double *)(v79 + 48) = v99;
        *(double *)(v79 + 56) = v104;
        *(unsigned char *)(v79 + 64) = v93 == 0;
        *(void *)(v79 + 72) = 0;
        *(void *)(v79 + 80) = v78;
        sub_1C21F44EC(v305, v79 + 88);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
      }
      while (v73 != v76);
      goto LABEL_103;
    case 2:
      sub_1C21F4424((uint64_t)v308, (uint64_t)&v306);
      id v118 = *(void **)(v10 + 16);
      id v13 = (void *)MEMORY[0x1E4FBC860];
      if (!v118) {
        goto LABEL_104;
      }
      uint64_t v307 = MEMORY[0x1E4FBC860];
      sub_1C2550490();
      uint64_t v119 = 0;
      v280 = (char *)(v10 + 32);
      uint64_t v275 = MEMORY[0x1E4FBC838] + 8;
      id v283 = v118;
      do
      {
        os_log_t v124 = &v280[40 * (void)v119];
        uint64_t v125 = *((void *)v124 + 3);
        uint64_t v126 = *((void *)v124 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v302 = v126;
        uint64_t v127 = swift_bridgeObjectRetain();
        id v296 = (id)MEMORY[0x1C87594F0](v127);
        uint64_t v128 = qword_1EA2DD5F0;
        swift_bridgeObjectRetain();
        if (v128 != -1) {
          swift_once();
        }
        id v129 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        swift_bridgeObjectRetain();
        uint64_t v130 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        id v131 = (void *)sub_1C254F2C0();
        swift_bridgeObjectRelease();
        id v132 = objc_msgSend(v129, sel_initWithString_attributes_, v130, v131);

        if (v125)
        {
          uint64_t v133 = qword_1EA2DD600;
          swift_bridgeObjectRetain();
          uint64_t v134 = v302;
          if (v133 != -1) {
            swift_once();
          }
          id v135 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
          swift_bridgeObjectRetain();
          uint64_t v136 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
          uint64_t v137 = (void *)sub_1C254F2C0();
          swift_bridgeObjectRelease();
          id v138 = objc_msgSend(v135, sel_initWithString_attributes_, v136, v137);
        }
        else
        {
          id v138 = 0;
          uint64_t v134 = v302;
        }
        id v139 = objc_msgSend(v132, sel_string, v266);
        uint64_t v140 = sub_1C254F470();
        unint64_t v142 = v141;

        swift_bridgeObjectRelease();
        uint64_t v143 = HIBYTE(v142) & 0xF;
        if ((v142 & 0x2000000000000000) == 0) {
          uint64_t v143 = v140 & 0xFFFFFFFFFFFFLL;
        }
        double v144 = 0.0;
        double v145 = 0.0;
        double v146 = 0.0;
        if (v143)
        {
          objc_msgSend(v132, sel_size);
          double v145 = ceil(v147);
          double v146 = ceil(v148);
        }
        id v293 = v132;
        v149 = v13;
        uint64_t v150 = 0;
        if (v138)
        {
          double v144 = sub_1C24A09D8();
          uint64_t v150 = v151;
        }
        uint64_t v152 = sub_1C2394D18();
        uint64_t v288 = sub_1C24A2C68(v152);
        swift_bridgeObjectRelease();
        sub_1C24A1ACC(0, (unint64_t *)&qword_1EBB6F4E0, v275, MEMORY[0x1E4FBBE00]);
        uint64_t v153 = swift_allocObject();
        *(_OWORD *)(v153 + 16) = xmmword_1C255CEB0;
        uint64_t v154 = *(void *)(v134 + 16);
        if (v154)
        {
          *(void *)&v305[0] = v149;
          sub_1C2550490();
          id v155 = (long long *)(v134 + 32);
          do
          {
            long long v310 = v155[1];
            long long v311 = v155[2];
            long long v312 = v155[3];
            LOBYTE(v313) = *((unsigned char *)v155 + 64);
            long long v156 = *v155;
            id v155 = (long long *)((char *)v155 + 72);
            long long v309 = v156;
            sub_1C24A1F6C((unint64_t)&v309);
            sub_1C2550460();
            sub_1C25504A0();
            sub_1C25504B0();
            sub_1C2550470();
            --v154;
          }
          while (v154);
          unint64_t v120 = *(void **)&v305[0];
          id v13 = v149;
        }
        else
        {
          id v13 = v149;
          unint64_t v120 = v149;
        }
        uint64_t v119 = (char *)v119 + 1;
        _s15SizedValueGroupCMa();
        uint64_t v121 = swift_allocObject();
        *(void *)(v121 + 24) = 0;
        *(void *)(v121 + 32) = 0;
        *(void *)(v121 + 16) = 0;
        *(unsigned char *)(v121 + 40) = 1;
        *(void *)(v121 + 48) = v120;
        *(void *)(v153 + 32) = v121;
        *(void *)&v305[0] = v153;
        sub_1C254F730();
        uint64_t v122 = *(void *)&v305[0];
        sub_1C21F4424((uint64_t)&v306, (uint64_t)v305);
        _s11SizedRecordCMa();
        uint64_t v123 = swift_allocObject();
        *(void *)(v123 + 128) = 0;
        *(unsigned char *)(v123 + 136) = 1;
        *(void *)(v123 + 16) = v293;
        *(double *)(v123 + 24) = v145;
        *(double *)(v123 + 32) = v146;
        *(void *)(v123 + 40) = v138;
        *(double *)(v123 + 48) = v144;
        *(void *)(v123 + 56) = v150;
        *(unsigned char *)(v123 + 64) = v138 == 0;
        *(void *)(v123 + 72) = v288;
        *(void *)(v123 + 80) = v122;
        sub_1C21F44EC(v305, v123 + 88);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
      }
      while (v119 != v283);
      goto LABEL_103;
    case 3:
      sub_1C21F4424((uint64_t)v308, (uint64_t)&v306);
      char v157 = *(void **)(v10 + 16);
      id v13 = (void *)MEMORY[0x1E4FBC860];
      if (!v157) {
        goto LABEL_104;
      }
      uint64_t v307 = MEMORY[0x1E4FBC860];
      sub_1C2550490();
      v158 = 0;
      v281 = (char *)(v10 + 32);
      uint64_t v276 = MEMORY[0x1E4FBC838] + 8;
      id v284 = v157;
      do
      {
        v163 = &v281[40 * (void)v158];
        uint64_t v164 = *((void *)v163 + 3);
        uint64_t v165 = *((void *)v163 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v303 = v165;
        uint64_t v166 = swift_bridgeObjectRetain();
        id v297 = (id)MEMORY[0x1C87594F0](v166);
        uint64_t v167 = qword_1EA2DD5F0;
        swift_bridgeObjectRetain();
        if (v167 != -1) {
          swift_once();
        }
        id v168 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        swift_bridgeObjectRetain();
        v169 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        v170 = (void *)sub_1C254F2C0();
        swift_bridgeObjectRelease();
        id v171 = objc_msgSend(v168, sel_initWithString_attributes_, v169, v170);

        if (v164)
        {
          uint64_t v172 = qword_1EA2DD600;
          swift_bridgeObjectRetain();
          if (v172 != -1) {
            swift_once();
          }
          id v173 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
          swift_bridgeObjectRetain();
          v174 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
          v175 = (void *)sub_1C254F2C0();
          swift_bridgeObjectRelease();
          id v176 = objc_msgSend(v173, sel_initWithString_attributes_, v174, v175);
        }
        else
        {
          id v176 = 0;
        }
        id v177 = objc_msgSend(v171, sel_string, v266);
        uint64_t v178 = sub_1C254F470();
        unint64_t v180 = v179;

        swift_bridgeObjectRelease();
        uint64_t v181 = HIBYTE(v180) & 0xF;
        if ((v180 & 0x2000000000000000) == 0) {
          uint64_t v181 = v178 & 0xFFFFFFFFFFFFLL;
        }
        double v182 = 0.0;
        double v183 = 0.0;
        double v184 = 0.0;
        if (v181)
        {
          objc_msgSend(v171, sel_size);
          double v183 = ceil(v185);
          double v184 = ceil(v186);
        }
        v187 = v13;
        uint64_t v188 = 0;
        if (v176)
        {
          double v182 = sub_1C24A09D8();
          uint64_t v188 = v189;
        }
        uint64_t v190 = sub_1C2394F58();
        uint64_t v289 = sub_1C24A2C68(v190);
        swift_bridgeObjectRelease();
        sub_1C24A1ACC(0, (unint64_t *)&qword_1EBB6F4E0, v276, MEMORY[0x1E4FBBE00]);
        uint64_t v191 = swift_allocObject();
        *(_OWORD *)(v191 + 16) = xmmword_1C255CEB0;
        uint64_t v192 = *(void *)(v303 + 16);
        if (v192)
        {
          *(void *)&v305[0] = v187;
          sub_1C2550490();
          v193 = (long long *)(v303 + 32);
          do
          {
            long long v310 = v193[1];
            long long v311 = v193[2];
            long long v312 = v193[3];
            long long v313 = v193[4];
            long long v194 = *v193;
            v193 += 5;
            long long v309 = v194;
            sub_1C24A2758();
            sub_1C2550460();
            sub_1C25504A0();
            sub_1C25504B0();
            sub_1C2550470();
            --v192;
          }
          while (v192);
          id v159 = *(void **)&v305[0];
          id v13 = v187;
        }
        else
        {
          id v13 = v187;
          id v159 = v187;
        }
        v158 = (char *)v158 + 1;
        _s15SizedValueGroupCMa();
        uint64_t v160 = swift_allocObject();
        *(void *)(v160 + 24) = 0;
        *(void *)(v160 + 32) = 0;
        *(void *)(v160 + 16) = 0;
        *(unsigned char *)(v160 + 40) = 1;
        *(void *)(v160 + 48) = v159;
        *(void *)(v191 + 32) = v160;
        *(void *)&v305[0] = v191;
        sub_1C254F730();
        uint64_t v161 = *(void *)&v305[0];
        sub_1C21F4424((uint64_t)&v306, (uint64_t)v305);
        _s11SizedRecordCMa();
        uint64_t v162 = swift_allocObject();
        *(void *)(v162 + 128) = 0;
        *(unsigned char *)(v162 + 136) = 1;
        *(void *)(v162 + 16) = v171;
        *(double *)(v162 + 24) = v183;
        *(double *)(v162 + 32) = v184;
        *(void *)(v162 + 40) = v176;
        *(double *)(v162 + 48) = v182;
        *(void *)(v162 + 56) = v188;
        *(unsigned char *)(v162 + 64) = v176 == 0;
        *(void *)(v162 + 72) = v289;
        *(void *)(v162 + 80) = v161;
        sub_1C21F44EC(v305, v162 + 88);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
      }
      while (v158 != v284);
LABEL_103:
      id v13 = (void *)v307;
LABEL_104:
      v195 = &v306;
      goto LABEL_147;
    case 4:
      sub_1C21F4424((uint64_t)v308, (uint64_t)&v309);
      uint64_t v196 = *(void *)(v10 + 16);
      id v13 = (void *)MEMORY[0x1E4FBC860];
      if (!v196) {
        goto LABEL_146;
      }
      *(void *)&v305[0] = MEMORY[0x1E4FBC860];
      sub_1C2550490();
      uint64_t v197 = 0;
      uint64_t v269 = v10 + 32;
      uint64_t v272 = v196;
      break;
    default:
      sub_1C21F4424((uint64_t)v308, (uint64_t)&v309);
      uint64_t v12 = *(void *)(v10 + 16);
      id v13 = (void *)MEMORY[0x1E4FBC860];
      if (!v12) {
        goto LABEL_146;
      }
      *(void *)&v305[0] = MEMORY[0x1E4FBC860];
      sub_1C2550490();
      uint64_t v14 = 0;
      uint64_t v270 = MEMORY[0x1E4FBC838] + 8;
      uint64_t v268 = v12;
      do
      {
        uint64_t v286 = v14;
        uint64_t v20 = v10 + 32 + 40 * v14;
        uint64_t v21 = *(void *)(v20 + 24);
        uint64_t v22 = *(void *)(v20 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v299 = v22;
        uint64_t v23 = swift_bridgeObjectRetain();
        v278 = (void *)MEMORY[0x1C87594F0](v23);
        uint64_t v24 = qword_1EA2DD5F0;
        swift_bridgeObjectRetain();
        if (v24 != -1) {
          swift_once();
        }
        id v25 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        swift_bridgeObjectRetain();
        uint64_t v26 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        uint64_t v27 = (void *)sub_1C254F2C0();
        swift_bridgeObjectRelease();
        id v295 = objc_msgSend(v25, sel_initWithString_attributes_, v26, v27);

        if (v21)
        {
          uint64_t v28 = qword_1EA2DD600;
          swift_bridgeObjectRetain();
          if (v28 != -1) {
            swift_once();
          }
          id v29 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
          swift_bridgeObjectRetain();
          uint64_t v30 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
          uint64_t v31 = (void *)sub_1C254F2C0();
          swift_bridgeObjectRelease();
          id v291 = objc_msgSend(v29, sel_initWithString_attributes_, v30, v31);
        }
        else
        {
          id v291 = 0;
        }
        id v32 = objc_msgSend(v295, sel_string, v266);
        uint64_t v33 = sub_1C254F470();
        unint64_t v35 = v34;

        swift_bridgeObjectRelease();
        uint64_t v36 = HIBYTE(v35) & 0xF;
        if ((v35 & 0x2000000000000000) == 0) {
          uint64_t v36 = v33 & 0xFFFFFFFFFFFFLL;
        }
        double v37 = 0.0;
        double v38 = 0.0;
        double v39 = 0.0;
        if (v36)
        {
          objc_msgSend(v295, sel_size);
          double v38 = ceil(v40);
          double v39 = ceil(v41);
        }
        double v42 = 0.0;
        if (v291)
        {
          id v43 = objc_msgSend(v291, sel_string);
          uint64_t v44 = sub_1C254F470();
          unint64_t v46 = v45;

          swift_bridgeObjectRelease();
          uint64_t v47 = HIBYTE(v46) & 0xF;
          if ((v46 & 0x2000000000000000) == 0) {
            uint64_t v47 = v44 & 0xFFFFFFFFFFFFLL;
          }
          if (v47)
          {
            objc_msgSend(v291, sel_size);
            double v37 = ceil(v48);
            double v42 = ceil(v49);
          }
        }
        sub_1C24A1ACC(0, (unint64_t *)&qword_1EBB6F4E0, v270, MEMORY[0x1E4FBBE00]);
        uint64_t v50 = swift_allocObject();
        uint64_t v16 = v50;
        *(_OWORD *)(v50 + 16) = xmmword_1C255CEB0;
        uint64_t v51 = *(void *)(v299 + 16);
        if (v51)
        {
          uint64_t v273 = v50;
          *(void *)&long long v306 = v13;
          sub_1C2550490();
          uint64_t v52 = v299 + 40;
          do
          {
            uint64_t v62 = qword_1EA2DD5D0;
            swift_bridgeObjectRetain();
            if (v62 != -1) {
              swift_once();
            }
            id v63 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
            swift_bridgeObjectRetain();
            id v64 = (void *)sub_1C254F430();
            swift_bridgeObjectRelease();
            double v65 = (void *)sub_1C254F2C0();
            swift_bridgeObjectRelease();
            id v66 = objc_msgSend(v63, sel_initWithString_attributes_, v64, v65);

            id v67 = objc_msgSend(v66, sel_string);
            uint64_t v68 = sub_1C254F470();
            unint64_t v70 = v69;

            swift_bridgeObjectRelease();
            uint64_t v71 = HIBYTE(v70) & 0xF;
            if ((v70 & 0x2000000000000000) == 0) {
              uint64_t v71 = v68 & 0xFFFFFFFFFFFFLL;
            }
            if (v71)
            {
              objc_msgSend(v66, sel_size);
              double v54 = ceil(v53);
              double v56 = ceil(v55);
            }
            else
            {
              double v54 = 0.0;
              double v56 = 0.0;
            }
            v52 += 16;
            uint64_t v57 = swift_allocObject();
            *(_OWORD *)(v57 + 16) = xmmword_1C255CEB0;
            *(void *)(v57 + 32) = v66;
            uint64_t v307 = v57;
            sub_1C254F730();
            uint64_t v58 = v307;
            sub_1C24A1ACC(0, &qword_1EA2DF4F8, MEMORY[0x1E4FBC958], MEMORY[0x1E4FBBE00]);
            uint64_t v59 = swift_allocObject();
            *(_OWORD *)(v59 + 16) = xmmword_1C255CD90;
            *(double *)(v59 + 32) = v54;
            uint64_t v60 = swift_allocObject();
            *(_OWORD *)(v60 + 16) = xmmword_1C255CD90;
            *(double *)(v60 + 32) = v56;
            _s10SizedValueCMa();
            uint64_t v61 = swift_allocObject();
            *(void *)(v61 + 48) = 0;
            *(unsigned char *)(v61 + 56) = 1;
            *(void *)(v61 + 16) = v58;
            *(void *)(v61 + 24) = v59;
            *(void *)(v61 + 32) = v60;
            *(unsigned char *)(v61 + 40) = 0;
            sub_1C2550460();
            sub_1C25504A0();
            sub_1C25504B0();
            sub_1C2550470();
            --v51;
          }
          while (v51);
          id v15 = (void *)v306;
          id v13 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v12 = v268;
          uint64_t v16 = v273;
        }
        else
        {
          id v15 = v13;
        }
        uint64_t v14 = v286 + 1;
        _s15SizedValueGroupCMa();
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 24) = 0;
        *(void *)(v17 + 32) = 0;
        *(void *)(v17 + 16) = 0;
        *(unsigned char *)(v17 + 40) = 1;
        *(void *)(v17 + 48) = v15;
        *(void *)(v16 + 32) = v17;
        *(void *)&long long v306 = v16;
        sub_1C254F730();
        uint64_t v18 = v306;
        sub_1C21F4424((uint64_t)&v309, (uint64_t)&v306);
        _s11SizedRecordCMa();
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 128) = 0;
        *(unsigned char *)(v19 + 136) = 1;
        *(void *)(v19 + 16) = v295;
        *(double *)(v19 + 24) = v38;
        *(double *)(v19 + 32) = v39;
        *(void *)(v19 + 40) = v291;
        *(double *)(v19 + 48) = v37;
        *(double *)(v19 + 56) = v42;
        *(unsigned char *)(v19 + 64) = v291 == 0;
        *(void *)(v19 + 72) = 0;
        *(void *)(v19 + 80) = v18;
        sub_1C21F44EC(&v306, v19 + 88);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
      }
      while (v286 + 1 != v12);
      goto LABEL_145;
  }
  do
  {
    uint64_t v201 = v269 + 40 * v197;
    uint64_t v202 = *(void *)(v201 + 24);
    uint64_t v203 = *(void *)(v201 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v290 = v203;
    uint64_t v204 = swift_bridgeObjectRetain();
    v277 = (void *)MEMORY[0x1C87594F0](v204);
    uint64_t v205 = qword_1EA2DD5F0;
    swift_bridgeObjectRetain();
    if (v205 != -1) {
      swift_once();
    }
    id v206 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    swift_bridgeObjectRetain();
    v207 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    v208 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v285 = objc_msgSend(v206, sel_initWithString_attributes_, v207, v208);

    if (v202)
    {
      uint64_t v209 = qword_1EA2DD600;
      swift_bridgeObjectRetain();
      if (v209 != -1) {
        swift_once();
      }
      id v210 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      swift_bridgeObjectRetain();
      v211 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      v212 = (void *)sub_1C254F2C0();
      swift_bridgeObjectRelease();
      id v282 = objc_msgSend(v210, sel_initWithString_attributes_, v211, v212);
    }
    else
    {
      id v282 = 0;
    }
    uint64_t v199 = v272;
    id v213 = objc_msgSend(v285, sel_string, v266);
    uint64_t v214 = sub_1C254F470();
    unint64_t v216 = v215;

    swift_bridgeObjectRelease();
    uint64_t v217 = HIBYTE(v216) & 0xF;
    if ((v216 & 0x2000000000000000) == 0) {
      uint64_t v217 = v214 & 0xFFFFFFFFFFFFLL;
    }
    double v218 = 0.0;
    double v219 = 0.0;
    double v220 = 0.0;
    if (v217)
    {
      objc_msgSend(v285, sel_size);
      double v219 = ceil(v221);
      double v220 = ceil(v222);
    }
    double v223 = 0.0;
    uint64_t v224 = v290;
    if (v282)
    {
      id v225 = objc_msgSend(v282, sel_string);
      uint64_t v226 = sub_1C254F470();
      unint64_t v228 = v227;

      swift_bridgeObjectRelease();
      uint64_t v229 = HIBYTE(v228) & 0xF;
      if ((v228 & 0x2000000000000000) == 0) {
        uint64_t v229 = v226 & 0xFFFFFFFFFFFFLL;
      }
      if (v229)
      {
        objc_msgSend(v282, sel_size);
        double v218 = ceil(v230);
        double v223 = ceil(v231);
      }
      uint64_t v224 = v290;
    }
    v232 = *(void **)(v224 + 16);
    if (v232)
    {
      uint64_t v271 = v197;
      uint64_t v307 = (uint64_t)v13;
      id v294 = v232;
      sub_1C2550490();
      uint64_t v233 = 0;
      v298 = (void *)(v224 + 32);
      while (1)
      {
        uint64_t v304 = v233;
        uint64_t v236 = v298[3 * v233 + 2];
        id v237 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v238 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        v239 = (void *)sub_1C254F2C0();
        swift_bridgeObjectRelease();
        id v240 = objc_msgSend(v237, sel_initWithString_attributes_, v238, v239);

        id v241 = objc_msgSend(v240, sel_string);
        uint64_t v242 = sub_1C254F470();
        unint64_t v244 = v243;

        swift_bridgeObjectRelease();
        uint64_t v245 = HIBYTE(v244) & 0xF;
        if ((v244 & 0x2000000000000000) == 0) {
          uint64_t v245 = v242 & 0xFFFFFFFFFFFFLL;
        }
        if (v245)
        {
          objc_msgSend(v240, sel_size);
          double v247 = ceil(v246);
          double v249 = ceil(v248);
          a1 = *(void *)(v236 + 16);
          if (!a1) {
            goto LABEL_139;
          }
        }
        else
        {
          double v247 = 0.0;
          double v249 = 0.0;
          a1 = *(void *)(v236 + 16);
          if (!a1)
          {
LABEL_139:
            swift_bridgeObjectRetain();
            v250 = v13;
            goto LABEL_140;
          }
        }
        sub_1C24A1A74();
        v250 = (void *)swift_allocObject();
        int64_t v251 = _swift_stdlib_malloc_size(v250);
        uint64_t v252 = v251 - 32;
        if (v251 < 32) {
          uint64_t v252 = v251 - 1;
        }
        v250[2] = a1;
        v250[3] = 2 * (v252 >> 5);
        uint64_t v253 = sub_1C23C9EA8((uint64_t)&v306, v250 + 4, a1, v236);
        swift_bridgeObjectRetain_n();
        sub_1C21ABD08();
        if (v253 != a1)
        {
          __break(1u);
          goto LABEL_149;
        }
        swift_bridgeObjectRelease();
LABEL_140:
        *(void *)&long long v306 = v250;
        sub_1C249DE94((void **)&v306);
        swift_bridgeObjectRelease();
        uint64_t v254 = v306;
        uint64_t v255 = *(void *)(v306 + 16);
        if (v255)
        {
          *(void *)&long long v306 = v13;
          sub_1C2550490();
          uint64_t v256 = v254 + 56;
          do
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1C24A0A8C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C2550460();
            sub_1C25504A0();
            sub_1C25504B0();
            sub_1C2550470();
            v256 += 32;
            --v255;
          }
          while (v255);
          v234 = (void *)v306;
          swift_release();
        }
        else
        {
          swift_release();
          v234 = v13;
        }
        uint64_t v233 = v304 + 1;
        _s15SizedValueGroupCMa();
        uint64_t v235 = swift_allocObject();
        *(void *)(v235 + 16) = v240;
        *(double *)(v235 + 24) = v247;
        *(double *)(v235 + 32) = v249;
        *(unsigned char *)(v235 + 40) = 0;
        *(void *)(v235 + 48) = v234;
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
        if ((id)(v304 + 1) == v294)
        {
          v198 = (void *)v307;
          uint64_t v197 = v271;
          uint64_t v199 = v272;
          goto LABEL_108;
        }
      }
    }
    v198 = v13;
LABEL_108:
    ++v197;
    sub_1C21F4424((uint64_t)&v309, (uint64_t)&v306);
    _s11SizedRecordCMa();
    uint64_t v200 = swift_allocObject();
    *(void *)(v200 + 128) = 0;
    *(unsigned char *)(v200 + 136) = 1;
    *(void *)(v200 + 16) = v285;
    *(double *)(v200 + 24) = v219;
    *(double *)(v200 + 32) = v220;
    *(void *)(v200 + 40) = v282;
    *(double *)(v200 + 48) = v218;
    *(double *)(v200 + 56) = v223;
    *(unsigned char *)(v200 + 64) = v282 == 0;
    *(void *)(v200 + 72) = 0;
    *(void *)(v200 + 80) = v198;
    sub_1C21F44EC(&v306, v200 + 88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C2550460();
    sub_1C25504A0();
    sub_1C25504B0();
    sub_1C2550470();
  }
  while (v197 != v199);
LABEL_145:
  id v13 = *(void **)&v305[0];
LABEL_146:
  v195 = &v309;
LABEL_147:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v195);
  double v257 = sub_1C24A09D8();
  uint64_t v259 = v258;
  objc_msgSend(v266, sel_size);
  double v261 = ceil(v260);
  double v263 = ceil(v262);
  _s12SizedSectionCMa();
  uint64_t v264 = swift_allocObject();
  *(void *)(v264 + 112) = 0;
  *(unsigned char *)(v264 + 120) = 1;
  *(void *)(v264 + 128) = 0;
  *(unsigned char *)(v264 + 136) = 1;
  *(void *)(v264 + 144) = 0;
  *(unsigned char *)(v264 + 152) = 1;
  *(void *)(v264 + 16) = v267;
  *(double *)(v264 + 24) = v257;
  *(void *)(v264 + 32) = v259;
  *(void *)(v264 + 40) = v266;
  *(double *)(v264 + 48) = v261;
  *(double *)(v264 + 56) = v263;
  *(void *)(v264 + 64) = v13;
  sub_1C21F44EC(v308, v264 + 72);
  return v264;
}

id sub_1C24A07D8(uint64_t a1, void (*a2)(void))
{
  a2();
  if (qword_1EA2DD5E0 != -1) {
    swift_once();
  }
  id v2 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  id v3 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C21F1054();
  uint64_t v4 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v2, sel_initWithString_attributes_, v3, v4);

  return v5;
}

id sub_1C24A08D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3();
  if (qword_1EA2DD630 != -1) {
    swift_once();
  }
  id v3 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C21F1054();
  id v5 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_initWithString_attributes_, v4, v5);

  return v6;
}

double sub_1C24A09D8()
{
  id v1 = objc_msgSend(v0, sel_string);
  uint64_t v2 = sub_1C254F470();
  unint64_t v4 = v3;

  swift_bridgeObjectRelease();
  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return 0.0;
  }
  objc_msgSend(v0, sel_size);
  return ceil(v6);
}

double sub_1C24A0A68()
{
  return sub_1C24A09D8();
}

uint64_t sub_1C24A0A8C()
{
  uint64_t v0 = qword_1EA2DD5D0;
  swift_bridgeObjectRetain();
  if (v0 != -1) {
    swift_once();
  }
  id v1 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C21F1054();
  unint64_t v3 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v1, sel_initWithString_attributes_, v2, v3);

  double v5 = sub_1C24A09D8();
  uint64_t v7 = v6;
  id v8 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v8, sel_initWithString_attributes_, v9, v10);

  double v12 = sub_1C24A09D8();
  uint64_t v14 = v13;
  id v15 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C24A1ACC(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C255CD70;
  *(void *)(v16 + 32) = v4;
  *(void *)(v16 + 40) = v11;
  uint64_t v20 = v16;
  sub_1C254F730();
  sub_1C24A1ACC(0, &qword_1EA2DF4F8, MEMORY[0x1E4FBC958], v15);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C255CDA0;
  *(double *)(v17 + 32) = v5;
  *(double *)(v17 + 40) = v12;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C255CDA0;
  *(void *)(v18 + 32) = v7;
  *(void *)(v18 + 40) = v14;
  _s10SizedValueCMa();
  uint64_t result = swift_allocObject();
  *(void *)(result + 48) = 0;
  *(unsigned char *)(result + 56) = 1;
  *(void *)(result + 16) = v20;
  *(void *)(result + 24) = v17;
  *(void *)(result + 32) = v18;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

uint64_t sub_1C24A0D50(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C2550800();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1C24A1450(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v110 = result;
  unint64_t v107 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      id v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      uint64_t v98 = v11;
      uint64_t v109 = v8;
      if (v12 >= 2)
      {
        uint64_t v99 = *v107;
        do
        {
          unint64_t v100 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v99) {
            goto LABEL_159;
          }
          double v101 = v98;
          uint64_t v102 = *(void *)&v98[16 * v100 + 32];
          uint64_t v103 = *(void *)&v98[16 * v12 + 24];
          sub_1C24A1534((char *)(v99 + 32 * v102), (char *)(v99 + 32 * *(void *)&v98[16 * v12 + 16]), v99 + 32 * v103, __dst);
          if (v1) {
            break;
          }
          if (v103 < v102) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v101 = sub_1C23F321C((uint64_t)v101);
          }
          if (v100 >= *((void *)v101 + 2)) {
            goto LABEL_149;
          }
          double v104 = &v101[16 * v100 + 32];
          *(void *)double v104 = v102;
          *((void *)v104 + 1) = v103;
          unint64_t v105 = *((void *)v101 + 2);
          if (v12 > v105) {
            goto LABEL_150;
          }
          memmove(&v101[16 * v12 + 16], &v101[16 * v12 + 32], 16 * (v105 - v12));
          uint64_t v98 = v101;
          *((void *)v101 + 2) = v105 - 1;
          unint64_t v12 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v109 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v109 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_1C2283D00();
    uint64_t v7 = sub_1C254F780();
    *(void *)(v7 + 16) = v6;
    uint64_t v109 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v108 = *a1 + 8;
  uint64_t v106 = *a1 + 24;
  id v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v111 = v3;
  uint64_t v112 = *a1;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 32 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 32 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1C2550870();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v108 + 32 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 32 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1C2550870()))
      {
        goto LABEL_36;
      }
      v21 += 4;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 32 * v20;
        uint64_t v26 = 32 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            id v29 = (_OWORD *)(v10 + v26);
            uint64_t v30 = v10 + v25;
            long long v31 = *(_OWORD *)(v10 + v26);
            uint64_t v32 = *(void *)(v10 + v26 + 16);
            uint64_t v33 = *(void *)(v10 + v26 + 24);
            long long v34 = *(_OWORD *)(v10 + v25 - 16);
            _OWORD *v29 = *(_OWORD *)(v10 + v25 - 32);
            v29[1] = v34;
            *(_OWORD *)(v30 - 32) = v31;
            *(void *)(v30 - 16) = v32;
            *(void *)(v30 - 8) = v33;
          }
          ++v28;
          v25 -= 32;
          v26 += 32;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v110) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v11 = sub_1C23F277C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v48 = *((void *)v11 + 2);
    unint64_t v47 = *((void *)v11 + 3);
    unint64_t v12 = v48 + 1;
    if (v48 >= v47 >> 1) {
      id v11 = sub_1C23F277C((char *)(v47 > 1), v48 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    double v49 = v11 + 32;
    uint64_t v50 = &v11[16 * v48 + 32];
    *(void *)uint64_t v50 = v13;
    *((void *)v50 + 1) = v9;
    if (v48)
    {
      uint64_t v10 = v112;
      while (1)
      {
        unint64_t v51 = v12 - 1;
        if (v12 >= 4)
        {
          double v56 = &v49[16 * v12];
          uint64_t v57 = *((void *)v56 - 8);
          uint64_t v58 = *((void *)v56 - 7);
          BOOL v62 = __OFSUB__(v58, v57);
          uint64_t v59 = v58 - v57;
          if (v62) {
            goto LABEL_135;
          }
          uint64_t v61 = *((void *)v56 - 6);
          uint64_t v60 = *((void *)v56 - 5);
          BOOL v62 = __OFSUB__(v60, v61);
          uint64_t v54 = v60 - v61;
          char v55 = v62;
          if (v62) {
            goto LABEL_136;
          }
          unint64_t v63 = v12 - 2;
          id v64 = &v49[16 * v12 - 32];
          uint64_t v66 = *(void *)v64;
          uint64_t v65 = *((void *)v64 + 1);
          BOOL v62 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          if (v62) {
            goto LABEL_138;
          }
          BOOL v62 = __OFADD__(v54, v67);
          uint64_t v68 = v54 + v67;
          if (v62) {
            goto LABEL_141;
          }
          if (v68 >= v59)
          {
            uint64_t v86 = &v49[16 * v51];
            uint64_t v88 = *(void *)v86;
            uint64_t v87 = *((void *)v86 + 1);
            BOOL v62 = __OFSUB__(v87, v88);
            uint64_t v89 = v87 - v88;
            if (v62) {
              goto LABEL_145;
            }
            BOOL v79 = v54 < v89;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v80 = *((void *)v11 + 4);
            uint64_t v81 = *((void *)v11 + 5);
            BOOL v62 = __OFSUB__(v81, v80);
            uint64_t v73 = v81 - v80;
            char v74 = v62;
            goto LABEL_99;
          }
          uint64_t v53 = *((void *)v11 + 4);
          uint64_t v52 = *((void *)v11 + 5);
          BOOL v62 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          char v55 = v62;
        }
        if (v55) {
          goto LABEL_137;
        }
        unint64_t v63 = v12 - 2;
        unint64_t v69 = &v49[16 * v12 - 32];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v72 = __OFSUB__(v70, v71);
        uint64_t v73 = v70 - v71;
        char v74 = v72;
        if (v72) {
          goto LABEL_140;
        }
        uint64_t v75 = &v49[16 * v51];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v62 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v62) {
          goto LABEL_143;
        }
        if (__OFADD__(v73, v78)) {
          goto LABEL_144;
        }
        if (v73 + v78 >= v54)
        {
          BOOL v79 = v54 < v78;
LABEL_105:
          if (v79) {
            unint64_t v51 = v63;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v74) {
          goto LABEL_139;
        }
        uint64_t v82 = &v49[16 * v51];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v62 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v62) {
          goto LABEL_142;
        }
        if (v85 < v73) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v90 = v51 - 1;
        if (v51 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        double v91 = v11;
        uint64_t v92 = v10;
        id v93 = &v49[16 * v90];
        uint64_t v94 = *(void *)v93;
        uint64_t v95 = &v49[16 * v51];
        uint64_t v96 = *((void *)v95 + 1);
        sub_1C24A1534((char *)(v92 + 32 * *(void *)v93), (char *)(v92 + 32 * *(void *)v95), v92 + 32 * v96, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v96 < v94) {
          goto LABEL_132;
        }
        if (v51 > *((void *)v91 + 2)) {
          goto LABEL_133;
        }
        *(void *)id v93 = v94;
        *(void *)&v49[16 * v90 + 8] = v96;
        unint64_t v97 = *((void *)v91 + 2);
        if (v51 >= v97) {
          goto LABEL_134;
        }
        id v11 = v91;
        unint64_t v12 = v97 - 1;
        memmove(&v49[16 * v51], v95 + 16, 16 * (v97 - 1 - v51));
        *((void *)v91 + 2) = v97 - 1;
        BOOL v79 = v97 > 2;
        uint64_t v10 = v112;
        if (!v79) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v112;
LABEL_15:
    uint64_t v3 = v111;
    if (v9 >= v111)
    {
      uint64_t v8 = v109;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v110)) {
    goto LABEL_153;
  }
  if (v13 + v110 >= v3) {
    uint64_t v35 = v3;
  }
  else {
    uint64_t v35 = v13 + v110;
  }
  if (v35 >= v13)
  {
    if (v9 != v35)
    {
      uint64_t v36 = (void *)(v106 + 32 * v9);
      do
      {
        double v37 = (uint64_t *)(v10 + 32 * v9);
        uint64_t v38 = *v37;
        uint64_t v39 = v37[1];
        uint64_t v40 = v13;
        double v41 = v36;
        do
        {
          double v42 = (long long *)(v41 - 7);
          BOOL v43 = v38 == *(v41 - 7) && v39 == *(v41 - 6);
          if (v43 || (sub_1C2550870() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          long long v45 = *v42;
          long long v44 = *(_OWORD *)(v41 - 5);
          *(v41 - 4) = *v41;
          v41 -= 4;
          uint64_t v38 = v41[1];
          uint64_t v39 = v41[2];
          uint64_t v46 = v41[3];
          void v42[2] = v45;
          v42[3] = v44;
          *(v41 - 3) = v38;
          *(v41 - 2) = v39;
          *(v41 - 1) = v46;
          ++v40;
        }
        while (v9 != v40);
        ++v9;
        v36 += 4;
      }
      while (v9 != v35);
      uint64_t v9 = v35;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1C25505E0();
  __break(1u);
  return result;
}

uint64_t sub_1C24A1450(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 32 * a3 + 24;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 32 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (void *)v8;
    while (1)
    {
      uint64_t v13 = (long long *)(v12 - 7);
      BOOL v14 = result == *(v12 - 7) && v10 == *(v12 - 6);
      if (v14 || (uint64_t result = sub_1C2550870(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 32;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      long long v16 = *v13;
      long long v15 = *(_OWORD *)(v12 - 5);
      *(v12 - 4) = *v12;
      v12 -= 4;
      uint64_t result = v12[1];
      uint64_t v10 = v12[2];
      uint64_t v17 = v12[3];
      v13[2] = v16;
      v13[3] = v15;
      *(v12 - 3) = result;
      *(v12 - 2) = v10;
      *(v12 - 1) = v17;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C24A1534(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 31;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 5;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 31;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 5;
  long long v31 = __src;
  uint64_t v30 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst) {
        memmove(__dst, a2, 32 * v13);
      }
      int v19 = &v4[32 * v13];
      id v29 = v19;
      long long v31 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        uint64_t v20 = (char *)(a3 - 32);
        uint64_t v21 = v6;
        while (1)
        {
          uint64_t v22 = v20 + 32;
          uint64_t v23 = *((void *)v21 - 4);
          uint64_t v24 = *((void *)v21 - 3);
          v21 -= 32;
          BOOL v25 = *((void *)v19 - 4) == v23 && *((void *)v19 - 3) == v24;
          if (v25 || (sub_1C2550870() & 1) == 0)
          {
            id v29 = v19 - 32;
            if (v22 < v19 || v20 >= v19 || v22 != v19)
            {
              long long v27 = *((_OWORD *)v19 - 1);
              *(_OWORD *)uint64_t v20 = *((_OWORD *)v19 - 2);
              *((_OWORD *)v20 + 1) = v27;
            }
            uint64_t v21 = v6;
            v19 -= 32;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v22 != v6 || v20 >= v6)
            {
              long long v26 = *((_OWORD *)v21 + 1);
              *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
              *((_OWORD *)v20 + 1) = v26;
            }
            long long v31 = v21;
            if (v21 <= v7) {
              goto LABEL_50;
            }
          }
          v20 -= 32;
          uint64_t v6 = v21;
          if (v19 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst) {
      memmove(__dst, __src, 32 * v10);
    }
    BOOL v14 = &v4[32 * v10];
    id v29 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1C2550870() & 1) == 0)
        {
          if (v7 != v4)
          {
            long long v18 = *((_OWORD *)v4 + 1);
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
            *((_OWORD *)v7 + 1) = v18;
          }
          v4 += 32;
          uint64_t v30 = v4;
          long long v16 = v6;
        }
        else
        {
          long long v16 = v6 + 32;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
          {
            long long v17 = *((_OWORD *)v6 + 1);
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
            *((_OWORD *)v7 + 1) = v17;
          }
        }
        v7 += 32;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      long long v31 = v7;
    }
LABEL_50:
    sub_1C23F3004((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

void sub_1C24A17D0()
{
  uint64_t v0 = qword_1EA2DD7F8;
  swift_bridgeObjectRetain();
  if (v0 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EA303C90;
  uint64_t v2 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v2, v1);

  if (v3)
  {
    id v4 = objc_msgSend(self, sel_textAttachmentWithImage_, v3);

    sub_1C21AB51C(0, &qword_1EA2E3C40);
    id v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v4);
    sub_1C254F5A0();
    if (qword_1EA2DD620 != -1) {
      swift_once();
    }
    id v6 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1C21F1054();
    int64_t v8 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v6, sel_initWithString_attributes_, v7, v8, 32, 0xE100000000000000);

    objc_msgSend(v5, sel_appendAttributedString_, v9);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C24A1A18()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1C24A1A50(uint64_t a1)
{
  return sub_1C24A07D8(a1, *(void (**)(void))(v1 + 16));
}

id sub_1C24A1A6C(uint64_t a1, uint64_t a2)
{
  return sub_1C24A08D8(a1, a2, *(void (**)(void))(v2 + 16));
}

void sub_1C24A1A74()
{
  if (!qword_1EA2DF6A8)
  {
    sub_1C2283D00();
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF6A8);
    }
  }
}

void sub_1C24A1ACC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C24A1B18()
{
  uint64_t v0 = qword_1EA2DD5D0;
  swift_bridgeObjectRetain();
  if (v0 != -1) {
    swift_once();
  }
  id v1 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C21F1054();
  id v3 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v1, sel_initWithString_attributes_, v2, v3);

  double v5 = sub_1C24A09D8();
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  if (qword_1EA2DD5F0 != -1) {
    swift_once();
  }
  id v8 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
  swift_bridgeObjectRetain();
  id v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v8, sel_initWithString_attributes_, v9, v10);

  uint64_t v12 = qword_1EA2DD600;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  id v13 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  BOOL v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  BOOL v15 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v13, (SEL)&selRef_errorHandler, v14, v15);

  objc_msgSend(v11, sel_appendAttributedString_, v16);
  double v17 = sub_1C24A09D8();
  uint64_t v19 = v18;
  uint64_t v20 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C24A1ACC(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C255CD70;
  *(void *)(v21 + 32) = v4;
  id v22 = v4;
  objc_msgSend(v11, sel_copy);
  sub_1C25501E0();
  swift_unknownObjectRelease();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E2900);
  swift_dynamicCast();
  sub_1C254F730();
  uint64_t v23 = v21;
  sub_1C24A1ACC(0, &qword_1EA2DF4F8, MEMORY[0x1E4FBC958], v20);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C255CDA0;
  *(double *)(v24 + 32) = v5;
  *(double *)(v24 + 40) = v17;
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C255CDA0;
  *(void *)(v25 + 32) = v7;
  *(void *)(v25 + 40) = v19;

  _s10SizedValueCMa();
  uint64_t result = swift_allocObject();
  *(void *)(result + 48) = 0;
  *(unsigned char *)(result + 56) = 1;
  *(void *)(result + 16) = v23;
  *(void *)(result + 24) = v24;
  *(void *)(result + 32) = v25;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

uint64_t sub_1C24A1F6C(unint64_t a1)
{
  uint64_t v2 = qword_1EA2DD5D0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  id v3 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  id v4 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C21F1054();
  double v5 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  uint64_t v6 = &selRef_addSubview_;
  id v7 = objc_msgSend(v3, sel_initWithString_attributes_, v4, v5);

  double v56 = v7;
  double v8 = sub_1C24A09D8();
  uint64_t v10 = v9;
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  id v11 = &unk_1EA2DD000;
  int v58 = *(unsigned __int8 *)(a1 + 64);
  if (v58 == 1)
  {
    if (qword_1EA2DD5F0 != -1) {
      goto LABEL_29;
    }
  }
  else if (qword_1EA2DD608 != -1)
  {
    goto LABEL_29;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    id v12 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
    id v13 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    BOOL v14 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v57 = objc_msgSend(v12, v6[460], v13, v14);

    if (!v58)
    {
      uint64_t v16 = v11[193];
      swift_bridgeObjectRetain();
      if (v16 == -1) {
        goto LABEL_11;
      }
LABEL_31:
      swift_once();
      goto LABEL_11;
    }
    uint64_t v15 = qword_1EA2DD600;
    swift_bridgeObjectRetain();
    if (v15 != -1) {
      goto LABEL_31;
    }
LABEL_11:
    swift_bridgeObjectRetain();
    id v17 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v18 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    uint64_t v19 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(v17, sel_initWithString_attributes_, v18, v19);

    objc_msgSend(v57, sel_appendAttributedString_, v20);
    double v21 = sub_1C24A09D8();
    uint64_t v23 = v22;
    uint64_t v24 = *(void *)(a1 + 48);
    a1 = *(void *)(a1 + 56);
    uint64_t v25 = qword_1EA2DD600;
    swift_bridgeObjectRetain();
    if (v25 != -1) {
      swift_once();
    }
    id v26 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    swift_bridgeObjectRetain();
    uint64_t v55 = v24;
    long long v27 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    uint64_t v28 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

    double v30 = sub_1C24A09D8();
    uint64_t v32 = v31;
    if ((v58 & 1) == 0)
    {
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v33 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();
    }
    if (qword_1EA2DD610 != -1) {
      swift_once();
    }
    id v34 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    swift_bridgeObjectRetain();
    uint64_t v35 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    uint64_t v36 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v37 = objc_msgSend(v34, sel_initWithString_attributes_, v35, v36);

    double v38 = sub_1C24A09D8();
    uint64_t v40 = v39;
    double v41 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1C24A1ACC(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1C255DBA0;
    *(void *)(v42 + 32) = v56;
    id v11 = v56;
    uint64_t v6 = (char **)v57;
    objc_msgSend(v57, sel_copy);
    sub_1C25501E0();
    swift_unknownObjectRelease();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E2900);
    swift_dynamicCast();
    *(void *)(v42 + 48) = v29;
    *(void *)(v42 + 56) = v37;
    sub_1C254F730();
    uint64_t v43 = v42;
    sub_1C24A1ACC(0, &qword_1EA2DF4F8, MEMORY[0x1E4FBC958], v41);
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1C255F7E0;
    *(double *)(v44 + 32) = v8;
    *(double *)(v44 + 40) = v21;
    *(double *)(v44 + 48) = v30;
    *(double *)(v44 + 56) = v38;
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1C255F7E0;
    *(void *)(v45 + 32) = v10;
    *(void *)(v45 + 40) = v23;
    *(void *)(v45 + 48) = v32;
    *(void *)(v45 + 56) = v40;
    id v46 = v29;
    id v47 = v37;
    uint64_t v48 = sub_1C254F580();
    uint64_t v49 = sub_1C254F580();
    BOOL v50 = __OFADD__(v48, v49);
    uint64_t v51 = v48 + v49;
    if (!v50) {
      break;
    }
    __break(1u);
LABEL_29:
    swift_once();
  }

  if (v51 >= 15)
  {
    uint64_t v53 = HIBYTE(a1) & 0xF;
    if ((a1 & 0x2000000000000000) == 0) {
      uint64_t v53 = v55 & 0xFFFFFFFFFFFFLL;
    }
    if (v53) {
      char v52 = 0;
    }
    else {
      char v52 = v58;
    }
  }
  else
  {
    char v52 = 0;
  }
  _s10SizedValueCMa();
  uint64_t result = swift_allocObject();
  *(void *)(result + 48) = 0;
  *(unsigned char *)(result + 56) = 1;
  *(void *)(result + 16) = v43;
  *(void *)(result + 24) = v44;
  *(void *)(result + 32) = v45;
  *(unsigned char *)(result + 40) = v52;
  return result;
}

uint64_t sub_1C24A2758()
{
  uint64_t v0 = qword_1EA2DD5D0;
  swift_bridgeObjectRetain();
  if (v0 != -1) {
    swift_once();
  }
  id v1 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C21F1054();
  id v3 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v1, sel_initWithString_attributes_, v2, v3);

  id v41 = v4;
  double v42 = sub_1C24A09D8();
  uint64_t v43 = v5;
  id v6 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  double v8 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v6, sel_initWithString_attributes_, v7, v8);

  double v10 = sub_1C24A09D8();
  uint64_t v12 = v11;
  id v13 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  BOOL v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v13, sel_initWithString_attributes_, v14, v15);

  id v40 = v16;
  double v17 = sub_1C24A09D8();
  uint64_t v19 = v18;
  id v20 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  double v21 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v22 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

  double v24 = sub_1C24A09D8();
  uint64_t v26 = v25;
  uint64_t v27 = qword_1EA2DD600;
  swift_bridgeObjectRetain();
  if (v27 != -1) {
    swift_once();
  }
  id v28 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  swift_bridgeObjectRetain();
  id v29 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  double v30 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v31 = objc_msgSend(v28, sel_initWithString_attributes_, v29, v30);

  double v32 = sub_1C24A09D8();
  uint64_t v34 = v33;
  uint64_t v35 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C24A1ACC(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1C255DB90;
  *(void *)(v36 + 32) = v41;
  *(void *)(v36 + 40) = v9;
  *(void *)(v36 + 48) = v40;
  *(void *)(v36 + 56) = v23;
  *(void *)(v36 + 64) = v31;
  uint64_t v44 = v36;
  sub_1C254F730();
  sub_1C24A1ACC(0, &qword_1EA2DF4F8, MEMORY[0x1E4FBC958], v35);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1C2561290;
  *(double *)(v37 + 32) = v42;
  *(double *)(v37 + 40) = v10;
  *(double *)(v37 + 48) = v17;
  *(double *)(v37 + 56) = v24;
  *(double *)(v37 + 64) = v32;
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1C2561290;
  *(void *)(v38 + 32) = v43;
  *(void *)(v38 + 40) = v12;
  *(void *)(v38 + 48) = v19;
  *(void *)(v38 + 56) = v26;
  *(void *)(v38 + 64) = v34;
  _s10SizedValueCMa();
  uint64_t result = swift_allocObject();
  *(void *)(result + 48) = 0;
  *(unsigned char *)(result + 56) = 1;
  *(void *)(result + 16) = v44;
  *(void *)(result + 24) = v37;
  *(void *)(result + 32) = v38;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

uint64_t sub_1C24A2C68(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    unint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1C2550490();
    uint64_t v4 = a1 + 40;
    do
    {
      uint64_t v5 = qword_1EA2DD5F8;
      swift_bridgeObjectRetain();
      if (v5 != -1) {
        swift_once();
      }
      v4 += 16;
      id v6 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      swift_bridgeObjectRetain();
      id v7 = (void *)sub_1C254F430();
      type metadata accessor for Key(0);
      sub_1C21F1054();
      double v8 = (void *)sub_1C254F2C0();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_initWithString_attributes_, v7, v8);
      swift_bridgeObjectRelease();

      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      --v1;
    }
    while (v1);
    unint64_t v2 = v31;
  }
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (!v9) {
    goto LABEL_23;
  }
  uint64_t v32 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C2275090(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    uint64_t v12 = 0;
    uint64_t v10 = v32;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x1C87588E0](v12, v2);
      }
      else {
        id v13 = *(id *)(v2 + 8 * v12 + 32);
      }
      BOOL v14 = v13;
      id v15 = objc_msgSend(v13, sel_string, v28);
      uint64_t v16 = sub_1C254F470();
      unint64_t v18 = v17;

      swift_bridgeObjectRelease();
      uint64_t v19 = HIBYTE(v18) & 0xF;
      if ((v18 & 0x2000000000000000) == 0) {
        uint64_t v19 = v16 & 0xFFFFFFFFFFFFLL;
      }
      if (v19)
      {
        objc_msgSend(v14, sel_size);
        long long v28 = v21;
        float64_t v29 = v20;

        v22.f64[0] = v29;
        *(void *)&v22.f64[1] = v28;
        float64x2_t v23 = vrndpq_f64(v22);
      }
      else
      {

        float64x2_t v23 = 0uLL;
      }
      unint64_t v25 = *(void *)(v32 + 16);
      unint64_t v24 = *(void *)(v32 + 24);
      if (v25 >= v24 >> 1)
      {
        float64x2_t v30 = v23;
        sub_1C2275090(v24 > 1, v25 + 1, 1);
        float64x2_t v23 = v30;
      }
      ++v12;
      *(void *)(v32 + 16) = v25 + 1;
      *(float64x2_t *)(v32 + 16 * v25 + 32) = v23;
    }
    while (v9 != v12);
LABEL_23:
    uint64_t v26 = sub_1C249DD0C(v10);
    uint64_t v27 = sub_1C249DDD0(v10);
    swift_bridgeObjectRelease();
    _s10SizedValueCMa();
    uint64_t result = swift_allocObject();
    *(void *)(result + 48) = 0;
    *(unsigned char *)(result + 56) = 1;
    *(void *)(result + 16) = v2;
    *(void *)(result + 24) = v26;
    *(void *)(result + 32) = v27;
    *(unsigned char *)(result + 40) = 0;
    return result;
  }
  __break(1u);
  return result;
}

id NSLayoutConstraint.withPriority(_:)()
{
  objc_msgSend(v0, sel_setPriority_);
  return v2;
}

void sub_1C24A2FFC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1C254E560();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  CFMutableDataRef v41 = (CFMutableDataRef)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA58]), sel_init);
  CGDataConsumerRef v9 = CGDataConsumerCreateWithCFData(v41);
  double v42 = a2;
  if (v9)
  {
    uint64_t v10 = v9;
    if (qword_1EA2DD500 != -1) {
      swift_once();
    }
    CGFloat v11 = *(double *)&qword_1EA3038A0;
    if (qword_1EA2DD508 != -1) {
      swift_once();
    }
    mediaBox.origin.y = 0.0;
    mediaBox.origin.x = 0.0;
    mediaBox.size.width = v11;
    *(void *)&mediaBox.size.height = qword_1EA3038A8;
    CGContextRef v12 = CGPDFContextCreate(v10, &mediaBox, 0);

    if (v12)
    {
      uint64_t v40 = v2;
      sub_1C24A34A4();
      uint64_t v14 = a1 + *(int *)(v13 + 28);
      uint64_t v15 = *(void *)(v14 + *(int *)(_s13ConfigurationVMa() + 40));
      unint64_t v16 = *(void *)(a1 + 112);
      if (v16 >> 62)
      {
        uint64_t v36 = v12;
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_1C2550620();
        if (v17) {
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        unint64_t v18 = v12;
        swift_bridgeObjectRetain();
        if (v17)
        {
LABEL_9:
          CGFloat v19 = *(double *)a1;
          CGFloat v20 = *(double *)(a1 + 24);
          uint64_t v21 = *(void *)(a1 + 64);
          uint64_t v22 = *(void *)(a1 + 96);
          char v23 = *(unsigned char *)(a1 + 104);
          uint64_t v24 = *(void *)(a1 + 120);
          uint64_t v25 = *(void *)(a1 + 144);
          char v44 = *(unsigned char *)(a1 + 72);
          char v43 = v23;
          mediaBox.origin.x = v19;
          *(_OWORD *)&mediaBox.origin.y = *(_OWORD *)(a1 + 8);
          mediaBox.size.height = v20;
          long long v26 = *(_OWORD *)(a1 + 48);
          long long v46 = *(_OWORD *)(a1 + 32);
          long long v47 = v26;
          uint64_t v48 = v21;
          char v49 = v44;
          long long v50 = *(_OWORD *)(a1 + 80);
          uint64_t v51 = v22;
          char v52 = v23;
          unint64_t v53 = v16;
          uint64_t v54 = v24;
          long long v55 = *(_OWORD *)(a1 + 128);
          uint64_t v56 = v25;
          long long v57 = *(_OWORD *)(a1 + 152);
          if (v17 < 1) {
            __break(1u);
          }
          uint64_t v27 = 0;
          do
          {
            if ((v16 & 0xC000000000000001) != 0)
            {
              uint64_t v28 = MEMORY[0x1C87588E0](v27, v16);
            }
            else
            {
              uint64_t v28 = *(void *)(v16 + 8 * v27 + 32);
              swift_retain();
            }
            ++v27;
            float64_t v29 = (void *)MEMORY[0x1C87594F0]();
            CGPDFContextBeginPage(v12, 0);
            CGContextTranslateCTM(v12, 0.0, *(CGFloat *)&qword_1EA3038A8);
            CGContextScaleCTM(v12, 1.0, -1.0);
            sub_1C24A34FC((uint64_t)&mediaBox, v12, v15);
            sub_1C24A506C((id)v28, v12, v15);
            sub_1C24A56B8((uint64_t)&mediaBox, *(void **)(v28 + 72), v12, v15, *(double *)(v28 + 80), *(double *)(v28 + 88));
            CGPDFContextEndPage(v12);
            swift_release();
          }
          while (v17 != v27);
        }
      }
      swift_bridgeObjectRelease();
      CGPDFContextClose(v12);
      uint64_t v37 = v41;
      uint64_t v34 = sub_1C254C940();
      unint64_t v35 = v38;

      goto LABEL_21;
    }
  }
  sub_1C254E510();
  float64x2_t v30 = sub_1C254E550();
  os_log_type_t v31 = sub_1C254FA20();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl(&dword_1C21A1000, v30, v31, "[PDF]: Failed to create a PDF context to render in.", v32, 2u);
    MEMORY[0x1C875A0B0](v32, -1, -1);
    CFMutableDataRef v33 = v41;
  }
  else
  {
    CFMutableDataRef v33 = (CFMutableDataRef)v30;
    float64x2_t v30 = v41;
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v34 = 0;
  unint64_t v35 = 0xF000000000000000;
LABEL_21:
  uint64_t v39 = v42;
  *double v42 = v34;
  v39[1] = v35;
}

void sub_1C24A34A4()
{
  if (!qword_1EA2E21C0)
  {
    unint64_t v0 = _s7PDFDataVMa();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E21C0);
    }
  }
}

void sub_1C24A34FC(uint64_t a1, CGContext *a2, uint64_t a3)
{
  if (qword_1EA2DD510 != -1) {
    swift_once();
  }
  double v6 = *(double *)&qword_1EA3038B0;
  if (qword_1EA2DD540 != -1) {
    swift_once();
  }
  double v7 = *(double *)&qword_1EA3038E0;
  if (qword_1EA2DD570 != -1) {
    swift_once();
  }
  double v8 = v6 + v7;
  double v9 = *(double *)&qword_1EA303910;
  double v11 = *(double *)(a1 + 8);
  double v10 = *(double *)(a1 + 16);
  id v12 = *(id *)a1;
  id v13 = objc_msgSend(*(id *)a1, sel_string);
  uint64_t v14 = sub_1C254F470();
  unint64_t v16 = v15;

  swift_bridgeObjectRelease();
  uint64_t v17 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v17 = v14 & 0xFFFFFFFFFFFFLL;
  }
  if (v17)
  {
    if (a3 == 1) {
      double v18 = v6 + v9 - v11;
    }
    else {
      double v18 = v6 + 0.0;
    }
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), sel_init);
    objc_msgSend(v19, sel_setMinimumScaleFactor_, 1.0);
    UIGraphicsPushContext(a2);
    objc_msgSend(v12, sel_drawWithRect_options_context_, 1, v19, v18, v8, v11, v10);
    UIGraphicsPopContext();
  }
  double v20 = v8 + v10;
  sub_1C24A5C74(a1 + 48, (uint64_t)v68, &qword_1EA2E4278, (void (*)(uint64_t))sub_1C24A5C34);
  sub_1C24A5C74((uint64_t)v68, (uint64_t)&v69, &qword_1EA2E4278, (void (*)(uint64_t))sub_1C24A5C34);
  if (v69)
  {
    uint64_t v21 = *(void **)(a1 + 80);
    if (v21)
    {
      sub_1C24A5C74(a1 + 88, (uint64_t)v67, &qword_1EA2E4280, type metadata accessor for CGSize);
      sub_1C24A5C74((uint64_t)v67, (uint64_t)v70, &qword_1EA2E4280, type metadata accessor for CGSize);
      if ((v71 & 1) == 0)
      {
        double v22 = *(double *)v70;
        double v23 = *(double *)&v70[1];
        double v24 = *(double *)&qword_1EA303910;
        id v25 = v21;
        id v26 = objc_msgSend(v25, sel_string);
        uint64_t v27 = sub_1C254F470();
        unint64_t v29 = v28;

        swift_bridgeObjectRelease();
        uint64_t v30 = HIBYTE(v29) & 0xF;
        if ((v29 & 0x2000000000000000) == 0) {
          uint64_t v30 = v27 & 0xFFFFFFFFFFFFLL;
        }
        if (v30)
        {
          if (a3 == 1) {
            double v31 = v6 + 0.0;
          }
          else {
            double v31 = v6 + v24 - v22;
          }
          id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), (SEL)&selRef_addAccessoryButton_);
          objc_msgSend(v32, sel_setMinimumScaleFactor_, 1.0);
          UIGraphicsPushContext(a2);
          objc_msgSend(v25, sel_drawWithRect_options_context_, 1, v32, v31, v20 - v23, v22, v23);
          UIGraphicsPopContext();

          id v25 = v32;
        }
      }
    }
  }
  if (qword_1EA2DD548 != -1) {
    swift_once();
  }
  double v33 = v20 + *(double *)&qword_1EA3038E8;
  double v34 = *(double *)&qword_1EA303910;
  double v35 = *(double *)(a1 + 32);
  double v36 = *(double *)(a1 + 40);
  uint64_t v37 = *(void **)(a1 + 24);
  id v38 = objc_msgSend(v37, sel_string);
  uint64_t v39 = sub_1C254F470();
  unint64_t v41 = v40;

  swift_bridgeObjectRelease();
  uint64_t v42 = HIBYTE(v41) & 0xF;
  if ((v41 & 0x2000000000000000) == 0) {
    uint64_t v42 = v39 & 0xFFFFFFFFFFFFLL;
  }
  if (v42)
  {
    if (a3 == 1) {
      double v43 = v6 + v34 - v35;
    }
    else {
      double v43 = v6 + 0.0;
    }
    id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), (SEL)&selRef_addAccessoryButton_);
    objc_msgSend(v44, sel_setMinimumScaleFactor_, 1.0);
    UIGraphicsPushContext(a2);
    objc_msgSend(v37, sel_drawWithRect_options_context_, 1, v44, v43, v33, v35, v36);
    UIGraphicsPopContext();
  }
  uint64_t v45 = *(void **)(a1 + 48);
  if (v45)
  {
    id v46 = *(id *)(a1 + 48);
    if (*(unsigned char *)(a1 + 72)) {
      goto LABEL_36;
    }
LABEL_40:
    long long v47 = (double *)(a1 + 56);
    long long v50 = (double *)(a1 + 64);
LABEL_42:
    double v51 = *v50;
    double v52 = *v47;
    double v53 = *(double *)&qword_1EA303910;
    id v54 = v45;
    id v55 = objc_msgSend(v46, sel_string);
    uint64_t v56 = sub_1C254F470();
    unint64_t v58 = v57;

    swift_bridgeObjectRelease();
    uint64_t v59 = HIBYTE(v58) & 0xF;
    if ((v58 & 0x2000000000000000) == 0) {
      uint64_t v59 = v56 & 0xFFFFFFFFFFFFLL;
    }
    if (v59)
    {
      if (a3 == 1) {
        double v60 = v6 + 0.0;
      }
      else {
        double v60 = v6 + v53 - v52;
      }
      id v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), (SEL)&selRef_addAccessoryButton_);
      objc_msgSend(v61, sel_setMinimumScaleFactor_, 1.0);
      UIGraphicsPushContext(a2);
      objc_msgSend(v46, sel_drawWithRect_options_context_, 1, v61, v60, v33, v52, v51);
      UIGraphicsPopContext();

      id v46 = v61;
    }
    goto LABEL_49;
  }
  char v49 = *(void **)(a1 + 80);
  if (!v49) {
    goto LABEL_50;
  }
  id v46 = v49;
  if ((*(unsigned char *)(a1 + 72) & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  sub_1C24A5C74(a1 + 88, (uint64_t)v66, &qword_1EA2E4280, type metadata accessor for CGSize);
  long long v47 = (double *)v72;
  sub_1C24A5C74((uint64_t)v66, (uint64_t)v72, &qword_1EA2E4280, type metadata accessor for CGSize);
  if ((v73[8] & 1) == 0)
  {
    long long v50 = (double *)v73;
    goto LABEL_42;
  }
  id v48 = v45;
LABEL_49:

LABEL_50:
  double v62 = *(double *)&qword_1EA3038B0;
  if (qword_1EA2DD538 != -1) {
    swift_once();
  }
  double v63 = *(double *)&qword_1EA3038D8;
  CGFloat v64 = *(double *)&qword_1EA303910;
  CGContextSaveGState(a2);
  if (qword_1EA2DD8C8 != -1) {
    swift_once();
  }
  uint64_t v65 = (CGColor *)objc_msgSend((id)qword_1EA303D10, sel_CGColor);
  CGContextSetFillColorWithColor(a2, v65);

  v74.size.height = 0.5;
  v74.origin.x = v62;
  v74.origin.y = v62 + v63 + -0.5;
  v74.size.width = v64;
  CGContextFillRect(a2, v74);
  CGContextRestoreGState(a2);
}

double sub_1C24A3B9C(void *a1, char *a2, void *a3, CGContext *a4, uint64_t a5, CGFloat a6, double a7, double a8, double a9)
{
  if (qword_1EA2DD510 != -1) {
    goto LABEL_68;
  }
  while (1)
  {
    double v20 = *(double *)&qword_1EA3038B0;
    uint64_t v21 = a3[3];
    double v22 = (void *)a3[4];
    __swift_project_boxed_opaque_existential_1Tm(a3, v21);
    CGRect v74 = (void *)v22[4];
    double v23 = ((double (*)(uint64_t, void *))v74)(v21, v22);
    if (qword_1EA2DD570 == -1)
    {
      double v24 = (void *)*((void *)a2 + 2);
      if (!v24) {
        goto LABEL_70;
      }
    }
    else
    {
      swift_once();
      double v24 = (void *)*((void *)a2 + 2);
      if (!v24)
      {
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        id v26 = (id)MEMORY[0x1C87588E0](0, v10);
        goto LABEL_14;
      }
    }
    double v70 = a7;
    double v71 = a8;
    double v11 = *((double *)a2 + 4);
    double v69 = v20;
    double v75 = v20 + a7;
    if (a5 == 1) {
      double v20 = v20 + *(double *)&qword_1EA303910 - a7 - v11;
    }
    else {
      double v20 = v20 + a7;
    }
    sub_1C23C667C();
    uint64_t v9 = a1[3];
    if (!*(void *)(v9 + 16)) {
      goto LABEL_71;
    }
    a7 = v25;
    if (*(double *)(v9 + 32) >= v11) {
      double v12 = v11;
    }
    else {
      double v12 = *(double *)(v9 + 32);
    }
    uint64_t v10 = a1[2];
    unint64_t v82 = v10 & 0xC000000000000001;
    if ((v10 & 0xC000000000000001) != 0) {
      goto LABEL_72;
    }
    if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    id v26 = *(id *)(v10 + 32);
LABEL_14:
    uint64_t v27 = v26;
    uint64_t v28 = a1[4];
    if (!*(void *)(v28 + 16)) {
      goto LABEL_74;
    }
    unint64_t v81 = v10;
    uint64_t v83 = a1[4];
    uint64_t v84 = v9;
    uint64_t v78 = a1;
    double v68 = a6;
    a6 = v23 + a6;
    double v29 = *(double *)(v28 + 32);
    id v30 = objc_msgSend(v26, sel_string);
    uint64_t v31 = sub_1C254F470();
    unint64_t v33 = v32;

    swift_bridgeObjectRelease();
    uint64_t v34 = HIBYTE(v33) & 0xF;
    if ((v33 & 0x2000000000000000) == 0) {
      uint64_t v34 = v31 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v9 = (uint64_t)&selRef_writtenDate;
    if (v34)
    {
      if (a5 == 1) {
        double v35 = v11 + v20 - v12;
      }
      else {
        double v35 = v75;
      }
      a8 = a6 + ceil((a7 - v29) * 0.5);
      id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), sel_init);
      objc_msgSend(v36, sel_setMinimumScaleFactor_, 1.0);
      UIGraphicsPushContext(a4);
      objc_msgSend(v27, sel_drawWithRect_options_context_, 33, v36, v35, a8, v12, v29);
      UIGraphicsPopContext();

      uint64_t v27 = v36;
    }
    a1 = (void *)v81;

    uint64_t v10 = v84;
    BOOL v72 = v22;
    uint64_t v73 = v21;
    if (!(v81 >> 62))
    {
      uint64_t v37 = *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v39 = (CGContext *)(v37 - 1);
      BOOL v38 = v37 == 1;
      if (v37 < 1) {
        goto LABEL_76;
      }
      goto LABEL_24;
    }
LABEL_75:
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_1C2550620();
    swift_bridgeObjectRelease();
    uint64_t v39 = (CGContext *)(v67 - 1);
    BOOL v38 = v67 == 1;
    if (v67 < 1)
    {
LABEL_76:
      __break(1u);
LABEL_77:
      swift_once();
      goto LABEL_31;
    }
LABEL_24:
    c = a4;
    if (v38) {
      break;
    }
    a4 = 0;
    double v53 = (CGContext *)((char *)v24 - 1);
    id v54 = a2 + 40;
    uint64_t v80 = v10 + 40;
    BOOL v79 = (CGContext *)((char *)v24 - 1);
    while (v39 != a4)
    {
      if (v53 == a4) {
        goto LABEL_64;
      }
      if (*(double *)&v54[8 * (void)a4] > 0.0)
      {
        a2 = (char *)a4 + 1;
        a1 = (void *)a3[3];
        uint64_t v9 = a3[4];
        __swift_project_boxed_opaque_existential_1Tm(a3, (uint64_t)a1);
        uint64_t v55 = (*(uint64_t (**)(void *, uint64_t))(v9 + 88))(a1, v9);
        char v56 = 0;
        double v57 = 0.0;
        if ((v58 & 1) == 0 && a2 == (char *)v55)
        {
          char v56 = *((unsigned char *)v78 + 40);
          double v57 = a9;
          if (!v56) {
            double v57 = 0.0;
          }
        }
        if ((unint64_t)a2 >= *(void *)(v10 + 16)) {
          goto LABEL_65;
        }
        if ((unint64_t)a2 >= *(void *)(v83 + 16)) {
          goto LABEL_66;
        }
        a8 = v57 + *(double *)&v54[8 * (void)a4];
        double v12 = *(double *)(v83 + 40 + 8 * (void)a4);
        if (*(double *)(v80 + 8 * (void)a4) >= a8) {
          double v59 = v57 + *(double *)&v54[8 * (void)a4];
        }
        else {
          double v59 = *(double *)(v80 + 8 * (void)a4);
        }
        a1 = (void *)a3[3];
        uint64_t v9 = a3[4];
        __swift_project_boxed_opaque_existential_1Tm(a3, (uint64_t)a1);
        double v60 = (*(double (**)(void *, uint64_t))(v9 + 16))(a1, v9);
        double v11 = v20 + v11 + v60;
        double v61 = v20 - v60 - a8;
        if (a5 == 1) {
          double v20 = v61;
        }
        else {
          double v20 = v11;
        }
        if (v82)
        {
          id v62 = (id)MEMORY[0x1C87588E0]((char *)a4 + 1, v81);
        }
        else
        {
          if ((unint64_t)a2 >= *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_67;
          }
          id v62 = *(id *)(v81 + 40 + 8 * (void)a4);
        }
        double v63 = v62;
        a1 = objc_msgSend(v62, sel_string);
        uint64_t v9 = sub_1C254F470();
        unint64_t v65 = v64;

        swift_bridgeObjectRelease();
        uint64_t v66 = HIBYTE(v65) & 0xF;
        if ((v65 & 0x2000000000000000) == 0) {
          uint64_t v66 = v9 & 0xFFFFFFFFFFFFLL;
        }
        if (v66)
        {
          if (a5 == 1) {
            a8 = a8 + v20 - v59;
          }
          else {
            a8 = v11;
          }
          a1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), sel_init);
          objc_msgSend(a1, sel_setMinimumScaleFactor_, 1.0);
          UIGraphicsPushContext(c);
          objc_msgSend(v63, sel_drawWithRect_options_context_, 33, a1, a8, a6 + ceil((a7 - v12) * 0.5), v59, v12);
          UIGraphicsPopContext();
        }
        else
        {
        }
        uint64_t v10 = v84;
        double v53 = v79;
        if (v56) {
          goto LABEL_26;
        }
        double v11 = *(double *)&v54[8 * (void)a4];
      }
      a4 = (CGContext *)((char *)a4 + 1);
      if (v39 == a4) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    swift_once();
  }
LABEL_26:
  uint64_t v40 = a3[3];
  uint64_t v41 = a3[4];
  __swift_project_boxed_opaque_existential_1Tm(a3, v40);
  double v24 = v72;
  uint64_t v10 = v73;
  double v22 = v74;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v41 + 56))(v40, v41) & 1) == 0) {
    goto LABEL_32;
  }
  double v11 = v71;
  if (a5 == 1) {
    double v20 = v69 + *(double *)&qword_1EA303910 - v70 - v71;
  }
  else {
    double v20 = v75;
  }
  double v42 = a7 + ((double (*)(uint64_t, void *))v74)(v73, v72) + v68;
  uint64_t v43 = a3[3];
  uint64_t v44 = a3[4];
  __swift_project_boxed_opaque_existential_1Tm(a3, v43);
  double v45 = v42 + (*(double (**)(uint64_t, uint64_t))(v44 + 40))(v43, v44);
  uint64_t v46 = a3[3];
  uint64_t v47 = a3[4];
  __swift_project_boxed_opaque_existential_1Tm(a3, v46);
  a6 = v45 - (*(double (**)(uint64_t, uint64_t))(v47 + 64))(v46, v47);
  uint64_t v39 = c;
  CGContextSaveGState(c);
  if (qword_1EA2DD8C8 != -1) {
    goto LABEL_77;
  }
LABEL_31:
  id v48 = (CGColor *)objc_msgSend((id)qword_1EA303D10, sel_CGColor);
  CGContextSetFillColorWithColor(v39, v48);

  v86.size.height = 0.5;
  v86.origin.x = v20;
  v86.origin.y = a6;
  v86.size.width = v11;
  CGContextFillRect(v39, v86);
  CGContextRestoreGState(v39);
LABEL_32:
  double v49 = a7 + ((double (*)(uint64_t, void *))v22)(v10, v24);
  uint64_t v50 = a3[3];
  uint64_t v51 = a3[4];
  __swift_project_boxed_opaque_existential_1Tm(a3, v50);
  return v49 + (*(double (**)(uint64_t, uint64_t))(v51 + 40))(v50, v51);
}

double sub_1C24A4330(uint64_t a1, char *a2, void *a3, CGContext *a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  double v100 = a6;
  if (qword_1EA2DD588 != -1) {
    swift_once();
  }
  double v17 = *(double *)&qword_1EA303928;
  uint64_t v18 = a3[3];
  uint64_t v19 = a3[4];
  __swift_project_boxed_opaque_existential_1Tm(a3, v18);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19))
  {
    if (qword_1EA2DD510 != -1) {
      swift_once();
    }
    double v20 = *(double *)&qword_1EA3038B0;
    uint64_t v21 = a3[3];
    uint64_t v22 = a3[4];
    __swift_project_boxed_opaque_existential_1Tm(a3, v21);
    double v23 = (*(double (**)(uint64_t, uint64_t))(v22 + 32))(v21, v22);
    double v24 = *(double *)(a1 + 24);
    double v109 = *(double *)(a1 + 32);
    double v25 = *(double *)&qword_1EA303928;
    if (qword_1EA2DD570 == -1)
    {
      if (a5 == 1)
      {
LABEL_8:
        double v26 = v20 + *(double *)&qword_1EA303910 - v25;
        double v27 = a7;
        double v108 = v26 - a7;
        double v28 = v26 - a7 + a7 - v24;
        goto LABEL_13;
      }
    }
    else
    {
      swift_once();
      if (a5 == 1) {
        goto LABEL_8;
      }
    }
    double v28 = v20 + v25;
    double v108 = v28;
    double v27 = a7;
LABEL_13:
    double v30 = v23 + v100;
    uint64_t v31 = *(void **)(a1 + 16);
    id v32 = objc_msgSend(v31, sel_string, *(void *)&v100);
    uint64_t v33 = sub_1C254F470();
    unint64_t v35 = v34;

    swift_bridgeObjectRelease();
    uint64_t v36 = HIBYTE(v35) & 0xF;
    if ((v35 & 0x2000000000000000) == 0) {
      uint64_t v36 = v33 & 0xFFFFFFFFFFFFLL;
    }
    if (v36)
    {
      id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), sel_init);
      objc_msgSend(v37, sel_setMinimumScaleFactor_, 1.0);
      UIGraphicsPushContext(a4);
      objc_msgSend(v31, sel_drawWithRect_options_context_, 1, v37, v28, v30, v24, v109);
      UIGraphicsPopContext();
    }
    BOOL v38 = *(void **)(a1 + 40);
    double v29 = v100;
    if (v38)
    {
      double v29 = v100;
      if ((*(unsigned char *)(a1 + 64) & 1) == 0)
      {
        double v39 = v30;
        double v41 = *(double *)(a1 + 48);
        double v40 = *(double *)(a1 + 56);
        uint64_t v42 = a3[3];
        uint64_t v43 = a3[4];
        __swift_project_boxed_opaque_existential_1Tm(a3, v42);
        uint64_t v110 = *(double (**)(uint64_t, uint64_t))(v43 + 16);
        id v44 = v38;
        double v45 = v110(v42, v43);
        id v46 = objc_msgSend(v44, sel_string);
        uint64_t v47 = sub_1C254F470();
        unint64_t v49 = v48;

        swift_bridgeObjectRelease();
        uint64_t v50 = HIBYTE(v49) & 0xF;
        if ((v49 & 0x2000000000000000) == 0) {
          uint64_t v50 = v47 & 0xFFFFFFFFFFFFLL;
        }
        if (v50)
        {
          if (a5 == 1) {
            double v51 = v108 - v45 - v41;
          }
          else {
            double v51 = v108 + v27 + v45;
          }
          id v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), sel_init);
          objc_msgSend(v52, sel_setMinimumScaleFactor_, 1.0);
          UIGraphicsPushContext(a4);
          objc_msgSend(v44, sel_drawWithRect_options_context_, 1, v52, v51, v39, v41, v40);
          UIGraphicsPopContext();
        }
        uint64_t v53 = a3[3];
        uint64_t v54 = a3[4];
        __swift_project_boxed_opaque_existential_1Tm(a3, v53);
        double v55 = sub_1C22B3D88(v53, v54, v40);
        uint64_t v56 = a3[3];
        uint64_t v57 = a3[4];
        __swift_project_boxed_opaque_existential_1Tm(a3, v56);
        double v58 = (*(double (**)(uint64_t, uint64_t))(v57 + 24))(v56, v57);

        double v29 = v55 + v58 + v100;
      }
    }
    uint64_t v59 = a3[3];
    uint64_t v60 = a3[4];
    __swift_project_boxed_opaque_existential_1Tm(a3, v59);
    double v17 = v17 + (*(double (**)(uint64_t, uint64_t))(v60 + 16))(v59, v60) + v27;
    if (*(void *)(a1 + 72)) {
      goto LABEL_28;
    }
    goto LABEL_29;
  }
  double v29 = v100;
  if (*(void *)(a1 + 72))
  {
LABEL_28:
    double v61 = (void *)swift_retain();
    double v62 = sub_1C24A3B9C(v61, a2, a3, a4, a5, v29, v17, a8, a9);
    swift_release();
    double v29 = v29 + v62;
  }
LABEL_29:
  unint64_t v63 = *(void *)(a1 + 80);
  if (v63 >> 62) {
    goto LABEL_69;
  }
  uint64_t v64 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v64; uint64_t v64 = sub_1C2550620())
  {
    unint64_t v65 = 0;
    unint64_t v106 = v63;
    unint64_t v107 = v63 & 0xC000000000000001;
    unint64_t v102 = v63 + 32;
    uint64_t v103 = v63 & 0xFFFFFFFFFFFFFF8;
    uint64_t v105 = v64;
    while (v107)
    {
      uint64_t v69 = MEMORY[0x1C87588E0](v65, v63);
      BOOL v70 = __OFADD__(v65++, 1);
      if (v70) {
        goto LABEL_66;
      }
LABEL_39:
      double v71 = *(void **)(v69 + 16);
      if (v71 && (*(unsigned char *)(v69 + 40) & 1) == 0)
      {
        double v72 = *(double *)(v69 + 32);
        uint64_t v73 = v69;
        double v104 = *(double *)(v69 + 24);
        uint64_t v74 = qword_1EA2DD510;
        id v75 = v71;
        if (v74 != -1) {
          swift_once();
        }
        double v76 = *(double *)&qword_1EA3038B0;
        uint64_t v77 = a3[3];
        uint64_t v78 = a3[4];
        __swift_project_boxed_opaque_existential_1Tm(a3, v77);
        double v79 = (*(double (**)(uint64_t, uint64_t))(v78 + 32))(v77, v78);
        if (qword_1EA2DD570 != -1) {
          swift_once();
        }
        double v80 = *(double *)&qword_1EA303910;
        id v81 = objc_msgSend(v75, sel_string, *(void *)&v100);
        uint64_t v82 = sub_1C254F470();
        unint64_t v84 = v83;

        swift_bridgeObjectRelease();
        uint64_t v85 = HIBYTE(v84) & 0xF;
        if ((v84 & 0x2000000000000000) == 0) {
          uint64_t v85 = v82 & 0xFFFFFFFFFFFFLL;
        }
        if (v85)
        {
          double v101 = v72;
          double v86 = v29 + v79;
          if (a5 == 1) {
            double v87 = v76 + v80 - v17 - v104;
          }
          else {
            double v87 = v17 + v76;
          }
          id v88 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), sel_init);
          objc_msgSend(v88, sel_setMinimumScaleFactor_, 1.0);
          UIGraphicsPushContext(a4);
          double v89 = v86;
          double v72 = v101;
          objc_msgSend(v75, sel_drawWithRect_options_context_, 1, v88, v87, v89, v104, v101);
          UIGraphicsPopContext();
        }
        uint64_t v90 = a3[3];
        unint64_t v63 = a3[4];
        __swift_project_boxed_opaque_existential_1Tm(a3, v90);
        double v91 = sub_1C22B3D88(v90, v63, v72);

        double v29 = v29 + v91;
        uint64_t v69 = v73;
      }
      uint64_t v92 = *(void *)(v69 + 48);
      if ((unint64_t)v92 >> 62)
      {
        if (v92 < 0) {
          unint64_t v63 = *(void *)(v69 + 48);
        }
        else {
          unint64_t v63 = v92 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        uint64_t v93 = sub_1C2550620();
        if (!v93) {
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v93 = *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v93) {
          goto LABEL_32;
        }
      }
      if (v93 < 1) {
        goto LABEL_67;
      }
      uint64_t v94 = 0;
      do
      {
        if ((v92 & 0xC000000000000001) != 0)
        {
          uint64_t v95 = (void *)MEMORY[0x1C87588E0](v94, v92);
        }
        else
        {
          uint64_t v95 = *(void **)(v92 + 8 * v94 + 32);
          swift_retain();
        }
        ++v94;
        uint64_t v96 = (void *)MEMORY[0x1C87594F0]();
        double v29 = v29 + sub_1C24A3B9C(v95, a2, a3, a4, a5, v29, v17, a8, a9);
        swift_release();
      }
      while (v93 != v94);
LABEL_32:
      swift_bridgeObjectRelease();
      uint64_t v66 = a3[3];
      uint64_t v67 = a3[4];
      __swift_project_boxed_opaque_existential_1Tm(a3, v66);
      double v68 = (*(double (**)(uint64_t, uint64_t))(v67 + 48))(v66, v67);
      swift_release();
      double v29 = v29 + v68;
      unint64_t v63 = v106;
      if (v65 == v105) {
        goto LABEL_70;
      }
    }
    if (v65 >= *(void *)(v103 + 16)) {
      goto LABEL_68;
    }
    uint64_t v69 = *(void *)(v102 + 8 * v65);
    swift_retain();
    BOOL v70 = __OFADD__(v65++, 1);
    if (!v70) {
      goto LABEL_39;
    }
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    swift_bridgeObjectRetain();
  }
LABEL_70:
  swift_bridgeObjectRelease();
  uint64_t v97 = a3[3];
  uint64_t v98 = a3[4];
  __swift_project_boxed_opaque_existential_1Tm(a3, v97);
  return v29 - v100 - (*(double (**)(uint64_t, uint64_t))(v98 + 48))(v97, v98);
}

void sub_1C24A4BF8(uint64_t a1, char *a2, CGContext *a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  if (qword_1EA2DD510 != -1) {
    swift_once();
  }
  double v12 = *(double *)&qword_1EA3038B0;
  if (qword_1EA2DD570 != -1) {
    swift_once();
  }
  double v13 = *(double *)(a1 + 48);
  if (a4 == 1) {
    double v14 = v12 + *(double *)&qword_1EA303910 - v13;
  }
  else {
    double v14 = v12 + 0.0;
  }
  unint64_t v15 = *(void **)(a1 + 40);
  if (qword_1EA2DD5B0 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_1EA2E09F0, sel_ascender);
  double v17 = v16;
  double v18 = COERCE_DOUBLE(sub_1C254FF20());
  if (v19) {
    double v18 = 0.0;
  }
  double v20 = v17 + v18;
  objc_msgSend(v15, sel_size);
  double v22 = v20 - v21 + a5;
  double v23 = *(double *)(a1 + 56);
  UIGraphicsPushContext(a3);
  objc_msgSend(v15, sel_drawInRect_, v14, v22, v13, v23);
  UIGraphicsPopContext();
  double v24 = *(void **)(a1 + 16);
  if (qword_1EA2DD588 != -1) {
    swift_once();
  }
  double v25 = *(double *)&qword_1EA303928;
  double v26 = *(double *)&qword_1EA303910;
  double v28 = *(double *)(a1 + 24);
  double v27 = *(double *)(a1 + 32);
  id v29 = objc_msgSend(v24, sel_string);
  uint64_t v30 = sub_1C254F470();
  unint64_t v32 = v31;

  swift_bridgeObjectRelease();
  uint64_t v33 = HIBYTE(v32) & 0xF;
  if ((v32 & 0x2000000000000000) == 0) {
    uint64_t v33 = v30 & 0xFFFFFFFFFFFFLL;
  }
  if (v33)
  {
    if (a4 == 1) {
      double v34 = v12 + v26 - v25 - v28;
    }
    else {
      double v34 = v12 + v25;
    }
    id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), sel_init);
    objc_msgSend(v35, sel_setMinimumScaleFactor_, 1.0);
    UIGraphicsPushContext(a3);
    objc_msgSend(v24, sel_drawWithRect_options_context_, 1, v35, v34, a5, v28, v27);
    UIGraphicsPopContext();
  }
  if (qword_1EA2DD580 != -1) {
    swift_once();
  }
  double v36 = v27 + *(double *)&qword_1EA303920;
  unint64_t v37 = *(void *)(a1 + 64);
  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1C2550620();
  }
  else
  {
    uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  double v39 = v36 + a5;
  uint64_t v53 = (void *)a1;
  if (!v38) {
    goto LABEL_32;
  }
  if (v38 >= 1)
  {
    uint64_t v40 = 0;
    double v41 = (void *)(a1 + 72);
    unint64_t v42 = v37 & 0xC000000000000001;
    unint64_t v43 = v37;
    do
    {
      if (v42)
      {
        uint64_t v44 = MEMORY[0x1C87588E0](v40, v37);
      }
      else
      {
        uint64_t v44 = *(void *)(v37 + 8 * v40 + 32);
        swift_retain();
      }
      ++v40;
      double v45 = (void *)MEMORY[0x1C87594F0]();
      double v46 = sub_1C24A4330(v44, a2, v41, a3, a4, v39, a6, a7, a8);
      uint64_t v47 = v53[12];
      uint64_t v48 = v53[13];
      __swift_project_boxed_opaque_existential_1Tm(v41, v47);
      double v39 = v39 + v46 + (*(double (**)(uint64_t, uint64_t))(v48 + 48))(v47, v48);
      swift_release();
      unint64_t v37 = v43;
    }
    while (v38 != v40);
LABEL_32:
    swift_bridgeObjectRelease();
    uint64_t v50 = v53[12];
    uint64_t v49 = v53[13];
    __swift_project_boxed_opaque_existential_1Tm(v53 + 9, v50);
    (*(double (**)(uint64_t, uint64_t))(v49 + 48))(v50, v49);
    return;
  }
  __break(1u);
}

void sub_1C24A506C(id a1, CGContext *a2, uint64_t a3)
{
  if (qword_1EA2DD578 != -1) {
    swift_once();
  }
  double v6 = *(double *)&qword_1EA303918;
  double v7 = (void *)*((void *)a1 + 3);
  double v8 = (double *)&unk_1EA303000;
  uint64_t v9 = &unk_1EA2DD000;
  uint64_t v10 = (double *)&unk_1EA303000;
  double v11 = &selRef_setUnsupportedSearchResults_;
  if (v7)
  {
    double v4 = *((double *)a1 + 4);
    double v12 = *((double *)a1 + 5);
    uint64_t v13 = qword_1EA2DD510;
    id v14 = v7;
    if (v13 != -1) {
      swift_once();
    }
    double v15 = *(double *)&qword_1EA3038B0;
    if (qword_1EA2DD570 != -1) {
      swift_once();
    }
    double v16 = *(double *)&qword_1EA303910;
    id v17 = objc_msgSend(v14, sel_string);
    uint64_t v18 = sub_1C254F470();
    unint64_t v20 = v19;

    swift_bridgeObjectRelease();
    uint64_t v21 = HIBYTE(v20) & 0xF;
    if ((v20 & 0x2000000000000000) == 0) {
      uint64_t v21 = v18 & 0xFFFFFFFFFFFFLL;
    }
    if (v21)
    {
      if (a3 == 1) {
        double v22 = v15 + v16 - v4;
      }
      else {
        double v22 = v15 + 0.0;
      }
      id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), sel_init);
      objc_msgSend(v23, sel_setMinimumScaleFactor_, 1.0);
      UIGraphicsPushContext(a2);
      objc_msgSend(v14, sel_drawWithRect_options_context_, 1, v23, v22, v6 + 0.0, v4, v12);
      UIGraphicsPopContext();
    }
    if (qword_1EA2DD568 != -1) {
      swift_once();
    }
    double v3 = *(double *)&qword_1EA303908;

    double v6 = v6 + v3;
  }
  unint64_t v24 = *((void *)a1 + 2);
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1C2550620();
    if (v25) {
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25)
    {
LABEL_20:
      if (v25 >= 1)
      {
        uint64_t v26 = 0;
        double v27 = *((double *)a1 + 12);
        id v60 = a1;
        uint64_t v28 = *((void *)a1 + 13);
        while (1)
        {
          if ((v24 & 0xC000000000000001) != 0)
          {
            id v29 = (void *)MEMORY[0x1C87588E0](v26, v24);
          }
          else
          {
            id v29 = *(void **)(v24 + 8 * v26 + 32);
            swift_retain();
          }
          uint64_t v30 = (void *)MEMORY[0x1C87594F0]();
          uint64_t v31 = sub_1C23C628C();
          uint64_t v32 = v31;
          if (*(void *)(v28 + 16) && (unint64_t v33 = sub_1C245774C(v31), (v34 & 1) != 0))
          {
            id v35 = (uint64_t *)(*(void *)(v28 + 56) + 24 * v33);
            uint64_t v36 = *v35;
            double v37 = *((double *)v35 + 1);
            double v38 = *((double *)v35 + 2);
            swift_bridgeObjectRetain();
          }
          else
          {
            if (v32 < 0)
            {
              sub_1C25505E0();
              __break(1u);
              return;
            }
            double v37 = 0.0;
            if (v32)
            {
              uint64_t v36 = sub_1C254F780();
              *(void *)(v36 + 16) = v32;
              bzero((void *)(v36 + 32), 8 * v32);
            }
            else
            {
              uint64_t v36 = MEMORY[0x1E4FBC860];
            }
            double v38 = 0.0;
          }
          sub_1C24A4BF8((uint64_t)v29, (char *)v36, a2, a3, v6, v27, v37, v38);
          double v40 = v39;
          swift_bridgeObjectRelease();
          uint64_t v42 = v29[12];
          uint64_t v41 = v29[13];
          __swift_project_boxed_opaque_existential_1Tm(v29 + 9, v42);
          double v43 = (*(double (**)(uint64_t, uint64_t))(v41 + 48))(v42, v41);
          if (qword_1EA2DD528 != -1) {
            swift_once();
          }
          ++v26;
          double v44 = v6 + v40;
          double v6 = v44 + *(double *)&qword_1EA3038C8;
          swift_release();
          if (v25 == v26)
          {
            swift_bridgeObjectRelease();
            double v6 = v44 + v43 + 0.0;
            uint64_t v10 = (double *)&unk_1EA303000;
            double v11 = &selRef_setUnsupportedSearchResults_;
            uint64_t v9 = (void *)&unk_1EA2DD000;
            a1 = v60;
            double v8 = (double *)&unk_1EA303000;
            goto LABEL_39;
          }
        }
      }
      __break(1u);
      goto LABEL_58;
    }
  }
  swift_bridgeObjectRelease();
  double v6 = 0.0;
LABEL_39:
  double v45 = (void *)*((void *)a1 + 6);
  if (v45)
  {
    double v4 = *((double *)a1 + 7);
    double v3 = *((double *)a1 + 8);
    uint64_t v46 = qword_1EA2DD510;
    id v47 = v45;
    id v59 = v47;
    if (v46 == -1)
    {
LABEL_41:
      double v48 = v8[278];
      if (qword_1EA2DD588 != -1)
      {
        swift_once();
        id v47 = v59;
      }
      double v49 = *(double *)&qword_1EA303928;
      if (v9[174] != -1)
      {
        swift_once();
        id v47 = v59;
      }
      double v50 = v10[290];
      id v51 = [v47 v11[74]];
      uint64_t v52 = sub_1C254F470();
      unint64_t v54 = v53;

      swift_bridgeObjectRelease();
      uint64_t v55 = HIBYTE(v54) & 0xF;
      if ((v54 & 0x2000000000000000) == 0) {
        uint64_t v55 = v52 & 0xFFFFFFFFFFFFLL;
      }
      if (v55)
      {
        if (a3 == 1) {
          double v56 = v48 + v50 - v49 - v4;
        }
        else {
          double v56 = v48 + v49;
        }
        id v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), sel_init);
        objc_msgSend(v57, sel_setMinimumScaleFactor_, 1.0);
        UIGraphicsPushContext(a2);
        objc_msgSend(v59, sel_drawWithRect_options_context_, 1, v57, v56, v6, v4, v3);
        UIGraphicsPopContext();

        double v58 = v57;
      }
      else
      {
        double v58 = v59;
      }

      return;
    }
LABEL_58:
    swift_once();
    id v47 = v59;
    goto LABEL_41;
  }
}

void sub_1C24A56B8(uint64_t a1, void *a2, CGContextRef c, uint64_t a4, double a5, double a6)
{
  double v9 = *(double *)(a1 + 160);
  double v56 = *(double *)(a1 + 152);
  if (qword_1EA2DD550 != -1) {
    swift_once();
  }
  double v10 = *(double *)&qword_1EA3038F0;
  if (qword_1EA2DD560 != -1) {
    swift_once();
  }
  double v11 = *(double *)&qword_1EA303900;
  if (qword_1EA2DD510 != -1) {
    swift_once();
  }
  double v12 = v10 + v11;
  double v13 = *(double *)&qword_1EA3038B0;
  double v14 = *(double *)&qword_1EA3038B0;
  if (qword_1EA2DD508 != -1)
  {
    swift_once();
    double v14 = *(double *)&qword_1EA3038B0;
  }
  double v15 = v9 + v12;
  double v16 = *(double *)&qword_1EA3038A8 - v14;
  if (qword_1EA2DD570 != -1) {
    swift_once();
  }
  double v17 = v16 - v15;
  CGFloat v18 = *(double *)&qword_1EA303910;
  CGContextSaveGState(c);
  if (qword_1EA2DD8C8 != -1) {
    swift_once();
  }
  double v55 = v9;
  unint64_t v19 = (CGColor *)objc_msgSend((id)qword_1EA303D10, sel_CGColor);
  CGContextSetFillColorWithColor(c, v19);

  v60.size.height = 0.5;
  v60.origin.x = v13;
  v60.origin.y = v16 - v15;
  v60.size.width = v18;
  CGContextFillRect(c, v60);
  CGContextRestoreGState(c);
  unint64_t v20 = *(void **)(a1 + 120);
  double v21 = *(double *)(a1 + 128);
  double v22 = *(double *)(a1 + 136);
  if (qword_1EA2DD558 != -1) {
    swift_once();
  }
  double v23 = *(double *)&qword_1EA3038F8;
  double v24 = *(double *)&qword_1EA303910;
  id v25 = objc_msgSend(v20, sel_string);
  uint64_t v26 = sub_1C254F470();
  unint64_t v28 = v27;

  swift_bridgeObjectRelease();
  uint64_t v29 = HIBYTE(v28) & 0xF;
  if ((v28 & 0x2000000000000000) == 0) {
    uint64_t v29 = v26 & 0xFFFFFFFFFFFFLL;
  }
  if (v29)
  {
    double v30 = v17 + v23;
    if (a4 == 1) {
      double v31 = v13 + v24 - v21;
    }
    else {
      double v31 = v13 + 0.0;
    }
    id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), sel_init);
    objc_msgSend(v32, sel_setMinimumScaleFactor_, 1.0);
    UIGraphicsPushContext(c);
    objc_msgSend(v20, sel_drawWithRect_options_context_, 1, v32, v31, v30, v21, v22);
    UIGraphicsPopContext();
  }
  double v33 = *(double *)&qword_1EA3038F8;
  if (qword_1EA2DD638 != -1) {
    swift_once();
  }
  double v34 = *(double *)&qword_1EA303A60;
  double v35 = *(double *)&qword_1EA303910;
  uint64_t v36 = c;
  id v37 = objc_msgSend(a2, sel_string);
  uint64_t v38 = sub_1C254F470();
  unint64_t v40 = v39;

  swift_bridgeObjectRelease();
  uint64_t v41 = HIBYTE(v40) & 0xF;
  if ((v40 & 0x2000000000000000) == 0) {
    uint64_t v41 = v38 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v42 = v36;
  if (v41)
  {
    double v43 = v17 + v33 + v34;
    if (a4 == 1) {
      double v44 = v13 + 0.0;
    }
    else {
      double v44 = v13 + v35 - a5;
    }
    uint64_t v42 = (CGContext *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), sel_init);
    objc_msgSend(v42, (SEL)&selRef_chartedWithConcept, 1.0);
    UIGraphicsPushContext(v36);
    objc_msgSend(a2, sel_drawWithRect_options_context_, 1, v42, v44, v43, a5, a6);
    UIGraphicsPopContext();
  }
  double v45 = *(void **)(a1 + 144);
  double v46 = *(double *)&qword_1EA303910;
  id v47 = objc_msgSend(v45, sel_string);
  uint64_t v48 = sub_1C254F470();
  unint64_t v50 = v49;

  swift_bridgeObjectRelease();
  uint64_t v51 = HIBYTE(v50) & 0xF;
  if ((v50 & 0x2000000000000000) == 0) {
    uint64_t v51 = v48 & 0xFFFFFFFFFFFFLL;
  }
  if (v51)
  {
    if (a4 == 1) {
      double v52 = v13 + v46 - v56;
    }
    else {
      double v52 = v13 + 0.0;
    }
    id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0860]), sel_init);
    objc_msgSend(v58, (SEL)&selRef_chartedWithConcept, 1.0);
    UIGraphicsPushContext(v36);
    objc_msgSend(v45, sel_drawWithRect_options_context_, 1, v58, v52, v15 - v55 + v17, v56, v55);
    UIGraphicsPopContext();
  }
}

unint64_t sub_1C24A5C34()
{
  unint64_t result = qword_1EA2E2900;
  if (!qword_1EA2E2900)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E2900);
  }
  return result;
}

uint64_t sub_1C24A5C74(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C24A5CE0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1C24A5CE0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for FHIRSourceDataSource()
{
  uint64_t result = qword_1EA2E4288;
  if (!qword_1EA2E4288) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C24A5D80()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C24A5DC0(void *a1, void *a2)
{
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v8 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C254C730();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();

  uint64_t v12 = type metadata accessor for FHIRRawResourceItem();
  swift_allocObject();
  id v13 = a1;
  id v14 = a2;
  double v15 = sub_1C23D69C8(v9, v11, v13, v14);

  sub_1C21AC3D8(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468]);
  sub_1C254D9B0();
  uint64_t v16 = swift_allocObject();
  long long v20 = xmmword_1C255CD90;
  *(_OWORD *)(v16 + 16) = xmmword_1C255CD90;
  sub_1C21AC3D8(0, &qword_1EA2DF5D0, (void (*)(uint64_t))sub_1C22270A8);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v20;
  *(void *)(v17 + 56) = v12;
  *(void *)(v17 + 64) = sub_1C24A6378((unint64_t *)&unk_1EA2E2B10, (void (*)(uint64_t))type metadata accessor for FHIRRawResourceItem);
  *(void *)(v17 + 32) = v15;
  swift_retain();
  sub_1C254D970();
  uint64_t v21 = 0x3C53447961727241;
  unint64_t v22 = 0xE800000000000000;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v18 = sub_1C254D390();
  swift_release();

  return v18;
}

void sub_1C24A6144()
{
}

void sub_1C24A6160()
{
}

void sub_1C24A617C()
{
}

uint64_t sub_1C24A61A8()
{
  return type metadata accessor for FHIRSourceDataSource();
}

uint64_t sub_1C24A61B0()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  double v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DAE0();
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_absoluteDimension_, 15.0);
  sub_1C254DAD0();
  id v6 = objc_msgSend(v4, sel_absoluteDimension_, 0.0);
  sub_1C254DAB0();
  uint64_t v7 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

uint64_t sub_1C24A62D4()
{
  return sub_1C254E160();
}

uint64_t sub_1C24A6330()
{
  return sub_1C24A6378(&qword_1EA2E4298, (void (*)(uint64_t))type metadata accessor for FHIRSourceDataSource);
}

uint64_t sub_1C24A6378(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static NSNumber.< infix(_:_:)(void *a1, uint64_t a2)
{
  return objc_msgSend(a1, sel_compare_, a2) == (id)-1;
}

BOOL sub_1C24A63EC(id *a1, void *a2)
{
  return objc_msgSend(*a1, sel_compare_, *a2) == (id)-1;
}

unint64_t sub_1C24A642C()
{
  unint64_t result = qword_1EA2E42A0;
  if (!qword_1EA2E42A0)
  {
    sub_1C2371CF0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E42A0);
  }
  return result;
}

uint64_t static FeedItemIdentifierFactory.makeComponent(for:prefix:)(void *a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v11 = 0x656C69666F72505BLL;
    unint64_t v12 = 0xE90000000000003ALL;
    id v6 = a1;
    id v7 = objc_msgSend(v6, sel_identifier);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();

    unint64_t v8 = v11;
    unint64_t v9 = v12;
  }
  else
  {
    unint64_t v9 = 0x80000001C2578680;
    unint64_t v8 = 0xD000000000000013;
  }
  uint64_t v11 = v8;
  unint64_t v12 = v9;
  sub_1C254F5A0();
  return v11;
}

uint64_t dispatch thunk of static FeedItemIdentifierFactory.makeComponent(for:prefix:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1C24A662C(void *a1)
{
  return static FeedItemIdentifierFactory.makeComponent(for:prefix:)(a1);
}

void *sub_1C24A6644(void *a1, uint64_t a2, void *a3, int a4, void *a5, void *a6, long long *a7, uint64_t *a8, void *a9)
{
  uint64_t v10 = v9;
  double v34 = a6;
  uint64_t v35 = a2;
  int v33 = a4;
  uint64_t v15 = a2;
  uint64_t v41 = a9;
  sub_1C21AB858(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v17 - 8);
  unint64_t v19 = (char *)&v32 - v18;
  uint64_t v20 = *a8;
  uint64_t v39 = a8[1];
  uint64_t v40 = v20;
  LOBYTE(v42) = 0;
  sub_1C24A72C0(0, (unint64_t *)&qword_1EBB6F410);
  swift_allocObject();
  v10[5] = sub_1C254EAA0();
  id v37 = (char *)v10 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_parentViewController;
  swift_unknownObjectWeakInit();
  unsigned char v10[8] = a1;
  *(void *)&long long v42 = 0;
  sub_1C24A71E4(0, (unint64_t *)&qword_1EA2E4320, (unint64_t *)&qword_1EA2E4328, (unint64_t *)&qword_1EA2E1530);
  swift_allocObject();
  id v38 = a1;
  void v10[2] = sub_1C254EAA0();
  sub_1C21F4914(v15, (uint64_t)v10 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_accountIdentifier);
  *(void *)&long long v42 = a3;
  sub_1C24A71E4(0, (unint64_t *)&qword_1EA2E0A70, (unint64_t *)&qword_1EA2DE398, (unint64_t *)&qword_1EA2DE378);
  swift_allocObject();
  id v36 = a3;
  _OWORD v10[3] = sub_1C254EAA0();
  uint64_t v21 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_isRenderingForConcept;
  *((unsigned char *)v10 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_isRenderingForConcept) = v33;
  *(void *)&long long v42 = a5;
  sub_1C24A71E4(0, (unint64_t *)&qword_1EA2E0D88, (unint64_t *)&qword_1EA2E0D90, &qword_1EA2E0D98);
  swift_allocObject();
  id v22 = a5;
  _OWORD v10[4] = sub_1C254EAA0();
  double v23 = v34;
  *(void *)((char *)v10 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_dataProvider) = v34;
  sub_1C24A7250((uint64_t)a7 + 8, (uint64_t)&v47, &qword_1EA2DE390, (unint64_t *)&unk_1EA2DE380);
  sub_1C24A7250((uint64_t)(a7 + 1), (uint64_t)&v46, (unint64_t *)&qword_1EA2DE398, (unint64_t *)&qword_1EA2DE378);
  sub_1C24A7250((uint64_t)a7 + 24, (uint64_t)&v45, (unint64_t *)&unk_1EA2DE3A0, (unint64_t *)&qword_1EBB6FFC0);
  long long v24 = a7[1];
  long long v42 = *a7;
  long long v43 = v24;
  char v44 = *((unsigned char *)a7 + 32);
  sub_1C24A72C0(0, &qword_1EA2E4330);
  swift_allocObject();
  id v25 = v23;
  sub_1C21FFFEC(&v47);
  sub_1C21FFFEC(&v46);
  sub_1C21FFFEC(&v45);
  v10[6] = sub_1C254EAA0();
  *(void *)&long long v42 = v40;
  *((void *)&v42 + 1) = v39;
  sub_1C24A70DC();
  swift_allocObject();
  v10[7] = sub_1C254EAA0();
  uint64_t v26 = v41;
  swift_unknownObjectWeakAssign();
  uint64_t v27 = v35;
  sub_1C21F4914(v35, (uint64_t)v19);
  uint64_t v28 = v10[4];
  uint64_t v29 = v10[6];
  LODWORD(v15) = *((unsigned __int8 *)v10 + v21);
  type metadata accessor for MedicalRecordTimelineDataSource();
  swift_allocObject();
  swift_retain();
  swift_retain();
  double v30 = sub_1C2304C10(v38, (uint64_t)v19, v28, v29, v15, v26);
  sub_1C244D270(&v47);
  sub_1C244D270(&v46);
  sub_1C244D270(&v45);

  sub_1C2268334(v27);
  *(void *)((char *)v10 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_timelineDataSource) = v30;
  v10[5] = v30[5];
  swift_retain();
  swift_release();
  return v10;
}

uint64_t sub_1C24A6A78()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_1C2268334(v0 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_accountIdentifier);
  swift_unknownObjectWeakDestroy();
  swift_release();
  return v0;
}

uint64_t sub_1C24A6B08()
{
  sub_1C24A6A78();
  return swift_deallocClassInstance();
}

uint64_t sub_1C24A6B60()
{
  return type metadata accessor for MedicalRecordTimelineDataSourceProvider();
}

uint64_t type metadata accessor for MedicalRecordTimelineDataSourceProvider()
{
  uint64_t result = qword_1EA2E42D0;
  if (!qword_1EA2E42D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C24A6BB4()
{
  sub_1C21AB858(319, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C24A6CB8()
{
  return sub_1C24A6CDC();
}

uint64_t sub_1C24A6CDC()
{
  uint64_t v1 = v0;
  sub_1C21AB858(0, (unint64_t *)&qword_1EA2DEA38, (uint64_t (*)(uint64_t))sub_1C22250F0, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C2561290;
  uint64_t v3 = *(void **)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 16);
  id v5 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_dataProvider);
  type metadata accessor for MedicalRecordTimelineAccountDataSource();
  swift_allocObject();
  id v6 = v3;
  swift_retain();
  id v7 = sub_1C25060F4(v6, v4, v5);
  uint64_t v8 = sub_1C24A719C(&qword_1EA2E42E0, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountDataSource);
  *(void *)(v2 + 32) = v7;
  *(void *)(v2 + 40) = v8;
  id v26 = v6;
  swift_retain();
  sub_1C254EA80();
  swift_release();

  uint64_t v9 = v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_parentViewController;
  uint64_t v10 = (void *)MEMORY[0x1C875A200](v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_parentViewController);
  type metadata accessor for MedicalRecordTimelineAccountUpgradeTileDataSource();
  swift_allocObject();
  uint64_t v11 = sub_1C2260884(v26, v29, v10);
  uint64_t v12 = sub_1C24A719C(&qword_1EA2E42E8, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeTileDataSource);
  *(void *)(v2 + 48) = v11;
  *(void *)(v2 + 56) = v12;
  uint64_t v13 = *(void *)(v1 + 56);
  type metadata accessor for MedicalRecordTimelineSystemStatusDataSource();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 40) = v13;
  *(void *)(v14 + 48) = 0;
  swift_retain_n();
  uint64_t v15 = ConceptsDataSource.init(arrangedSections:isHidden:)(MEMORY[0x1E4FBC860], 0);
  swift_allocObject();
  swift_weakInit();
  sub_1C24A70DC();
  sub_1C24A719C(&qword_1EA2E4300, (void (*)(uint64_t))sub_1C24A70DC);
  swift_retain();
  uint64_t v16 = sub_1C254ECC0();
  swift_release();
  swift_release();
  swift_release();
  v15[6] = v16;
  swift_release();
  uint64_t v17 = sub_1C24A719C(&qword_1EA2E4308, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineSystemStatusDataSource);
  *(void *)(v2 + 64) = v15;
  *(void *)(v2 + 72) = v17;
  uint64_t v18 = *(void *)(v1 + 24);
  unint64_t v19 = (void *)MEMORY[0x1C875A200](v9);
  type metadata accessor for MedicalRecordTimelineChartDataSource();
  swift_allocObject();
  id v20 = v26;
  swift_retain();
  uint64_t v21 = sub_1C22F26C4(v20, v18, v19);
  uint64_t v22 = sub_1C24A719C(&qword_1EA2E4310, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartDataSource);
  *(void *)(v2 + 80) = v21;
  *(void *)(v2 + 88) = v22;
  uint64_t v23 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineDataSourceProvider_timelineDataSource);
  uint64_t v24 = sub_1C24A719C(&qword_1EA2E4318, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineDataSource);
  *(void *)(v2 + 96) = v23;
  *(void *)(v2 + 104) = v24;
  swift_retain();
  return v2;
}

uint64_t sub_1C24A709C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C24A70D4(uint64_t *a1)
{
  return sub_1C24C920C(a1);
}

void sub_1C24A70DC()
{
  if (!qword_1EA2E42F0)
  {
    sub_1C24A7144();
    unint64_t v0 = sub_1C254EA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E42F0);
    }
  }
}

void sub_1C24A7144()
{
  if (!qword_1EA2E42F8)
  {
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E42F8);
    }
  }
}

uint64_t sub_1C24A719C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C24A71E4(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1C21FFF20(255, a3, a4);
    unint64_t v5 = sub_1C254EA90();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C24A7250(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_1C21FFF20(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1C24A72C0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C254EA90();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

id sub_1C24A731C()
{
  id v0 = objc_msgSend(self, sel_labelColor);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v1, sel_setFont_, 0);
  objc_msgSend(v1, sel_setNumberOfLines_, 0);
  objc_msgSend(v1, sel_setTextColor_, v0);

  return v1;
}

void sub_1C24A73C0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24A78A4(0, &qword_1EA2E1CB0, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v48 = (uint64_t)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v46 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v46 - v14;
  sub_1C24A78A4(0, &qword_1EA2DF190, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)v46 - v17;
  sub_1C24A78F8(a1, (uint64_t)v15);
  id v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v19 = v5 + 48;
  id v47 = v20;
  if (v20((uint64_t)v15, 1, v4) == 1)
  {
    uint64_t v21 = type metadata accessor for AccountViewData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 1, 1, v21);
  }
  else
  {
    sub_1C24A7A30((uint64_t)v15, (uint64_t)v7);
    uint64_t v22 = sub_1C254CB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v7, v22);
    uint64_t v23 = &v7[*(int *)(v4 + 20)];
    uint64_t v24 = v12;
    uint64_t v25 = *(void *)v23;
    uint64_t v26 = *((void *)v23 + 1);
    uint64_t v27 = &v7[*(int *)(v4 + 24)];
    v46[0] = (uint64_t)v7;
    v46[1] = v19;
    uint64_t v28 = v2;
    uint64_t v29 = v4;
    uint64_t v30 = a1;
    uint64_t v31 = *(void *)v27;
    uint64_t v32 = *((void *)v27 + 1);
    uint64_t v33 = type metadata accessor for AccountViewData(0);
    double v34 = &v18[*(int *)(v33 + 20)];
    *(void *)double v34 = v25;
    *((void *)v34 + 1) = v26;
    uint64_t v12 = v24;
    uint64_t v35 = &v18[*(int *)(v33 + 24)];
    *(void *)uint64_t v35 = v31;
    *((void *)v35 + 1) = v32;
    a1 = v30;
    uint64_t v4 = v29;
    uint64_t v2 = v28;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v18, 0, 1, v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C24A79D4(v46[0]);
  }
  sub_1C22550DC((uint64_t)v18);
  sub_1C24A7978((uint64_t)v18, &qword_1EA2DF190, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  id v36 = sub_1C2340A80();
  sub_1C24A78F8(a1, (uint64_t)v12);
  id v37 = v47;
  if (v47((uint64_t)v12, 1, v4) == 1)
  {
    sub_1C24A7978((uint64_t)v12, &qword_1EA2E1CB0, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
  }
  else
  {
    sub_1C224B428();
    uint64_t v39 = v38;
    sub_1C24A79D4((uint64_t)v12);
    if (v39)
    {
      uint64_t v40 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  uint64_t v40 = 0;
LABEL_9:
  objc_msgSend(v36, sel_setText_, v40);

  uint64_t v41 = *(void **)(v2 + qword_1EBB6ED60);
  uint64_t v42 = v48;
  sub_1C24A78F8(a1, v48);
  if (v37(v42, 1, v4) == 1)
  {
    sub_1C24A7978(v42, &qword_1EA2E1CB0, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
LABEL_13:
    id v45 = 0;
    goto LABEL_14;
  }
  sub_1C224B604();
  uint64_t v44 = v43;
  sub_1C24A79D4(v42);
  if (!v44) {
    goto LABEL_13;
  }
  id v45 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
LABEL_14:
  objc_msgSend(v41, sel_setText_, v45);
}

void sub_1C24A78A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C24A78F8(uint64_t a1, uint64_t a2)
{
  sub_1C24A78A4(0, &qword_1EA2E1CB0, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C24A7978(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C24A78A4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C24A79D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C24A7A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C24A7A94()
{
  uint64_t v1 = *(void **)(v0 + qword_1EBB6ED60);
  uint64_t v2 = self;
  uint64_t v3 = *MEMORY[0x1E4FB2950];
  id v4 = objc_msgSend(v2, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v1, sel_setFont_, v4);

  id v5 = sub_1C2340A80();
  id v6 = objc_msgSend(v2, sel_preferredFontForTextStyle_, v3);
  objc_msgSend(v5, sel_setFont_, v6);
}

id sub_1C24A7B7C(uint64_t a1)
{
  return *(id *)(a1 + qword_1EBB6ED60);
}

id AccountStatusSummaryTileFeedItemView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id AccountStatusSummaryTileFeedItemView.init(frame:)(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for AccountStatusSummaryTileFeedItemView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a1, a2, a3, a4);
}

uint64_t type metadata accessor for AccountStatusSummaryTileFeedItemView()
{
  uint64_t result = qword_1EBB6DDB0;
  if (!qword_1EBB6DDB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1C24A7CA8(void *a1, double a2, double a3, double a4, double a5)
{
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for AccountStatusSummaryTileFeedItemView();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id AccountStatusSummaryTileFeedItemView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id AccountStatusSummaryTileFeedItemView.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for AccountStatusSummaryTileFeedItemView();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id sub_1C24A7DB4(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for AccountStatusSummaryTileFeedItemView();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id AccountStatusSummaryTileFeedItemView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountStatusSummaryTileFeedItemView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C24A7E38()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for AccountStatusSummaryTileFeedItemView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountStatusSummaryTileFeedItemView);
}

uint64_t sub_1C24A7E88(uint64_t a1)
{
  sub_1C24A78A4(0, &qword_1EA2E1CB0, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v7 - v3;
  sub_1C24A7F8C(a1, (uint64_t)&v7 - v3);
  uint64_t v5 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  sub_1C24A73C0((uint64_t)v4);
  return sub_1C24A7978((uint64_t)v4, &qword_1EA2E1CB0, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
}

uint64_t sub_1C24A7F84()
{
  return type metadata accessor for AccountStatusSummaryTileFeedItemView();
}

uint64_t sub_1C24A7F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C24A8030()
{
  return 0xD000000000000015;
}

id StandardTableViewCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v5 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for StandardTableViewCell();
  id v6 = objc_msgSendSuper2(&v8, sel_initWithStyle_reuseIdentifier_, a1, v5);

  return v6;
}

uint64_t type metadata accessor for StandardTableViewCell()
{
  return self;
}

id StandardTableViewCell.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for StandardTableViewCell();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id StandardTableViewCell.__deallocating_deinit()
{
  return sub_1C24A8FC8(type metadata accessor for StandardTableViewCell);
}

unint64_t sub_1C24A81D0()
{
  return 0xD000000000000012;
}

id sub_1C24A8204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v7 = (void *)a1;
  if (a4)
  {
    sub_1C254F470();
    objc_super v8 = (void *)sub_1C254F430();
    a1 = swift_bridgeObjectRelease();
  }
  else
  {
    objc_super v8 = 0;
  }
  v11.receiver = v7;
  v11.super_class = (Class)a5(a1);
  id v9 = objc_msgSendSuper2(&v11, sel_initWithStyle_reuseIdentifier_, a3, v8);

  return v9;
}

id sub_1C24A82B4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return objc_msgSendSuper2(&v6, sel_initWithCoder_, a3);
}

id sub_1C24A8300()
{
  return sub_1C24A8FC8(type metadata accessor for NoAppTableViewCell);
}

unint64_t sub_1C24A8358()
{
  return 0xD000000000000013;
}

void sub_1C24A8374(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR___HRSourceTableViewCell_sourceModel;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR___HRSourceTableViewCell_sourceModel];
  if (!a1)
  {
    if (!v4) {
      return;
    }
    goto LABEL_12;
  }
  if (v4)
  {
    objc_super v5 = a1;
    sub_1C21AB51C(0, &qword_1EA2DFF70);
    id v6 = v4;
    id v7 = v5;
    LOBYTE(v5) = sub_1C254FF70();

    if (v5) {
      return;
    }
    if (*(void *)&v2[v3])
    {
LABEL_12:
      uint64_t v11 = sub_1C254E890();
      uint64_t v12 = swift_allocBox();
      uint64_t v14 = v13;
      sub_1C254E840();
      uint64_t v15 = *(void **)&v2[v3];
      if (v15)
      {
        id v16 = objc_msgSend(v15, sel_source);
        id v17 = objc_msgSend(v16, sel_name);

        sub_1C254F470();
      }
      sub_1C254E860();
      objc_msgSend(v2, sel_setAccessoryType_, 1);
      uint64_t v18 = *(void **)&v2[v3];
      if (!v18) {
        goto LABEL_19;
      }
      id v19 = objc_msgSend(v18, sel_icon);
      if (v19)
      {
        id v20 = v19;
        id v21 = objc_msgSend(v19, sel_scaledToTargetSize_, *MEMORY[0x1E4F67950], *MEMORY[0x1E4F67948]);
        sub_1C254E870();

LABEL_21:
        swift_beginAccess();
        uint64_t v30 = (void (*)(uint64_t *, void))sub_1C254E7D0();
        sub_1C254E7C0();
        v30(&aBlock, 0);
        swift_endAccess();
        id v36 = (void *)v11;
        id v37 = (void *)MEMORY[0x1E4FB0F88];
        uint64_t v31 = __swift_allocate_boxed_opaque_existential_1(&aBlock);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v31, v14, v11);
        MEMORY[0x1C8757FA0](&aBlock);
        swift_release();
        return;
      }
      uint64_t v22 = *(void **)&v2[v3];
      if (v22) {
        id v23 = objc_msgSend(v22, sel_source);
      }
      else {
LABEL_19:
      }
        id v23 = 0;
      id v24 = objc_msgSend(self, sel_sharedImageManager);
      id v37 = sub_1C24A9078;
      uint64_t v38 = (void *)v12;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v34 = 1107296256;
      uint64_t v35 = sub_1C22F3AD0;
      id v36 = &block_descriptor_65;
      uint64_t v25 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      uint64_t v26 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v27 = (void *)swift_allocObject();
      v27[2] = v23;
      void v27[3] = v26;
      v27[4] = v12;
      id v37 = sub_1C24A9108;
      uint64_t v38 = v27;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v34 = 1107296256;
      uint64_t v35 = sub_1C23447F8;
      id v36 = &block_descriptor_17_1;
      uint64_t v28 = _Block_copy(&aBlock);
      id v29 = v23;
      swift_retain();
      swift_release();
      objc_msgSend(v24, sel_loadIconForSource_syncHandler_asyncHandler_, v29, v25, v28);
      _Block_release(v28);
      _Block_release(v25);

      goto LABEL_21;
    }
  }
  id v8 = objc_msgSend(v2, sel_textLabel);
  if (v8)
  {
    id v9 = v8;
    objc_msgSend(v8, sel_setText_, 0);
  }
  id v10 = objc_msgSend(v2, sel_imageView);
  if (v10)
  {
    id v32 = v10;
    objc_msgSend(v10, sel_setImage_, 0);
  }
}

uint64_t sub_1C24A8840(void *a1)
{
  sub_1C254E890();
  swift_projectBox();
  swift_beginAccess();
  id v2 = a1;
  sub_1C254E870();
  return swift_endAccess();
}

uint64_t sub_1C24A88A8(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1C254F1C0();
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1C254F200();
  uint64_t v12 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v22 = sub_1C254FC70();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a3;
  v15[4] = a4;
  v15[5] = a5;
  aBlock[4] = sub_1C24A9164;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_23_2;
  id v16 = _Block_copy(aBlock);
  id v17 = a3;
  swift_retain();
  swift_retain();
  id v18 = a1;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C221B1F8((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C221B1A0();
  sub_1C221B1F8((unint64_t *)&qword_1EBB6FF40, (void (*)(uint64_t))sub_1C221B1A0);
  sub_1C2550200();
  id v19 = (void *)v22;
  MEMORY[0x1C87581B0](0, v14, v11, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v23);
}

void sub_1C24A8BB8(void *a1, void *a2, uint64_t a3)
{
  sub_1C254E890();
  swift_projectBox();
  if (a1)
  {
    swift_beginAccess();
    uint64_t v6 = MEMORY[0x1C875A200](a3 + 16);
    id v7 = (id)v6;
    if (v6)
    {
      id v8 = *(void **)(v6 + OBJC_IVAR___HRSourceTableViewCell_sourceModel);
      id v9 = v8;
      id v10 = a1;

      if (v8)
      {
        id v7 = objc_msgSend(v9, sel_source);

        if (!a2)
        {
LABEL_11:
          if (v7)
          {

            a1 = v7;
LABEL_14:

            return;
          }
LABEL_13:
          id v14 = objc_msgSend(a1, sel_scaledToTargetSize_, *MEMORY[0x1E4F67950], *MEMORY[0x1E4F67948]);
          swift_beginAccess();
          sub_1C254E870();
          swift_endAccess();
          goto LABEL_14;
        }
      }
      else
      {
        id v7 = 0;
        if (!a2) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      id v11 = a1;
      if (!a2) {
        goto LABEL_11;
      }
    }
    if (!v7) {
      goto LABEL_14;
    }
    sub_1C21AB51C(0, &qword_1EA2E0010);
    id v12 = a2;
    char v13 = sub_1C254FF70();

    if ((v13 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
}

id SourceTableViewCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR___HRSourceTableViewCell_sourceModel] = 0;
  if (a3)
  {
    objc_super v5 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    objc_super v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for SourceTableViewCell();
  id v6 = objc_msgSendSuper2(&v8, sel_initWithStyle_reuseIdentifier_, a1, v5);

  return v6;
}

uint64_t type metadata accessor for SourceTableViewCell()
{
  return self;
}

id SourceTableViewCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id SourceTableViewCell.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR___HRSourceTableViewCell_sourceModel] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SourceTableViewCell();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

void sub_1C24A8FA0()
{
}

id SourceTableViewCell.__deallocating_deinit()
{
  return sub_1C24A8FC8(type metadata accessor for SourceTableViewCell);
}

id sub_1C24A8FC8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t method lookup function for StandardTableViewCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StandardTableViewCell);
}

uint64_t dispatch thunk of static StandardTableViewCell.reuseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t type metadata accessor for NoAppTableViewCell()
{
  return self;
}

uint64_t method lookup function for SourceTableViewCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SourceTableViewCell);
}

uint64_t sub_1C24A9078(void *a1)
{
  return sub_1C24A8840(a1);
}

uint64_t block_destroy_helper_61()
{
  return swift_release();
}

uint64_t sub_1C24A9088()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C24A90C0()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C24A9108(void *a1, uint64_t a2)
{
  return sub_1C24A88A8(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1C24A9114()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C24A9164()
{
  sub_1C24A8BB8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C24A9188()
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_1C24A925C()
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_1C24A9334()
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t sub_1C24A9408()
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)v20 - v1;
  uint64_t v3 = sub_1C254CBD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  if (qword_1EA2DD660 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_1EA2E0B00;
  v20[1] = *(void *)algn_1EA2E0B08;
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C255CDA0;
  uint64_t v6 = qword_1EBB6EF40;
  v20[0] = v4;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C254C730();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();

  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v12 = sub_1C220D950();
  *(void *)(v5 + 64) = v12;
  *(void *)(v5 + 32) = v8;
  *(void *)(v5 + 40) = v10;
  id v13 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C254C730();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();

  *(void *)(v5 + 96) = v11;
  *(void *)(v5 + 104) = v12;
  *(void *)(v5 + 72) = v14;
  *(void *)(v5 + 80) = v16;
  id v17 = (void *)v20[0];
  sub_1C254C730();
  uint64_t v18 = sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v2);
  return v18;
}

void sub_1C24A975C()
{
  uint64_t v1 = v0;
  v38[0] = sub_1C254D7E0();
  uint64_t v2 = *(void *)(v38[0] - 8);
  MEMORY[0x1F4188790](v38[0]);
  uint64_t v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v6);

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v1, sel_setBackgroundView_, v7);

  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v1, sel_setSelectedBackgroundView_, v8);

  id v9 = objc_msgSend(v1, sel_selectedBackgroundView);
  if (v9)
  {
    uint64_t v10 = v9;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
    uint64_t v11 = (void *)sub_1C254FEE0();
    objc_msgSend(v10, sel_setBackgroundColor_, v11);
  }
  id v12 = objc_msgSend(v1, sel_contentView, v38[0]);
  id v13 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI8ListCell_textLabel];
  objc_msgSend(v12, sel_addSubview_, v13);

  id v14 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v13, sel_setFont_, v14);

  objc_msgSend(v13, sel_setNumberOfLines_, 0);
  objc_msgSend(v13, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v15 = objc_msgSend(v5, sel_labelColor);
  objc_msgSend(v13, sel_setTextColor_, v15);

  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v16 = self;
  sub_1C21ACA3C();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C255DBA0;
  id v18 = objc_msgSend(v13, sel_leadingAnchor);
  id v19 = objc_msgSend(v1, sel_contentView);
  id v20 = objc_msgSend(v19, sel_leadingAnchor);

  sub_1C254D7D0();
  sub_1C254D700();
  double v22 = v21;
  (*(void (**)(char *, void))(v2 + 8))(v4, v38[0]);
  id v23 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, v22);

  *(void *)(v17 + 32) = v23;
  id v24 = objc_msgSend(v13, sel_topAnchor);
  id v25 = objc_msgSend(v1, sel_contentView);
  id v26 = objc_msgSend(v25, sel_topAnchor);

  id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26, 12.0);
  *(void *)(v17 + 40) = v27;
  id v28 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v29 = objc_msgSend(v28, sel_layoutMarginsGuide);

  id v30 = objc_msgSend(v29, sel_trailingAnchor);
  id v31 = objc_msgSend(v13, sel_trailingAnchor);
  id v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

  *(void *)(v17 + 48) = v32;
  id v33 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v34 = objc_msgSend(v33, sel_bottomAnchor);

  id v35 = objc_msgSend(v13, sel_bottomAnchor);
  id v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_constant_, v35, 12.0);

  *(void *)(v17 + 56) = v36;
  v38[1] = v17;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  id v37 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_activateConstraints_, v37);
}

uint64_t sub_1C24A9F30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C24A9F84(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1C22271F0(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1C24A9FE0())()
{
  return j__swift_endAccess;
}

id sub_1C24AA03C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ListCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ListCell()
{
  return self;
}

uint64_t sub_1C24AA0E0()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t sub_1C24AA114()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

void (*sub_1C24AA148(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x78))();
  return sub_1C2231658;
}

void *sub_1C24AA1D0(void *a1, uint64_t a2)
{
  return sub_1C21AB2D0(a1, a2, (uint64_t (*)(void))sub_1C2457620, (unint64_t *)&qword_1EBB6FFC0);
}

uint64_t sub_1C24AA1F8(unint64_t a1)
{
  uint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_59;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_60:
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = (uint64_t *)(v1 + 16);
    unint64_t v58 = v2 & 0xC000000000000001;
    swift_beginAccess();
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v56 = v2;
    uint64_t v57 = v3;
    while (1)
    {
      if (v58) {
        id v9 = (id)MEMORY[0x1C87588E0](v6, v2);
      }
      else {
        id v9 = *(id *)(v2 + 8 * v6 + 32);
      }
      id v10 = v9;
      unint64_t v11 = swift_bridgeObjectRetain();
      sub_1C24B1C34(v11, (uint64_t)v10);
      id v13 = v12;
      swift_bridgeObjectRelease();

      if (v13)
      {
        uint64_t v14 = *v5;
        uint64_t v59 = v7;
        if ((*v5 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          id v15 = v13;
          if (sub_1C25505A0())
          {
            sub_1C21AB51C(0, &qword_1EA2DF8E0);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v16 = v64;
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v3 = v57;
            if (v64) {
              goto LABEL_19;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v3 = v57;
          }
        }
        else if (*(void *)(v14 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v17 = sub_1C2457794((uint64_t)v13);
          if (v18)
          {
            id v16 = *(id *)(*(void *)(v14 + 56) + 8 * v17);
            swift_bridgeObjectRelease();
            if (v16)
            {
LABEL_19:
              objc_msgSend(v16, sel_addObject_, v10);
              id v19 = objc_msgSend(v10, sel_unitString);
              uint64_t v20 = sub_1C254F470();
              uint64_t v22 = v21;

              id v23 = objc_msgSend(v13, sel_unitString);
              uint64_t v24 = sub_1C254F470();
              uint64_t v26 = v25;

              if (v20 == v24 && v22 == v26)
              {

                swift_bridgeObjectRelease_n();
              }
              else
              {
                char v27 = sub_1C2550870();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v27)
                {
                  swift_beginAccess();
                  uint64_t v28 = *v5;
                  if ((*v5 & 0xC000000000000001) != 0)
                  {
                    if (v28 >= 0) {
                      v28 &= 0xFFFFFFFFFFFFFF8uLL;
                    }
                    id v29 = v10;
                    id v30 = v16;
                    uint64_t result = sub_1C25502A0();
                    if (__OFADD__(result, 1)) {
                      goto LABEL_64;
                    }
                    *uint64_t v5 = sub_1C24ABB44(v28, result + 1);
                  }
                  else
                  {
                    id v52 = v10;
                    id v53 = v16;
                  }
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v63 = *v5;
                  *uint64_t v5 = 0x8000000000000000;
                  sub_1C2365A74((uint64_t)v16, v10, isUniquelyReferenced_nonNull_native);
                  *uint64_t v5 = v63;
                  swift_bridgeObjectRelease();
                  swift_endAccess();

                  swift_beginAccess();
                  double v55 = (void *)sub_1C24AB1A0((unint64_t)v13);
                  swift_endAccess();
                }
                else
                {
                }
              }
              uint64_t v2 = v56;
              uint64_t v3 = v57;
              uint64_t v7 = v59;
              goto LABEL_7;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        else
        {
          id v31 = v13;
        }

        uint64_t v7 = v59;
      }
      id v32 = self;
      id v33 = v10;
      id v34 = objc_msgSend(v32, sel_setWithObject_, v33);
      swift_beginAccess();
      uint64_t v1 = *v5;
      unint64_t v35 = *v5 & 0xC000000000000001;
      if (v34)
      {
        if (v35)
        {
          if (v1 < 0) {
            uint64_t v36 = *v5;
          }
          else {
            uint64_t v36 = v1 & 0xFFFFFFFFFFFFFF8;
          }
          uint64_t v37 = sub_1C25502A0();
          if (__OFADD__(v37, 1))
          {
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            swift_bridgeObjectRetain();
            uint64_t result = sub_1C2550620();
            uint64_t v3 = result;
            if (!result) {
              goto LABEL_60;
            }
            goto LABEL_3;
          }
          *uint64_t v5 = sub_1C24ABB44(v36, v37 + 1);
        }
        char v8 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v61 = *v5;
        *uint64_t v5 = 0x8000000000000000;
        sub_1C2365A74((uint64_t)v34, v33, v8);
        *uint64_t v5 = v61;

        swift_bridgeObjectRelease();
      }
      else if (v35)
      {
        if (v1 < 0) {
          uint64_t v2 = *v5;
        }
        else {
          uint64_t v2 = v1 & 0xFFFFFFFFFFFFFF8;
        }
        id v38 = v33;
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_1C25505A0();

        if (v39)
        {
          swift_unknownObjectRelease();
          uint64_t v40 = sub_1C25502A0();
          uint64_t v1 = sub_1C24ABB44(v2, v40);
          swift_retain();
          unint64_t v41 = sub_1C2457794((uint64_t)v38);
          char v43 = v42;
          swift_release();
          if ((v43 & 1) == 0) {
            goto LABEL_58;
          }

          uint64_t v44 = v7;
          id v45 = *(void **)(*(void *)(v1 + 56) + 8 * v41);
          sub_1C24AC688(v41, v1);
          *uint64_t v5 = v1;

          uint64_t v7 = v44;
          swift_bridgeObjectRelease();
          uint64_t v2 = v56;
          uint64_t v3 = v57;
        }
        else
        {

          swift_bridgeObjectRelease();
          uint64_t v2 = v56;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        unint64_t v46 = sub_1C2457794((uint64_t)v33);
        char v48 = v47;
        swift_bridgeObjectRelease();
        if (v48)
        {
          uint64_t v60 = v7;
          char v49 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v50 = *v5;
          uint64_t v62 = *v5;
          *uint64_t v5 = 0x8000000000000000;
          if ((v49 & 1) == 0)
          {
            sub_1C24AECA8((void (*)(void))sub_1C2284D50);
            uint64_t v50 = v62;
          }

          uint64_t v51 = *(void **)(*(void *)(v50 + 56) + 8 * v46);
          sub_1C24AC688(v46, v50);
          *uint64_t v5 = v50;

          swift_bridgeObjectRelease();
          uint64_t v7 = v60;
        }
        else
        {
        }
      }
      swift_endAccess();

LABEL_7:
      if (v3 == ++v6) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_1C24AA8A8()
{
  swift_beginAccess();
  if ((*(void *)(v0 + 16) & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C24B10D0();
  }
  else
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C24B14DC(v3);
  }
  uint64_t v4 = v2;
  swift_bridgeObjectRelease();
  id v5 = sub_1C24AAB40(v4);
  swift_release();
  if (!v5)
  {
    sub_1C22982E4();
    swift_allocError();
    *(void *)uint64_t v12 = 1;
    *(unsigned char *)(v12 + 8) = 1;
    swift_willThrow();
    return (uint64_t)v5;
  }
  uint64_t v6 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  id v7 = v5;
  id v8 = sub_1C21AB2D0(v7, v6, (uint64_t (*)(void))sub_1C2457794, &qword_1EA2DF8E0);
  swift_bridgeObjectRelease();
  if (!v8) {
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28BD0]), sel_init);
  }
  id v9 = v8;
  id v10 = sub_1C24B1ED8(v9, v9);

  if (v10[2])
  {
    sub_1C24B221C(0, (unint64_t *)&qword_1EA2DF8C8, (unint64_t *)&unk_1EA2DE0C0, 0x1E4F2B618, &qword_1EA2DF8D0);
    uint64_t v11 = sub_1C2550680();
  }
  else
  {
    uint64_t v11 = MEMORY[0x1E4FBC868];
  }
  uint64_t v16 = v11;
  id v13 = (void *)swift_bridgeObjectRetain();
  sub_1C24B1888(v13, 1, &v16);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    id v5 = sub_1C24AAB40(v16);
    swift_release();
    if (!v5)
    {
      sub_1C22982E4();
      swift_allocError();
      *(void *)uint64_t v14 = 1;
      *(unsigned char *)(v14 + 8) = 1;
      swift_willThrow();
    }

    return (uint64_t)v5;
  }
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

id sub_1C24AAB40(uint64_t a1)
{
  uint64_t v32 = a1 + 64;
  char v2 = *(unsigned char *)(a1 + 32);
  uint64_t v3 = 1 << v2;
  uint64_t v4 = -1;
  if (1 << v2 < 64) {
    uint64_t v4 = ~(-1 << (1 << v2));
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  if (!v5)
  {
    unsigned int v12 = v2 & 0x3F;
    if (v12 > 6)
    {
      int64_t v33 = (unint64_t)(v3 + 63) >> 6;
      unint64_t v26 = *(void *)(a1 + 72);
      if (v26)
      {
        uint64_t v6 = 1;
        goto LABEL_35;
      }
      if (v12 >= 8)
      {
        unint64_t v26 = *(void *)(a1 + 80);
        if (v26)
        {
          uint64_t v6 = 2;
        }
        else
        {
          unint64_t v26 = *(void *)(a1 + 88);
          if (!v26) {
            goto LABEL_42;
          }
          uint64_t v6 = 3;
        }
        goto LABEL_35;
      }
    }
    return 0;
  }
  uint64_t v6 = 0;
  unint64_t v7 = __clz(__rbit64(v5));
  unint64_t v8 = (v5 - 1) & v5;
  int64_t v33 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    uint64_t v9 = 8 * v7;
    id v10 = *(void **)(*(void *)(a1 + 48) + v9);
    uint64_t v11 = *(void *)(*(void *)(a1 + 56) + v9);
    swift_bridgeObjectRetain();
    id v31 = v10;
    if (v8)
    {
      while (1)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v6 << 6);
LABEL_27:
        uint64_t v19 = 8 * v15;
        uint64_t v20 = *(void **)(*(void *)(a1 + 48) + v19);
        uint64_t v21 = *(void *)(*(void *)(a1 + 56) + v19);
        if (v11 == v21)
        {
          id v22 = v20;
          id v23 = objc_msgSend(v31, sel_unitString);
          sub_1C254F470();

          id v24 = objc_msgSend(v22, sel_unitString);
          sub_1C254F470();

          sub_1C2218914();
          uint64_t v25 = sub_1C25501A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v25 == 1) {
            goto LABEL_29;
          }
LABEL_8:

          if (!v8) {
            break;
          }
        }
        else
        {
          id v13 = v20;
          if (v11 >= v21) {
            goto LABEL_8;
          }
          uint64_t v11 = v21;
LABEL_29:

          id v31 = v20;
          if (!v8) {
            break;
          }
        }
      }
    }
    int64_t v16 = v6 + 1;
    if (!__OFADD__(v6, 1)) {
      break;
    }
    __break(1u);
LABEL_42:
    if (v12 < 9) {
      return 0;
    }
    unint64_t v26 = *(void *)(a1 + 96);
    if (v26)
    {
      uint64_t v6 = 4;
      goto LABEL_35;
    }
    unint64_t v26 = *(void *)(a1 + 104);
    if (v26)
    {
      uint64_t v6 = 5;
      goto LABEL_35;
    }
LABEL_48:
    uint64_t v27 = 0;
    uint64_t v28 = 6;
    if (v33 > 6) {
      uint64_t v28 = v33;
    }
    uint64_t v29 = v28 - 6;
    do
    {
      if (v29 == v27) {
        return 0;
      }
      unint64_t v26 = *(void *)(a1 + 112 + 8 * v27++);
    }
    while (!v26);
    uint64_t v6 = v27 + 5;
LABEL_35:
    unint64_t v8 = (v26 - 1) & v26;
    unint64_t v7 = __clz(__rbit64(v26)) + (v6 << 6);
  }
  if (v16 >= v33) {
    goto LABEL_31;
  }
  unint64_t v17 = *(void *)(v32 + 8 * v16);
  ++v6;
  if (v17) {
    goto LABEL_26;
  }
  uint64_t v6 = v16 + 1;
  if (v16 + 1 >= v33) {
    goto LABEL_31;
  }
  unint64_t v17 = *(void *)(v32 + 8 * v6);
  if (v17) {
    goto LABEL_26;
  }
  uint64_t v6 = v16 + 2;
  if (v16 + 2 >= v33) {
    goto LABEL_31;
  }
  unint64_t v17 = *(void *)(v32 + 8 * v6);
  if (v17) {
    goto LABEL_26;
  }
  uint64_t v6 = v16 + 3;
  if (v16 + 3 >= v33) {
    goto LABEL_31;
  }
  unint64_t v17 = *(void *)(v32 + 8 * v6);
  if (v17) {
    goto LABEL_26;
  }
  int64_t v18 = v16 + 4;
  if (v18 < v33)
  {
    unint64_t v17 = *(void *)(v32 + 8 * v18);
    if (v17)
    {
      uint64_t v6 = v18;
LABEL_26:
      unint64_t v8 = (v17 - 1) & v17;
      unint64_t v15 = __clz(__rbit64(v17)) + (v6 << 6);
      goto LABEL_27;
    }
    while (1)
    {
      uint64_t v6 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        break;
      }
      if (v6 >= v33) {
        goto LABEL_31;
      }
      unint64_t v17 = *(void *)(v32 + 8 * v6);
      ++v18;
      if (v17) {
        goto LABEL_26;
      }
    }
    __break(1u);
    goto LABEL_48;
  }
LABEL_31:
  swift_release();
  return v31;
}

uint64_t MedicalRecordUnitCollector.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordUnitCollector.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

double sub_1C24AAF2C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C21A6470(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v16 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C24AD7C8();
      uint64_t v11 = v16;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56) + 72 * v8;
    long long v13 = *(_OWORD *)(v12 + 48);
    *(_OWORD *)(a3 + 32) = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(a3 + 48) = v13;
    *(void *)(a3 + 64) = *(void *)(v12 + 64);
    long long v14 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v12;
    *(_OWORD *)(a3 + 16) = v14;
    sub_1C24ABFE8(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 64) = 0;
    double result = 0.0;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_1C24AB04C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C24573D8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v17 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C24AE18C();
      uint64_t v9 = v17;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1C254CB40();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56) + 48 * v6;
    uint64_t v13 = *(void *)(v12 + 24);
    char v14 = *(unsigned char *)(v12 + 32);
    uint64_t v15 = *(void *)(v12 + 40);
    *(unsigned char *)a2 = *(unsigned char *)v12;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)(v12 + 8);
    *(void *)(a2 + 24) = v13;
    *(unsigned char *)(a2 + 32) = v14;
    *(void *)(a2 + 40) = v15;
    sub_1C24AC36C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

uint64_t sub_1C24AB1A0(unint64_t a1)
{
  char v2 = v1;
  uint64_t v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_1C2457794(a1);
    char v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v9 = *v2;
      uint64_t v17 = *v2;
      *char v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1C24AECA8((void (*)(void))sub_1C2284D50);
        uint64_t v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v6 = (id)a1;
  uint64_t v7 = sub_1C25505A0();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v8 = sub_1C25502A0();
  uint64_t v9 = sub_1C24ABB44(v5, v8);
  swift_retain();
  a1 = sub_1C2457794((uint64_t)v6);
  char v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  uint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * a1);
  sub_1C24AC688(a1, v9);
  *char v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

double sub_1C24AB304@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C2457874(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C24AFB94();
      uint64_t v9 = v16;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for BrowseCategory();
    sub_1C2268C64(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6);
    uint64_t v12 = *(void *)(v9 + 56) + 72 * v6;
    long long v13 = *(_OWORD *)(v12 + 48);
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(a2 + 48) = v13;
    *(void *)(a2 + 64) = *(void *)(v12 + 64);
    long long v14 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v12;
    *(_OWORD *)(a2 + 16) = v14;
    sub_1C24ACB34(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 64) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C24AB434(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C21A6470(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C24B002C(&qword_1EBB6EEC8, (unint64_t *)&qword_1EBB6F510);
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1C24AD084(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

double sub_1C24AB51C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C24573D8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C24B0208();
      uint64_t v9 = v16;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1C254CB40();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56) + 72 * v6;
    long long v13 = *(_OWORD *)(v12 + 48);
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(a2 + 48) = v13;
    *(void *)(a2 + 64) = *(void *)(v12 + 64);
    long long v14 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v12;
    *(_OWORD *)(a2 + 16) = v14;
    sub_1C24AD25C(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 64) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C24AB664(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C2206E60(0, (unint64_t *)&qword_1EA2DE518, &qword_1EBB6FF78, 0x1E4F2B448, (unint64_t *)&qword_1EBB6FF80);
    uint64_t v2 = sub_1C2550670();
    uint64_t v18 = v2;
    sub_1C2550520();
    uint64_t v3 = sub_1C25505B0();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1C21AB51C(0, &qword_1EBB6FF78);
      do
      {
        swift_dynamicCast();
        sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1C22791F0(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1C254FF60();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1C25505B0();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_1C24AB8D4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C2206E60(0, &qword_1EA2DE500, &qword_1EA2DE508, 0x1E4F2B1B0, &qword_1EA2DE510);
    uint64_t v2 = sub_1C2550670();
    uint64_t v18 = v2;
    sub_1C2550520();
    uint64_t v3 = sub_1C25505B0();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1C21AB51C(0, &qword_1EA2DE508);
      do
      {
        swift_dynamicCast();
        sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1C2279E00(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1C254FF60();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1C25505B0();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_1C24ABB44(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C2284D50();
    uint64_t v2 = sub_1C2550670();
    uint64_t v18 = v2;
    sub_1C2550520();
    uint64_t v3 = sub_1C25505B0();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1C21AB51C(0, (unint64_t *)&unk_1EA2DE0C0);
      do
      {
        swift_dynamicCast();
        sub_1C21AB51C(0, &qword_1EA2DF8E0);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1C227B898(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1C254FF60();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1C25505B0();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_1C24ABD94(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C22849E4();
    uint64_t v2 = sub_1C2550670();
    uint64_t v18 = v2;
    sub_1C2550520();
    uint64_t v3 = sub_1C25505B0();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1C21AB51C(0, &qword_1EBB6FFA0);
      do
      {
        swift_dynamicCast();
        sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1C2280734(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1C254FF60();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1C25505B0();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

unint64_t sub_1C24ABFE8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C2550210();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C25509C0();
        swift_bridgeObjectRetain();
        sub_1C254F570();
        uint64_t v9 = sub_1C2550A10();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          char v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t result = v14 + 72 * v3;
          BOOL v15 = (const void *)(v14 + 72 * v6);
          if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v15 + 72))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v15, 0x48uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C24AC1CC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1C2550210();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_1C25509B0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              void *v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C24AC36C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = sub_1C2550210();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      char v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      unint64_t v37 = (result + 1) & v12;
      id v38 = v13;
      uint64_t v14 = *(void *)(v5 + 72);
      uint64_t v39 = v5 + 16;
      uint64_t v36 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v15 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v14;
        int64_t v18 = v14 * v11;
        uint64_t v19 = v15;
        v38(v8, *(void *)(a2 + 48) + v14 * v11, v4);
        sub_1C24B22B0((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
        uint64_t v20 = sub_1C254F370();
        unint64_t result = (*v36)(v8, v4);
        uint64_t v15 = v19;
        unint64_t v21 = v20 & v19;
        if (a1 >= (uint64_t)v37)
        {
          if (v21 >= v37 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            uint64_t v24 = *(void *)(a2 + 48);
            unint64_t result = v24 + v17 * a1;
            uint64_t v9 = v16;
            if (v17 * a1 < v18 || (uint64_t v14 = v17, result >= v24 + v18 + v17))
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              uint64_t v14 = v17;
              uint64_t v15 = v19;
            }
            else if (v17 * a1 != v18)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            uint64_t v25 = *(void *)(a2 + 56);
            unint64_t v26 = (long long *)(v25 + 48 * a1);
            uint64_t v27 = (long long *)(v25 + 48 * v11);
            if (a1 != v11 || (a1 = v11, v26 >= v27 + 3))
            {
              long long v28 = *v27;
              long long v29 = v27[2];
              v26[1] = v27[1];
              v26[2] = v29;
              long long *v26 = v28;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v37 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
        uint64_t v14 = v17;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v15;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    id v30 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    id v30 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *id v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1C24AC688(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1C2550210();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_1C254FF60();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(a2 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1) {
              *uint64_t v16 = *v17;
            }
            uint64_t v18 = *(void *)(a2 + 56);
            uint64_t v19 = (void *)(v18 + 8 * v3);
            uint64_t v20 = (void *)(v18 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              *uint64_t v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << a1) - 1;
  }
  *unint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1C24AC83C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CAD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v33 = a2 + 64;
    uint64_t v11 = sub_1C2550210();
    uint64_t v12 = v33;
    if ((*(void *)(v33 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v30 = (v11 + 1) & v10;
      uint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v32 = v5 + 16;
      char v13 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v9;
        v31(v7, *(void *)(a2 + 48) + v14 * v9, v4);
        sub_1C24B22B0(&qword_1EA2DD9B0, MEMORY[0x1E4F27928]);
        uint64_t v17 = sub_1C254F370();
        (*v13)(v7, v4);
        unint64_t v18 = v17 & v10;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 >= v30 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v14 = v15;
            if (v15 * a1 < v16
              || *(void *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v21 = *(void *)(a2 + 56);
            uint64_t v22 = (void *)(v21 + 8 * a1);
            uint64_t v23 = (void *)(v21 + 8 * v9);
            uint64_t v12 = v33;
            if (a1 != v9 || (a1 = v9, v22 >= v23 + 1))
            {
              void *v22 = *v23;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v30 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v33;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v12 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v24 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_1C24ACB34(unint64_t a1, uint64_t a2)
{
  uint64_t v26 = type metadata accessor for BrowseCategory();
  uint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2 + 64;
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v11 = sub_1C2550210();
    if ((*(void *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v12 = (v11 + 1) & v10;
      uint64_t v13 = *(void *)(v4 + 72);
      do
      {
        int64_t v14 = v13 * v9;
        sub_1C2285178(*(void *)(a2 + 48) + v13 * v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
        sub_1C25509C0();
        BrowseCategory.rawValue.getter();
        sub_1C254F570();
        swift_bridgeObjectRelease();
        uint64_t v15 = sub_1C2550A10();
        sub_1C2268C64((uint64_t)v6);
        unint64_t v16 = v15 & v10;
        if ((uint64_t)a1 >= (uint64_t)v12)
        {
          if (v16 < v12) {
            goto LABEL_5;
          }
        }
        else if (v16 >= v12)
        {
          goto LABEL_11;
        }
        if ((uint64_t)a1 >= (uint64_t)v16)
        {
LABEL_11:
          if ((uint64_t)(v13 * a1) < v14 || *(void *)(a2 + 48) + v13 * a1 >= *(void *)(a2 + 48) + v14 + v13)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v13 * a1 != v14)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v17 = *(void *)(a2 + 56);
          unint64_t v18 = (char *)(v17 + 72 * a1);
          uint64_t v19 = (char *)(v17 + 72 * v9);
          if (a1 != v9 || (a1 = v9, v18 >= v19 + 72))
          {
            memmove(v18, v19, 0x48uLL);
            a1 = v9;
          }
        }
LABEL_5:
        unint64_t v9 = (v9 + 1) & v10;
      }
      while (((*(void *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << a1) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1C24ACDE4(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  unint64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1C2550210();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        int64_t v34 = v3;
        unint64_t v11 = v8;
        uint64_t v12 = v4;
        uint64_t v13 = 32 * v6;
        uint64_t v14 = v2;
        uint64_t v15 = *(void *)(v2 + 48) + 32 * v6;
        uint64_t v17 = *(void *)v15;
        uint64_t v16 = *(void *)(v15 + 8);
        uint64_t v18 = *(void *)(v15 + 16);
        int v19 = *(unsigned __int8 *)(v15 + 24);
        sub_1C25509C0();
        if (v19 == 1)
        {
          if (v18 | v16 | v17)
          {
            uint64_t v2 = v14;
            sub_1C25509D0();
            uint64_t v4 = v12;
            unint64_t v8 = v11;
            goto LABEL_12;
          }
          sub_1C25509D0();
        }
        else
        {
          sub_1C25509D0();
          sub_1C2550A00();
          sub_1C2550A00();
          sub_1C2550A00();
        }
        uint64_t v4 = v12;
        unint64_t v8 = v11;
        uint64_t v2 = v14;
LABEL_12:
        unint64_t v3 = v34;
        unint64_t result = sub_1C2550A10();
        unint64_t v20 = result & v7;
        if (v34 >= (uint64_t)v8)
        {
          if (v20 < v8) {
            goto LABEL_5;
          }
        }
        else if (v20 >= v8)
        {
          goto LABEL_17;
        }
        if (v34 >= (uint64_t)v20)
        {
LABEL_17:
          uint64_t v21 = *(void *)(v2 + 48);
          uint64_t v22 = (_OWORD *)(v21 + 32 * v34);
          uint64_t v23 = (_OWORD *)(v21 + v13);
          if (32 * v34 != v13 || v22 >= v23 + 2)
          {
            long long v24 = v23[1];
            _OWORD *v22 = *v23;
            v22[1] = v24;
          }
          uint64_t v25 = *(void *)(v2 + 56);
          uint64_t v26 = (long long *)(v25 + 48 * v34);
          uint64_t v27 = (long long *)(v25 + 48 * v6);
          if (v34 != v6 || (unint64_t v3 = v6, v26 >= v27 + 3))
          {
            long long v9 = *v27;
            long long v10 = v27[2];
            v26[1] = v27[1];
            v26[2] = v10;
            long long *v26 = v9;
            unint64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v28 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v28 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << result) - 1;
  }
  *BOOL v28 = v30 & v29;
  uint64_t v31 = *(void *)(v2 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v33;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_1C24AD084(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1C2550210();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C25509C0();
        swift_bridgeObjectRetain();
        sub_1C254F570();
        uint64_t v9 = sub_1C2550A10();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

char *sub_1C24AD25C(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = (char *)MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = (char *)sub_1C2550210();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      unint64_t v33 = (unint64_t)(result + 1) & v12;
      int64_t v34 = v13;
      uint64_t v14 = *(void *)(v5 + 72);
      uint64_t v35 = v5 + 16;
      BOOL v32 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v15 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v14;
        int64_t v18 = v14 * v11;
        uint64_t v19 = v15;
        v34(v8, *(void *)(a2 + 48) + v14 * v11, v4);
        sub_1C24B22B0((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
        uint64_t v20 = sub_1C254F370();
        unint64_t result = (char *)(*v32)(v8, v4);
        uint64_t v15 = v19;
        unint64_t v21 = v20 & v19;
        if (a1 >= (uint64_t)v33)
        {
          if (v21 >= v33 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            uint64_t v9 = v16;
            if (v17 * a1 < v18
              || (uint64_t v14 = v17, *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              uint64_t v14 = v17;
              uint64_t v15 = v19;
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            uint64_t v24 = *(void *)(a2 + 56);
            unint64_t result = (char *)(v24 + 72 * a1);
            uint64_t v25 = (char *)(v24 + 72 * v11);
            if (a1 != v11 || (a1 = v11, result >= v25 + 72))
            {
              unint64_t result = (char *)memmove(result, v25, 0x48uLL);
              uint64_t v14 = v17;
              uint64_t v15 = v19;
              a1 = v11;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v33 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
        uint64_t v14 = v17;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v15;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    uint64_t v26 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v26;
    uint64_t v28 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v26 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v28 = *v26;
    uint64_t v27 = (-1 << a1) - 1;
  }
  uint64_t *v26 = v28 & v27;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

id sub_1C24AD578()
{
  return sub_1C24ADE04((unint64_t *)&qword_1EA2DE518, &qword_1EBB6FF78, 0x1E4F2B448, (unint64_t *)&qword_1EBB6FF80);
}

id sub_1C24AD59C()
{
  uint64_t v1 = v0;
  sub_1C21A95CC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 72 * v15;
    char v17 = *(unsigned char *)v16;
    uint64_t v19 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
    long long v20 = *(_OWORD *)(v16 + 24);
    long long v21 = *(_OWORD *)(v16 + 40);
    long long v27 = *(_OWORD *)(v16 + 56);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v22 = *(void *)(v4 + 56) + 72 * v15;
    *(unsigned char *)uint64_t v22 = v17;
    *(void *)(v22 + 8) = v19;
    *(void *)(v22 + 16) = v18;
    *(_OWORD *)(v22 + 24) = v20;
    *(_OWORD *)(v22 + 40) = v21;
    *(_OWORD *)(v22 + 56) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v23 = *((id *)&v27 + 1);
    id result = v19;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C24AD7AC()
{
  return sub_1C24AD9E8(&qword_1EA2DE590, &qword_1EBB6EEA8, (uint64_t)off_1E6449E10);
}

void *sub_1C24AD7C8()
{
  uint64_t v1 = v0;
  sub_1C22077A4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v29 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 72 * v15;
    sub_1C2284EE8(*(void *)(v2 + 56) + 72 * v15, (uint64_t)v30);
    long long v21 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v21 = v19;
    v21[1] = v18;
    uint64_t v22 = *(void *)(v4 + 56) + v20;
    *(_OWORD *)uint64_t v22 = v30[0];
    long long v23 = v30[1];
    long long v24 = v30[2];
    long long v25 = v30[3];
    *(void *)(v22 + 64) = v31;
    *(_OWORD *)(v22 + 32) = v24;
    *(_OWORD *)(v22 + 48) = v25;
    *(_OWORD *)(v22 + 16) = v23;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v29;
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C24AD9CC()
{
  return sub_1C24AD9E8(&qword_1EA2DE578, (unint64_t *)&qword_1EBB6EEB8, 0x1E4FB1818);
}

id sub_1C24AD9E8(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1C2284E6C(0, a1, a2, a3, MEMORY[0x1E4FBBD58]);
  uint64_t v5 = *v3;
  uint64_t v6 = sub_1C2550650();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v4 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v16) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v12;
    if (!v22)
    {
      int64_t v12 = v21 + 1;
      if (v21 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v12);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    uint64_t v19 = 8 * v18;
    uint64_t v20 = *(void **)(*(void *)(v5 + 56) + v19);
    *(void *)(*(void *)(v7 + 48) + v19) = *(void *)(*(void *)(v5 + 48) + v19);
    *(void *)(*(void *)(v7 + 56) + v19) = v20;
    id result = v20;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v16) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v12);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C24ADBA8()
{
  uint64_t v1 = v0;
  sub_1C24B22F8(0, (unint64_t *)&qword_1EA2DE4A8, sub_1C227071C, (void (*)(void))sub_1C2206108);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 32 * v15;
    unint64_t v18 = *(void **)(v17 + 24);
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    long long v22 = *(_OWORD *)(v17 + 8);
    *(void *)uint64_t v21 = *(void *)v17;
    *(_OWORD *)(v21 + 8) = v22;
    *(void *)(v21 + 24) = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    int64_t v23 = (void *)*((void *)&v22 + 1);
    id v24 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = v23;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C24ADDC0()
{
  return sub_1C24AE8A4((unint64_t *)&qword_1EA2DE498, sub_1C227071C);
}

id sub_1C24ADDE0()
{
  return sub_1C24ADE04(&qword_1EA2DE500, &qword_1EA2DE508, 0x1E4F2B1B0, &qword_1EA2DE510);
}

id sub_1C24ADE04(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  sub_1C2206E60(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1C2550650();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v5 = v8;
    return result;
  }
  id result = (id)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v17) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v10 + 8 * v24);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v24 + 1;
      if (v24 + 1 >= v17) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v10 + 8 * v13);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v25 - 1) & v25;
    unint64_t v19 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 8 * v19;
    uint64_t v21 = *(void **)(*(void *)(v6 + 48) + v20);
    long long v22 = *(void **)(*(void *)(v6 + 56) + v20);
    *(void *)(*(void *)(v8 + 48) + v20) = v21;
    *(void *)(*(void *)(v8 + 56) + v20) = v22;
    id v23 = v21;
    id result = v22;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v17) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v10 + 8 * v26);
  if (v25)
  {
    int64_t v13 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v10 + 8 * v13);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C24ADFB8()
{
  uint64_t v1 = v0;
  sub_1C2207AB4(0, (unint64_t *)&qword_1EA2DE558);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    id v23 = (void *)(*(void *)(v4 + 48) + v16);
    *id v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C24AE18C()
{
  uint64_t v39 = sub_1C254CB40();
  uint64_t v41 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  id v38 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C220722C();
  unint64_t v33 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v42 = v3;
  if (!v4)
  {
    id result = (id)swift_release();
    uint64_t v32 = v42;
    uint64_t v31 = v33;
LABEL_28:
    *uint64_t v31 = v32;
    return result;
  }
  uint64_t v5 = v3;
  id result = (id)(v3 + 64);
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  int64_t v34 = (const void *)(v2 + 64);
  if (v5 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
  {
    id result = memmove(result, v34, 8 * v7);
    uint64_t v5 = v42;
  }
  int64_t v9 = 0;
  *(void *)(v5 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v40 = v2;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  uint64_t v13 = v42;
  uint64_t v37 = v41 + 16;
  int64_t v35 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v36 = v41 + 32;
  uint64_t v14 = v41;
  uint64_t v16 = v38;
  uint64_t v15 = v39;
  while (1)
  {
    if (v12)
    {
      uint64_t v43 = (v12 - 1) & v12;
      int64_t v44 = v9;
      unint64_t v17 = __clz(__rbit64(v12)) | (v9 << 6);
      uint64_t v18 = v40;
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    uint64_t v18 = v40;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v35) {
      goto LABEL_26;
    }
    unint64_t v28 = *((void *)v34 + v27);
    int64_t v29 = v9 + 1;
    if (!v28)
    {
      int64_t v29 = v9 + 2;
      if (v9 + 2 >= v35) {
        goto LABEL_26;
      }
      unint64_t v28 = *((void *)v34 + v29);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    uint64_t v43 = (v28 - 1) & v28;
    int64_t v44 = v29;
    unint64_t v17 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v14 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v16, *(void *)(v18 + 48) + v19, v15);
    uint64_t v20 = 48 * v17;
    uint64_t v21 = *(void *)(v18 + 56) + v20;
    char v22 = *(unsigned char *)v21;
    long long v45 = *(_OWORD *)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 24);
    char v24 = *(unsigned char *)(v21 + 32);
    int64_t v25 = *(void **)(v21 + 40);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v13 + 48) + v19, v16, v15);
    uint64_t v26 = *(void *)(v13 + 56) + v20;
    *(unsigned char *)uint64_t v26 = v22;
    *(_OWORD *)(v26 + 8) = v45;
    *(void *)(v26 + 24) = v23;
    *(unsigned char *)(v26 + 32) = v24;
    *(void *)(v26 + 40) = v25;
    id result = v25;
    unint64_t v12 = v43;
    int64_t v9 = v44;
  }
  uint64_t v30 = v9 + 3;
  if (v9 + 3 >= v35)
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t v31 = v33;
    uint64_t v32 = v42;
    goto LABEL_28;
  }
  unint64_t v28 = *((void *)v34 + v30);
  if (v28)
  {
    int64_t v29 = v9 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v29 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v29 >= v35) {
      goto LABEL_26;
    }
    unint64_t v28 = *((void *)v34 + v29);
    ++v30;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C24AE4A4()
{
  uint64_t v1 = v0;
  sub_1C2207AB4(0, (unint64_t *)&qword_1EA2DF6B8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    long long v21 = *(_OWORD *)(v19 + 8);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v22 = v20;
    *(_OWORD *)(v22 + 8) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C24AE67C()
{
  uint64_t v1 = v0;
  sub_1C2207AB4(0, (unint64_t *)&qword_1EA2DE540);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1C21A9A38(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    long long v21 = (void *)(*(void *)(v4 + 48) + v16);
    *long long v21 = v19;
    v21[1] = v18;
    sub_1C2206B9C(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C24AE884()
{
  return sub_1C24AE8A4((unint64_t *)&qword_1EA2DF8A8, (void (*)(uint64_t))sub_1C24B2378);
}

void *sub_1C24AE8A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t v3 = v2;
  sub_1C24B2438(0, a1, a2);
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1C2550650();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v3 = v6;
    return result;
  }
  id result = (void *)(v5 + 64);
  uint64_t v8 = v4 + 64;
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
  }
  int64_t v11 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v8 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v8 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v17);
    uint64_t v20 = v19[1];
    uint64_t v21 = 8 * v17;
    uint64_t v22 = *(void *)(*(void *)(v4 + 56) + v21);
    unint64_t v23 = (void *)(*(void *)(v6 + 48) + v18);
    *unint64_t v23 = *v19;
    v23[1] = v20;
    *(void *)(*(void *)(v6 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v8 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v8 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C24AEA70()
{
  return sub_1C24B002C(&qword_1EA2DF898, &qword_1EA2DF8A0);
}

void *sub_1C24AEA8C()
{
  uint64_t v1 = v0;
  sub_1C24B2438(0, &qword_1EA2DF9C0, (void (*)(uint64_t))type metadata accessor for MedicalRecordChartableSeriesCollector);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    sub_1C22859F4(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v17 = *(void *)(v4 + 48) + 40 * v15;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C24AEC90()
{
  return sub_1C24AECA8((void (*)(void))sub_1C2284D50);
}

id sub_1C24AECA8(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C2550650();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    long long v18 = *(void **)(*(void *)(v3 + 48) + v17);
    long long v19 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C24AEE54()
{
  uint64_t v1 = v0;
  sub_1C2206AFC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_1C21A9A38(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_1C2206B9C(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C24AF018()
{
  return sub_1C24B002C(&qword_1EA2DE480, (unint64_t *)&qword_1EA2DE010);
}

void *sub_1C24AF034()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BrowseCategory();
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2208178();
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C2550650();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v25 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v9 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v26 + 72) * v18;
    sub_1C2285178(*(void *)(v5 + 48) + v19, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
    sub_1C2207DD8((uint64_t)v4, *(void *)(v7 + 48) + v19);
    *(void *)(*(void *)(v7 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v9 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v9 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C24AF2A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BrowseCategory();
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C220823C();
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C2550650();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v25 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v9 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v26 + 72) * v18;
    sub_1C2285178(*(void *)(v5 + 48) + v19, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v5 + 56) + v20);
    id result = (void *)sub_1C2207DD8((uint64_t)v4, *(void *)(v7 + 48) + v19);
    *(void *)(*(void *)(v7 + 56) + v20) = v21;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v9 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v9 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C24AF504()
{
  return sub_1C24AF8F8(MEMORY[0x1E4F27990], (void (*)(void, __n128))sub_1C2207F78);
}

void *sub_1C24AF530()
{
  uint64_t v1 = v0;
  sub_1C24B2438(0, &qword_1EBB6DD90, (void (*)(uint64_t))sub_1C228541C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C24AF710()
{
  return sub_1C24B002C(&qword_1EBB6DD98, &qword_1EBB6DD88);
}

void *sub_1C24AF72C()
{
  uint64_t v1 = v0;
  sub_1C228529C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C24AF8CC()
{
  return sub_1C24AF8F8(MEMORY[0x1E4F27928], (void (*)(void, __n128))sub_1C22851E0);
}

id sub_1C24AF8F8(uint64_t (*a1)(void), void (*a2)(void, __n128))
{
  uint64_t v4 = a1(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v27 - v7;
  a2(0, v6);
  unint64_t v28 = v2;
  uint64_t v9 = *v2;
  uint64_t v10 = sub_1C2550650();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *unint64_t v28 = v11;
    return result;
  }
  id result = (id)(v10 + 64);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 64 + 8 * v13) {
    id result = memmove(result, (const void *)(v9 + 64), 8 * v13);
  }
  uint64_t v29 = v9 + 64;
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 64);
  uint64_t v32 = v5 + 16;
  int64_t v30 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v31 = v5 + 32;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v30) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v24);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v24 + 1;
      if (v24 + 1 >= v30) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v29 + 8 * v15);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v18 = (v25 - 1) & v25;
    unint64_t v20 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v5 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v8, *(void *)(v9 + 48) + v21, v4);
    uint64_t v22 = 8 * v20;
    unint64_t v23 = *(void **)(*(void *)(v9 + 56) + v22);
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(void *)(v11 + 48) + v21, v8, v4);
    *(void *)(*(void *)(v11 + 56) + v22) = v23;
    id result = v23;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v30) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v29 + 8 * v26);
  if (v25)
  {
    int64_t v15 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v15 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v15 >= v30) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v15);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C24AFB94()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BrowseCategory();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2207CE4();
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1C2550650();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v29 = v1;
  id result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v17) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v10 + 8 * v26);
    ++v13;
    if (!v27)
    {
      int64_t v13 = v26 + 1;
      if (v26 + 1 >= v17) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v10 + 8 * v13);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v19 = __clz(__rbit64(v27)) + (v13 << 6);
LABEL_12:
    unint64_t v20 = *(void *)(v3 + 72) * v19;
    sub_1C2285178(*(void *)(v6 + 48) + v20, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    uint64_t v21 = 72 * v19;
    sub_1C2285178(*(void *)(v6 + 56) + v21, (uint64_t)v30, (uint64_t (*)(void))sub_1C2207C80);
    id result = (void *)sub_1C2207DD8((uint64_t)v5, *(void *)(v8 + 48) + v20);
    uint64_t v22 = *(void *)(v8 + 56) + v21;
    long long v23 = v30[1];
    long long v24 = v30[2];
    long long v25 = v30[3];
    *(void *)(v22 + 64) = v31;
    *(_OWORD *)(v22 + 32) = v24;
    *(_OWORD *)(v22 + 48) = v25;
    *(_OWORD *)(v22 + 16) = v23;
    *(_OWORD *)uint64_t v22 = v30[0];
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v17)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v29;
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v10 + 8 * v28);
  if (v27)
  {
    int64_t v13 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v10 + 8 * v13);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C24AFE38()
{
  uint64_t v1 = v0;
  sub_1C2207B64();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v30 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v13) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v30);
    ++v9;
    if (!v31)
    {
      int64_t v9 = v30 + 1;
      if (v30 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v31 = *(void *)(v6 + 8 * v9);
      if (!v31) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v31 - 1) & v31;
    unint64_t v15 = __clz(__rbit64(v31)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 32 * v15;
    uint64_t v18 = *(void *)(v17 + 16);
    char v19 = *(unsigned char *)(v17 + 24);
    uint64_t v20 = 48 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void **)v21;
    long long v23 = *(void **)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    uint64_t v26 = *(void *)(v21 + 32);
    unint64_t v27 = *(void **)(v21 + 40);
    uint64_t v28 = *(void *)(v4 + 48) + v16;
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v17;
    *(void *)(v28 + 16) = v18;
    *(unsigned char *)(v28 + 24) = v19;
    uint64_t v29 = (void *)(*(void *)(v4 + 56) + v20);
    void *v29 = v22;
    v29[1] = v23;
    id v29[2] = v24;
    v29[3] = v25;
    v29[4] = v26;
    v29[5] = v27;
    id result = sub_1C2207BC8(v22, v23, v24, v25, v26, v27);
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v13) {
    goto LABEL_26;
  }
  unint64_t v31 = *(void *)(v6 + 8 * v32);
  if (v31)
  {
    int64_t v9 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v9);
    ++v32;
    if (v31) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C24B0010()
{
  return sub_1C24B002C(&qword_1EBB6EEC8, (unint64_t *)&qword_1EBB6F510);
}

id sub_1C24B002C(unint64_t *a1, unint64_t *a2)
{
  uint64_t v3 = v2;
  sub_1C2205EE8(0, a1, a2);
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1C2550650();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v3 = v6;
    return result;
  }
  id result = (id)(v5 + 64);
  uint64_t v8 = v4 + 64;
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
  }
  int64_t v11 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v8 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v8 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    char v19 = (void *)(*(void *)(v4 + 48) + 16 * v17);
    uint64_t v20 = v19[1];
    uint64_t v21 = 8 * v17;
    uint64_t v22 = *(void **)(*(void *)(v4 + 56) + v21);
    long long v23 = (void *)(*(void *)(v6 + 48) + v18);
    *long long v23 = *v19;
    v23[1] = v20;
    *(void *)(*(void *)(v6 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    id result = v22;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v8 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v8 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C24B01E8()
{
  return sub_1C24AE8A4((unint64_t *)&qword_1EA2DF8F0, (void (*)(uint64_t))sub_1C24B23E0);
}

void *sub_1C24B0208()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2207998();
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1C2550650();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v28 = v1;
  id result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v29 = v6 + 64;
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v30 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v31 = v3 + 16;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v30) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v24);
    ++v12;
    if (!v25)
    {
      int64_t v12 = v24 + 1;
      if (v24 + 1 >= v30) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v29 + 8 * v12);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v12 << 6);
LABEL_12:
    unint64_t v18 = *(void *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v18, v2);
    uint64_t v19 = 72 * v17;
    sub_1C2285178(*(void *)(v6 + 56) + v19, (uint64_t)v32, (uint64_t (*)(void))sub_1C2207934);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v18, v5, v2);
    uint64_t v20 = *(void *)(v8 + 56) + v19;
    long long v21 = v32[1];
    long long v22 = v32[2];
    long long v23 = v32[3];
    *(void *)(v20 + 64) = v33;
    *(_OWORD *)(v20 + 32) = v22;
    *(_OWORD *)(v20 + 48) = v23;
    *(_OWORD *)(v20 + 16) = v21;
    *(_OWORD *)uint64_t v20 = v32[0];
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v30)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v28;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v29 + 8 * v26);
  if (v25)
  {
    int64_t v12 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v12 >= v30) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v29 + 8 * v12);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C24B04DC()
{
  uint64_t v1 = v0;
  sub_1C220761C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 32 * v15;
    uint64_t v18 = *(void *)(v17 + 16);
    char v19 = *(unsigned char *)(v17 + 24);
    uint64_t v20 = 48 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    char v22 = *(unsigned char *)v21;
    uint64_t v23 = *(void *)(v21 + 24);
    char v24 = *(unsigned char *)(v21 + 32);
    unint64_t v25 = *(void **)(v21 + 40);
    uint64_t v26 = *(void *)(v4 + 48) + v16;
    long long v27 = *(_OWORD *)(v21 + 8);
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v17;
    *(void *)(v26 + 16) = v18;
    *(unsigned char *)(v26 + 24) = v19;
    uint64_t v28 = *(void *)(v4 + 56) + v20;
    *(unsigned char *)uint64_t v28 = v22;
    *(_OWORD *)(v28 + 8) = v27;
    *(void *)(v28 + 24) = v23;
    *(unsigned char *)(v28 + 32) = v24;
    *(void *)(v28 + 40) = v25;
    id result = v25;
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C24B06C4()
{
  uint64_t v1 = v0;
  sub_1C24B22F8(0, &qword_1EBB70040, (void (*)(uint64_t))type metadata accessor for CategoryCountProvider, (void (*)(void))sub_1C220732C);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = 72 * v15;
    uint64_t v18 = *(void *)(v2 + 48) + v17;
    uint64_t v20 = *(void **)(v18 + 8);
    uint64_t v19 = *(void *)(v18 + 16);
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v16);
    uint64_t v22 = *(void *)(v4 + 48) + v17;
    long long v23 = *(_OWORD *)(v18 + 24);
    long long v24 = *(_OWORD *)(v18 + 40);
    long long v29 = *(_OWORD *)(v18 + 56);
    *(unsigned char *)uint64_t v22 = *(unsigned char *)v18;
    *(void *)(v22 + 8) = v20;
    *(void *)(v22 + 16) = v19;
    *(_OWORD *)(v22 + 24) = v23;
    *(_OWORD *)(v22 + 40) = v24;
    *(_OWORD *)(v22 + 56) = v29;
    *(void *)(*(void *)(v4 + 56) + v16) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v25 = *((id *)&v29 + 1);
    swift_retain();
    id result = v20;
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C24B0920()
{
  return sub_1C24B0944((unint64_t *)&qword_1EBB6F4D8, &qword_1EBB6EF58, 0x1E4F2B3D0, (unint64_t *)&qword_1EBB6EFD8);
}

id sub_1C24B0944(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  sub_1C24B221C(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1C2550650();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v5 = v8;
    return result;
  }
  id result = (id)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 64);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v17) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v10 + 8 * v23);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v17) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v10 + 8 * v13);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v24 - 1) & v24;
    unint64_t v19 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 8 * v19;
    uint64_t v21 = *(void **)(*(void *)(v6 + 48) + v20);
    uint64_t v22 = *(void *)(*(void *)(v6 + 56) + v20);
    *(void *)(*(void *)(v8 + 48) + v20) = v21;
    *(void *)(*(void *)(v8 + 56) + v20) = v22;
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v17) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v10 + 8 * v25);
  if (v24)
  {
    int64_t v13 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v10 + 8 * v13);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C24B0AF4()
{
  uint64_t v1 = v0;
  sub_1C22072C8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = 72 * v15;
    uint64_t v18 = *(void *)(v2 + 48) + v17;
    uint64_t v20 = *(void **)(v18 + 8);
    uint64_t v19 = *(void *)(v18 + 16);
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v16);
    uint64_t v22 = *(void *)(v4 + 48) + v17;
    long long v23 = *(_OWORD *)(v18 + 24);
    long long v24 = *(_OWORD *)(v18 + 40);
    long long v29 = *(_OWORD *)(v18 + 56);
    *(unsigned char *)uint64_t v22 = *(unsigned char *)v18;
    *(void *)(v22 + 8) = v20;
    *(void *)(v22 + 16) = v19;
    *(_OWORD *)(v22 + 24) = v23;
    *(_OWORD *)(v22 + 40) = v24;
    *(_OWORD *)(v22 + 56) = v29;
    *(void *)(*(void *)(v4 + 56) + v16) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v25 = *((id *)&v29 + 1);
    id result = v20;
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C24B0D08()
{
  uint64_t v1 = v0;
  sub_1C22069CC();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C24B0EA8()
{
  uint64_t v1 = v0;
  sub_1C2284948();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2550650();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 48 * v15;
    int64_t v19 = (long long *)(*(void *)(v2 + 56) + v18);
    long long v29 = *v19;
    long long v20 = *v19;
    long long v30 = v19[1];
    long long v21 = v19[2];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = (_OWORD *)(*(void *)(v4 + 56) + v18);
    _OWORD *v22 = v20;
    v22[1] = v30;
    _OWORD v22[2] = v21;
    id v23 = v17;
    id v24 = (id)v29;
    swift_retain();
    swift_retain();
    id v25 = *((id *)&v30 + 1);
    swift_retain();
    id result = (void *)swift_retain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C24B10B8()
{
  return sub_1C24AECA8((void (*)(void))sub_1C22849E4);
}

uint64_t sub_1C24B10D0()
{
  uint64_t v0 = sub_1C254C830();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C25502A0())
  {
    sub_1C24B221C(0, (unint64_t *)&qword_1EA2DF8C8, (unint64_t *)&unk_1EA2DE0C0, 0x1E4F2B618, &qword_1EA2DF8D0);
    uint64_t v4 = sub_1C2550680();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC868];
  }
  uint64_t v39 = v4;
  uint64_t v5 = sub_1C2550520();
  swift_unknownObjectRetain();
  uint64_t v32 = v5;
  uint64_t v6 = sub_1C25505B0();
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    uint64_t v31 = sub_1C21AB51C(0, (unint64_t *)&unk_1EA2DE0C0);
    long long v29 = (void (**)(char *, uint64_t))(v1 + 8);
    uint64_t v30 = MEMORY[0x1E4FBC838] + 8;
    while (1)
    {
      *(void *)&long long v35 = v8;
      swift_dynamicCast();
      *(void *)&long long v35 = v9;
      sub_1C21AB51C(0, &qword_1EA2DF8E0);
      swift_dynamicCast();
      uint64_t v18 = v38;
      id v19 = v37;
      sub_1C254FE30();

      sub_1C24B22B0(&qword_1EA2E4350, MEMORY[0x1E4F27660]);
      sub_1C2550110();
      if (v36) {
        break;
      }
      uint64_t v20 = 0;
LABEL_15:
      (*v29)(v3, v0);

      uint64_t v4 = v39;
      unint64_t v23 = *(void *)(v39 + 16);
      if (*(void *)(v39 + 24) <= v23)
      {
        sub_1C227BB84(v23 + 1, 1);
        uint64_t v4 = v39;
      }
      uint64_t result = sub_1C254FF60();
      uint64_t v11 = v4 + 64;
      uint64_t v12 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v13 = result & ~v12;
      unint64_t v14 = v13 >> 6;
      if (((-1 << v13) & ~*(void *)(v4 + 64 + 8 * (v13 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v12) >> 6;
        while (++v14 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v14 == v25;
          if (v14 == v25) {
            unint64_t v14 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v14);
          if (v27 != -1)
          {
            unint64_t v15 = __clz(__rbit64(~v27)) + (v14 << 6);
            goto LABEL_8;
          }
        }
        goto LABEL_27;
      }
      unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v4 + 64 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
LABEL_8:
      *(void *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v4 + 48) + v16) = v18;
      *(void *)(*(void *)(v4 + 56) + v16) = v20;
      ++*(void *)(v4 + 16);
      uint64_t v8 = sub_1C25505B0();
      uint64_t v9 = v17;
      if (!v8) {
        goto LABEL_25;
      }
    }
    uint64_t v20 = 0;
    while (1)
    {
      sub_1C2206B9C(&v35, &v33);
      __swift_project_boxed_opaque_existential_1Tm(&v33, v34);
      id v21 = objc_msgSend(v19, sel_countForObject_, sub_1C2550860());
      uint64_t result = swift_unknownObjectRelease();
      BOOL v22 = __OFADD__(v20, v21);
      v20 += (uint64_t)v21;
      if (v22) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);
      sub_1C2550110();
      if (!v36) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_release();
    return v4;
  }
  return result;
}

uint64_t sub_1C24B14DC(uint64_t a1)
{
  uint64_t v2 = sub_1C254C830();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24B221C(0, (unint64_t *)&qword_1EA2DF8C8, (unint64_t *)&unk_1EA2DE0C0, 0x1E4F2B618, &qword_1EA2DF8D0);
  uint64_t result = sub_1C2550650();
  int64_t v7 = 0;
  uint64_t v32 = result;
  uint64_t v33 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v9 = a1 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v28 = v9;
  int64_t v29 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v30 = result + 64;
  uint64_t v31 = (void (**)(char *, uint64_t))(v3 + 8);
  if (!v13) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v34 = (v13 - 1) & v13;
  int64_t v35 = v7;
  for (unint64_t i = __clz(__rbit64(v13)) | (v7 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v17 << 6))
  {
    unint64_t v41 = i;
    uint64_t v19 = 8 * i;
    uint64_t v20 = *(void **)(*(void *)(v33 + 56) + 8 * i);
    id v36 = *(id *)(*(void *)(v33 + 48) + 8 * i);
    id v21 = v20;
    sub_1C254FE30();
    sub_1C24B22B0(&qword_1EA2E4350, MEMORY[0x1E4F27660]);
    sub_1C2550110();
    if (v40)
    {
      uint64_t v22 = 0;
      while (1)
      {
        sub_1C2206B9C(&v39, &v37);
        __swift_project_boxed_opaque_existential_1Tm(&v37, v38);
        id v23 = objc_msgSend(v21, sel_countForObject_, sub_1C2550860());
        uint64_t result = swift_unknownObjectRelease();
        BOOL v24 = __OFADD__(v22, v23);
        v22 += (uint64_t)v23;
        if (v24) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v37);
        sub_1C2550110();
        if (!v40) {
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    uint64_t v22 = 0;
LABEL_25:
    (*v31)(v5, v2);

    *(void *)(v30 + ((v41 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v41;
    uint64_t result = v32;
    *(void *)(*(void *)(v32 + 48) + v19) = v36;
    *(void *)(*(void *)(result + 56) + v19) = v22;
    uint64_t v25 = *(void *)(result + 16);
    BOOL v24 = __OFADD__(v25, 1);
    uint64_t v26 = v25 + 1;
    if (v24) {
      goto LABEL_30;
    }
    *(void *)(result + 16) = v26;
    unint64_t v13 = v34;
    int64_t v7 = v35;
    if (v34) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_31;
    }
    if (v15 >= v29) {
      return result;
    }
    unint64_t v16 = *(void *)(v28 + 8 * v15);
    int64_t v17 = v7 + 1;
    if (!v16)
    {
      int64_t v17 = v7 + 2;
      if (v7 + 2 >= v29) {
        return result;
      }
      unint64_t v16 = *(void *)(v28 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v7 + 3;
        if (v7 + 3 >= v29) {
          return result;
        }
        unint64_t v16 = *(void *)(v28 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v34 = (v16 - 1) & v16;
    int64_t v35 = v17;
  }
  uint64_t v18 = v7 + 4;
  if (v7 + 4 >= v29) {
    return result;
  }
  unint64_t v16 = *(void *)(v28 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v7 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v29) {
      return result;
    }
    unint64_t v16 = *(void *)(v28 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void sub_1C24B1888(void *a1, char a2, void *a3)
{
  uint64_t v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  int64_t v7 = (void *)a1[4];
  uint64_t v41 = a1[5];
  swift_bridgeObjectRetain();
  uint64_t v42 = v7;
  uint64_t v8 = (void *)*a3;
  id v9 = v7;
  unint64_t v11 = sub_1C2457794((uint64_t)v9);
  uint64_t v12 = v8[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v8[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1C24B0944((unint64_t *)&qword_1EA2DF8C8, (unint64_t *)&unk_1EA2DE0C0, 0x1E4F2B618, &qword_1EA2DF8D0);
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v21 = 8 * v11;
    *(void *)(v20[6] + v21) = v9;
    *(void *)(v20[7] + v21) = v41;
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    void v20[2] = v24;
    uint64_t v25 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v26 = a1 + 7;
    while (1)
    {
      uint64_t v27 = *v26;
      uint64_t v42 = (void *)*(v26 - 1);
      uint64_t v28 = (void *)*a3;
      id v29 = v42;
      unint64_t v30 = sub_1C2457794((uint64_t)v29);
      uint64_t v32 = v28[2];
      BOOL v33 = (v31 & 1) == 0;
      BOOL v23 = __OFADD__(v32, v33);
      uint64_t v34 = v32 + v33;
      if (v23) {
        break;
      }
      char v35 = v31;
      if (v28[3] < v34)
      {
        sub_1C227BB84(v34, 1);
        unint64_t v30 = sub_1C2457794((uint64_t)v29);
        if ((v35 & 1) != (v36 & 1)) {
          goto LABEL_25;
        }
      }
      if (v35) {
        goto LABEL_10;
      }
      long long v37 = (void *)*a3;
      *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      uint64_t v38 = 8 * v30;
      *(void *)(v37[6] + v38) = v29;
      *(void *)(v37[7] + v38) = v27;
      uint64_t v39 = v37[2];
      BOOL v23 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v23) {
        goto LABEL_24;
      }
      v26 += 2;
      v37[2] = v40;
      if (!--v25) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1C227BB84(v14, a2 & 1);
  unint64_t v16 = sub_1C2457794((uint64_t)v9);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v18 = (void *)swift_allocError();
    swift_willThrow();
    id v19 = v18;
    sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1C21AB51C(0, (unint64_t *)&unk_1EA2DE0C0);
  sub_1C2550910();
  __break(1u);
LABEL_26:
  sub_1C25503A0();
  sub_1C254F5A0();
  sub_1C21AB51C(0, (unint64_t *)&unk_1EA2DE0C0);
  sub_1C25504F0();
  sub_1C254F5A0();
  sub_1C25505F0();
  __break(1u);
}

void sub_1C24B1C34(unint64_t a1, uint64_t a2)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v19 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    unint64_t v5 = sub_1C2550520() | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v3 = ~v6;
    unint64_t v19 = a1 + 64;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 64);
    unint64_t v5 = a1;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  uint64_t v17 = v3;
  int64_t v18 = (unint64_t)(v3 + 64) >> 6;
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v4)
  {
    uint64_t v10 = (v4 - 1) & v4;
    unint64_t v11 = __clz(__rbit64(v4)) | (v9 << 6);
    uint64_t v12 = v9;
    goto LABEL_29;
  }
  int64_t v14 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v14 < v18)
    {
      unint64_t v15 = *(void *)(v19 + 8 * v14);
      uint64_t v12 = v9 + 1;
      if (v15) {
        goto LABEL_28;
      }
      uint64_t v12 = v9 + 2;
      if (v9 + 2 >= v18) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v19 + 8 * v12);
      if (v15) {
        goto LABEL_28;
      }
      uint64_t v12 = v9 + 3;
      if (v9 + 3 >= v18) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v19 + 8 * v12);
      if (v15) {
        goto LABEL_28;
      }
      uint64_t v12 = v9 + 4;
      if (v9 + 4 >= v18) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v19 + 8 * v12);
      if (v15)
      {
LABEL_28:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_29:
        id v13 = *(id *)(*(void *)(v5 + 48) + 8 * v11);
        if (v13)
        {
          do
          {
            if (objc_msgSend(v13, sel__isCompatibleWithUnit_, a2, v17)) {
              break;
            }

            uint64_t v9 = v12;
            unint64_t v4 = v10;
            if ((v5 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (!sub_1C25505C0()) {
              break;
            }
            sub_1C21AB51C(0, (unint64_t *)&unk_1EA2DE0C0);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v13 = v20;
            swift_unknownObjectRelease();
            uint64_t v12 = v9;
            uint64_t v10 = v4;
          }
          while (v20);
        }
        goto LABEL_33;
      }
      uint64_t v12 = v9 + 5;
      if (v9 + 5 < v18)
      {
        unint64_t v15 = *(void *)(v19 + 8 * v12);
        if (!v15)
        {
          uint64_t v16 = v9 + 6;
          while (v18 != v16)
          {
            unint64_t v15 = *(void *)(v19 + 8 * v16++);
            if (v15)
            {
              uint64_t v12 = v16 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    sub_1C21ABD08();
    return;
  }
  __break(1u);
}

void *sub_1C24B1ED8(void *a1, void *a2)
{
  id v16 = a2;
  uint64_t v3 = sub_1C254C830();
  uint64_t v15 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = a1;
  sub_1C254FE30();

  sub_1C24B22B0(&qword_1EA2E4350, MEMORY[0x1E4F27660]);
  sub_1C2550110();
  if (v21)
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1C2206B9C(&v20, &v18);
      sub_1C21A9A38((uint64_t)&v18, (uint64_t)v17);
      sub_1C21AB51C(0, (unint64_t *)&unk_1EA2DE0C0);
      if (swift_dynamicCast())
      {
        uint64_t v8 = v22;
        __swift_project_boxed_opaque_existential_1Tm(&v18, v19);
        id v9 = objc_msgSend(v16, sel_countForObject_, sub_1C2550860());
        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1C226CED8(0, v7[2] + 1, 1, v7);
        }
        unint64_t v11 = v7[2];
        unint64_t v10 = v7[3];
        if (v11 >= v10 >> 1) {
          uint64_t v7 = sub_1C226CED8((void *)(v10 > 1), v11 + 1, 1, v7);
        }
        v7[2] = v11 + 1;
        uint64_t v12 = &v7[2 * v11];
        v12[4] = v8;
        void v12[5] = v9;
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v18);
      }
      sub_1C2550110();
    }
    while (v21);
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
  return v7;
}

uint64_t type metadata accessor for MedicalRecordUnitCollector()
{
  return self;
}

uint64_t method lookup function for MedicalRecordUnitCollector(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordUnitCollector);
}

uint64_t dispatch thunk of MedicalRecordUnitCollector.add(units:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MedicalRecordUnitCollector.preferredUnit()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

void sub_1C24B221C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_1C21AB51C(255, a3);
    sub_1C21A818C(a5, a3);
    unint64_t v8 = sub_1C2550690();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C24B22B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C24B22F8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1C2550690();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C24B2378()
{
  if (!qword_1EA2DF8B0)
  {
    sub_1C21FFE74(255, (unint64_t *)&qword_1EA2DF5E0);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF8B0);
    }
  }
}

void sub_1C24B23E0()
{
  if (!qword_1EA2DF8F8)
  {
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF8F8);
    }
  }
}

void sub_1C24B2438(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550690();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id static UIImage.circleCheckmarkImage.getter()
{
  return sub_1C24B24D4();
}

id static UIImage.circleImage.getter()
{
  return sub_1C24B24D4();
}

id sub_1C24B24D4()
{
  id v0 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  id v1 = objc_msgSend(self, sel_configurationWithFont_scale_, v0, 3);

  uint64_t v2 = (void *)sub_1C254F430();
  id v3 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v2, v1);

  return v3;
}

uint64_t static UIImage.notPinnedImage.getter()
{
  return sub_1C254FF00();
}

uint64_t static UIImage.pinnedImage.getter()
{
  return sub_1C254FF00();
}

void static UIImage.checkmarkSymbol()()
{
}

UIImage __swiftcall UIImage.scaled(to:)(CGSize to)
{
  id v2 = objc_msgSend(v1, sel_scaledToTargetSize_padding_, to.width, to.height, 0.0, 0.0);
  return (UIImage)v2;
}

id sub_1C24B26A0(void *a1, double a2, double a3)
{
  id v3 = objc_msgSend(a1, sel_scaledToTargetSize_padding_, a2, a3, 0.0, 0.0);
  return v3;
}

UIImage __swiftcall UIImage.scaled(to:padding:)(CGSize to, CGPoint padding)
{
  double y = padding.y;
  double x = padding.x;
  double height = to.height;
  double width = to.width;
  id v7 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v7, sel_scale);
  double v9 = v8;

  double v10 = v9 * width;
  double v11 = v9 * height;
  double v12 = v9 * x;
  double v13 = v9 * y;
  id v14 = objc_msgSend(v2, sel_imageRendererFormat);
  objc_msgSend(v14, sel_setOpaque_, 0);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithBounds_format_, v14, 0.0, 0.0, v12 + v12 + v10, v13 + v13 + v11);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v2;
  *(double *)(v16 + 24) = v12;
  *(double *)(v16 + 32) = v13;
  *(double *)(v16 + 40) = v10;
  *(double *)(v16 + 48) = v11;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1C24B296C;
  *(void *)(v17 + 24) = v16;
  v22[4] = sub_1C24B2994;
  v22[5] = v17;
  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 1107296256;
  _OWORD v22[2] = sub_1C24B29BC;
  v22[3] = &block_descriptor_66;
  long long v18 = _Block_copy(v22);
  id v19 = v2;
  swift_retain();
  swift_release();
  id v20 = objc_msgSend(v15, sel_imageWithActions_, v18);

  _Block_release(v18);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result.super.unint64_t isa = (Class)swift_release();
  if ((v14 & 1) == 0) {
    return (UIImage)v20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C24B2934()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

id sub_1C24B296C()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_drawInRect_, *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_1C24B2984()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C24B2994()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1C24B29BC(uint64_t a1, void *a2)
{
  id v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t block_destroy_helper_62()
{
  return swift_release();
}

Class sub_1C24B2A10(void *a1, double a2, double a3, double a4, double a5)
{
  id v9 = a1;
  v10.super.unint64_t isa = UIImage.scaled(to:padding:)((CGSize)__PAIR128__(*(unint64_t *)&a3, *(unint64_t *)&a2), (CGPoint)__PAIR128__(*(unint64_t *)&a5, *(unint64_t *)&a4)).super.isa;

  return v10.super.isa;
}

void sub_1C24B2A84()
{
}

void static UIImage.xmarkSymbol()()
{
}

void sub_1C24B2AC4()
{
  id v0 = objc_msgSend(self, sel_configurationWithScale_, 1);
  id v1 = (void *)sub_1C254F430();
  id v2 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v1, v0);

  if (!v2) {
    __break(1u);
  }
}

void sub_1C24B2B68()
{
}

void sub_1C24B2B8C()
{
  id v0 = objc_msgSend(self, sel_configurationWithScale_, 1);
  id v1 = (void *)sub_1C254F430();
  id v2 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v1, v0);

  if (v2)
  {
    id v3 = v2;
  }
  else
  {
    __break(1u);
  }
}

id sub_1C24B2DFC()
{
  return sub_1C24B38F4(0, type metadata accessor for UploadNewDataCell.PassthroughButton);
}

uint64_t sub_1C24B2E18(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI17UploadNewDataCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C2227014(v3, (uint64_t)v7);
  if (v8)
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    type metadata accessor for UploadNewDataItem();
    if (swift_dynamicCast())
    {
      id v4 = sub_1C24B30D8();
      objc_msgSend(v4, sel_setEnabled_, (*(unsigned char *)(v6 + 32) & 1) == 0);

      objc_msgSend(v1, sel_setUserInteractionEnabled_, (*(unsigned char *)(v6 + 32) & 1) == 0);
      swift_release();
    }
  }
  else
  {
    sub_1C24B45F0((uint64_t)v7, (uint64_t (*)(void))sub_1C2253E44);
  }
  return sub_1C24B45F0(a1, (uint64_t (*)(void))sub_1C2253E44);
}

void (*sub_1C24B2F58(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI17UploadNewDataCell_item;
  v3[6] = v1;
  v3[7] = v4;
  swift_beginAccess();
  return sub_1C24B2FC4;
}

void sub_1C24B2FC4(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_1C2227014(v3[6] + v3[7], (uint64_t)v3);
    if (v3[3])
    {
      sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
      type metadata accessor for UploadNewDataItem();
      if (swift_dynamicCast())
      {
        uint64_t v5 = v3[5];
        uint64_t v4 = (void *)v3[6];
        id v6 = sub_1C24B30D8();
        objc_msgSend(v6, sel_setEnabled_, (*(unsigned char *)(v5 + 32) & 1) == 0);

        objc_msgSend(v4, sel_setUserInteractionEnabled_, (*(unsigned char *)(v5 + 32) & 1) == 0);
        swift_release();
      }
    }
    else
    {
      sub_1C24B45F0((uint64_t)v3, (uint64_t (*)(void))sub_1C2253E44);
    }
  }
  free(v3);
}

id sub_1C24B30D8()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI17UploadNewDataCell____lazy_storage___button;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17UploadNewDataCell____lazy_storage___button);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17UploadNewDataCell____lazy_storage___button);
  }
  else
  {
    uint64_t v4 = (void *)sub_1C24B46D0();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C24B3270()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254E890();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x1F4188790](v2);
  id v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1C87582A0](v4);
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C254E860();
  uint64_t v8 = (void *)sub_1C254E720();
  self;
  id v9 = (void *)swift_dynamicCastObjCClass();
  if (v9)
  {
    UIImage v10 = v9;
    id v11 = objc_msgSend(v9, sel_textLayoutGuide);
    if (v11)
    {
      double v12 = v11;
      uint64_t v42 = v2;
      id v13 = objc_msgSend(v1, sel_contentView);
      objc_msgSend(v13, sel_addSubview_, v10);

      objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      id v14 = objc_msgSend(v1, sel_contentView);
      objc_msgSend(v10, sel_hk_alignConstraintsWithView_, v14);

      objc_msgSend(v10, sel_setHidden_, 1);
      id v15 = objc_msgSend(v1, sel_contentView);
      id v16 = sub_1C24B30D8();
      objc_msgSend(v15, sel_addSubview_, v16);

      id v17 = sub_1C24B30D8();
      objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

      id v18 = sub_1C24B30D8();
      id v19 = objc_msgSend(v18, sel_leadingAnchor);

      id v20 = objc_msgSend(v12, sel_leadingAnchor);
      id v41 = v8;
      id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

      objc_msgSend(v21, sel_setActive_, 1);
      id v22 = sub_1C24B30D8();
      id v23 = objc_msgSend(v22, sel_topAnchor);

      id v24 = objc_msgSend(v12, sel_topAnchor);
      id v25 = objc_msgSend(v23, (SEL)&selRef_characterAtIndex_ + 6, v24);

      objc_msgSend(v25, sel_setActive_, 1);
      id v26 = sub_1C24B30D8();
      id v27 = objc_msgSend(v26, sel_bottomAnchor);

      id v28 = objc_msgSend(v12, sel_bottomAnchor);
      id v29 = objc_msgSend(v27, (SEL)&selRef_characterAtIndex_ + 6, v28);

      objc_msgSend(v29, sel_setActive_, 1);
      id v30 = sub_1C24B30D8();
      id v31 = objc_msgSend(v30, sel_trailingAnchor);

      id v32 = objc_msgSend(v12, sel_trailingAnchor);
      id v33 = objc_msgSend(v31, (SEL)&selRef_characterAtIndex_ + 6, v32);

      type metadata accessor for UILayoutPriority(0);
      int v43 = 1065353216;
      int v44 = 1148846080;
      sub_1C24B4688((unint64_t *)&qword_1EA2DEEC0, 255, type metadata accessor for UILayoutPriority);
      sub_1C254E580();
      LODWORD(v34) = v45;
      objc_msgSend(v33, sel_setPriority_, v34);
      objc_msgSend(v33, sel_setActive_, 1);
      id v35 = sub_1C24B30D8();
      LODWORD(v36) = 1148846080;
      objc_msgSend(v35, sel_setContentCompressionResistancePriority_forAxis_, 0, v36);

      sub_1C22259B4(0, (unint64_t *)&qword_1EBB6FA60);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1C255CDA0;
      *(void *)(v37 + 32) = sub_1C254F470();
      *(void *)(v37 + 40) = v38;
      strcpy((char *)(v37 + 48), "UploadNewData");
      *(_WORD *)(v37 + 62) = -4864;
      uint64_t v39 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v40 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v1, sel_setAccessibilityIdentifier_, v40);
      objc_msgSend(v1, sel_setAccessibilityTraits_, *MEMORY[0x1E4FB2540]);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v42);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
}

id sub_1C24B38DC(uint64_t a1)
{
  return sub_1C24B38F4(a1, type metadata accessor for UploadNewDataCell);
}

id sub_1C24B38F4(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t type metadata accessor for UploadNewDataCell()
{
  return self;
}

uint64_t type metadata accessor for UploadNewDataCell.PassthroughButton()
{
  return self;
}

uint64_t sub_1C24B39D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI17UploadNewDataCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

void (*sub_1C24B3A2C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C24B2F58(v2);
  return sub_1C2231658;
}

uint64_t sub_1C24B3A84()
{
  return sub_1C24B43E0();
}

uint64_t sub_1C24B3AA8()
{
  uint64_t v1 = v0;
  sub_1C24B44AC();
  MEMORY[0x1F4188790](v2 - 8);
  objc_super v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C254F840();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  id v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_1C24B45F0((uint64_t)v4, (uint64_t (*)(void))sub_1C24B44AC);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1C254F830();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1C254F7D0();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1EA2E4370;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C24B3CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return MEMORY[0x1F4188298](sub_1C24B3D14, 0, 0);
}

uint64_t sub_1C24B3D14()
{
  v0[6] = *(void *)(v0[5] + 40);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C24B3DAC;
  return sub_1C22B8AEC();
}

uint64_t sub_1C24B3DAC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C24B4050, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 72) = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_1C24B3F1C;
    return sub_1C22B9240(5);
  }
}

uint64_t sub_1C24B3F1C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C24B41B4, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C24B4050()
{
  uint64_t v1 = (void *)v0[8];
  sub_1C22259B4(0, &qword_1EA2E1520);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CD90;
  sub_1C25503A0();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_1C254F5A0();
  v0[4] = v1;
  sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
  sub_1C25504F0();
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  sub_1C2550990();
  swift_bridgeObjectRelease();

  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C24B41B4()
{
  uint64_t v1 = (void *)v0[10];
  sub_1C22259B4(0, &qword_1EA2E1520);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CD90;
  sub_1C25503A0();
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  sub_1C254F5A0();
  v0[4] = v1;
  sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
  sub_1C25504F0();
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  *(void *)(v2 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  sub_1C2550990();
  swift_bridgeObjectRelease();

  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C24B4318()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UploadNewDataItem()
{
  return self;
}

uint64_t sub_1C24B437C()
{
  type metadata accessor for UploadNewDataCell();
  sub_1C24B4688(&qword_1EA2E3758, v0, (void (*)(uint64_t))type metadata accessor for UploadNewDataCell);
  return sub_1C254D330();
}

uint64_t sub_1C24B43E0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI17UploadNewDataCell_item;
  swift_beginAccess();
  sub_1C2227014(v1, (uint64_t)v4);
  if (!v5) {
    return sub_1C24B45F0((uint64_t)v4, (uint64_t (*)(void))sub_1C2253E44);
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for UploadNewDataItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    if ((*(unsigned char *)(v3 + 32) & 1) == 0) {
      sub_1C24B3AA8();
    }
    return swift_release();
  }
  return result;
}

void sub_1C24B44AC()
{
  if (!qword_1EBB6F490)
  {
    sub_1C254F840();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F490);
    }
  }
}

uint64_t sub_1C24B4504()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C24B4544()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C222399C;
  v3[5] = v2;
  return MEMORY[0x1F4188298](sub_1C24B3D14, 0, 0);
}

uint64_t sub_1C24B45F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C24B4650()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C24B4688(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C24B46D0()
{
  uint64_t v0 = sub_1C25500A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - v5;
  sub_1C2550060();
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C2550070();
  sub_1C2550000();
  type metadata accessor for UploadNewDataCell.PassthroughButton();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  uint64_t v8 = sub_1C25500B0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v8;
}

uint64_t sub_1C24B48C8()
{
  id v0 = sub_1C2495300();
  id v1 = objc_msgSend(v0, sel_unitString);

  uint64_t v2 = sub_1C254F470();
  return v2;
}

uint64_t sub_1C24B492C()
{
  id v0 = sub_1C2495300();
  id v1 = objc_msgSend(v0, sel_unitString);

  sub_1C254F470();
  id v2 = objc_msgSend(self, sel_sharedConverter);
  uint64_t v3 = (void *)sub_1C254F430();
  id v4 = objc_msgSend(v2, sel_synonymForUCUMUnitString_, v3);

  uint64_t v5 = sub_1C254F470();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1C24B4A08(void *a1, void *a2)
{
  sub_1C2284C38();
  uint64_t inited = swift_initStackObject();
  uint64_t v5 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
  if (a1)
  {
    id v6 = a1;
    uint64_t v7 = HKValueRange<>.valueDisplayString(style:)(0);
    uint64_t v9 = v8;

    v5[4] = v7;
    uint64_t v5[5] = v9;
    if (a2)
    {
LABEL_3:
      id v10 = a2;
      uint64_t v11 = HKValueRange<>.valueDisplayString(style:)(0);
      uint64_t v13 = v12;

      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
    *(void *)(inited + 32) = 0;
    *(void *)(inited + 40) = 0;
    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  v5[6] = v11;
  v5[7] = v13;
  id v14 = (void *)MEMORY[0x1E4FBC860];
  if (!v9)
  {
    id v15 = (void *)MEMORY[0x1E4FBC860];
    if (!v13) {
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  id v33 = (void *)MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1C22750CC(0, 1, 1);
  id v15 = v33;
  unint64_t v17 = v33[2];
  unint64_t v16 = v33[3];
  if (v17 >= v16 >> 1)
  {
    sub_1C22750CC(v16 > 1, v17 + 1, 1);
    id v15 = v33;
  }
  v15[2] = v17 + 1;
  id v18 = &v15[2 * v17];
  v18[4] = v7;
  v18[5] = v9;
  if (v13)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1C22750CC(0, v15[2] + 1, 1);
    }
    unint64_t v20 = v15[2];
    unint64_t v19 = v15[3];
    if (v20 >= v19 >> 1) {
      sub_1C22750CC(v19 > 1, v20 + 1, 1);
    }
    v15[2] = v20 + 1;
    id v21 = &v15[2 * v20];
    void v21[4] = v11;
    v21[5] = v13;
  }
LABEL_17:
  swift_release();
  int64_t v22 = v15[2];
  if (v22)
  {
    uint64_t result = sub_1C2274764(0, v22, 0);
    id v24 = v14;
    id v25 = v15 + 5;
    do
    {
      uint64_t v26 = *v25;
      if (!*v25)
      {
        __break(1u);
        return result;
      }
      uint64_t v27 = *(v25 - 1);
      unint64_t v29 = v24[2];
      unint64_t v28 = v24[3];
      uint64_t result = swift_bridgeObjectRetain();
      if (v29 >= v28 >> 1) {
        uint64_t result = sub_1C2274764(v28 > 1, v29 + 1, 1);
      }
      v25 += 2;
      void v24[2] = v29 + 1;
      id v30 = &v24[2 * v29];
      _OWORD v30[4] = v27;
      v30[5] = v26;
      --v22;
    }
    while (v22);
    swift_release();
    uint64_t v31 = v24[2];
    if (!v31) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
  swift_release();
  id v24 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v31 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (v31)
  {
LABEL_24:
    if (v31 == 2)
    {
      sub_1C22CC07C(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
      sub_1C226BF44();
      uint64_t v32 = sub_1C254F390();
    }
    else
    {
      uint64_t v32 = v24[4];
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    return v32;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t BloodPressureFormatter.deinit()
{
  return v0;
}

uint64_t BloodPressureFormatter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BloodPressureFormatter()
{
  return self;
}

uint64_t method lookup function for BloodPressureFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BloodPressureFormatter);
}

uint64_t dispatch thunk of BloodPressureFormatter.rawUnitString.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of BloodPressureFormatter.niceUnitString.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of BloodPressureFormatter.valueString(for:diastolicRange:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

id CoverageClassificationFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_1C24B4E78(unint64_t a1)
{
  id v3 = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C22EDCC4(a1, (uint64_t)v3);

  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C24B4EE4(unint64_t a1)
{
  id v3 = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C24B5514(a1, (uint64_t)v3);

  swift_bridgeObjectRelease();
  return v4;
}

id CoverageClassificationFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_store);
}

uint64_t CoverageClassificationFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context);
}

id CoverageClassificationFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for CoverageClassificationFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1C24B4FB8(void *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context) >= 2uLL)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C24B546C(a1);
  }
  return result;
}

uint64_t sub_1C24B501C(int a1, id a2)
{
  id v2 = objc_msgSend(a2, sel_type);
  if (!v2) {
    return 0;
  }
  id v3 = v2;
  id v4 = objc_msgSend(v2, sel_localizedPreferredName);

  if (!v4) {
    return 0;
  }
  uint64_t v5 = sub_1C254F470();
  unint64_t v7 = v6;

  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

id CoverageClassificationFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CoverageClassificationFormatter.init()()
{
}

id CoverageClassificationFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoverageClassificationFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C24B5198()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_store);
}

uint64_t sub_1C24B51AC()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context);
}

id sub_1C24B51C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v6 = (objc_class *)type metadata accessor for CoverageClassificationFormatter();
  unint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1C24B5234(void *a1)
{
  if (*(void *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context) < 2uLL) {
    return sub_1C24B546C(a1);
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t sub_1C24B5298(void *a1)
{
  id v3 = objc_msgSend(a1, sel_value);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1C254F470();
    uint64_t v7 = v6;

    uint64_t v8 = sub_1C226BFC0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v10 = v8[2];
    unint64_t v9 = v8[3];
    if (v10 >= v9 >> 1) {
      uint64_t v8 = sub_1C226BFC0((void *)(v9 > 1), v10 + 1, 1, v8);
    }
    v8[2] = v10 + 1;
    uint64_t v11 = &v8[2 * v10];
    void v11[4] = v5;
    v11[5] = v7;
  }
  else
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  }
  id v12 = objc_msgSend(a1, sel_name);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_1C254F470();
    uint64_t v16 = v15;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1C226BFC0(0, v8[2] + 1, 1, v8);
    }
    unint64_t v18 = v8[2];
    unint64_t v17 = v8[3];
    if (v18 >= v17 >> 1) {
      uint64_t v8 = sub_1C226BFC0((void *)(v17 > 1), v18 + 1, 1, v8);
    }
    v8[2] = v18 + 1;
    unint64_t v19 = &v8[2 * v18];
    v19[4] = v14;
    v19[5] = v16;
  }
  unint64_t v20 = sub_1C224F52C();
  MEMORY[0x1F4188790](v20);
  void v25[2] = v1;
  v25[3] = a1;
  uint64_t v21 = Array<A>.newlineJoined.getter((uint64_t)v8);
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  return sub_1C2389A3C(v21, v23, v20, sub_1C24B5870, v25);
}

uint64_t sub_1C24B546C(void *a1)
{
  uint64_t v1 = (void *)sub_1C24B5298(a1);
  objc_super v2 = v1;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    id v4 = v1;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
    uint64_t v3 = v6;
  }

  return v3;
}

uint64_t sub_1C24B5514(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
LABEL_17:
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C2550620();
  if (!v4) {
    goto LABEL_18;
  }
LABEL_3:
  unint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI31CoverageClassificationFormatter_context);
  for (uint64_t i = 4; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x1C87588E0](i - 4, a1);
    }
    else {
      id v8 = *(id *)(a1 + 8 * i);
    }
    unint64_t v9 = v8;
    uint64_t v10 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    if (v5 > 1) {
      break;
    }
    uint64_t v11 = (void *)sub_1C24B5298(v8);
    id v12 = v11;
    if (v11)
    {
      id v13 = v11;
      MEMORY[0x1C8757C00]();
      if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
      unint64_t v7 = v3;
      unint64_t v3 = MEMORY[0x1E4FBC860];
    }
    else
    {
      unint64_t v7 = v3;
    }

    sub_1C22723E8(v7);
    if (v10 == v4)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CoverageClassificationFormatter()
{
  return self;
}

unint64_t sub_1C24B572C(uint64_t a1)
{
  unint64_t result = sub_1C24B5754();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C24B5754()
{
  unint64_t result = qword_1EA2E4388;
  if (!qword_1EA2E4388)
  {
    type metadata accessor for CoverageClassificationFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4388);
  }
  return result;
}

uint64_t method lookup function for CoverageClassificationFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoverageClassificationFormatter);
}

uint64_t dispatch thunk of CoverageClassificationFormatter.structuredItems(from:country:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of CoverageClassificationFormatter.displayItems(from:country:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of CoverageClassificationFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C24B5870()
{
  return sub_1C24B501C(*(void *)(v0 + 16), *(id *)(v0 + 24));
}

void __swiftcall RecordTitleWithSubtitleItem.init(title:subtitle:uniqueIdentifier:isFirstSection:)(HealthRecordsUI::RecordTitleWithSubtitleItem *__return_ptr retstr, Swift::String title, Swift::String subtitle, Swift::String uniqueIdentifier, Swift::Bool isFirstSection)
{
  object = uniqueIdentifier._object;
  uint64_t countAndFlagsBits = uniqueIdentifier._countAndFlagsBits;
  id v8 = subtitle._object;
  uint64_t v9 = subtitle._countAndFlagsBits;
  uint64_t v10 = title._object;
  uint64_t v11 = title._countAndFlagsBits;
  swift_beginAccess();
  id v13 = off_1EA2E3C70;
  retstr->reuseIdentifier._uint64_t countAndFlagsBits = qword_1EA2E3C68;
  retstr->reuseIdentifier._object = v13;
  retstr->title._uint64_t countAndFlagsBits = v11;
  retstr->title._object = v10;
  retstr->subtitle._uint64_t countAndFlagsBits = v9;
  retstr->subtitle._object = v8;
  retstr->uniqueIdentifier._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->uniqueIdentifier._object = object;
  retstr->isFirstSection = isFirstSection;
  swift_bridgeObjectRetain();
}

uint64_t RecordTitleWithSubtitleItem.reuseIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecordTitleWithSubtitleItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *objc_super v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*RecordTitleWithSubtitleItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t RecordTitleWithSubtitleItem.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecordTitleWithSubtitleItem.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecordTitleWithSubtitleItem.uniqueIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecordTitleWithSubtitleItem.isFirstSection.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t RecordTitleWithSubtitleItem.hash(into:)()
{
  return sub_1C25509E0();
}

uint64_t RecordTitleWithSubtitleItem.hashValue.getter()
{
  return sub_1C2550A10();
}

uint64_t sub_1C24B5BB8()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C24B5BEC()
{
  return sub_1C25509E0();
}

uint64_t sub_1C24B5CA0()
{
  return sub_1C2550A10();
}

uint64_t _s15HealthRecordsUI27RecordTitleWithSubtitleItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  int v6 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  int v11 = *(unsigned __int8 *)(a2 + 64);
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
    || (v12 = sub_1C2550870(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v8 || (v14 = sub_1C2550870(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v3 == v9 && v5 == v10) {
        return v6 ^ v11 ^ 1u;
      }
      char v15 = sub_1C2550870();
      uint64_t result = 0;
      if (v15) {
        return v6 ^ v11 ^ 1u;
      }
    }
  }
  return result;
}

unint64_t sub_1C24B5E6C()
{
  unint64_t result = qword_1EA2E4390;
  if (!qword_1EA2E4390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4390);
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordTitleWithSubtitleItem()
{
  return &type metadata for RecordTitleWithSubtitleItem;
}

id sub_1C24B6064()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PaddedView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PaddedView()
{
  return self;
}

uint64_t type metadata accessor for AccountSourceDataSource()
{
  uint64_t result = qword_1EA2E43A8;
  if (!qword_1EA2E43A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C24B6118()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C24B6158(void *a1, void *a2)
{
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AccountSourceItem();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  sub_1C21AC3D8(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468]);
  sub_1C254D9B0();
  uint64_t v10 = swift_allocObject();
  long long v16 = xmmword_1C255CD90;
  *(_OWORD *)(v10 + 16) = xmmword_1C255CD90;
  sub_1C21AC3D8(0, &qword_1EA2DF5D0, (void (*)(uint64_t))sub_1C22270A8);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = v16;
  *(void *)(v11 + 56) = v8;
  *(void *)(v11 + 64) = sub_1C24B6824(&qword_1EA2E43C0, (void (*)(uint64_t))type metadata accessor for AccountSourceItem);
  *(void *)(v11 + 32) = v9;
  id v12 = a1;
  id v13 = a2;
  swift_retain();
  sub_1C254D970();
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v17, "MutableArray<");
  HIWORD(v17[1]) = -4864;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v14 = sub_1C254D9F0();
  swift_release();

  return v14;
}

uint64_t sub_1C24B6440(void *a1, void *a2)
{
  uint64_t v4 = sub_1C254F230();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for AccountSourceItem();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  sub_1C22023A4();
  id v10 = a1;
  id v11 = a2;
  *uint64_t v7 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  LOBYTE(a2) = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (a2)
  {
    sub_1C21AC3D8(0, &qword_1EA2DF5D0, (void (*)(uint64_t))sub_1C22270A8);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C255CD90;
    *(void *)(v13 + 56) = v8;
    *(void *)(v13 + 64) = sub_1C24B6824(&qword_1EA2E43C0, (void (*)(uint64_t))type metadata accessor for AccountSourceItem);
    *(void *)(v13 + 32) = v9;
    swift_retain();
    sub_1C254DA30();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C24B6644()
{
}

uint64_t sub_1C24B6674()
{
  sub_1C254DA50();
  return swift_deallocClassInstance();
}

uint64_t sub_1C24B66A4()
{
  return type metadata accessor for AccountSourceDataSource();
}

uint64_t sub_1C24B66AC()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DAE0();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C24B6780()
{
  return sub_1C254E160();
}

uint64_t sub_1C24B67DC()
{
  return sub_1C24B6824(&qword_1EA2E43B8, (void (*)(uint64_t))type metadata accessor for AccountSourceDataSource);
}

uint64_t sub_1C24B6824(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C24B686C(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1C254E560();
  uint64_t v73 = *(void *)(v3 - 8);
  uint64_t v74 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  double v72 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  BOOL v70 = (char *)&v67 - v6;
  uint64_t v7 = sub_1C254E220();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v11 = (void **)((char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (void **)((char *)&v67 - v13);
  MEMORY[0x1F4188790](v12);
  long long v16 = (char *)&v67 - v15;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))((char *)&v67 - v15, *MEMORY[0x1E4F66838], v7);
  char v17 = MEMORY[0x1C8756720](a1, v16);
  unint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v16, v7);
  if ((v17 & 1) == 0)
  {
    uint64_t v69 = *(void (**)(void **, uint64_t, uint64_t))(v8 + 16);
    v69(v14, a1, v7);
    if ((*(unsigned int (**)(void **, uint64_t))(v8 + 88))(v14, v7) == *MEMORY[0x1E4F66818])
    {
      (*(void (**)(void **, uint64_t))(v8 + 96))(v14, v7);
      uint64_t v21 = *v14;
      if (sub_1C24B8674(a1) == 3)
      {
        id v22 = objc_msgSend(self, sel_categoryWithID_, 8);
        uint64_t v23 = v22;
        if (v22)
        {
          id v24 = objc_msgSend(v22, sel_displayName);
          uint64_t v20 = sub_1C254F470();
        }
        else
        {
          uint64_t v20 = 0;
        }
        if (!objc_msgSend(v23, sel_largeListIcon)) {
          objc_msgSend(v23, sel_listIcon);
        }
        objc_msgSend(v23, sel_color);
LABEL_22:

        return v20;
      }
      id v37 = objc_msgSend(v1, sel_displayTypeForObjectType_, v21);
      if (v37)
      {
        uint64_t v23 = v37;
        if (objc_msgSend(v21, sel_isClinicalType))
        {
          id v38 = objc_msgSend(self, sel_categoryWithID_, 15);
          uint64_t v39 = v38;
          if (v38)
          {
            id v40 = objc_msgSend(v38, sel_displayName);
            uint64_t v20 = sub_1C254F470();
          }
          else
          {
            uint64_t v20 = 0;
          }
          uint64_t v63 = (void *)sub_1C254F430();
          id v64 = objc_msgSend(self, sel_systemImageNamed_, v63);

          if (v64)
          {
            id v65 = objc_msgSend(self, sel_configurationPreferringMulticolor);
            objc_msgSend(v64, sel_imageByApplyingSymbolConfiguration_, v65);
          }
        }
        else
        {
          if ((sub_1C254F9F0() & 1) == 0)
          {
            id v58 = objc_msgSend(v23, sel_displayCategory);
            id v59 = objc_msgSend(v58, sel_displayName);

            uint64_t v20 = sub_1C254F470();
            id v60 = objc_msgSend(v23, sel_displayCategory);
            id v61 = objc_msgSend(v60, sel_largeListIcon);

            if (!v61) {
              objc_msgSend(v23, sel_listIcon);
            }
            id v62 = objc_msgSend(v23, sel_displayCategory);
            objc_msgSend(v62, sel_color);

            goto LABEL_22;
          }
          if (qword_1EBB6D9B0 != -1) {
            swift_once();
          }
          id v54 = (id)qword_1EBB6D998;
          swift_bridgeObjectRetain();
          uint64_t v20 = sub_1C254C730();
          swift_bridgeObjectRelease();

          double v55 = (void *)sub_1C254F430();
          id v56 = objc_msgSend(self, sel_systemImageNamed_, v55);

          if (v56)
          {
            id v57 = objc_msgSend(self, sel_configurationPreferringMulticolor);
            objc_msgSend(v56, sel_imageByApplyingSymbolConfiguration_, v57);
          }
        }

        return v20;
      }
      id v41 = v70;
      sub_1C254E510();
      id v42 = v21;
      int v43 = sub_1C254E550();
      os_log_type_t v44 = sub_1C254FA20();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        double v76 = (char *)v46;
        *(_DWORD *)uint64_t v45 = 136315394;
        uint64_t v47 = sub_1C2550AA0();
        uint64_t v75 = sub_1C21AD354(v47, v48, (uint64_t *)&v76);
        sub_1C2550120();
        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 12) = 2080;
        double v72 = (char *)(v45 + 14);
        id v49 = v42;
        id v50 = objc_msgSend(v49, sel_description);
        uint64_t v51 = sub_1C254F470();
        unint64_t v53 = v52;

        uint64_t v75 = sub_1C21AD354(v51, v53, (uint64_t *)&v76);
        sub_1C2550120();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C21A1000, v43, v44, "[%s] Could not get display type from hkType: %s", (uint8_t *)v45, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v46, -1, -1);
        MEMORY[0x1C875A0B0](v45, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v41, v74);
    }
    else
    {
      v18((char *)v14, v7);
      id v25 = v72;
      sub_1C254E510();
      v69(v11, a1, v7);
      uint64_t v26 = sub_1C254E550();
      os_log_type_t v27 = sub_1C254FA40();
      int v28 = v27;
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v29 = swift_slowAlloc();
        os_log_t v68 = v26;
        uint64_t v30 = v29;
        BOOL v70 = (char *)swift_slowAlloc();
        double v76 = v70;
        *(_DWORD *)uint64_t v30 = 136315394;
        uint64_t v67 = v30 + 4;
        uint64_t v31 = sub_1C2550AA0();
        LODWORD(ObjectType) = v28;
        uint64_t v75 = sub_1C21AD354(v31, v32, (uint64_t *)&v76);
        sub_1C2550120();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2080;
        v69((void **)v16, (uint64_t)v11, v7);
        uint64_t v33 = sub_1C254F4F0();
        uint64_t v75 = sub_1C21AD354(v33, v34, (uint64_t *)&v76);
        sub_1C2550120();
        swift_bridgeObjectRelease();
        v18((char *)v11, v7);
        os_log_t v35 = v68;
        _os_log_impl(&dword_1C21A1000, v68, (os_log_type_t)ObjectType, "[%s] Could not get hktype from identifier: %s", (uint8_t *)v30, 0x16u);
        double v36 = v70;
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v36, -1, -1);
        MEMORY[0x1C875A0B0](v30, -1, -1);
      }
      else
      {
        v18((char *)v11, v7);
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v25, v74);
    }
    return 0;
  }
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v19 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C254C730();
  swift_bridgeObjectRelease();

  objc_msgSend(self, sel_hk_medicationsSymbolImage);
  return v20;
}

uint64_t sub_1C24B73F0(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1C23F3864(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_1C24BA43C(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1C24B7498(uint64_t a1)
{
  uint64_t v165 = *v1;
  uint64_t v168 = sub_1C254E560();
  uint64_t v3 = *(void *)(v168 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v168);
  uint64_t v154 = (char *)v152 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v152 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v152 - v9;
  uint64_t v11 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v172 = *(void *)(v11 - 8);
  uint64_t v173 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v167 = (uint64_t)v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  long long v16 = (char *)v152 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v184 = (uint64_t)v152 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (void *)((char *)v152 - v19);
  uint64_t v174 = sub_1C254E220();
  uint64_t v21 = *(void *)(v174 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v174);
  uint64_t v164 = (char *)v152 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  v163 = (char *)v152 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v162 = (char *)v152 - v27;
  MEMORY[0x1F4188790](v26);
  v175 = (char *)v152 - v28;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  unint64_t v171 = sub_1C220403C(MEMORY[0x1E4FBC860]);
  unint64_t v185 = sub_1C220417C(v29);
  uint64_t v30 = *(void *)(a1 + 16);
  uint64_t v153 = v3;
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v160 = v10;
    uint64_t v161 = v8;
    uint64_t v32 = v1[3];
    unint64_t v34 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 16);
    uint64_t v33 = v21 + 16;
    os_log_t v35 = (char *)(a1 + ((*(unsigned __int8 *)(v33 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 64)));
    uint64_t v183 = *(void *)(v33 + 56);
    v170 = v20 + 9;
    unint64_t v179 = (void (**)(char *, uint64_t))(v33 - 8);
    uint64_t v166 = (void (**)(char *, uint64_t))(v3 + 8);
    double v36 = v34;
    id v159 = v16;
    v158 = v16 + 72;
    v152[1] = a1;
    swift_bridgeObjectRetain();
    *(void *)&long long v37 = 136315394;
    long long v157 = v37;
    uint64_t v155 = MEMORY[0x1E4FBC840] + 8;
    unint64_t v169 = (unint64_t)"untUpgradeItemCell";
    unint64_t v156 = 0x80000001C25782D0;
    uint64_t v181 = v33;
    double v182 = v20;
    uint64_t v38 = v174;
    uint64_t v39 = (uint64_t)v175;
    id v40 = v1;
    uint64_t v186 = v32;
    uint64_t v178 = (void (*)(char *, char *, uint64_t))v34;
    unint64_t v180 = v1;
    while (1)
    {
      uint64_t v188 = v35;
      v36(v39, v35, v38);
      char v49 = sub_1C24B8674(v39);
      if (v49 == 5)
      {
        uint64_t v50 = sub_1C24B686C(v39);
        id v176 = v52;
        id v177 = v53;
        if (!v51)
        {
          unint64_t v84 = v160;
          sub_1C254E510();
          uint64_t v85 = v162;
          v36((uint64_t)v162, (char *)v39, v38);
          double v86 = sub_1C254E550();
          os_log_type_t v87 = sub_1C254FA40();
          if (os_log_type_enabled(v86, v87))
          {
            uint64_t v88 = swift_slowAlloc();
            double v89 = v85;
            uint64_t v90 = swift_slowAlloc();
            unint64_t v189 = v90;
            *(_DWORD *)uint64_t v88 = v157;
            uint64_t v91 = sub_1C2550AA0();
            *(void *)(v88 + 4) = sub_1C21AD354(v91, v92, (uint64_t *)&v189);
            swift_bridgeObjectRelease();
            *(_WORD *)(v88 + 12) = 2080;
            v178(v163, v89, v38);
            uint64_t v93 = sub_1C254F4F0();
            *(void *)(v88 + 14) = sub_1C21AD354(v93, v94, (uint64_t *)&v189);
            swift_bridgeObjectRelease();
            uint64_t v95 = *v179;
            uint64_t v96 = v89;
            double v36 = (void (*)(uint64_t, char *, uint64_t))v178;
            (*v179)(v96, v38);
            _os_log_impl(&dword_1C21A1000, v86, v87, "[%s] Could not get either category name for identifier: %s", (uint8_t *)v88, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1C875A0B0](v90, -1, -1);
            MEMORY[0x1C875A0B0](v88, -1, -1);

            (*v166)(v84, v168);
            uint64_t v97 = v175;
            v95(v175, v38);
            id v40 = v180;
            uint64_t v39 = (uint64_t)v97;
          }
          else
          {

            uint64_t v119 = *v179;
            (*v179)(v85, v38);
            (*v166)(v84, v168);
            v119((char *)v39, v38);
            id v40 = v180;
          }
          goto LABEL_5;
        }
        uint64_t v54 = v51;
        uint64_t v187 = v31;
        if (v51 == 1)
        {
          double v55 = v161;
          sub_1C254E510();
          id v56 = v164;
          v36((uint64_t)v164, (char *)v39, v38);
          id v57 = sub_1C254E550();
          id v58 = v36;
          uint64_t v59 = v39;
          os_log_type_t v60 = sub_1C254FA40();
          if (!os_log_type_enabled(v57, v60))
          {

            id v61 = *v179;
            (*v179)(v56, v38);
            (*v166)(v55, v168);
            v61((char *)v39, v38);
            id v40 = v180;
            double v36 = v58;
            uint64_t v31 = v187;
            goto LABEL_5;
          }
          uint64_t v41 = swift_slowAlloc();
          uint64_t v42 = swift_slowAlloc();
          unint64_t v189 = v42;
          *(_DWORD *)uint64_t v41 = v157;
          uint64_t v43 = sub_1C2550AA0();
          os_log_type_t v44 = v56;
          *(void *)(v41 + 4) = sub_1C21AD354(v43, v45, (uint64_t *)&v189);
          swift_bridgeObjectRelease();
          *(_WORD *)(v41 + 12) = 2080;
          v58((uint64_t)v163, v56, v38);
          uint64_t v46 = sub_1C254F4F0();
          *(void *)(v41 + 14) = sub_1C21AD354(v46, v47, (uint64_t *)&v189);
          swift_bridgeObjectRelease();
          unint64_t v48 = *v179;
          (*v179)(v44, v38);
          _os_log_impl(&dword_1C21A1000, v57, v60, "[%s] Could not get either category for identifier: %s", (uint8_t *)v41, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C875A0B0](v42, -1, -1);
          MEMORY[0x1C875A0B0](v41, -1, -1);

          (*v166)(v55, v168);
          v48((char *)v59, v38);
          id v40 = v180;
          uint64_t v39 = v59;
        }
        else
        {
          uint64_t v98 = v50;
          uint64_t v99 = v40[6];
          swift_bridgeObjectRetain();
          swift_retain();
          double v100 = sub_1C24B944C(v39);
          uint64_t v102 = v101;
          uint64_t v103 = v38;
          uint64_t v104 = v173;
          uint64_t v105 = (uint64_t)v159;
          v36((uint64_t)&v159[*(int *)(v173 + 48)], (char *)v39, v103);
          type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
          sub_1C220AD90();
          swift_bridgeObjectRetain();
          uint64_t v106 = sub_1C254D330();
          uint64_t v107 = *(int *)(v104 + 52);
          *(void *)uint64_t v105 = v106;
          *(void *)(v105 + 8) = v108;
          unint64_t v189 = 0xD000000000000033;
          unint64_t v190 = v156;
          swift_retain();
          sub_1C254F5A0();
          swift_release();
          swift_bridgeObjectRelease();
          unint64_t v109 = v190;
          *(void *)(v105 + 16) = v189;
          *(void *)(v105 + 24) = v109;
          *(void *)(v105 + v107) = 0;
          *(void *)(v105 + 88) = v98;
          *(void *)(v105 + 96) = v54;
          *(void *)(v105 + 56) = v100;
          *(void *)(v105 + 64) = v102;
          uint64_t v110 = v158;
          void *v158 = 0;
          v110[1] = 0;
          *(_WORD *)(v105 + 48) = 1;
          *(void *)(v105 + 32) = sub_1C24BC164;
          *(void *)(v105 + 40) = v99;
          unint64_t v111 = v171;
          if (*(void *)(v171 + 16))
          {
            id v112 = v177;
            id v113 = v177;
            swift_bridgeObjectRetain();
            id v114 = v176;
            id v115 = v176;
            unint64_t v116 = sub_1C24574AC(v98, v54, v114, v112);
            uint64_t v117 = MEMORY[0x1E4FBC860];
            if (v118)
            {
              uint64_t v117 = *(void *)(*(void *)(v111 + 56) + 8 * v116);
              swift_bridgeObjectRetain();
            }

            swift_bridgeObjectRelease();
            uint64_t v38 = v174;
          }
          else
          {
            uint64_t v117 = MEMORY[0x1E4FBC860];
            uint64_t v38 = v174;
            id v114 = v176;
            id v112 = v177;
          }
          sub_1C22667C4(v105, v167);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v117 = sub_1C226C100(0, *(void *)(v117 + 16) + 1, 1, v117);
          }
          unint64_t v121 = *(void *)(v117 + 16);
          unint64_t v120 = *(void *)(v117 + 24);
          if (v121 >= v120 >> 1) {
            uint64_t v117 = sub_1C226C100(v120 > 1, v121 + 1, 1, v117);
          }
          *(void *)(v117 + 16) = v121 + 1;
          sub_1C2266760(v167, v117+ ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80))+ *(void *)(v172 + 72) * v121);
          id v122 = v112;
          swift_bridgeObjectRetain();
          id v123 = v114;
          uint64_t v124 = v171;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v189 = v124;
          sub_1C236532C(v117, v98, v54, v114, v112, isUniquelyReferenced_nonNull_native);
          unint64_t v171 = v189;

          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          sub_1C24BCA60(v105, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          uint64_t v39 = (uint64_t)v175;
          (*v179)(v175, v38);
          id v40 = v180;
        }
      }
      else
      {
        uint64_t v187 = v31;
        uint64_t v62 = sub_1C24BC740(v49);
        uint64_t v64 = v63;
        uint64_t v65 = v40[6];
        swift_retain();
        uint64_t v66 = sub_1C24B944C(v39);
        uint64_t v68 = v67;
        uint64_t v69 = v38;
        uint64_t v70 = v173;
        v36((uint64_t)v182 + *(int *)(v173 + 48), (char *)v39, v69);
        type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
        sub_1C220AD90();
        swift_bridgeObjectRetain();
        uint64_t v71 = sub_1C254D330();
        uint64_t v72 = *(int *)(v70 + 52);
        uint64_t v73 = (uint64_t)v182;
        *double v182 = v71;
        *(void *)(v73 + 8) = v74;
        unint64_t v189 = 0xD000000000000033;
        unint64_t v190 = v169 | 0x8000000000000000;
        sub_1C254F5A0();
        unint64_t v75 = v190;
        *(void *)(v73 + 16) = v189;
        *(void *)(v73 + 24) = v75;
        *(void *)(v73 + v72) = 0;
        uint64_t v76 = v185;
        *(void *)(v73 + 88) = v62;
        *(void *)(v73 + 96) = v64;
        *(void *)(v73 + 56) = v66;
        *(void *)(v73 + 64) = v68;
        uint64_t v77 = v170;
        void *v170 = 0;
        v77[1] = 0;
        *(_WORD *)(v73 + 48) = 1;
        *(void *)(v73 + 32) = sub_1C24BC164;
        *(void *)(v73 + 40) = v65;
        if (*(void *)(v76 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v78 = sub_1C21A6470(v62, v64);
          uint64_t v79 = MEMORY[0x1E4FBC860];
          if (v80)
          {
            uint64_t v79 = *(void *)(*(void *)(v76 + 56) + 8 * v78);
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v79 = MEMORY[0x1E4FBC860];
        }
        id v40 = v180;
        sub_1C22667C4(v73, v184);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v79 = sub_1C226C100(0, *(void *)(v79 + 16) + 1, 1, v79);
        }
        unint64_t v82 = *(void *)(v79 + 16);
        unint64_t v81 = *(void *)(v79 + 24);
        if (v82 >= v81 >> 1) {
          uint64_t v79 = sub_1C226C100(v81 > 1, v82 + 1, 1, v79);
        }
        *(void *)(v79 + 16) = v82 + 1;
        sub_1C2266760(v184, v79+ ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80))+ *(void *)(v172 + 72) * v82);
        char v83 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v189 = v76;
        sub_1C23654B0(v79, v62, v64, v83);
        unint64_t v185 = v189;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C24BCA60(v73, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        uint64_t v38 = v174;
        uint64_t v39 = (uint64_t)v175;
        (*v179)(v175, v174);
      }
      uint64_t v31 = v187;
      double v36 = (void (*)(uint64_t, char *, uint64_t))v178;
LABEL_5:
      os_log_t v35 = &v188[v183];
      if (!--v31)
      {
        swift_bridgeObjectRelease();
        uint64_t v126 = v154;
        goto LABEL_36;
      }
    }
  }
  uint64_t v126 = v154;
  id v40 = v1;
LABEL_36:
  uint64_t v127 = (char *)objc_msgSend(self, sel_categoryWithID_, 8);
  uint64_t v128 = v127;
  id v129 = (uint8_t *)v40;
  if (v127)
  {
    id v130 = objc_msgSend(v127, sel_displayName);
    uint64_t v131 = sub_1C254F470();
    uint64_t v133 = v132;
  }
  else
  {
    uint64_t v131 = 0;
    uint64_t v133 = 0;
  }
  id v134 = objc_msgSend(v128, sel_largeListIcon);
  if (!v134) {
    id v134 = objc_msgSend(v128, sel_listIcon);
  }
  id v135 = objc_msgSend(v128, sel_color);
  if (v133)
  {
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v136 = swift_bridgeObjectRetain();
    uint64_t v137 = sub_1C24BC340(v136, v129, v131, v133, v165);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRetain();
    id v138 = v134;
    id v139 = v135;
    uint64_t v188 = v128;
    id v140 = v139;
    uint64_t v141 = v171;
    char v142 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v189 = v141;
    sub_1C236532C(v137, v131, v133, v134, v135, v142);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v143 = swift_bridgeObjectRetain();
    uint64_t v144 = sub_1C24B9D90(v143);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C254E510();
    double v145 = sub_1C254E550();
    uint64_t v146 = sub_1C254FA40();
    if (os_log_type_enabled(v145, (os_log_type_t)v146))
    {
      double v147 = (uint8_t *)swift_slowAlloc();
      uint64_t v148 = swift_slowAlloc();
      unint64_t v189 = v148;
      *(_DWORD *)double v147 = 136315138;
      uint64_t v149 = sub_1C2550AA0();
      uint64_t v191 = sub_1C21AD354(v149, v150, (uint64_t *)&v189);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v145, (os_log_type_t)v146, "[%s] Could not get cycle tracking category name", v147, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v148, -1, -1);
      MEMORY[0x1C875A0B0](v147, -1, -1);

      (*(void (**)(char *, uint64_t))(v153 + 8))(v154, v168);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v153 + 8))(v126, v168);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v144;
}

uint64_t sub_1C24B8674(uint64_t a1)
{
  uint64_t v2 = v1;
  os_log_t ObjectType = (os_log_t)swift_getObjectType();
  uint64_t v4 = sub_1C254E560();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v48 - v8;
  uint64_t v10 = sub_1C254E220();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  unint64_t v52 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  long long v16 = (char *)&v48 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v48 - v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v19((char *)&v48 - v17, a1, v10);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v18, v10) != *MEMORY[0x1E4F66818])
  {
    uint64_t v25 = *(void (**)(char *, uint64_t))(v11 + 8);
    v25(v18, v10);
    sub_1C254E510();
    v19(v16, a1, v10);
    uint64_t v26 = sub_1C254E550();
    os_log_type_t v27 = sub_1C254FA40();
    int v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v29 = swift_slowAlloc();
      int v50 = v28;
      uint64_t v30 = v29;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v57 = v51;
      *(_DWORD *)uint64_t v30 = 136315394;
      char v49 = v25;
      uint64_t v31 = sub_1C2550AA0();
      os_log_t ObjectType = v26;
      uint64_t v56 = sub_1C21AD354(v31, v32, &v57);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      v19(v52, (uint64_t)v16, v10);
      uint64_t v33 = sub_1C254F4F0();
      uint64_t v56 = sub_1C21AD354(v33, v34, &v57);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      v49(v16, v10);
      uint64_t v26 = ObjectType;
      _os_log_impl(&dword_1C21A1000, ObjectType, (os_log_type_t)v50, "[%s] Could not get hktype from identifier: %s", (uint8_t *)v30, 0x16u);
      uint64_t v35 = v51;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v35, -1, -1);
      MEMORY[0x1C875A0B0](v30, -1, -1);
    }
    else
    {
      v25(v16, v10);
    }

    (*(void (**)(char *, uint64_t))(v54 + 8))(v7, v55);
    return 5;
  }
  (*(void (**)(char *, uint64_t))(v11 + 96))(v18, v10);
  uint64_t v20 = *(void **)v18;
  id v21 = objc_msgSend(v2, sel_displayTypeForObjectType_, *(void *)v18);
  if (!v21)
  {
    sub_1C254E510();
    id v36 = v20;
    long long v37 = sub_1C254E550();
    os_log_type_t v38 = sub_1C254FA20();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v57 = v40;
      *(_DWORD *)uint64_t v39 = 136315394;
      uint64_t v41 = sub_1C2550AA0();
      uint64_t v56 = sub_1C21AD354(v41, v42, &v57);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      os_log_t ObjectType = (os_log_t)(v39 + 14);
      id v43 = v36;
      id v44 = objc_msgSend(v43, sel_description);
      uint64_t v45 = sub_1C254F470();
      unint64_t v47 = v46;

      uint64_t v56 = sub_1C21AD354(v45, v47, &v57);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v37, v38, "[%s] Could not get display type from hkType: %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v40, -1, -1);
      MEMORY[0x1C875A0B0](v39, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v55);
    return 5;
  }
  uint64_t v22 = v21;
  id v23 = objc_msgSend(v21, sel_displayTypeIdentifier);

  uint64_t result = 0;
  switch((unint64_t)v23)
  {
    case 0x5AuLL:
    case 0x5BuLL:
    case 0x5CuLL:
    case 0xF3uLL:
    case 0xF4uLL:
      uint64_t result = 1;
      break;
    case 0x5FuLL:
      return result;
    case 0x60uLL:
    case 0x9DuLL:
    case 0x9EuLL:
    case 0x9FuLL:
    case 0xA0uLL:
    case 0xA1uLL:
    case 0xA2uLL:
    case 0xA3uLL:
    case 0xA4uLL:
    case 0xA5uLL:
    case 0xA6uLL:
    case 0xA7uLL:
    case 0xA8uLL:
    case 0xA9uLL:
    case 0xAAuLL:
    case 0xABuLL:
    case 0xE5uLL:
    case 0xE6uLL:
    case 0xE7uLL:
    case 0xE8uLL:
    case 0xE9uLL:
    case 0xEAuLL:
    case 0xEBuLL:
      uint64_t result = 3;
      break;
    case 0x61uLL:
      uint64_t result = 4;
      break;
    case 0xBFuLL:
    case 0xC0uLL:
    case 0xC1uLL:
      uint64_t result = 2;
      break;
    default:
      return 5;
  }
  return result;
}

uint64_t sub_1C24B8F20@<X0>(uint64_t *a1@<X0>, uint8_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v50 = a6;
  uint64_t v46 = a5;
  unint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v7 = sub_1C254E220();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C254E560();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[2];
  if (*(void *)(v20 + 16))
  {
    uint64_t v21 = a1[1];
    uint64_t v46 = *a1;
    uint64_t v22 = v16;
    uint64_t v23 = v17;
    sub_1C22667C4(v20 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), (uint64_t)v19);
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C24BC180(v20);
    uint64_t v44 = v25;
    uint64_t v45 = v24;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &v19[*(int *)(v22 + 48)], v7);
    type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
    sub_1C220AD90();
    swift_bridgeObjectRetain();
    uint64_t v26 = v49;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1C254D330();
    uint64_t v29 = v28;
    uint64_t v30 = swift_retain();
    uint64_t v42 = v29;
    uint64_t v31 = v50;
    ClinicalSharingSelectableAuthorizationCategoryItem.init(name:subtitle:category:authorizationIdentifier:associatedItems:isSelectable:isSelected:reuseIdentifier:selectionStateDidUpdate:)(v46, v21, v45, v44, v48, v26, (uint64_t)v10, v20, v50, 1, 0, v27, v42, (uint64_t)sub_1C24BC164, v30);
    sub_1C24BCA60((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    uint64_t v32 = 0;
    uint64_t v33 = v31;
  }
  else
  {
    uint64_t v48 = v17;
    uint64_t v49 = v16;
    uint64_t v34 = v12;
    sub_1C254E510();
    uint64_t v35 = sub_1C254E550();
    os_log_type_t v36 = sub_1C254FA40();
    if (os_log_type_enabled(v35, v36))
    {
      long long v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v52 = v38;
      *(_DWORD *)long long v37 = 136315138;
      unint64_t v47 = v37 + 4;
      uint64_t v39 = sub_1C2550AA0();
      uint64_t v51 = sub_1C21AD354(v39, v40, &v52);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v35, v36, "[%s] No first identifier", v37, 0xCu);
      uint64_t v32 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v38, -1, -1);
      MEMORY[0x1C875A0B0](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v11);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      uint64_t v32 = 1;
    }
    uint64_t v22 = v49;
    uint64_t v33 = v50;
    uint64_t v23 = v48;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v33, v32, 1, v22);
}

uint64_t sub_1C24B9378(uint64_t a1, char a2, uint64_t a3)
{
  if (a2) {
    return sub_1C24F35F0(a1, 0);
  }
  swift_beginAccess();
  uint64_t v9 = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C24F3EE8(&v9, a1);
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v7 = *(void *)(v9 + 16);
  if (v7 < v6)
  {
    __break(1u);
  }
  else
  {
    sub_1C24F4530(v6, v7);
    uint64_t v8 = *(void *)(a3 + 16);
    *(void *)(a3 + 16) = v9;
    sub_1C24F27D4(v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1C24B944C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_1C254E560();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v49 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v47 = (char *)&v45 - v7;
  uint64_t v8 = sub_1C254E220();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (id *)((char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (id *)((char *)&v45 - v13);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))((char *)&v45 - v13, *MEMORY[0x1E4F66838], v8);
  char v15 = MEMORY[0x1C8756720](a1, v14);
  uint64_t v16 = *(NSObject **)(v9 + 8);
  ((void (*)(id *, uint64_t))v16)(v14, v8);
  if ((v15 & 1) == 0)
  {
    uint64_t v46 = v4;
    uint64_t v18 = *(void (**)(id *, uint64_t, uint64_t))(v9 + 16);
    v18(v12, a1, v8);
    if ((*(unsigned int (**)(id *, uint64_t))(v9 + 88))(v12, v8) == *MEMORY[0x1E4F66818])
    {
      (*(void (**)(id *, uint64_t))(v9 + 96))(v12, v8);
      id v19 = *v12;
      if (objc_msgSend(*v12, sel_isClinicalType))
      {
        id v20 = objc_msgSend(v2, sel_displayTypeForObjectType_, v19);
        if (v20)
        {
          uint64_t v21 = v20;
          id v22 = objc_msgSend(v20, sel_localization);
          id v23 = objc_msgSend(v22, sel_displayName);

          uint64_t v2 = (void *)sub_1C254F470();
          return v2;
        }
        uint64_t v32 = v47;
        sub_1C254E510();
        id v19 = v19;
        uint64_t v33 = sub_1C254E550();
        os_log_type_t v34 = sub_1C254FA20();
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v35 = swift_slowAlloc();
          uint64_t v36 = swift_slowAlloc();
          uint64_t v52 = v36;
          *(_DWORD *)uint64_t v35 = 136315394;
          uint64_t v37 = sub_1C2550AA0();
          uint64_t v51 = sub_1C21AD354(v37, v38, &v52);
          sub_1C2550120();
          swift_bridgeObjectRelease();
          *(_WORD *)(v35 + 12) = 2080;
          uint64_t v49 = (char *)(v35 + 14);
          id v39 = objc_msgSend(v19, sel_identifier);
          uint64_t v40 = sub_1C254F470();
          unint64_t v42 = v41;

          uint64_t v51 = sub_1C21AD354(v40, v42, &v52);
          sub_1C2550120();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C21A1000, v33, v34, "[%s] Missing display type for \"%s\"", (uint8_t *)v35, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C875A0B0](v36, -1, -1);
          MEMORY[0x1C875A0B0](v35, -1, -1);

          (*(void (**)(char *, uint64_t))(v50 + 8))(v47, v46);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v46);
        }
        id v31 = objc_msgSend(v19, sel_identifier);
LABEL_19:
        uint64_t v43 = v31;
        uint64_t v2 = (void *)sub_1C254F470();

        return v2;
      }
      id v31 = objc_msgSend(v19, sel_hk_localizedName);
      if (v31) {
        goto LABEL_19;
      }
      __break(1u);
    }
    else
    {
      ((void (*)(id *, uint64_t))v16)(v12, v8);
      v18(v14, a1, v8);
      uint64_t v2 = (void *)sub_1C254F4F0();
      unint64_t v25 = v24;
      id v19 = v49;
      sub_1C254E510();
      swift_bridgeObjectRetain_n();
      uint64_t v16 = sub_1C254E550();
      os_log_type_t v26 = sub_1C254FA20();
      if (os_log_type_enabled(v16, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        uint64_t v52 = v28;
        *(_DWORD *)uint64_t v27 = 136315394;
        uint64_t v29 = sub_1C2550AA0();
        uint64_t v51 = sub_1C21AD354(v29, v30, &v52);
        sub_1C2550120();
        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v51 = sub_1C21AD354((uint64_t)v2, v25, &v52);
        sub_1C2550120();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C21A1000, v16, v26, "[%s] Unsupported authorization identifier \"%s\"", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v28, -1, -1);
        MEMORY[0x1C875A0B0](v27, -1, -1);

LABEL_14:
        (*(void (**)(id, uint64_t))(v50 + 8))(v19, v46);
        return v2;
      }
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v17 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1C254C730();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1C24B9BB8(uint64_t a1)
{
  return sub_1C24B9DBC(a1, (uint64_t)sub_1C24BBF30, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unsigned char *))sub_1C24BBF38);
}

uint64_t sub_1C24B9BE4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  unint64_t v25 = a3;
  swift_bridgeObjectRetain();
  sub_1C24B73F0(&v25);
  uint64_t v7 = v25;
  id v8 = objc_msgSend(self, sel_categoryWithID_, 8);
  if (!v8) {
    goto LABEL_7;
  }
  uint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_displayName);

  uint64_t v11 = sub_1C254F470();
  uint64_t v13 = v12;

  if (v11 == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  char v15 = sub_1C2550870();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_9:
    uint64_t v23 = *(unsigned __int8 *)(a4 + 40);
    type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v17 = a1;
    uint64_t v18 = a2;
    id v19 = v7;
    uint64_t v20 = 1;
    uint64_t v21 = v23;
    uint64_t v22 = a4;
    return sub_1C22A0DF4(v17, v18, 0, 0, v19, v20, v21, v22);
  }
LABEL_7:
  uint64_t v16 = *(unsigned __int8 *)(a4 + 40);
  type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  id v19 = v7;
  uint64_t v20 = 0;
  uint64_t v21 = v16;
  uint64_t v22 = 0;
  return sub_1C22A0DF4(v17, v18, 0, 0, v19, v20, v21, v22);
}

uint64_t sub_1C24B9D90(uint64_t a1)
{
  return sub_1C24B9DBC(a1, (uint64_t)sub_1C24BA108, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unsigned char *))sub_1C24BBCE0);
}

uint64_t sub_1C24B9DBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, unsigned char *))
{
  uint64_t v4 = a3(a1, a2, v3, v9);
  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    unint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t)sub_1C228F9C0(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v8 = v5;
  sub_1C229F8A4(&v8);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C24B9E5C(uint64_t a1, unint64_t a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v37 = a5;
  swift_bridgeObjectRetain();
  sub_1C24B73F0(&v37);
  uint64_t v11 = v37;
  uint64_t v12 = self;
  swift_bridgeObjectRetain();
  id v13 = objc_msgSend(v12, sel_categoryWithID_, 8);
  if (!v13)
  {
    unint64_t v21 = a2;
    if (!a2)
    {
      a1 = 0;
      unint64_t v21 = 0xE000000000000000;
LABEL_18:
      int v33 = *(unsigned __int8 *)(a6 + 40);
      type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
      swift_allocObject();
      id v34 = a4;
      swift_retain();
      swift_bridgeObjectRetain();
      id v35 = a3;
      uint64_t v25 = a1;
      uint64_t v26 = v21;
      uint64_t v27 = a3;
      uint64_t v28 = a4;
      uint64_t v29 = (uint64_t)v11;
      int v30 = 1;
      int v31 = v33;
      uint64_t v32 = a6;
      return sub_1C22A0DF4(v25, v26, v27, v28, v29, v30, v31, v32);
    }
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v14 = v13;
  id v15 = objc_msgSend(v13, sel_displayName);

  uint64_t v16 = sub_1C254F470();
  uint64_t v18 = v17;

  if (!a2)
  {
    a1 = 0;
    unint64_t v21 = 0xE000000000000000;
    if (!v18) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  if (!v18)
  {
    unint64_t v21 = a2;
    goto LABEL_15;
  }
  if (v16 == a1 && v18 == a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v21 = a2;
    goto LABEL_18;
  }
  char v20 = sub_1C2550870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v21 = a2;
  if (v20) {
    goto LABEL_18;
  }
LABEL_16:
  int v22 = *(unsigned __int8 *)(a6 + 40);
  type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
  swift_allocObject();
  id v23 = a4;
  swift_bridgeObjectRetain();
  id v24 = a3;
  uint64_t v25 = a1;
  uint64_t v26 = v21;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = (uint64_t)v11;
  int v30 = 0;
  int v31 = v22;
  uint64_t v32 = 0;
  return sub_1C22A0DF4(v25, v26, v27, v28, v29, v30, v31, v32);
}

uint64_t sub_1C24BA094()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalSharingSelectableDataTypesDataSourceProviding()
{
  return self;
}

uint64_t sub_1C24BA108(uint64_t a1, unint64_t a2, void *a3, void *a4, void *a5)
{
  return sub_1C24B9E5C(a1, a2, a3, a4, a5, v5);
}

uint64_t sub_1C24BA110(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  sub_1C25509C0();
  if (a2)
  {
    sub_1C25509E0();
    swift_bridgeObjectRetain();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    if (a3) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1C25509E0();
    if (a4) {
      goto LABEL_4;
    }
LABEL_7:
    sub_1C25509E0();
    return sub_1C2550A10();
  }
  sub_1C25509E0();
  if (!a3) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1C25509E0();
  id v7 = a3;
  sub_1C254FF80();

  if (!a4) {
    goto LABEL_7;
  }
LABEL_4:
  sub_1C25509E0();
  id v8 = a4;
  sub_1C254FF80();

  return sub_1C2550A10();
}

uint64_t sub_1C24BA20C()
{
  return sub_1C24BA110(*(void *)v0, *(void *)(v0 + 8), *(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1C24BA218()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = (void *)v0[3];
  if (v0[1])
  {
    sub_1C25509E0();
    swift_bridgeObjectRetain();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    if (v1) {
      goto LABEL_3;
    }
LABEL_8:
    sub_1C25509E0();
    if (v2) {
      goto LABEL_4;
    }
LABEL_9:
    sub_1C25509E0();
    return;
  }
  sub_1C25509E0();
  if (!v1) {
    goto LABEL_8;
  }
LABEL_3:
  sub_1C25509E0();
  id v3 = v1;
  sub_1C254FF80();

  if (!v2) {
    goto LABEL_9;
  }
LABEL_4:
  sub_1C25509E0();
  id v4 = v2;
  sub_1C254FF80();
}

uint64_t sub_1C24BA330()
{
  uint64_t v1 = v0[1];
  id v3 = (void *)v0[2];
  uint64_t v2 = (void *)v0[3];
  sub_1C25509C0();
  if (v1)
  {
    sub_1C25509E0();
    swift_bridgeObjectRetain();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1C25509E0();
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    sub_1C25509E0();
    return sub_1C2550A10();
  }
  sub_1C25509E0();
  if (!v3) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1C25509E0();
  id v4 = v3;
  sub_1C254FF80();

  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  sub_1C25509E0();
  id v5 = v2;
  sub_1C254FF80();

  return sub_1C2550A10();
}

uint64_t sub_1C24BA420(uint64_t a1, uint64_t a2)
{
  return sub_1C24BBBB4(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void **)(a2 + 16), *(void **)(a2 + 24));
}

uint64_t sub_1C24BA43C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v149 = *(void *)(v4 - 8);
  uint64_t v150 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v144 = (uint64_t)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v155 = (uint64_t)&v137 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v137 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v137 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v147 = (uint64_t)&v137 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v145 = (uint64_t)&v137 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v141 = (uint64_t)&v137 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v140 = (uint64_t)&v137 - v21;
  v158 = a1;
  uint64_t v22 = a1[1];
  uint64_t result = sub_1C2550800();
  if (result >= v22)
  {
    if (v22 < 0) {
      goto LABEL_166;
    }
    if (v22) {
      return sub_1C24BB098(0, v22, 1, v158);
    }
    return result;
  }
  if (v22 >= 0) {
    uint64_t v24 = v22;
  }
  else {
    uint64_t v24 = v22 + 1;
  }
  if (v22 < -1) {
    goto LABEL_174;
  }
  uint64_t v139 = result;
  if (v22 < 2)
  {
    unint64_t v148 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80));
    uint64_t v138 = MEMORY[0x1E4FBC860];
    if (v22 != 1)
    {
      unint64_t v30 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v29 = (char *)MEMORY[0x1E4FBC860];
LABEL_132:
      if (v30 >= 2)
      {
        uint64_t v130 = *v158;
        do
        {
          unint64_t v131 = v30 - 2;
          if (v30 < 2) {
            goto LABEL_161;
          }
          if (!v130) {
            goto LABEL_173;
          }
          uint64_t v132 = v29;
          uint64_t v133 = *(void *)&v29[16 * v131 + 32];
          uint64_t v134 = *(void *)&v29[16 * v30 + 24];
          sub_1C24BB3E4(v130 + *(void *)(v149 + 72) * v133, v130 + *(void *)(v149 + 72) * *(void *)&v29[16 * v30 + 16], v130 + *(void *)(v149 + 72) * v134, v148);
          if (v2) {
            break;
          }
          if (v134 < v133) {
            goto LABEL_162;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v132 = sub_1C23F321C((uint64_t)v132);
          }
          if (v131 >= *((void *)v132 + 2)) {
            goto LABEL_163;
          }
          id v135 = &v132[16 * v131 + 32];
          *(void *)id v135 = v133;
          *((void *)v135 + 1) = v134;
          unint64_t v136 = *((void *)v132 + 2);
          if (v30 > v136) {
            goto LABEL_164;
          }
          memmove(&v132[16 * v30 + 16], &v132[16 * v30 + 32], 16 * (v136 - v30));
          uint64_t v29 = v132;
          *((void *)v132 + 2) = v136 - 1;
          unint64_t v30 = v136 - 1;
        }
        while (v136 > 2);
      }
LABEL_143:
      swift_bridgeObjectRelease();
      *(void *)(v138 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v25 = v24 >> 1;
    uint64_t v26 = sub_1C254F780();
    *(void *)(v26 + 16) = v25;
    uint64_t v27 = *(unsigned __int8 *)(v149 + 80);
    uint64_t v138 = v26;
    unint64_t v148 = v26 + ((v27 + 32) & ~v27);
  }
  uint64_t v28 = 0;
  uint64_t v29 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v153 = v11;
  uint64_t v154 = v14;
  while (2)
  {
    uint64_t v31 = v28 + 1;
    uint64_t v143 = v29;
    uint64_t v146 = v28;
    if (v28 + 1 >= v22)
    {
      uint64_t v41 = v28 + 1;
      goto LABEL_56;
    }
    uint64_t v32 = *v158;
    uint64_t v33 = *(void *)(v149 + 72);
    uint64_t v34 = v140;
    sub_1C22667C4(*v158 + v33 * v31, v140);
    uint64_t v142 = v32;
    uint64_t v157 = v33;
    uint64_t v35 = v32 + v33 * v28;
    uint64_t v36 = v141;
    sub_1C22667C4(v35, v141);
    if (*(void *)(v34 + 64))
    {
      uint64_t v37 = *(void *)(v34 + 56);
      unint64_t v38 = *(void *)(v34 + 64);
      unint64_t v39 = *(void *)(v36 + 64);
      if (v39) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v37 = 0;
      unint64_t v38 = 0xE000000000000000;
      unint64_t v39 = *(void *)(v36 + 64);
      if (v39)
      {
LABEL_18:
        unint64_t v40 = v39;
        if (v37 != *(void *)(v36 + 56)) {
          goto LABEL_25;
        }
        goto LABEL_23;
      }
    }
    unint64_t v40 = 0xE000000000000000;
    if (v37)
    {
LABEL_25:
      LODWORD(v156) = sub_1C2550870();
      goto LABEL_26;
    }
LABEL_23:
    if (v38 != v40) {
      goto LABEL_25;
    }
    LODWORD(v156) = 0;
LABEL_26:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C24BCA60(v141, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1C24BCA60(v140, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    uint64_t v41 = v28 + 2;
    uint64_t v152 = v22;
    if (v28 + 2 >= v22)
    {
      uint64_t v14 = v154;
      goto LABEL_42;
    }
    uint64_t v151 = v157 * v31;
    uint64_t v42 = v142;
    uint64_t v43 = v157 * v41;
    uint64_t v44 = v145;
    while (1)
    {
      uint64_t v45 = v41;
      sub_1C22667C4(v42 + v43, v44);
      uint64_t v46 = v147;
      sub_1C22667C4(v42 + v151, v147);
      if (*(void *)(v44 + 64))
      {
        uint64_t v47 = *(void *)(v44 + 56);
        unint64_t v48 = *(void *)(v44 + 64);
        unint64_t v49 = *(void *)(v46 + 64);
        if (!v49) {
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t v47 = 0;
        unint64_t v48 = 0xE000000000000000;
        unint64_t v49 = *(void *)(v46 + 64);
        if (!v49)
        {
LABEL_33:
          unint64_t v51 = 0xE000000000000000;
          if (v47) {
            goto LABEL_36;
          }
          goto LABEL_34;
        }
      }
      uint64_t v50 = *(void *)(v46 + 56);
      unint64_t v51 = v49;
      if (v47 != v50) {
        goto LABEL_36;
      }
LABEL_34:
      if (v48 == v51)
      {
        int v52 = 0;
        goto LABEL_37;
      }
LABEL_36:
      int v52 = sub_1C2550870();
LABEL_37:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C24BCA60(v147, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      uint64_t v44 = v145;
      sub_1C24BCA60(v145, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if ((v156 ^ v52)) {
        break;
      }
      uint64_t v41 = v45 + 1;
      v42 += v157;
      uint64_t v22 = v152;
      uint64_t v14 = v154;
      if (v152 == v45 + 1)
      {
        uint64_t v41 = v152;
        uint64_t v28 = v146;
        goto LABEL_42;
      }
    }
    uint64_t v14 = v154;
    uint64_t v41 = v45;
    uint64_t v28 = v146;
    uint64_t v22 = v152;
LABEL_42:
    uint64_t v11 = v153;
    if (v156)
    {
      if (v41 < v28) {
        goto LABEL_167;
      }
      if (v28 < v41)
      {
        uint64_t v53 = 0;
        uint64_t v54 = v28;
        uint64_t v55 = v157 * (v41 - 1);
        uint64_t v56 = v41 * v157;
        uint64_t v57 = v54;
        uint64_t v58 = v54 * v157;
        do
        {
          if (v57 != v41 + v53 - 1)
          {
            uint64_t v60 = v41;
            uint64_t v61 = v142;
            if (!v142) {
              goto LABEL_172;
            }
            unint64_t v62 = v142 + v58;
            uint64_t v156 = v142 + v55;
            sub_1C2266760(v142 + v58, v144);
            if (v58 < v55 || v62 >= v61 + v56)
            {
              uint64_t v59 = v156;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v59 = v156;
              if (v58 != v55) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_1C2266760(v144, v59);
            uint64_t v41 = v60;
          }
          ++v57;
          --v53;
          v55 -= v157;
          v56 -= v157;
          v58 += v157;
        }
        while (v57 < v41 + v53);
        uint64_t v11 = v153;
        uint64_t v14 = v154;
        uint64_t v28 = v146;
        uint64_t v22 = v152;
      }
    }
LABEL_56:
    if (v41 >= v22) {
      goto LABEL_82;
    }
    if (__OFSUB__(v41, v28)) {
      goto LABEL_165;
    }
    if (v41 - v28 >= v139) {
      goto LABEL_82;
    }
    if (__OFADD__(v28, v139)) {
      goto LABEL_168;
    }
    if (v28 + v139 >= v22) {
      uint64_t v63 = v22;
    }
    else {
      uint64_t v63 = v28 + v139;
    }
    if (v63 >= v28)
    {
      if (v41 == v63) {
        goto LABEL_82;
      }
      uint64_t v137 = v2;
      uint64_t v64 = *(void *)(v149 + 72);
      uint64_t v65 = v64 * (v41 - 1);
      uint64_t v151 = v64;
      uint64_t v66 = v41 * v64;
      uint64_t v142 = v63;
      while (2)
      {
        uint64_t v68 = 0;
        uint64_t v152 = v41;
        while (2)
        {
          uint64_t v69 = *v158;
          sub_1C22667C4(v66 + v68 + *v158, (uint64_t)v14);
          uint64_t v157 = v65 + v68;
          sub_1C22667C4(v65 + v68 + v69, (uint64_t)v11);
          uint64_t v70 = v14;
          unint64_t v71 = *((void *)v14 + 8);
          if (v71)
          {
            uint64_t v72 = *((void *)v70 + 7);
            unint64_t v73 = v71;
            unint64_t v74 = *((void *)v11 + 8);
            if (v74) {
              goto LABEL_73;
            }
LABEL_76:
            unint64_t v76 = 0xE000000000000000;
            if (!v72) {
              goto LABEL_77;
            }
LABEL_78:
            LODWORD(v156) = sub_1C2550870();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v11 = v153;
            sub_1C24BCA60((uint64_t)v153, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
            uint64_t v14 = v154;
            sub_1C24BCA60((uint64_t)v154, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
            if ((v156 & 1) == 0) {
              goto LABEL_67;
            }
            uint64_t v77 = *v158;
            if (!*v158) {
              goto LABEL_170;
            }
            uint64_t v78 = v77 + v65 + v68;
            sub_1C2266760(v77 + v66 + v68, v155);
            swift_arrayInitWithTakeFrontToBack();
            sub_1C2266760(v155, v78);
            uint64_t v67 = v152;
            v68 -= v151;
            if (v152 == ++v28) {
              goto LABEL_68;
            }
            continue;
          }
          break;
        }
        uint64_t v72 = 0;
        unint64_t v73 = 0xE000000000000000;
        unint64_t v74 = *((void *)v11 + 8);
        if (!v74) {
          goto LABEL_76;
        }
LABEL_73:
        uint64_t v75 = *((void *)v11 + 7);
        unint64_t v76 = v74;
        if (v72 != v75) {
          goto LABEL_78;
        }
LABEL_77:
        if (v73 != v76) {
          goto LABEL_78;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        uint64_t v11 = v153;
        sub_1C24BCA60((uint64_t)v153, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        uint64_t v14 = v154;
        sub_1C24BCA60((uint64_t)v154, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_67:
        uint64_t v67 = v152;
LABEL_68:
        uint64_t v41 = v67 + 1;
        v65 += v151;
        v66 += v151;
        uint64_t v28 = v146;
        if (v41 != v142) {
          continue;
        }
        break;
      }
      uint64_t v41 = v142;
      uint64_t v2 = v137;
LABEL_82:
      if (v41 < v28) {
        goto LABEL_160;
      }
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v29 = v143;
      }
      else {
        uint64_t v29 = sub_1C23F277C(0, *((void *)v143 + 2) + 1, 1, v143);
      }
      unint64_t v80 = *((void *)v29 + 2);
      unint64_t v79 = *((void *)v29 + 3);
      unint64_t v30 = v80 + 1;
      uint64_t v152 = v41;
      if (v80 >= v79 >> 1) {
        uint64_t v29 = sub_1C23F277C((char *)(v79 > 1), v80 + 1, 1, v29);
      }
      *((void *)v29 + 2) = v30;
      unint64_t v81 = v29 + 32;
      unint64_t v82 = &v29[16 * v80 + 32];
      uint64_t v83 = v152;
      *(void *)unint64_t v82 = v28;
      *((void *)v82 + 1) = v83;
      if (v80)
      {
        while (2)
        {
          unint64_t v84 = v30 - 1;
          if (v30 >= 4)
          {
            double v89 = &v81[16 * v30];
            uint64_t v90 = *((void *)v89 - 8);
            uint64_t v91 = *((void *)v89 - 7);
            BOOL v95 = __OFSUB__(v91, v90);
            uint64_t v92 = v91 - v90;
            if (v95) {
              goto LABEL_149;
            }
            uint64_t v94 = *((void *)v89 - 6);
            uint64_t v93 = *((void *)v89 - 5);
            BOOL v95 = __OFSUB__(v93, v94);
            uint64_t v87 = v93 - v94;
            char v88 = v95;
            if (v95) {
              goto LABEL_150;
            }
            unint64_t v96 = v30 - 2;
            uint64_t v97 = &v81[16 * v30 - 32];
            uint64_t v99 = *(void *)v97;
            uint64_t v98 = *((void *)v97 + 1);
            BOOL v95 = __OFSUB__(v98, v99);
            uint64_t v100 = v98 - v99;
            if (v95) {
              goto LABEL_152;
            }
            BOOL v95 = __OFADD__(v87, v100);
            uint64_t v101 = v87 + v100;
            if (v95) {
              goto LABEL_155;
            }
            if (v101 >= v92)
            {
              uint64_t v119 = &v81[16 * v84];
              uint64_t v121 = *(void *)v119;
              uint64_t v120 = *((void *)v119 + 1);
              BOOL v95 = __OFSUB__(v120, v121);
              uint64_t v122 = v120 - v121;
              if (v95) {
                goto LABEL_159;
              }
              BOOL v112 = v87 < v122;
            }
            else
            {
LABEL_101:
              if (v88) {
                goto LABEL_151;
              }
              unint64_t v96 = v30 - 2;
              uint64_t v102 = &v81[16 * v30 - 32];
              uint64_t v104 = *(void *)v102;
              uint64_t v103 = *((void *)v102 + 1);
              BOOL v105 = __OFSUB__(v103, v104);
              uint64_t v106 = v103 - v104;
              char v107 = v105;
              if (v105) {
                goto LABEL_154;
              }
              uint64_t v108 = &v81[16 * v84];
              uint64_t v110 = *(void *)v108;
              uint64_t v109 = *((void *)v108 + 1);
              BOOL v95 = __OFSUB__(v109, v110);
              uint64_t v111 = v109 - v110;
              if (v95) {
                goto LABEL_157;
              }
              if (__OFADD__(v106, v111)) {
                goto LABEL_158;
              }
              if (v106 + v111 < v87) {
                goto LABEL_113;
              }
              BOOL v112 = v87 < v111;
            }
            if (v112) {
              unint64_t v84 = v96;
            }
          }
          else
          {
            if (v30 == 3)
            {
              uint64_t v86 = *((void *)v29 + 4);
              uint64_t v85 = *((void *)v29 + 5);
              BOOL v95 = __OFSUB__(v85, v86);
              uint64_t v87 = v85 - v86;
              char v88 = v95;
              goto LABEL_101;
            }
            uint64_t v113 = *((void *)v29 + 4);
            uint64_t v114 = *((void *)v29 + 5);
            BOOL v95 = __OFSUB__(v114, v113);
            uint64_t v106 = v114 - v113;
            char v107 = v95;
LABEL_113:
            if (v107) {
              goto LABEL_153;
            }
            id v115 = &v81[16 * v84];
            uint64_t v117 = *(void *)v115;
            uint64_t v116 = *((void *)v115 + 1);
            BOOL v95 = __OFSUB__(v116, v117);
            uint64_t v118 = v116 - v117;
            if (v95) {
              goto LABEL_156;
            }
            if (v118 < v106) {
              goto LABEL_14;
            }
          }
          unint64_t v123 = v84 - 1;
          if (v84 - 1 >= v30)
          {
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
            goto LABEL_169;
          }
          if (!*v158) {
            goto LABEL_171;
          }
          uint64_t v124 = v29;
          uint64_t v125 = &v81[16 * v123];
          uint64_t v126 = *(void *)v125;
          uint64_t v127 = &v81[16 * v84];
          uint64_t v128 = *((void *)v127 + 1);
          sub_1C24BB3E4(*v158 + *(void *)(v149 + 72) * *(void *)v125, *v158 + *(void *)(v149 + 72) * *(void *)v127, *v158 + *(void *)(v149 + 72) * v128, v148);
          if (v2) {
            goto LABEL_143;
          }
          if (v128 < v126) {
            goto LABEL_146;
          }
          if (v84 > *((void *)v124 + 2)) {
            goto LABEL_147;
          }
          *(void *)uint64_t v125 = v126;
          *(void *)&v81[16 * v123 + 8] = v128;
          unint64_t v129 = *((void *)v124 + 2);
          if (v84 >= v129) {
            goto LABEL_148;
          }
          unint64_t v30 = v129 - 1;
          memmove(&v81[16 * v84], v127 + 16, 16 * (v129 - 1 - v84));
          uint64_t v29 = v124;
          *((void *)v124 + 2) = v129 - 1;
          uint64_t v11 = v153;
          uint64_t v14 = v154;
          if (v129 <= 2) {
            goto LABEL_14;
          }
          continue;
        }
      }
      unint64_t v30 = 1;
LABEL_14:
      uint64_t v22 = v158[1];
      uint64_t v28 = v152;
      if (v152 >= v22) {
        goto LABEL_132;
      }
      continue;
    }
    break;
  }
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  uint64_t result = sub_1C25505E0();
  __break(1u);
  return result;
}

uint64_t sub_1C24BB098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v36 = a4;
  uint64_t v29 = a1;
  uint64_t v30 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v6 = MEMORY[0x1F4188790](v30);
  uint64_t v35 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v34 = a3;
  uint64_t v28 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v38 = v15 * (v34 - 1);
    uint64_t v32 = v10;
    uint64_t v33 = v15;
    uint64_t v37 = v15 * v34;
    uint64_t v31 = (char *)&v27 - v13;
LABEL_6:
    uint64_t v16 = 0;
    uint64_t v17 = v29;
    while (1)
    {
      uint64_t v18 = *v36;
      sub_1C22667C4(v37 + v16 + *v36, (uint64_t)v14);
      sub_1C22667C4(v38 + v16 + v18, (uint64_t)v10);
      if (*((void *)v14 + 8))
      {
        uint64_t v19 = *((void *)v14 + 7);
        unint64_t v20 = *((void *)v14 + 8);
      }
      else
      {
        uint64_t v19 = 0;
        unint64_t v20 = 0xE000000000000000;
      }
      uint64_t v21 = v10;
      unint64_t v22 = *((void *)v10 + 8);
      if (v22)
      {
        unint64_t v23 = v22;
        if (v19 != *((void *)v21 + 7)) {
          goto LABEL_16;
        }
      }
      else
      {
        unint64_t v23 = 0xE000000000000000;
        if (v19) {
          goto LABEL_16;
        }
      }
      if (v20 == v23)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        uint64_t v10 = v32;
        sub_1C24BCA60((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        uint64_t v14 = v31;
        uint64_t result = sub_1C24BCA60((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_5:
        v38 += v33;
        v37 += v33;
        if (++v34 == v28) {
          return result;
        }
        goto LABEL_6;
      }
LABEL_16:
      char v24 = sub_1C2550870();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = v32;
      sub_1C24BCA60((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      uint64_t v14 = v31;
      uint64_t result = sub_1C24BCA60((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if ((v24 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v25 = *v36;
      if (!*v36)
      {
        __break(1u);
        return result;
      }
      uint64_t v26 = v25 + v38 + v16;
      sub_1C2266760(v25 + v37 + v16, v35);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1C2266760(v35, v26);
      v16 -= v33;
      if (v34 == ++v17) {
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_1C24BB3E4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v59 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v8 = MEMORY[0x1F4188790](v59);
  uint64_t v57 = (uint64_t)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v61 = (char *)&v54 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v54 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v54 - v15;
  uint64_t v18 = *(void *)(v17 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if (a2 - a1 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_80;
  }
  int64_t v19 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_81;
  }
  uint64_t v20 = (uint64_t)(a2 - a1) / v18;
  unint64_t v64 = a1;
  unint64_t v63 = a4;
  uint64_t v21 = v19 / v18;
  if (v20 >= v19 / v18)
  {
    if ((v21 & 0x8000000000000000) == 0)
    {
      uint64_t v23 = v21 * v18;
      uint64_t v24 = v57;
      if (a4 < a2 || a2 + v23 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v36 = a4 + v23;
      unint64_t v62 = a4 + v23;
      unint64_t v64 = a2;
      if (v23 >= 1 && a1 < a2)
      {
        uint64_t v38 = -v18;
        unint64_t v55 = a4;
        unint64_t v56 = a1;
        uint64_t v58 = -v18;
        do
        {
          uint64_t v39 = (uint64_t)v61;
          sub_1C22667C4(v36 + v38, (uint64_t)v61);
          unint64_t v60 = a2;
          unint64_t v40 = a2 + v38;
          sub_1C22667C4(a2 + v38, v24);
          if (*(void *)(v39 + 64))
          {
            uint64_t v41 = *(void *)(v39 + 56);
            unint64_t v42 = *(void *)(v39 + 64);
          }
          else
          {
            uint64_t v41 = 0;
            unint64_t v42 = 0xE000000000000000;
          }
          uint64_t v43 = v24;
          unint64_t v44 = *(void *)(v24 + 64);
          if (v44)
          {
            uint64_t v45 = *(void *)(v43 + 56);
            unint64_t v46 = v44;
          }
          else
          {
            uint64_t v45 = 0;
            unint64_t v46 = 0xE000000000000000;
          }
          unint64_t v47 = a3;
          if (v41 == v45 && v42 == v46) {
            char v48 = 0;
          }
          else {
            char v48 = sub_1C2550870();
          }
          uint64_t v38 = v58;
          unint64_t v49 = v47 + v58;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v24 = v57;
          sub_1C24BCA60(v57, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          sub_1C24BCA60((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          if (v48)
          {
            unint64_t v50 = v56;
            if (v47 < v60 || v49 >= v60)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v51 = v55;
              uint64_t v38 = v58;
            }
            else
            {
              unint64_t v51 = v55;
              uint64_t v38 = v58;
              if (v47 != v60) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v64 += v38;
          }
          else
          {
            unint64_t v52 = v62;
            v62 += v38;
            unint64_t v50 = v56;
            unint64_t v40 = v60;
            if (v47 < v52 || v49 >= v52)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v47 != v52)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v51 = v55;
          }
          unint64_t v36 = v62;
          if (v62 <= v51) {
            break;
          }
          a2 = v40;
          a3 = v49;
        }
        while (v40 > v50);
      }
LABEL_78:
      sub_1C23F30C0(&v64, &v63, (uint64_t *)&v62);
      return 1;
    }
  }
  else if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v22 = v20 * v18;
    if (a4 < a1 || a1 + v22 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v60 = a4 + v22;
    unint64_t v62 = a4 + v22;
    if (v22 >= 1 && a2 < a3)
    {
      uint64_t v61 = v14;
      while (1)
      {
        sub_1C22667C4(a2, (uint64_t)v16);
        sub_1C22667C4(a4, (uint64_t)v14);
        if (*((void *)v16 + 8))
        {
          uint64_t v26 = *((void *)v16 + 7);
          unint64_t v27 = *((void *)v16 + 8);
          unint64_t v28 = *((void *)v14 + 8);
          if (!v28) {
            goto LABEL_27;
          }
        }
        else
        {
          uint64_t v26 = 0;
          unint64_t v27 = 0xE000000000000000;
          unint64_t v28 = *((void *)v14 + 8);
          if (!v28)
          {
LABEL_27:
            uint64_t v29 = 0;
            unint64_t v30 = 0xE000000000000000;
            goto LABEL_28;
          }
        }
        uint64_t v29 = *((void *)v14 + 7);
        unint64_t v30 = v28;
LABEL_28:
        unint64_t v31 = a3;
        if (v26 == v29 && v27 == v30)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          sub_1C24BCA60((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          sub_1C24BCA60((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_36:
          unint64_t v33 = v64;
          unint64_t v35 = v63 + v18;
          if (v64 < v63 || v64 >= v35)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v31;
          }
          else
          {
            a3 = v31;
            if (v64 != v63) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v63 = v35;
          unint64_t v34 = a2;
          goto LABEL_42;
        }
        char v32 = sub_1C2550870();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C24BCA60((uint64_t)v61, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C24BCA60((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        if ((v32 & 1) == 0) {
          goto LABEL_36;
        }
        unint64_t v33 = v64;
        unint64_t v34 = a2 + v18;
        if (v64 < a2 || v64 >= v34)
        {
          swift_arrayInitWithTakeFrontToBack();
          a3 = v31;
        }
        else
        {
          a3 = v31;
          if (v64 == a2) {
            unint64_t v33 = a2;
          }
          else {
            swift_arrayInitWithTakeBackToFront();
          }
        }
LABEL_42:
        unint64_t v64 = v33 + v18;
        a4 = v63;
        uint64_t v14 = v61;
        if (v63 < v60)
        {
          a2 = v34;
          if (v34 < a3) {
            continue;
          }
        }
        goto LABEL_78;
      }
    }
    goto LABEL_78;
  }
LABEL_82:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C24BBA64(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0) {
    return sub_1C2550510();
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2)
  {
    uint64_t v3 = 0;
    return __clz(__rbit64(v2)) + v3;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v1 = 1 << v5;
  if (v6 < 7) {
    return v1;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = 64;
    return __clz(__rbit64(v2)) + v3;
  }
  unint64_t v7 = (unint64_t)(v1 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v3 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v2 = v10;
    --v8;
    v3 += 64;
    if (v10) {
      return __clz(__rbit64(v2)) + v3;
    }
  }
  return v1;
}

uint64_t sub_1C24BBB2C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1C24BBBB4(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  if (!a2)
  {
    if (a6) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!a6) {
    return 0;
  }
  if (a1 == a5 && a2 == a6 || (v12 = sub_1C2550870(), uint64_t result = 0, (v12 & 1) != 0))
  {
LABEL_8:
    if (a3)
    {
      if (!a7) {
        return 0;
      }
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
      id v14 = a7;
      id v15 = a3;
      char v16 = sub_1C254FF70();

      if ((v16 & 1) == 0) {
        return 0;
      }
    }
    else if (a7)
    {
      return 0;
    }
    if (a4)
    {
      if (a8)
      {
        sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
        id v17 = a8;
        id v18 = a4;
        char v19 = sub_1C254FF70();

        if (v19) {
          return 1;
        }
      }
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C24BBCE0(uint64_t a1, void (*a2)(uint64_t, uint64_t, void *, void *, uint64_t))
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v32 = MEMORY[0x1E4FBC860];
    sub_1C2550490();
    uint64_t result = sub_1C24BBB2C(v2);
    uint64_t v6 = result;
    uint64_t v7 = 0;
    uint64_t v8 = v2 + 64;
    uint64_t v24 = v2 + 80;
    uint64_t v25 = v3;
    uint64_t v27 = v2 + 64;
    uint64_t v28 = v2;
    int v26 = v5;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v2 + 32))
    {
      unint64_t v10 = (unint64_t)v6 >> 6;
      if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(v2 + 36) != v5) {
        goto LABEL_23;
      }
      uint64_t v30 = v7;
      uint64_t v11 = *(void *)(v2 + 56);
      char v12 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v6);
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      id v15 = (void *)v12[2];
      char v16 = (void *)v12[3];
      uint64_t v17 = *(void *)(v11 + 8 * v6);
      id v31 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v18 = v15;
      a2(v13, v14, v15, v16, v17);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_1C2550460();
      sub_1C25504A0();
      uint64_t v2 = v28;
      sub_1C25504B0();
      uint64_t result = sub_1C2550470();
      int64_t v9 = 1 << *(unsigned char *)(v28 + 32);
      if (v6 >= v9) {
        goto LABEL_24;
      }
      uint64_t v8 = v27;
      uint64_t v19 = *(void *)(v27 + 8 * v10);
      if ((v19 & (1 << v6)) == 0) {
        goto LABEL_25;
      }
      int v5 = v26;
      if (*(_DWORD *)(v28 + 36) != v26) {
        goto LABEL_26;
      }
      unint64_t v20 = v19 & (-2 << (v6 & 0x3F));
      if (v20)
      {
        int64_t v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v21 = v10 + 1;
        unint64_t v22 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v22)
        {
          unint64_t v23 = *(void *)(v27 + 8 * v21);
          if (v23)
          {
LABEL_18:
            int64_t v9 = __clz(__rbit64(v23)) + (v21 << 6);
          }
          else
          {
            while (v22 - 2 != v10)
            {
              unint64_t v23 = *(void *)(v24 + 8 * v10++);
              if (v23)
              {
                unint64_t v21 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v7 = v30 + 1;
      uint64_t v6 = v9;
      if (v30 + 1 == v25) {
        return v32;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_1C24BBF30(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1C24B9BE4(a1, a2, a3, v3);
}

uint64_t sub_1C24BBF38(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1C2550490();
    uint64_t result = sub_1C24BBB2C(v2);
    uint64_t v5 = result;
    int v7 = v6;
    uint64_t v8 = 0;
    uint64_t v9 = v2 + 64;
    uint64_t v21 = v2 + 80;
    uint64_t v22 = v3;
    uint64_t v23 = v2;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v2 + 32))
    {
      unint64_t v11 = (unint64_t)v5 >> 6;
      if ((*(void *)(v9 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(v2 + 36) != v7) {
        goto LABEL_23;
      }
      uint64_t v25 = v8;
      char v12 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v5);
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      uint64_t v15 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a2(v13, v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C2550460();
      sub_1C25504A0();
      uint64_t v2 = v23;
      sub_1C25504B0();
      uint64_t result = sub_1C2550470();
      int64_t v10 = 1 << *(unsigned char *)(v23 + 32);
      if (v5 >= v10) {
        goto LABEL_24;
      }
      uint64_t v16 = *(void *)(v9 + 8 * v11);
      if ((v16 & (1 << v5)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(v23 + 36) != v7) {
        goto LABEL_26;
      }
      unint64_t v17 = v16 & (-2 << (v5 & 0x3F));
      if (v17)
      {
        int64_t v10 = __clz(__rbit64(v17)) | v5 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v18 = v11 + 1;
        unint64_t v19 = (unint64_t)(v10 + 63) >> 6;
        if (v11 + 1 < v19)
        {
          unint64_t v20 = *(void *)(v9 + 8 * v18);
          if (v20)
          {
LABEL_18:
            int64_t v10 = __clz(__rbit64(v20)) + (v18 << 6);
          }
          else
          {
            while (v19 - 2 != v11)
            {
              unint64_t v20 = *(void *)(v21 + 8 * v11++);
              if (v20)
              {
                unint64_t v18 = v11 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v8 = v25 + 1;
      uint64_t v5 = v10;
      if (v25 + 1 == v22) {
        return v26;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_1C24BC164(uint64_t a1, char a2)
{
  return sub_1C24B9378(a1, a2, v2);
}

uint64_t sub_1C24BC180(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() - 8;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v8 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1C22667C4(v7, (uint64_t)v5);
    uint64_t v10 = v14;
    unint64_t v9 = v15;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C254F580();
    swift_bridgeObjectRelease();
    if (v11 >= 41) {
      break;
    }
    uint64_t v12 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0) {
      uint64_t v12 = v10 & 0xFFFFFFFFFFFFLL;
    }
    if (v12) {
      sub_1C254F5A0();
    }
    if (*((void *)v5 + 8)) {
      sub_1C254F5A0();
    }
    sub_1C24BCA60((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    v7 += v8;
    if (!--v6)
    {
      swift_bridgeObjectRelease();
      return v14;
    }
  }
  swift_bridgeObjectRelease();
  sub_1C24BCA60((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  return v10;
}

uint64_t sub_1C24BC340(uint64_t a1, uint8_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v43 = a5;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v39 = a2;
  sub_1C24BCA08();
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v10 = MEMORY[0x1F4188790](v38);
  uint64_t v37 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v33 = (uint64_t)&v33 - v13;
  uint64_t v34 = v12;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v35 = a1 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v36 = (unint64_t)(v15 + 63) >> 6;
  unint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  unint64_t v21 = MEMORY[0x1E4FBC860];
  if (v17) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v20++, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v20 >= v36) {
    goto LABEL_33;
  }
  unint64_t v25 = *(void *)(v35 + 8 * v20);
  if (v25) {
    goto LABEL_19;
  }
  int64_t v26 = v20 + 1;
  if (v20 + 1 >= v36) {
    goto LABEL_33;
  }
  unint64_t v25 = *(void *)(v35 + 8 * v26);
  if (v25)
  {
LABEL_18:
    int64_t v20 = v26;
LABEL_19:
    unint64_t v17 = (v25 - 1) & v25;
    for (unint64_t i = __clz(__rbit64(v25)) + (v20 << 6); ; unint64_t i = v22 | (v20 << 6))
    {
      uint64_t v27 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
      uint64_t v28 = v27[1];
      uint64_t v29 = *(void *)(*(void *)(a1 + 56) + 8 * i);
      v42[0] = *v27;
      v42[1] = v28;
      void v42[2] = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C24B8F20(v42, v39, v40, v41, v43, (uint64_t)v9);
      if (v5) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*v18)(v9, 1, v38) == 1)
      {
        uint64_t result = sub_1C24BCA60((uint64_t)v9, (uint64_t (*)(void))sub_1C24BCA08);
        if (!v17) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v30 = v33;
        sub_1C2266760((uint64_t)v9, v33);
        sub_1C2266760(v30, v37);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v21 = sub_1C226C100(0, *(void *)(v21 + 16) + 1, 1, v21);
        }
        unint64_t v32 = *(void *)(v21 + 16);
        unint64_t v31 = *(void *)(v21 + 24);
        if (v32 >= v31 >> 1) {
          unint64_t v21 = sub_1C226C100(v31 > 1, v32 + 1, 1, v21);
        }
        *(void *)(v21 + 16) = v32 + 1;
        uint64_t result = sub_1C2266760(v37, v21+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v32);
        if (!v17) {
          goto LABEL_7;
        }
      }
LABEL_6:
      unint64_t v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v21;
  }
  int64_t v26 = v20 + 2;
  if (v20 + 2 >= v36)
  {
LABEL_33:
    swift_release();
    return v21;
  }
  unint64_t v25 = *(void *)(v35 + 8 * v26);
  if (v25) {
    goto LABEL_18;
  }
  int64_t v26 = v20 + 3;
  if (v20 + 3 >= v36) {
    goto LABEL_33;
  }
  unint64_t v25 = *(void *)(v35 + 8 * v26);
  if (v25) {
    goto LABEL_18;
  }
  int64_t v26 = v20 + 4;
  if (v20 + 4 >= v36) {
    goto LABEL_33;
  }
  unint64_t v25 = *(void *)(v35 + 8 * v26);
  if (v25) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v20 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v25 = *(void *)(v35 + 8 * v20);
    ++v26;
    if (v25) {
      goto LABEL_19;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1C24BC740(char a1)
{
  switch(a1)
  {
    case 1:
      if (qword_1EBB6D9B0 != -1) {
        goto LABEL_12;
      }
      break;
    case 2:
      if (qword_1EBB6D9B0 != -1) {
        goto LABEL_12;
      }
      break;
    case 3:
      if (qword_1EBB6D9B0 != -1) {
        goto LABEL_12;
      }
      break;
    case 4:
      if (qword_1EBB6D9B0 != -1) {
        goto LABEL_12;
      }
      break;
    default:
      if (qword_1EBB6D9B0 != -1) {
LABEL_12:
      }
        swift_once();
      break;
  }
  id v1 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v2;
}

void sub_1C24BCA08()
{
  if (!qword_1EA2DF3D0)
  {
    type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF3D0);
    }
  }
}

uint64_t sub_1C24BCA60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void destroy for IdentifierDisplayConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for IdentifierDisplayConfiguration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  id v6 = v4;
  id v7 = v5;
  return a1;
}

void *assignWithCopy for IdentifierDisplayConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = (void *)a2[2];
  a1[2] = v5;
  id v6 = v5;

  id v7 = (void *)a1[3];
  uint64_t v8 = (void *)a2[3];
  a1[3] = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for IdentifierDisplayConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for IdentifierDisplayConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentifierDisplayConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentifierDisplayConfiguration()
{
  return &type metadata for IdentifierDisplayConfiguration;
}

unint64_t sub_1C24BCCE0()
{
  unint64_t result = qword_1EA2E43C8;
  if (!qword_1EA2E43C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E43C8);
  }
  return result;
}

uint64_t sub_1C24BCD94(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v100 = a2;
  uint64_t v101 = a3;
  uint64_t v5 = sub_1C254E560();
  uint64_t v106 = *(void *)(v5 - 8);
  uint64_t v107 = v5;
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v104 = (char *)&v90 - v9;
  uint64_t v10 = sub_1C254C520();
  uint64_t v98 = *(void *)(v10 - 8);
  uint64_t v99 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v97 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24BE058(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v90 - v16;
  uint64_t v18 = sub_1C254CAD0();
  uint64_t v103 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  int64_t v20 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v90 - v22;
  MEMORY[0x1F4188790](v24);
  unint64_t v96 = (char *)&v90 - v25;
  *(void *)&double v27 = MEMORY[0x1F4188790](v26).n128_u64[0];
  uint64_t v102 = (char *)&v90 - v28;
  id v29 = objc_msgSend(a1, sel_primarySeries, v27);
  if (!v29
    || (uint64_t v30 = v29,
        id v31 = objc_msgSend(v29, sel_dataSource),
        uint64_t v105 = (uint64_t)v3,
        id v32 = v31,
        v30,
        unint64_t v3 = (void *)v105,
        !v32))
  {
LABEL_8:
    sub_1C254E520();
    id v41 = v3;
    id v42 = a1;
    id v43 = v41;
    id v44 = v42;
    uint64_t v45 = sub_1C254E550();
    os_log_type_t v46 = sub_1C254FA20();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v105 = swift_slowAlloc();
      v110[0] = v105;
      *(_DWORD *)uint64_t v47 = 136446466;
      id v48 = v43;
      id v49 = objc_msgSend(v48, sel_description);
      uint64_t v50 = sub_1C254F470();
      unint64_t v52 = v51;

      id v109 = (id)sub_1C21AD354(v50, v52, v110);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2082;
      id v109 = objc_msgSend(v44, sel_primarySeries);
      sub_1C24BDF80();
      uint64_t v53 = sub_1C254F4F0();
      id v109 = (id)sub_1C21AD354(v53, v54, v110);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v45, v46, "Cannot update %{public}s with a graph view that does not have a primary series with a medical record chart data source. Primary series: %{public}s", (uint8_t *)v47, 0x16u);
      uint64_t v55 = v105;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v55, -1, -1);
      MEMORY[0x1C875A0B0](v47, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v7, v107);
  }
  id v33 = v32;
  type metadata accessor for MedicalRecordChartDataSource();
  uint64_t v34 = swift_dynamicCastClass();
  if (!v34)
  {

    goto LABEL_8;
  }
  uint64_t v35 = v34;
  id v36 = objc_msgSend(a1, sel_actualVisibleRange);
  id v37 = objc_msgSend(v36, sel_minValue);
  id v95 = v33;
  if (!v37)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v103 + 56))(v17, 1, 1, v18);
    uint64_t v14 = v17;
    goto LABEL_23;
  }
  uint64_t v92 = v35;
  id v94 = v36;
  v110[0] = (uint64_t)v37;
  int v38 = swift_dynamicCast();
  uint64_t v39 = v103;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v103 + 56);
  v40(v17, v38 ^ 1u, 1, v18);
  uint64_t v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  if (v93(v17, 1, v18) == 1)
  {
    uint64_t v14 = v17;
LABEL_22:
    id v36 = v94;
    id v33 = v95;
    unint64_t v3 = (void *)v105;
LABEL_23:
    sub_1C24BE0BC((uint64_t)v14, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
    uint64_t v67 = v104;
    sub_1C254E520();
    id v68 = v3;
    id v69 = v36;
    id v70 = v68;
    id v71 = v69;
    uint64_t v72 = sub_1C254E550();
    os_log_type_t v73 = sub_1C254FA20();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      v110[0] = v75;
      *(_DWORD *)uint64_t v74 = 136446466;
      id v76 = v70;
      id v77 = objc_msgSend(v76, sel_description);
      uint64_t v78 = sub_1C254F470();
      unint64_t v80 = v79;

      id v109 = (id)sub_1C21AD354(v78, v80, v110);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2082;
      id v81 = v71;
      id v82 = objc_msgSend(v81, sel_description);
      uint64_t v83 = sub_1C254F470();
      unint64_t v85 = v84;

      id v109 = (id)sub_1C21AD354(v83, v85, v110);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v72, v73, "Cannot update %{public}s without a date-bounded visible range, have: %{public}s", (uint8_t *)v74, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v75, -1, -1);
      MEMORY[0x1C875A0B0](v74, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v104, v107);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v67, v107);
    }
  }
  uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
  v91(v102, v17, v18);
  id v57 = objc_msgSend(v94, sel_maxValue);
  if (!v57)
  {
    v40(v14, 1, 1, v18);
    goto LABEL_21;
  }
  v110[0] = (uint64_t)v57;
  int v58 = swift_dynamicCast();
  v40(v14, v58 ^ 1u, 1, v18);
  if (v93(v14, 1, v18) == 1)
  {
LABEL_21:
    (*(void (**)(char *, uint64_t))(v39 + 8))(v102, v18);
    goto LABEL_22;
  }
  uint64_t v59 = v96;
  v91(v96, v14, v18);
  unint64_t v60 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  v60(v23, v102, v18);
  v60(v20, v59, v18);
  uint64_t v61 = v97;
  uint64_t v62 = sub_1C254C4F0();
  unint64_t v63 = *(void *)(v92 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets);
  id v64 = v95;
  if (v63)
  {
    MEMORY[0x1F4188790](v62);
    *(&v90 - 2) = (uint64_t)v61;
    swift_bridgeObjectRetain();
    unint64_t v65 = sub_1C228A418(sub_1C23E4838, (uint64_t)(&v90 - 4), v63);
    if (v65 >> 62) {
      uint64_t v66 = sub_1C2550620();
    }
    else {
      uint64_t v66 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v66 = 0;
  }
  uint64_t v86 = (void *)v105;
  uint64_t v87 = v105 + OBJC_IVAR____TtC15HealthRecordsUI37SingleValueCurrentValueViewDataSource_lastCachedNumberOfChartPoints;
  *(void *)uint64_t v87 = v66;
  *(unsigned char *)(v87 + 8) = 0;
  char v88 = (objc_class *)type metadata accessor for SingleValueCurrentValueViewDataSource();
  v108.receiver = v86;
  v108.super_class = v88;
  objc_msgSendSuper2(&v108, sel_updateDataSourceWithGraphView_displayType_timeScope_, a1, v100, v101);

  (*(void (**)(char *, uint64_t))(v98 + 8))(v61, v99);
  double v89 = *(void (**)(char *, uint64_t))(v103 + 8);
  v89(v59, v18);
  return ((uint64_t (*)(char *, uint64_t))v89)(v102, v18);
}

id SingleValueCurrentValueViewDataSource.__allocating_init(dateCache:healthStore:selectedRangeFormatter:)(void *a1, void *a2, void *a3)
{
  id v7 = objc_msgSend(objc_allocWithZone(v3), sel_initWithDateCache_healthStore_selectedRangeFormatter_, a1, a2, a3);

  return v7;
}

id SingleValueCurrentValueViewDataSource.init(dateCache:healthStore:selectedRangeFormatter:)(void *a1, void *a2, void *a3)
{
  id v7 = &v3[OBJC_IVAR____TtC15HealthRecordsUI37SingleValueCurrentValueViewDataSource_lastCachedNumberOfChartPoints];
  *(void *)id v7 = 0;
  v7[8] = 1;
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for SingleValueCurrentValueViewDataSource();
  id v8 = objc_msgSendSuper2(&v10, sel_initWithDateCache_healthStore_selectedRangeFormatter_, a1, a2, a3);

  return v8;
}

id SingleValueCurrentValueViewDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id SingleValueCurrentValueViewDataSource.init()()
{
  id v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI37SingleValueCurrentValueViewDataSource_lastCachedNumberOfChartPoints];
  *(void *)id v1 = 0;
  v1[8] = 1;
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for SingleValueCurrentValueViewDataSource();
  return objc_msgSendSuper2(&v3, sel_init);
}

id SingleValueCurrentValueViewDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SingleValueCurrentValueViewDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C24BDB88()
{
  sub_1C24BE058(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  objc_super v3 = &v25[-v2];
  id v4 = 0;
  if ((v0[OBJC_IVAR____TtC15HealthRecordsUI37SingleValueCurrentValueViewDataSource_lastCachedNumberOfChartPoints + 8] & 1) == 0)
  {
    uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI37SingleValueCurrentValueViewDataSource_lastCachedNumberOfChartPoints];
    id v6 = objc_msgSend(self, sel_hk_chartCurrentValueKindFont);
    sub_1C24BE058(0, (unint64_t *)&qword_1EA2E4460, (uint64_t (*)(uint64_t))sub_1C21F0FE8, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
    id v8 = (void *)*MEMORY[0x1E4FB0700];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB0700];
    id v9 = v8;
    id v10 = objc_msgSend(v0, sel_titleColor);
    uint64_t v11 = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
    *(void *)(inited + 40) = v10;
    uint64_t v12 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 64) = v11;
    *(void *)(inited + 72) = v12;
    *(void *)(inited + 104) = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    *(void *)(inited + 80) = v6;
    id v13 = v12;
    id v14 = v6;
    sub_1C2203C38(inited);
    uint64_t v15 = sub_1C254CBD0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v3, 1, 1, v15);
    if (qword_1EA2DD648 != -1) {
      swift_once();
    }
    uint64_t v16 = (void *)qword_1EA2E0AB8;
    sub_1C24BE058(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v17 + 16) = xmmword_1C255CD90;
    uint64_t v19 = MEMORY[0x1E4FBB5C8];
    *(void *)(v17 + 56) = v18;
    *(void *)(v17 + 64) = v19;
    *(void *)(v17 + 32) = v5;
    id v20 = v16;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    sub_1C254F4A0();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C24BE0BC((uint64_t)v3, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
    id v21 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v22 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1C21F1054();
    uint64_t v23 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v4 = objc_msgSend(v21, sel_initWithString_attributes_, v22, v23);
  }
  return v4;
}

void sub_1C24BDF80()
{
  if (!qword_1EA2E43D8)
  {
    sub_1C21AB51C(255, &qword_1EA2E43E0);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E43D8);
    }
  }
}

uint64_t type metadata accessor for SingleValueCurrentValueViewDataSource()
{
  return self;
}

uint64_t method lookup function for SingleValueCurrentValueViewDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SingleValueCurrentValueViewDataSource);
}

uint64_t dispatch thunk of SingleValueCurrentValueViewDataSource.title(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

void sub_1C24BE058(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C24BE0BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C24BE058(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t MedicalRecordTimelinePanelHeaderItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C24BE15C()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*(id *)(v0 + 48), sel_UUID, v3);
  sub_1C254CB20();

  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  strcpy((char *)v8, "PanelHeader.");
  BYTE5(v8[1]) = 0;
  HIWORD(v8[1]) = -5120;
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v8[0];
}

void sub_1C24BE298()
{
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 48);
  sub_1C254FF80();
}

uint64_t MedicalRecordTimelinePanelHeaderItem.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelinePanelHeaderItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C24BE3A4()
{
  sub_1C25509C0();
  sub_1C254F570();
  id v1 = *(id *)(v0 + 48);
  sub_1C254FF80();

  return sub_1C2550A10();
}

uint64_t sub_1C24BE400()
{
  uint64_t v1 = *v0;
  sub_1C25509C0();
  sub_1C254F570();
  id v2 = *(id *)(v1 + 48);
  sub_1C254FF80();

  return sub_1C2550A10();
}

void sub_1C24BE460()
{
  uint64_t v1 = *v0;
  sub_1C254F570();
  id v2 = *(id *)(v1 + 48);
  sub_1C254FF80();
}

uint64_t sub_1C24BE4C4()
{
  sub_1C25509C0();
  uint64_t v1 = *v0;
  sub_1C254F570();
  id v2 = *(id *)(v1 + 48);
  sub_1C254FF80();

  return sub_1C2550A10();
}

uint64_t sub_1C24BE520()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C24BE554()
{
  return sub_1C24BE15C();
}

uint64_t sub_1C24BE578(void **a1, void **a2)
{
  return _s15HealthRecordsUI36MedicalRecordTimelinePanelHeaderItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

id sub_1C24BE584()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___titleLabel;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___titleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    id v6 = (void *)sub_1C254FE50();
    objc_msgSend(v5, sel_setFont_, v6);

    id v7 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v13 = sub_1C254F470();
    uint64_t v14 = v8;
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    id v3 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v9, v13, v14);

    id v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v3;

    id v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1C24BE780()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___subtitleLabel;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___subtitleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___subtitleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    id v6 = (void *)sub_1C254FE50();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    id v7 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v13 = sub_1C254F470();
    uint64_t v14 = v8;
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    id v3 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setAccessibilityIdentifier_, v9, v13, v14);

    id v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v3;

    id v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_1C24BE984(uint64_t a1, void *a2)
{
  sub_1C249D358(a1, (uint64_t)v5, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_item;
  swift_beginAccess();
  sub_1C249D3C4((uint64_t)v5, v3, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  swift_endAccess();
  sub_1C24BEA34();
  return sub_1C249D430((uint64_t)v5, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t sub_1C24BEA34()
{
  sub_1C249DBB8(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v15 - v2;
  uint64_t v4 = (uint64_t)&v0[OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_item];
  swift_beginAccess();
  sub_1C249D358(v4, (uint64_t)v16, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  if (v16[3])
  {
    sub_1C22270A8();
    type metadata accessor for MedicalRecordTimelinePanelHeaderItem();
    if (swift_dynamicCast())
    {
      sub_1C254E6F0();
      uint64_t v5 = sub_1C254E710();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 0, 1, v5);
      MEMORY[0x1C8758250](v3);
      id v6 = sub_1C24BE584();
      swift_bridgeObjectRetain();
      id v7 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setText_, v7);

      id v8 = sub_1C24BE780();
      swift_bridgeObjectRetain();
      uint64_t v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setText_, v9);

      id v10 = self;
      uint64_t v11 = OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_customConstraints;
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
      swift_bridgeObjectRetain();
      uint64_t v12 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_deactivateConstraints_, v12);

      *(void *)&v0[v11] = sub_1C24BFE74();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v13 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_activateConstraints_, v13);

      objc_msgSend(v0, sel_setNeedsLayout);
      return swift_release();
    }
  }
  else
  {
    sub_1C249D430((uint64_t)v16, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  }
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  v15[0] = 0xD000000000000026;
  v15[1] = 0x80000001C2587630;
  sub_1C249D358(v4, (uint64_t)v16, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  sub_1C249DBB8(0, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  sub_1C254F510();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C25505F0();
  __break(1u);
  return result;
}

uint64_t sub_1C24BEDF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_item;
  swift_beginAccess();
  return sub_1C249D358(v3, a1, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t sub_1C24BEE64(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_item;
  swift_beginAccess();
  sub_1C249D3C4(a1, v3, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  swift_endAccess();
  sub_1C24BEA34();
  return sub_1C249D430(a1, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t (*sub_1C24BEF08(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C24BEF68;
}

uint64_t sub_1C24BEF68(uint64_t a1, char a2)
{
  return sub_1C24BF618(a1, a2, (uint64_t (*)(uint64_t))sub_1C24BEA34);
}

uint64_t sub_1C24BEF80(uint64_t a1, void *a2)
{
  uint64_t v4 = (void (*)(uint64_t))MEMORY[0x1E4F66300];
  sub_1C249DBB8(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v10 - v6;
  sub_1C249D358(a1, (uint64_t)&v10 - v6, &qword_1EA2DF2E0, v4);
  uint64_t v8 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_sectionContext;
  swift_beginAccess();
  sub_1C249D3C4((uint64_t)v7, v8, &qword_1EA2DF2E0, v4);
  swift_endAccess();
  sub_1C24BF088();
  return sub_1C249D430((uint64_t)v7, &qword_1EA2DF2E0, v4);
}

uint64_t sub_1C24BF088()
{
  uint64_t v24 = sub_1C254CD90();
  uint64_t v1 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void (*)(uint64_t))MEMORY[0x1E4F66300];
  sub_1C249DBB8(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v24 - v6;
  uint64_t v8 = sub_1C254D370();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v0;
  uint64_t v12 = v0 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_sectionContext;
  swift_beginAccess();
  sub_1C249D358(v12, (uint64_t)v7, &qword_1EA2DF2E0, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1C249D430((uint64_t)v7, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_1C25503A0();
  uint64_t v14 = sub_1C254F470();
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t v27 = v14;
  unint64_t v28 = v16;
  sub_1C254F5A0();
  sub_1C254D360();
  uint64_t v17 = sub_1C254CD80();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v24);
  uint64_t v26 = v17;
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v19 = v27;
  unint64_t v18 = v28;
  id v20 = sub_1C24BE584();
  uint64_t v27 = v19;
  unint64_t v28 = v18;
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  id v21 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setAccessibilityIdentifier_, v21);

  id v22 = sub_1C24BE780();
  uint64_t v27 = v19;
  unint64_t v28 = v18;
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v23 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setAccessibilityIdentifier_, v23);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1C24BF48C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_sectionContext;
  swift_beginAccess();
  return sub_1C249D358(v3, a1, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
}

uint64_t sub_1C24BF4FC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_sectionContext;
  swift_beginAccess();
  uint64_t v4 = (void (*)(uint64_t))MEMORY[0x1E4F66300];
  sub_1C249D3C4(a1, v3, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  swift_endAccess();
  sub_1C24BF088();
  return sub_1C249D430(a1, &qword_1EA2DF2E0, v4);
}

uint64_t (*sub_1C24BF5A0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C24BF600;
}

uint64_t sub_1C24BF600(uint64_t a1, char a2)
{
  return sub_1C24BF618(a1, a2, (uint64_t (*)(uint64_t))sub_1C24BF088);
}

uint64_t sub_1C24BF618(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

id MedicalRecordTimelinePanelHeaderItemCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicalRecordTimelinePanelHeaderItemCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell____lazy_storage___subtitleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_customConstraints] = MEMORY[0x1E4FBC860];
  id v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_item];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = &v4[OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_sectionContext];
  uint64_t v11 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell();
  id v12 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C24BF9F0();

  return v12;
}

id sub_1C24BF9F0()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = sub_1C24BE584();
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = objc_msgSend(v0, sel_contentView);
  id v4 = sub_1C24BE780();
  objc_msgSend(v3, sel_addSubview_, v4);

  uint64_t v5 = self;
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_customConstraints;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  id v7 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_deactivateConstraints_, v7);

  *(void *)&v0[v6] = sub_1C24BFE74();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_activateConstraints_, v8);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

void sub_1C24BFB68(void *a1)
{
  id v2 = v1;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell();
  objc_msgSendSuper2(&v12, sel_traitCollectionDidChange_, a1);
  id v4 = objc_msgSend(v2, sel_traitCollection);
  uint64_t v5 = v4;
  if (!a1)
  {
    if (!v4) {
      return;
    }

    goto LABEL_7;
  }
  if (!v4
    || (sub_1C21AB51C(0, &qword_1EBB6FF98),
        id v6 = a1,
        char v7 = sub_1C254FF70(),
        v6,
        v6,
        v5,
        (v7 & 1) == 0))
  {
LABEL_7:
    uint64_t v8 = self;
    uint64_t v9 = OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_customConstraints;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_deactivateConstraints_, v10);

    *(void *)&v2[v9] = sub_1C24BFE74();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_activateConstraints_, v11);

    objc_msgSend(v2, sel_setNeedsLayout);
  }
}

id sub_1C24BFD74()
{
  id v1 = self;
  uint64_t v2 = OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_customConstraints;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  id v3 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_deactivateConstraints_, v3);

  *(void *)&v0[v2] = sub_1C24BFE74();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v4 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v4);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_1C24BFE74()
{
  sub_1C21ACA3C();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C255EBD0;
  id v2 = sub_1C24BE584();
  id v3 = objc_msgSend(v2, sel_topAnchor);

  id v4 = objc_msgSend(v0, sel_contentView);
  id v5 = objc_msgSend(v4, sel_topAnchor);

  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 4.0);
  *(void *)(v1 + 32) = v6;
  id v7 = sub_1C24BE584();
  id v8 = objc_msgSend(v7, sel_leadingAnchor);

  id v9 = objc_msgSend(v0, sel_contentView);
  id v10 = objc_msgSend(v9, sel_leadingAnchor);

  id v11 = objc_msgSend(v8, (SEL)&selRef_chartDataCacheController + 7, v10, 2.0);
  *(void *)(v1 + 40) = v11;
  id v12 = objc_msgSend(v0, sel_contentView);
  id v13 = objc_msgSend(v12, sel_trailingAnchor);

  id v14 = sub_1C24BE584();
  id v15 = objc_msgSend(v14, sel_trailingAnchor);

  id v16 = objc_msgSend(v13, (SEL)&selRef_chartDataCacheController + 7, v15, 2.0);
  *(void *)(v1 + 48) = v16;
  id v17 = sub_1C24BE780();
  id v18 = objc_msgSend(v17, sel_topAnchor);

  id v19 = sub_1C24BE584();
  id v20 = objc_msgSend(v19, sel_bottomAnchor);

  id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v20);
  *(void *)(v1 + 56) = v21;
  id v22 = sub_1C24BE780();
  id v23 = objc_msgSend(v22, sel_leadingAnchor);

  id v24 = sub_1C24BE584();
  id v25 = objc_msgSend(v24, sel_leadingAnchor);

  id v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v25);
  *(void *)(v1 + 64) = v26;
  id v27 = sub_1C24BE780();
  id v28 = objc_msgSend(v27, sel_trailingAnchor);

  id v29 = sub_1C24BE584();
  id v30 = objc_msgSend(v29, sel_trailingAnchor);

  id v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v30);
  *(void *)(v1 + 72) = v31;
  id v32 = objc_msgSend(v0, sel_contentView);
  id v33 = objc_msgSend(v32, sel_bottomAnchor);

  id v34 = sub_1C24BE780();
  id v35 = objc_msgSend(v34, sel_bottomAnchor);

  id v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_constant_, v35, 8.0);
  *(void *)(v1 + 80) = v36;
  sub_1C254F730();
  return v1;
}

id MedicalRecordTimelinePanelHeaderItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s15HealthRecordsUI36MedicalRecordTimelinePanelHeaderItemC2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = a1[2] == a2[2] && a1[3] == a2[3];
  if (v4 || (v5 = sub_1C2550870(), uint64_t result = 0, (v5 & 1) != 0))
  {
    if (a1[4] == a2[4] && a1[5] == a2[5])
    {
      return 1;
    }
    else
    {
      return sub_1C2550870();
    }
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell()
{
  uint64_t result = qword_1EA2E44A8;
  if (!qword_1EA2E44A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C24C03F0()
{
  unint64_t result = qword_1EA2E44A0;
  if (!qword_1EA2E44A0)
  {
    type metadata accessor for MedicalRecordTimelinePanelHeaderItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E44A0);
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordTimelinePanelHeaderItem()
{
  return self;
}

uint64_t sub_1C24C0468@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_item;
  swift_beginAccess();
  return sub_1C249D358(v3, a2, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t sub_1C24C04E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI40MedicalRecordTimelinePanelHeaderItemCell_sectionContext;
  swift_beginAccess();
  return sub_1C249D358(v3, a2, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
}

uint64_t method lookup function for MedicalRecordTimelinePanelHeaderItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelinePanelHeaderItem);
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t sub_1C24C05DC()
{
  return type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell();
}

void sub_1C24C05E4()
{
  sub_1C249DBB8(319, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedicalRecordTimelinePanelHeaderItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelinePanelHeaderItemCell);
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.sectionContext.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.sectionContext.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.sectionContext.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.commonInit()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.updateFonts()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelHeaderItemCell.setUpConstraints()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

unint64_t static ClinicalSharingFeedItemIdentifierFactory.makeComponentForPrefix()()
{
  return 0xD000000000000025;
}

uint64_t static ClinicalSharingFeedItemIdentifierFactory.make(for:profile:)(void *a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v2).n128_u64[0];
  id v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_identifier, v4);
  sub_1C254CB20();

  uint64_t v8 = sub_1C24C0A0C();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v8;
}

uint64_t sub_1C24C0A0C()
{
  uint64_t v0 = sub_1C254CB40();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255CDA0;
  uint64_t v5 = (void *)sub_1C254CF00();
  unint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  if (v5)
  {
    unint64_t v14 = 0x656C69666F72505BLL;
    unint64_t v15 = 0xE90000000000003ALL;
    id v6 = v5;
    id v7 = objc_msgSend(v6, sel_identifier);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();

    unint64_t v9 = v14;
    unint64_t v8 = v15;
  }
  else
  {
    unint64_t v8 = 0x80000001C2578680;
    unint64_t v9 = 0xD000000000000013;
  }
  unint64_t v14 = v9;
  unint64_t v15 = v8;
  sub_1C254F5A0();

  unint64_t v10 = v15;
  *(void *)(v4 + 32) = v14;
  *(void *)(v4 + 40) = v10;
  unint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v14 = 0xD00000000000002BLL;
  unint64_t v15 = 0x80000001C2589350;
  sub_1C2373844();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  unint64_t v11 = v15;
  *(void *)(v4 + 48) = v14;
  *(void *)(v4 + 56) = v11;
  unint64_t v14 = v4;
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
  sub_1C226BF44();
  uint64_t v12 = sub_1C254F390();
  swift_bridgeObjectRelease();
  return v12;
}

ValueMetadata *type metadata accessor for ClinicalSharingFeedItemIdentifierFactory()
{
  return &type metadata for ClinicalSharingFeedItemIdentifierFactory;
}

uint64_t static AccountIconViewError.== infix(_:_:)()
{
  return 1;
}

uint64_t AccountIconViewError.hash(into:)()
{
  return sub_1C25509D0();
}

uint64_t AccountIconViewError.hashValue.getter()
{
  return sub_1C2550A10();
}

uint64_t static AccountIconViewData.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1C254CB10() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for AccountIconViewData(0) + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  id v7 = (void *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1]) {
    return 1;
  }
  return sub_1C2550870();
}

uint64_t type metadata accessor for AccountIconViewData(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E44F0);
}

uint64_t sub_1C24C0E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_1C254CB10() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  unint64_t v9 = (void *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1]) {
    return 1;
  }
  return sub_1C2550870();
}

__n128 sub_1C24C0EA0@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v3 = (__n128 *)(v1 + qword_1EA2E44B8);
  swift_beginAccess();
  unint64_t v4 = v3[1].n128_u64[0];
  unsigned __int8 v5 = v3[1].n128_u8[8];
  __n128 result = *v3;
  *a1 = *v3;
  a1[1].n128_u64[0] = v4;
  a1[1].n128_u8[8] = v5;
  return result;
}

__n128 sub_1C24C0F00(__n128 *a1)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unsigned __int8 v3 = a1[1].n128_u8[8];
  unint64_t v4 = (__n128 *)(v1 + qword_1EA2E44B8);
  swift_beginAccess();
  __n128 result = v6;
  *unint64_t v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u8[8] = v3;
  return result;
}

uint64_t (*sub_1C24C0F6C())()
{
  return j__swift_endAccess;
}

BOOL sub_1C24C0FC8()
{
  id v1 = objc_msgSend(*(id *)(v0 + qword_1EA2E44C0), sel_image);
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

id sub_1C24C1018(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AccountIconViewData(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v63 = (uint64_t)&v63 - v9;
  sub_1C24C184C();
  uint64_t v69 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v69 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  id v71 = (char *)&v63 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v68 = (uint64_t)&v63 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v67 = (uint64_t)&v63 - v18;
  MEMORY[0x1F4188790](v17);
  id v20 = (char *)&v63 - v19;
  sub_1C24C18A4();
  uint64_t v22 = v21;
  MEMORY[0x1F4188790](v21);
  id v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(self, sel_isMainThread);
  if (result)
  {
    uint64_t v66 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v64 = v8;
    uint64_t v72 = v2;
    uint64_t v26 = v2 + qword_1EA2E44D0;
    swift_beginAccess();
    uint64_t v27 = (uint64_t)&v24[*(int *)(v22 + 48)];
    sub_1C24C399C(v26, (uint64_t)v24, (uint64_t (*)(void))sub_1C24C184C);
    uint64_t v70 = a1;
    sub_1C24C399C(a1, v27, (uint64_t (*)(void))sub_1C24C184C);
    id v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v29 = v5 + 48;
    id v28 = v30;
    if (v30((uint64_t)v24, 1, v4) == 1)
    {
      if (v28(v27, 1, v4) == 1)
      {
LABEL_4:
        id v31 = (uint64_t (*)(void))sub_1C24C184C;
        uint64_t v32 = (uint64_t)v24;
        return (id)sub_1C24C207C(v32, v31);
      }
      id v33 = sub_1C24C18A4;
      uint64_t v65 = v29;
      goto LABEL_14;
    }
    sub_1C24C399C((uint64_t)v24, (uint64_t)v20, (uint64_t (*)(void))sub_1C24C184C);
    if (v28(v27, 1, v4) == 1)
    {
      id v33 = sub_1C24C18A4;
      uint64_t v65 = v29;
LABEL_13:
      sub_1C24C207C((uint64_t)v20, type metadata accessor for AccountIconViewData);
LABEL_14:
      uint64_t v39 = v70;
      uint64_t v40 = (uint64_t)v71;
      sub_1C24C207C((uint64_t)v24, (uint64_t (*)(void))v33);
      goto LABEL_15;
    }
    uint64_t v34 = v63;
    sub_1C24C20DC(v27, v63, type metadata accessor for AccountIconViewData);
    if ((sub_1C254CB10() & 1) == 0)
    {
      uint64_t v65 = v29;
      sub_1C24C207C(v34, type metadata accessor for AccountIconViewData);
      id v33 = sub_1C24C184C;
      goto LABEL_13;
    }
    uint64_t v35 = *(int *)(v4 + 20);
    uint64_t v36 = *(void *)&v20[v35];
    uint64_t v37 = *(void *)&v20[v35 + 8];
    int v38 = (void *)(v34 + v35);
    if (v36 == *v38 && v37 == v38[1])
    {
      sub_1C24C207C(v34, type metadata accessor for AccountIconViewData);
      sub_1C24C207C((uint64_t)v20, type metadata accessor for AccountIconViewData);
      goto LABEL_4;
    }
    uint64_t v65 = v29;
    char v62 = sub_1C2550870();
    sub_1C24C207C(v34, type metadata accessor for AccountIconViewData);
    sub_1C24C207C((uint64_t)v20, type metadata accessor for AccountIconViewData);
    id result = (id)sub_1C24C207C((uint64_t)v24, (uint64_t (*)(void))sub_1C24C184C);
    uint64_t v39 = v70;
    uint64_t v40 = (uint64_t)v71;
    if ((v62 & 1) == 0)
    {
LABEL_15:
      uint64_t v41 = v67;
      sub_1C24C399C(v39, v67, (uint64_t (*)(void))sub_1C24C184C);
      swift_beginAccess();
      sub_1C24C1908(v41, v26);
      swift_endAccess();
      uint64_t v42 = v39;
      uint64_t v43 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v44 = v4;
      uint64_t v45 = v68;
      sub_1C24C399C(v42, v68, (uint64_t (*)(void))sub_1C24C184C);
      sub_1C24C399C(v45, v40, (uint64_t (*)(void))sub_1C24C184C);
      unint64_t v46 = (*(unsigned __int8 *)(v69 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = v43;
      sub_1C24C20DC(v45, v47 + v46, (uint64_t (*)(void))sub_1C24C184C);
      uint64_t v48 = v66;
      sub_1C24C399C(v26, v66, (uint64_t (*)(void))sub_1C24C184C);
      if (v28(v48, 1, v44) == 1)
      {
        swift_retain();
        sub_1C24C207C(v48, (uint64_t (*)(void))sub_1C24C184C);
        long long v77 = 0u;
        long long v78 = 0u;
        long long v76 = 0u;
        sub_1C24C19A4((uint64_t *)&v76, v43, v40);
        swift_release();
        swift_release();
        uint64_t v32 = v40;
        id v31 = (uint64_t (*)(void))sub_1C24C184C;
      }
      else
      {
        uint64_t v49 = (uint64_t)v64;
        sub_1C24C20DC(v48, (uint64_t)v64, type metadata accessor for AccountIconViewData);
        uint64_t v50 = qword_1EA2E44D8;
        uint64_t v51 = v72;
        unint64_t v52 = (uint64_t *)(v49 + *(int *)(v44 + 20));
        uint64_t v53 = *v52;
        uint64_t v54 = v52[1];
        uint64_t v55 = (long long *)(v72 + qword_1EA2E44B8);
        swift_beginAccess();
        uint64_t v56 = *((void *)v55 + 2);
        char v57 = *((unsigned char *)v55 + 24);
        long long v73 = *v55;
        uint64_t v74 = v56;
        char v75 = v57;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C24039AC(v53, v54, (uint64_t)&v73, (uint64_t)&v76);
        swift_release();
        swift_bridgeObjectRelease();
        *(void *)&long long v76 = v76;
        *(void *)&long long v78 = v78;
        id v58 = *((id *)&v78 + 1);
        sub_1C24C19A4((uint64_t *)&v76, v43, v40);

        swift_release();
        sub_1C24C207C(v40, (uint64_t (*)(void))sub_1C24C184C);
        uint64_t v59 = *(void *)(v51 + v50);
        uint64_t v60 = *((void *)v55 + 2);
        char v61 = *((unsigned char *)v55 + 24);
        long long v76 = *v55;
        *(void *)&long long v77 = v60;
        BYTE8(v77) = v61;
        swift_retain();
        swift_retain();
        sub_1C2405834(v49, (uint64_t *)&v76, v59, sub_1C24C2008, v47);

        swift_release();
        swift_release_n();
        id v31 = type metadata accessor for AccountIconViewData;
        uint64_t v32 = v49;
      }
      return (id)sub_1C24C207C(v32, v31);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C24C184C()
{
  if (!qword_1EA2DF198)
  {
    type metadata accessor for AccountIconViewData(255);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF198);
    }
  }
}

void sub_1C24C18A4()
{
  if (!qword_1EA2E44C8)
  {
    sub_1C24C184C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E44C8);
    }
  }
}

uint64_t sub_1C24C1908(uint64_t a1, uint64_t a2)
{
  sub_1C24C184C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C24C196C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C24C19A4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v52 = a3;
  uint64_t v5 = type metadata accessor for AccountIconViewData(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24C18A4();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24C184C();
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v45 - v17;
  uint64_t v20 = *a1;
  uint64_t v19 = a1[1];
  uint64_t v50 = a1[2];
  uint64_t v51 = v19;
  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  uint64_t v23 = (void *)a1[5];
  uint64_t v48 = v22;
  uint64_t v49 = v21;
  swift_beginAccess();
  uint64_t v24 = MEMORY[0x1C875A200](a2 + 16);
  if (v24)
  {
    id v25 = (char *)v24;
    uint64_t v46 = v20;
    uint64_t v47 = v23;
    uint64_t v26 = v24 + qword_1EA2E44D0;
    swift_beginAccess();
    sub_1C24C399C(v26, (uint64_t)v18, (uint64_t (*)(void))sub_1C24C184C);
    uint64_t v27 = (uint64_t)&v12[*(int *)(v10 + 48)];
    sub_1C24C399C((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(void))sub_1C24C184C);
    sub_1C24C399C(v52, v27, (uint64_t (*)(void))sub_1C24C184C);
    id v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (v28((uint64_t)v12, 1, v5) == 1)
    {
      sub_1C24C207C((uint64_t)v18, (uint64_t (*)(void))sub_1C24C184C);
      if (v28(v27, 1, v5) == 1)
      {
LABEL_13:
        sub_1C24C207C((uint64_t)v12, (uint64_t (*)(void))sub_1C24C184C);
        uint64_t v35 = &v25[qword_1EA2E44E0];
        uint64_t v36 = *(void **)&v25[qword_1EA2E44E0 + 40];
        uint64_t v37 = v51;
        *(void *)uint64_t v35 = v46;
        *((void *)v35 + 1) = v37;
        uint64_t v38 = v49;
        *((void *)v35 + 2) = v50;
        *((void *)v35 + 3) = v38;
        uint64_t v39 = v47;
        *((void *)v35 + 4) = v48;
        *((void *)v35 + 5) = v39;
        id v40 = v39;

        if (!objc_msgSend(self, sel_isMainThread))
        {
          __break(1u);
          return;
        }
        uint64_t v41 = *(void **)&v25[qword_1EA2E44C0];
        id v42 = (id)*((void *)v35 + 5);
        if (v42)
        {
          if ((*v35 & 1) == 0)
          {
            uint64_t v43 = *((void *)v35 + 3);
            if (v35[32]) {
              uint64_t v43 = 0x4008000000000000;
            }
            id v42 = v42;
            char v44 = 0;
            goto LABEL_23;
          }
          id v42 = v42;
        }
        uint64_t v43 = 0;
        char v44 = 2;
LABEL_23:
        objc_msgSend(v41, sel_setImage_, v42);
        uint64_t v53 = v43;
        char v54 = v44;
        UIImageView.applyStyle(_:)((uint64_t)&v53);
        sub_1C2224240((id)v43, v44);

        return;
      }
    }
    else
    {
      sub_1C24C399C((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))sub_1C24C184C);
      if (v28(v27, 1, v5) != 1)
      {
        sub_1C24C20DC(v27, (uint64_t)v8, type metadata accessor for AccountIconViewData);
        if (sub_1C254CB10())
        {
          if ((uint64_t v31 = *(int *)(v5 + 20),
                uint64_t v32 = *(void *)&v16[v31],
                uint64_t v33 = *(void *)&v16[v31 + 8],
                uint64_t v34 = &v8[v31],
                v32 == *(void *)v34)
            && v33 == *((void *)v34 + 1)
            || (sub_1C2550870() & 1) != 0)
          {
            sub_1C24C207C((uint64_t)v8, type metadata accessor for AccountIconViewData);
            sub_1C24C207C((uint64_t)v18, (uint64_t (*)(void))sub_1C24C184C);
            sub_1C24C207C((uint64_t)v16, type metadata accessor for AccountIconViewData);
            goto LABEL_13;
          }
        }
        sub_1C24C207C((uint64_t)v8, type metadata accessor for AccountIconViewData);
        sub_1C24C207C((uint64_t)v18, (uint64_t (*)(void))sub_1C24C184C);
        sub_1C24C207C((uint64_t)v16, type metadata accessor for AccountIconViewData);
        uint64_t v30 = (uint64_t)v12;
        uint64_t v29 = sub_1C24C184C;
LABEL_20:
        sub_1C24C207C(v30, (uint64_t (*)(void))v29);

        return;
      }
      sub_1C24C207C((uint64_t)v18, (uint64_t (*)(void))sub_1C24C184C);
      sub_1C24C207C((uint64_t)v16, type metadata accessor for AccountIconViewData);
    }
    uint64_t v29 = sub_1C24C18A4;
    uint64_t v30 = (uint64_t)v12;
    goto LABEL_20;
  }
}

uint64_t sub_1C24C1ED4()
{
  sub_1C24C184C();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = type metadata accessor for AccountIconViewData(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v3, 1, v5))
  {
    uint64_t v6 = sub_1C254CB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

void sub_1C24C2008(uint64_t *a1)
{
  sub_1C24C184C();
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  sub_1C24C19A4(a1, v4, v5);
}

uint64_t sub_1C24C207C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C24C20DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C24C2144(uint64_t a1, void (*a2)(void *))
{
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v13 = *(void **)(a1 + 40);
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v36 = v6;
    uint64_t v37 = v5;
    v38[0] = v9;
    id v15 = v9;
    sub_1C2206F9C();
    swift_willThrowTypedImpl();
    sub_1C254E520();
    id v16 = v9;
    id v17 = v9;
    uint64_t v18 = sub_1C254E550();
    os_log_type_t v19 = sub_1C254FA20();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      os_log_t v35 = v18;
      uint64_t v21 = swift_slowAlloc();
      int v34 = v20;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v39 = v33;
      uint64_t v32 = v22;
      *(_DWORD *)uint64_t v22 = 136446210;
      v31[1] = v22 + 4;
      v38[0] = v9;
      id v23 = v9;
      sub_1C25508F0();
      id v24 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      v31[2] = MEMORY[0x1E4FBC840] + 8;
      uint64_t v25 = sub_1C254F510();
      v38[0] = sub_1C21AD354(v25, v26, &v39);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      sub_1C22CB1E0(v9, v10, v12, v11, v14, (uint64_t)v13, 1);
      sub_1C22CB1E0(v9, v10, v12, v11, v14, (uint64_t)v13, 1);
      os_log_t v27 = v35;
      id v28 = v32;
      _os_log_impl(&dword_1C21A1000, v35, (os_log_type_t)v34, "Error retrieving logo for account: %{public}s", v32, 0xCu);
      uint64_t v29 = v33;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v29, -1, -1);
      MEMORY[0x1C875A0B0](v28, -1, -1);

      sub_1C22CB1E0(v9, v10, v12, v11, v14, (uint64_t)v13, 1);
    }
    else
    {
      sub_1C22CB1E0(v9, v10, v12, v11, v14, (uint64_t)v13, 1);
      sub_1C22CB1E0(v9, v10, v12, v11, v14, (uint64_t)v13, 1);
    }
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
  }
  else
  {
    v38[0] = *(void *)a1 & 1;
    v38[1] = v10;
    void v38[2] = v12;
    v38[3] = v11;
    v38[4] = v14 & 1;
    v38[5] = v13;
    id v30 = v13;
    a2(v38);
    sub_1C22CB1E0(v9, v10, v12, v11, v14, (uint64_t)v13, 0);
  }
}

void sub_1C24C24D8()
{
  uint64_t v1 = *(void **)&v0[qword_1EA2E44C0];
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_addSubview_, v1);
  id v2 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v2);

  uint64_t v3 = self;
  sub_1C21ACA3C();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255DBA0;
  id v5 = objc_msgSend(v1, sel_leadingAnchor);
  id v6 = objc_msgSend(v0, sel_leadingAnchor);
  id v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

  *(void *)(v4 + 32) = v7;
  id v8 = objc_msgSend(v1, sel_trailingAnchor);
  id v9 = objc_msgSend(v0, sel_trailingAnchor);
  id v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(void *)(v4 + 40) = v10;
  id v11 = objc_msgSend(v1, sel_topAnchor);
  id v12 = objc_msgSend(v0, sel_topAnchor);
  id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(void *)(v4 + 48) = v13;
  id v14 = objc_msgSend(v1, sel_bottomAnchor);
  id v15 = objc_msgSend(v0, sel_bottomAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(void *)(v4 + 56) = v16;
  sub_1C254F730();
  sub_1C21F34D4();
  id v17 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v17);
}

void sub_1C24C2784()
{
  uint64_t v1 = v0 + qword_1EA2E44E0;
  if (!*(void *)(v0 + qword_1EA2E44E0 + 40) || (*(unsigned char *)v1 & 1) != 0)
  {
    uint64_t v2 = 0;
    char v3 = 2;
  }
  else
  {
    if (*(unsigned char *)(v1 + 32)) {
      uint64_t v2 = 0x4008000000000000;
    }
    else {
      uint64_t v2 = *(void *)(v1 + 24);
    }
    char v3 = 0;
  }
  uint64_t v4 = v2;
  char v5 = v3;
  UIImageView.applyStyle(_:)((uint64_t)&v4);
  sub_1C2224240((id)v2, v3);
}

void sub_1C24C2844(void *a1)
{
  uint64_t v2 = v1;
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for AccountIconView(0);
  objc_msgSendSuper2(&v14, sel_traitCollectionDidChange_, a1);
  if (a1)
  {
    objc_msgSend(a1, sel_displayScale);
    double v5 = v4;
  }
  else
  {
    double v5 = 0.0;
  }
  id v6 = objc_msgSend(v2, sel_traitCollection);
  objc_msgSend(v6, sel_displayScale);
  double v8 = v7;

  if (!a1 || v5 != v8)
  {
    id v9 = &v2[qword_1EA2E44E0];
    if (!*(void *)&v2[qword_1EA2E44E0 + 40] || (*v9 & 1) != 0)
    {
      uint64_t v10 = 0;
      char v11 = 2;
    }
    else
    {
      uint64_t v10 = *((void *)v9 + 3);
      char v11 = 0;
      if (v9[32]) {
        uint64_t v10 = 0x4008000000000000;
      }
    }
    uint64_t v12 = v10;
    char v13 = v11;
    UIImageView.applyStyle(_:)((uint64_t)&v12);
    sub_1C2224240((id)v10, v11);
  }
}

void sub_1C24C2970(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_1C24C2844(a3);
}

id AccountIconView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id AccountIconView.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[qword_1EA2E44B8];
  *((void *)v9 + 1) = 0;
  *((void *)v9 + 2) = 0;
  *(void *)id v9 = 1;
  unsigned char v9[24] = 1;
  uint64_t v10 = qword_1EA2E44C0;
  id v11 = objc_allocWithZone(MEMORY[0x1E4FB1838]);
  uint64_t v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_init);
  char v13 = &v12[qword_1EA2E44D0];
  uint64_t v14 = type metadata accessor for AccountIconViewData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  id v15 = &v12[qword_1EA2E44E0];
  *(_OWORD *)id v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((_OWORD *)v15 + 2) = 0u;
  uint64_t v16 = qword_1EA2E44D8;
  if (qword_1EBB6D898 != -1) {
    swift_once();
  }
  *(void *)&v12[v16] = qword_1EBB6EB60;
  swift_retain();

  v18.receiver = v12;
  v18.super_class = (Class)type metadata accessor for AccountIconView(0);
  return objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_1C24C2BB8(double a1, double a2, double a3, double a4)
{
  return AccountIconView.init(frame:)(a1, a2, a3, a4);
}

id AccountIconView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id AccountIconView.init(coder:)(void *a1)
{
  id v3 = &v1[qword_1EA2E44B8];
  *((void *)v3 + 1) = 0;
  *((void *)v3 + 2) = 0;
  *(void *)id v3 = 1;
  v3[24] = 1;
  uint64_t v4 = qword_1EA2E44C0;
  id v5 = objc_allocWithZone(MEMORY[0x1E4FB1838]);
  id v6 = v1;
  *(void *)&v1[v4] = objc_msgSend(v5, sel_init);
  double v7 = &v6[qword_1EA2E44D0];
  uint64_t v8 = type metadata accessor for AccountIconViewData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  id v9 = &v6[qword_1EA2E44E0];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  uint64_t v10 = qword_1EA2E44D8;
  if (qword_1EBB6D898 != -1) {
    swift_once();
  }
  *(void *)&v6[v10] = qword_1EBB6EB60;
  swift_retain();

  v13.receiver = v6;
  v13.super_class = (Class)type metadata accessor for AccountIconView(0);
  id v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

id sub_1C24C2D84(uint64_t a1, uint64_t a2, void *a3)
{
  return AccountIconView.init(coder:)(a3);
}

uint64_t sub_1C24C2DAC()
{
  sub_1C24C207C(v0 + qword_1EA2E44D0, (uint64_t (*)(void))sub_1C24C184C);
  return swift_release();
}

id AccountIconView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountIconView(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C24C2E5C(uint64_t a1)
{
  sub_1C24C207C(a1 + qword_1EA2E44D0, (uint64_t (*)(void))sub_1C24C184C);
  return swift_release();
}

uint64_t sub_1C24C2EE0(uint64_t a1)
{
  sub_1C24C184C();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24C399C(a1, (uint64_t)v4, type metadata accessor for AccountIconViewData);
  uint64_t v5 = type metadata accessor for AccountIconViewData(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  sub_1C24C1018((uint64_t)v4);
  return sub_1C24C207C((uint64_t)v4, (uint64_t (*)(void))sub_1C24C184C);
}

uint64_t type metadata accessor for AccountIconView(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E4500);
}

unint64_t sub_1C24C2FF8()
{
  unint64_t result = qword_1EA2E44E8;
  if (!qword_1EA2E44E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E44E8);
  }
  return result;
}

__n128 sub_1C24C304C@<Q0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = (__n128 *)(*a1 + qword_1EA2E44B8);
  swift_beginAccess();
  unint64_t v4 = v3[1].n128_u64[0];
  unsigned __int8 v5 = v3[1].n128_u8[8];
  __n128 result = *v3;
  *a2 = *v3;
  a2[1].n128_u64[0] = v4;
  a2[1].n128_u8[8] = v5;
  return result;
}

__n128 sub_1C24C30B0(__n128 *a1, void *a2)
{
  __n128 v6 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unsigned __int8 v3 = a1[1].n128_u8[8];
  uint64_t v4 = *a2 + qword_1EA2E44B8;
  swift_beginAccess();
  __n128 result = v6;
  *(__n128 *)uint64_t v4 = v6;
  *(void *)(v4 + 16) = v2;
  *(unsigned char *)(v4 + 24) = v3;
  return result;
}

unsigned char *storeEnumTagSinglePayload for AccountIconViewError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C24C31BCLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountIconViewError()
{
  return &type metadata for AccountIconViewError;
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountIconViewData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C254CB40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    id v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *id v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AccountIconViewData(uint64_t a1)
{
  uint64_t v2 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AccountIconViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountIconViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AccountIconViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for AccountIconViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountIconViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C24C3584);
}

uint64_t sub_1C24C3584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AccountIconViewData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C24C365C);
}

uint64_t sub_1C24C365C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C254CB40();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C24C371C()
{
  uint64_t result = sub_1C254CB40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C24C37B0()
{
  sub_1C24C184C();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t method lookup function for AccountIconView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountIconView);
}

uint64_t dispatch thunk of AccountIconView.preferredSize.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AccountIconView.preferredSize.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AccountIconView.preferredSize.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of AccountIconView.hasLogo.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AccountIconView.apply(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t sub_1C24C3994()
{
  return type metadata accessor for AccountIconView(0);
}

uint64_t sub_1C24C399C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void static HealthRecordsViewRouter.navigateBack(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E520();
  swift_bridgeObjectRetain_n();
  unint64_t v10 = sub_1C254E550();
  os_log_type_t v11 = sub_1C254FA40();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v28 = a1;
  uint64_t v29 = v3;
  if (v12)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v27 = v6;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v30 = v15;
    uint64_t aBlock = v3;
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_getMetatypeMetadata();
    uint64_t v16 = sub_1C254F4F0();
    uint64_t aBlock = sub_1C21AD354(v16, v17, &v30);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t aBlock = a1;
    uint64_t v32 = a2;
    swift_bridgeObjectRetain();
    sub_1C25508F0();
    id v18 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v19 = sub_1C254F4F0();
    uint64_t aBlock = sub_1C21AD354(v19, v20, &v30);
    sub_1C2550120();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v10, v11, "%s will redirect back to source app %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v15, -1, -1);
    MEMORY[0x1C875A0B0](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v27);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  id v21 = objc_msgSend(self, sel_defaultWorkspace);
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = v28;
    id v24 = (void *)sub_1C254F430();
    uint64_t v25 = (void *)swift_allocObject();
    void v25[2] = v23;
    v25[3] = a2;
    void v25[4] = v29;
    os_log_t v35 = sub_1C24C7154;
    uint64_t v36 = v25;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v32 = 1107296256;
    uint64_t v33 = sub_1C22AE944;
    int v34 = &block_descriptor_67;
    unint64_t v26 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_release();
    objc_msgSend(v22, sel_openApplicationWithBundleIdentifier_usingConfiguration_completionHandler_, v24, 0, v26);
    _Block_release(v26);
  }
  else
  {
    __break(1u);
  }
}

uint64_t static HealthRecordsViewRouter.navigateToHealthSummaryView()()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1C222399C;
  return sub_1C24C5E98(0xD000000000000018, 0x80000001C2585E50);
}

HealthRecordsUI::CategoryViewReplayableSections_optional __swiftcall CategoryViewReplayableSections.init(rawValue:)(Swift::Int rawValue)
{
  unsigned int v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4) {
    LOBYTE(v2) = 3;
  }
  *unint64_t v1 = v2;
  return (HealthRecordsUI::CategoryViewReplayableSections_optional)rawValue;
}

uint64_t CategoryViewReplayableSections.rawValue.getter()
{
  return *v0 + 1;
}

uint64_t sub_1C24C3E94()
{
  return sub_1C2550A10();
}

uint64_t sub_1C24C3EDC()
{
  return sub_1C25509D0();
}

uint64_t sub_1C24C3F0C()
{
  return sub_1C2550A10();
}

HealthRecordsUI::CategoryViewReplayableSections_optional sub_1C24C3F50(Swift::Int *a1)
{
  return CategoryViewReplayableSections.init(rawValue:)(*a1);
}

void sub_1C24C3F58(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

id SettingsViewController.replayWith(trace:)(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16) == 2) {
    return sub_1C22B0094();
  }
  else {
    return 0;
  }
}

id sub_1C24C3F84(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16) == 2) {
    return sub_1C22B0094();
  }
  else {
    return 0;
  }
}

unsigned char *RecordCategoryViewController.replayWith(trace:)(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16) != 3) {
    return 0;
  }
  v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_preferredSegment] = *(void *)a1;
  unsigned int v2 = v1;
  return v1;
}

unsigned char *sub_1C24C3FEC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16) != 3) {
    return 0;
  }
  v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_preferredSegment] = *(void *)a1;
  unsigned int v2 = v1;
  return v1;
}

id sub_1C24C4038()
{
  if (qword_1EBB6D858 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB6ED30;
  qword_1EA303D70 = type metadata accessor for ViewControllerFactory();
  unk_1EA303D78 = &protocol witness table for ViewControllerFactory;
  qword_1EA303D58 = (uint64_t)v1;
  return v1;
}

uint64_t static HealthRecordsViewRouter.showAllRecordsTimelineView(navigator:)(void *a1)
{
  uint64_t v25 = a1;
  uint64_t v1 = sub_1C254E560();
  uint64_t v23 = *(void *)(v1 - 8);
  uint64_t v24 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C254DEB0();
  uint64_t v26 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA2DD8D0 != -1) {
    swift_once();
  }
  uint64_t v22 = v3;
  sub_1C21F4424((uint64_t)&qword_1EA303D58, (uint64_t)v31);
  uint64_t v10 = v32;
  uint64_t v28 = v33;
  __swift_project_boxed_opaque_existential_1Tm(v31, v32);
  uint64_t v11 = swift_storeEnumTagMultiPayload();
  if (qword_1EBB6EF30 != -1) {
    uint64_t v11 = swift_once();
  }
  uint64_t v29 = *(void *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v11);
  *(&v22 - 2) = v12;
  sub_1C254CEE0();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
  sub_1C24C732C((unint64_t *)&qword_1EBB6F240, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();
  swift_release();
  uint64_t v13 = v30;
  uint64_t v14 = (void *)(*(uint64_t (**)(char *, void *, uint64_t))(*(void *)(v28 + 16) + 8))(v9, v30, v10);

  sub_1C2268C64((uint64_t)v9);
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    __swift_project_boxed_opaque_existential_1Tm(v25, v25[3]);
    *uint64_t v6 = 1;
    uint64_t v16 = v26;
    uint64_t v15 = v27;
    (*(void (**)(unsigned char *, void, uint64_t))(v26 + 104))(v6, *MEMORY[0x1E4F665F0], v27);
    sub_1C254D490();

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v16 + 8))(v6, v15);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    id v18 = v22;
    sub_1C254E520();
    uint64_t v19 = sub_1C254E550();
    os_log_type_t v20 = sub_1C254FA20();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v21 = 0;
      _os_log_impl(&dword_1C21A1000, v19, v20, "Unable to present all health records screen", v21, 2u);
      MEMORY[0x1C875A0B0](v21, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v18, v24);
  }
}

uint64_t static HealthRecordsViewRouter.showTimelineView(forCategory:preferredSegment:navigator:)(uint64_t a1, unsigned __int8 *a2, void *a3)
{
  id v42 = a3;
  uint64_t v34 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v34);
  uint64_t v33 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v37 = (uint64_t)&v33 - v7;
  uint64_t v8 = sub_1C254E560();
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C254DEB0();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v39 = *a2;
  if (qword_1EA2DD8D0 != -1) {
    swift_once();
  }
  uint64_t v43 = a1;
  uint64_t v38 = v10;
  sub_1C21F4424((uint64_t)&qword_1EA303D58, (uint64_t)v46);
  uint64_t v14 = v47;
  uint64_t v15 = v48;
  uint64_t v16 = (uint64_t)__swift_project_boxed_opaque_existential_1Tm(v46, v47);
  if (qword_1EBB6EF30 != -1) {
    uint64_t v16 = swift_once();
  }
  uint64_t v44 = *(void *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v16);
  *(&v33 - 2) = v17;
  sub_1C254CEE0();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
  sub_1C24C732C((unint64_t *)&qword_1EBB6F240, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();
  swift_release();
  id v18 = (void *)v45;
  uint64_t v19 = v43;
  os_log_type_t v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 16) + 8))(v43, v45, v14);

  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);
    type metadata accessor for RecordCategoryViewController();
    uint64_t v21 = swift_dynamicCastClass();
    if (v21) {
      *(unsigned char *)(v21 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_preferredSegment) = v39;
    }
    __swift_project_boxed_opaque_existential_1Tm(v42, v42[3]);
    *uint64_t v13 = 1;
    uint64_t v23 = v40;
    uint64_t v22 = v41;
    (*(void (**)(unsigned char *, void, uint64_t))(v40 + 104))(v13, *MEMORY[0x1E4F665F0], v41);
    sub_1C254D490();

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v23 + 8))(v13, v22);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v46);
    uint64_t v25 = v38;
    sub_1C254E520();
    uint64_t v26 = v37;
    sub_1C21A9698(v19, v37);
    uint64_t v27 = sub_1C254E550();
    os_log_type_t v28 = sub_1C254FA20();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v46[0] = v30;
      *(_DWORD *)uint64_t v29 = 136446210;
      sub_1C21A9698(v26, v33);
      uint64_t v31 = sub_1C254F510();
      uint64_t v45 = sub_1C21AD354(v31, v32, v46);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      sub_1C2268C64(v26);
      _os_log_impl(&dword_1C21A1000, v27, v28, "Unable to present Category room for kind: %{public}s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v30, -1, -1);
      MEMORY[0x1C875A0B0](v29, -1, -1);
    }
    else
    {
      sub_1C2268C64(v26);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v25, v36);
  }
}

uint64_t static HealthRecordsViewRouter.showUDCLabsView(navigator:)(void *a1)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_1C254E560();
  uint64_t v22 = *(void *)(v1 - 8);
  uint64_t v23 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1C254DEB0();
  uint64_t v4 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB6D858 != -1) {
    swift_once();
  }
  uint64_t v21 = v3;
  *uint64_t v9 = 2;
  uint64_t v10 = swift_storeEnumTagMultiPayload();
  if (qword_1EBB6EF30 != -1) {
    uint64_t v10 = swift_once();
  }
  uint64_t v26 = *(void *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v10);
  *(&v20 - 2) = v11;
  sub_1C254CEE0();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
  sub_1C24C732C((unint64_t *)&qword_1EBB6F240, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();
  swift_release();
  uint64_t v12 = v27;
  uint64_t v13 = sub_1C2450CF8((uint64_t)v9, v27);

  sub_1C2268C64((uint64_t)v9);
  if (v13)
  {
    __swift_project_boxed_opaque_existential_1Tm(v24, v24[3]);
    *uint64_t v6 = 1;
    uint64_t v14 = v25;
    (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F665F0], v25);
    sub_1C254D490();

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v14);
  }
  else
  {
    uint64_t v16 = v21;
    sub_1C254E520();
    uint64_t v17 = sub_1C254E550();
    os_log_type_t v18 = sub_1C254FA20();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_1C21A1000, v17, v18, "Unable to present UDC Labs category room", v19, 2u);
      MEMORY[0x1C875A0B0](v19, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v16, v23);
  }
}

void static HealthRecordsViewRouter.showOnboarding(with:profile:from:)(uint64_t a1@<X0>, void *a2@<X1>, Swift::tuple_viewController_UIViewController_shouldNotDismiss_Bool *a3@<X8>)
{
  UIViewController.hrui_presentationCapableViewController()(a3);
  uint64_t v6 = v5;
  id v7 = objc_msgSend(a2, sel_onboardingManager);
  sub_1C221DA08(a1);
  id v8 = (id)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_onboardWithActivity_presentingViewController_, v8, v6);
}

uint64_t static HealthRecordsViewRouter.makeAndPresentAccountDetailViewController(for:from:profile:sourceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[24] = a5;
  v6[25] = v5;
  v6[22] = a3;
  v6[23] = a4;
  v6[20] = a1;
  v6[21] = a2;
  uint64_t v7 = sub_1C254CB40();
  v6[26] = v7;
  v6[27] = *(void *)(v7 - 8);
  v6[28] = swift_task_alloc();
  uint64_t v8 = sub_1C254E560();
  v6[29] = v8;
  v6[30] = *(void *)(v8 - 8);
  v6[31] = swift_task_alloc();
  sub_1C254F820();
  v6[32] = sub_1C254F810();
  uint64_t v10 = sub_1C254F7D0();
  v6[33] = v10;
  v6[34] = v9;
  return MEMORY[0x1F4188298](sub_1C24C50C8, v10, v9);
}

uint64_t sub_1C24C50C8@<X0>(Swift::tuple_viewController_UIViewController_shouldNotDismiss_Bool *a1@<X8>)
{
  uint64_t v2 = (void *)v1[22];
  UIViewController.hrui_presentationCapableViewController()(a1);
  v1[35] = v3;
  id v4 = objc_msgSend(v2, sel_clinicalAccountStore);
  v1[36] = v4;
  uint64_t v5 = sub_1C254CB00();
  v1[37] = v5;
  v1[2] = v1;
  v1[7] = v1 + 15;
  v1[3] = sub_1C24C5210;
  uint64_t v6 = swift_continuation_init();
  v1[10] = MEMORY[0x1E4F143A8];
  v1[11] = 0x40000000;
  v1[12] = sub_1C223F118;
  v1[13] = &block_descriptor_4_0;
  v1[14] = v6;
  objc_msgSend(v4, sel_fetchAccountWithIdentifier_completion_, v5, v1 + 10);
  return MEMORY[0x1F41881E8](v1 + 2);
}

uint64_t sub_1C24C5210()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 304) = v2;
  uint64_t v3 = *(void *)(v1 + 272);
  uint64_t v4 = *(void *)(v1 + 264);
  if (v2) {
    uint64_t v5 = sub_1C24C54BC;
  }
  else {
    uint64_t v5 = sub_1C24C5340;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C24C5340()
{
  uint64_t v15 = v0;
  uint64_t v2 = (void *)v0[36];
  uint64_t v1 = (void *)v0[37];
  swift_release();
  uint64_t v3 = (void *)v0[15];

  if (qword_1EA2DD8D0 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)v0[35];
  uint64_t v6 = v0[23];
  uint64_t v5 = v0[24];
  uint64_t v7 = v0[22];
  uint64_t v8 = qword_1EA303D70;
  uint64_t v9 = unk_1EA303D78;
  __swift_project_boxed_opaque_existential_1Tm(qword_1EA303D58, qword_1EA303D70);
  char v14 = 0;
  uint64_t v10 = (void *)(*(uint64_t (**)(void *, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 8) + 32))(v3, v7, &v14, v6, v5, 1, v8);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v10);
  objc_msgSend(v4, sel_presentViewController_animated_completion_, v11, 1, 0);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

id sub_1C24C54BC()
{
  uint64_t v49 = v0;
  uint64_t v2 = v0 + 20;
  uint64_t v1 = v0[20];
  uint64_t v4 = (void *)v0[37];
  uint64_t v3 = (void *)v0[38];
  uint64_t v5 = (void *)v2[16];
  uint64_t v7 = v2[7];
  uint64_t v6 = v2[8];
  uint64_t v8 = v2[6];
  swift_release();
  swift_willThrow();

  sub_1C254E510();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v1, v8);
  id v9 = v3;
  id v10 = v3;
  id v11 = sub_1C254E550();
  os_log_type_t v12 = sub_1C254FA20();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v43 = v46[30];
    uint64_t v13 = v46[28];
    uint64_t v44 = v46[29];
    uint64_t v45 = v46[31];
    uint64_t v14 = v46[26];
    uint64_t v38 = v46[27];
    id v39 = (id)v46[38];
    uint64_t v15 = v46[25];
    log = v11;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v47 = v42;
    *(_DWORD *)uint64_t v16 = 136315650;
    v46[16] = v15;
    swift_getMetatypeMetadata();
    uint64_t v17 = sub_1C254F4F0();
    v46[17] = sub_1C21AD354(v17, v18, &v47);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    sub_1C24C732C((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v19 = sub_1C2550810();
    v46[18] = sub_1C21AD354(v19, v20, &v47);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v13, v14);
    *(_WORD *)(v16 + 22) = 2112;
    id v21 = v39;
    uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
    v46[19] = v22;
    sub_1C2550120();
    void *v40 = v22;

    _os_log_impl(&dword_1C21A1000, log, v12, "%s failed to fetch account with ID %s: %@", (uint8_t *)v16, 0x20u);
    sub_1C23C5780();
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v40, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v42, -1, -1);
    MEMORY[0x1C875A0B0](v16, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v45, v44);
  }
  else
  {
    uint64_t v23 = (void *)v46[38];
    uint64_t v24 = v46[30];
    uint64_t v25 = v46[31];
    uint64_t v26 = v46[29];
    (*(void (**)(void, void))(v46[27] + 8))(v46[28], v46[26]);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
  }
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    os_log_type_t v28 = result;
    unsigned int v29 = objc_msgSend(result, sel_isAppleInternalInstall);

    uint64_t v30 = (void *)v46[38];
    uint64_t v31 = (void *)v46[35];
    if (v29)
    {
      unint64_t v32 = self;
      uint64_t v33 = (void *)sub_1C254F430();
      uint64_t v47 = 0;
      unint64_t v48 = 0xE000000000000000;
      sub_1C25503A0();
      swift_bridgeObjectRelease();
      uint64_t v47 = 0xD000000000000017;
      unint64_t v48 = 0x80000001C25893D0;
      sub_1C24C732C((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
      sub_1C2550810();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      uint64_t v34 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      uint64_t v35 = (void *)sub_1C254C810();
      id v36 = objc_msgSend(v32, sel_basicAlertControllerWithTitle_message_internalError_, v33, v34, v35);

      objc_msgSend(v31, sel_presentViewController_animated_completion_, v36, 1, 0);
    }
    else
    {
    }
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = (uint64_t (*)(void))v46[1];
    return (id)v37();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void static HealthRecordsViewRouter.showAPIAuthorizationSettingsView(forBundleIdentifier:from:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a1;
  if (qword_1EBB6EF30 != -1) {
    a1 = swift_once();
  }
  void aBlock[6] = *(id *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](a1);
  sub_1C254CEE0();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
  sub_1C24C732C((unint64_t *)&qword_1EBB6F240, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();
  swift_release();
  id v6 = aBlock[0];
  id v7 = objc_msgSend(aBlock[0], sel_clinicalAccountStore);
  uint64_t v8 = swift_allocObject();
  *(id *)(v8 + 16) = aBlock[0];
  *(void *)(v8 + 24) = v5;
  *(void *)(v8 + 32) = a2;
  *(void *)(v8 + 40) = v12;
  *(void *)(v8 + 48) = a3;
  aBlock[4] = sub_1C24C73BC;
  aBlock[5] = (id)v8;
  aBlock[0] = (id)MEMORY[0x1E4F143A8];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1C24C5E38;
  aBlock[3] = &block_descriptor_11_2;
  id v9 = _Block_copy(aBlock);
  id v10 = v6;
  swift_bridgeObjectRetain();
  id v11 = a3;
  swift_release();
  objc_msgSend(v7, sel_shouldShowHealthRecordsSectionWithCompletion_, v9);
  _Block_release(v9);
}

void sub_1C24C5C8C(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  if (a1)
  {
    id v11 = objc_allocWithZone((Class)type metadata accessor for SettingsViewController());
    id v12 = a3;
    id v13 = sub_1C22B3558(v12);

    sub_1C24C7774();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C255CD90;
    *(void *)(v14 + 32) = a4;
    *(void *)(v14 + 40) = a5;
    *(unsigned char *)(v14 + 48) = 2;
    id v15 = objc_allocWithZone(MEMORY[0x1E4F67B78]);
    swift_bridgeObjectRetain();
    id v16 = objc_msgSend(v15, sel_initWithRootViewController_, v13);
    uint64_t v17 = (void *)swift_allocObject();
    void v17[2] = v14;
    v17[3] = v13;
    v17[4] = &protocol witness table for SettingsViewController;
    v20[4] = sub_1C24C780C;
    v20[5] = v17;
    v20[0] = MEMORY[0x1E4F143A8];
    v20[1] = 1107296256;
    void v20[2] = sub_1C224E544;
    v20[3] = &block_descriptor_25_0;
    unint64_t v18 = _Block_copy(v20);
    swift_bridgeObjectRetain();
    id v19 = v13;
    swift_release();
    objc_msgSend(a7, sel_presentViewController_animated_completion_, v16, 1, v18);
    _Block_release(v18);

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C24C5E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

uint64_t sub_1C24C5E98(uint64_t a1, uint64_t a2)
{
  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  sub_1C24C7818(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  v3[24] = swift_task_alloc();
  uint64_t v4 = sub_1C254C900();
  v3[25] = v4;
  v3[26] = *(void *)(v4 - 8);
  v3[27] = swift_task_alloc();
  uint64_t v5 = sub_1C254E560();
  v3[28] = v5;
  v3[29] = *(void *)(v5 - 8);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C24C6010, 0, 0);
}

uint64_t sub_1C24C6010()
{
  uint64_t v52 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 16;
  sub_1C254E520();
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_1C254E550();
  os_log_type_t v4 = sub_1C254FA40();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v47 = v0[28];
    uint64_t v49 = v0[31];
    unint64_t v5 = v0[22];
    uint64_t v44 = v0[21];
    uint64_t v45 = v0[29];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v50 = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v8 = sub_1C2550AA0();
    v0[19] = sub_1C21AD354(v8, v9, &v50);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[20] = sub_1C21AD354(v44, v5, &v50);
    sub_1C2550120();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C21A1000, v3, v4, "%s attempting to navigate user to %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v7, -1, -1);
    uint64_t v10 = v6;
    uint64_t v2 = v0 + 16;
    MEMORY[0x1C875A0B0](v10, -1, -1);

    id v11 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    v11(v49, v47);
  }
  else
  {
    uint64_t v12 = v0[31];
    uint64_t v13 = v1[28];
    uint64_t v14 = v1[29];
    swift_bridgeObjectRelease_n();

    id v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  v1[32] = v11;
  uint64_t v16 = v1[25];
  uint64_t v15 = v1[26];
  uint64_t v17 = v1[24];
  sub_1C254C8F0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v17, 1, v16) == 1)
  {
    sub_1C23FAA9C(v1[24]);
    unint64_t v18 = self;
    uint64_t v50 = 0;
    unint64_t v51 = 0xE000000000000000;
    sub_1C25503A0();
    swift_bridgeObjectRelease();
    uint64_t v50 = 0xD00000000000001BLL;
    unint64_t v51 = 0x80000001C2589430;
    sub_1C254F5A0();
    sub_1C254F5A0();
    id v19 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(v18, sel_hk_error_description_, 3, v19);

    swift_willThrow();
    sub_1C254E520();
    swift_bridgeObjectRetain();
    id v21 = v20;
    swift_bridgeObjectRetain();
    id v22 = v20;
    uint64_t v23 = sub_1C254E550();
    os_log_type_t v24 = sub_1C254FA20();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = (void (*)(uint64_t, uint64_t))v1[32];
    uint64_t v27 = v1[30];
    uint64_t v28 = v1[28];
    if (v25)
    {
      unint64_t v48 = (void (*)(uint64_t, uint64_t))v1[32];
      unint64_t v29 = v1[22];
      uint64_t v42 = v1[21];
      uint64_t v46 = v1[28];
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v50 = v43;
      *(_DWORD *)uint64_t v30 = 136315650;
      uint64_t v32 = sub_1C2550AA0();
      v1[17] = sub_1C21AD354(v32, v33, &v50);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      v1[18] = sub_1C21AD354(v42, v29, &v50);
      sub_1C2550120();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 22) = 2112;
      id v34 = v20;
      uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
      v1[15] = v35;
      sub_1C2550120();
      *uint64_t v31 = v35;

      _os_log_impl(&dword_1C21A1000, v23, v24, "[%s] error creating URL from %s: %@", (uint8_t *)v30, 0x20u);
      sub_1C23C5780();
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v31, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v43, -1, -1);
      MEMORY[0x1C875A0B0](v30, -1, -1);

      v48(v27, v46);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v26(v27, v28);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v40 = (uint64_t (*)(void))v1[1];
    return v40();
  }
  else
  {
    (*(void (**)(void, void, void))(v1[26] + 32))(v1[27], v1[24], v1[25]);
    id v36 = objc_msgSend(self, sel_defaultWorkspace);
    v1[33] = v36;
    if (v36)
    {
      uint64_t v37 = v36;
      uint64_t v38 = sub_1C254C870();
      v1[34] = v38;
      v1[2] = v1;
      v1[7] = v2;
      v1[3] = sub_1C24C673C;
      uint64_t v39 = swift_continuation_init();
      v1[10] = MEMORY[0x1E4F143A8];
      v1[11] = 0x40000000;
      v1[12] = sub_1C24C6C6C;
      v1[13] = &block_descriptor_26;
      v1[14] = v39;
      objc_msgSend(v37, sel_openURL_configuration_completionHandler_, v38, 0, v1 + 10);
      id v36 = v1 + 2;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x1F41881E8](v36);
  }
}

uint64_t sub_1C24C673C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 280) = v1;
  if (v1) {
    uint64_t v2 = sub_1C24C6904;
  }
  else {
    uint64_t v2 = sub_1C24C684C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C24C684C()
{
  uint64_t v2 = (void *)v0[33];
  uint64_t v1 = (void *)v0[34];
  (*(void (**)(void, void))(v0[26] + 8))(v0[27], v0[25]);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C24C6904()
{
  unint64_t v29 = v0;
  uint64_t v1 = (void *)v0[34];
  uint64_t v2 = (void *)v0[33];
  uint64_t v4 = v0[26];
  uint64_t v3 = v0[27];
  uint64_t v5 = v0[25];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);

  uint64_t v6 = (void *)v0[35];
  sub_1C254E520();
  swift_bridgeObjectRetain();
  id v7 = v6;
  swift_bridgeObjectRetain();
  id v8 = v6;
  unint64_t v9 = sub_1C254E550();
  os_log_type_t v10 = sub_1C254FA20();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v26 = v0[30];
    uint64_t v27 = (void (*)(uint64_t, uint64_t))v0[32];
    uint64_t v25 = v0[28];
    unint64_t v11 = v0[22];
    uint64_t v23 = v0[21];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v28[0] = v24;
    *(_DWORD *)uint64_t v12 = 136315650;
    uint64_t v14 = sub_1C2550AA0();
    v0[17] = sub_1C21AD354(v14, v15, v28);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[18] = sub_1C21AD354(v23, v11, v28);
    sub_1C2550120();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 22) = 2112;
    id v16 = v6;
    uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
    v0[15] = v17;
    sub_1C2550120();
    *uint64_t v13 = v17;

    _os_log_impl(&dword_1C21A1000, v9, v10, "[%s] error creating URL from %s: %@", (uint8_t *)v12, 0x20u);
    sub_1C23C5780();
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v13, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v24, -1, -1);
    MEMORY[0x1C875A0B0](v12, -1, -1);

    v27(v26, v25);
  }
  else
  {
    unint64_t v18 = (void (*)(uint64_t, uint64_t))v0[32];
    uint64_t v19 = v0[30];
    uint64_t v20 = v0[28];

    swift_bridgeObjectRelease_n();
    v18(v19, v20);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1C24C6C6C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C2206F9C();
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    if (a2) {
      uint64_t v8 = sub_1C254F2D0();
    }
    else {
      uint64_t v8 = 0;
    }
    uint64_t v10 = v8;
    sub_1C24C786C((uint64_t)&v10, *(void *)(*(void *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

void sub_1C24C6D58(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v34[1] = *MEMORY[0x1E4F143B8];
  uint64_t v10 = sub_1C254E560();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    sub_1C254E520();
    swift_bridgeObjectRetain();
    id v14 = a2;
    swift_bridgeObjectRetain();
    id v15 = a2;
    id v16 = sub_1C254E550();
    int v17 = sub_1C254FA20();
    if (os_log_type_enabled(v16, (os_log_type_t)v17))
    {
      HIDWORD(v28) = v17;
      uint64_t v31 = v16;
      uint64_t v18 = swift_slowAlloc();
      unint64_t v29 = (void *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v34[0] = v30;
      *(_DWORD *)uint64_t v18 = 136315650;
      uint64_t v32 = a5;
      swift_getMetatypeMetadata();
      uint64_t v19 = sub_1C254F4F0();
      uint64_t v32 = sub_1C21AD354(v19, v20, v34);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v32 = a3;
      uint64_t v33 = a4;
      swift_bridgeObjectRetain();
      sub_1C25508F0();
      id v21 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v22 = sub_1C254F4F0();
      uint64_t v32 = sub_1C21AD354(v22, v23, v34);
      sub_1C2550120();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2112;
      if (a2)
      {
        id v24 = a2;
        uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v32 = v25;
        sub_1C2550120();
      }
      else
      {
        uint64_t v32 = 0;
        sub_1C2550120();
        uint64_t v25 = 0;
      }
      id v16 = v31;
      uint64_t v26 = v29;
      void *v29 = v25;

      _os_log_impl(&dword_1C21A1000, v16, BYTE4(v28), "%s failed to open application with bundle ID %s: %@", (uint8_t *)v18, 0x20u);
      sub_1C23C5780();
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v26, -1, -1);
      uint64_t v27 = v30;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v27, -1, -1);
      MEMORY[0x1C875A0B0](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_1C24C711C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C24C7154(char a1, void *a2)
{
  sub_1C24C6D58(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t block_destroy_helper_63()
{
  return swift_release();
}

void sub_1C24C7168(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return;
  }
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v18 = a1 + 32;
  uint64_t v6 = *(void *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 48);
  id v20 = a2;
  id v8 = a2;
  swift_bridgeObjectRetain();
  uint64_t v9 = v3 + 1;
  uint64_t v10 = 1;
LABEL_3:
  uint64_t v19 = v10;
  uint64_t ObjectType = swift_getObjectType();
  v21[0] = v5;
  v21[1] = v6;
  char v22 = v7;
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a3 + 8);
  id v13 = v20;
  sub_1C24C7540(v5, v6, v7);
  id v14 = (void *)v12(v21, ObjectType, a3);

  sub_1C24C7568(v5, v6, v7);
  if (!v14) {
    goto LABEL_12;
  }
  swift_getObjectType();
  uint64_t v15 = swift_conformsToProtocol2();
  if (v15) {
    a3 = v15;
  }
  else {
    a3 = 0;
  }
  if (v15) {
    id v16 = v14;
  }
  else {
    id v16 = 0;
  }
  if (!v16)
  {

LABEL_12:
    id v16 = 0;
    a3 = 0;
  }
  uint64_t v10 = v19;
  id v20 = v16;
  while (v9 != ++v10)
  {
    if (v16)
    {
      uint64_t v17 = v18 + 24 * v19;
      char v7 = *(unsigned char *)(v17 + 16);
      uint64_t v5 = *(void *)v17;
      uint64_t v6 = *(void *)(v17 + 8);
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
}

uint64_t HealthRecordsViewRouter.deinit()
{
  return v0;
}

uint64_t HealthRecordsViewRouter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C24C732C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C24C7374()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C24C73BC(char a1, uint64_t a2)
{
  sub_1C24C5C8C(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48));
}

unint64_t sub_1C24C73D0()
{
  unint64_t result = qword_1EA2E4528;
  if (!qword_1EA2E4528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4528);
  }
  return result;
}

uint64_t dispatch thunk of ReplayableViewController.replayWith(trace:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

unsigned char *storeEnumTagSinglePayload for CategoryViewReplayableSections(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C24C7504);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CategoryViewReplayableSections()
{
  return &type metadata for CategoryViewReplayableSections;
}

uint64_t sub_1C24C7540(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for ReplayType(uint64_t a1)
{
  return sub_1C24C7568(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1C24C7568(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C24C7590(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1C24C7598(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ReplayType()
{
  return &type metadata for ReplayType;
}

uint64_t _s15HealthRecordsUI10ReplayTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C24C7540(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s15HealthRecordsUI10ReplayTypeOwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C24C7540(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C24C7568(v6, v7, v8);
  return a1;
}

uint64_t _s15HealthRecordsUI10ReplayTypeOwta_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C24C7568(v4, v5, v6);
  return a1;
}

uint64_t _s15HealthRecordsUI10ReplayTypeOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s15HealthRecordsUI10ReplayTypeOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReplayTrace()
{
  return &type metadata for ReplayTrace;
}

uint64_t type metadata accessor for HealthRecordsViewRouter()
{
  return self;
}

uint64_t method lookup function for HealthRecordsViewRouter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthRecordsViewRouter);
}

void sub_1C24C7774()
{
  if (!qword_1EA2E4530)
  {
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4530);
    }
  }
}

uint64_t sub_1C24C77CC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C24C780C()
{
  sub_1C24C7168(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

void sub_1C24C7818(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C24C786C(uint64_t a1, uint64_t a2)
{
  sub_1C24C7818(0, &qword_1EA2E4538, (void (*)(uint64_t))sub_1C24C78EC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C24C78EC()
{
  if (!qword_1EA2DE918)
  {
    unint64_t v0 = sub_1C254F340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE918);
    }
  }
}

id CGFloat.scaled(for:)(void *a1)
{
  return objc_msgSend(a1, sel__scaledValueForValue_);
}

id sub_1C24C797C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v3 = v0;
  id v4 = objc_msgSend(v1, sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v5 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v3, sel_setFont_, v5);

  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6FA60);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255D0E0;
  *(void *)(v6 + 32) = sub_1C254F470();
  *(void *)(v6 + 40) = v7;
  strcpy((char *)(v6 + 48), "LabEducation");
  *(unsigned char *)(v6 + 61) = 0;
  *(_WORD *)(v6 + 62) = -5120;
  *(void *)(v6 + 64) = 0x746E65746E6F43;
  *(void *)(v6 + 72) = 0xE700000000000000;
  id v8 = v3;
  uint64_t v9 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v10 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v8, sel_setAccessibilityIdentifier_, v10);
  return v8;
}

id sub_1C24C7B98()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v3 = v0;
  id v4 = objc_msgSend(v1, sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  id v5 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v3, sel_setFont_, v5);

  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6FA60);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255D0E0;
  *(void *)(v6 + 32) = sub_1C254F470();
  *(void *)(v6 + 40) = v7;
  strcpy((char *)(v6 + 48), "LabEducation");
  *(unsigned char *)(v6 + 61) = 0;
  *(_WORD *)(v6 + 62) = -5120;
  *(void *)(v6 + 64) = 0x7475626972747441;
  *(void *)(v6 + 72) = 0xEB000000006E6F69;
  id v8 = v3;
  uint64_t v9 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v10 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v8, sel_setAccessibilityIdentifier_, v10);
  return v8;
}

id sub_1C24C7DBC(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_arrangedView;
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_init);
  uint64_t v12 = OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_educationLabel;
  *(void *)&v11[v12] = sub_1C24C797C();
  uint64_t v13 = OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_attributionLabel;
  *(void *)&v11[v13] = sub_1C24C7B98();
  id v14 = &v11[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_item];
  *((void *)v14 + 4) = 0;
  *(_OWORD *)id v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for EducationCell();
  id v15 = objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C24C8028();

  return v15;
}

id sub_1C24C7ED8(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_arrangedView;
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  id v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_educationLabel;
  *(void *)&v5[v6] = sub_1C24C797C();
  uint64_t v7 = OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_attributionLabel;
  *(void *)&v5[v7] = sub_1C24C7B98();
  id v8 = &v5[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_item];
  *((void *)v8 + 4) = 0;
  *(_OWORD *)id v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for EducationCell();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

void sub_1C24C8028()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254D7E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v6);

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v1, sel_setBackgroundView_, v7);

  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v1, sel_setSelectedBackgroundView_, v8);

  id v9 = objc_msgSend(v1, sel_selectedBackgroundView);
  if (v9)
  {
    id v10 = v9;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
    objc_super v11 = (void *)sub_1C254FEE0();
    objc_msgSend(v10, sel_setBackgroundColor_, v11);
  }
  objc_msgSend(v1, sel_setUserInteractionEnabled_, 0);
  id v12 = objc_msgSend(v1, sel_contentView);
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_arrangedView];
  objc_msgSend(v12, sel_addSubview_, v13);

  objc_msgSend(v13, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_educationLabel]);
  objc_msgSend(v13, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_attributionLabel]);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v35[0] = self;
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C255DBA0;
  id v15 = objc_msgSend(v13, sel_leadingAnchor);
  id v16 = objc_msgSend(v1, sel_contentView);
  id v17 = objc_msgSend(v16, sel_leadingAnchor);

  sub_1C254D7D0();
  sub_1C254D700();
  double v19 = v18;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v20 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v17, v19);

  *(void *)(v14 + 32) = v20;
  id v21 = objc_msgSend(v13, sel_topAnchor);
  id v22 = objc_msgSend(v1, sel_contentView);
  id v23 = objc_msgSend(v22, sel_topAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, 0.0);
  *(void *)(v14 + 40) = v24;
  id v25 = objc_msgSend(v1, sel_contentView);
  id v26 = objc_msgSend(v25, sel_layoutMarginsGuide);

  id v27 = objc_msgSend(v26, sel_trailingAnchor);
  id v28 = objc_msgSend(v13, sel_trailingAnchor);
  id v29 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v28);

  *(void *)(v14 + 48) = v29;
  id v30 = objc_msgSend(v1, sel_contentView);
  id v31 = objc_msgSend(v30, sel_bottomAnchor);

  id v32 = objc_msgSend(v13, sel_bottomAnchor);
  id v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v32, 0.0);

  *(void *)(v14 + 56) = v33;
  v35[1] = (id)v14;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  id v34 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v35[0], sel_activateConstraints_, v34);
}

uint64_t sub_1C24C8550()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)sub_1C254E560();
  uint64_t v3 = *(v2 - 1);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)v60 - v7;
  uint64_t v9 = (uint64_t)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_item];
  swift_beginAccess();
  sub_1C2227014(v9, (uint64_t)v64);
  if (!v64[3])
  {
    sub_1C2227100((uint64_t)v64);
    goto LABEL_7;
  }
  sub_1C22270A8();
  type metadata accessor for EducationItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    sub_1C254E510();
    uint64_t v40 = v1;
    uint64_t v41 = sub_1C254E550();
    os_log_type_t v42 = sub_1C254FA20();
    if (os_log_type_enabled(v41, v42))
    {
      char v62 = v2;
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = (void *)swift_slowAlloc();
      uint64_t v63 = v44;
      *(_DWORD *)uint64_t v43 = 136446210;
      sub_1C2227014(v9, (uint64_t)v64);
      sub_1C24C9130(0, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBB718]);
      uint64_t v45 = sub_1C254F510();
      v64[0] = sub_1C21AD354(v45, v46, (uint64_t *)&v63);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v41, v42, "Incorrect view model for EducationCell: %{public}s", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v44, -1, -1);
      MEMORY[0x1C875A0B0](v43, -1, -1);

      return (*(uint64_t (**)(char *, void *))(v3 + 8))(v5, v62);
    }

    unint64_t v48 = *(uint64_t (**)(char *, void *))(v3 + 8);
    uint64_t v49 = v5;
    return v48(v49, v2);
  }
  uint64_t v10 = (uint64_t)v63;
  uint64_t v11 = v63[5];
  uint64_t v12 = v63[6];
  __swift_project_boxed_opaque_existential_1Tm(v63 + 2, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  if (!v13)
  {
    sub_1C254E510();
    uint64_t v50 = v1;
    unint64_t v51 = sub_1C254E550();
    os_log_type_t v52 = sub_1C254FA20();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      char v54 = (void *)swift_slowAlloc();
      uint64_t v63 = v54;
      char v62 = v2;
      *(_DWORD *)uint64_t v53 = 136446210;
      char v61 = v53 + 4;
      sub_1C2227014(v9, (uint64_t)v64);
      sub_1C24C9130(0, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBB718]);
      uint64_t v55 = sub_1C254F510();
      v64[0] = sub_1C21AD354(v55, v56, (uint64_t *)&v63);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v51, v52, "No content for EducationItem: %{public}s", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v54, -1, -1);
      MEMORY[0x1C875A0B0](v53, -1, -1);
      swift_release();

      return (*(uint64_t (**)(char *, void *))(v3 + 8))(v8, v62);
    }

    swift_release();
    unint64_t v48 = *(uint64_t (**)(char *, void *))(v3 + 8);
    uint64_t v49 = v8;
    return v48(v49, v2);
  }
  sub_1C24C9130(0, &qword_1EA2E4560, (uint64_t (*)(uint64_t))sub_1C24C9194, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
  *(void *)(inited + 32) = 77;
  *(void *)(inited + 40) = 0xE100000000000000;
  uint64_t v15 = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
  char v62 = (void *)(v10 + 16);
  uint64_t v16 = v15;
  *(void *)(inited + 48) = sub_1C254FF50();
  *(void *)(inited + 56) = 65;
  *(void *)(inited + 64) = 0xE100000000000000;
  *(void *)(inited + 72) = sub_1C254FF50();
  unint64_t v17 = sub_1C22050C4(inited);
  unint64_t v18 = sub_1C22050E0(MEMORY[0x1E4FBC860]);
  double v19 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_educationLabel];
  id v20 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setText_, v20);

  id v21 = v19;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v64[0] = v18;
  sub_1C2365CF8((uint64_t)v21, 0x6F69746163756465, 0xEE006C6562614C6ELL, isUniquelyReferenced_nonNull_native);
  id v23 = (void *)v64[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v64[0] = 0xD000000000000016;
  v64[1] = 0x80000001C25894C0;
  id v24 = (void *)v10;
  id v25 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_arrangedView];
  id v26 = (void *)sub_1C254F430();
  char v61 = (uint8_t *)v17;
  v60[0] = v16;
  id v27 = (void *)sub_1C254F2C0();
  uint64_t v28 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
  swift_bridgeObjectRetain();
  v60[1] = v28;
  id v29 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();

  uint64_t v30 = v24[5];
  uint64_t v31 = v24[6];
  __swift_project_boxed_opaque_existential_1Tm(v62, v30);
  (*(void (**)(uint64_t, uint64_t))(v31 + 72))(v30, v31);
  if (v32)
  {
    id v33 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_attributionLabel];
    objc_msgSend(v33, sel_setHidden_, 0);
    id v34 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v33, sel_setText_, v34);

    id v35 = v33;
    char v36 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v63 = v23;
    sub_1C2365CF8((uint64_t)v35, 0xD000000000000010, 0x80000001C25894A0, v36);
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    uint64_t v37 = (void *)sub_1C254F430();
    char v62 = v24;
    uint64_t v38 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRetain();
    uint64_t v39 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_attributionLabel], sel_setHidden_, 1);
  }
  sub_1C254F5A0();
  char v57 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v58 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  uint64_t v59 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();

  return swift_release();
}

id sub_1C24C8F14()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EducationCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for EducationCell()
{
  return self;
}

uint64_t sub_1C24C8FD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C24C902C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI13EducationCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C24C8550();
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C24C909C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C24C90FC;
}

uint64_t sub_1C24C90FC(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C24C8550();
  }
  return result;
}

void sub_1C24C9130(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C24C9194()
{
  if (!qword_1EA2E4568)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB70030);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E4568);
    }
  }
}

uint64_t sub_1C24C920C(uint64_t *a1)
{
  uint64_t v2 = sub_1C254F1C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254F200();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = result;
    sub_1C22023A4();
    uint64_t v20 = sub_1C254FC70();
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = v10;
    v14[3] = v11;
    void v14[4] = v13;
    aBlock[4] = sub_1C24C9D48;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_68;
    uint64_t v15 = _Block_copy(aBlock);
    uint64_t v19 = v6;
    uint64_t v16 = v15;
    sub_1C24C9D5C(v10, v11);
    swift_retain();
    swift_release();
    sub_1C254F1E0();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1C24C99BC((unint64_t *)&qword_1EBB6FF10, 255, MEMORY[0x1E4FBCB00]);
    sub_1C24C9D6C(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C21FFDEC();
    sub_1C2550200();
    unint64_t v17 = (void *)v20;
    MEMORY[0x1C87581B0](0, v9, v5, v16);
    _Block_release(v16);
    swift_release();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v19);
  }
  return result;
}

uint64_t sub_1C24C9538(uint64_t a1, uint64_t a2)
{
  if (a2 == 1)
  {
    sub_1C24C9DD0(a1, 1);
    sub_1C24C9DD0(0, 1);
  }
  else if (a2 != 2)
  {
    swift_bridgeObjectRetain();
    sub_1C24C9DD0(a1, a2);
    sub_1C24C9DD0(0, 1);
    sub_1C244073C(0);
    v5[0] = a1;
    v5[1] = a2;
    return sub_1C24C96A8(v5);
  }
  return sub_1C244073C(1);
}

uint64_t sub_1C24C95D4()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DAE0();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C24C96A8(uint64_t *a1)
{
  uint64_t v14 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C24C9D6C(0, &qword_1EA2DF5D0, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  long long v13 = xmmword_1C255CD90;
  *(_OWORD *)(v8 + 16) = xmmword_1C255CD90;
  uint64_t v9 = type metadata accessor for MedicalRecordTimelineSystemStatusItem();
  uint64_t v10 = (void *)swift_allocObject();
  type metadata accessor for MedicalRecordTimelineSystemStatusItemCell();
  sub_1C24C99A8(v5, v6);
  sub_1C24C99BC(&qword_1EA2E4570, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineSystemStatusItemCell);
  _OWORD v10[4] = sub_1C254D330();
  v10[5] = v11;
  void v10[2] = v5;
  _OWORD v10[3] = v6;
  *(void *)(v8 + 56) = v9;
  *(void *)(v8 + 64) = sub_1C24C99BC(&qword_1EA2E4578, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineSystemStatusItem);
  *(void *)(v8 + 32) = v10;
  sub_1C254D560();
  sub_1C24C9D6C(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], v7);
  sub_1C254D9B0();
  *(_OWORD *)(swift_allocObject() + 16) = v13;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v14);
  sub_1C254D990();
  sub_1C254DA10();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C24C99A8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C24C99BC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void MedicalRecordTimelineSystemStatusDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void MedicalRecordTimelineSystemStatusDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t MedicalRecordTimelineSystemStatusDataSource.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t MedicalRecordTimelineSystemStatusDataSource.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C24C9AEC()
{
  return sub_1C254E160();
}

Swift::Void __swiftcall MedicalRecordTimelineSystemStatusDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C24C9BBC(uint64_t a1, uint64_t a2)
{
  return sub_1C24C99BC(&qword_1EA2E4580, a2, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineSystemStatusDataSource);
}

uint64_t type metadata accessor for MedicalRecordTimelineSystemStatusDataSource()
{
  return self;
}

uint64_t sub_1C24C9C28()
{
  return sub_1C254FAD0();
}

uint64_t method lookup function for MedicalRecordTimelineSystemStatusDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineSystemStatusDataSource);
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusDataSource.reloadSection(status:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t sub_1C24C9CFC()
{
  if ((unint64_t)(*(void *)(v0 + 24) - 1) >= 2) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C24C9D48()
{
  return sub_1C24C9538(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t block_destroy_helper_64()
{
  return swift_release();
}

uint64_t sub_1C24C9D5C(uint64_t a1, uint64_t a2)
{
  if (a2 != 2) {
    return sub_1C24C99A8(a1, a2);
  }
  return a1;
}

void sub_1C24C9D6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C24C9DD0(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordDetailViewController(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E45A8);
}

uint64_t sub_1C24C9E04()
{
  return swift_initClassMetadata2();
}

id sub_1C24C9E6C(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1C24C9EEC();

  if (v2)
  {
    sub_1C21AB51C(0, &qword_1EA2E45E0);
    uint64_t v3 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  return v3;
}

uint64_t sub_1C24C9EEC()
{
  id v1 = objc_msgSend(v0, sel_presentingViewController);

  if (!v1) {
    return 0;
  }
  sub_1C254F470();
  uint64_t v2 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(self, sel_keyCommandWithInput_modifierFlags_action_, v2, 0, sel_didTapDone_);

  sub_1C244D344(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255CEB0;
  *(void *)(v4 + 32) = v3;
  uint64_t v6 = v4;
  sub_1C254F730();
  return v6;
}

void sub_1C24CA000(char *a1, uint64_t a2, void *a3)
{
  *(void *)&a1[qword_1EA2E4588] = 0;
  *(void *)&a1[qword_1EA2E4590] = 0;
  id v4 = a3;

  sub_1C25505F0();
  __break(1u);
}

void sub_1C24CA084()
{
  sub_1C24CDEFC(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)&v20 - v2;
  uint64_t v4 = *(void *)&v0[qword_1EA2E45A0];
  uint64_t v23 = type metadata accessor for MedicalRecordDetailDataSourceProvider();
  uint64_t v24 = sub_1C24CE1B8(&qword_1EA2E45C8, (void (*)(uint64_t))type metadata accessor for MedicalRecordDetailDataSourceProvider);
  uint64_t v22 = v4;
  swift_retain();
  sub_1C254E0F0();
  uint64_t v5 = (objc_class *)type metadata accessor for MedicalRecordDetailViewController(0);
  v21.receiver = v0;
  v21.super_class = v5;
  objc_msgSendSuper2(&v21, sel_viewDidLoad);
  uint64_t v6 = qword_1EA2E4598;
  id v7 = objc_msgSend(*(id *)&v0[qword_1EA2E4598], sel_titleDisplayStringForDetailViewController);
  objc_msgSend(v0, sel_setTitle_, v7);

  id v8 = objc_msgSend(v0, sel_collectionView);
  if (!v8)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v9 = v8;
  id v10 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  objc_msgSend(v9, sel_setBackgroundColor_, v10);

  id v11 = objc_msgSend(v0, sel_collectionView);
  if (!v11)
  {
LABEL_8:
    __break(1u);
    return;
  }
  uint64_t v12 = v11;
  objc_msgSend(v11, sel_contentInset);
  objc_msgSend(v12, sel_setContentInset_, 20.0);

  uint64_t v13 = *(void *)(v4 + 56);
  if (v13)
  {
    uint64_t v14 = *(void **)&v0[v6];
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = sub_1C254F840();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v3, 1, 1, v17);
      uint64_t v18 = (void *)swift_allocObject();
      v18[2] = 0;
      v18[3] = 0;
      v18[4] = v13;
      v18[5] = v16;
      swift_retain_n();
      id v19 = v14;
      sub_1C24CA458((uint64_t)v3, (uint64_t)&unk_1EA2E45D8, (uint64_t)v18);
      swift_release();

      swift_release();
      sub_1C24CE08C((uint64_t)v3, (uint64_t)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C24CDEFC);
    }
  }
}

uint64_t sub_1C24CA3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  *id v7 = v5;
  v7[1] = sub_1C2223E3C;
  return sub_1C254720C(a5);
}

uint64_t sub_1C24CA458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C24CDEFC(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)v16 - v7;
  sub_1C24CE0EC(a1, (uint64_t)v16 - v7);
  uint64_t v9 = sub_1C254F840();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C24CE08C((uint64_t)v8, (uint64_t)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C24CDEFC);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1C254F7D0();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C254F830();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    void v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

void sub_1C24CA6A8(void *a1)
{
  id v1 = a1;
  sub_1C24CA084();
}

void sub_1C24CA6F0(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for MedicalRecordDetailViewController(0);
  id v4 = v5.receiver;
  objc_msgSendSuper2(&v5, sel_viewDidAppear_, a3);
  sub_1C24CB774(1);
}

void sub_1C24CA75C()
{
  id v1 = v0;
  sub_1C254E100();
  uint64_t v2 = (void (*)(void))sub_1C254E110();
  v2();
  id v3 = objc_msgSend(v0, sel_collectionView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_20;
  }
  id v4 = v3;
  type metadata accessor for ButtonCell();
  sub_1C24CE1B8((unint64_t *)&qword_1EA2E45E8, (void (*)(uint64_t))type metadata accessor for ButtonCell);
  sub_1C254FAD0();

  id v5 = objc_msgSend(v1, sel_collectionView);
  if (!v5)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v6 = v5;
  type metadata accessor for DeleteRecordCell();
  sub_1C24CE1B8(&qword_1EA2E34C8, (void (*)(uint64_t))type metadata accessor for DeleteRecordCell);
  sub_1C254FAD0();

  id v7 = objc_msgSend(v1, sel_collectionView);
  if (!v7)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v8 = v7;
  type metadata accessor for ImageAttachmentCell(0);
  sub_1C24CE1B8(&qword_1EA2DEDA8, (void (*)(uint64_t))type metadata accessor for ImageAttachmentCell);
  sub_1C254FAD0();

  id v9 = objc_msgSend(v1, sel_collectionView);
  if (!v9)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = v9;
  type metadata accessor for PDFAttachmentCell(0);
  sub_1C24CE1B8((unint64_t *)&unk_1EA2DEDC0, (void (*)(uint64_t))type metadata accessor for PDFAttachmentCell);
  sub_1C254FAD0();

  id v11 = objc_msgSend(v1, sel_collectionView);
  if (!v11)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v12 = v11;
  type metadata accessor for QRCodeCell();
  sub_1C24CE1B8(&qword_1EA2DF160, (void (*)(uint64_t))type metadata accessor for QRCodeCell);
  sub_1C254FAD0();

  id v13 = objc_msgSend(v1, sel_collectionView);
  if (!v13)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v14 = v13;
  type metadata accessor for RecordDetailTitleCell();
  sub_1C24CE1B8(&qword_1EA2E0EB0, (void (*)(uint64_t))type metadata accessor for RecordDetailTitleCell);
  sub_1C254FAD0();

  id v15 = objc_msgSend(v1, sel_collectionView);
  if (!v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v16 = v15;
  type metadata accessor for RecordSourceCell();
  sub_1C24CE1B8(&qword_1EA2E0130, (void (*)(uint64_t))type metadata accessor for RecordSourceCell);
  sub_1C254FAD0();

  id v17 = objc_msgSend(v1, sel_collectionView);
  if (!v17)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v18 = v17;
  type metadata accessor for ReferenceRangeCell();
  sub_1C24CE1B8(&qword_1EA2E0EB8, (void (*)(uint64_t))type metadata accessor for ReferenceRangeCell);
  sub_1C254FAD0();

  id v19 = objc_msgSend(v1, sel_collectionView);
  if (!v19)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v20 = v19;
  type metadata accessor for TextItemCell();
  sub_1C24CE1B8(&qword_1EA2DE790, (void (*)(uint64_t))type metadata accessor for TextItemCell);
  sub_1C254FAD0();

  id v21 = objc_msgSend(v1, sel_collectionView);
  if (!v21)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v22 = v21;
  type metadata accessor for TitleSubtitleDetailCell();
  sub_1C24CE1B8(&qword_1EA2E02E0, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailCell);
  sub_1C254FAD0();

  id v23 = objc_msgSend(v1, sel_collectionView);
  if (!v23)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v24 = v23;
  type metadata accessor for TitleSubtitleDetailSpinnerCell();
  sub_1C24CE1B8(&qword_1EA2E02E8, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailSpinnerCell);
  sub_1C254FAD0();

  id v25 = objc_msgSend(v1, sel_collectionView);
  if (!v25)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v26 = v25;
  type metadata accessor for TextAttachmentCell(0);
  sub_1C24CE1B8(&qword_1EA2DEDB0, (void (*)(uint64_t))type metadata accessor for TextAttachmentCell);
  sub_1C254FAD0();

  id v27 = objc_msgSend(v1, sel_collectionView);
  if (!v27)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v28 = v27;
  type metadata accessor for ThumbnailAttachmentCell(0);
  sub_1C24CE1B8(&qword_1EA2DEDB8, (void (*)(uint64_t))type metadata accessor for ThumbnailAttachmentCell);
  sub_1C254FAD0();

  id v29 = objc_msgSend(v1, sel_collectionView);
  if (!v29)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v30 = v29;
  sub_1C254DFE0();
  sub_1C254FAF0();

  id v31 = objc_msgSend(v1, sel_collectionView);
  if (!v31)
  {
LABEL_33:
    __break(1u);
    return;
  }
  sub_1C254DE80();
  sub_1C254FAE0();
}

void sub_1C24CAE28(void *a1)
{
  uint64_t v2 = (void *)sub_1C254CD30();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  id v3 = (void *)sub_1C254CD30();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_1C254E0D0();
    sub_1C254DCE0();
    sub_1C254D6D0();
    swift_release();
    sub_1C21F4424((uint64_t)v11, (uint64_t)v8);
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    sub_1C21FFE74(0, &qword_1EA2DE778);
    if (swift_dynamicCast())
    {
      id v5 = v6;
LABEL_6:
      sub_1C21F44EC(v5, (uint64_t)v10);
      __swift_project_boxed_opaque_existential_1Tm(v10, v10[3]);
      sub_1C254D8A0();
      sub_1C24CB774(0);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
      return;
    }
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1C220EF90((uint64_t)v6);
    *(void *)&v6[0] = v4;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE788);
    id v4 = v4;
    if (swift_dynamicCast())
    {
      id v5 = v8;
      goto LABEL_6;
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    sub_1C220EF90((uint64_t)v8);
  }
}

uint64_t sub_1C24CB030(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C254CD90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CD40();
  id v9 = a3;
  id v10 = a1;
  sub_1C24CAE28(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C24CB12C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C254CD90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CD40();
  id v9 = a3;
  id v10 = a1;
  LOBYTE(a1) = sub_1C2431560(v9);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a1 & 1;
}

id sub_1C24CB230(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C254CD90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CD40();
  id v9 = a3;
  id v10 = a1;
  id v11 = sub_1C24CDB0C();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

id sub_1C24CB340(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C24CB774(0);
    id v4 = (void *)sub_1C254F430();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = v2;
    uint64_t v6 = self;
    v9[4] = sub_1C24CE270;
    v9[5] = v5;
    v9[0] = MEMORY[0x1E4F143A8];
    v9[1] = 1107296256;
    v9[2] = sub_1C225ED44;
    v9[3] = &block_descriptor_36_0;
    uint64_t v7 = _Block_copy(v9);
    swift_retain();
    swift_release();
    id v2 = objc_msgSend(v6, sel_configurationWithIdentifier_previewProvider_actionProvider_, v4, 0, v7);

    swift_release();
    _Block_release(v7);
  }
  return v2;
}

uint64_t sub_1C24CB494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C21AB51C(0, &qword_1EA2DF300);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v6 = (void *)sub_1C254F430();
  id v7 = objc_msgSend(self, sel_systemImageNamed_, v6, 0xE000000000000000);

  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C254FFB0();
  sub_1C21AB51C(0, &qword_1EA2DF308);
  sub_1C244D344(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C255CEB0;
  *(void *)(v10 + 32) = v9;
  sub_1C254F730();
  return sub_1C254FE60();
}

void sub_1C24CB6E0()
{
  id v0 = objc_msgSend(self, sel_generalPasteboard);
  id v1 = (id)sub_1C254F430();
  objc_msgSend(v0, sel_setString_, v1);
}

void sub_1C24CB774(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  id v4 = (char *)qword_1EBB6E968;
  id v5 = objc_msgSend(self, sel_supportedRecordCategoriesByCategoryType);
  if (v5)
  {
    uint64_t v6 = v5;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FFC0);
    sub_1C21A9630();
    uint64_t v7 = sub_1C254F2D0();

    uint64_t v8 = qword_1EA2E4598;
    id v9 = objc_msgSend(*(id *)(v2 + qword_1EA2E4598), sel_recordCategoryType);
    id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v9);
    id v11 = sub_1C24AA1D0(v10, v7);

    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(*(id *)(v2 + v8), sel_primaryConcept);
    id v13 = objc_msgSend(v12, sel_identifier);

    if (v11)
    {
      sub_1C21AA50C(v11, (uint64_t)&aBlock);
      char v14 = aBlock;
      id v15 = (void *)v22;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      if (v13)
      {
LABEL_6:
        uint64_t v16 = *(void **)&v4[OBJC_IVAR___CHRAnalyticsManager_conceptStore];
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = v4;
        *(_OWORD *)(v17 + 24) = xmmword_1C256DA40;
        *(void *)(v17 + 40) = a1;
        *(unsigned char *)(v17 + 48) = v14;
        id v25 = sub_1C22003F0;
        uint64_t v26 = v17;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v22 = 1107296256;
        id v23 = sub_1C23CC220;
        uint64_t v24 = &block_descriptor_30_1;
        uint64_t v18 = _Block_copy(&aBlock);
        id v19 = v13;
        uint64_t v20 = v4;
        swift_release();
        objc_msgSend(v16, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, v19, 0, v18);
        _Block_release(v18);

LABEL_9:
        return;
      }
    }
    else
    {
      char v14 = 11;
      if (v13) {
        goto LABEL_6;
      }
    }
    LOBYTE(aBlock) = v14;
    sub_1C23CD65C(4, 19, a1, (char *)&aBlock, 0);
    goto LABEL_9;
  }
  __break(1u);
}

void sub_1C24CBA64(char a1)
{
  id v3 = objc_msgSend(v1, sel_navigationItem);
  if (a1) {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_didTapDone_);
  }
  else {
    id v4 = 0;
  }
  _OWORD v10[3] = type metadata accessor for MedicalRecordDetailViewController(0);
  v10[0] = v1;
  id v5 = v1;
  id v6 = _sSo15UIBarButtonItemC15HealthRecordsUIE014makeTapToRadarC06target6actionABSgypSg_10ObjectiveC8SelectorVSgtFZ_0((uint64_t)v10, (uint64_t)sel_tapToRadar_);
  sub_1C24CE08C((uint64_t)v10, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C244D344);
  v10[0] = MEMORY[0x1E4FBC860];
  if (v4)
  {
    id v7 = v4;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  if (v6)
  {
    id v8 = v6;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }

  sub_1C21AB51C(0, &qword_1EA2DE448);
  id v9 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setRightBarButtonItems_, v9);
}

uint64_t sub_1C24CBC80(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    sub_1C25501E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
    id v5 = a1;
  }
  type metadata accessor for TapToRadarManager();
  static TapToRadarManager.presentTapToRadarDialogue(from:)(a1);

  return sub_1C24CE08C((uint64_t)v7, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C244D344);
}

void sub_1C24CBD38()
{
}

void sub_1C24CBD68(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C24CBD9C()
{
  return swift_release();
}

id sub_1C24CBDFC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordDetailViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C24CBE34(uint64_t a1)
{
  return swift_release();
}

uint64_t sub_1C24CBEA0()
{
  return type metadata accessor for MedicalRecordDetailViewController(0);
}

void sub_1C24CBEA8(void *a1)
{
  id v1 = a1;
  sub_1C24CBA64(1);
}

void sub_1C24CBEF8(void *a1)
{
  id v1 = a1;
  sub_1C24CBA64(0);
}

void sub_1C24CBF48()
{
  id v1 = objc_msgSend(v0, sel_navigationController);
  if (v1)
  {
    objc_super v2 = v1;
    id v3 = objc_msgSend(v1, sel_viewControllers);
    sub_1C21AB51C(0, &qword_1EA2DE3F0);
    unint64_t v4 = sub_1C254F710();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C2550620();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v5 >= 2)
    {
      id v7 = objc_msgSend(v2, sel_popViewControllerAnimated_, 1);

      return;
    }
  }
  id v6 = objc_msgSend(v0, sel_presentationController);

  if (v6)
  {
    objc_msgSend(v0, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

void sub_1C24CC0D0(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = sub_1C254F230();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *id v9 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  char v10 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9C8]), sel_initWithTimeIntervalSinceNow_, 1.0);
  id v12 = *(void **)&v3[qword_1EA2E4590];
  *(void *)&v3[qword_1EA2E4590] = v11;

  uint64_t v13 = qword_1EA2E4588;
  char v14 = *(void **)&v3[qword_1EA2E4588];
  if (v14) {
    objc_msgSend(v14, sel_removeFromSuperview);
  }
  id v15 = objc_allocWithZone((Class)type metadata accessor for HRProgressHUD());
  swift_unknownObjectWeakInit();
  uint64_t v16 = sub_1C2285DF8(0, 0);
  uint64_t v17 = *(void **)&v3[v13];
  *(void *)&v3[v13] = v16;

  uint64_t v18 = *(void **)&v3[v13];
  if (v18)
  {
    id v19 = v18;
    id v20 = objc_msgSend(v3, sel_view);
    if (v20)
    {
      id v21 = v20;
      objc_msgSend(v19, sel_setAutoresizingMask_, 45);
      uint64_t v22 = &v19[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_text];
      *(void *)uint64_t v22 = a1;
      *((void *)v22 + 1) = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v23 = *(void **)&v19[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel];
      if (*((void *)v22 + 1))
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v24 = 0;
      }
      objc_msgSend(v23, sel_setText_, v24);

      objc_msgSend(v19, sel_setNeedsLayout);
      objc_msgSend(v21, sel_addSubview_, v19);
      objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressIndicator], sel_startAnimating);

      return;
    }
LABEL_12:
    __break(1u);
  }
}

uint64_t sub_1C24CC3A4(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  unint64_t v4 = v3;
  unint64_t v48 = a1;
  uint64_t v49 = a3;
  uint64_t v47 = a2;
  uint64_t v5 = sub_1C254F1C0();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254F200();
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C254F220();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v40 - v15;
  uint64_t v17 = sub_1C254F230();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  id v20 = (uint64_t *)((char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *id v20 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FBCBF0], v17);
  char v21 = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v18 + 8))(v20, v17);
  if (v21)
  {
    uint64_t v23 = qword_1EA2E4588;
    uint64_t v24 = *(void **)&v3[qword_1EA2E4588];
    if (v24)
    {
      if (!*(void *)&v3[qword_1EA2E4590]) {
        goto LABEL_8;
      }
      objc_msgSend(*(id *)&v3[qword_1EA2E4590], sel_timeIntervalSinceNow);
      double v26 = v25;
      if (v25 > 0.01)
      {
        uint64_t v40 = sub_1C254FC70();
        sub_1C254F210();
        MEMORY[0x1C8757760](v13, fmin(v26, 1.0));
        uint64_t v27 = v42;
        uint64_t v41 = *(void *)(v41 + 8);
        ((void (*)(char *, uint64_t))v41)(v13, v42);
        uint64_t v28 = (void *)swift_allocObject();
        id v29 = v47;
        uint64_t v30 = v48;
        uint64_t v28[2] = v3;
        v28[3] = v30;
        uint64_t v31 = v49;
        v28[4] = v29;
        v28[5] = v31;
        aBlock[4] = sub_1C24CDAD0;
        aBlock[5] = v28;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1C224E544;
        aBlock[3] = &block_descriptor_14;
        uint64_t v32 = _Block_copy(aBlock);
        id v33 = v4;
        id v34 = v30;
        swift_retain();
        swift_release();
        sub_1C254F1E0();
        aBlock[0] = MEMORY[0x1E4FBC860];
        sub_1C24CE1B8((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
        sub_1C24CDEFC(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
        sub_1C21FFDEC();
        uint64_t v35 = v46;
        sub_1C2550200();
        char v36 = (void *)v40;
        MEMORY[0x1C8758120](v16, v10, v7, v32);
        _Block_release(v32);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v35);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v44);
        return ((uint64_t (*)(char *, uint64_t))v41)(v16, v27);
      }
      uint64_t v24 = *(void **)&v3[v23];
      if (!v24)
      {
        uint64_t v37 = 0;
      }
      else
      {
LABEL_8:
        objc_msgSend(v24, sel_removeFromSuperview);
        uint64_t v37 = *(void **)&v3[v23];
      }
      uint64_t v38 = v48;
      uint64_t v39 = (uint64_t (*)(void *))v47;
      *(void *)&v3[v23] = 0;

      return v39(v38);
    }
    else
    {
      return v47(v48);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C24CC90C(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    sub_1C25501E0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
    id v5 = a1;
  }
  objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, 0, v7, v8);

  return sub_1C24CE08C((uint64_t)&v7, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C244D344);
}

uint64_t *sub_1C24CC9C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1C254CB40();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1C24CCB14(uint64_t a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    id v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_1C24CCBE4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1C24CCCF4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_1C24CCE68(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1C24CCF78(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1C24CD0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C24CD100);
}

uint64_t sub_1C24CD100(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CB40();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C24CD16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C24CD180);
}

uint64_t sub_1C24CD180(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1C24CD200(uint64_t a1)
{
  uint64_t v2 = sub_1C254CB40();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_1C24CD268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for PresentationContext(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E45B8);
}

uint64_t sub_1C24CD2F8()
{
  uint64_t result = sub_1C254CB40();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

id sub_1C24CD370(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for PresentationContext(0);
  MEMORY[0x1F4188790](v7 - 8);
  int v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[qword_1EA2E4588] = 0;
  *(void *)&v3[qword_1EA2E4590] = 0;
  *(void *)&v3[qword_1EA2E4598] = a1;
  sub_1C242B528(a3, (uint64_t)v9);
  type metadata accessor for MedicalRecordDetailDataSourceProvider();
  swift_allocObject();
  id v10 = a1;
  uint64_t v11 = v3;
  *(void *)&v11[qword_1EA2E45A0] = sub_1C2526EF4(v10, a2, (uint64_t)v9);

  uint64_t v12 = (objc_class *)type metadata accessor for MedicalRecordDetailViewController(0);
  v15.receiver = v11;
  v15.super_class = v12;
  id v13 = objc_msgSendSuper2(&v15, sel_initWithCollectionViewLayout_, 0);
  sub_1C24CBA64(0);

  sub_1C24CE280(a3);
  return v13;
}

uint64_t sub_1C24CD4B8(void *a1, char *a2, void *a3, uint64_t a4)
{
  uint64_t v47 = a1;
  uint64_t v7 = sub_1C254F1C0();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v42 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1C254F200();
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v40 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_1C254F220();
  uint64_t v39 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v38 = (char *)&v38 - v13;
  uint64_t v14 = sub_1C254F230();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (uint64_t *)((char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a3;
  *(void *)(v18 + 24) = a4;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v19 = a3;
  swift_retain();
  *uint64_t v17 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FBCBF0], v14);
  LOBYTE(a3) = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if (a3)
  {
    uint64_t v21 = qword_1EA2E4588;
    uint64_t v22 = *(void **)&a2[qword_1EA2E4588];
    if (v22)
    {
      if (!*(void *)&a2[qword_1EA2E4590]) {
        goto LABEL_8;
      }
      objc_msgSend(*(id *)&a2[qword_1EA2E4590], sel_timeIntervalSinceNow);
      double v24 = v23;
      if (v23 > 0.01)
      {
        double v25 = (void *)sub_1C254FC70();
        sub_1C254F210();
        double v26 = v38;
        MEMORY[0x1C8757760](v11, fmin(v24, 1.0));
        uint64_t v39 = *(void *)(v39 + 8);
        ((void (*)(char *, uint64_t))v39)(v11, v46);
        uint64_t v27 = (void *)swift_allocObject();
        uint64_t v28 = v47;
        v27[2] = a2;
        void v27[3] = v28;
        v27[4] = sub_1C24CDAC4;
        v27[5] = v18;
        aBlock[4] = sub_1C24CDAD0;
        aBlock[5] = v27;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1C224E544;
        aBlock[3] = &block_descriptor_69;
        id v29 = _Block_copy(aBlock);
        uint64_t v30 = a2;
        id v31 = v28;
        swift_retain();
        swift_release();
        uint64_t v32 = v40;
        sub_1C254F1E0();
        aBlock[0] = MEMORY[0x1E4FBC860];
        sub_1C24CE1B8((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
        sub_1C24CDEFC(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
        sub_1C21FFDEC();
        id v33 = v42;
        uint64_t v34 = v45;
        sub_1C2550200();
        MEMORY[0x1C8758120](v26, v32, v33, v29);
        _Block_release(v29);

        (*(void (**)(char *, uint64_t))(v44 + 8))(v33, v34);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v43);
        ((void (*)(char *, uint64_t))v39)(v26, v46);
        return swift_release();
      }
      uint64_t v22 = *(void **)&a2[v21];
      if (!v22)
      {
        char v36 = 0;
      }
      else
      {
LABEL_8:
        objc_msgSend(v22, sel_removeFromSuperview);
        char v36 = *(void **)&a2[v21];
      }
      uint64_t v37 = v47;
      *(void *)&a2[v21] = 0;

      uint64_t v35 = v37;
    }
    else
    {
      uint64_t v35 = v47;
    }
    sub_1C2420F88(v35, v19, a4);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C24CDA84()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C24CDAC4(void *a1)
{
  sub_1C2420F88(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t block_destroy_helper_65()
{
  return swift_release();
}

uint64_t sub_1C24CDAE0()
{
  return sub_1C24CC3A4(*(void **)(v0 + 24), *(uint64_t (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

id sub_1C24CDB0C()
{
  sub_1C254E0D0();
  sub_1C254DCE0();
  sub_1C254D6D0();
  swift_release();
  sub_1C21F4424((uint64_t)v40, (uint64_t)v39);
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for RecordDetailTitleItem();
  if (swift_dynamicCast())
  {
    sub_1C24678F8(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v0 = swift_allocObject();
    *(_OWORD *)(v0 + 16) = xmmword_1C255CDA0;
    uint64_t v2 = v38[2];
    uint64_t v1 = v38[3];
    uint64_t v3 = MEMORY[0x1E4FBB1A0];
    *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v4 = sub_1C220D950();
    *(void *)(v0 + 64) = v4;
    *(void *)(v0 + 32) = v2;
    *(void *)(v0 + 40) = v1;
    uint64_t v5 = v38[4];
    uint64_t v6 = v38[5];
    *(void *)(v0 + 96) = v3;
    *(void *)(v0 + 104) = v4;
    *(void *)(v0 + 72) = v5;
    *(void *)(v0 + 80) = v6;
LABEL_9:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C254F4B0();
    uint64_t v17 = v16;
    swift_release();
    goto LABEL_10;
  }
  sub_1C21F4424((uint64_t)v40, (uint64_t)v39);
  type metadata accessor for TitleSubtitleDetailItem(0);
  if (swift_dynamicCast())
  {
    sub_1C24678F8(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C255CDA0;
    uint64_t v9 = v38[2];
    uint64_t v8 = v38[3];
    uint64_t v10 = MEMORY[0x1E4FBB1A0];
    *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v11 = sub_1C220D950();
    *(void *)(v7 + 64) = v11;
    *(void *)(v7 + 32) = v9;
    *(void *)(v7 + 40) = v8;
    uint64_t v12 = v38[4];
    unint64_t v13 = v38[5];
    *(void *)(v7 + 96) = v10;
    *(void *)(v7 + 104) = v11;
    if (!v13) {
      uint64_t v12 = 0;
    }
    unint64_t v14 = 0xE000000000000000;
    if (v13) {
      unint64_t v14 = v13;
    }
    *(void *)(v7 + 72) = v12;
    *(void *)(v7 + 80) = v14;
    goto LABEL_9;
  }
  sub_1C21F4424((uint64_t)v40, (uint64_t)v39);
  type metadata accessor for ReferenceRangeItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    uint64_t v15 = 0;
    uint64_t v17 = 0;
    goto LABEL_10;
  }
  id v20 = (void *)v38[2];
  if (!v20)
  {
    swift_release();
    goto LABEL_16;
  }
  id v21 = v20;
  id v22 = objc_msgSend(v21, sel_currentValue);
  id v23 = objc_msgSend(v22, sel_displayString);

  uint64_t v24 = sub_1C254F470();
  uint64_t v26 = v25;

  id v27 = objc_msgSend(v21, sel_unitString);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = sub_1C254F470();
    unint64_t v31 = v30;
  }
  else
  {
    uint64_t v29 = 0;
    unint64_t v31 = 0;
  }
  sub_1C24678F8(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1C255CDA0;
  uint64_t v33 = MEMORY[0x1E4FBB1A0];
  *(void *)(v32 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v34 = sub_1C220D950();
  *(void *)(v32 + 32) = v24;
  *(void *)(v32 + 40) = v26;
  *(void *)(v32 + 96) = v33;
  *(void *)(v32 + 104) = v34;
  if (v31) {
    uint64_t v35 = v29;
  }
  else {
    uint64_t v35 = 0;
  }
  unint64_t v36 = 0xE000000000000000;
  if (v31) {
    unint64_t v36 = v31;
  }
  *(void *)(v32 + 64) = v34;
  *(void *)(v32 + 72) = v35;
  *(void *)(v32 + 80) = v36;
  uint64_t v15 = sub_1C254F4B0();
  uint64_t v17 = v37;
  swift_release();

LABEL_10:
  id v18 = sub_1C24CB340(v15, v17);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
  return v18;
}

void sub_1C24CDEFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C24CDF60()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C24CDFA8()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C222399C;
  unint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *unint64_t v4 = v3;
  v4[1] = sub_1C2223E3C;
  return sub_1C254720C(v2);
}

uint64_t sub_1C24CE08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C24CE0EC(uint64_t a1, uint64_t a2)
{
  sub_1C24CDEFC(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C24CE180()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C24CE1B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C24CE200()
{
  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_1C24CE238()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C24CE270(uint64_t a1)
{
  return sub_1C24CB494(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C24CE278()
{
}

uint64_t sub_1C24CE280(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PresentationContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id ClinicalNoteRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id ClinicalNoteRecordFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_store);
}

uint64_t ClinicalNoteRecordFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context);
}

id ClinicalNoteRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for ClinicalNoteRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for ClinicalNoteRecordFormatter()
{
  return self;
}

uint64_t sub_1C24CE3F0(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context);
  if (v2 == 1)
  {
    return sub_1C24CEDE4(a1);
  }
  else if (v2)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C24CE474(a1);
  }
  return result;
}

uint64_t sub_1C24CE474(void *a1)
{
  sub_1C224F4C8(0, (unint64_t *)&qword_1EA2DF0E8, (uint64_t (*)(uint64_t))sub_1C224F494, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C256DAE0;
  *(void *)(inited + 32) = sub_1C253F6E8(a1);
  *(void *)(inited + 40) = sub_1C243F974(a1);
  sub_1C224F52C();
  id v3 = a1;
  uint64_t v4 = sub_1C23F6374(v3);

  uint64_t v5 = Array<A>.newlineJoined.getter(v4);
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = sub_1C2386A40(v5, v7);
  id v8 = objc_msgSend(v3, sel_authors);
  if (v8)
  {
    uint64_t v9 = sub_1C254F710();

    id v8 = (id)Array<A>.newlineJoined.getter(v9);
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v11 = 0;
  }
  *(void *)(inited + 56) = sub_1C2386C20((uint64_t)v8, v11);
  *(void *)(inited + 64) = sub_1C24CEA4C(v3);
  *(void *)(inited + 72) = sub_1C24CEC7C(v3);
  sub_1C254F730();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void **)(inited + 32);
  if (v12)
  {
    id v13 = v12;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  unint64_t v14 = *(void **)(inited + 40);
  if (v14)
  {
    id v15 = v14;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v16 = *(void **)(inited + 48);
  if (v16)
  {
    id v17 = v16;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v18 = *(void **)(inited + 56);
  if (v18)
  {
    id v19 = v18;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v20 = *(void **)(inited + 64);
  if (v20)
  {
    id v21 = v20;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v22 = *(void **)(inited + 72);
  if (v22)
  {
    id v23 = v22;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  swift_bridgeObjectRelease();
  return v25;
}

id ClinicalNoteRecordFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ClinicalNoteRecordFormatter.init()()
{
}

id ClinicalNoteRecordFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalNoteRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C24CE928()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_store);
}

uint64_t sub_1C24CE93C()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context);
}

id sub_1C24CE950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v6 = (objc_class *)type metadata accessor for ClinicalNoteRecordFormatter();
  unint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1C24CE9C4(void *a1)
{
  uint64_t v2 = *(void *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context);
  if (v2 == 1)
  {
    return sub_1C24CEDE4(a1);
  }
  else if (v2)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C24CE474(a1);
  }
  return result;
}

id sub_1C24CEA4C(void *a1)
{
  if (qword_1EA2DD690 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EA2E0B90;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C224F52C();
  id v6 = objc_msgSend(a1, sel_relevantStartDate);
  id v7 = objc_msgSend(a1, sel_relevantEndDate);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  v18[2] = v3;
  v18[3] = v5;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  void v17[2] = v3;
  v17[3] = v5;
  MEMORY[0x1F4188790](v9);
  void v16[2] = v3;
  v16[3] = v5;
  id v10 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v11 = sub_1C254F470();
  uint64_t v13 = v12;

  id v14 = sub_1C2388D90(v6, v7, sub_1C2287CA0, (uint64_t)v18, sub_1C22659DC, (uint64_t)v17, (void (*)(id))sub_1C2287CA0, (uint64_t)v16, v11, v13);
  swift_bridgeObjectRelease();
  return v14;
}

id sub_1C24CEC7C(void *a1)
{
  if (qword_1EA2DD690 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EA2E0B90;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C224F52C();
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(a1, sel_noteCreationDate, 0xE000000000000000);
  id v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  id v11 = sub_1C23898E0(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C24CEDE4(void *a1)
{
  sub_1C224F52C();
  id v2 = a1;
  uint64_t v3 = sub_1C23F6374(v2);

  uint64_t v4 = Array<A>.newlineJoined.getter(v3);
  unint64_t v6 = v5;
  swift_bridgeObjectRelease();
  id v7 = sub_1C2386A40(v4, v6);
  id v8 = objc_msgSend(v2, sel_authors);
  if (v8)
  {
    uint64_t v9 = sub_1C254F710();

    id v8 = (id)Array<A>.newlineJoined.getter(v9);
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v11 = 0;
  }
  id v12 = sub_1C2386C20((uint64_t)v8, v11);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    id v13 = v7;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  if (v12)
  {
    id v14 = v12;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }

  return v16;
}

unint64_t sub_1C24CEFA8(uint64_t a1)
{
  unint64_t result = sub_1C24CEFD0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C24CEFD0()
{
  unint64_t result = qword_1EA2E4600;
  if (!qword_1EA2E4600)
  {
    type metadata accessor for ClinicalNoteRecordFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4600);
  }
  return result;
}

uint64_t method lookup function for ClinicalNoteRecordFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClinicalNoteRecordFormatter);
}

uint64_t dispatch thunk of ClinicalNoteRecordFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ClinicalNoteRecordFormatter.displayItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t MedicalRecordTimelineRemovedRecordItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

id static MedicalRecordTimelineRemovedRecordItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1C22AB6F4(*(void *)(a1 + 16), *(void *)(a2 + 16));
}

uint64_t sub_1C24CF0C0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1C23EAC60(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t MedicalRecordTimelineRemovedRecordItem.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineRemovedRecordItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C24CF1A0()
{
  sub_1C25509C0();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1C23EAC60(v3, v1);
  swift_bridgeObjectRelease();
  return sub_1C2550A10();
}

uint64_t sub_1C24CF224()
{
  uint64_t v1 = *v0;
  sub_1C25509C0();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1C23EAC60(v4, v2);
  swift_bridgeObjectRelease();
  return sub_1C2550A10();
}

uint64_t sub_1C24CF2AC(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_1C23EAC60(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C24CF328()
{
  sub_1C25509C0();
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1C23EAC60(v4, v2);
  swift_bridgeObjectRelease();
  return sub_1C2550A10();
}

id sub_1C24CF3AC(uint64_t a1, uint64_t a2)
{
  return sub_1C22AB6F4(*(void *)(*(void *)a1 + 16), *(void *)(*(void *)a2 + 16));
}

id sub_1C24CF3C0(double a1, double a2, double a3, double a4)
{
  sub_1C24D0378(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = sub_1C254E690();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = &v4[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item];
  id v17 = (objc_class *)type metadata accessor for MedicalRecordTimelineRemovedRecordItemCell();
  *(_OWORD *)uint64_t v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((void *)v16 + 4) = 0;
  v25.receiver = v4;
  v25.super_class = v17;
  id v18 = objc_msgSendSuper2(&v25, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C254CDB0();
  id v19 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C254FE70();

  id v20 = self;
  id v21 = v18;
  id v22 = objc_msgSend(v20, sel_currentTraitCollection);
  sub_1C254E660();
  sub_1C254E6D0();
  sub_1C24FCA3C((uint64_t)v15);
  sub_1C254E6C0();
  uint64_t v23 = sub_1C254E710();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 0, 1, v23);
  MEMORY[0x1C8758250](v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

  return v21;
}

id sub_1C24CF65C(void *a1)
{
  sub_1C24D0378(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)&v21 - v4;
  uint64_t v6 = sub_1C254E690();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &v1[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item];
  unint64_t v11 = (objc_class *)type metadata accessor for MedicalRecordTimelineRemovedRecordItemCell();
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  v21.receiver = v1;
  v21.super_class = v11;
  id v12 = objc_msgSendSuper2(&v21, sel_initWithCoder_, a1);
  id v13 = v12;
  if (v12)
  {
    id v14 = v12;
    sub_1C254CDB0();
    id v15 = (id)*MEMORY[0x1E4F39EA8];
    sub_1C254FE70();

    uint64_t v16 = self;
    id v17 = v14;
    id v18 = objc_msgSend(v16, sel_currentTraitCollection);
    sub_1C254E660();
    sub_1C254E6D0();
    sub_1C24FCA3C((uint64_t)v9);
    sub_1C254E6C0();
    uint64_t v19 = sub_1C254E710();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 0, 1, v19);
    MEMORY[0x1C8758250](v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v13;
}

uint64_t sub_1C24CF8F8(uint64_t a1, void *a2)
{
  sub_1C2227014(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item;
  swift_beginAccess();
  sub_1C2232E74((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C24CF96C();
  return sub_1C2227100((uint64_t)v5);
}

uint64_t sub_1C24CF96C()
{
  sub_1C24D0378(0, &qword_1EA2DE9F0, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v35 - v2;
  uint64_t v4 = sub_1C254E600();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254E5A0();
  uint64_t v44 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v43 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254E890();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v0 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v14, (uint64_t)v46);
  if (!v47) {
    return sub_1C2227100((uint64_t)v46);
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for MedicalRecordTimelineRemovedRecordItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    unint64_t v36 = v7;
    uint64_t v37 = v8;
    uint64_t v40 = v4;
    uint64_t v41 = v0;
    uint64_t v42 = v45;
    sub_1C254E880();
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    uint64_t v38 = v3;
    uint64_t v39 = v5;
    id v16 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C254E860();
    id v17 = self;
    uint64_t v18 = *MEMORY[0x1E4FB2950];
    double v19 = *MEMORY[0x1E4FB09D8];
    uint64_t result = (uint64_t)objc_msgSend(v17, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E4FB2950], *MEMORY[0x1E4FB09D8]);
    if (result)
    {
      id v20 = (void (*)(uint64_t *, void))sub_1C254E7A0();
      sub_1C254E770();
      v20(v46, 0);
      objc_super v21 = self;
      id v22 = objc_msgSend(v21, sel_labelColor);
      uint64_t v23 = (void (*)(uint64_t *, void))sub_1C254E7A0();
      sub_1C254E780();
      v23(v46, 0);
      unint64_t v24 = *(void *)(v42 + 16);
      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1C2550620();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      v46[0] = v25;
      sub_1C2550810();
      sub_1C254E740();
      uint64_t result = (uint64_t)objc_msgSend(v17, sel__preferredFontForTextStyle_weight_, v18, v19);
      if (result)
      {
        uint64_t v26 = (void (*)(uint64_t *, void))sub_1C254E7F0();
        sub_1C254E770();
        v26(v46, 0);
        id v27 = objc_msgSend(v21, sel_secondaryLabelColor);
        uint64_t v28 = (void (*)(uint64_t *, void))sub_1C254E7F0();
        sub_1C254E780();
        v28(v46, 0);
        uint64_t v47 = v10;
        uint64_t v48 = MEMORY[0x1E4FB0F88];
        uint64_t v35 = v10;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v46);
        (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 16))(boxed_opaque_existential_1, v13, v10);
        MEMORY[0x1C8758230](v46);
        sub_1C24D0378(0, &qword_1EA2DE9D8, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
        sub_1C254E620();
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
        unint64_t v30 = v43;
        uint64_t v31 = v44;
        uint64_t v32 = v37;
        (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, *MEMORY[0x1E4FB0E18], v37);
        uint64_t v33 = sub_1C254E5B0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v38, 1, 1, v33);
        unint64_t v34 = v36;
        sub_1C254E5F0();
        sub_1C254E5C0();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v40);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
        sub_1C254FD80();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v35);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C24D00C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C24D0114(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C24CF96C();
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C24D0184(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C24D01E4;
}

uint64_t sub_1C24D01E4(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C24CF96C();
  }
  return result;
}

void sub_1C24D0304(uint64_t a1, void *a2)
{
}

id MedicalRecordTimelineRemovedRecordItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineRemovedRecordItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C24D0350(uint64_t a1, void *a2)
{
}

void sub_1C24D0378(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C24D03DC(void *a1)
{
  uint64_t v2 = v1;
  sub_1C24D0378(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = v1 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v10, (uint64_t)v21);
  if (v21[3])
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    type metadata accessor for MedicalRecordTimelineRemovedRecordItem();
    uint64_t v11 = swift_dynamicCast();
    if (v11)
    {
      id v19 = a1;
      uint64_t v12 = v20;
      if (qword_1EBB6EF30 != -1) {
        uint64_t v11 = swift_once();
      }
      uint64_t v20 = *(void *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_lock);
      MEMORY[0x1F4188790](v11);
      sub_1C254CEE0();
      sub_1C21A8A28();
      sub_1C24D09BC((unint64_t *)&qword_1EBB6F240, 255, MEMORY[0x1E4F66F68]);
      swift_retain();
      sub_1C254E1D0();
      swift_release();
      id v13 = (void *)v21[0];
      uint64_t v14 = *(void **)(v12 + 16);
      uint64_t v15 = sub_1C254CB40();
      id v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
      v16(v9, 1, 1, v15);
      v16(v6, 1, 1, v15);
      objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
      id v17 = v13;
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1C21FDDB8(v17, 0, (uint64_t)v9, 0, 0, (uint64_t)v6, v14, 0, 0);

      objc_msgSend(v19, sel_showViewController_sender_, v18, v2);
      swift_release();
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v21);
  }
}

uint64_t type metadata accessor for MedicalRecordTimelineRemovedRecordItemCell()
{
  return self;
}

uint64_t sub_1C24D0754(uint64_t a1, uint64_t a2)
{
  return sub_1C24D09BC(&qword_1EA2E4610, a2, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineRemovedRecordItem);
}

uint64_t type metadata accessor for MedicalRecordTimelineRemovedRecordItem()
{
  return self;
}

uint64_t sub_1C24D07C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineRemovedRecordItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineRemovedRecordItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineRemovedRecordItem);
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t method lookup function for MedicalRecordTimelineRemovedRecordItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineRemovedRecordItemCell);
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItemCell.didSelectCell(_:in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineRemovedRecordItemCell.deselectionBehavior.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t sub_1C24D09BC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C24D0A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254F840();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C254F830();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C24E53FC(a1, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C254F7D0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1C24D0BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254F840();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C254F830();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C24E53FC(a1, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C254F7D0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_1C244D344(0, &qword_1EA2E4800, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FBB718]);
  return swift_task_create();
}

uint64_t sub_1C24D0DB8(uint64_t a1, uint64_t a2)
{
  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  uint64_t v4 = sub_1C254E560();
  v3[23] = v4;
  v3[24] = *(void *)(v4 - 8);
  v3[25] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C24D0E7C, 0, 0);
}

uint64_t sub_1C24D0E7C()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[20];
  uint64_t v3 = *(void **)(v0[22] + 24);
  sub_1C244D344(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255CD90;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C254F700();
  v0[26] = v5;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1C24D100C;
  uint64_t v6 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C24D3588;
  v0[13] = &block_descriptor_183;
  v0[14] = v6;
  objc_msgSend(v3, sel_fetchAccountsForGatewaysWithExternalIDs_completion_, v5, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C24D100C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 216) = v1;
  if (v1) {
    uint64_t v2 = sub_1C24D120C;
  }
  else {
    uint64_t v2 = sub_1C24D111C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_1C24D111C()
{
  unint64_t v1 = *(void *)(v0 + 120);

  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v2) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_7;
    }
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x1C87588E0](0, v1);
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v3 = *(id *)(v1 + 32);
  }
  uint64_t v2 = (uint64_t)v3;
LABEL_7:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v4 = *(void (**)(uint64_t))(v0 + 8);
  v4(v2);
}

uint64_t sub_1C24D120C()
{
  id v27 = v0;
  uint64_t v2 = (void *)v0[26];
  unint64_t v1 = (void *)v0[27];
  swift_willThrow();

  sub_1C254E510();
  swift_bridgeObjectRetain();
  swift_retain();
  id v3 = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  id v4 = v1;
  uint64_t v5 = sub_1C254E550();
  os_log_type_t v6 = sub_1C254FA20();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (void *)v0[27];
    uint64_t v23 = v0[24];
    uint64_t v24 = v0[23];
    uint64_t v25 = v0[25];
    unint64_t v8 = v0[21];
    uint64_t v21 = v0[20];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v26[0] = v22;
    *(_DWORD *)uint64_t v9 = 136315650;
    uint64_t v10 = sub_1C24D68E0();
    v0[16] = sub_1C21AD354(v10, v11, v26);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[17] = sub_1C21AD354(v21, v8, v26);
    sub_1C2550120();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 22) = 2080;
    v0[18] = v7;
    id v12 = v7;
    sub_1C2206F9C();
    uint64_t v13 = sub_1C254F4F0();
    v0[19] = sub_1C21AD354(v13, v14, v26);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v5, v6, "%s failed to fetch existing account for gateway %s: %s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v22, -1, -1);
    MEMORY[0x1C875A0B0](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
  }
  else
  {
    uint64_t v15 = (void *)v0[27];
    uint64_t v17 = v0[24];
    uint64_t v16 = v0[25];
    uint64_t v18 = v0[23];

    swift_release_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  id v19 = (uint64_t (*)(void))v0[1];
  return v19(0);
}

uint64_t sub_1C24D1544(uint64_t a1, uint64_t a2)
{
  v3[40] = a2;
  v3[41] = v2;
  v3[39] = a1;
  uint64_t v4 = sub_1C254CB40();
  v3[42] = v4;
  v3[43] = *(void *)(v4 - 8);
  v3[44] = swift_task_alloc();
  v3[45] = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  v3[48] = swift_task_alloc();
  uint64_t v5 = sub_1C254E560();
  v3[49] = v5;
  v3[50] = *(void *)(v5 - 8);
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C24D16CC, 0, 0);
}

uint64_t sub_1C24D16CC()
{
  uint64_t v25 = v0;
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[39];
  sub_1C254E510();
  sub_1C24E33A4(v2, v1, (uint64_t (*)(void))type metadata accessor for ClinicalAccountLoginUpgradeAction);
  swift_retain_n();
  id v3 = sub_1C254E550();
  os_log_type_t v4 = sub_1C254FA10();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v22 = v0[49];
    uint64_t v23 = v0[53];
    uint64_t v20 = v0[48];
    uint64_t v21 = v0[50];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v24 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v7 = sub_1C24D68E0();
    v0[38] = sub_1C21AD354(v7, v8, &v24);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v5 + 12) = 2080;
    sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v9 = sub_1C2550810();
    v0[31] = sub_1C21AD354(v9, v10, &v24);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    sub_1C24E5B38(v20, (uint64_t (*)(void))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    _os_log_impl(&dword_1C21A1000, v3, v4, "%s determining appropriate login/upgrade action for account %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v6, -1, -1);
    MEMORY[0x1C875A0B0](v5, -1, -1);

    unint64_t v11 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v11(v23, v22);
  }
  else
  {
    uint64_t v12 = v0[53];
    uint64_t v13 = v0[49];
    uint64_t v14 = v0[50];
    uint64_t v15 = v0[48];
    swift_release_n();
    sub_1C24E5B38(v15, (uint64_t (*)(void))type metadata accessor for ClinicalAccountLoginUpgradeAction);

    unint64_t v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  v0[54] = v11;
  uint64_t v16 = *(void **)(v0[41] + 24);
  v0[55] = v16;
  uint64_t v17 = sub_1C254CB00();
  v0[56] = v17;
  v0[10] = v0;
  v0[15] = v0 + 32;
  v0[11] = sub_1C24D1A64;
  uint64_t v18 = swift_continuation_init();
  v0[18] = MEMORY[0x1E4F143A8];
  v0[19] = 0x40000000;
  v0[20] = sub_1C223F118;
  v0[21] = &block_descriptor_172;
  v0[22] = v18;
  objc_msgSend(v16, sel_fetchAccountWithIdentifier_completion_, v17, v0 + 18);
  return MEMORY[0x1F41881E8](v0 + 10);
}

uint64_t sub_1C24D1A64()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 456) = v1;
  if (v1) {
    uint64_t v2 = sub_1C24D23C8;
  }
  else {
    uint64_t v2 = sub_1C24D1B74;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C24D1B74()
{
  uint64_t v1 = (void *)v0[56];
  uint64_t v2 = v0[45];
  uint64_t v3 = v0[39];
  uint64_t v4 = (void *)v0[32];
  v0[58] = v4;
  id v5 = v4;

  unint64_t v6 = *(void *)(v3 + *(int *)(v2 + 20));
  if (v6 >= 3)
  {
    if (v6 == 3)
    {
      unint64_t v10 = (void *)v0[55];
      uint64_t v12 = v0[43];
      uint64_t v11 = v0[44];
      uint64_t v13 = v0[42];
      id v14 = objc_msgSend(v5, sel_identifier);

      sub_1C254CB20();
      uint64_t v15 = sub_1C254CB00();
      v0[62] = v15;
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      v0[2] = v0;
      v0[7] = v0 + 64;
      v0[3] = sub_1C24D21F8;
      uint64_t v16 = swift_continuation_init();
      v0[23] = MEMORY[0x1E4F143A8];
      v0[24] = 0x40000000;
      v0[25] = sub_1C24D5718;
      v0[26] = &block_descriptor_173;
      v0[27] = v16;
      objc_msgSend(v10, sel_deleteAccountWithIdentifier_deletionReason_completion_, v15, 0, v0 + 23);
      return MEMORY[0x1F41881E8](v0 + 2);
    }
    else
    {
      uint64_t v18 = (void *)v0[40];
      uint64_t v17 = v0[41];
      type metadata accessor for ClinicalAccountUpgradeManager();
      swift_allocObject();
      swift_retain();
      id v19 = v5;
      id v20 = v18;
      v0[59] = sub_1C244C200(v19, v17, v20);

      swift_release();
      uint64_t v21 = (void *)swift_task_alloc();
      v0[60] = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_1C24D1E70;
      return sub_1C2443284();
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v0[61] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1C24D202C;
    uint64_t v8 = v0[40];
    return ClinicalAccountManager.startRelogin(to:from:)((uint64_t)v5, v8);
  }
}

uint64_t sub_1C24D1E70()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C24D1F6C, 0, 0);
}

uint64_t sub_1C24D1F6C()
{
  uint64_t v1 = *(void **)(v0 + 464);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C24D202C()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 464);
  swift_task_dealloc();

  return MEMORY[0x1F4188298](sub_1C24D2140, 0, 0);
}

uint64_t sub_1C24D2140()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C24D21F8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 504) = v1;
  if (v1) {
    uint64_t v2 = sub_1C24D27B8;
  }
  else {
    uint64_t v2 = sub_1C24D2308;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C24D2308()
{
  uint64_t v1 = *(void **)(v0 + 496);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C24D23C8()
{
  uint64_t v31 = v0;
  uint64_t v2 = (void *)v0[56];
  uint64_t v1 = (void *)v0[57];
  uint64_t v3 = v0[47];
  uint64_t v4 = v0[39];
  swift_willThrow();

  sub_1C254E510();
  sub_1C24E33A4(v4, v3, (uint64_t (*)(void))type metadata accessor for ClinicalAccountLoginUpgradeAction);
  swift_retain();
  id v5 = v1;
  swift_retain();
  id v6 = v1;
  uint64_t v7 = sub_1C254E550();
  os_log_type_t v8 = sub_1C254FA20();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (void *)v0[57];
    uint64_t v28 = v0[52];
    uint64_t v29 = (void (*)(uint64_t, uint64_t))v0[54];
    uint64_t v27 = v0[49];
    uint64_t v10 = v0[47];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v30[0] = v26;
    *(_DWORD *)uint64_t v11 = 136315650;
    uint64_t v12 = sub_1C24D68E0();
    v0[33] = sub_1C21AD354(v12, v13, v30);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v11 + 12) = 2080;
    sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v14 = sub_1C2550810();
    v0[28] = sub_1C21AD354(v14, v15, v30);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    sub_1C24E5B38(v10, (uint64_t (*)(void))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    *(_WORD *)(v11 + 22) = 2080;
    v0[29] = v9;
    id v16 = v9;
    sub_1C2206F9C();
    uint64_t v17 = sub_1C254F4F0();
    v0[30] = sub_1C21AD354(v17, v18, v30);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v7, v8, "%s failed to fetch account %s: %s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v26, -1, -1);
    MEMORY[0x1C875A0B0](v11, -1, -1);

    v29(v28, v27);
  }
  else
  {
    id v19 = (void *)v0[57];
    id v20 = (void (*)(uint64_t, uint64_t))v0[54];
    uint64_t v21 = v0[52];
    uint64_t v22 = v0[49];
    uint64_t v23 = v0[47];

    swift_release_n();
    sub_1C24E5B38(v23, (uint64_t (*)(void))type metadata accessor for ClinicalAccountLoginUpgradeAction);

    v20(v21, v22);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t sub_1C24D27B8()
{
  uint64_t v32 = v0;
  uint64_t v2 = *(void **)(v0 + 496);
  uint64_t v1 = *(void **)(v0 + 504);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 312);
  swift_willThrow();

  sub_1C254E510();
  sub_1C24E33A4(v4, v3, (uint64_t (*)(void))type metadata accessor for ClinicalAccountLoginUpgradeAction);
  swift_retain();
  id v5 = v1;
  swift_retain();
  id v6 = v1;
  uint64_t v7 = sub_1C254E550();
  os_log_type_t v8 = sub_1C254FA20();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void **)(v0 + 504);
    uint64_t v29 = *(void *)(v0 + 408);
    unint64_t v30 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
    uint64_t v27 = *(void **)(v0 + 464);
    uint64_t v28 = *(void *)(v0 + 392);
    uint64_t v25 = *(void *)(v0 + 368);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v31[0] = v26;
    *(_DWORD *)uint64_t v10 = 136315650;
    uint64_t v11 = sub_1C24D68E0();
    *(void *)(v0 + 272) = sub_1C21AD354(v11, v12, v31);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v13 = sub_1C2550810();
    *(void *)(v0 + 280) = sub_1C21AD354(v13, v14, v31);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    sub_1C24E5B38(v25, (uint64_t (*)(void))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    *(_WORD *)(v10 + 22) = 2080;
    *(void *)(v0 + 288) = v9;
    id v15 = v9;
    sub_1C2206F9C();
    uint64_t v16 = sub_1C254F4F0();
    *(void *)(v0 + 296) = sub_1C21AD354(v16, v17, v31);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v7, v8, "%s failed to delete account %s: %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v26, -1, -1);
    MEMORY[0x1C875A0B0](v10, -1, -1);

    v30(v29, v28);
  }
  else
  {
    unint64_t v18 = *(void **)(v0 + 504);
    id v19 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
    uint64_t v20 = *(void *)(v0 + 408);
    uint64_t v21 = *(void *)(v0 + 392);
    uint64_t v22 = *(void *)(v0 + 368);

    swift_release_n();
    sub_1C24E5B38(v22, (uint64_t (*)(void))type metadata accessor for ClinicalAccountLoginUpgradeAction);

    v19(v20, v21);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

void *ClinicalAccountManager.__allocating_init(profile:)(void *a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC870];
  v2[5] = 0;
  v2[6] = 0;
  v2[4] = v3;
  v2[2] = a1;
  v2[3] = objc_msgSend(a1, sel_clinicalAccountStore);
  return v2;
}

uint64_t ClinicalAccountManager.upgradeAccount(_:presentingViewController:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  sub_1C24E38B0(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  os_log_type_t v8 = (char *)&v15 - v7;
  type metadata accessor for ClinicalAccountUpgradeManager();
  swift_allocObject();
  id v9 = a1;
  swift_retain();
  id v10 = a2;
  uint64_t v11 = sub_1C244C200(v9, v3, v10);

  swift_release();
  uint64_t v12 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 1, 1, v12);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = v11;
  sub_1C24D0A0C((uint64_t)v8, (uint64_t)&unk_1EA2DF398, (uint64_t)v13);
  return swift_release();
}

uint64_t ClinicalAccountManager.startRelogin(to:from:)(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  uint64_t v4 = sub_1C254E560();
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  sub_1C254F820();
  v3[12] = sub_1C254F810();
  uint64_t v6 = sub_1C254F7D0();
  v3[13] = v6;
  v3[14] = v5;
  return MEMORY[0x1F4188298](sub_1C24D2EAC, v6, v5);
}

uint64_t sub_1C24D2EAC()
{
  uint64_t v40 = v0;
  uint64_t v1 = (objc_class *)[(objc_class *)v0[3].super_class hk_window];
  if (!v1)
  {
    Class super_class = v0[3].super_class;
    sub_1C254E510();
    swift_retain_n();
    uint64_t v3 = super_class;
    uint64_t v4 = sub_1C254E550();
    os_log_type_t v5 = sub_1C254FA20();
    BOOL v6 = os_log_type_enabled(v4, v5);
    receiver = (void (**)(Class, void))v0[5].receiver;
    Class v7 = v0[5].super_class;
    Class v9 = v0[4].super_class;
    Class v10 = v0[3].super_class;
    if (v6)
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315394;
      uint64_t v39 = v37;
      uint64_t v12 = sub_1C24D68E0();
      Class v38 = v9;
      v0[2].receiver = (id)sub_1C21AD354(v12, v13, &v39);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v11 + 12) = 2080;
      unint64_t v14 = v10;
      id v15 = [(objc_class *)v14 description];
      uint64_t v16 = sub_1C254F470();
      unint64_t v18 = v17;

      v0[2].Class super_class = (Class)sub_1C21AD354(v16, v18, &v39);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v4, v5, "%s attempting to start a relogin session on %s but that view controller has no window", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v37, -1, -1);
      MEMORY[0x1C875A0B0](v11, -1, -1);

      ((void (**)(Class, Class))receiver)[1](v7, v38);
    }
    else
    {
      swift_release_n();

      ((void (**)(Class, Class))receiver)[1](v7, v9);
    }
    uint64_t v1 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F48]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  }
  v0[7].Class super_class = v1;
  Class v19 = v0[3].super_class;
  uint64_t v20 = v0[4].receiver;
  id v21 = v0[3].receiver;
  type metadata accessor for ClinicalAccountDetailsViewController();
  uint64_t v22 = 8 * (swift_dynamicCastClass() != 0);
  uint64_t v23 = (void *)v20[3];
  uint64_t v24 = (objc_class *)type metadata accessor for ClinicalAccountLoginSession();
  uint64_t v25 = (char *)objc_allocWithZone(v24);
  *(void *)&v25[OBJC_IVAR___HRUIClinicalAccountLoginSession_authSession] = 0;
  *(void *)&v25[OBJC_IVAR___HRUIClinicalAccountLoginSession_accountStore] = v23;
  *(void *)&v25[OBJC_IVAR___HRUIClinicalAccountLoginSession_presentationAnchor] = v1;
  *(void *)&v25[OBJC_IVAR___HRUIClinicalAccountLoginSession_funnelContext] = v22;
  v0[1].receiver = v25;
  v0[1].Class super_class = v24;
  id v26 = v23;
  uint64_t v27 = v1;
  v0[8].receiver = objc_msgSendSuper2(v0 + 1, sel_init);
  id v28 = objc_msgSend(v26, sel_healthStore);
  uint64_t v29 = (objc_class *)objc_msgSend(v28, sel_profileIdentifier);
  v0[8].Class super_class = v29;

  uint64_t v30 = swift_allocObject();
  v0[9].receiver = (id)v30;
  *(void *)(v30 + 16) = v21;
  *(void *)(v30 + 24) = v19;
  uint64_t v31 = v19;
  id v32 = v21;
  uint64_t v33 = (objc_class *)swift_task_alloc();
  v0[9].Class super_class = v33;
  *(void *)uint64_t v33 = v0;
  *((void *)v33 + 1) = sub_1C24D32D4;
  uint64_t v35 = (uint64_t)v0[3].receiver;
  uint64_t v34 = (uint64_t)v0[3].super_class;
  return sub_1C2240078(v35, v34, (uint64_t)v29, 0, 0, (uint64_t)sub_1C24E1C98, v30);
}

uint64_t sub_1C24D32D4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[13];
    uint64_t v4 = v2[14];
    os_log_type_t v5 = sub_1C24D346C;
  }
  else
  {
    BOOL v6 = (void *)v2[17];
    swift_release();

    uint64_t v3 = v2[13];
    uint64_t v4 = v2[14];
    os_log_type_t v5 = sub_1C24D33F4;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1C24D33F4()
{
  uint64_t v1 = *(void **)(v0 + 128);

  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C24D346C()
{
  uint64_t v1 = *(void **)(v0 + 136);
  swift_release();
  swift_release();

  if (qword_1EBB6D858 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(v0 + 160);
  uint64_t v4 = *(void **)(v0 + 120);
  uint64_t v3 = *(void **)(v0 + 128);
  os_log_type_t v5 = *(void **)(v0 + 56);
  id v6 = objc_msgSend(*(id *)(v0 + 48), sel_gateway);
  id v7 = sub_1C2453138(v6, v2);
  objc_msgSend(v5, sel_presentViewController_animated_completion_, v7, 1, 0);

  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1C24D3588(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1C24E0AFC(a1, a2, a3, (unint64_t *)&qword_1EA2E1530);
}

void sub_1C24D359C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v7 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, 0, v7, 1, 0xE000000000000000);

  id v9 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = v3;
  _OWORD v10[3] = a1;
  void v10[4] = a2;
  swift_retain();
  id v11 = a1;
  id v12 = a2;
  unint64_t v13 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1C24E2A20;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224DAAC;
  aBlock[3] = &block_descriptor_23_3;
  unint64_t v14 = _Block_copy(aBlock);
  swift_release();
  id v15 = self;
  id v16 = objc_msgSend(v15, sel_actionWithTitle_style_handler_, v13, 1, v14, 0xE000000000000000);
  _Block_release(v14);

  objc_msgSend(v8, sel_addAction_, v16);
  id v17 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  unint64_t v18 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v15, sel_actionWithTitle_style_handler_, v18, 0, 0, 0xE000000000000000);

  objc_msgSend(v8, sel_addAction_, v19);
  objc_msgSend(v12, sel_presentViewController_animated_completion_, v8, 1, 0);
}

void ClinicalAccountManager.presentAccounts(presentingViewController:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1C254D050();
  id v8 = *(void **)(v3 + 16);
  id v9 = objc_msgSend(v8, sel_healthStore);
  uint64_t v10 = sub_1C254D040();
  sub_1C254D940();
  id v11 = objc_msgSend(v8, sel_healthStore);
  unint64_t v18 = (void *)v7;
  uint64_t v19 = MEMORY[0x1E4F672C0];
  v17[0] = v10;
  swift_retain();
  id v12 = (void *)sub_1C254D930();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  if (a2)
  {
    uint64_t v19 = a2;
    uint64_t v20 = a3;
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 1107296256;
    void v17[2] = sub_1C224E544;
    unint64_t v18 = &block_descriptor_70;
    unint64_t v13 = _Block_copy(v17);
    swift_retain();
    swift_release();
  }
  else
  {
    unint64_t v13 = 0;
  }
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v12, 1, v13, v17[0]);
  _Block_release(v13);
  id v14 = objc_allocWithZone((Class)type metadata accessor for SettingsViewController());
  id v15 = v8;
  id v16 = sub_1C22B3558(v15);

  objc_msgSend(v12, sel_pushViewController_animated_, v16, 0);
  swift_release();
}

uint64_t ClinicalAccountManager.newerAccount(of:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1C24D3B28, 0, 0);
}

uint64_t sub_1C24D3B28()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_gateway);
  *(void *)(v0 + 32) = v1;
  if (!v1)
  {
LABEL_15:
    id v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12(0);
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_gatewayVersions);
  if (!v3)
  {
LABEL_14:

    goto LABEL_15;
  }
  uint64_t v4 = v3;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E30A0);
  unint64_t v5 = sub_1C254F710();
  *(void *)(v0 + 40) = v5;

  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(void *)(v0 + 48) = v6;
    if (v6) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C2550620();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 48) = v19;
  if (!v19)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_5:
  uint64_t v7 = 0;
  while (1)
  {
    uint64_t v8 = *(void *)(v0 + 40);
    if ((v8 & 0xC000000000000001) != 0) {
      id v9 = (id)MEMORY[0x1C87588E0](v7);
    }
    else {
      id v9 = *(id *)(v8 + 8 * v7 + 32);
    }
    uint64_t v2 = v9;
    *(void *)(v0 + 56) = v9;
    *(void *)(v0 + 64) = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    uint64_t v10 = *(void **)(v0 + 32);
    id v11 = objc_msgSend(v9, sel_minCompatibleAPIVersion);
    if ((uint64_t)objc_msgSend(v10, sel_minCompatibleAPIVersion) < (uint64_t)v11) {
      break;
    }

    uint64_t v7 = *(void *)(v0 + 64);
    if (v7 == *(void *)(v0 + 48))
    {
      uint64_t v2 = *(void **)(v0 + 32);
      goto LABEL_13;
    }
  }
  id v14 = objc_msgSend(v2, sel_gatewayID);
  uint64_t v15 = sub_1C254F470();
  uint64_t v17 = v16;

  *(void *)(v0 + 72) = v17;
  unint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v18;
  void *v18 = v0;
  v18[1] = sub_1C24D3D7C;
  return sub_1C24D0DB8(v15, v17);
}

uint64_t sub_1C24D3D7C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 88) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1C24D3E9C, 0, 0);
}

id sub_1C24D3E9C()
{
  uint64_t v1 = *(void *)(v0 + 88);

  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 32);
    swift_bridgeObjectRelease();

    uint64_t v3 = *(void *)(v0 + 88);
LABEL_11:
    id v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return (id)v11(v3);
  }
  uint64_t v4 = *(void *)(v0 + 64);
  if (v4 == *(void *)(v0 + 48))
  {
LABEL_10:
    uint64_t v10 = *(void **)(v0 + 32);
    swift_bridgeObjectRelease();

    uint64_t v3 = 0;
    goto LABEL_11;
  }
  while (1)
  {
    uint64_t v5 = *(void *)(v0 + 40);
    if ((v5 & 0xC000000000000001) != 0) {
      id result = (id)MEMORY[0x1C87588E0](v4);
    }
    else {
      id result = *(id *)(v5 + 8 * v4 + 32);
    }
    uint64_t v7 = result;
    *(void *)(v0 + 56) = result;
    *(void *)(v0 + 64) = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = *(void **)(v0 + 32);
    id v9 = objc_msgSend(result, sel_minCompatibleAPIVersion);
    if ((uint64_t)objc_msgSend(v8, sel_minCompatibleAPIVersion) < (uint64_t)v9) {
      break;
    }

    uint64_t v4 = *(void *)(v0 + 64);
    if (v4 == *(void *)(v0 + 48)) {
      goto LABEL_10;
    }
  }
  id v12 = objc_msgSend(v7, sel_gatewayID);
  uint64_t v13 = sub_1C254F470();
  uint64_t v15 = v14;

  *(void *)(v0 + 72) = v15;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1C24D3D7C;
  return (id)sub_1C24D0DB8(v13, v15);
}

uint64_t sub_1C24D4060(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = sub_1C254E560();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v4 = sub_1C254CB40();
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C24D418C, 0, 0);
}

uint64_t sub_1C24D418C()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_identifier);
  sub_1C254CB20();

  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C24D4268;
  uint64_t v3 = *(void *)(v0 + 56);
  v2[16] = *(void *)(v0 + 112);
  v2[17] = v3;
  return MEMORY[0x1F4188298](sub_1C24D65DC, 0, 0);
}

uint64_t sub_1C24D4268(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[16] = v1;
  swift_task_dealloc();
  uint64_t v6 = v4[14];
  uint64_t v7 = v4[12];
  uint64_t v8 = v4[11];
  id v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  uint64_t v9 = v7 + 8;
  uint64_t v10 = v11;
  if (v1)
  {
    v4[17] = v10;
    v4[18] = v9 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v10(v6, v8);
    return MEMORY[0x1F4188298](sub_1C24D4440, 0, 0);
  }
  else
  {
    v10(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v12 = (uint64_t (*)(uint64_t))v5[1];
    return v12(a1);
  }
}

uint64_t sub_1C24D4440()
{
  uint64_t v38 = v0;
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v2 = *(void **)(v0 + 128);
  sub_1C254E510();
  swift_retain();
  id v3 = v1;
  id v4 = v2;
  swift_retain();
  id v5 = v3;
  id v6 = v2;
  uint64_t v7 = sub_1C254E550();
  os_log_type_t v8 = sub_1C254FA20();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void **)(v0 + 128);
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 104);
    uint64_t v30 = *(void *)(v0 + 88);
    uint64_t v34 = *(void *)(v0 + 72);
    uint64_t v35 = *(void *)(v0 + 64);
    uint64_t v36 = *(void *)(v0 + 80);
    os_log_type_t type = v8;
    id v11 = *(void **)(v0 + 48);
    uint64_t v12 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v37 = v32;
    *(_DWORD *)uint64_t v12 = 136315650;
    uint64_t v13 = sub_1C24D68E0();
    *(void *)(v0 + 16) = sub_1C21AD354(v13, v14, &v37);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v12 + 12) = 2080;
    id v15 = objc_msgSend(v11, sel_identifier);
    sub_1C254CB20();

    sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v16 = sub_1C2550810();
    unint64_t v18 = v17;
    v31(v10, v30);
    *(void *)(v0 + 24) = sub_1C21AD354(v16, v18, &v37);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    *(_WORD *)(v12 + 22) = 2080;
    *(void *)(v0 + 32) = v9;
    id v19 = v9;
    sub_1C2206F9C();
    uint64_t v20 = sub_1C254F4F0();
    *(void *)(v0 + 40) = sub_1C21AD354(v20, v21, &v37);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v7, type, "%s failed to refresh account %s, will return potentially stale instance. Error: %s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v32, -1, -1);
    MEMORY[0x1C875A0B0](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v36, v35);
  }
  else
  {
    uint64_t v22 = *(void **)(v0 + 128);
    uint64_t v24 = *(void *)(v0 + 72);
    uint64_t v23 = *(void *)(v0 + 80);
    uint64_t v25 = *(void *)(v0 + 64);
    id v26 = *(void **)(v0 + 48);

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }
  id v27 = *(id *)(v0 + 48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v28 = *(uint64_t (**)(id))(v0 + 8);
  return v28(v27);
}

uint64_t sub_1C24D4828(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v4 = sub_1C254CAD0();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  sub_1C24E38B0(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C24D4958, 0, 0);
}

uint64_t sub_1C24D4958()
{
  if (objc_msgSend(*(id *)(v0 + 128), sel_userStatus))
  {
    id v1 = objc_msgSend(*(id *)(v0 + 128), sel_userStatus);
    id v2 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v1);
  }
  else
  {
    id v2 = 0;
  }
  *(void *)(v0 + 184) = v2;
  if (objc_msgSend(*(id *)(v0 + 128), sel_multiDeviceStatus))
  {
    id v3 = objc_msgSend(*(id *)(v0 + 128), sel_multiDeviceStatus);
    id v4 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v3);
  }
  else
  {
    id v4 = 0;
  }
  *(void *)(v0 + 192) = v4;
  id v5 = *(void **)(v0 + 128);
  uint64_t v6 = *(void **)(*(void *)(v0 + 136) + 24);
  uint64_t v32 = sub_1C254CB00();
  *(void *)(v0 + 200) = v32;
  id v7 = objc_msgSend(v5, sel_firstSharedDate);
  uint64_t v8 = *(void *)(v0 + 176);
  if (v7)
  {
    uint64_t v10 = *(void *)(v0 + 152);
    uint64_t v9 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 144);
    sub_1C254CA80();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v8, v9, v11);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v12(v8, 0, 1, v11);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v11) == 1)
    {
      id v7 = 0;
    }
    else
    {
      uint64_t v13 = *(void *)(v0 + 176);
      uint64_t v14 = *(void *)(v0 + 144);
      uint64_t v15 = *(void *)(v0 + 152);
      id v7 = (id)sub_1C254CA50();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
  }
  else
  {
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 152) + 56);
    v12(*(void *)(v0 + 176), 1, 1, *(void *)(v0 + 144));
  }
  *(void *)(v0 + 208) = v7;
  id v16 = objc_msgSend(*(id *)(v0 + 128), sel_lastSharedDate);
  uint64_t v17 = *(void *)(v0 + 168);
  if (v16)
  {
    unint64_t v18 = v16;
    uint64_t v31 = v6;
    id v19 = v4;
    id v20 = v2;
    uint64_t v21 = *(void *)(v0 + 152);
    uint64_t v22 = *(void *)(v0 + 160);
    uint64_t v23 = *(void *)(v0 + 144);
    sub_1C254CA80();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v17, v22, v23);
    v12(v17, 0, 1, v23);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v17, 1, v23) == 1)
    {
      uint64_t v24 = 0;
    }
    else
    {
      uint64_t v25 = *(void *)(v0 + 168);
      uint64_t v27 = *(void *)(v0 + 144);
      uint64_t v26 = *(void *)(v0 + 152);
      uint64_t v24 = sub_1C254CA50();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    }
    id v2 = v20;
    id v4 = v19;
    uint64_t v6 = v31;
  }
  else
  {
    v12(*(void *)(v0 + 168), 1, 1, *(void *)(v0 + 144));
    uint64_t v24 = 0;
  }
  *(void *)(v0 + 216) = v24;
  id v28 = objc_msgSend(*(id *)(v0 + 128), sel_primaryDeviceName);
  *(void *)(v0 + 224) = v28;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1C24D4D58;
  uint64_t v29 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1C24D5F28;
  *(void *)(v0 + 104) = &block_descriptor_181;
  *(void *)(v0 + 112) = v29;
  objc_msgSend(v6, sel_updateClinicalSharingStatusForAccountWithIdentifier_firstSharedDate_lastSharedDate_userStatus_multiDeviceStatus_primaryDeviceName_completion_, v32, v7, v24, v2, v4, v28, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1C24D4D58()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 232) = v1;
  if (v1) {
    id v2 = sub_1C24D4F20;
  }
  else {
    id v2 = sub_1C24D4E68;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C24D4E68()
{
  id v2 = *(void **)(v0 + 216);
  uint64_t v1 = *(void **)(v0 + 224);
  uint64_t v4 = *(void **)(v0 + 200);
  id v3 = *(void **)(v0 + 208);
  id v5 = *(void **)(v0 + 184);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1C24D4F20()
{
  uint64_t v1 = (void *)v0[28];
  id v3 = (void *)v0[26];
  id v2 = (void *)v0[27];
  id v5 = (void *)v0[24];
  uint64_t v4 = (void *)v0[25];
  uint64_t v6 = (void *)v0[23];
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1C24D4FE8(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return MEMORY[0x1F4188298](sub_1C24D5008, 0, 0);
}

uint64_t sub_1C24D5008()
{
  uint64_t v1 = v0[17];
  sub_1C254CAF0();
  id v2 = objc_allocWithZone(MEMORY[0x1E4F2B500]);
  id v3 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initForClinicalAccountIdentifier_, v3);

  id v5 = objc_msgSend(*(id *)(v1 + 16), sel_healthStore);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B4F0]), sel_initWithHealthStore_recipientIdentifier_, v5, v4);
  v0[18] = v6;

  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1C24D51B4;
  uint64_t v7 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C24E0AE8;
  v0[13] = &block_descriptor_179;
  v0[14] = v7;
  objc_msgSend(v6, sel_fetchSharingAuthorizationsWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C24D51B4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    id v2 = sub_1C24E6468;
  }
  else {
    id v2 = sub_1C24D52C4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C24D52C4()
{
  uint64_t v1 = *(void *)(v0 + 120);
  id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C24D532C(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x1F4188298](sub_1C24D5350, 0, 0);
}

uint64_t sub_1C24D5350()
{
  uint64_t v1 = v0[17];
  sub_1C254CAF0();
  id v2 = objc_allocWithZone(MEMORY[0x1E4F2B500]);
  id v3 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initForClinicalAccountIdentifier_, v3);

  id v5 = objc_msgSend(*(id *)(v1 + 16), sel_healthStore);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B4F0]), sel_initWithHealthStore_recipientIdentifier_, v5, v4);
  v0[18] = v6;

  sub_1C21AB51C(0, &qword_1EA2E0090);
  uint64_t v7 = sub_1C254F700();
  v0[19] = v7;
  v0[2] = v0;
  v0[3] = sub_1C24D5528;
  uint64_t v8 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C24D5F28;
  v0[13] = &block_descriptor_177;
  v0[14] = v8;
  objc_msgSend(v6, sel_addSharingAuthorizations_completion_, v7, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C24D5528()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    id v2 = sub_1C24D56A0;
  }
  else {
    id v2 = sub_1C24D5638;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C24D5638()
{
  uint64_t v1 = *(void **)(v0 + 152);

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C24D56A0()
{
  uint64_t v1 = (void *)v0[19];
  id v2 = (void *)v0[18];
  swift_willThrow();

  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C24D5718(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C2206F9C();
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1C24D57C8(uint64_t a1)
{
  v2[19] = a1;
  v2[20] = v1;
  uint64_t v3 = sub_1C254E560();
  v2[21] = v3;
  v2[22] = *(void *)(v3 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C24D5898, 0, 0);
}

uint64_t sub_1C24D5898()
{
  id v20 = v0;
  sub_1C254E510();
  swift_retain_n();
  uint64_t v1 = sub_1C254E550();
  os_log_type_t v2 = sub_1C254FA10();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v17 = v0[21];
    uint64_t v18 = v0[24];
    uint64_t v15 = v0[19];
    uint64_t v16 = v0[22];
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v19 = v4;
    *(_DWORD *)uint64_t v3 = 136315394;
    uint64_t v5 = sub_1C24D68E0();
    v0[17] = sub_1C21AD354(v5, v6, &v19);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v3 + 12) = 2048;
    v0[18] = v15;
    sub_1C2550120();
    _os_log_impl(&dword_1C21A1000, v1, v2, "%s triggering clinical sharing sync with reason %ld", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v4, -1, -1);
    MEMORY[0x1C875A0B0](v3, -1, -1);

    id v7 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v7(v18, v17);
  }
  else
  {
    uint64_t v8 = v0[24];
    uint64_t v9 = v0[21];
    uint64_t v10 = v0[22];
    swift_release_n();

    id v7 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v7(v8, v9);
  }
  v0[25] = v7;
  uint64_t v11 = v0[19];
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67770]), sel_init);
  v0[26] = v12;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1C24D5B74;
  uint64_t v13 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C24E0BCC;
  v0[13] = &block_descriptor_110;
  v0[14] = v13;
  objc_msgSend(v12, sel_shareHealthDataWithOptions_reason_completion_, 0, v11, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C24D5B74()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 216) = v1;
  if (v1) {
    os_log_type_t v2 = sub_1C24D5E9C;
  }
  else {
    os_log_type_t v2 = sub_1C24D5C84;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C24D5C84()
{
  uint64_t v18 = v0;
  swift_bridgeObjectRelease();
  sub_1C254E510();
  swift_retain_n();
  uint64_t v1 = sub_1C254E550();
  os_log_type_t v2 = sub_1C254FA40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (void *)v0[26];
    uint64_t v15 = v0[23];
    uint64_t v16 = (void (*)(uint64_t, uint64_t))v0[25];
    uint64_t v14 = v0[21];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v17 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = sub_1C24D68E0();
    v0[16] = sub_1C21AD354(v6, v7, &v17);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C21A1000, v1, v2, "%s clinical sharing sync completed", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v5, -1, -1);
    MEMORY[0x1C875A0B0](v4, -1, -1);

    v16(v15, v14);
  }
  else
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[25];
    uint64_t v8 = (void *)v0[26];
    uint64_t v10 = v0[23];
    uint64_t v11 = v0[21];
    swift_release_n();

    v9(v10, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1C24D5E9C()
{
  uint64_t v1 = *(void **)(v0 + 208);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C24D5F28(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    return swift_continuation_throwingResume();
  }
  else
  {
    if (a3)
    {
      sub_1C2206F9C();
      uint64_t v6 = swift_allocError();
      *unint64_t v7 = a3;
      id v8 = a3;
      a1 = v3;
      a2 = v6;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x1F4188208](a1, a2);
  }
}

uint64_t sub_1C24D5FC4()
{
  uint64_t result = sub_1C24D5FE8();
  byte_1EA2E4618 = result & 1;
  return result;
}

uint64_t sub_1C24D5FE8()
{
  error[1] = *(CFErrorRef *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1C254E560();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  uint64_t v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = &v29[-v5];
  SecTaskRef v7 = SecTaskCreateFromSelf(0);
  if (!v7)
  {
    sub_1C254E530();
    uint64_t v24 = sub_1C254E550();
    os_log_type_t v25 = sub_1C254FA20();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_1C21A1000, v24, v25, "Could not get secTask for account login availability", v26, 2u);
      MEMORY[0x1C875A0B0](v26, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
    return 0;
  }
  id v8 = v7;
  error[0] = 0;
  uint64_t v9 = (__CFString *)sub_1C254F430();
  CFTypeRef v10 = SecTaskCopyValueForEntitlement(v8, v9, error);

  if (!v10 || (uint64_t v33 = (uint64_t)v10, swift_unknownObjectRetain(), (swift_dynamicCast() & 1) == 0))
  {
    if (!error[0]) {
      goto LABEL_15;
    }
    uint64_t v13 = error[0];
    sub_1C254E530();
    uint64_t v14 = v13;
    uint64_t v15 = sub_1C254E550();
    os_log_type_t v16 = sub_1C254FA20();
    int v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      int v30 = v17;
      uint64_t v19 = v18;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v33 = v31;
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v32 = sub_1C21AD354(0xD000000000000034, 0x80000001C2589950, &v33);
      sub_1C2550120();
      *(_WORD *)(v19 + 12) = 2080;
      uint64_t v32 = (uint64_t)v14;
      type metadata accessor for CFError(0);
      id v20 = v14;
      uint64_t v21 = sub_1C254F4F0();
      uint64_t v32 = sub_1C21AD354(v21, v22, &v33);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v15, (os_log_type_t)v30, "Could not get value for entitlement %s: %s", (uint8_t *)v19, 0x16u);
      uint64_t v23 = v31;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v23, -1, -1);
      MEMORY[0x1C875A0B0](v19, -1, -1);
    }
    else
    {
    }
    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v4, v0);
    CFErrorRef v27 = error[0];
    if (error[0])
    {
      swift_unknownObjectRelease();

      id v8 = v27;
    }
    else
    {
LABEL_15:
      swift_unknownObjectRelease();
    }

    return 0;
  }
  uint64_t v11 = v32;
  CFErrorRef v12 = error[0];
  swift_unknownObjectRelease();

  if (v12) {
  return v11;
  }
}

uint64_t static ClinicalAccountManager.accountLoginAvailable.getter()
{
  if (qword_1EA2DD8D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return byte_1EA2E4618;
}

uint64_t static ClinicalAccountManager.accountLoginAvailable.setter(char a1)
{
  if (qword_1EA2DD8D8 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  byte_1EA2E4618 = a1 & 1;
  return result;
}

uint64_t (*static ClinicalAccountManager.accountLoginAvailable.modify())()
{
  if (qword_1EA2DD8D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

void *ClinicalAccountManager.init(profile:)(void *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC870];
  v1[5] = 0;
  v1[6] = 0;
  v1[4] = v2;
  v1[2] = a1;
  v1[3] = objc_msgSend(a1, sel_clinicalAccountStore);
  return v1;
}

uint64_t ClinicalAccountManager.fetchAccount(withIdentifier:)(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return MEMORY[0x1F4188298](sub_1C24D65DC, 0, 0);
}

uint64_t sub_1C24D65DC()
{
  uint64_t v1 = *(void **)(v0[17] + 24);
  uint64_t v2 = sub_1C254CB00();
  v0[18] = v2;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1C24D66F4;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C223F118;
  v0[13] = &block_descriptor_7;
  v0[14] = v3;
  objc_msgSend(v1, sel_fetchAccountWithIdentifier_completion_, v2, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C24D66F4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_1C24D6870;
  }
  else {
    uint64_t v2 = sub_1C24D6804;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C24D6804()
{
  uint64_t v1 = *(void *)(v0 + 120);

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C24D6870()
{
  uint64_t v1 = *(void **)(v0 + 144);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C24D68E0()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(void *)(v0 + 40);
  }
  else
  {
    uint64_t v1 = sub_1C24E1354();
    *(void *)(v0 + 40) = v1;
    *(void *)(v0 + 48) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1C24D6978(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t, void, void), uint64_t a6)
{
  uint64_t v10 = sub_1C254E560();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    if (a2)
    {
      unint64_t v28 = sub_1C21EFA84(a2);
      if (v28)
      {
        if (v28 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v34 = sub_1C2550620();
          swift_bridgeObjectRelease();
          if (v34) {
            goto LABEL_8;
          }
        }
        else if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_8:
          sub_1C254E3C0();
          swift_allocObject();
          sub_1C254E3B0();
          unint64_t v29 = swift_bridgeObjectRetain();
          unint64_t v30 = sub_1C24E197C(v29);
          swift_bridgeObjectRelease();
          if (v30 >> 62) {
            uint64_t v31 = sub_1C2550620();
          }
          else {
            uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v32 = v31;
          goto LABEL_16;
        }
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v32 = 0;
LABEL_16:
    a5(v32, 0, 0);
    return;
  }
  uint64_t v37 = v12;
  id v15 = a3;
  sub_1C254E510();
  id v16 = a3;
  swift_retain();
  id v17 = a3;
  swift_retain();
  uint64_t v18 = sub_1C254E550();
  os_log_type_t v19 = sub_1C254FA20();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v35 = a6;
    uint64_t v21 = v20;
    uint64_t v22 = swift_slowAlloc();
    v39[0] = v22;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v36 = a5;
    uint64_t v23 = sub_1C24D68E0();
    uint64_t v38 = sub_1C21AD354(v23, v24, v39);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v38 = (uint64_t)a3;
    id v25 = a3;
    sub_1C2206F9C();
    uint64_t v26 = sub_1C254F4F0();
    uint64_t v38 = sub_1C21AD354(v26, v27, v39);
    sub_1C2550120();
    a5 = v36;
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v18, v19, "%s failed to fetch SCD records, cannot determine number of Wallet Cards. Error: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v22, -1, -1);
    MEMORY[0x1C875A0B0](v21, -1, -1);
  }
  else
  {
    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v37);
  id v33 = a3;
  a5(0, 1, a3);
}

uint64_t sub_1C24D6D58(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v98 = a7;
  uint64_t v99 = a8;
  uint64_t v88 = a5;
  uint64_t v89 = a6;
  uint64_t v85 = a3;
  uint64_t v87 = a2;
  sub_1C24E2B44();
  uint64_t v84 = v12;
  uint64_t v83 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v82 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E2C44();
  uint64_t v90 = *(void *)(v14 - 8);
  uint64_t v91 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v86 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E2F48();
  uint64_t v93 = *(void *)(v16 - 8);
  uint64_t v94 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v92 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E3064();
  uint64_t v96 = *(void *)(v18 - 8);
  uint64_t v97 = v18;
  MEMORY[0x1F4188790](v18);
  id v95 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C254CB40();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v102 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = v23;
  MEMORY[0x1F4188790](v22);
  id v25 = (char *)&v74 - v24;
  uint64_t v26 = sub_1C254E560();
  uint64_t v81 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  unint64_t v28 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E510();
  unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v104 = a1;
  uint64_t v100 = v29;
  uint64_t v101 = v21 + 16;
  v29(v25, a1, v20);
  swift_retain_n();
  unint64_t v30 = sub_1C254E550();
  os_log_type_t v31 = sub_1C254FA40();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v78 = v26;
    uint64_t v33 = v32;
    uint64_t v75 = swift_slowAlloc();
    uint64_t v106 = v75;
    *(_DWORD *)uint64_t v33 = 136315394;
    unint64_t v79 = a4;
    uint64_t v34 = sub_1C24D68E0();
    uint64_t v105 = sub_1C21AD354(v34, v35, &v106);
    uint64_t v103 = v21;
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v36 = sub_1C2550810();
    uint64_t v105 = sub_1C21AD354(v36, v37, &v106);
    uint64_t v21 = v103;
    a4 = v79;
    sub_1C2550120();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);
    _os_log_impl(&dword_1C21A1000, v30, v31, "%s starting to delete account %s", (uint8_t *)v33, 0x16u);
    uint64_t v38 = v75;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v38, -1, -1);
    MEMORY[0x1C875A0B0](v33, -1, -1);

    (*(void (**)(char *, uint64_t))(v81 + 8))(v28, v78);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v20);

    (*(void (**)(char *, uint64_t))(v81 + 8))(v28, v26);
  }
  uint64_t v39 = *(void **)(v9 + 24);
  uint64_t v40 = v102;
  v100(v102, v104, v20);
  uint64_t v41 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v78 = ((v41 + 24) & ~v41) + v80;
  uint64_t v42 = (v41 + 24) & ~v41;
  uint64_t v81 = v42;
  uint64_t v80 = v41 | 7;
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = v20;
  uint64_t v77 = v20;
  uint64_t v45 = v9;
  *(void *)(v43 + 16) = v39;
  uint64_t v46 = *(void (**)(void, void, void))(v21 + 32);
  uint64_t v103 = v21 + 32;
  unint64_t v79 = v46;
  v46(v43 + v42, v40, v44);
  uint64_t v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F1AC28];
  sub_1C24E2DF8(0, &qword_1EA2E4668, MEMORY[0x1E4F1AC28]);
  sub_1C24E2F04(&qword_1EA2E4678, &qword_1EA2E4668, v47);
  id v48 = v39;
  uint64_t v49 = v82;
  sub_1C254EB10();
  sub_1C24E2EBC(&qword_1EA2E46D0, (void (*)(uint64_t))sub_1C24E2B44);
  uint64_t v50 = v84;
  uint64_t v51 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v49, v50);
  uint64_t v106 = v51;
  os_log_type_t v52 = (void *)swift_allocObject();
  uint64_t v76 = v45;
  uint64_t v53 = v85;
  v52[2] = v45;
  v52[3] = v53;
  v52[4] = a4;
  swift_retain();
  sub_1C223E0BC(v53);
  sub_1C254E9D0();
  char v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F1AAE0];
  sub_1C24E2DF8(0, &qword_1EA2E4690, MEMORY[0x1E4F1AAE0]);
  sub_1C24E2D4C();
  uint64_t v85 = v55;
  sub_1C24E2F04(&qword_1EA2E46A0, &qword_1EA2E4690, v54);
  sub_1C24E2EBC(&qword_1EA2E4698, (void (*)(uint64_t))sub_1C24E2D4C);
  unint64_t v56 = v86;
  uint64_t v57 = v77;
  sub_1C254EC60();
  swift_release();
  swift_release();
  id v58 = (void *)swift_allocObject();
  uint64_t v59 = v88;
  uint64_t v60 = v89;
  v58[2] = v88;
  v58[3] = v60;
  v58[4] = v87;
  sub_1C223E0BC(v59);
  sub_1C24E2FF4();
  sub_1C24E2EBC(&qword_1EA2E46B8, (void (*)(uint64_t))sub_1C24E2C44);
  uint64_t v61 = v91;
  char v62 = v92;
  sub_1C254EC00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v56, v61);
  uint64_t v63 = swift_allocObject();
  uint64_t v64 = v76;
  *(void *)(v63 + 16) = sub_1C24E3238;
  *(void *)(v63 + 24) = v64;
  swift_retain();
  sub_1C254E9D0();
  sub_1C24E2EBC(&qword_1EA2E46C8, (void (*)(uint64_t))sub_1C24E2F48);
  uint64_t v66 = v94;
  uint64_t v65 = v95;
  sub_1C254EC60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v62, v66);
  uint64_t v67 = v102;
  v100(v102, v104, v57);
  unint64_t v68 = (v78 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = v64;
  v79(v69 + v81, v67, v57);
  uint64_t v70 = (void *)(v69 + v68);
  uint64_t v71 = v99;
  *uint64_t v70 = v98;
  v70[1] = v71;
  sub_1C24E2EBC(&qword_1EA2E46D8, (void (*)(uint64_t))sub_1C24E3064);
  swift_retain();
  swift_retain();
  uint64_t v72 = v97;
  sub_1C254EC10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v65, v72);
  swift_beginAccess();
  sub_1C254E9F0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C24D7940(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v98 = a3;
  uint64_t v99 = sub_1C254CB40();
  MEMORY[0x1F4188790](v99);
  uint64_t v78 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E38B0(0, &qword_1EA2E4710, MEMORY[0x1E4F27990], MEMORY[0x1E4F1AC08]);
  uint64_t v81 = *(v6 - 1);
  id v82 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v79 = (char *)&v76 - v7;
  sub_1C24E3914();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v80 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E39C0();
  uint64_t v84 = *(void *)(v12 - 8);
  uint64_t v85 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E3AAC();
  uint64_t v87 = *(void *)(v15 - 8);
  uint64_t v88 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v86 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E3B98();
  uint64_t v90 = *(void *)(v17 - 8);
  uint64_t v91 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v89 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E3CF4();
  uint64_t v94 = *(void *)(v19 - 8);
  uint64_t v95 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v92 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E3DE0();
  uint64_t v96 = *(void *)(v21 - 8);
  uint64_t v97 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v93 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1C254CAD0();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E38B0(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v27 - 8);
  unint64_t v29 = (char *)&v76 - v28;
  unint64_t v30 = &selRef_setActionTitle_;
  if (objc_msgSend(a1, sel_isSharingToProvider))
  {
    uint64_t v76 = v10;
    uint64_t v77 = v9;
    uint64_t v31 = a2;
    uint64_t v32 = v98;
    uint64_t v33 = v14;
    id v34 = objc_msgSend(a1, sel_clinicalSharingStatus);
    id v35 = objc_msgSend(v34, sel_lastSharedDate);

    if (v35)
    {
      sub_1C254CA80();

      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v29, v26, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v29, 0, 1, v23);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v29, 1, v23) != 1)
      {
        sub_1C24E53FC((uint64_t)v29, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
        uint64_t v14 = v33;
        uint64_t v36 = v32;
        uint64_t v37 = v31;
        unint64_t v30 = (char **)0x1F8AAD000;
        uint64_t v38 = &selRef_setActionTitle_;
        goto LABEL_9;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v29, 1, 1, v23);
    }
    sub_1C24E53FC((uint64_t)v29, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
    uint64_t v14 = v33;
    a2 = v31;
    uint64_t v9 = v77;
    uint64_t v10 = v76;
    unint64_t v30 = &selRef_setActionTitle_;
  }
  uint64_t v37 = a2;
  uint64_t v39 = v9;
  uint64_t v38 = &selRef_setActionTitle_;
  id v40 = objc_msgSend(a1, sel_clinicalSharingStatus);
  id v41 = [v40 v30[480]];

  uint64_t v36 = v98;
  if (v41 != (id)4)
  {
    id v42 = objc_msgSend(a1, (SEL)&selRef_orderedResearchStudySources + 4);
    id v43 = [v42 v30[480]];

    if (v43 != (id)5)
    {
      id v72 = objc_msgSend(a1, sel_identifier);
      sub_1C254CB20();

      long long v73 = v79;
      sub_1C254EAD0();
      type metadata accessor for ClinicalAccountManager.FlowError();
      sub_1C24E2EBC(&qword_1EA2E4670, (void (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError);
      uint64_t v74 = v80;
      id v75 = v82;
      sub_1C254EAB0();
      (*(void (**)(char *, id))(v81 + 8))(v73, v75);
      sub_1C24E2EBC(&qword_1EA2E4778, (void (*)(uint64_t))sub_1C24E3914);
      uint64_t v70 = sub_1C254EBC0();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v74, v39);
      return v70;
    }
  }
LABEL_9:
  uint64_t v44 = (void *)swift_allocObject();
  v44[2] = v37;
  v44[3] = v36;
  v44[4] = a1;
  sub_1C24E34A0();
  swift_allocObject();
  sub_1C223E0BC(v37);
  id v45 = a1;
  id v82 = v45;
  uint64_t v46 = v30;
  uint64_t v47 = sub_1C254EAF0();
  uint64_t v98 = v47;
  id v48 = [v45 v38[479]];
  unint64_t v79 = (char *)[v48 (SEL)v46 + 3670];

  uint64_t v100 = v47;
  uint64_t v49 = v83;
  swift_retain();
  sub_1C254E9D0();
  sub_1C24E2D4C();
  uint64_t v51 = v50;
  sub_1C24E2EBC(&qword_1EA2E46F8, (void (*)(uint64_t))sub_1C24E34A0);
  uint64_t v78 = (char *)MEMORY[0x1E4F1AAE8];
  uint64_t v52 = sub_1C24E2EBC(&qword_1EA2E4698, (void (*)(uint64_t))sub_1C24E2D4C);
  uint64_t v53 = v14;
  uint64_t v80 = v51;
  uint64_t v81 = v52;
  sub_1C254EC60();
  swift_release();
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = sub_1C24E3F28;
  *(void *)(v54 + 24) = v49;
  swift_retain();
  sub_1C254E9D0();
  sub_1C24E2EBC(&qword_1EA2E4730, (void (*)(uint64_t))sub_1C24E39C0);
  uint64_t v55 = v85;
  unint64_t v56 = v86;
  sub_1C254EC60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v53, v55);
  uint64_t v57 = swift_allocObject();
  id v58 = v79;
  *(void *)(v57 + 16) = v49;
  *(void *)(v57 + 24) = v58;
  sub_1C24E3C84();
  sub_1C24E2EBC(&qword_1EA2E4748, (void (*)(uint64_t))sub_1C24E3AAC);
  sub_1C24E2EBC(&qword_1EA2E4750, (void (*)(uint64_t))sub_1C24E3C84);
  swift_retain();
  uint64_t v60 = v88;
  uint64_t v59 = v89;
  sub_1C254ECA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v56, v60);
  uint64_t v61 = swift_allocObject();
  char v62 = v82;
  *(void *)(v61 + 16) = v82;
  type metadata accessor for ClinicalAccountManager.FlowError();
  sub_1C24E2EBC(&qword_1EA2E4760, (void (*)(uint64_t))sub_1C24E3B98);
  sub_1C24E2EBC(&qword_1EA2E4670, (void (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError);
  id v63 = v62;
  uint64_t v65 = v91;
  uint64_t v64 = v92;
  sub_1C254EC90();
  swift_release();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v59, v65);
  uint64_t v66 = swift_allocObject();
  *(void *)(v66 + 16) = sub_1C24E6464;
  *(void *)(v66 + 24) = v49;
  swift_retain();
  sub_1C254E9D0();
  sub_1C24E2EBC(&qword_1EA2E4770, (void (*)(uint64_t))sub_1C24E3CF4);
  uint64_t v67 = v93;
  uint64_t v68 = v95;
  sub_1C254EC60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v64, v68);
  sub_1C24E2EBC(&qword_1EA2E4780, (void (*)(uint64_t))sub_1C24E3DE0);
  uint64_t v69 = v97;
  uint64_t v70 = sub_1C254EBC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v67, v69);
  return v70;
}

uint64_t sub_1C24D8700@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (a2) {
    a2();
  }
  sub_1C24E2FF4();
  uint64_t v8 = *(int *)(v7 + 48);
  uint64_t v9 = sub_1C254CB40();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a4, a1, v9);
  *(void *)(a4 + v8) = a3;
  return result;
}

uint64_t sub_1C24D878C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a2;
  uint64_t v5 = sub_1C254CB40();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  sub_1C24E340C();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)(a3 + 24);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v15 + v14, (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(void *)(v15 + ((v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v20;
  sub_1C24E34A0();
  sub_1C24E2EBC(&qword_1EA2E46F8, (void (*)(uint64_t))sub_1C24E34A0);
  id v16 = v13;
  sub_1C254EB10();
  sub_1C24E2EBC(&qword_1EA2E4700, (void (*)(uint64_t))sub_1C24E340C);
  uint64_t v17 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v17;
}

uint64_t sub_1C24D8A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void *), uint64_t a5)
{
  uint64_t v70 = a5;
  uint64_t v71 = a4;
  uint64_t v66 = a2;
  uint64_t v72 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v72 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v72);
  uint64_t v10 = &v60[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v60[-v11];
  uint64_t v13 = sub_1C254E560();
  uint64_t v68 = *(void *)(v13 - 8);
  uint64_t v69 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  id v16 = &v60[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14);
  uint64_t v67 = &v60[-v17];
  uint64_t v18 = type metadata accessor for ClinicalAccountManager.FlowError();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  id v63 = &v60[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v64 = &v60[-v23];
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v65 = &v60[-v25];
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = &v60[-v26];
  sub_1C24E32AC();
  MEMORY[0x1F4188790](v28 - 8);
  unint64_t v30 = &v60[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C24E33A4(a1, (uint64_t)v30, (uint64_t (*)(void))sub_1C24E32AC);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(v30, 1, v18) == 1)
  {
    sub_1C254E510();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v10, a3, v72);
    swift_retain_n();
    uint64_t v31 = sub_1C254E550();
    os_log_type_t v32 = sub_1C254FA40();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v67 = (unsigned char *)swift_slowAlloc();
      v73[0] = (uint64_t)v67;
      *(_DWORD *)uint64_t v33 = 136315394;
      uint64_t v34 = sub_1C24D68E0();
      uint64_t v74 = sub_1C21AD354(v34, v35, v73);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
      uint64_t v36 = v72;
      uint64_t v37 = sub_1C2550810();
      uint64_t v74 = sub_1C21AD354(v37, v38, v73);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v36);
      _os_log_impl(&dword_1C21A1000, v31, v32, "%s successfully deleted account %s", (uint8_t *)v33, 0x16u);
      uint64_t v39 = v67;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v39, -1, -1);
      MEMORY[0x1C875A0B0](v33, -1, -1);
    }
    else
    {
      swift_release_n();
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v72);
    }

    (*(void (**)(unsigned char *, uint64_t))(v68 + 8))(v16, v69);
    return v71(0, 0);
  }
  else
  {
    sub_1C24E3340((uint64_t)v30, (uint64_t)v27);
    sub_1C254E510();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v12, a3, v72);
    sub_1C24E33A4((uint64_t)v27, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
    swift_retain_n();
    id v40 = sub_1C254E550();
    os_log_type_t v41 = sub_1C254FA20();
    int v42 = v41;
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v43 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      uint64_t v74 = v62;
      *(_DWORD *)uint64_t v43 = 136315650;
      int v61 = v42;
      uint64_t v44 = sub_1C24D68E0();
      v73[0] = sub_1C21AD354(v44, v45, &v74);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
      uint64_t v46 = v72;
      uint64_t v47 = sub_1C2550810();
      v73[0] = sub_1C21AD354(v47, v48, &v74);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v46);
      *(_WORD *)(v43 + 22) = 2080;
      uint64_t v72 = v43 + 24;
      uint64_t v49 = v64;
      uint64_t v50 = v65;
      sub_1C24E33A4((uint64_t)v65, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
      sub_1C24E33A4((uint64_t)v49, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
      sub_1C25508F0();
      id v51 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v52 = sub_1C254F4F0();
      unint64_t v54 = v53;
      sub_1C24E5B38((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
      v73[0] = sub_1C21AD354(v52, v54, &v74);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      sub_1C24E5B38((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
      _os_log_impl(&dword_1C21A1000, v40, (os_log_type_t)v61, "%s deleting account %s failed with error: %s", (uint8_t *)v43, 0x20u);
      uint64_t v55 = v62;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v55, -1, -1);
      MEMORY[0x1C875A0B0](v43, -1, -1);
    }
    else
    {
      swift_release_n();
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v72);
      sub_1C24E5B38((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
    }

    (*(void (**)(unsigned char *, uint64_t))(v68 + 8))(v67, v69);
    uint64_t v57 = *(void **)&v27[*(int *)(v18 + 24)];
    uint64_t v58 = v27[*(int *)(v18 + 20)];
    id v59 = v57;
    v71(v58, v57);

    return sub_1C24E5B38((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
  }
}

uint64_t sub_1C24D92E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v74 = a2;
  uint64_t v75 = a3;
  sub_1C24E340C();
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v65 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E4D28();
  uint64_t v69 = *(void *)(v8 - 8);
  uint64_t v70 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v68 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E4DC8();
  uint64_t v72 = *(void *)(v10 - 8);
  uint64_t v73 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v71 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C254CB40();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v78 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v60 - v16;
  uint64_t v18 = sub_1C254E560();
  uint64_t v64 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E510();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v80 = a1;
  uint64_t v76 = v21;
  uint64_t v77 = v13 + 16;
  v21(v17, a1, v12);
  swift_retain_n();
  uint64_t v22 = sub_1C254E550();
  os_log_type_t v23 = sub_1C254FA40();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v63 = v14;
    uint64_t v25 = v24;
    uint64_t v61 = swift_slowAlloc();
    v82[0] = v61;
    *(_DWORD *)uint64_t v25 = 136315394;
    uint64_t v79 = v13;
    uint64_t v26 = sub_1C24D68E0();
    uint64_t v81 = sub_1C21AD354(v26, v27, v82);
    uint64_t v62 = (void (*)(uint64_t, char *, uint64_t))v18;
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v28 = sub_1C2550810();
    uint64_t v81 = sub_1C21AD354(v28, v29, v82);
    uint64_t v13 = v79;
    sub_1C2550120();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
    _os_log_impl(&dword_1C21A1000, v22, v23, "%s Starting to stop sharing of account %s", (uint8_t *)v25, 0x16u);
    uint64_t v30 = v61;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v30, -1, -1);
    uint64_t v31 = v25;
    uint64_t v14 = v63;
    MEMORY[0x1C875A0B0](v31, -1, -1);

    (*(void (**)(char *, void (*)(uint64_t, char *, uint64_t)))(v64 + 8))(v20, v62);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);

    (*(void (**)(char *, uint64_t))(v64 + 8))(v20, v18);
  }
  uint64_t v32 = v4;
  uint64_t v60 = *(void **)(v4 + 24);
  id v33 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 4);
  uint64_t v34 = v78;
  v76(v78, v80, v12);
  uint64_t v35 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v63 = v35 | 7;
  uint64_t v36 = (v35 + 24) & ~v35;
  uint64_t v64 = v36;
  unint64_t v37 = (v14 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v61 = v37;
  unint64_t v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v4;
  id v40 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  uint64_t v79 = v13 + 32;
  uint64_t v62 = v40;
  v40(v39 + v36, v34, v12);
  *(void *)(v39 + v37) = 4;
  os_log_type_t v41 = v60;
  *(void *)(v39 + v38) = v60;
  *(void *)(v39 + ((v38 + 15) & 0xFFFFFFFFFFFFFFF8)) = v33;
  sub_1C24E34A0();
  sub_1C24E2EBC(&qword_1EA2E46F8, (void (*)(uint64_t))sub_1C24E34A0);
  swift_retain();
  id v42 = v41;
  id v43 = v33;
  uint64_t v44 = v65;
  sub_1C254EB10();
  sub_1C24E2EBC(&qword_1EA2E4700, (void (*)(uint64_t))sub_1C24E340C);
  uint64_t v45 = v67;
  uint64_t v46 = sub_1C254EBC0();

  (*(void (**)(char *, uint64_t))(v66 + 8))(v44, v45);
  v82[0] = v46;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = sub_1C24E5070;
  *(void *)(v47 + 24) = v32;
  swift_retain();
  sub_1C254E9D0();
  sub_1C24E2D4C();
  sub_1C24E2EBC(&qword_1EA2E4698, (void (*)(uint64_t))sub_1C24E2D4C);
  unint64_t v48 = v68;
  uint64_t v49 = v12;
  sub_1C254EC60();
  swift_release();
  swift_release();
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = sub_1C24E50AC;
  *(void *)(v50 + 24) = v32;
  swift_retain();
  sub_1C254E9D0();
  sub_1C24E2EBC(&qword_1EA2E47D0, (void (*)(uint64_t))sub_1C24E4D28);
  uint64_t v52 = v70;
  id v51 = v71;
  sub_1C254EC60();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v48, v52);
  unint64_t v53 = v78;
  v76(v78, v80, v49);
  uint64_t v54 = v61;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = v32;
  v62(v55 + v64, v53, v49);
  unint64_t v56 = (void *)(v55 + v54);
  uint64_t v57 = v75;
  *unint64_t v56 = v74;
  v56[1] = v57;
  sub_1C24E2EBC(&qword_1EA2E47D8, (void (*)(uint64_t))sub_1C24E4DC8);
  swift_retain();
  swift_retain();
  uint64_t v58 = v73;
  sub_1C254EC10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v51, v58);
  swift_beginAccess();
  sub_1C254E9F0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C24D9CFC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  sub_1C24E340C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  uint64_t v23 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CAF0();
  id v11 = objc_allocWithZone(MEMORY[0x1E4F2B500]);
  uint64_t v12 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_initForClinicalAccountIdentifier_, v12);

  id v14 = objc_msgSend(*(id *)(v2 + 16), sel_healthStore);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B4F0]), sel_initWithHealthStore_recipientIdentifier_, v14, v13);

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v16 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v2;
  *(void *)(v17 + 24) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v17 + v16, (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_1C24E34A0();
  sub_1C24E2EBC(&qword_1EA2E46F8, (void (*)(uint64_t))sub_1C24E34A0);
  swift_retain();
  id v18 = v15;
  sub_1C254EB10();
  sub_1C24E2EBC(&qword_1EA2E4700, (void (*)(uint64_t))sub_1C24E340C);
  uint64_t v19 = v22;
  uint64_t v20 = sub_1C254EBC0();

  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v19);
  return v20;
}

uint64_t sub_1C24DA01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *), uint64_t a5)
{
  uint64_t v73 = a5;
  uint64_t v74 = a4;
  uint64_t v69 = a2;
  uint64_t v75 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v9 = &v61[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v61[-v11];
  uint64_t v13 = sub_1C254E560();
  uint64_t v71 = *(void *)(v13 - 8);
  uint64_t v72 = v13;
  MEMORY[0x1F4188790](v13);
  id v15 = &v61[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  uint64_t v70 = &v61[-v17];
  uint64_t v18 = type metadata accessor for ClinicalAccountManager.FlowError();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v65 = &v61[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v21);
  uint64_t v66 = &v61[-v22];
  MEMORY[0x1F4188790](v23);
  uint64_t v68 = &v61[-v24];
  MEMORY[0x1F4188790](v25);
  unint64_t v27 = &v61[-v26];
  sub_1C24E32AC();
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v30 = &v61[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C24E33A4(a1, (uint64_t)v30, (uint64_t (*)(void))sub_1C24E32AC);
  uint64_t v31 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48);
  uint64_t v67 = v18;
  if (v31(v30, 1, v18) == 1)
  {
    sub_1C254E510();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v75);
    swift_retain_n();
    uint64_t v32 = sub_1C254E550();
    os_log_type_t v33 = sub_1C254FA40();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v70 = (unsigned char *)swift_slowAlloc();
      v76[0] = (uint64_t)v70;
      *(_DWORD *)uint64_t v34 = 136315394;
      uint64_t v35 = sub_1C24D68E0();
      v77[0] = sub_1C21AD354(v35, v36, v76);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
      uint64_t v37 = v75;
      uint64_t v38 = sub_1C2550810();
      v77[0] = sub_1C21AD354(v38, v39, v76);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v37);
      _os_log_impl(&dword_1C21A1000, v32, v33, "%s successfully stopped sharing of account %s", (uint8_t *)v34, 0x16u);
      id v40 = v70;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v40, -1, -1);
      MEMORY[0x1C875A0B0](v34, -1, -1);
    }
    else
    {
      swift_release_n();
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v75);
    }

    (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v15, v72);
    return v74(0);
  }
  else
  {
    sub_1C24E3340((uint64_t)v30, (uint64_t)v27);
    sub_1C254E510();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16))(v12, a3, v75);
    sub_1C24E33A4((uint64_t)v27, (uint64_t)v68, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
    swift_retain_n();
    os_log_type_t v41 = sub_1C254E550();
    os_log_type_t v42 = sub_1C254FA20();
    int v43 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      v77[0] = v63;
      *(_DWORD *)uint64_t v44 = 136315650;
      uint64_t v64 = v27;
      int v62 = v43;
      uint64_t v45 = sub_1C24D68E0();
      v76[0] = sub_1C21AD354(v45, v46, v77);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
      uint64_t v47 = v75;
      uint64_t v48 = sub_1C2550810();
      v76[0] = sub_1C21AD354(v48, v49, v77);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v47);
      *(_WORD *)(v44 + 22) = 2080;
      uint64_t v50 = v68;
      id v51 = v66;
      sub_1C24E33A4((uint64_t)v68, (uint64_t)v66, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
      sub_1C24E33A4((uint64_t)v51, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
      sub_1C25508F0();
      id v52 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v53 = sub_1C254F4F0();
      unint64_t v55 = v54;
      sub_1C24E5B38((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
      uint64_t v56 = v53;
      unint64_t v27 = v64;
      v76[0] = sub_1C21AD354(v56, v55, v77);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      sub_1C24E5B38((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
      _os_log_impl(&dword_1C21A1000, v41, (os_log_type_t)v62, "%s stopping sharing of account %s failed with error: %s", (uint8_t *)v44, 0x20u);
      uint64_t v57 = v63;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v57, -1, -1);
      MEMORY[0x1C875A0B0](v44, -1, -1);
    }
    else
    {
      swift_release_n();
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v75);
      sub_1C24E5B38((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
    }

    (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v70, v72);
    sub_1C24E2EBC(&qword_1EA2E4670, (void (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError);
    id v59 = (void *)swift_allocError();
    sub_1C24E33A4((uint64_t)v27, v60, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
    v74(v59);

    return sub_1C24E5B38((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
  }
}

uint64_t sub_1C24DA960(void *a1, void *a2, void *a3)
{
  sub_1C24E38B0(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = 0;
  _OWORD v10[3] = 0;
  void v10[4] = a2;
  v10[5] = a3;
  v10[6] = a1;
  id v11 = a2;
  id v12 = a3;
  id v13 = a1;
  sub_1C24D0A0C((uint64_t)v8, (uint64_t)&unk_1EA2E4878, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1C24DAAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  return MEMORY[0x1F4188298](sub_1C24DAAC8, 0, 0);
}

uint64_t sub_1C24DAAC8()
{
  if (qword_1EBB6D858 != -1) {
    swift_once();
  }
  *(void *)(v0 + 40) = objc_msgSend(*(id *)(v0 + 16), sel_gateway);
  sub_1C254F820();
  *(void *)(v0 + 48) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C24DABA8, v2, v1);
}

uint64_t sub_1C24DABA8()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v3 = (void *)v0[3];
  uint64_t v2 = (void *)v0[4];
  swift_release();
  id v4 = sub_1C2453138(v1, v2);
  objc_msgSend(v3, sel_presentViewController_animated_completion_, v4, 1, 0);

  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C24DAC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1C2223E3C;
  return ClinicalAccountManager.startRelogin(to:from:)(a2, a3);
}

uint64_t sub_1C24DACF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = sub_1C254CB40();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C24DADB8, 0, 0);
}

uint64_t sub_1C24DADB8()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_identifier);
  sub_1C254CB20();

  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C24DAE80;
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  return sub_1C24DAFD8(v3, v4, v5);
}

uint64_t sub_1C24DAE80()
{
  uint64_t v1 = *(void *)(*v0 + 64);
  uint64_t v2 = *(void *)(*v0 + 56);
  uint64_t v3 = *(void *)(*v0 + 48);
  uint64_t v6 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_1C24DAFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  uint64_t v5 = sub_1C254CB40();
  v4[12] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[13] = v6;
  v4[14] = *(void *)(v6 + 64);
  v4[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C24DB0A4, 0, 0);
}

uint64_t sub_1C24DB0A4()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[11];
  uint64_t v18 = (void *)v0[10];
  uint64_t v6 = v0[8];
  uint64_t v17 = (void *)v0[9];
  id v7 = objc_msgSend(*(id *)(v5 + 24), sel_healthStore);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AD28]), sel_initWithHealthStore_, v7);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v6, v3);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v9, v1, v3);
  *(void *)(v11 + v10) = v17;
  *(void *)(v11 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  v0[6] = sub_1C24E561C;
  v0[7] = v11;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1C22FD2A0;
  v0[5] = &block_descriptor_159;
  id v12 = _Block_copy(v0 + 2);
  swift_retain();
  id v13 = v17;
  id v14 = v18;
  swift_release();
  objc_msgSend(v8, sel_fetchCloudSyncStatusWithCompletion_, v12);
  _Block_release(v12);

  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_1C24DB2A0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9)
{
  int v28 = a1;
  uint64_t v29 = a9;
  uint64_t v12 = sub_1C254CB40();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = &v27[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C24E38B0(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = &v27[-v17];
  uint64_t v19 = sub_1C254F840();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, a7, v12);
  unint64_t v20 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v21 = (v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 0;
  *(void *)(v22 + 24) = 0;
  *(unsigned char *)(v22 + 32) = v28;
  *(void *)(v22 + 40) = a6;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v13 + 32))(v22 + v20, v15, v12);
  *(void *)(v22 + v21) = a8;
  uint64_t v23 = v29;
  *(void *)(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8)) = v29;
  swift_retain();
  id v24 = a8;
  id v25 = v23;
  sub_1C24D0A0C((uint64_t)v18, (uint64_t)&unk_1EA2E4820, v22);
  return swift_release();
}

uint64_t sub_1C24DB4E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 32) = a7;
  *(void *)(v8 + 40) = a8;
  *(void *)(v8 + 16) = a5;
  *(void *)(v8 + 24) = a6;
  *(unsigned char *)(v8 + 104) = a4;
  uint64_t v9 = sub_1C254CB40();
  *(void *)(v8 + 48) = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)(v8 + 56) = v10;
  *(void *)(v8 + 64) = *(void *)(v10 + 64);
  *(void *)(v8 + 72) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C24DB5B8, 0, 0);
}

uint64_t sub_1C24DB5B8()
{
  if (*(unsigned char *)(v0 + 104) == 1)
  {
    if (qword_1EBB6D858 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void *)(v0 + 64);
    uint64_t v1 = *(void *)(v0 + 72);
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v5 = *(void **)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 16);
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 16))(v1, *(void *)(v0 + 24), v3);
    unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    unint64_t v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v9 = swift_allocObject();
    *(void *)(v0 + 80) = v9;
    *(void *)(v9 + 16) = v6;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v9 + v7, v1, v3);
    *(void *)(v9 + v8) = v5;
    sub_1C254F820();
    swift_retain();
    id v10 = v5;
    *(void *)(v0 + 88) = sub_1C254F810();
    uint64_t v12 = sub_1C254F7D0();
    return MEMORY[0x1F4188298](sub_1C24DB7AC, v12, v11);
  }
  else
  {
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1C24DB850;
    uint64_t v15 = *(void *)(v0 + 24);
    uint64_t v14 = *(void *)(v0 + 32);
    return sub_1C24DB960(v15, v14);
  }
}

uint64_t sub_1C24DB7AC()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = (void *)v0[5];
  uint64_t v3 = v0[3];
  swift_release();
  sub_1C24545BC(v3, v2, (uint64_t)&unk_1EA2E4838, v1);
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C24DB850()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C24DB960(uint64_t a1, uint64_t a2)
{
  v3[28] = a2;
  v3[29] = v2;
  v3[27] = a1;
  uint64_t v4 = sub_1C254CB40();
  v3[30] = v4;
  v3[31] = *(void *)(v4 - 8);
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  uint64_t v5 = sub_1C254E560();
  v3[35] = v5;
  v3[36] = *(void *)(v5 - 8);
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C24DBAB8, 0, 0);
}

uint64_t sub_1C24DBAB8()
{
  uint64_t v34 = v0;
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[31];
  sub_1C254E510();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[40] = v5;
  v0[41] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v2, v1, v3);
  swift_retain_n();
  uint64_t v6 = sub_1C254E550();
  os_log_type_t v7 = sub_1C254FA40();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v30 = v0[36];
    uint64_t v8 = v0[34];
    uint64_t v31 = v0[35];
    uint64_t v32 = v0[39];
    uint64_t v9 = v0[30];
    uint64_t v28 = v0[31];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v33 = v29;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v11 = sub_1C24D68E0();
    v0[25] = sub_1C21AD354(v11, v12, &v33);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v13 = sub_1C2550810();
    v0[26] = sub_1C21AD354(v13, v14, &v33);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v15(v8, v9);
    _os_log_impl(&dword_1C21A1000, v6, v7, "%s will replace account %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v29, -1, -1);
    MEMORY[0x1C875A0B0](v10, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v16(v32, v31);
  }
  else
  {
    uint64_t v17 = v0[39];
    uint64_t v18 = v0[35];
    uint64_t v19 = v0[36];
    uint64_t v20 = v0[34];
    uint64_t v21 = v0[30];
    uint64_t v22 = v0[31];
    swift_release_n();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v15(v20, v21);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v16(v17, v18);
  }
  v0[42] = v16;
  v0[43] = v15;
  uint64_t v23 = v0[28];
  id v24 = *(void **)(v0[29] + 24);
  uint64_t v25 = sub_1C254CB00();
  v0[44] = v25;
  v0[2] = v0;
  v0[3] = sub_1C24DBE5C;
  uint64_t v26 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C24D5F28;
  v0[13] = &block_descriptor_170;
  v0[14] = v26;
  objc_msgSend(v24, sel_replaceAccountWithNewAccountForAccountWithIdentifier_usingCredentialWithPersistentID_completion_, v25, v23, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C24DBE5C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 360) = v1;
  if (v1) {
    uint64_t v2 = sub_1C24DC290;
  }
  else {
    uint64_t v2 = sub_1C24DBF6C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C24DBF6C()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 216);

  sub_1C254E510();
  v1(v2, v4, v3);
  swift_retain_n();
  uint64_t v5 = sub_1C254E550();
  os_log_type_t v6 = sub_1C254FA40();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v25 = *(void *)(v0 + 304);
    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    uint64_t v24 = *(void *)(v0 + 280);
    uint64_t v7 = *(void *)(v0 + 264);
    uint64_t v8 = *(void *)(v0 + 240);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = sub_1C24D68E0();
    *(void *)(v0 + 184) = sub_1C21AD354(v10, v11, &v27);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v12 = sub_1C2550810();
    *(void *)(v0 + 192) = sub_1C21AD354(v12, v13, &v27);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    v23(v7, v8);
    _os_log_impl(&dword_1C21A1000, v5, v6, "%s successfully replaced account %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v22, -1, -1);
    MEMORY[0x1C875A0B0](v9, -1, -1);

    v26(v25, v24);
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 336);
    unint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    uint64_t v16 = *(void *)(v0 + 304);
    uint64_t v17 = *(void *)(v0 + 280);
    uint64_t v18 = *(void *)(v0 + 264);
    uint64_t v19 = *(void *)(v0 + 240);
    swift_release_n();
    v14(v18, v19);

    v15(v16, v17);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1C24DC290()
{
  unint64_t v39 = v0;
  uint64_t v2 = (void *)v0[44];
  uint64_t v1 = (void *)v0[45];
  uint64_t v3 = (void (*)(uint64_t, uint64_t, uint64_t))v0[40];
  uint64_t v4 = v0[32];
  uint64_t v5 = v0[30];
  uint64_t v6 = v0[27];
  swift_willThrow();

  sub_1C254E510();
  v3(v4, v6, v5);
  swift_retain();
  id v7 = v1;
  swift_retain();
  id v8 = v1;
  uint64_t v9 = sub_1C254E550();
  os_log_type_t v10 = sub_1C254FA20();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (void *)v0[45];
    uint64_t v32 = (void (*)(uint64_t, uint64_t))v0[43];
    uint64_t v35 = v0[37];
    uint64_t v37 = (void (*)(uint64_t, uint64_t))v0[42];
    uint64_t v34 = v0[35];
    uint64_t v12 = v0[32];
    uint64_t v13 = v0[30];
    uint64_t v14 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    v38[0] = v33;
    *(_DWORD *)uint64_t v14 = 136315650;
    uint64_t v15 = sub_1C24D68E0();
    v0[21] = sub_1C21AD354(v15, v16, v38);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v14 + 12) = 2080;
    sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v17 = sub_1C2550810();
    v0[19] = sub_1C21AD354(v17, v18, v38);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    v32(v12, v13);
    *(_WORD *)(v14 + 22) = 2080;
    v0[20] = v11;
    id v19 = v11;
    sub_1C2206F9C();
    sub_1C25508F0();
    id v20 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v21 = sub_1C254F510();
    v0[22] = sub_1C21AD354(v21, v22, v38);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v9, v10, "%s failed to replace account %s. Error: %s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v33, -1, -1);
    MEMORY[0x1C875A0B0](v14, -1, -1);

    uint64_t v23 = v34;
    uint64_t v24 = v35;
  }
  else
  {
    uint64_t v25 = (void *)v0[45];
    uint64_t v26 = (void (*)(uint64_t, uint64_t))v0[43];
    uint64_t v36 = v0[37];
    uint64_t v37 = (void (*)(uint64_t, uint64_t))v0[42];
    uint64_t v27 = v0[35];
    uint64_t v28 = v0[32];
    uint64_t v29 = v0[30];

    swift_release_n();
    v26(v28, v29);

    uint64_t v24 = v36;
    uint64_t v23 = v27;
  }
  v37(v24, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

uint64_t sub_1C24DC6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1C2223E3C;
  return sub_1C24DB960(a2, a3);
}

uint64_t ClinicalAccountManager.upgrade(account:from:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C24DC784, 0, 0);
}

uint64_t sub_1C24DC784()
{
  uint64_t v2 = (void *)v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = (void *)v0[2];
  type metadata accessor for ClinicalAccountUpgradeManager();
  swift_allocObject();
  id v4 = v3;
  swift_retain();
  id v5 = v2;
  v0[5] = sub_1C244C200(v4, v1, v5);

  swift_release();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[6] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C24DC878;
  return sub_1C2443284();
}

uint64_t sub_1C24DC878()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C229D240, 0, 0);
}

uint64_t sub_1C24DC974()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C2223E3C;
  return sub_1C2443284();
}

uint64_t sub_1C24DCA04@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_1C24E2DF8(0, &qword_1EA2E4668, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  id v11 = a1;
  uint64_t result = sub_1C254EAF0();
  *a3 = result;
  return result;
}

void sub_1C24DCB80(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  id v11 = (void *)sub_1C254CB00();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_1C24E4C00;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23447F8;
  aBlock[3] = &block_descriptor_124_0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_fetchAccountWithIdentifier_completion_, v11, v14);
  _Block_release(v14);
}

uint64_t sub_1C24DCD58(void *a1, void *a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a3;
  uint64_t v8 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E2DF8(0, &qword_1EA2E47B8, MEMORY[0x1E4FBC448]);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v23 - v16;
  if (a1)
  {
    *(void *)uint64_t v15 = a1;
    swift_storeEnumTagMultiPayload();
    id v18 = a1;
    uint64_t v17 = v15;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a5, v8);
    if (a2) {
      id v19 = a2;
    }
    else {
      id v19 = objc_msgSend(self, sel_hk_error_userInfo_, 0, 0);
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v11, v8);
    uint64_t v20 = type metadata accessor for ClinicalAccountManager.FlowError();
    v17[*(int *)(v20 + 20)] = 1;
    *(void *)&v17[*(int *)(v20 + 24)] = v19;
    swift_storeEnumTagMultiPayload();
    id v21 = a2;
  }
  v24(v17);
  return sub_1C24E4CB0((uint64_t)v17);
}

uint64_t sub_1C24DCF94@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v12 + v11, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(void *)(v12 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  sub_1C24E34A0();
  swift_allocObject();
  id v13 = a1;
  uint64_t result = sub_1C254EAF0();
  *a4 = result;
  return result;
}

void sub_1C24DD110(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v17 = a5;
  uint64_t v9 = sub_1C254CB40();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (void *)sub_1C254CB00();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_1C24E3780;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C22AE944;
  aBlock[3] = &block_descriptor_55_2;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_deleteAccountWithIdentifier_deletionReason_completion_, v12, v17, v15);
  _Block_release(v15);
}

uint64_t sub_1C24DD2F0(char a1, void *a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  sub_1C24E3804();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (qword_1EBB6D840 != -1) {
      swift_once();
    }
    sub_1C23CCB04(11, 0, 0);
    uint64_t v12 = sub_1C254CB40();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, a5, v12);
    swift_storeEnumTagMultiPayload();
    a3(v11);
  }
  else
  {
    if (a2)
    {
      id v13 = a2;
    }
    else
    {
      uint64_t v14 = self;
      uint64_t v15 = (void *)sub_1C254F430();
      id v13 = objc_msgSend(v14, sel_hk_error_description_, 0, v15);
    }
    uint64_t v16 = sub_1C254CB40();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v11, a5, v16);
    uint64_t v17 = type metadata accessor for ClinicalAccountManager.FlowError();
    v11[*(int *)(v17 + 20)] = 6;
    *(void *)&v11[*(int *)(v17 + 24)] = v13;
    swift_storeEnumTagMultiPayload();
    id v18 = a2;
    id v19 = v13;
    a3(v11);
  }
  return sub_1C24E5B38((uint64_t)v11, (uint64_t (*)(void))sub_1C24E3804);
}

uint64_t sub_1C24DD544@<X0>(uint64_t *a1@<X8>)
{
  sub_1C24E5CA4();
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_1C254EAF0();
  *a1 = result;
  return result;
}

void sub_1C24DD5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = *(void **)(a3 + 24);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1C22290C4;
  *(void *)(v8 + 24) = v6;
  void v10[4] = sub_1C24E5D38;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  void v10[2] = sub_1C233F830;
  _OWORD v10[3] = &block_descriptor_201;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_fetchAllAccountsWithCompletion_, v9);
  _Block_release(v9);
}

uint64_t sub_1C24DD6C4(unint64_t a1, void *a2, uint64_t (*a3)(void, void), uint64_t a4)
{
  uint64_t v8 = sub_1C254E560();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v34 = a3;
    id v12 = a2;
    sub_1C254E510();
    id v13 = a2;
    id v14 = a2;
    uint64_t v15 = sub_1C254E550();
    os_log_type_t v16 = sub_1C254FA20();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v33 = a4;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v32 = v8;
      id v18 = (uint8_t *)v17;
      uint64_t v31 = (void *)swift_slowAlloc();
      *(_DWORD *)id v18 = 138412290;
      id v19 = a2;
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v35 = v20;
      sub_1C2550120();
      uint64_t v21 = v31;
      *uint64_t v31 = v20;

      _os_log_impl(&dword_1C21A1000, v15, v16, "HKClinicalAccountStore.upgradableAccountsPublisher failed with error: %@", v18, 0xCu);
      sub_1C2315AD8(0, (unint64_t *)&qword_1EBB6F230, (unint64_t *)&qword_1EBB6F510, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v21, -1, -1);
      unint64_t v22 = v18;
      uint64_t v8 = v32;
      MEMORY[0x1C875A0B0](v22, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    a3 = v34;
  }
  if (!a1) {
    return a3(MEMORY[0x1E4FBC860], 0);
  }
  uint64_t v35 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C2550620();
    uint64_t v23 = result;
    if (result) {
      goto LABEL_9;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v29 = MEMORY[0x1E4FBC860];
    goto LABEL_22;
  }
  uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v23) {
    goto LABEL_21;
  }
LABEL_9:
  if (v23 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v23; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v26 = (id)MEMORY[0x1C87588E0](i, a1);
    }
    else {
      id v26 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v27 = v26;
    id v28 = objc_msgSend(v26, sel_newerAvailableGateway);

    if (v28)
    {
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = v35;
LABEL_22:
  a3(v29, 0);
  return swift_release();
}

uint64_t sub_1C24DDA80(void (*a1)(char *), uint64_t a2, void (*a3)(uint64_t), uint64_t a4, void *a5)
{
  sub_1C24E3804();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    a3(v9);
  }
  id v12 = objc_msgSend(a5, sel_identifier);
  sub_1C254CB20();

  swift_storeEnumTagMultiPayload();
  a1(v11);
  return sub_1C24E5B38((uint64_t)v11, (uint64_t (*)(void))sub_1C24E3804);
}

uint64_t sub_1C24DDB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v5 = sub_1C254CB40();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E340C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  uint64_t v29 = v10;
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *(void **)(a2 + 24);
  id v26 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v14 = (v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v13, v8, v5);
  *(void *)(v17 + v14) = 5;
  id v18 = v27;
  *(void *)(v17 + v15) = v27;
  id v19 = v26;
  *(void *)(v17 + v16) = v26;
  sub_1C24E34A0();
  sub_1C24E2EBC(&qword_1EA2E46F8, (void (*)(uint64_t))sub_1C24E34A0);
  swift_retain();
  id v20 = v18;
  id v21 = v19;
  sub_1C254EB10();
  sub_1C24E2EBC(&qword_1EA2E4700, (void (*)(uint64_t))sub_1C24E340C);
  uint64_t v22 = v28;
  uint64_t v23 = sub_1C254EBC0();

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v12, v22);
  *uint64_t v30 = v23;
  return result;
}

uint64_t sub_1C24DDE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v18[1] = a4;
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  sub_1C24E340C();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_1C24E34A0();
  sub_1C24E2EBC(&qword_1EA2E46F8, (void (*)(uint64_t))sub_1C24E34A0);
  swift_retain();
  sub_1C254EB10();
  sub_1C24E2EBC(&qword_1EA2E4700, (void (*)(uint64_t))sub_1C24E340C);
  uint64_t v16 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v16;
}

uint64_t sub_1C24DE0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  id v52 = a4;
  uint64_t v39 = a3;
  uint64_t v41 = a1;
  uint64_t v7 = type metadata accessor for ClinicalAccountManager.FlowError();
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v48 = *(void *)(v49 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v47 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254CB40();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E340C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v44 = v13;
  uint64_t v45 = v14;
  MEMORY[0x1F4188790](v13);
  os_log_type_t v42 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24E42E8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v50 = v16;
  uint64_t v51 = v17;
  MEMORY[0x1F4188790](v16);
  unint64_t v46 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = *(void **)(a2 + 24);
  id v38 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a3);
  id v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v43 = v9;
  v19(v12, a1, v9);
  unint64_t v20 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v21 = (v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v23 + v20, v12, v9);
  uint64_t v24 = v40;
  *(void *)(v23 + v21) = v39;
  *(void *)(v23 + v22) = v24;
  uint64_t v25 = v38;
  *(void *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8)) = v38;
  sub_1C24E34A0();
  sub_1C24E2EBC(&qword_1EA2E46F8, (void (*)(uint64_t))sub_1C24E34A0);
  swift_retain();
  id v26 = v24;
  id v27 = v25;
  uint64_t v28 = v42;
  sub_1C254EB10();
  sub_1C24E2EBC(&qword_1EA2E4700, (void (*)(uint64_t))sub_1C24E340C);
  uint64_t v29 = v44;
  uint64_t v30 = sub_1C254EBC0();

  (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v29);
  uint64_t v53 = v30;
  uint64_t v31 = v47;
  sub_1C24E33A4(v41, v47, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
  unint64_t v32 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v33 = swift_allocObject();
  sub_1C24E3340(v31, v33 + v32);
  sub_1C24E2D4C();
  sub_1C24E2EBC(&qword_1EA2E4698, (void (*)(uint64_t))sub_1C24E2D4C);
  uint64_t v34 = v46;
  sub_1C254EC40();
  swift_release();
  swift_release();
  sub_1C24E2EBC(&qword_1EA2E4798, (void (*)(uint64_t))sub_1C24E42E8);
  uint64_t v35 = v50;
  uint64_t v36 = sub_1C254EBC0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v34, v35);
  *id v52 = v36;
  return result;
}

uint64_t sub_1C24DE620(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ClinicalAccountManager.FlowError();
  sub_1C24E2EBC(&qword_1EA2E4670, (void (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError);
  swift_allocError();
  sub_1C24E33A4(a2, v3, (uint64_t (*)(void))type metadata accessor for ClinicalAccountManager.FlowError);
  return swift_willThrow();
}

id sub_1C24DE6C0@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C24E38B0(0, &qword_1EA2E4788, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - v7;
  uint64_t v9 = *a1;
  v16[1] = v9;
  id v10 = v9;
  sub_1C2206F9C();
  uint64_t v11 = type metadata accessor for ClinicalAccountManager.FlowError();
  char v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  if (v12)
  {
    v13(v8, 0, 1, v11);
    return (id)sub_1C24E3340((uint64_t)v8, a3);
  }
  else
  {
    v13(v8, 1, 1, v11);
    sub_1C24E53FC((uint64_t)v8, &qword_1EA2E4788, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError);
    id v15 = objc_msgSend(a2, sel_identifier);
    sub_1C254CB20();

    *(unsigned char *)(a3 + *(int *)(v11 + 20)) = 5;
    *(void *)(a3 + *(int *)(v11 + 24)) = v9;
    return v9;
  }
}

uint64_t sub_1C24DE880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v9 = sub_1C254CB40();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __n128 v12 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, a2, v9, v12);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v14, v13, v9);
  uint64_t v18 = v24;
  *(void *)(v17 + v15) = v23;
  *(void *)(v17 + v16) = a4;
  *(void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v18;
  sub_1C24E34A0();
  swift_allocObject();
  swift_retain();
  id v19 = a4;
  id v20 = v18;
  uint64_t result = sub_1C254EAF0();
  *uint64_t v25 = result;
  return result;
}

void sub_1C24DEA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  id v58 = a6;
  uint64_t v59 = a5;
  uint64_t v57 = a2;
  uint64_t v55 = a1;
  uint64_t v10 = sub_1C254CB40();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v53 = v12;
  unint64_t v54 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = sub_1C254E560();
  uint64_t v52 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E510();
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v51(v15, a4, v10);
  swift_retain_n();
  id v19 = sub_1C254E550();
  os_log_type_t v20 = sub_1C254FA10();
  int v50 = v20;
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v56 = a3;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v48 = a4;
    uint64_t v23 = v22;
    uint64_t v46 = swift_slowAlloc();
    aBlock[0] = v46;
    *(_DWORD *)uint64_t v23 = 136315650;
    uint64_t v49 = a7;
    os_log_t v45 = v19;
    uint64_t v24 = sub_1C24D68E0();
    uint64_t v60 = sub_1C21AD354(v24, v25, aBlock);
    uint64_t v47 = v16;
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v26 = sub_1C2550810();
    uint64_t v60 = sub_1C21AD354(v26, v27, aBlock);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    *(_WORD *)(v23 + 22) = 2080;
    id v28 = (id)HKClinicalSharingUserStatusToString();
    uint64_t v29 = sub_1C254F470();
    unint64_t v31 = v30;

    uint64_t v32 = v29;
    a7 = v49;
    uint64_t v60 = sub_1C21AD354(v32, v31, aBlock);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    os_log_t v33 = v45;
    _os_log_impl(&dword_1C21A1000, v45, (os_log_type_t)v50, "%s updating user status of account %s to %s", (uint8_t *)v23, 0x20u);
    uint64_t v34 = v46;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v34, -1, -1);
    uint64_t v35 = v23;
    a4 = v48;
    MEMORY[0x1C875A0B0](v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v47);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v16);
  }
  uint64_t v36 = (void *)sub_1C254CB00();
  uint64_t v37 = v54;
  v51(v54, a4, v10);
  unint64_t v38 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v39 = (v53 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v56;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v40 + v38, v37, v10);
  *(void *)(v40 + v39) = v59;
  uint64_t v41 = (void *)(v40 + ((v39 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v42 = v57;
  void *v41 = v55;
  v41[1] = v42;
  aBlock[4] = (uint64_t)sub_1C24E46C8;
  aBlock[5] = v40;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C22AE944;
  aBlock[3] = (uint64_t)&block_descriptor_98;
  uint64_t v43 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v58, sel_updateClinicalSharingStatusForAccountWithIdentifier_firstSharedDate_lastSharedDate_userStatus_multiDeviceStatus_primaryDeviceName_completion_, v36, 0, 0, a7, 0, 0, v43);
  _Block_release(v43);
}

uint64_t sub_1C24DEFB4(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v81 = a7;
  uint64_t v77 = a5;
  uint64_t v83 = a4;
  sub_1C24E3804();
  uint64_t v80 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = ((char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v82 = sub_1C254CB40();
  uint64_t v13 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  unint64_t v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v71 - v17;
  uint64_t v19 = sub_1C254E560();
  uint64_t v78 = *(void *)(v19 - 8);
  uint64_t v79 = v19;
  MEMORY[0x1F4188790](v19);
  BOOL v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v71 - v23;
  if ((a1 & 1) != 0 || !a2)
  {
    sub_1C254E510();
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v50 = v82;
    v49(v15, v83, v82);
    swift_retain_n();
    uint64_t v51 = sub_1C254E550();
    os_log_type_t v52 = sub_1C254FA00();
    LODWORD(v75) = v52;
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      uint64_t v76 = a6;
      uint64_t v54 = v53;
      uint64_t v73 = swift_slowAlloc();
      v84[0] = v73;
      *(_DWORD *)uint64_t v54 = 136315650;
      uint64_t v74 = v49;
      os_log_t v72 = v51;
      uint64_t v55 = sub_1C24D68E0();
      os_log_t v85 = (os_log_t)sub_1C21AD354(v55, v56, v84);
      os_log_t v71 = v12;
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2080;
      sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
      uint64_t v12 = v71;
      uint64_t v57 = sub_1C2550810();
      os_log_t v85 = (os_log_t)sub_1C21AD354(v57, v58, v84);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v50);
      *(_WORD *)(v54 + 22) = 2080;
      id v59 = (id)HKClinicalSharingUserStatusToString();
      uint64_t v60 = sub_1C254F470();
      unint64_t v62 = v61;

      uint64_t v63 = v60;
      uint64_t v49 = v74;
      os_log_t v85 = (os_log_t)sub_1C21AD354(v63, v62, v84);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      os_log_t v64 = v72;
      _os_log_impl(&dword_1C21A1000, v72, (os_log_type_t)v75, "%s successfully updated user status of account %s to %s", (uint8_t *)v54, 0x20u);
      uint64_t v65 = v73;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v65, -1, -1);
      uint64_t v66 = v54;
      a6 = v76;
      MEMORY[0x1C875A0B0](v66, -1, -1);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v21, v79);
      uint64_t v67 = v82;
    }
    else
    {
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v50);

      (*(void (**)(char *, uint64_t))(v78 + 8))(v21, v79);
      uint64_t v67 = v50;
    }
    v49((char *)v12, v83, v67);
    swift_storeEnumTagMultiPayload();
    a6(v12);
  }
  else
  {
    id v25 = a2;
    sub_1C254E510();
    uint64_t v26 = v82;
    uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v75(v18, v83, v82);
    id v27 = a2;
    swift_retain();
    id v28 = a2;
    swift_retain();
    uint64_t v29 = sub_1C254E550();
    os_log_type_t v30 = sub_1C254FA20();
    LODWORD(v74) = v30;
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v73 = v13 + 16;
      uint64_t v32 = v31;
      os_log_t v72 = (os_log_t)swift_slowAlloc();
      os_log_t v85 = v72;
      *(_DWORD *)uint64_t v32 = 136315906;
      os_log_t v71 = v29;
      uint64_t v33 = sub_1C24D68E0();
      v84[0] = sub_1C21AD354(v33, v34, (uint64_t *)&v85);
      uint64_t v76 = a6;
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
      uint64_t v35 = sub_1C2550810();
      v84[0] = sub_1C21AD354(v35, v36, (uint64_t *)&v85);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v82);
      *(_WORD *)(v32 + 22) = 2080;
      id v37 = (id)HKClinicalSharingUserStatusToString();
      uint64_t v38 = sub_1C254F470();
      unint64_t v40 = v39;

      v84[0] = sub_1C21AD354(v38, v40, (uint64_t *)&v85);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 32) = 2080;
      v84[0] = (uint64_t)a2;
      id v41 = a2;
      id v42 = a2;
      sub_1C2206F9C();
      sub_1C25508F0();
      id v43 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v44 = sub_1C254F4F0();
      unint64_t v46 = v45;

      uint64_t v47 = v44;
      a6 = v76;
      v84[0] = sub_1C21AD354(v47, v46, (uint64_t *)&v85);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      uint64_t v29 = v71;
      _os_log_impl(&dword_1C21A1000, v71, (os_log_type_t)v74, "%s failed to update user status of account %s to %s with error: %s", (uint8_t *)v32, 0x2Au);
      os_log_t v48 = v72;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v48, -1, -1);
      uint64_t v26 = v82;
      MEMORY[0x1C875A0B0](v32, -1, -1);
    }
    else
    {
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v26);
    }
    (*(void (**)(char *, uint64_t))(v78 + 8))(v24, v79);
    v75((char *)v12, v83, v26);
    uint64_t v68 = type metadata accessor for ClinicalAccountManager.FlowError();
    *((unsigned char *)&v12->isa + *(int *)(v68 + 20)) = 2;
    *(Class *)((char *)&v12->isa + *(int *)(v68 + 24)) = (Class)a2;
    swift_storeEnumTagMultiPayload();
    id v69 = a2;
    a6(v12);
  }
  return sub_1C24E5B38((uint64_t)v12, (uint64_t (*)(void))sub_1C24E3804);
}

uint64_t sub_1C24DF88C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __n128 v11 = MEMORY[0x1F4188790](v8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8, v11);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  sub_1C24E34A0();
  swift_allocObject();
  swift_retain();
  id v14 = a2;
  uint64_t result = sub_1C254EAF0();
  *a4 = result;
  return result;
}

void sub_1C24DFA00(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v36 = a5;
  uint64_t v9 = sub_1C254CB40();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v35 = v11;
  id v37 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C254E560();
  uint64_t v33 = *(void *)(v12 - 8);
  uint64_t v34 = v12;
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E510();
  swift_retain_n();
  unint64_t v15 = sub_1C254E550();
  os_log_type_t v16 = sub_1C254FA10();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v32 = a4;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v29 = a1;
    uint64_t v20 = v19;
    aBlock[0] = v19;
    uint64_t v30 = v9;
    uint64_t v31 = a2;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v21 = sub_1C24D68E0();
    uint64_t v38 = sub_1C21AD354(v21, v22, aBlock);
    uint64_t v9 = v30;
    a2 = v31;
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v15, v16, "%s revoking authorization identifiers", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v23 = v20;
    a1 = v29;
    MEMORY[0x1C875A0B0](v23, -1, -1);
    uint64_t v24 = v18;
    a4 = v32;
    MEMORY[0x1C875A0B0](v24, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v34);
  id v25 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v37, v36, v9);
  unint64_t v26 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  id v27 = (char *)swift_allocObject();
  *((void *)v27 + 2) = a3;
  *((void *)v27 + 3) = a1;
  *((void *)v27 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v27[v26], v25, v9);
  aBlock[4] = (uint64_t)sub_1C24E4260;
  aBlock[5] = (uint64_t)v27;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C22AE944;
  aBlock[3] = (uint64_t)&block_descriptor_83_0;
  id v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a4, sel_revokeWithCompletion_, v28);
  _Block_release(v28);
}

uint64_t sub_1C24DFDB8(char a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v55 = a6;
  sub_1C24E3804();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C254E560();
  uint64_t v53 = *(void *)(v14 - 8);
  uint64_t v54 = v14;
  MEMORY[0x1F4188790](v14);
  os_log_type_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v49 - v18;
  if ((a1 & 1) != 0 || !a2)
  {
    uint64_t v52 = v11;
    sub_1C254E510();
    swift_retain_n();
    uint64_t v36 = sub_1C254E550();
    os_log_type_t v37 = sub_1C254FA00();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v51 = a4;
      unint64_t v39 = (uint8_t *)v38;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v56 = v40;
      *(_DWORD *)unint64_t v39 = 136315138;
      uint64_t v50 = a5;
      uint64_t v41 = sub_1C24D68E0();
      uint64_t v57 = sub_1C21AD354(v41, v42, &v56);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v36, v37, "%s successfully revoked authorization identifiers", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v40, -1, -1);
      id v43 = v39;
      a4 = v51;
      MEMORY[0x1C875A0B0](v43, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v16, v54);
    uint64_t v47 = sub_1C254CB40();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v13, v55, v47);
    swift_storeEnumTagMultiPayload();
    a4(v13);
  }
  else
  {
    id v20 = a2;
    sub_1C254E510();
    id v21 = a2;
    swift_retain();
    id v22 = a2;
    swift_retain();
    uint64_t v23 = sub_1C254E550();
    os_log_type_t v24 = sub_1C254FA20();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v52 = v11;
      uint64_t v26 = v25;
      uint64_t v50 = swift_slowAlloc();
      uint64_t v57 = v50;
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v51 = a4;
      uint64_t v27 = sub_1C24D68E0();
      uint64_t v56 = sub_1C21AD354(v27, v28, &v57);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2080;
      uint64_t v49 = v26 + 14;
      uint64_t v56 = (uint64_t)a2;
      id v29 = a2;
      id v30 = a2;
      sub_1C2206F9C();
      sub_1C25508F0();
      id v31 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v32 = sub_1C254F4F0();
      unint64_t v34 = v33;

      uint64_t v56 = sub_1C21AD354(v32, v34, &v57);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v23, v24, "%s failed to revoke authorization identifiers with error: %s", (uint8_t *)v26, 0x16u);
      uint64_t v35 = v50;
      a4 = v51;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v35, -1, -1);
      MEMORY[0x1C875A0B0](v26, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v19, v54);
    uint64_t v44 = sub_1C254CB40();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v13, v55, v44);
    uint64_t v45 = type metadata accessor for ClinicalAccountManager.FlowError();
    v13[*(int *)(v45 + 20)] = 3;
    *(void *)&v13[*(int *)(v45 + 24)] = a2;
    swift_storeEnumTagMultiPayload();
    id v46 = a2;
    a4(v13);
  }
  return sub_1C24E5B38((uint64_t)v13, (uint64_t (*)(void))sub_1C24E3804);
}

uint64_t sub_1C24E039C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a4;
  v8[11] = a5;
  uint64_t v11 = sub_1C254CB40();
  v8[14] = v11;
  v8[15] = *(void *)(v11 - 8);
  v8[16] = swift_task_alloc();
  uint64_t v12 = sub_1C254E560();
  v8[17] = v12;
  v8[18] = *(void *)(v12 - 8);
  v8[19] = swift_task_alloc();
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EA2E47E8 + dword_1EA2E47E8);
  uint64_t v13 = (void *)swift_task_alloc();
  v8[20] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_1C24E051C;
  return v15(a5, a6);
}

uint64_t sub_1C24E051C()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C24E06AC;
  }
  else {
    uint64_t v2 = sub_1C24E0630;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C24E0630()
{
  (*(void (**)(void))(v0 + 96))(0);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C24E06AC()
{
  id v43 = v0;
  uint64_t v1 = (void *)v0[21];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[11];
  sub_1C254E510();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  id v6 = v1;
  swift_retain();
  id v7 = v1;
  swift_retain();
  uint64_t v8 = sub_1C254E550();
  os_log_type_t v9 = sub_1C254FA20();
  if (os_log_type_enabled(v8, v9))
  {
    log = v8;
    uint64_t v10 = (void *)v0[21];
    uint64_t v39 = v0[18];
    uint64_t v40 = v0[17];
    uint64_t v41 = v0[19];
    uint64_t v11 = v0[15];
    uint64_t v36 = v0[16];
    uint64_t v12 = v0[14];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v42 = v37;
    *(_DWORD *)uint64_t v13 = 136315650;
    uint64_t v14 = sub_1C24D68E0();
    v0[6] = sub_1C21AD354(v14, v15, &v42);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v13 + 12) = 2080;
    sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v16 = sub_1C2550810();
    v0[7] = sub_1C21AD354(v16, v17, &v42);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v36, v12);
    *(_WORD *)(v13 + 22) = 2080;
    v0[8] = v10;
    id v18 = v10;
    id v19 = v10;
    sub_1C2206F9C();
    sub_1C25508F0();
    id v20 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v21 = sub_1C254F4F0();
    unint64_t v23 = v22;

    v0[9] = sub_1C21AD354(v21, v23, &v42);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, log, v9, "%s failed to update clinical sharing device status of account %s with error: %s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v37, -1, -1);
    MEMORY[0x1C875A0B0](v13, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
  }
  else
  {
    os_log_type_t v24 = (void *)v0[21];
    uint64_t v26 = v0[18];
    uint64_t v25 = v0[19];
    uint64_t v28 = v0[16];
    uint64_t v27 = v0[17];
    uint64_t v29 = v0[14];
    uint64_t v30 = v0[15];
    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
  }
  id v31 = (void *)v0[21];
  uint64_t v32 = (void (*)(void *))v0[12];
  id v33 = v31;
  v32(v31);

  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v34 = (uint64_t (*)(void))v0[1];
  return v34();
}

uint64_t sub_1C24E0AE8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1C24E0AFC(a1, a2, a3, &qword_1EA2E0090);
}

uint64_t sub_1C24E0AFC(uint64_t a1, uint64_t a2, void *a3, unint64_t *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C2206F9C();
    uint64_t v6 = swift_allocError();
    *id v7 = a3;
    id v8 = a3;
    return MEMORY[0x1F4188208](v4, v6);
  }
  else
  {
    sub_1C21AB51C(0, a4);
    **(void **)(*(void *)(v4 + 64) + 40) = sub_1C254F710();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1C24E0BCC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1C24E0AFC(a1, a2, a3, &qword_1EA2E00B0);
}

uint64_t sub_1C24E0BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_1C24E34A0();
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_1C254EAF0();
  *a3 = result;
  return result;
}

uint64_t sub_1C24E0D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  sub_1C24E38B0(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v18 - v12;
  uint64_t v14 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = 0;
  *((void *)v16 + 3) = 0;
  *((void *)v16 + 4) = a3;
  *((void *)v16 + 5) = a1;
  *((void *)v16 + 6) = a2;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v16[v15], (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain();
  swift_retain();
  sub_1C24D0A0C((uint64_t)v13, (uint64_t)&unk_1EA2E47A8, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1C24E0F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a6;
  v7[4] = a7;
  _OWORD v7[2] = a5;
  sub_1C24E3804();
  void v7[5] = v8;
  v7[6] = swift_task_alloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v7[7] = v9;
  *uint64_t v9 = v7;
  v9[1] = sub_1C24E1028;
  return sub_1C24D57C8(5);
}

uint64_t sub_1C24E1028()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C24E1230;
  }
  else {
    uint64_t v2 = sub_1C24E113C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C24E113C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[4];
  uint64_t v3 = (void (*)(uint64_t))v0[2];
  uint64_t v4 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v1, v2, v4);
  swift_storeEnumTagMultiPayload();
  v3(v1);
  sub_1C24E5B38(v0[6], (uint64_t (*)(void))sub_1C24E3804);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C24E1230()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  uint64_t v4 = (void (*)(uint64_t))v0[2];
  uint64_t v5 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v2, v3, v5);
  uint64_t v6 = type metadata accessor for ClinicalAccountManager.FlowError();
  *(unsigned char *)(v2 + *(int *)(v6 + 20)) = 4;
  *(void *)(v2 + *(int *)(v6 + 24)) = v1;
  swift_storeEnumTagMultiPayload();
  id v7 = v1;
  v4(v2);

  sub_1C24E5B38(v0[6], (uint64_t (*)(void))sub_1C24E3804);
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1C24E1354()
{
  return 0;
}

uint64_t sub_1C24E141C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  sub_1C24E38B0(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_1C254F820();
  swift_retain();
  id v11 = a3;
  id v12 = a4;
  uint64_t v13 = sub_1C254F810();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = MEMORY[0x1E4FBCFD8];
  v14[2] = v13;
  v14[3] = v15;
  void v14[4] = a2;
  void v14[5] = v11;
  void v14[6] = v12;
  sub_1C24D0A0C((uint64_t)v9, (uint64_t)&unk_1EA2E4658, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1C24E1584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[2] = sub_1C254F820();
  v6[3] = sub_1C254F810();
  uint64_t v9 = (void *)swift_task_alloc();
  v6[4] = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_1C22415D0;
  return ClinicalAccountManager.startRelogin(to:from:)(a5, a6);
}

uint64_t ClinicalAccountManager.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ClinicalAccountManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C24E16D0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C21AB51C(0, &qword_1EBB6F988);
    uint64_t v5 = sub_1C254F710();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C24E1788(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1C24E1868;
  return v5(v2 + 32);
}

uint64_t sub_1C24E1868()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_1C24E197C(unint64_t a1)
{
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x1C87588E0](v3, a1);
LABEL_9:
        uint64_t v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        sub_1C254E370();
        if (v7)
        {
          swift_bridgeObjectRelease();
          sub_1C2550460();
          sub_1C25504A0();
          sub_1C25504B0();
          sub_1C2550470();
        }
        else
        {
        }
        ++v3;
        if (v6 == v2) {
          return v9;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = sub_1C2550620();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

void sub_1C24E1ACC(uint64_t a1, uint64_t a2)
{
  id v5 = objc_msgSend(self, sel_signedClinicalDataRecordType);
  unint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  id v7 = objc_allocWithZone(MEMORY[0x1E4F2B440]);
  void v11[4] = sub_1C24E29CC;
  v11[5] = v6;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1C24E16D0;
  _OWORD v11[3] = &block_descriptor_17_2;
  id v8 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  id v9 = objc_msgSend(v7, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v5, 0, 0, 0, v8);

  _Block_release(v8);
  swift_release();
  id v10 = objc_msgSend(*(id *)(v2 + 24), sel_healthStore);
  objc_msgSend(v10, sel_executeQuery_, v9);
}

uint64_t sub_1C24E1C40()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C24E1C58()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C24E1C98(void *a1)
{
  return sub_1C24DA960(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1C24E1CA0(uint64_t a1, uint64_t a2)
{
  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  uint64_t v4 = sub_1C254CB40();
  v3[23] = v4;
  v3[24] = *(void *)(v4 - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  uint64_t v5 = sub_1C254E560();
  v3[27] = v5;
  v3[28] = *(void *)(v5 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C24E1DE0, 0, 0);
}

uint64_t sub_1C24E1DE0()
{
  uint64_t v36 = v0;
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[24];
  sub_1C254E510();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[31] = v5;
  v0[32] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v2, v1, v3);
  swift_retain_n();
  unint64_t v6 = sub_1C254E550();
  os_log_type_t v7 = sub_1C254FA10();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v32 = v0[28];
    uint64_t v8 = v0[26];
    uint64_t v33 = v0[27];
    uint64_t v34 = v0[30];
    uint64_t v9 = v0[23];
    uint64_t v29 = v0[24];
    uint64_t v30 = v0[21];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v35 = v31;
    *(_DWORD *)uint64_t v10 = 136315650;
    uint64_t v11 = sub_1C24D68E0();
    v0[17] = sub_1C21AD354(v11, v12, &v35);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v13 = sub_1C2550810();
    v0[18] = sub_1C21AD354(v13, v14, &v35);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v15(v8, v9);
    *(_WORD *)(v10 + 22) = 2048;
    v0[19] = v30;
    sub_1C2550120();
    _os_log_impl(&dword_1C21A1000, v6, v7, "%s updating clinical sharing device status of account %s to %ld", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v31, -1, -1);
    MEMORY[0x1C875A0B0](v10, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v16(v34, v33);
  }
  else
  {
    uint64_t v17 = v0[30];
    uint64_t v18 = v0[27];
    uint64_t v19 = v0[28];
    uint64_t v20 = v0[26];
    uint64_t v21 = v0[23];
    uint64_t v22 = v0[24];
    swift_release_n();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v15(v20, v21);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v16(v17, v18);
  }
  v0[33] = v16;
  v0[34] = v15;
  uint64_t v23 = v0[22];
  id v24 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v0[21]);
  v0[35] = v24;
  uint64_t v25 = *(void **)(v23 + 24);
  uint64_t v26 = sub_1C254CB00();
  v0[36] = v26;
  v0[2] = v0;
  v0[3] = sub_1C24E21F0;
  uint64_t v27 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C24D5F28;
  v0[13] = &block_descriptor_145;
  v0[14] = v27;
  objc_msgSend(v25, sel_updateClinicalSharingStatusForAccountWithIdentifier_firstSharedDate_lastSharedDate_userStatus_multiDeviceStatus_primaryDeviceName_completion_, v26, 0, 0, 0, v24, 0, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C24E21F0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 296) = v1;
  if (v1) {
    uint64_t v2 = sub_1C24E27C8;
  }
  else {
    uint64_t v2 = sub_1C24E2300;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C24E2300()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 160);

  sub_1C254E510();
  v2(v3, v5, v4);
  swift_retain_n();
  unint64_t v6 = sub_1C254E550();
  os_log_type_t v7 = sub_1C254FA00();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v26 = *(void *)(v0 + 232);
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v0 + 264);
    id v24 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
    uint64_t v25 = *(void *)(v0 + 216);
    uint64_t v8 = *(void *)(v0 + 200);
    uint64_t v9 = *(void *)(v0 + 184);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v28 = v23;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v11 = sub_1C24D68E0();
    *(void *)(v0 + 120) = sub_1C21AD354(v11, v12, &v28);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    sub_1C24E2EBC((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v13 = sub_1C2550810();
    *(void *)(v0 + 128) = sub_1C21AD354(v13, v14, &v28);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    v24(v8, v9);
    _os_log_impl(&dword_1C21A1000, v6, v7, "%s successfully updated clinical sharing device status of account %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v23, -1, -1);
    MEMORY[0x1C875A0B0](v10, -1, -1);

    v27(v26, v25);
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v0 + 264);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
    uint64_t v17 = *(void *)(v0 + 232);
    uint64_t v18 = *(void *)(v0 + 216);
    uint64_t v19 = *(void *)(v0 + 200);
    uint64_t v20 = *(void *)(v0 + 184);
    swift_release_n();
    v15(v19, v20);

    v16(v17, v18);
  }
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_1C24E2620;
  return sub_1C24D57C8(5);
}

uint64_t sub_1C24E2620()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C24E2878;
  }
  else {
    uint64_t v2 = sub_1C24E2734;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C24E2734()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C24E27C8()
{
  uint64_t v1 = *(void **)(v0 + 288);
  uint64_t v2 = *(void **)(v0 + 280);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C24E2878()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t block_destroy_helper_66()
{
  return swift_release();
}

uint64_t type metadata accessor for ClinicalAccountManager()
{
  return self;
}

uint64_t method lookup function for ClinicalAccountManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClinicalAccountManager);
}

uint64_t dispatch thunk of ClinicalAccountManager.__allocating_init(profile:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C24E296C()
{
  return objectdestroyTm_12(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroyTm_12(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();
  return MEMORY[0x1F4186498](v1, 40, 7);
}

void sub_1C24E29CC(uint64_t a1, unint64_t a2, void *a3)
{
  sub_1C24D6978(a1, a2, a3, *(void *)(v3 + 16), *(void (**)(uint64_t, void, void))(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_1C24E29D8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C24E2A20(uint64_t a1)
{
  return sub_1C24E141C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1C24E2A2C()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C24E2A7C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1C2223E3C;
  return sub_1C24E1584(a1, v4, v5, v6, v7, v8);
}

void sub_1C24E2B44()
{
  if (!qword_1EA2E4660)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F1AC28];
    sub_1C24E2DF8(255, &qword_1EA2E4668, MEMORY[0x1E4F1AC28]);
    sub_1C24E2F04(&qword_1EA2E4678, &qword_1EA2E4668, v0);
    unint64_t v1 = sub_1C254EB20();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E4660);
    }
  }
}

uint64_t type metadata accessor for ClinicalAccountManager.FlowError()
{
  uint64_t result = qword_1EA2E4880;
  if (!qword_1EA2E4880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C24E2C44()
{
  if (!qword_1EA2E4680)
  {
    sub_1C24E2D4C();
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F1AAE0];
    sub_1C24E2DF8(255, &qword_1EA2E4690, MEMORY[0x1E4F1AAE0]);
    sub_1C24E2EBC(&qword_1EA2E4698, (void (*)(uint64_t))sub_1C24E2D4C);
    sub_1C24E2F04(&qword_1EA2E46A0, &qword_1EA2E4690, v0);
    unint64_t v1 = sub_1C254E950();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E4680);
    }
  }
}

void sub_1C24E2D4C()
{
  if (!qword_1EA2E4688)
  {
    sub_1C254CB40();
    type metadata accessor for ClinicalAccountManager.FlowError();
    sub_1C24E2EBC(&qword_1EA2E4670, (void (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError);
    unint64_t v0 = sub_1C254E9E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4688);
    }
  }
}

void sub_1C24E2DF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C21AB51C(255, (unint64_t *)&qword_1EA2E1530);
    uint64_t v7 = type metadata accessor for ClinicalAccountManager.FlowError();
    uint64_t v8 = sub_1C24E2EBC(&qword_1EA2E4670, (void (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError);
    unint64_t v9 = a3(a1, v6, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C24E2EBC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C24E2F04(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C24E2DF8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C24E2F48()
{
  if (!qword_1EA2E46A8)
  {
    sub_1C24E2C44();
    sub_1C24E2FF4();
    sub_1C24E2EBC(&qword_1EA2E46B8, (void (*)(uint64_t))sub_1C24E2C44);
    unint64_t v0 = sub_1C254E930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E46A8);
    }
  }
}

void sub_1C24E2FF4()
{
  if (!qword_1EA2E46B0)
  {
    sub_1C254CB40();
    type metadata accessor for HKClinicalAccountDeletionReason(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E46B0);
    }
  }
}

void sub_1C24E3064()
{
  if (!qword_1EA2E46C0)
  {
    sub_1C24E2D4C();
    sub_1C24E2F48();
    sub_1C24E2EBC(&qword_1EA2E4698, (void (*)(uint64_t))sub_1C24E2D4C);
    sub_1C24E2EBC(&qword_1EA2E46C8, (void (*)(uint64_t))sub_1C24E2F48);
    unint64_t v0 = sub_1C254E950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E46C0);
    }
  }
}

uint64_t sub_1C24E3154()
{
  return sub_1C24E5374((uint64_t (*)(uint64_t, uint64_t))sub_1C24DCA04);
}

uint64_t sub_1C24E316C()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C24E31B4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C24D7940(*a1, *(void *)(v2 + 24), *(void *)(v2 + 32));
  *a2 = result;
  return result;
}

uint64_t sub_1C24E31EC()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C24E322C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C24D8700(a1, *(void (**)(void))(v2 + 16), *(void *)(v2 + 32), a2);
}

uint64_t sub_1C24E3238(uint64_t a1, uint64_t a2)
{
  return sub_1C24D878C(a1, a2, v2);
}

uint64_t sub_1C24E3240@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, void))(v2 + 16);
  sub_1C24E2FF4();
  uint64_t result = v5(a1, *(void *)(a1 + *(int *)(v6 + 48)));
  *a2 = result;
  return result;
}

uint64_t sub_1C24E3294(uint64_t a1)
{
  return sub_1C24E51EC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C24D8A18);
}

void sub_1C24E32AC()
{
  if (!qword_1EA2E46E0)
  {
    type metadata accessor for ClinicalAccountManager.FlowError();
    sub_1C24E2EBC(&qword_1EA2E4670, (void (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError);
    unint64_t v0 = sub_1C254E9C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E46E0);
    }
  }
}

uint64_t sub_1C24E3340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalAccountManager.FlowError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C24E33A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C24E340C()
{
  if (!qword_1EA2E46E8)
  {
    sub_1C24E34A0();
    sub_1C24E2EBC(&qword_1EA2E46F8, (void (*)(uint64_t))sub_1C24E34A0);
    unint64_t v0 = sub_1C254EB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E46E8);
    }
  }
}

void sub_1C24E34A0()
{
  if (!qword_1EA2E46F0)
  {
    sub_1C254CB40();
    type metadata accessor for ClinicalAccountManager.FlowError();
    sub_1C24E2EBC(&qword_1EA2E4670, (void (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError);
    unint64_t v0 = sub_1C254EAE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E46F0);
    }
  }
}

uint64_t sub_1C24E3550@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1C254CB40() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void **)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C24DCF94(v5, v1 + v4, v6, a1);
}

uint64_t objectdestroy_45Tm()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1C24E36CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C254CB40() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1C24DD110(a1, a2, v7, v2 + v6, v8);
}

uint64_t sub_1C24E3780(char a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_1C254CB40() - 8);
  unint64_t v6 = *(void (**)(char *))(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1C24DD2F0(a1, a2, v6, v7, v8);
}

void sub_1C24E3804()
{
  if (!qword_1EA2E4708)
  {
    sub_1C254CB40();
    type metadata accessor for ClinicalAccountManager.FlowError();
    sub_1C24E2EBC(&qword_1EA2E4670, (void (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError);
    unint64_t v0 = sub_1C2550A30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4708);
    }
  }
}

void sub_1C24E38B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C24E3914()
{
  if (!qword_1EA2E4718)
  {
    sub_1C254CB40();
    type metadata accessor for ClinicalAccountManager.FlowError();
    sub_1C24E2EBC(&qword_1EA2E4670, (void (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError);
    unint64_t v0 = sub_1C2550A20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4718);
    }
  }
}

void sub_1C24E39C0()
{
  if (!qword_1EA2E4720)
  {
    sub_1C24E2D4C();
    sub_1C24E34A0();
    sub_1C24E2EBC(&qword_1EA2E4698, (void (*)(uint64_t))sub_1C24E2D4C);
    sub_1C24E2EBC(&qword_1EA2E46F8, (void (*)(uint64_t))sub_1C24E34A0);
    unint64_t v0 = sub_1C254E950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4720);
    }
  }
}

void sub_1C24E3AAC()
{
  if (!qword_1EA2E4728)
  {
    sub_1C24E2D4C();
    sub_1C24E39C0();
    sub_1C24E2EBC(&qword_1EA2E4698, (void (*)(uint64_t))sub_1C24E2D4C);
    sub_1C24E2EBC(&qword_1EA2E4730, (void (*)(uint64_t))sub_1C24E39C0);
    unint64_t v0 = sub_1C254E950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4728);
    }
  }
}

void sub_1C24E3B98()
{
  if (!qword_1EA2E4738)
  {
    sub_1C24E3AAC();
    sub_1C24E3C84();
    sub_1C24E2EBC(&qword_1EA2E4748, (void (*)(uint64_t))sub_1C24E3AAC);
    sub_1C24E2EBC(&qword_1EA2E4750, (void (*)(uint64_t))sub_1C24E3C84);
    unint64_t v0 = sub_1C254E990();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4738);
    }
  }
}

void sub_1C24E3C84()
{
  if (!qword_1EA2E4740)
  {
    sub_1C254CB40();
    sub_1C2206F9C();
    unint64_t v0 = sub_1C254E9E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4740);
    }
  }
}

void sub_1C24E3CF4()
{
  if (!qword_1EA2E4758)
  {
    sub_1C24E3B98();
    type metadata accessor for ClinicalAccountManager.FlowError();
    sub_1C24E2EBC(&qword_1EA2E4760, (void (*)(uint64_t))sub_1C24E3B98);
    sub_1C24E2EBC(&qword_1EA2E4670, (void (*)(uint64_t))type metadata accessor for ClinicalAccountManager.FlowError);
    unint64_t v0 = sub_1C254E970();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4758);
    }
  }
}

void sub_1C24E3DE0()
{
  if (!qword_1EA2E4768)
  {
    sub_1C24E2D4C();
    sub_1C24E3CF4();
    sub_1C24E2EBC(&qword_1EA2E4698, (void (*)(uint64_t))sub_1C24E2D4C);
    sub_1C24E2EBC(&qword_1EA2E4770, (void (*)(uint64_t))sub_1C24E3CF4);
    unint64_t v0 = sub_1C254E950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4768);
    }
  }
}

uint64_t sub_1C24E3ECC()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C24E3F14(void (*a1)(char *), uint64_t a2)
{
  return sub_1C24DDA80(a1, a2, *(void (**)(uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1C24E3F20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C24DDB88(a1, v2, a2);
}

uint64_t sub_1C24E3F28(uint64_t a1)
{
  return sub_1C24DDE74(a1, v1, (uint64_t)&unk_1F1D9D4B8, (uint64_t)sub_1C24E478C);
}

uint64_t sub_1C24E3F60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1C24E3F90()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C24E3FC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C24DE0E0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1C24E3FE4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C24E401C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C24DE6C0(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1C24E4028@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1C254CB40() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void **)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_1C24DF88C(v4, v5, v6, a1);
}

uint64_t objectdestroy_73Tm()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C24E4174(uint64_t a1, uint64_t a2)
{
  return sub_1C24E4C18(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C24DFA00);
}

uint64_t sub_1C24E418C()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C24E4260(char a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_1C254CB40() - 8);
  uint64_t v6 = v2[2];
  uint64_t v7 = (void (*)(void))v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (uint64_t)v2 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1C24DFDB8(a1, a2, v6, v7, v8, v9);
}

void sub_1C24E42E8()
{
  if (!qword_1EA2E4790)
  {
    sub_1C24E2D4C();
    sub_1C254CB40();
    sub_1C24E2EBC(&qword_1EA2E4698, (void (*)(uint64_t))sub_1C24E2D4C);
    unint64_t v0 = sub_1C254E940();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4790);
    }
  }
}

uint64_t sub_1C24E439C()
{
  uint64_t v1 = (int *)(type metadata accessor for ClinicalAccountManager.FlowError() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1C24E448C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ClinicalAccountManager.FlowError() - 8);
  return sub_1C24DE620(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

void sub_1C24E450C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C254CB40() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = *(void *)(v2 + v7);
  uint64_t v11 = *(void **)(v2 + v8);
  uint64_t v12 = *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));
  sub_1C24DEA30(a1, a2, v9, v2 + v6, v10, v11, v12);
}

uint64_t sub_1C24E45D4()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C24E46C8(char a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_1C254CB40() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = v2 + v6;
  uint64_t v10 = *(void *)(v2 + v7);
  uint64_t v11 = v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = *(void (**)(void))v11;
  uint64_t v13 = *(void *)(v11 + 8);
  return sub_1C24DEFB4(a1, a2, v8, v9, v10, v12, v13);
}

uint64_t sub_1C24E478C()
{
  return sub_1C24E5374((uint64_t (*)(uint64_t, uint64_t))sub_1C24E0BE0);
}

uint64_t sub_1C24E47A8(uint64_t a1, uint64_t a2)
{
  return sub_1C24E4A98(a1, a2, sub_1C24E0D44);
}

uint64_t sub_1C24E47C0()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C24E489C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1C254CB40() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1C2223E3C;
  return sub_1C24E0F5C(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t objectdestroy_30Tm()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C24E4A80(uint64_t a1, uint64_t a2)
{
  return sub_1C24E4A98(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C24DCB80);
}

uint64_t sub_1C24E4A98(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(sub_1C254CB40() - 8);
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a3(a1, a2, v7, v8);
}

uint64_t objectdestroy_51Tm()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C24E4C00(uint64_t a1, uint64_t a2)
{
  return sub_1C24E4C18(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C24DCD58);
}

uint64_t sub_1C24E4C18(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(sub_1C254CB40() - 8);
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a3(a1, a2, v7, v8, v9);
}

uint64_t sub_1C24E4CB0(uint64_t a1)
{
  sub_1C24E2DF8(0, &qword_1EA2E47B8, MEMORY[0x1E4FBC448]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C24E4D28()
{
  if (!qword_1EA2E47C0)
  {
    sub_1C24E2D4C();
    sub_1C24E2EBC(&qword_1EA2E4698, (void (*)(uint64_t))sub_1C24E2D4C);
    unint64_t v0 = sub_1C254E950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E47C0);
    }
  }
}

void sub_1C24E4DC8()
{
  if (!qword_1EA2E47C8)
  {
    sub_1C24E2D4C();
    sub_1C24E4D28();
    sub_1C24E2EBC(&qword_1EA2E4698, (void (*)(uint64_t))sub_1C24E2D4C);
    sub_1C24E2EBC(&qword_1EA2E47D0, (void (*)(uint64_t))sub_1C24E4D28);
    unint64_t v0 = sub_1C254E950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E47C8);
    }
  }
}

uint64_t objectdestroy_85Tm()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v7 + 8, v5);
}

uint64_t sub_1C24E4FB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1C254CB40() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void **)(v1 + v6);
  uint64_t v10 = *(void **)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C24DE880(v7, v1 + v4, v8, v9, v10, a1);
}

uint64_t sub_1C24E5074()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C24E50AC(uint64_t a1)
{
  return sub_1C24DDE74(a1, v1, (uint64_t)&unk_1F1D9D670, (uint64_t)sub_1C24E478C);
}

uint64_t objectdestroy_42Tm()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C24E51D4(uint64_t a1)
{
  return sub_1C24E51EC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C24DA01C);
}

uint64_t sub_1C24E51EC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_1C254CB40() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + v5;
  uint64_t v8 = (uint64_t *)(v2 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  return a2(a1, v6, v7, v9, v10);
}

uint64_t objectdestroy_100Tm()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C24E5374(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_1C254CB40() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  return a1(v3, v4);
}

uint64_t sub_1C24E53FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C24E38B0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C24E546C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C222399C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA2E47F0 + dword_1EA2E47F0);
  return v6(a1, v4);
}

uint64_t sub_1C24E5524()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v7 + 8, v5);
}

uint64_t sub_1C24E561C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(sub_1C254CB40() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1C24DB2A0(a1, a2, a3, a4, a5, *(void *)(v5 + 16), v5 + v12, *(void **)(v5 + v13), *(void **)(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1C24E56F8()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v7 + 8, v5);
}

uint64_t sub_1C24E57F8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1C254CB40() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  char v9 = *(unsigned char *)(v1 + 32);
  uint64_t v10 = *(void *)(v1 + 40);
  uint64_t v11 = v1 + v5;
  uint64_t v12 = *(void *)(v1 + v6);
  uint64_t v13 = *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_1C222399C;
  return sub_1C24DB4E8(a1, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1C24E5944()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_1C24E5A2C()
{
  uint64_t v2 = *(void *)(sub_1C254CB40() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_1C2223E3C;
  return sub_1C24DC6B4(v4, v5, v6);
}

uint64_t sub_1C24E5B38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C24E5B98()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C24E5BE8()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1C2223E3C;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return MEMORY[0x1F4188298](sub_1C24DAAC8, 0, 0);
}

void sub_1C24E5C9C(uint64_t a1, uint64_t a2)
{
  sub_1C24DD5B0(a1, a2, v2);
}

void sub_1C24E5CA4()
{
  if (!qword_1EA2DF330)
  {
    sub_1C2315AD8(255, (unint64_t *)&qword_1EA2DF338, (unint64_t *)&qword_1EA2E1530, 0x1E4F67708, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C254EAE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF330);
    }
  }
}

uint64_t sub_1C24E5D38(unint64_t a1, void *a2)
{
  return sub_1C24DD6C4(a1, a2, *(uint64_t (**)(void, void))(v2 + 16), *(void *)(v2 + 24));
}

void *sub_1C24E5D40(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C254CB40();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v10 = *(void **)((char *)a2 + v9);
    id v11 = v10;
    *(void *)((char *)a1 + v9) = v10;
  }
  return a1;
}

void sub_1C24E5E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t sub_1C24E5E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = *(void **)(a2 + v7);
  id v9 = v8;
  *(void *)(a1 + v7) = v8;
  return a1;
}

uint64_t sub_1C24E5F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = *(void **)(a2 + v7);
  id v9 = v8;
  uint64_t v10 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;

  return a1;
}

uint64_t sub_1C24E5FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1C24E6038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t sub_1C24E60C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C24E60D8);
}

uint64_t sub_1C24E60D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C24E6198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C24E61AC);
}

uint64_t sub_1C24E61AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C254CB40();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C24E6268()
{
  uint64_t result = sub_1C254CB40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClinicalAccountManager.DeletionOutcome(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C24E63D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalAccountManager.DeletionOutcome()
{
  return &type metadata for ClinicalAccountManager.DeletionOutcome;
}

unint64_t sub_1C24E6410()
{
  unint64_t result = qword_1EA2E4890;
  if (!qword_1EA2E4890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4890);
  }
  return result;
}

BOOL MedicalRecordFormatterContext.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t sub_1C24E64F8()
{
  unint64_t result = qword_1EA2E4898;
  if (!qword_1EA2E4898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4898);
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicalRecordFormatterContext()
{
  return &type metadata for MedicalRecordFormatterContext;
}

uint64_t dispatch thunk of MedicalObjectFormatter.store.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MedicalObjectFormatter.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MedicalObjectFormatter.init(store:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of MedicalObjectFormatter.displayItems(from:country:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of MedicalRecordFormatterProtocol.store.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MedicalRecordFormatterProtocol.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MedicalRecordFormatterProtocol.init(store:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of MedicalRecordFormatterProtocol.displayItems(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

id AccountOnboardingSession.makeDataTypeSelectionViewController(for:)(void *a1)
{
  id v3 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingDataTypeSelectionViewController(0));
  unsigned int v4 = v1;
  id v5 = a1;
  id v6 = sub_1C220F0DC(v4, v5);

  return v6;
}

id AccountOnboardingSession.makeNecessaryScopesNotPresentViewController(for:)(void *a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingOnboardingNecessaryScopesNotPresentViewController());
  return sub_1C2441648(a1);
}

BOOL LocalizedEducationContent.hasContentForCurrentLocaleAndCountryCode.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1C24E7B60(1, 1, a1, a2);
  if (*(void *)(v2 + 16))
  {
    uint64_t v3 = sub_1C24E8540(v2);
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      uint64_t v5 = v3 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1C21F4424(v5, (uint64_t)&v14);
        uint64_t v6 = v15;
        uint64_t v7 = v16;
        __swift_project_boxed_opaque_existential_1Tm(&v14, v15);
        uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 48))(v6, v7);
        unint64_t v10 = v9;
        swift_bridgeObjectRelease();
        uint64_t v11 = HIBYTE(v10) & 0xF;
        if ((v10 & 0x2000000000000000) == 0) {
          uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
        }
        if (v11) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
        v5 += 40;
        if (!--v4)
        {
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      sub_1C21F44EC(&v14, (uint64_t)&v17);
    }
    else
    {
LABEL_9:
      uint64_t v19 = 0;
      long long v17 = 0u;
      long long v18 = 0u;
    }
    swift_bridgeObjectRelease();
    BOOL v12 = *((void *)&v18 + 1) != 0;
    sub_1C24E8C10((uint64_t)&v17, (unint64_t *)&qword_1EA2E48A0, (void (*)(uint64_t))sub_1C24E89C8);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

uint64_t LocalizedEducationContent.primaryRegionGatedContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7930(1, 1, 0, a1, a2);
}

uint64_t LocalizedEducationContent.titleRegionGatedForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7930(2, 1, 1, a1, a2);
}

uint64_t HKOntologyLocalizedEducationContentSection.attributionsForSection.getter()
{
  return sub_1C24E6F2C((SEL *)&selRef_attributions);
}

uint64_t LocalizedEducationContent.titleForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7930(2, 0, 1, a1, a2);
}

uint64_t LocalizedEducationContent.primaryContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7930(1, 0, 0, a1, a2);
}

uint64_t LocalizedEducationContent.abstractContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7930(3, 0, 0, a1, a2);
}

uint64_t LocalizedEducationContent.sideEffectsContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7930(4, 0, 0, a1, a2);
}

uint64_t LocalizedEducationContent.pregnancyDescriptionContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7930(5, 0, 0, a1, a2);
}

uint64_t LocalizedEducationContent.lactationDescriptionContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7930(6, 0, 0, a1, a2);
}

uint64_t LocalizedEducationContent.abstractRegionGatedContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7930(3, 1, 0, a1, a2);
}

uint64_t LocalizedEducationContentCodable.codableContent.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = *(void *)(v4(a1, v3) + 16);
  swift_bridgeObjectRelease();
  if (!v5) {
    return 0;
  }
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67A30]), sel_init);
  if (!v6) {
    return (uint64_t)v6;
  }
  uint64_t v7 = v4(a1, v3);
  unint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v50 = MEMORY[0x1E4FBC860];
  uint64_t v46 = *(void *)(v7 + 16);
  if (v46)
  {
    uint64_t v45 = v7 + 32;
    uint64_t v44 = v7;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v46; ++i)
    {
      sub_1C21F4424(v45 + 40 * i, (uint64_t)v47);
      id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67A38]), sel_init);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = v48;
        uint64_t v13 = v49;
        __swift_project_boxed_opaque_existential_1Tm(v47, v48);
        objc_msgSend(v11, sel_setType_, (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13));
        uint64_t v14 = v48;
        uint64_t v15 = v49;
        __swift_project_boxed_opaque_existential_1Tm(v47, v48);
        (*(void (**)(uint64_t, uint64_t))(v15 + 48))(v14, v15);
        uint64_t v16 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        objc_msgSend(v11, sel_setSectionLocalizedContent_, v16);

        uint64_t v17 = v48;
        uint64_t v18 = v49;
        __swift_project_boxed_opaque_existential_1Tm(v47, v48);
        (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
        uint64_t v19 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        objc_msgSend(v11, sel_setSectionLocaleIdentifier_, v19);

        uint64_t v20 = v48;
        uint64_t v21 = v49;
        __swift_project_boxed_opaque_existential_1Tm(v47, v48);
        uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
        uint64_t v23 = *(void *)(v22 + 16);
        if (v23)
        {
          swift_bridgeObjectRetain();
          uint64_t v24 = v22 + 40;
          do
          {
            swift_bridgeObjectRetain();
            uint64_t v25 = (void *)sub_1C254F430();
            objc_msgSend(v11, sel_addSectionCitations_, v25);
            swift_bridgeObjectRelease();

            v24 += 16;
            --v23;
          }
          while (v23);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v26 = v48;
        uint64_t v27 = v49;
        __swift_project_boxed_opaque_existential_1Tm(v47, v48);
        uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
        uint64_t v29 = *(void *)(v28 + 16);
        if (v29)
        {
          swift_bridgeObjectRetain();
          uint64_t v30 = v28 + 40;
          do
          {
            swift_bridgeObjectRetain();
            uint64_t v31 = (void *)sub_1C254F430();
            objc_msgSend(v11, sel_addSectionAttributions_, v31);
            swift_bridgeObjectRelease();

            v30 += 16;
            --v29;
          }
          while (v29);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v32 = v48;
        uint64_t v33 = v49;
        __swift_project_boxed_opaque_existential_1Tm(v47, v48);
        uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33);
        uint64_t v35 = *(void *)(v34 + 16);
        if (v35)
        {
          swift_bridgeObjectRetain();
          uint64_t v36 = v34 + 40;
          do
          {
            swift_bridgeObjectRetain();
            uint64_t v37 = (void *)sub_1C254F430();
            objc_msgSend(v11, sel_addSectionValidRegionCodes_, v37);
            swift_bridgeObjectRelease();

            v36 += 16;
            --v35;
          }
          while (v35);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v38 = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
        MEMORY[0x1C8757C00](v38);
        if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v8 = v50;
  }
  swift_bridgeObjectRelease();
  if (!(v8 >> 62))
  {
    uint64_t v39 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v39) {
      goto LABEL_27;
    }
LABEL_34:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  uint64_t v39 = result;
  if (!result) {
    goto LABEL_34;
  }
LABEL_27:
  if (v39 >= 1)
  {
    for (uint64_t j = 0; j != v39; ++j)
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v42 = (id)MEMORY[0x1C87588E0](j, v8);
      }
      else {
        id v42 = *(id *)(v8 + 8 * j + 32);
      }
      id v43 = v42;
      objc_msgSend(v6, sel_addSections_, v42, v44);
    }
    goto LABEL_34;
  }
  __break(1u);
  return result;
}

uint64_t HKOntologyLocalizedEducationContentSection.citationsForSection.getter()
{
  return sub_1C24E6F2C((SEL *)&selRef_citations);
}

uint64_t HKOntologyLocalizedEducationContentSection.validRegionCodesForSection.getter()
{
  return sub_1C24E6F2C((SEL *)&selRef_validRegionCodes);
}

uint64_t sub_1C24E6F2C(SEL *a1)
{
  id v2 = [v1 *a1];
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_1C254F710();

  return v4;
}

uint64_t HKOntologyLocalizedEducationContentSection.localizedTextForSection.getter()
{
  id v1 = objc_msgSend(v0, sel_localizedText);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1C254F470();

  return v3;
}

uint64_t sub_1C24E6FF0(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7014(a1, a2, (SEL *)&selRef_citations);
}

uint64_t sub_1C24E6FFC(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7014(a1, a2, (SEL *)&selRef_attributions);
}

uint64_t sub_1C24E7008(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7014(a1, a2, (SEL *)&selRef_validRegionCodes);
}

uint64_t sub_1C24E7014(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_1C254F710();

  return v6;
}

uint64_t sub_1C24E7070()
{
  id v1 = objc_msgSend(*v0, sel_localeIdentifier);
  uint64_t v2 = sub_1C254F470();

  return v2;
}

id sub_1C24E70C8()
{
  return objc_msgSend(*v0, sel_sectionType);
}

uint64_t sub_1C24E70D8()
{
  id v1 = objc_msgSend(*v0, sel_localizedText);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C254F470();

  return v3;
}

uint64_t HKOntologyLocalizedEducationContent.eduSections.getter()
{
  id v1 = objc_msgSend(v0, sel_sections);
  sub_1C235107C();
  unint64_t v2 = sub_1C254F710();

  uint64_t v3 = sub_1C228A7F8(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C24E71AC()
{
  id v1 = objc_msgSend(*v0, sel_sections);
  sub_1C235107C();
  unint64_t v2 = sub_1C254F710();

  uint64_t v3 = sub_1C228A7F8(v2);
  swift_bridgeObjectRelease();
  return v3;
}

void *HKCodableHealthRecordsLocalizedEducationContent.eduSections.getter()
{
  uint64_t v1 = sub_1C254C830();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)objc_msgSend(v0, sel_sectionsCount, v3) < 1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t result = objc_msgSend(v0, sel_sections);
  if (result)
  {
    uint64_t v12 = v2;
    uint64_t v7 = result;
    sub_1C254FEC0();

    sub_1C24E8B74(&qword_1EA2E4350, MEMORY[0x1E4F27660]);
    sub_1C2550110();
    if (v22)
    {
      unint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        sub_1C2206B9C(&v21, v20);
        sub_1C21A9A38((uint64_t)v20, (uint64_t)v15);
        sub_1C24E89C8();
        if (swift_dynamicCast())
        {
          sub_1C21F44EC(v13, (uint64_t)v19);
          sub_1C21F44EC(v19, (uint64_t)&v16);
        }
        else
        {
          uint64_t v14 = 0;
          memset(v13, 0, sizeof(v13));
          sub_1C24E8C10((uint64_t)v13, (unint64_t *)&qword_1EA2E48A0, (void (*)(uint64_t))sub_1C24E89C8);
          long long v16 = 0u;
          long long v17 = 0u;
          uint64_t v18 = 0;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        if (*((void *)&v17 + 1))
        {
          sub_1C21F44EC(&v16, (uint64_t)v19);
          sub_1C21F44EC(v19, (uint64_t)&v16);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v8 = sub_1C226CD78(0, v8[2] + 1, 1, v8);
          }
          unint64_t v10 = v8[2];
          unint64_t v9 = v8[3];
          if (v10 >= v9 >> 1) {
            unint64_t v8 = sub_1C226CD78((void *)(v9 > 1), v10 + 1, 1, v8);
          }
          _OWORD v8[2] = v10 + 1;
          sub_1C21F44EC(&v16, (uint64_t)&v8[5 * v10 + 4]);
        }
        else
        {
          sub_1C24E8C10((uint64_t)&v16, (unint64_t *)&qword_1EA2E48A0, (void (*)(uint64_t))sub_1C24E89C8);
        }
        sub_1C2550110();
      }
      while (v22);
    }
    else
    {
      unint64_t v8 = (void *)MEMORY[0x1E4FBC860];
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v5, v1);

    return v8;
  }
  __break(1u);
  return result;
}

void *sub_1C24E7558()
{
  return HKCodableHealthRecordsLocalizedEducationContent.eduSections.getter();
}

void *HKCodableHealthRecordsLocalizedEducationContentSection.citationsForSection.getter()
{
  return sub_1C24E75B8((SEL *)&selRef_sectionCitationsCount, (SEL *)&selRef_sectionCitations);
}

void *HKCodableHealthRecordsLocalizedEducationContentSection.attributionsForSection.getter()
{
  return sub_1C24E75B8((SEL *)&selRef_sectionAttributionsCount, (SEL *)&selRef_sectionAttributions);
}

void *HKCodableHealthRecordsLocalizedEducationContentSection.validRegionCodesForSection.getter()
{
  return sub_1C24E75B8((SEL *)&selRef_sectionValidRegionCodesCount, (SEL *)&selRef_sectionValidRegionCodes);
}

void *sub_1C24E75B8(SEL *a1, SEL *a2)
{
  if ((uint64_t)[v2 *a1] < 1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t result = [v2 *a2];
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = sub_1C24E8300(result);

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKCodableHealthRecordsLocalizedEducationContentSection.localeIdentifier.getter()
{
  return sub_1C24E7660((SEL *)&selRef_hasSectionLocaleIdentifier, (SEL *)&selRef_sectionLocaleIdentifier);
}

id HKCodableHealthRecordsLocalizedEducationContentSection.sectionType.getter()
{
  return objc_msgSend(v0, sel_type);
}

id HKCodableHealthRecordsLocalizedEducationContentSection.localizedTextForSection.getter()
{
  return sub_1C24E7660((SEL *)&selRef_hasSectionLocalizedContent, (SEL *)&selRef_sectionLocalizedContent);
}

id sub_1C24E7660(SEL *a1, SEL *a2)
{
  if (![v2 *a1]) {
    return 0;
  }
  id result = [v2 *a2];
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = sub_1C254F470();

    return (id)v6;
  }
  __break(1u);
  return result;
}

void *sub_1C24E76DC(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7718(a1, a2, (SEL *)&selRef_sectionCitationsCount, (SEL *)&selRef_sectionCitations);
}

void *sub_1C24E76F0(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7718(a1, a2, (SEL *)&selRef_sectionAttributionsCount, (SEL *)&selRef_sectionAttributions);
}

void *sub_1C24E7704(uint64_t a1, uint64_t a2)
{
  return sub_1C24E7718(a1, a2, (SEL *)&selRef_sectionValidRegionCodesCount, (SEL *)&selRef_sectionValidRegionCodes);
}

void *sub_1C24E7718(uint64_t a1, uint64_t a2, SEL *a3, SEL *a4)
{
  uint64_t v6 = *v4;
  if ((uint64_t)[v6 *a3] < 1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  id result = [v6 *a4];
  if (result)
  {
    unint64_t v8 = result;
    unint64_t v9 = sub_1C24E8300(result);

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1C24E778C(uint64_t a1, uint64_t a2)
{
  return sub_1C24E77C4(a1, a2, (SEL *)&selRef_hasSectionLocaleIdentifier, (SEL *)&selRef_sectionLocaleIdentifier);
}

id sub_1C24E77A0()
{
  return objc_msgSend(*v0, sel_type);
}

id sub_1C24E77B0(uint64_t a1, uint64_t a2)
{
  return sub_1C24E77C4(a1, a2, (SEL *)&selRef_hasSectionLocalizedContent, (SEL *)&selRef_sectionLocalizedContent);
}

id sub_1C24E77C4(uint64_t a1, uint64_t a2, SEL *a3, SEL *a4)
{
  uint64_t v6 = *v4;
  if (![v6 *a3]) {
    return 0;
  }
  id result = [v6 *a4];
  if (result)
  {
    unint64_t v8 = result;
    uint64_t v9 = sub_1C254F470();

    return (id)v9;
  }
  __break(1u);
  return result;
}

uint64_t LocalizedEducationContent.firstSection(of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = v6 + 32;
    while (1)
    {
      sub_1C21F4424(v8, (uint64_t)&v12);
      uint64_t v9 = v13;
      uint64_t v10 = v14;
      __swift_project_boxed_opaque_existential_1Tm(&v12, v13);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10) == a1) {
        break;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v12);
      v8 += 40;
      if (!--v7) {
        goto LABEL_5;
      }
    }
    sub_1C21F44EC(&v12, a4);
  }
  else
  {
LABEL_5:
    *(void *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C24E7930(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_1C24E7B60(a1, a2, a4, a5);
  if (!*(void *)(v6 + 16)) {
    goto LABEL_16;
  }
  uint64_t v7 = sub_1C24E8540(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
    if (a3) {
      goto LABEL_10;
    }
LABEL_14:
    v21[0] = v10;
    sub_1C23FD724();
    sub_1C24E8B74((unint64_t *)&qword_1EBB6F970, (void (*)(uint64_t))sub_1C23FD724);
    uint64_t v19 = sub_1C254F390();
    goto LABEL_15;
  }
  uint64_t v9 = v7 + 32;
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    sub_1C21F4424(v9, (uint64_t)v21);
    uint64_t v11 = v22;
    uint64_t v12 = v23;
    __swift_project_boxed_opaque_existential_1Tm(v21, v22);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 48))(v11, v12);
    uint64_t v15 = v14;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1C226BFC0(0, v10[2] + 1, 1, v10);
    }
    unint64_t v17 = v10[2];
    unint64_t v16 = v10[3];
    if (v17 >= v16 >> 1) {
      uint64_t v10 = sub_1C226BFC0((void *)(v16 > 1), v17 + 1, 1, v10);
    }
    void v10[2] = v17 + 1;
    uint64_t v18 = &v10[2 * v17];
    void v18[4] = v13;
    v18[5] = v15;
    v9 += 40;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease_n();
  if ((a3 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_10:
  if (!v10[2])
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v19 = v10[4];
  swift_bridgeObjectRetain();
LABEL_15:
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1C24E7B60(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C254CBD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C24E8BBC(0, &qword_1EA2E16C8, MEMORY[0x1E4F27A00]);
  __n128 v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = &v40[-v14 - 8];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a4 + 8))(a3, a4, v13);
  uint64_t v17 = result;
  if ((a2 & 1) == 0)
  {
LABEL_4:
    uint64_t v20 = *(void *)(v17 + 16);
    if (v20) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  sub_1C254CBC0();
  sub_1C254CBB0();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v18 = sub_1C254CBA0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) == 1)
  {
    uint64_t result = sub_1C24E8C10((uint64_t)v15, &qword_1EA2E16C8, MEMORY[0x1E4F27A00]);
    goto LABEL_4;
  }
  uint64_t v35 = sub_1C254CB90();
  uint64_t v37 = v36;
  (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v15, v18);
  uint64_t v38 = sub_1C2350458(v17, v35, v37);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v17 = v38;
  uint64_t v20 = *(void *)(v38 + 16);
  if (!v20) {
    goto LABEL_17;
  }
LABEL_5:
  unint64_t v21 = 0;
  uint64_t v46 = MEMORY[0x1E4FBC860];
  uint64_t v22 = v17 + 32;
  while (v21 < *(void *)(v17 + 16))
  {
    sub_1C21F4424(v22, (uint64_t)&v43);
    uint64_t v23 = v44;
    uint64_t v24 = v45;
    __swift_project_boxed_opaque_existential_1Tm(&v43, v44);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24) == a1)
    {
      sub_1C21F44EC(&v43, (uint64_t)v40);
      uint64_t v25 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C2274B30(0, *(void *)(v25 + 16) + 1, 1);
        uint64_t v25 = v46;
      }
      unint64_t v27 = *(void *)(v25 + 16);
      unint64_t v26 = *(void *)(v25 + 24);
      if (v27 >= v26 >> 1) {
        sub_1C2274B30(v26 > 1, v27 + 1, 1);
      }
      uint64_t v28 = v41;
      uint64_t v29 = v42;
      uint64_t v30 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      __n128 v31 = MEMORY[0x1F4188790](v30);
      uint64_t v33 = &v40[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(unsigned char *, __n128))(v34 + 16))(v33, v31);
      sub_1C2297320(v27, (uint64_t)v33, &v46, v28, v29);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
    }
    else
    {
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v43);
    }
    ++v21;
    v22 += 40;
    if (v20 == v21)
    {
      swift_bridgeObjectRelease();
      return v46;
    }
  }
  __break(1u);
  return result;
}

uint64_t LocalizedEducationContent.hasContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1C24E7B60(1, 0, a1, a2);
  if (*(void *)(v2 + 16) && (v3 = sub_1C24E8540(v2), swift_bridgeObjectRelease(), (uint64_t v4 = *(void *)(v3 + 16)) != 0))
  {
    uint64_t v5 = v3 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C21F4424(v5, (uint64_t)v13);
      uint64_t v6 = v14;
      uint64_t v7 = v15;
      __swift_project_boxed_opaque_existential_1Tm(v13, v14);
      uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 48))(v6, v7);
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
      uint64_t v11 = (v10 & 0x2000000000000000) != 0 ? HIBYTE(v10) & 0xF : v8 & 0xFFFFFFFFFFFFLL;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
      if (v11) {
        break;
      }
      v5 += 40;
      if (!--v4)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

id HKCodableHealthRecordsSharableViewModel.hasEducation.getter()
{
  return objc_msgSend(v0, sel_hasLocalizedEducationContent);
}

id HKCodableHealthRecordsSharableViewModel.educationPrimaryContent.getter()
{
  if (!objc_msgSend(v0, sel_hasLocalizedEducationContent)) {
    return 0;
  }
  id result = objc_msgSend(v0, sel_localizedEducationContent);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = sub_1C234F6EC(1, 1, 0);

    return (id)v3;
  }
  __break(1u);
  return result;
}

id HKCodableHealthRecordsSharableViewModel.educationTitle.getter()
{
  if (!objc_msgSend(v0, sel_hasLocalizedEducationContent)) {
    goto LABEL_4;
  }
  id result = objc_msgSend(v0, sel_localizedEducationContent);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = sub_1C234F6EC(2, 1, 1);
    uint64_t v5 = v4;

    if (v5) {
      return (id)v3;
    }
LABEL_4:
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v6 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C254C730();
    swift_bridgeObjectRelease();

    return (id)v3;
  }
  __break(1u);
  return result;
}

id HKCodableHealthRecordsSharableViewModel.uniqueIdentifier.getter()
{
  id result = objc_msgSend(v0, sel_conceptIdentifier);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = sub_1C254F470();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1C24E8300(void *a1)
{
  uint64_t v2 = sub_1C254C830();
  uint64_t v14 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = a1;
  sub_1C254FEC0();

  sub_1C24E8B74(&qword_1EA2E4350, MEMORY[0x1E4F27660]);
  sub_1C2550110();
  if (v20)
  {
    id v6 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_1C2206B9C(&v19, v18);
      sub_1C21A9A38((uint64_t)v18, (uint64_t)v17);
      if (swift_dynamicCast())
      {
        uint64_t v7 = v15;
        uint64_t v8 = v16;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v6 = sub_1C226BFC0(0, v6[2] + 1, 1, v6);
        }
        unint64_t v10 = v6[2];
        unint64_t v9 = v6[3];
        if (v10 >= v9 >> 1) {
          id v6 = sub_1C226BFC0((void *)(v9 > 1), v10 + 1, 1, v6);
        }
        _OWORD v6[2] = v10 + 1;
        uint64_t v11 = &v6[2 * v10];
        void v11[4] = v7;
        v11[5] = v8;
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
      }
      sub_1C2550110();
    }
    while (v20);
  }
  else
  {
    id v6 = (void *)MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v2);
  return v6;
}

uint64_t sub_1C24E8540(uint64_t a1)
{
  uint64_t v2 = sub_1C254CBD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CBC0();
  uint64_t v6 = sub_1C254CB60();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC868];
LABEL_19:
    uint64_t v35 = self;
    uint64_t v36 = swift_bridgeObjectRetain();
    sub_1C228FE98(v36);
    swift_bridgeObjectRelease();
    uint64_t v37 = (void *)sub_1C254F700();
    swift_release();
    id v38 = objc_msgSend(v35, sel_preferredLocalizationsFromArray_, v37);

    uint64_t v39 = (void *)sub_1C254F710();
    if (v39[2])
    {
      uint64_t v41 = v39[4];
      uint64_t v40 = v39[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v11[2])
      {
        unint64_t v42 = sub_1C21A6470(v6, v8);
        if (v43)
        {
          uint64_t v44 = *(void *)(v11[7] + 8 * v42);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v44;
        }
      }
      swift_bridgeObjectRelease();
      if (v11[2])
      {
        unint64_t v45 = sub_1C21A6470(v41, v40);
        if (v46)
        {
          uint64_t v44 = *(void *)(v11[7] + 8 * v45);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v44;
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v49 = v6;
  uint64_t v50 = v8;
  uint64_t v10 = a1 + 32;
  uint64_t v48 = a1;
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    sub_1C21F4424(v10, (uint64_t)v53);
    uint64_t v12 = v54;
    uint64_t v13 = v55;
    __swift_project_boxed_opaque_existential_1Tm(v53, v54);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
    uint64_t v16 = v15;
    sub_1C21F4424((uint64_t)v53, (uint64_t)v52);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v51 = v11;
    unint64_t v19 = sub_1C21A6470(v14, v16);
    uint64_t v20 = v11[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      break;
    }
    char v23 = v18;
    if (v11[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C24AE884();
      }
    }
    else
    {
      sub_1C227B524(v22, isUniquelyReferenced_nonNull_native);
      unint64_t v24 = sub_1C21A6470(v14, v16);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_32;
      }
      unint64_t v19 = v24;
    }
    uint64_t v11 = v51;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      v11[(v19 >> 6) + 8] |= 1 << v19;
      unint64_t v26 = (uint64_t *)(v11[6] + 16 * v19);
      uint64_t *v26 = v14;
      v26[1] = v16;
      *(void *)(v11[7] + 8 * v19) = MEMORY[0x1E4FBC860];
      uint64_t v27 = v11[2];
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        goto LABEL_31;
      }
      v11[2] = v29;
      swift_bridgeObjectRetain();
    }
    uint64_t v30 = v11[7];
    __n128 v31 = *(void **)(v30 + 8 * v19);
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v30 + 8 * v19) = v31;
    if ((v32 & 1) == 0)
    {
      __n128 v31 = sub_1C226CD78(0, v31[2] + 1, 1, v31);
      *(void *)(v30 + 8 * v19) = v31;
    }
    unint64_t v34 = v31[2];
    unint64_t v33 = v31[3];
    if (v34 >= v33 >> 1)
    {
      __n128 v31 = sub_1C226CD78((void *)(v33 > 1), v34 + 1, 1, v31);
      *(void *)(v30 + 8 * v19) = v31;
    }
    uint64_t v31[2] = v34 + 1;
    sub_1C21F44EC(v52, (uint64_t)&v31[5 * v34 + 4]);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
    v10 += 40;
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = v49;
      uint64_t v8 = v50;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  uint64_t result = sub_1C2550910();
  __break(1u);
  return result;
}

unint64_t sub_1C24E89C8()
{
  unint64_t result = qword_1EA2DF5E0;
  if (!qword_1EA2DF5E0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DF5E0);
  }
  return result;
}

uint64_t dispatch thunk of LocalizedEducationContent.eduSections.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LocalizedEducationContent.titleForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of LocalizedEducationContent.primaryContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of LocalizedEducationContent.abstractContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of LocalizedEducationContent.sideEffectsContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of LocalizedEducationContent.pregnancyDescriptionContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of LocalizedEducationContent.lactationDescriptionContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of LocalizedEducationContent.titleRegionGatedForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of LocalizedEducationContent.primaryRegionGatedContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of LocalizedEducationContent.abstractRegionGatedContentForCurrentLocale.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of LocalizedEducationSection.citationsForSection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LocalizedEducationSection.attributionsForSection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of LocalizedEducationSection.validRegionCodesForSection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of LocalizedEducationSection.localeIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of LocalizedEducationSection.sectionType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of LocalizedEducationSection.localizedTextForSection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of LocalizedEducationContentCodable.codableContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C24E8B74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C24E8BBC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C24E8C10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C24E8BBC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C24E8C6C()
{
  uint64_t v3 = sub_1C2550AA0();
  sub_1C254F5A0();
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_title);
  sub_1C254F470();

  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C24E8D28()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AccountSourceItem()
{
  return self;
}

uint64_t sub_1C24E8D8C()
{
  return sub_1C254D330();
}

uint64_t sub_1C24E8DF4()
{
  return sub_1C24E8C6C();
}

void sub_1C24E8E18()
{
  qword_1EA2E48A8 = 0x4028000000000000;
}

void sub_1C24E8E28()
{
  qword_1EA2E48B0 = 0x4020000000000000;
}

id sub_1C24E8E38()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___logoView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___logoView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___logoView);
  }
  else
  {
    if (qword_1EA2DD4A8 != -1) {
      swift_once();
    }
    id v4 = objc_msgSend(objc_allocWithZone((Class)WDBrandLogoView), sel_initWithSize_, *(double *)&qword_1EA2DEA28);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C24E8F04()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___titleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    id v6 = (void *)sub_1C254FE50();
    objc_msgSend(v5, sel_setFont_, v6);

    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    objc_msgSend(v5, sel_setTextAlignment_, 1);
    id v7 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v7);

    uint64_t v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_1C24E9070()
{
  return sub_1C24E9088(&OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___subtitleLabel);
}

id sub_1C24E907C()
{
  return sub_1C24E9088(&OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___detailLabel);
}

id sub_1C24E9088(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = sub_1C24E90E4();
    id v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    id v3 = 0;
  }
  id v7 = v3;
  return v4;
}

id sub_1C24E90E4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v0, sel_setFont_, v1);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setTextAlignment_, 1);
  id v2 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v2);

  return v0;
}

id sub_1C24E91F0()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___webLinkButton;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___webLinkButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___webLinkButton);
  }
  else
  {
    id v4 = sub_1C24E9254(v0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C24E9254(uint64_t a1)
{
  v32[1] = a1;
  uint64_t v1 = sub_1C2550010();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C254FFE0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C25500A0();
  v32[0] = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v32 - v13;
  sub_1C2550090();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FB1218], v5);
  sub_1C254FFF0();
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v15 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C2550070();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FB1238], v1);
  sub_1C2550020();
  sub_1C21AB51C(0, &qword_1EA2E0330);
  uint64_t v16 = v32[0];
  (*(void (**)(char *, char *, uint64_t))(v32[0] + 16))(v11, v14, v9);
  sub_1C21AB51C(0, &qword_1EA2DF300);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C254FFB0();
  uint64_t v17 = (void *)sub_1C25500B0();
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v18 = objc_msgSend(v17, sel_titleLabel);
  if (v18)
  {
    unint64_t v19 = v18;
    objc_msgSend(v18, sel_setAdjustsFontForContentSizeCategory_, 1);
  }
  id v20 = objc_msgSend(v17, sel_titleLabel);
  if (v20)
  {
    BOOL v21 = v20;
    id v22 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
    objc_msgSend(v21, sel_setFont_, v22);
  }
  id v23 = objc_msgSend(v17, sel_titleLabel);
  if (v23)
  {
    unint64_t v24 = v23;
    objc_msgSend(v23, sel_setNumberOfLines_, 1);
  }
  id v25 = objc_msgSend(self, sel_hk_appKeyColor);
  objc_msgSend(v17, sel_setTintColor_, v25);

  sub_1C2201F2C();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1C255CDA0;
  *(void *)(v26 + 32) = sub_1C254F470();
  *(void *)(v26 + 40) = v27;
  strcpy((char *)(v26 + 48), "VisitWebsite");
  *(unsigned char *)(v26 + 61) = 0;
  *(_WORD *)(v26 + 62) = -5120;
  id v28 = v17;
  uint64_t v29 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v30 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v28, sel_setAccessibilityIdentifier_, v30);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v9);
  return v28;
}

id sub_1C24E9800(uint64_t a1, uint64_t a2)
{
  sub_1C24EB2E0(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v16[-v4];
  uint64_t v6 = sub_1C254C900();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1C875A200](a2 + 16);
  if (!v10)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    return (id)sub_1C24EB420((uint64_t)v5, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  }
  uint64_t v11 = (void *)v10;
  uint64_t v12 = v10 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_accountURL;
  swift_beginAccess();
  sub_1C24EB3B4(v12, (uint64_t)v5, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);

  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    return (id)sub_1C24EB420((uint64_t)v5, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v9, v5, v6);
  id result = objc_msgSend(self, sel_defaultWorkspace);
  if (result)
  {
    uint64_t v14 = result;
    id v15 = (void *)sub_1C254C870();
    objc_msgSend(v14, sel_openURL_configuration_completionHandler_, v15, 0, 0);

    return (id)(*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1C24E9A80()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___stackView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___stackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___stackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setAlignment_, 3);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setSpacing_, 1.17549435e-38);
    objc_msgSend(v4, sel_setBaselineRelativeArrangement_, 0);
    objc_msgSend(v4, sel_setLayoutMarginsRelativeArrangement_, 1);
    objc_msgSend(v4, sel_setPreservesSuperviewLayoutMargins_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *sub_1C24E9B84(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_contentMargins];
  uint64_t v10 = *MEMORY[0x1E4F67908];
  *(void *)uint64_t v9 = 0x4034000000000000;
  *((void *)v9 + 1) = v10;
  *((void *)v9 + 2) = 0;
  *((void *)v9 + 3) = v10;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___logoView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___subtitleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___detailLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___webLinkButton] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___stackView] = 0;
  uint64_t v11 = &v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_accountURL];
  uint64_t v12 = sub_1C254C900();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = &v4[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_item];
  uint64_t v14 = (objc_class *)type metadata accessor for AccountSourceCell();
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((void *)v13 + 4) = 0;
  v35.receiver = v4;
  v35.Class super_class = v14;
  id v15 = objc_msgSendSuper2(&v35, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v16 = self;
  uint64_t v17 = (char *)v15;
  id v18 = objc_msgSend(v16, sel_clearColor);
  objc_msgSend(v17, sel_setBackgroundColor_, v18);

  id v19 = sub_1C24E9A80();
  id v20 = sub_1C24E8E38();
  objc_msgSend(v19, sel_addArrangedSubview_, v20);

  id v21 = sub_1C24E9A80();
  id v22 = sub_1C24E8F04();
  objc_msgSend(v21, sel_addArrangedSubview_, v22);

  id v23 = sub_1C24E9A80();
  id v24 = sub_1C24E9070();
  objc_msgSend(v23, sel_addArrangedSubview_, v24);

  id v25 = sub_1C24E9A80();
  id v26 = sub_1C24E907C();
  objc_msgSend(v25, sel_addArrangedSubview_, v26);

  id v27 = sub_1C24E9A80();
  id v28 = sub_1C24E91F0();
  objc_msgSend(v27, sel_addArrangedSubview_, v28);

  id v29 = sub_1C24E9A80();
  objc_msgSend(v29, sel_setDirectionalLayoutMargins_, *(double *)&v17[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_contentMargins], *(double *)&v17[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_contentMargins + 8], *(double *)&v17[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_contentMargins + 16], *(double *)&v17[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_contentMargins + 24]);

  id v30 = objc_msgSend(v17, sel_contentView);
  id v31 = sub_1C24E9A80();
  objc_msgSend(v30, sel_addSubview_, v31);

  id v32 = sub_1C24E9A80();
  id v33 = objc_msgSend(v17, sel_contentView);
  objc_msgSend(v32, sel_hk_alignConstraintsWithView_, v33);

  sub_1C24E9EFC();
  return v17;
}

void sub_1C24E9EFC()
{
  id v0 = sub_1C24E9A80();
  id v1 = objc_msgSend(v0, sel_constraintsAffectingLayoutForAxis_, 1);

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  unint64_t v2 = sub_1C254F710();

  if (!(v2 >> 62))
  {
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    id v5 = 0;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x1C87588E0](0, v2);
    goto LABEL_6;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v3 = *(id *)(v2 + 32);
LABEL_6:
    id v4 = v3;
    swift_bridgeObjectRelease();
    type metadata accessor for UILayoutPriority(0);
    sub_1C24EB47C((unint64_t *)&qword_1EA2DEEC0, type metadata accessor for UILayoutPriority);
    id v5 = v4;
    sub_1C254E580();
    LODWORD(v6) = v20;
    objc_msgSend(v5, sel_setPriority_, v6);

LABEL_9:
    id v8 = sub_1C24E8F04();
    id v9 = sub_1C24E9070();
    id v19 = sub_1C24E907C();
    type metadata accessor for UILayoutPriority(0);
    sub_1C24EB47C((unint64_t *)&qword_1EA2DEEC0, type metadata accessor for UILayoutPriority);
    id v10 = v8;
    sub_1C254E570();
    LODWORD(v11) = v20;
    objc_msgSend(v10, sel_setContentCompressionResistancePriority_forAxis_, 1, v11);
    sub_1C254E570();
    LODWORD(v12) = v20;
    objc_msgSend(v10, sel_setContentHuggingPriority_forAxis_, 1, v12);

    id v13 = v9;
    sub_1C254E570();
    LODWORD(v14) = v20;
    objc_msgSend(v13, sel_setContentCompressionResistancePriority_forAxis_, 1, v14);
    sub_1C254E570();
    LODWORD(v15) = v20;
    objc_msgSend(v13, sel_setContentHuggingPriority_forAxis_, 1, v15);

    id v16 = v19;
    sub_1C254E570();
    LODWORD(v17) = v20;
    objc_msgSend(v16, sel_setContentCompressionResistancePriority_forAxis_, 1, v17);
    sub_1C254E570();
    LODWORD(v18) = v20;
    objc_msgSend(v16, sel_setContentHuggingPriority_forAxis_, 1, v18);

    return;
  }
  __break(1u);
}

uint64_t sub_1C24EA288()
{
  sub_1C24EB2E0(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  double v6 = (char *)v59 - v5;
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)v59 - v8;
  uint64_t v10 = v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_item;
  swift_beginAccess();
  sub_1C24EB3B4(v10, (uint64_t)v60, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  if (!v61) {
    return sub_1C24EB420((uint64_t)v60, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  }
  sub_1C22270A8();
  type metadata accessor for AccountSourceItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v12 = v59[1];
    id v13 = sub_1C24E8E38();
    objc_msgSend(v13, sel_fetchBrandable_dataProvider_, *(void *)(v12 + 16), *(void *)(v12 + 24));

    id v14 = sub_1C24E8F04();
    id v15 = objc_msgSend(*(id *)(v12 + 16), sel_title);
    if (!v15)
    {
      sub_1C254F470();
      id v15 = (id)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v14, sel_setText_, v15);

    id v16 = sub_1C24E9070();
    double v17 = *(void **)(v12 + 16);
    id v18 = objc_msgSend(v17, sel_subtitle);
    if (!v18)
    {
      id v19 = objc_msgSend(v17, sel_provenance);
      id v20 = objc_msgSend(v19, sel_signedClinicalDataIssuer);

      if (!v20)
      {
LABEL_9:
        objc_msgSend(v16, sel_setText_, v20);

        id v21 = sub_1C24E9070();
        id v22 = objc_msgSend(v21, sel_text);

        if (!v22)
        {
          id v22 = sub_1C24E9070();
          objc_msgSend(v22, sel_removeFromSuperview);
        }

        id v23 = sub_1C24E907C();
        id v24 = objc_msgSend(*(id *)(v12 + 16), sel_displayableSharingSinceTitle);
        objc_msgSend(v23, sel_setText_, v24);

        id v25 = sub_1C24E907C();
        id v26 = objc_msgSend(v25, sel_text);

        if (!v26)
        {
          id v26 = sub_1C24E907C();
          objc_msgSend(v26, sel_removeFromSuperview);
        }

        id v27 = objc_msgSend(*(id *)(v12 + 16), sel_gateway);
        if (v27)
        {
          id v28 = v27;
          id v29 = objc_msgSend(v27, sel_informationURL);

          if (v29)
          {
            sub_1C254C8A0();

            uint64_t v30 = sub_1C254C900();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v6, 0, 1, v30);
          }
          else
          {
            uint64_t v32 = sub_1C254C900();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v6, 1, 1, v32);
          }
          sub_1C22493AC((uint64_t)v6, (uint64_t)v9);
        }
        else
        {
          uint64_t v31 = sub_1C254C900();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v9, 1, 1, v31);
        }
        uint64_t v33 = v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_accountURL;
        swift_beginAccess();
        sub_1C24EB334((uint64_t)v9, v33);
        swift_endAccess();
        unint64_t v34 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
        sub_1C24EB3B4(v33, (uint64_t)v3, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
        uint64_t v35 = sub_1C254C900();
        LODWORD(v33) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v3, 1, v35);
        sub_1C24EB420((uint64_t)v3, (unint64_t *)&qword_1EA2DF038, v34);
        if (v33 == 1)
        {
          id v36 = sub_1C24E91F0();
          objc_msgSend(v36, sel_removeFromSuperview);
        }
        id v37 = sub_1C24E9A80();
        if (qword_1EA2DD8E0 != -1) {
          swift_once();
        }
        double v38 = *(double *)&qword_1EA2E48A8;
        id v39 = sub_1C24E8E38();
        objc_msgSend(v37, sel_setCustomSpacing_afterView_, v39, v38);

        id v40 = sub_1C24E9070();
        id v41 = objc_msgSend(v40, sel_text);

        if (v41
          || (id v42 = sub_1C24E907C(),
              id v41 = objc_msgSend(v42, sel_text),
              v42,
              v41))
        {

          id v43 = sub_1C24E9A80();
          if (qword_1EA2DD8E8 != -1) {
            swift_once();
          }
          uint64_t v44 = qword_1EA2E48B0;
        }
        else
        {
          id v43 = sub_1C24E9A80();
          uint64_t v44 = qword_1EA2E48A8;
        }
        id v45 = sub_1C24E8F04();
        objc_msgSend(v43, sel_setCustomSpacing_afterView_, v45, *(double *)&v44);

        id v46 = sub_1C24E9070();
        id v47 = objc_msgSend(v46, sel_text);

        if (v47
          && (v47,
              id v48 = sub_1C24E907C(),
              id v49 = objc_msgSend(v48, sel_text),
              v48,
              v49))
        {

          id v50 = sub_1C24E9A80();
          if (qword_1EA2DD8E8 != -1) {
            swift_once();
          }
          uint64_t v51 = qword_1EA2E48B0;
        }
        else
        {
          id v50 = sub_1C24E9A80();
          uint64_t v51 = qword_1EA2E48A8;
        }
        id v52 = sub_1C24E9070();
        objc_msgSend(v50, sel_setCustomSpacing_afterView_, v52, *(double *)&v51);

        id v53 = sub_1C24E9A80();
        double v54 = *(double *)&qword_1EA2E48A8;
        id v55 = sub_1C24E907C();
        objc_msgSend(v53, sel_setCustomSpacing_afterView_, v55, v54);

        id v56 = sub_1C24E9A80();
        double v57 = *(double *)&qword_1EA2E48A8 + *(double *)&qword_1EA2E48A8;
        id v58 = sub_1C24E91F0();
        objc_msgSend(v56, sel_setCustomSpacing_afterView_, v58, v57);

        sub_1C24EAA54();
        return swift_release();
      }
      id v18 = objc_msgSend(v20, sel_identifier);
    }
    sub_1C254F470();

    id v20 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  return result;
}

void sub_1C24EAA54()
{
  id v0 = sub_1C24E8E38();
  sub_1C2201F2C();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C255D0E0;
  *(void *)(v1 + 32) = sub_1C254F470();
  *(void *)(v1 + 40) = v2;
  strcpy((char *)(v1 + 48), "ProviderLogo");
  *(unsigned char *)(v1 + 61) = 0;
  *(_WORD *)(v1 + 62) = -5120;
  *(void *)(v1 + 64) = 0x6567616D69;
  *(void *)(v1 + 72) = 0xE500000000000000;
  id v3 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v0, sel_setAccessibilityIdentifier_, v4);
  id v5 = sub_1C24E8F04();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255CDA0;
  *(void *)(v6 + 32) = sub_1C254F470();
  *(void *)(v6 + 40) = v7;
  strcpy((char *)(v6 + 48), "ProviderName");
  *(unsigned char *)(v6 + 61) = 0;
  *(_WORD *)(v6 + 62) = -5120;
  uint64_t v8 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v9 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v9);
  id v10 = sub_1C24E9070();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255CDA0;
  *(void *)(v11 + 32) = sub_1C254F470();
  *(void *)(v11 + 40) = v12;
  strcpy((char *)(v11 + 48), "PatientPortal");
  *(_WORD *)(v11 + 62) = -4864;
  id v13 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v14 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v10, sel_setAccessibilityIdentifier_, v14);
  id v15 = sub_1C24E907C();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C255CDA0;
  *(void *)(v16 + 32) = sub_1C254F470();
  *(void *)(v16 + 40) = v17;
  *(void *)(v16 + 48) = 0xD000000000000010;
  *(void *)(v16 + 56) = 0x80000001C2589A60;
  id v18 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v19 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v15, sel_setAccessibilityIdentifier_, v19);
}

void sub_1C24EAD40()
{
  v15.receiver = v0;
  v15.Class super_class = (Class)type metadata accessor for AccountSourceCell();
  objc_msgSendSuper2(&v15, sel_prepareForReuse);
  id v1 = sub_1C24E8E38();
  objc_msgSend(v1, sel_setImage_, 0);

  id v2 = sub_1C24E8F04();
  objc_msgSend(v2, sel_setText_, 0);

  id v3 = sub_1C24E9070();
  objc_msgSend(v3, sel_setText_, 0);

  id v4 = sub_1C24E907C();
  objc_msgSend(v4, sel_setText_, 0);

  id v5 = sub_1C24E9A80();
  id v6 = sub_1C24E8E38();
  objc_msgSend(v5, sel_setCustomSpacing_afterView_, v6, 0.0);

  id v7 = sub_1C24E9A80();
  id v8 = sub_1C24E8F04();
  objc_msgSend(v7, sel_setCustomSpacing_afterView_, v8, 0.0);

  id v9 = sub_1C24E9A80();
  id v10 = sub_1C24E9070();
  objc_msgSend(v9, sel_setCustomSpacing_afterView_, v10, 0.0);

  id v11 = sub_1C24E9A80();
  id v12 = sub_1C24E907C();
  objc_msgSend(v11, sel_setCustomSpacing_afterView_, v12, 0.0);

  id v13 = sub_1C24E9A80();
  id v14 = sub_1C24E91F0();
  objc_msgSend(v13, sel_setCustomSpacing_afterView_, v14, 0.0);
}

id sub_1C24EAF18()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for AccountSourceCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C24EB028()
{
  return type metadata accessor for AccountSourceCell();
}

uint64_t type metadata accessor for AccountSourceCell()
{
  uint64_t result = qword_1EA2E48F0;
  if (!qword_1EA2E48F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C24EB07C()
{
  sub_1C24EB2E0(319, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C24EB150@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_item;
  swift_beginAccess();
  return sub_1C24EB3B4(v3, a1, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t sub_1C24EB1C0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C24EA288();
  return sub_1C24EB420(a1, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t (*sub_1C24EB24C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C24EB2AC;
}

uint64_t sub_1C24EB2AC(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C24EA288();
  }
  return result;
}

void sub_1C24EB2E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C24EB334(uint64_t a1, uint64_t a2)
{
  sub_1C24EB2E0(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C24EB3B4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C24EB2E0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C24EB420(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C24EB2E0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C24EB47C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C24EB4C4()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C24EB4FC(uint64_t a1)
{
  return sub_1C24E9800(a1, v1);
}

void sub_1C24EB504()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_contentMargins];
  uint64_t v2 = *MEMORY[0x1E4F67908];
  *(void *)uint64_t v1 = 0x4034000000000000;
  *((void *)v1 + 1) = v2;
  *((void *)v1 + 2) = 0;
  *((void *)v1 + 3) = v2;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___logoView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___subtitleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___detailLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___webLinkButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell____lazy_storage___stackView] = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_accountURL];
  uint64_t v4 = sub_1C254C900();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = &v0[OBJC_IVAR____TtC15HealthRecordsUI17AccountSourceCell_item];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((void *)v5 + 4) = 0;

  sub_1C25505F0();
  __break(1u);
}

uint64_t HKMedicalUserDomainConcept.uniqueIdentifier.getter()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_UUID, v3);
  sub_1C254CB20();

  uint64_t v7 = sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v7;
}

uint64_t HKConcept.displayName.getter()
{
  id v1 = objc_msgSend(v0, sel_localizedPreferredName);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C254F470();

  return v3;
}

uint64_t HKConcept.uniqueIdentifier.getter()
{
  id v1 = objc_msgSend(v0, sel_identifier);
  id v2 = objc_msgSend(v1, sel_numberRepresentation);

  id v3 = objc_msgSend(v2, sel_description);
  uint64_t v4 = sub_1C254F470();

  return v4;
}

uint64_t sub_1C24EB840()
{
  id v1 = objc_msgSend(*v0, sel_localizedPreferredName);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1C254F470();

  return v3;
}

id sub_1C24EB8A8()
{
  return objc_msgSend(*v0, sel_chartsBloodPressure);
}

id sub_1C24EB8CC()
{
  return objc_msgSend(*v0, sel_hidesOutOfRangeFilter);
}

uint64_t sub_1C24EB8F0()
{
  id v1 = objc_msgSend(*v0, sel_identifier);
  id v2 = objc_msgSend(v1, sel_numberRepresentation);

  id v3 = objc_msgSend(v2, sel_description);
  uint64_t v4 = sub_1C254F470();

  return v4;
}

uint64_t HKMedicalUserDomainConcept.displayName.getter()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_preferredLocalizations);

  uint64_t v2 = sub_1C254F710();
  uint64_t countAndFlagsBits = HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v2)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t HKMedicalUserDomainConcept.chartsBloodPressure.getter()
{
  return 0;
}

uint64_t HKMedicalUserDomainConcept.hidesOutOfRangeFilter.getter()
{
  return 0;
}

uint64_t sub_1C24EBA30()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_preferredLocalizations);

  uint64_t v2 = sub_1C254F710();
  uint64_t countAndFlagsBits = HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v2)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t sub_1C24EBAD0()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*v0, sel_UUID, v3);
  sub_1C254CB20();

  uint64_t v7 = sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v7;
}

uint64_t HKMedicalRecord.chartableCodedQuantitySet()()
{
  return 0;
}

id sub_1C24EBBD8()
{
  return 0;
}

void HKMedicalRecord.conceptForChart.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v1, sel_primaryConcept);
  id v5 = objc_msgSend(v4, sel_chartedWithConcept);

  if (!v5) {
    id v5 = objc_msgSend(v2, sel_primaryConcept);
  }
  id v6 = objc_msgSend(v5, sel_identifier);
  id v7 = objc_msgSend(v6, sel_numberRepresentation);

  id v8 = objc_msgSend(v7, sel_description);
  uint64_t v9 = sub_1C254F470();
  uint64_t v11 = v10;

  id v12 = objc_msgSend(v5, sel_localizedPreferredName);
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = sub_1C254F470();
    unint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    unint64_t v16 = 0xE000000000000000;
  }
  unsigned __int8 v17 = objc_msgSend(v5, sel_chartsBloodPressure);
  unsigned __int8 v18 = objc_msgSend(v5, sel_hidesOutOfRangeFilter);

  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v11;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = v14;
  *(void *)(a1 + 32) = v16;
  *(unsigned char *)(a1 + 40) = v17;
  *(unsigned char *)(a1 + 41) = v18;
}

id sub_1C24EBD54()
{
  return objc_msgSend(*v0, sel_state);
}

void sub_1C24EBD64(uint64_t a1@<X8>)
{
}

id sub_1C24EBD88()
{
  return objc_msgSend(*v0, sel_recordCategoryType);
}

id sub_1C24EBD98()
{
  id v1 = objc_msgSend(*v0, sel_chartableCodedQuantitySet);
  return v1;
}

id HKDiagnosticTestResult.chartableCodedQuantitySet()()
{
  id v1 = v0;
  v48[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254CAD0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v11 = MEMORY[0x1F4188790](v10).n128_u64[0];
  id v13 = (char *)&v41 - v12;
  id v14 = objc_msgSend(v1, sel_value, v11);
  id v15 = v14;
  if (v14)
  {
    id v16 = objc_msgSend(v14, sel_inspectableValue);

    if (!v16) {
      return 0;
    }
    if (objc_msgSend(v1, sel_isDateLess))
    {

      return 0;
    }
    uint64_t v43 = v2;
    uint64_t v44 = v5;
    uint64_t v42 = v3;
    id v17 = objc_msgSend(v1, sel_diagnosticTestCodingCollection);
    id v18 = objc_msgSend(v17, sel_codings);

    sub_1C21AB51C(0, &qword_1EA2DE858);
    sub_1C254F710();

    id v19 = objc_msgSend(v1, sel_referenceRanges);
    if (v19)
    {
      id v20 = v19;
      sub_1C21AB51C(0, &qword_1EA2DE868);
      uint64_t v21 = sub_1C254F710();
    }
    else
    {
      uint64_t v21 = 0;
    }
    id v22 = v16;
    id v23 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    if (v21)
    {
      sub_1C21AB51C(0, &qword_1EA2DE868);
      id v24 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v24 = 0;
    }
    id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2ADD0]), sel_initWithCodings_value_referenceRanges_, v23, v22, v24);

    id v26 = objc_msgSend(v1, sel_sortDate);
    id v27 = objc_msgSend(v26, sel_date);

    sub_1C254CA80();
    Date.medicalDateAdjustedToCurrentCalendar()((uint64_t)v13);
    id v28 = *(void (**)(char *, uint64_t))(v7 + 8);
    v28(v9, v6);
    id v29 = (void *)sub_1C254CA50();
    id v46 = 0;
    id v15 = objc_msgSend(v25, sel_chartableCodedQuantitySetWithDate_error_, v29, &v46);

    id v30 = v46;
    if (!v15)
    {
      uint64_t v31 = v30;
      uint64_t v32 = (void *)sub_1C254C820();

      swift_willThrow();
      v28(v13, v6);
      uint64_t v33 = v44;
      sub_1C254E520();
      id v34 = v32;
      id v35 = v32;
      id v36 = sub_1C254E550();
      os_log_type_t v37 = sub_1C254FA20();
      if (os_log_type_enabled(v36, v37))
      {
        double v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        *(_DWORD *)double v38 = 136446210;
        v48[0] = v39;
        id v41 = v38 + 4;
        id v46 = 0;
        unint64_t v47 = 0xE000000000000000;
        id v45 = v32;
        sub_1C2206F9C();
        sub_1C25504F0();
        id v46 = (id)sub_1C21AD354((uint64_t)v46, v47, v48);
        sub_1C2550120();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C21A1000, v36, v37, "%{public}s", v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v39, -1, -1);
        MEMORY[0x1C875A0B0](v38, -1, -1);

        (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v43);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v42 + 8))(v33, v43);
      }
      return 0;
    }
    v28(v13, v6);
  }
  return v15;
}

id sub_1C24EC3C0(void *a1)
{
  id v1 = a1;
  id v2 = HKDiagnosticTestResult.chartableCodedQuantitySet()();

  return v2;
}

uint64_t dispatch thunk of MedicalRecordChartData.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MedicalRecordChartData.dateFormat.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MedicalRecordChartData.hasTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MedicalRecordChartData.partOfOutOfRangeSeries.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t AttachmentSearchItem.reuseIdentifier.getter()
{
  type metadata accessor for AttachmentSearchCell();
  sub_1C24EEDBC(&qword_1EA2E4920, v0, (void (*)(uint64_t))type metadata accessor for AttachmentSearchCell);
  return sub_1C254D330();
}

uint64_t type metadata accessor for AttachmentSearchCell()
{
  return self;
}

uint64_t AttachmentSearchItem.uniqueIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1C24EC50C()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_previewString + 8);
  if (v1)
  {
    if (*(void *)(*(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_previewStringMatchRanges)
                   + 16))
    {
      uint64_t v27 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_previewStringMatchRanges);
      id v2 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
      swift_bridgeObjectRetain();
      uint64_t v3 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      id v1 = objc_msgSend(v2, sel_initWithString_, v3);

      sub_1C24EED58(0, (unint64_t *)&qword_1EA2E4460, (uint64_t (*)(uint64_t))sub_1C21F0FE8, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
      id v5 = (void *)*MEMORY[0x1E4FB06F8];
      *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
      uint64_t v6 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
      id v25 = v5;
      uint64_t v7 = sub_1C254FE50();
      *(void *)(inited + 64) = v6;
      *(void *)(inited + 40) = v7;
      sub_1C2203C38(inited);
      type metadata accessor for Key(0);
      sub_1C24EEDBC((unint64_t *)&qword_1EA2E4470, 255, type metadata accessor for Key);
      uint64_t v8 = (void *)sub_1C254F2C0();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_addAttributes_range_, v8, 0, objc_msgSend(v1, sel_length));

      uint64_t v9 = (void *)sub_1C254FE50();
      uint64_t v10 = swift_initStackObject();
      double v11 = (void **)MEMORY[0x1E4FB0700];
      *(_OWORD *)(v10 + 16) = xmmword_1C255CDA0;
      uint64_t v12 = *v11;
      *(void *)(v10 + 32) = *v11;
      id v13 = self;
      id v14 = v12;
      id v15 = objc_msgSend(v13, sel_labelColor);
      uint64_t v16 = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
      *(void *)(v10 + 40) = v15;
      *(void *)(v10 + 64) = v16;
      *(void *)(v10 + 72) = v25;
      *(void *)(v10 + 104) = v6;
      *(void *)(v10 + 80) = v9;
      id v17 = v25;
      id v18 = v9;
      sub_1C2203C38(v10);
      uint64_t v19 = *(void *)(v27 + 16);
      if (v19)
      {
        id v26 = v18;
        swift_bridgeObjectRetain();
        id v20 = (uint64_t *)(v27 + 40);
        do
        {
          uint64_t v21 = *(v20 - 1);
          uint64_t v22 = *v20;
          id v23 = (void *)sub_1C254F2C0();
          objc_msgSend(v1, sel_setAttributes_range_, v23, v21, v22);

          v20 += 2;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
        id v18 = v26;
      }

      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

uint64_t AttachmentSearchItem.__allocating_init(name:previewString:previewStringMatchRanges:record:attachmentUUID:profile:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = swift_allocObject();
  AttachmentSearchItem.init(name:previewString:previewStringMatchRanges:record:attachmentUUID:profile:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

char *AttachmentSearchItem.init(name:previewString:previewStringMatchRanges:record:attachmentUUID:profile:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v49 = a7;
  uint64_t v50 = a8;
  uint64_t v42 = a2;
  uint64_t v43 = a6;
  uint64_t v47 = a4;
  uint64_t v48 = a5;
  uint64_t v46 = a3;
  uint64_t v41 = a1;
  sub_1C24EED58(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v13 = sub_1C254CAD0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v44 = (char *)&v40 - v18;
  uint64_t v19 = sub_1C254CB40();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CB30();
  uint64_t v23 = sub_1C254CAF0();
  uint64_t v25 = v24;
  id v26 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v45 = v19;
  v26(v22, v19);
  *((void *)v9 + 2) = v23;
  *((void *)v9 + 3) = v25;
  uint64_t v27 = v42;
  id v28 = v43;
  *((void *)v9 + 4) = v41;
  *((void *)v9 + 5) = v27;
  id v29 = objc_msgSend(v28, sel_meaningfulDate);
  if (!v29)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_5;
  }
  id v30 = v29;
  sub_1C254CA80();

  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v31(v12, v16, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_5:
    id v33 = objc_msgSend(v28, sel_sortDate);
    id v34 = objc_msgSend(v33, sel_date);

    uint64_t v32 = v44;
    sub_1C254CA80();

    sub_1C24EEC98((uint64_t)v12, (uint64_t)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C24EED58);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    goto LABEL_6;
  }
  uint64_t v32 = v44;
  v31(v44, v12, v13);
LABEL_6:
  v31(&v9[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_date], v32, v13);
  HKMedicalRecord.categoryKind.getter(&v51);
  v9[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_categoryKind] = v51;
  id v35 = &v9[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_previewString];
  uint64_t v36 = v45;
  uint64_t v37 = v47;
  *(void *)id v35 = v46;
  *((void *)v35 + 1) = v37;
  uint64_t v38 = v49;
  *(void *)&v9[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_previewStringMatchRanges] = v48;
  *(void *)&v9[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_record] = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(&v9[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_attachmentUUID], v38, v36);
  *(void *)&v9[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_profile] = v50;
  return v9;
}

uint64_t AttachmentSearchItem.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_date;
  uint64_t v2 = sub_1C254CAD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v3 = v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_attachmentUUID;
  uint64_t v4 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return v0;
}

uint64_t AttachmentSearchItem.__deallocating_deinit()
{
  AttachmentSearchItem.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C24ECEB8()
{
  type metadata accessor for AttachmentSearchCell();
  sub_1C24EEDBC(&qword_1EA2E4920, v0, (void (*)(uint64_t))type metadata accessor for AttachmentSearchCell);
  return sub_1C254D330();
}

id sub_1C24ECF1C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemTitleView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C24ECFA0()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabel);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v4, sel_setNumberOfLines_, 0);
    id v5 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v4, sel_setTextColor_, v5);

    objc_msgSend(v4, sel_setLineBreakMode_, 4);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C24ED08C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleLabelBottomConstraint;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleLabelBottomConstraint];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleLabelBottomConstraint];
  }
  else
  {
    id v4 = objc_msgSend(v0, sel_contentView);
    id v5 = objc_msgSend(v4, sel_safeAreaLayoutGuide);

    id v6 = objc_msgSend(v5, sel_bottomAnchor);
    id v7 = sub_1C24ECF1C();
    id v8 = objc_msgSend(v7, sel_bottomAnchor);

    if (qword_1EA2DD8F8 != -1) {
      swift_once();
    }
    id v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, *(double *)&qword_1EA2E4908);

    uint64_t v10 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_1C24ED1C8()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabelConstraints;
  if (*(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabelConstraints])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabelConstraints];
  }
  else
  {
    id v3 = v0;
    sub_1C21ACA3C();
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C255DBA0;
    id v5 = sub_1C24ECFA0();
    id v6 = objc_msgSend(v5, sel_topAnchor);

    id v7 = sub_1C24ECF1C();
    id v8 = objc_msgSend(v7, sel_bottomAnchor);

    if (qword_1EA2DD8F0 != -1) {
      swift_once();
    }
    id v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, *(double *)&qword_1EA2E4900);

    *(void *)(v4 + 32) = v9;
    id v10 = sub_1C24ECFA0();
    id v11 = objc_msgSend(v10, sel_leadingAnchor);

    id v12 = objc_msgSend(v3, sel_contentView);
    id v13 = objc_msgSend(v12, sel_safeAreaLayoutGuide);

    id v14 = objc_msgSend(v13, sel_leadingAnchor);
    if (qword_1EA2DD900 != -1) {
      swift_once();
    }
    id v15 = objc_msgSend(v11, sel_constraintEqualToAnchor_constant_, v14, *(double *)&qword_1EA2E4910);

    *(void *)(v4 + 40) = v15;
    id v16 = objc_msgSend(v3, sel_contentView);
    id v17 = objc_msgSend(v16, sel_safeAreaLayoutGuide);

    id v18 = objc_msgSend(v17, sel_trailingAnchor);
    id v19 = sub_1C24ECFA0();
    id v20 = objc_msgSend(v19, sel_trailingAnchor);

    id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, *(double *)&qword_1EA2E4910);
    *(void *)(v4 + 48) = v21;
    id v22 = objc_msgSend(v3, sel_contentView);
    id v23 = objc_msgSend(v22, sel_bottomAnchor);

    id v24 = sub_1C24ECFA0();
    id v25 = objc_msgSend(v24, sel_bottomAnchor);

    if (qword_1EA2DD908 != -1) {
      swift_once();
    }
    id v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, *(double *)&qword_1EA2E4918);

    *(void *)(v4 + 56) = v26;
    sub_1C254F730();
    uint64_t v2 = v4;
    *(void *)&v3[v1] = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t AttachmentSearchCell.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C24ED5B4(uint64_t a1, void *a2)
{
  sub_1C2227014(a1, (uint64_t)v6);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1E4F66028];
  sub_1C225F0B8((uint64_t)v6, v3, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
  swift_endAccess();
  sub_1C24ED738();
  return sub_1C24EEC98((uint64_t)v6, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, v4, (uint64_t (*)(void))sub_1C225EBC8);
}

uint64_t AttachmentSearchCell.item.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1E4F66028];
  sub_1C225F0B8(a1, v3, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
  swift_endAccess();
  sub_1C24ED738();
  return sub_1C24EEC98(a1, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, v4, (uint64_t (*)(void))sub_1C225EBC8);
}

uint64_t sub_1C24ED738()
{
  uint64_t v1 = sub_1C254C990();
  uint64_t v50 = *(void *)(v1 - 8);
  uint64_t v51 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C254C9B0();
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v48 = v4;
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254C9C0();
  uint64_t v49 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v43 - v11;
  MEMORY[0x1F4188790](v13);
  id v15 = (char *)&v43 - v14;
  uint64_t v16 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = v0;
  uint64_t v19 = v0 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  sub_1C2227014(v19, (uint64_t)v54);
  if (!v55) {
    return sub_1C24EEC98((uint64_t)v54, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for AttachmentSearchItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    id v21 = v18;
    uint64_t v22 = v53;
    *id v21 = *(unsigned char *)(v53 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_categoryKind);
    uint64_t v23 = (uint64_t)v21;
    swift_storeEnumTagMultiPayload();
    id v45 = sub_1C24ECF1C();
    uint64_t v24 = *(void *)(v22 + 40);
    uint64_t v43 = *(void *)(v22 + 32);
    uint64_t v44 = v24;
    uint64_t v46 = v22 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_date;
    uint64_t v25 = swift_bridgeObjectRetain();
    MEMORY[0x1C87548E0](v25);
    sub_1C254C9A0();
    sub_1C254C970();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v6, v48);
    id v26 = *(void (**)(char *, uint64_t))(v49 + 8);
    v26(v9, v7);
    sub_1C254C980();
    sub_1C254C960();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v3, v51);
    v26(v12, v7);
    sub_1C24EEDBC(&qword_1EA2E4968, 255, MEMORY[0x1E4F27860]);
    sub_1C254CAB0();
    v26(v15, v7);
    uint64_t v27 = v54[0];
    uint64_t v28 = v54[1];
    BrowseCategory.systemImageName.getter();
    id v30 = v29;
    if (v29)
    {
      uint64_t v31 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      id v32 = objc_msgSend(self, sel_systemImageNamed_, v31);

      if (v32)
      {
        id v30 = objc_msgSend(v32, sel_imageWithRenderingMode_, 1);
      }
      else
      {
        id v30 = 0;
      }
    }
    uint64_t v33 = v44;
    id v34 = v45;
    uint64_t v35 = v43;
    id v36 = BrowseCategory.tintColorForTemplateImage.getter();
    id v55 = &type metadata for AttachmentSearchFeedItemViewData;
    id v56 = &off_1F1D9DB50;
    uint64_t v37 = (void *)swift_allocObject();
    v54[0] = v37;
    v37[2] = v35;
    v37[3] = v33;
    v37[4] = v27;
    v37[5] = v28;
    v37[6] = v30;
    v37[7] = v36;
    uint64_t v38 = (uint64_t)v34 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
    swift_beginAccess();
    sub_1C225F0B8((uint64_t)v54, v38, (unint64_t *)&qword_1EA2DEE88, &qword_1EA2DEE90);
    swift_endAccess();
    sub_1C223A4E8();
    sub_1C24EEC98((uint64_t)v54, (uint64_t)&qword_1EA2DEE88, (uint64_t)&qword_1EA2DEE90, (uint64_t)&protocol descriptor for ConceptTitleViewContentProviding, (uint64_t (*)(void))sub_1C225EBC8);

    id v39 = sub_1C24EC50C();
    id v40 = v39;
    if (v39) {

    }
    sub_1C24EDD44(v40 != 0);
    id v41 = sub_1C24ECFA0();
    id v42 = sub_1C24EC50C();
    objc_msgSend(v41, sel_setAttributedText_, v42);
    swift_release();

    return sub_1C24EECF8(v23, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  }
  return result;
}