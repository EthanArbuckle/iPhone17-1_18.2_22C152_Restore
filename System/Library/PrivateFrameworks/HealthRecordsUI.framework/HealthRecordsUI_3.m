id static UIColor.hrui_unreadable.getter()
{
  return sub_1C21A4D60(&qword_1EBB6EF90, (void **)&qword_1EBB6FFF0);
}

id sub_1C23B0358(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EBB6EF90, (void **)&qword_1EBB6FFF0);
}

uint64_t sub_1C23B037C()
{
  v0 = self;
  id v1 = objc_msgSend(v0, sel_systemRedColor);
  id v2 = objc_msgSend(v0, sel_systemDarkRedColor);
  id v3 = objc_msgSend(v0, sel_systemRedColor);
  id v4 = objc_msgSend(v0, sel_systemRedColor);
  v5 = (void *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v14[4] = sub_1C23B0AB8;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  v14[2] = sub_1C23B0A44;
  v14[3] = &block_descriptor_27;
  v7 = _Block_copy(v14);
  id v8 = v4;
  id v9 = v3;
  id v10 = v2;
  id v11 = v1;
  id v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  uint64_t result = swift_release();
  qword_1EA2E2550 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_devices.getter()
{
  return sub_1C21A4D60(&qword_1EA2DD738, (void **)&qword_1EA2E2550);
}

id sub_1C23B053C(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EA2DD738, (void **)&qword_1EA2E2550);
}

uint64_t sub_1C23B0560()
{
  v0 = self;
  id v1 = objc_msgSend(v0, sel_systemGreenColor);
  id v2 = objc_msgSend(v0, sel_systemDarkGreenColor);
  id v3 = objc_msgSend(v0, sel_systemGreenColor);
  id v4 = objc_msgSend(v0, sel_systemGreenColor);
  v5 = (void *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v14[4] = sub_1C23B0AB8;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  v14[2] = sub_1C23B0A44;
  v14[3] = &block_descriptor_20;
  v7 = _Block_copy(v14);
  id v8 = v4;
  id v9 = v3;
  id v10 = v2;
  id v11 = v1;
  id v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  uint64_t result = swift_release();
  qword_1EA2E2558 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_socialHistory.getter()
{
  return sub_1C21A4D60(&qword_1EA2DD740, (void **)&qword_1EA2E2558);
}

id sub_1C23B0720(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EA2DD740, (void **)&qword_1EA2E2558);
}

uint64_t sub_1C23B0744()
{
  v0 = self;
  id v1 = objc_msgSend(v0, sel_systemBlueColor);
  id v2 = objc_msgSend(v0, sel_systemDarkBlueColor);
  id v3 = objc_msgSend(v0, sel_systemBlueColor);
  id v4 = objc_msgSend(v0, sel_systemBlueColor);
  v5 = (void *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v14[4] = sub_1C23B0AB8;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  v14[2] = sub_1C23B0A44;
  v14[3] = &block_descriptor_13;
  v7 = _Block_copy(v14);
  id v8 = v4;
  id v9 = v3;
  id v10 = v2;
  id v11 = v1;
  id v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  uint64_t result = swift_release();
  qword_1EA2E2560 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_carePlans.getter()
{
  return sub_1C21A4D60(qword_1EA2DD748, (void **)&qword_1EA2E2560);
}

id sub_1C23B0904(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, qword_1EA2DD748, (void **)&qword_1EA2E2560);
}

id sub_1C23B0928(uint64_t a1, uint64_t a2, void *a3, void **a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  v5 = *a4;
  return v5;
}

id sub_1C23B0978(void *a1, void *a2, void *a3)
{
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2) {
    v5 = a2;
  }
  else {
    v5 = a3;
  }
  return v5;
}

uint64_t sub_1C23B09C0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1C23B0A00(void *a1)
{
  id v2 = *(void **)(v1 + 16);
  id v3 = *(void **)(v1 + 24);
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2) {
    id v4 = v2;
  }
  else {
    id v4 = v3;
  }
  return v4;
}

id sub_1C23B0A44(uint64_t a1, void *a2)
{
  id v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t block_destroy_helper_39()
{
  return swift_release();
}

unint64_t sub_1C23B0AF0()
{
  unint64_t result = qword_1EBB70010;
  if (!qword_1EBB70010)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB70010);
  }
  return result;
}

uint64_t objectdestroy_2Tm_1()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

id sub_1C23B0B84(void *a1)
{
  id v3 = (void *)v1[2];
  id v4 = (void *)v1[3];
  v5 = (void *)v1[4];
  id v6 = (void *)v1[5];
  id v7 = objc_msgSend(a1, sel_userInterfaceStyle);
  id v8 = objc_msgSend(a1, sel_accessibilityContrast);
  if (v8 == (id)1) {
    id v9 = v3;
  }
  else {
    id v9 = v4;
  }
  if (v8 == (id)1) {
    id v10 = v5;
  }
  else {
    id v10 = v6;
  }
  if (v7 == (id)2) {
    id v11 = v9;
  }
  else {
    id v11 = v10;
  }
  return v11;
}

uint64_t sub_1C23B0C78(uint64_t a1)
{
  uint64_t v50 = type metadata accessor for UserDomainConceptViewData();
  uint64_t v2 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v47 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  MEMORY[0x1F4188790](v5);
  uint64_t v49 = (uint64_t)&v41 - v7;
  int64_t v8 = 0;
  id v9 = (void *)MEMORY[0x1E4FBC868];
  v52 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v44 = a1 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v51 = v6;
  uint64_t v48 = v6 + 8;
  int64_t v45 = (unint64_t)(v11 + 63) >> 6;
  long long v42 = xmmword_1C255CD90;
  uint64_t v43 = a1;
  uint64_t v46 = v2;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v8 << 6);
    }
    else
    {
      int64_t v16 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_37;
      }
      if (v16 >= v45)
      {
LABEL_34:
        swift_release();
        return (uint64_t)v9;
      }
      unint64_t v17 = *(void *)(v44 + 8 * v16);
      ++v8;
      if (!v17)
      {
        int64_t v8 = v16 + 1;
        if (v16 + 1 >= v45) {
          goto LABEL_34;
        }
        unint64_t v17 = *(void *)(v44 + 8 * v8);
        if (!v17)
        {
          int64_t v8 = v16 + 2;
          if (v16 + 2 >= v45) {
            goto LABEL_34;
          }
          unint64_t v17 = *(void *)(v44 + 8 * v8);
          if (!v17)
          {
            int64_t v8 = v16 + 3;
            if (v16 + 3 >= v45) {
              goto LABEL_34;
            }
            unint64_t v17 = *(void *)(v44 + 8 * v8);
            if (!v17)
            {
              int64_t v18 = v16 + 4;
              if (v18 >= v45) {
                goto LABEL_34;
              }
              unint64_t v17 = *(void *)(v44 + 8 * v18);
              if (!v17)
              {
                while (1)
                {
                  int64_t v8 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_38;
                  }
                  if (v8 >= v45) {
                    goto LABEL_34;
                  }
                  unint64_t v17 = *(void *)(v44 + 8 * v8);
                  ++v18;
                  if (v17) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v8 = v18;
            }
          }
        }
      }
LABEL_21:
      unint64_t v13 = (v17 - 1) & v17;
      unint64_t v15 = __clz(__rbit64(v17)) + (v8 << 6);
    }
    uint64_t v19 = *(void *)(v2 + 72);
    uint64_t v20 = v49;
    sub_1C225F054(*(void *)(a1 + 48) + v19 * v15, v49);
    sub_1C22EA32C(v20, v51);
    char v21 = *(unsigned char *)(v48 + *(int *)(v50 + 56));
    unint64_t v23 = sub_1C2457ABC(v21);
    uint64_t v24 = v9[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25)) {
      break;
    }
    char v27 = v22;
    if (v9[3] < v26)
    {
      sub_1C227D574(v26, 1);
      id v9 = v52;
      unint64_t v28 = sub_1C2457ABC(v21);
      if ((v27 & 1) != (v29 & 1)) {
        goto LABEL_39;
      }
      unint64_t v23 = v28;
    }
    if (v27)
    {
      uint64_t v30 = v9[7];
      sub_1C22EA32C(v51, v47);
      unint64_t v31 = *(void *)(v30 + 8 * v23);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v30 + 8 * v23) = v31;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v31 = sub_1C226D198(0, *(void *)(v31 + 16) + 1, 1, v31);
        *(void *)(v30 + 8 * v23) = v31;
      }
      unint64_t v34 = *(void *)(v31 + 16);
      unint64_t v33 = *(void *)(v31 + 24);
      if (v34 >= v33 >> 1)
      {
        unint64_t v31 = sub_1C226D198(v33 > 1, v34 + 1, 1, v31);
        *(void *)(v30 + 8 * v23) = v31;
      }
      *(void *)(v31 + 16) = v34 + 1;
      uint64_t v2 = v46;
      sub_1C22EA32C(v47, v31 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80)) + v34 * v19);
      a1 = v43;
    }
    else
    {
      sub_1C23B1EF4(0, &qword_1EA2DF638, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, MEMORY[0x1E4FBBE00]);
      unint64_t v35 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v42;
      sub_1C22EA32C(v51, v36 + v35);
      v9[(v23 >> 6) + 8] |= 1 << v23;
      *(unsigned char *)(v9[6] + v23) = v21;
      *(void *)(v9[7] + 8 * v23) = v36;
      uint64_t v37 = v9[2];
      BOOL v38 = __OFADD__(v37, 1);
      uint64_t v39 = v37 + 1;
      if (v38) {
        goto LABEL_36;
      }
      v9[2] = v39;
      uint64_t v2 = v46;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  uint64_t result = sub_1C2550910();
  __break(1u);
  return result;
}

uint64_t sub_1C23B10F4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v68 = a3;
  v66 = a2;
  v50[0] = a1;
  uint64_t v5 = sub_1C254FC50();
  uint64_t v73 = *(void *)(v5 - 8);
  uint64_t v74 = v5;
  MEMORY[0x1F4188790](v5);
  v72 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C23B1EF4(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)v50 - v8;
  sub_1C23B1AC4();
  uint64_t v52 = v10;
  uint64_t v53 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C23B2070(0, &qword_1EA2E2580, (void (*)(uint64_t))sub_1C23B1AC4, (void (*)(uint64_t))sub_1C23B1BB0, (void (*)(void))sub_1C23B1CE0);
  uint64_t v60 = v13;
  uint64_t v62 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)v50 - v14;
  sub_1C23B1D5C();
  uint64_t v61 = v16;
  uint64_t v63 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v51 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C23B1FF4(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v64 = v18;
  uint64_t v65 = v19;
  MEMORY[0x1F4188790](v18);
  v58 = (char *)v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C23B2070(0, &qword_1EA2E25C8, sub_1C23B1FF4, (void (*)(uint64_t))sub_1C22A82E4, (void (*)(void))sub_1C23B2100);
  uint64_t v67 = v21;
  uint64_t v69 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  v57 = (char *)v50 - v22;
  sub_1C23B2134();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v70 = v23;
  uint64_t v71 = v24;
  MEMORY[0x1F4188790](v23);
  v59 = (char *)v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (void *)sub_1C254E450();
  id v75 = a4;
  id v76 = v26;
  uint64_t v55 = sub_1C254FC20();
  uint64_t v27 = *(void *)(v55 - 8);
  v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  uint64_t v56 = v27 + 56;
  v54(v9, 1, 1, v55);
  unint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F677F0];
  sub_1C23B4CAC(0, (unint64_t *)&qword_1EA2E2570, MEMORY[0x1E4F677F0], MEMORY[0x1E4F1AAE0]);
  v50[2] = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  sub_1C23B4D20(&qword_1EA2E2578, (unint64_t *)&qword_1EA2E2570, v28);
  v50[1] = sub_1C22611AC();
  id v29 = a4;
  sub_1C254EC70();
  sub_1C2258214((uint64_t)v9);

  swift_release();
  sub_1C23B1BB0();
  sub_1C23B1CE0();
  uint64_t v30 = v52;
  sub_1C254EC00();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v30);
  unint64_t v31 = (void *)swift_allocObject();
  v32 = v66;
  v31[2] = v50[0];
  v31[3] = v32;
  v31[4] = v68;
  v31[5] = v29;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_1C23B2924;
  *(void *)(v33 + 24) = v31;
  id v34 = v29;
  swift_retain();
  id v35 = v32;
  swift_retain();
  sub_1C254E9D0();
  sub_1C23B1E5C();
  sub_1C23B1F58();
  sub_1C23B1D14(&qword_1EA2E25A8, (void (*)(uint64_t))sub_1C23B1E5C);
  uint64_t v36 = v51;
  uint64_t v37 = v60;
  sub_1C254ECD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v15, v37);
  id v76 = (id)MEMORY[0x1E4FBC860];
  sub_1C23B203C();
  BOOL v38 = v58;
  uint64_t v39 = v61;
  sub_1C254EBE0();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v36, v39);
  sub_1C22A82E4();
  sub_1C23B2100();
  v40 = v57;
  uint64_t v41 = v64;
  sub_1C254EC00();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v38, v41);
  long long v42 = v72;
  sub_1C254FC40();
  id v76 = v34;
  v54(v9, 1, 1, v55);
  sub_1C23B2214();
  id v43 = v34;
  uint64_t v44 = v59;
  uint64_t v45 = v67;
  sub_1C254EC80();
  sub_1C2258214((uint64_t)v9);

  (*(void (**)(char *, uint64_t))(v73 + 8))(v42, v74);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v45);
  sub_1C23B1D14(&qword_1EA2E25E8, (void (*)(uint64_t))sub_1C23B2134);
  uint64_t v46 = v70;
  uint64_t v47 = (void *)sub_1C254EBA0();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v44, v46);
  id v76 = v47;
  sub_1C23B5A70(0, &qword_1EA2E25F0, (uint64_t (*)(uint64_t))sub_1C23B2B54, sub_1C23B2CC8, MEMORY[0x1E4F1A840]);
  sub_1C23B2CFC();
  uint64_t v48 = sub_1C254EBC0();
  swift_release();
  return v48;
}

void sub_1C23B1AC4()
{
  if (!qword_1EA2E2568)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F677F0];
    sub_1C23B4CAC(255, (unint64_t *)&qword_1EA2E2570, MEMORY[0x1E4F677F0], MEMORY[0x1E4F1AAE0]);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    sub_1C23B4D20(&qword_1EA2E2578, (unint64_t *)&qword_1EA2E2570, v0);
    sub_1C22611AC();
    unint64_t v1 = sub_1C254E9B0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E2568);
    }
  }
}

void sub_1C23B1BB0()
{
  if (!qword_1EA2E2588)
  {
    sub_1C23B1C78(255, &qword_1EBB6F028, (unint64_t *)&qword_1EBB6EFF0, 0x1E4F2B1B8, MEMORY[0x1E4FBB320]);
    sub_1C23B1C78(255, &qword_1EBB6EFE8, &qword_1EBB6F030, 0x1E4F2B148, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E2588);
    }
  }
}

void sub_1C23B1C78(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C21AB51C(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C23B1CE0()
{
  return sub_1C23B1D14(&qword_1EA2E2590, (void (*)(uint64_t))sub_1C23B1AC4);
}

uint64_t sub_1C23B1D14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C23B1D5C()
{
  if (!qword_1EA2E2598)
  {
    sub_1C23B1E5C();
    sub_1C23B2070(255, &qword_1EA2E2580, (void (*)(uint64_t))sub_1C23B1AC4, (void (*)(uint64_t))sub_1C23B1BB0, (void (*)(void))sub_1C23B1CE0);
    sub_1C23B1D14(&qword_1EA2E25A8, (void (*)(uint64_t))sub_1C23B1E5C);
    sub_1C23B1F58();
    unint64_t v0 = sub_1C254E950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2598);
    }
  }
}

void sub_1C23B1E5C()
{
  if (!qword_1EA2E25A0)
  {
    sub_1C23B1EF4(255, &qword_1EA2DF970, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C254E9E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E25A0);
    }
  }
}

void sub_1C23B1EF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C23B1F58()
{
  unint64_t result = qword_1EA2E25B0;
  if (!qword_1EA2E25B0)
  {
    sub_1C23B2070(255, &qword_1EA2E2580, (void (*)(uint64_t))sub_1C23B1AC4, (void (*)(uint64_t))sub_1C23B1BB0, (void (*)(void))sub_1C23B1CE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E25B0);
  }
  return result;
}

void sub_1C23B1FF4(uint64_t a1)
{
}

uint64_t sub_1C23B203C()
{
  return sub_1C23B1D14(&qword_1EA2E25C0, (void (*)(uint64_t))sub_1C23B1D5C);
}

void sub_1C23B2070(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_1C254E930();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C23B2100()
{
  return sub_1C23B1D14(&qword_1EA2E25D0, sub_1C23B1FF4);
}

void sub_1C23B2134()
{
  if (!qword_1EA2E25D8)
  {
    sub_1C23B2070(255, &qword_1EA2E25C8, sub_1C23B1FF4, (void (*)(uint64_t))sub_1C22A82E4, (void (*)(void))sub_1C23B2100);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    sub_1C23B2214();
    sub_1C22611AC();
    unint64_t v0 = sub_1C254E960();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E25D8);
    }
  }
}

unint64_t sub_1C23B2214()
{
  unint64_t result = qword_1EA2E25E0;
  if (!qword_1EA2E25E0)
  {
    sub_1C23B2070(255, &qword_1EA2E25C8, sub_1C23B1FF4, (void (*)(uint64_t))sub_1C22A82E4, (void (*)(void))sub_1C23B2100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E25E0);
  }
  return result;
}

uint64_t sub_1C23B22B0@<X0>(void *a1@<X8>)
{
  unint64_t v2 = sub_1C254E4B0();
  unint64_t v3 = sub_1C254E470();
  sub_1C2272C04(v3);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!(v2 >> 62))
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a1 = v9;
    uint64_t result = sub_1C254E4A0();
    a1[1] = result;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_19;
  }
LABEL_3:
  if (v4 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        MEMORY[0x1C87588E0](i, v2);
        self;
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x1C8757C00]();
          if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C254F760();
          }
          sub_1C254F790();
          sub_1C254F730();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      for (uint64_t j = 0; j != v4; ++j)
      {
        unint64_t v8 = *(void **)(v2 + 8 * j + 32);
        self;
        if (swift_dynamicCastObjCClass())
        {
          MEMORY[0x1C8757C00](v8);
          if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C254F760();
          }
          sub_1C254F790();
          sub_1C254F730();
        }
      }
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C23B24D4(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v32 = a5;
  sub_1C23B4A70();
  uint64_t v34 = v11;
  uint64_t v37 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C23B4BA0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v35 = v14;
  uint64_t v36 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C23B5A70(0, &qword_1EA2E2658, (uint64_t (*)(uint64_t))sub_1C23B4BA0, sub_1C23B4D84, MEMORY[0x1E4F1AA28]);
  uint64_t v33 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v31 - v20;
  uint64_t v38 = a1;
  sub_1C23B1C78(0, &qword_1EBB6F028, (unint64_t *)&qword_1EBB6EFF0, 0x1E4F2B1B8, MEMORY[0x1E4FBB320]);
  sub_1C23B4B1C();
  sub_1C254F670();
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = a3;
  v22[3] = a4;
  v22[4] = v32;
  v22[5] = a6;
  v22[6] = a2;
  id v23 = a2;
  swift_retain();
  id v24 = a4;
  swift_retain();
  id v25 = a6;
  sub_1C254E9D0();
  sub_1C23B4CAC(0, &qword_1EA2E2640, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, MEMORY[0x1E4F1AAE0]);
  sub_1C23B1D14(&qword_1EA2E2650, (void (*)(uint64_t))sub_1C23B4A70);
  sub_1C23B4D20(&qword_1EA2E2648, &qword_1EA2E2640, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData);
  uint64_t v26 = v34;
  sub_1C254ECD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v26);
  sub_1C23B4D84();
  uint64_t v27 = v35;
  sub_1C254EC50();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v27);
  sub_1C23B4E4C();
  uint64_t v28 = v33;
  uint64_t v29 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v28);
  return v29;
}

uint64_t sub_1C23B28D4()
{
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C23B2924(uint64_t a1, void *a2)
{
  return sub_1C23B24D4(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1C23B2930()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C23B2968@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1C23B29A0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C2492ADC(v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1C23B0C78(v3);
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1C2457ABC(0), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void **)(*(void *)(v4 + 56) + 8 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v7;
  swift_bridgeObjectRetain();
  sub_1C23B375C(&v14);
  swift_bridgeObjectRelease();
  unint64_t v8 = v14;
  if (*(void *)(v4 + 16) && (unint64_t v9 = sub_1C2457ABC(1), (v10 & 1) != 0))
  {
    uint64_t v11 = *(void **)(*(void *)(v4 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = v11;
  swift_getKeyPath();
  sub_1C23B1EF4(0, &qword_1EA2DF970, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, MEMORY[0x1E4FBB320]);
  sub_1C23B5BC8(&qword_1EA2E2620, &qword_1EA2DF970, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData);
  uint64_t v12 = sub_1C254F650();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  a1[1] = v12;
  return result;
}

void sub_1C23B2B54()
{
  if (!qword_1EA2E25F8)
  {
    sub_1C23B2134();
    sub_1C23B4CAC(255, &qword_1EA2E2600, (uint64_t (*)(uint64_t))sub_1C22A82E4, MEMORY[0x1E4F65E80]);
    sub_1C23B1D14(&qword_1EA2E25E8, (void (*)(uint64_t))sub_1C23B2134);
    sub_1C23B2C40();
    unint64_t v0 = sub_1C254E9A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E25F8);
    }
  }
}

unint64_t sub_1C23B2C40()
{
  unint64_t result = qword_1EA2E2608;
  if (!qword_1EA2E2608)
  {
    sub_1C23B4CAC(255, &qword_1EA2E2600, (uint64_t (*)(uint64_t))sub_1C22A82E4, MEMORY[0x1E4F65E80]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2608);
  }
  return result;
}

uint64_t sub_1C23B2CC8()
{
  return sub_1C23B1D14(&qword_1EA2E2610, (void (*)(uint64_t))sub_1C23B2B54);
}

unint64_t sub_1C23B2CFC()
{
  unint64_t result = qword_1EA2E2618;
  if (!qword_1EA2E2618)
  {
    sub_1C23B5A70(255, &qword_1EA2E25F0, (uint64_t (*)(uint64_t))sub_1C23B2B54, sub_1C23B2CC8, MEMORY[0x1E4F1A840]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2618);
  }
  return result;
}

void sub_1C23B2D98(unint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, char a5@<W5>, void *a6@<X8>)
{
  char v10 = a5 & 1;
  unint64_t v11 = *a1;
  uint64_t v12 = (void *)MEMORY[0x1C87594F0]();
  sub_1C23B2E30(v11, a2, a3, a4, v10, a6);
}

uint64_t sub_1C23B2E30@<X0>(unint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, char a5@<W5>, id a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v66 = a4;
  uint64_t v67 = a3;
  id v68 = a2;
  sub_1C23B1EF4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v60 - v12;
  uint64_t v14 = sub_1C254E560();
  uint64_t v64 = *(void (***)(char *, uint64_t))(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1C2550620())
    {
LABEL_3:
      uint64_t v65 = v7;
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v18 = (id)MEMORY[0x1C87588E0](0, a1);
      }
      else
      {
        if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_27;
        }
        id v18 = *(id *)(a1 + 32);
      }
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      uint64_t v16 = v19;
      unint64_t v20 = *(void *)(HKDiagnosticTestResult.valueDisplayables.getter() + 16);

      swift_bridgeObjectRelease();
      if (v20 < 2)
      {
        id v24 = (void (**)(char *, uint64_t))HKDiagnosticTestResult.valueString.getter();
        uint64_t v63 = v25;
        uint64_t v64 = v24;
        uint64_t v26 = v16;
        uint64_t v27 = sub_1C23B3518(v16);
        uint64_t v61 = v28;
        uint64_t v62 = v27;

        goto LABEL_10;
      }
      if (qword_1EBB6EF40 == -1)
      {
LABEL_8:
        id v21 = (id)qword_1EBB6FBC8;
        swift_bridgeObjectRetain();
        uint64_t v22 = sub_1C254C730();
        uint64_t v63 = v23;
        uint64_t v64 = (void (**)(char *, uint64_t))v22;
        swift_bridgeObjectRelease();

        uint64_t v61 = 0;
        uint64_t v62 = 0;
LABEL_10:
        id v29 = objc_msgSend(v16, sel_state);
        id v30 = objc_msgSend(v16, sel_meaningfulDate);
        if (v30)
        {
          uint64_t v31 = v30;
          uint64_t v32 = (uint64_t)a6;
          sub_1C254CA80();

          uint64_t v33 = sub_1C254CAD0();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v13, 0, 1, v33);
        }
        else
        {
          uint64_t v32 = (uint64_t)a6;
          uint64_t v34 = sub_1C254CAD0();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v13, 1, 1, v34);
        }
        unsigned __int8 v35 = a5 & 1;
        if (a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v36 = sub_1C2550620();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v36 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        id v37 = objc_msgSend(v16, sel_value);
        if (v37)
        {
          uint64_t v38 = v37;
          id v39 = objc_msgSend(v16, sel_referenceRanges);
          id v40 = objc_msgSend(v38, sel_valueInRangeWithReferenceRanges_includeUnitString_allowsNullRange_, v39, 1, 1);
        }
        else
        {
          id v40 = 0;
        }
        id v41 = v68;
        sub_1C24F94AC(v41, (uint64_t)v29, (uint64_t)v13, v36, (uint64_t)v40, (uint64_t)v64, v63, v62, v32, v61, v67, 0, v66, v35);

        uint64_t v42 = type metadata accessor for UserDomainConceptViewData();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v32, 0, 1, v42);
      }
LABEL_27:
      swift_once();
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  sub_1C254E510();
  id v44 = v68;
  uint64_t v45 = sub_1C254E550();
  os_log_type_t v46 = sub_1C254FA00();
  int v47 = v46;
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v48 = swift_slowAlloc();
    uint64_t v65 = v7;
    uint64_t v49 = v48;
    uint64_t v67 = swift_slowAlloc();
    uint64_t v70 = v67;
    *(_DWORD *)uint64_t v49 = 136315394;
    uint64_t v69 = &type metadata for LabsListViewDataProvider;
    sub_1C23B5B8C();
    LODWORD(v66) = v47;
    uint64_t v50 = sub_1C254F4F0();
    id v68 = a6;
    uint64_t v69 = (ValueMetadata *)sub_1C21AD354(v50, v51, &v70);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2080;
    uint64_t v63 = v49 + 14;
    id v52 = v44;
    id v53 = objc_msgSend(v52, sel_description);
    uint64_t v54 = sub_1C254F470();
    unint64_t v56 = v55;

    uint64_t v57 = v54;
    a6 = v68;
    uint64_t v69 = (ValueMetadata *)sub_1C21AD354(v57, v56, &v70);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v45, (os_log_type_t)v66, "%s itemPublisher dropping %s because it has no records", (uint8_t *)v49, 0x16u);
    uint64_t v58 = v67;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v58, -1, -1);
    MEMORY[0x1C875A0B0](v49, -1, -1);
  }
  else
  {
  }
  v64[1](v16, v14);
  uint64_t v59 = type metadata accessor for UserDomainConceptViewData();
  return (*(uint64_t (**)(id, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(a6, 1, 1, v59);
}

uint64_t sub_1C23B3518(void *a1)
{
  if (!a1) {
    return 0;
  }
  id v1 = objc_msgSend(a1, sel_value);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(self, sel__unitStringForValueCollection_, v1);
  sub_1C254F470();

  if (qword_1EBB6EF30 != -1) {
    uint64_t v4 = swift_once();
  }
  uint64_t v10 = *(void *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v4);
  sub_1C254CEE0();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
  sub_1C23B1D14((unint64_t *)&qword_1EBB6F240, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();
  swift_release();
  id v5 = objc_msgSend(v11, sel_ucumDisplayConverter, v10);
  uint64_t v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_synonymForUCUMUnitString_, v6);

  uint64_t v8 = sub_1C254F470();
  return v8;
}

void sub_1C23B375C(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for UserDomainConceptViewData() - 8);
  id v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v3 = (void *)sub_1C23F3814(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1C23B3804(v5);
  *a1 = v3;
}

void sub_1C23B3804(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v157 = type metadata accessor for UserDomainConceptViewData();
  uint64_t v151 = *(void *)(v157 - 8);
  MEMORY[0x1F4188790](v157);
  uint64_t v147 = (uint64_t)&v139 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v158 = (uint64_t)&v139 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v153 = (uint64_t)&v139 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v152 = (uint64_t)&v139 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v139 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v148 = (uint64_t)&v139 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v144 = (uint64_t)&v139 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v143 = (uint64_t)&v139 - v19;
  uint64_t v20 = a1[1];
  uint64_t v21 = sub_1C2550800();
  if (v21 >= v20)
  {
    if (v20 < 0) {
      goto LABEL_158;
    }
    if (v20) {
      sub_1C23B42C8(0, v20, 1, a1);
    }
    return;
  }
  if (v20 >= 0) {
    uint64_t v22 = v20;
  }
  else {
    uint64_t v22 = v20 + 1;
  }
  if (v20 < -1) {
    goto LABEL_166;
  }
  v139 = v13;
  uint64_t v141 = v21;
  if (v20 < 2)
  {
    uint64_t v26 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v150 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80));
    uint64_t v140 = MEMORY[0x1E4FBC860];
    if (v20 != 1)
    {
      unint64_t v28 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_124:
      if (v28 >= 2)
      {
        uint64_t v133 = *a1;
        do
        {
          unint64_t v134 = v28 - 2;
          if (v28 < 2) {
            goto LABEL_153;
          }
          if (!v133) {
            goto LABEL_165;
          }
          uint64_t v135 = *(void *)&v26[16 * v134 + 32];
          uint64_t v136 = *(void *)&v26[16 * v28 + 24];
          sub_1C23B4548(v133 + *(void *)(v151 + 72) * v135, v133 + *(void *)(v151 + 72) * *(void *)&v26[16 * v28 + 16], v133 + *(void *)(v151 + 72) * v136, v150);
          if (v2) {
            break;
          }
          if (v136 < v135) {
            goto LABEL_154;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v26 = sub_1C23F321C((uint64_t)v26);
          }
          if (v134 >= *((void *)v26 + 2)) {
            goto LABEL_155;
          }
          v137 = &v26[16 * v134 + 32];
          *(void *)v137 = v135;
          *((void *)v137 + 1) = v136;
          unint64_t v138 = *((void *)v26 + 2);
          if (v28 > v138) {
            goto LABEL_156;
          }
          memmove(&v26[16 * v28 + 16], &v26[16 * v28 + 32], 16 * (v138 - v28));
          *((void *)v26 + 2) = v138 - 1;
          unint64_t v28 = v138 - 1;
        }
        while (v138 > 2);
      }
LABEL_135:
      swift_bridgeObjectRelease();
      *(void *)(v140 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v23 = v22 >> 1;
    uint64_t v24 = sub_1C254F780();
    *(void *)(v24 + 16) = v23;
    uint64_t v25 = *(unsigned __int8 *)(v151 + 80);
    uint64_t v140 = v24;
    unint64_t v150 = v24 + ((v25 + 32) & ~v25);
  }
  uint64_t v27 = 0;
  uint64_t v26 = (char *)MEMORY[0x1E4FBC860];
  v156 = a1;
  while (1)
  {
    v145 = v26;
    uint64_t v29 = v27;
    uint64_t v30 = v27 + 1;
    uint64_t v149 = v27;
    if (v27 + 1 >= v20)
    {
      uint64_t v26 = v145;
      goto LABEL_76;
    }
    uint64_t v142 = v2;
    uint64_t v31 = *a1;
    uint64_t v32 = *(void *)(v151 + 72);
    uint64_t v33 = v143;
    sub_1C225F054(*a1 + v32 * v30, v143);
    uint64_t v34 = v31 + v32 * v29;
    uint64_t v35 = v144;
    sub_1C225F054(v34, v144);
    uint64_t v36 = *(int *)(v157 + 56);
    uint64_t v37 = *(unsigned char *)(v33 + v36 + 8) ? -1 : *(void *)(v33 + v36);
    uint64_t v159 = v37;
    uint64_t v38 = v35 + v36;
    uint64_t v39 = *(unsigned char *)(v38 + 8) ? -1 : *(void *)v38;
    uint64_t v155 = v39;
    uint64_t v40 = v35;
    uint64_t v29 = v149;
    sub_1C22EA0E4(v40);
    sub_1C22EA0E4(v33);
    uint64_t v154 = v31;
    uint64_t v160 = v32;
    if (v29 + 2 >= v20)
    {
      uint64_t v43 = v29 + 2;
      uint64_t v54 = v32;
    }
    else
    {
      uint64_t v41 = v32 * v30;
      uint64_t v42 = v31;
      uint64_t v43 = v29 + 2;
      uint64_t v44 = v32 * (v29 + 2);
      uint64_t v45 = (uint64_t)v139;
      while (1)
      {
        uint64_t v46 = v20;
        int v47 = v159 < v155;
        uint64_t v48 = v148;
        sub_1C225F054(v42 + v44, v148);
        sub_1C225F054(v42 + v41, v45);
        uint64_t v49 = *(int *)(v157 + 56);
        uint64_t v50 = *(unsigned char *)(v48 + v49 + 8) ? -1 : *(void *)(v48 + v49);
        uint64_t v51 = v45 + v49;
        uint64_t v52 = *(unsigned char *)(v51 + 8) ? -1 : *(void *)v51;
        int v53 = v50 >= v52;
        sub_1C22EA0E4(v45);
        sub_1C22EA0E4(v48);
        if (v47 == v53) {
          break;
        }
        uint64_t v54 = v160;
        v42 += v160;
        ++v43;
        uint64_t v20 = v46;
        if (v46 == v43)
        {
          uint64_t v43 = v46;
          a1 = v156;
          uint64_t v29 = v149;
          goto LABEL_36;
        }
      }
      a1 = v156;
      uint64_t v29 = v149;
      uint64_t v20 = v46;
      uint64_t v54 = v160;
    }
LABEL_36:
    uint64_t v26 = v145;
    if (v159 >= v155) {
      break;
    }
    if (v43 < v29) {
      goto LABEL_159;
    }
    uint64_t v30 = v43;
    if (v29 >= v43) {
      goto LABEL_50;
    }
    uint64_t v159 = v20;
    uint64_t v55 = 0;
    uint64_t v56 = v54 * (v43 - 1);
    uint64_t v57 = v43 * v54;
    uint64_t v58 = v29 * v54;
    do
    {
      if (v29 != v30 + v55 - 1)
      {
        uint64_t v59 = v154;
        if (!v154) {
          goto LABEL_164;
        }
        unint64_t v60 = v154 + v58;
        sub_1C22EA32C(v154 + v58, v147);
        if (v58 < v56 || v60 >= v59 + v57)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v58 != v56)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_1C22EA32C(v147, v59 + v56);
        uint64_t v30 = v43;
        uint64_t v54 = v160;
      }
      ++v29;
      --v55;
      v56 -= v54;
      v57 -= v54;
      v58 += v54;
    }
    while (v29 < v30 + v55);
    a1 = v156;
    uint64_t v26 = v145;
    uint64_t v2 = v142;
    uint64_t v29 = v149;
    uint64_t v20 = v159;
    if (v30 < v159) {
      goto LABEL_53;
    }
LABEL_76:
    if (v30 < v29) {
      goto LABEL_152;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v155 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v26 = sub_1C23F277C(0, *((void *)v26 + 2) + 1, 1, v26);
    }
    unint64_t v83 = *((void *)v26 + 2);
    unint64_t v82 = *((void *)v26 + 3);
    unint64_t v28 = v83 + 1;
    if (v83 >= v82 >> 1) {
      uint64_t v26 = sub_1C23F277C((char *)(v82 > 1), v83 + 1, 1, v26);
    }
    *((void *)v26 + 2) = v28;
    v84 = v26 + 32;
    v85 = &v26[16 * v83 + 32];
    uint64_t v86 = v155;
    *(void *)v85 = v149;
    *((void *)v85 + 1) = v86;
    if (v83)
    {
      while (1)
      {
        unint64_t v87 = v28 - 1;
        if (v28 >= 4)
        {
          v92 = &v84[16 * v28];
          uint64_t v93 = *((void *)v92 - 8);
          uint64_t v94 = *((void *)v92 - 7);
          BOOL v98 = __OFSUB__(v94, v93);
          uint64_t v95 = v94 - v93;
          if (v98) {
            goto LABEL_141;
          }
          uint64_t v97 = *((void *)v92 - 6);
          uint64_t v96 = *((void *)v92 - 5);
          BOOL v98 = __OFSUB__(v96, v97);
          uint64_t v90 = v96 - v97;
          char v91 = v98;
          if (v98) {
            goto LABEL_142;
          }
          unint64_t v99 = v28 - 2;
          v100 = &v84[16 * v28 - 32];
          uint64_t v102 = *(void *)v100;
          uint64_t v101 = *((void *)v100 + 1);
          BOOL v98 = __OFSUB__(v101, v102);
          uint64_t v103 = v101 - v102;
          if (v98) {
            goto LABEL_144;
          }
          BOOL v98 = __OFADD__(v90, v103);
          uint64_t v104 = v90 + v103;
          if (v98) {
            goto LABEL_147;
          }
          if (v104 >= v95)
          {
            v122 = &v84[16 * v87];
            uint64_t v124 = *(void *)v122;
            uint64_t v123 = *((void *)v122 + 1);
            BOOL v98 = __OFSUB__(v123, v124);
            uint64_t v125 = v123 - v124;
            if (v98) {
              goto LABEL_151;
            }
            BOOL v115 = v90 < v125;
            goto LABEL_113;
          }
        }
        else
        {
          if (v28 != 3)
          {
            uint64_t v116 = *((void *)v26 + 4);
            uint64_t v117 = *((void *)v26 + 5);
            BOOL v98 = __OFSUB__(v117, v116);
            uint64_t v109 = v117 - v116;
            char v110 = v98;
            goto LABEL_107;
          }
          uint64_t v89 = *((void *)v26 + 4);
          uint64_t v88 = *((void *)v26 + 5);
          BOOL v98 = __OFSUB__(v88, v89);
          uint64_t v90 = v88 - v89;
          char v91 = v98;
        }
        if (v91) {
          goto LABEL_143;
        }
        unint64_t v99 = v28 - 2;
        v105 = &v84[16 * v28 - 32];
        uint64_t v107 = *(void *)v105;
        uint64_t v106 = *((void *)v105 + 1);
        BOOL v108 = __OFSUB__(v106, v107);
        uint64_t v109 = v106 - v107;
        char v110 = v108;
        if (v108) {
          goto LABEL_146;
        }
        v111 = &v84[16 * v87];
        uint64_t v113 = *(void *)v111;
        uint64_t v112 = *((void *)v111 + 1);
        BOOL v98 = __OFSUB__(v112, v113);
        uint64_t v114 = v112 - v113;
        if (v98) {
          goto LABEL_149;
        }
        if (__OFADD__(v109, v114)) {
          goto LABEL_150;
        }
        if (v109 + v114 >= v90)
        {
          BOOL v115 = v90 < v114;
LABEL_113:
          if (v115) {
            unint64_t v87 = v99;
          }
          goto LABEL_115;
        }
LABEL_107:
        if (v110) {
          goto LABEL_145;
        }
        v118 = &v84[16 * v87];
        uint64_t v120 = *(void *)v118;
        uint64_t v119 = *((void *)v118 + 1);
        BOOL v98 = __OFSUB__(v119, v120);
        uint64_t v121 = v119 - v120;
        if (v98) {
          goto LABEL_148;
        }
        if (v121 < v109) {
          goto LABEL_14;
        }
LABEL_115:
        unint64_t v126 = v87 - 1;
        if (v87 - 1 >= v28)
        {
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
          goto LABEL_161;
        }
        uint64_t v127 = *a1;
        if (!*a1) {
          goto LABEL_163;
        }
        v128 = &v84[16 * v126];
        uint64_t v129 = *(void *)v128;
        v130 = &v84[16 * v87];
        uint64_t v131 = *((void *)v130 + 1);
        sub_1C23B4548(v127 + *(void *)(v151 + 72) * *(void *)v128, v127 + *(void *)(v151 + 72) * *(void *)v130, v127 + *(void *)(v151 + 72) * v131, v150);
        if (v2) {
          goto LABEL_135;
        }
        if (v131 < v129) {
          goto LABEL_138;
        }
        if (v87 > *((void *)v26 + 2)) {
          goto LABEL_139;
        }
        *(void *)v128 = v129;
        *(void *)&v84[16 * v126 + 8] = v131;
        unint64_t v132 = *((void *)v26 + 2);
        if (v87 >= v132) {
          goto LABEL_140;
        }
        unint64_t v28 = v132 - 1;
        memmove(&v84[16 * v87], v130 + 16, 16 * (v132 - 1 - v87));
        *((void *)v26 + 2) = v132 - 1;
        a1 = v156;
        if (v132 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v28 = 1;
LABEL_14:
    uint64_t v20 = a1[1];
    uint64_t v27 = v155;
    if (v155 >= v20) {
      goto LABEL_124;
    }
  }
  uint64_t v30 = v43;
LABEL_50:
  uint64_t v2 = v142;
  if (v30 >= v20) {
    goto LABEL_76;
  }
LABEL_53:
  if (__OFSUB__(v30, v29)) {
    goto LABEL_157;
  }
  if (v30 - v29 >= v141) {
    goto LABEL_76;
  }
  if (__OFADD__(v29, v141)) {
    goto LABEL_160;
  }
  if (v29 + v141 >= v20) {
    uint64_t v61 = v20;
  }
  else {
    uint64_t v61 = v29 + v141;
  }
  if (v61 >= v29)
  {
    if (v30 != v61)
    {
      uint64_t v142 = v2;
      uint64_t v62 = *(void *)(v151 + 72);
      uint64_t v63 = v62 * (v30 - 1);
      uint64_t v154 = v62;
      uint64_t v64 = v30 * v62;
      uint64_t v146 = v61;
      do
      {
        uint64_t v66 = 0;
        uint64_t v155 = v30;
        while (1)
        {
          uint64_t v159 = v29;
          uint64_t v67 = v156;
          uint64_t v68 = *v156;
          uint64_t v69 = v64;
          uint64_t v70 = v64 + v66 + *v156;
          uint64_t v71 = v152;
          sub_1C225F054(v70, v152);
          uint64_t v72 = v63;
          uint64_t v73 = v63 + v66 + v68;
          uint64_t v74 = v153;
          sub_1C225F054(v73, v153);
          uint64_t v75 = *(int *)(v157 + 56);
          uint64_t v76 = *(unsigned char *)(v71 + v75 + 8) ? -1 : *(void *)(v71 + v75);
          uint64_t v160 = v76;
          uint64_t v77 = v74 + v75;
          uint64_t v78 = *(unsigned char *)(v77 + 8) ? -1 : *(void *)v77;
          sub_1C22EA0E4(v74);
          sub_1C22EA0E4(v71);
          if (v160 >= v78) {
            break;
          }
          uint64_t v79 = *v67;
          if (!*v67) {
            goto LABEL_162;
          }
          uint64_t v64 = v69;
          uint64_t v63 = v72;
          uint64_t v80 = v79 + v72 + v66;
          sub_1C22EA32C(v79 + v69 + v66, v158);
          swift_arrayInitWithTakeFrontToBack();
          sub_1C22EA32C(v158, v80);
          uint64_t v65 = v155;
          v66 -= v154;
          uint64_t v29 = v159 + 1;
          if (v155 == v159 + 1) {
            goto LABEL_63;
          }
        }
        uint64_t v65 = v155;
        uint64_t v63 = v72;
        uint64_t v64 = v69;
LABEL_63:
        uint64_t v30 = v65 + 1;
        v63 += v154;
        v64 += v154;
        uint64_t v29 = v149;
      }
      while (v30 != v146);
      uint64_t v30 = v146;
      uint64_t v2 = v142;
      a1 = v156;
      uint64_t v26 = v145;
    }
    goto LABEL_76;
  }
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  sub_1C25505E0();
  __break(1u);
}

void sub_1C23B42C8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v29 = a1;
  uint64_t v32 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v32);
  uint64_t v33 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v27 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v31 = a3;
  uint64_t v28 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v35 = v15 * (v31 - 1);
    uint64_t v30 = v15;
    uint64_t v34 = v15 * v31;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v29;
    while (1)
    {
      uint64_t v18 = a4;
      uint64_t v19 = *a4;
      sub_1C225F054(v34 + v16 + v19, (uint64_t)v14);
      sub_1C225F054(v35 + v16 + v19, (uint64_t)v10);
      uint64_t v20 = *(int *)(v32 + 56);
      if (v14[v20 + 8]) {
        uint64_t v21 = -1;
      }
      else {
        uint64_t v21 = *(void *)&v14[v20];
      }
      uint64_t v22 = &v10[v20];
      if (v22[8]) {
        uint64_t v23 = -1;
      }
      else {
        uint64_t v23 = *(void *)v22;
      }
      sub_1C22EA0E4((uint64_t)v10);
      sub_1C22EA0E4((uint64_t)v14);
      BOOL v24 = v21 < v23;
      a4 = v18;
      if (!v24)
      {
LABEL_4:
        v35 += v30;
        v34 += v30;
        if (++v31 == v28) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v25 = *v18;
      if (!*v18) {
        break;
      }
      uint64_t v26 = v25 + v35 + v16;
      sub_1C22EA32C(v25 + v34 + v16, v33);
      swift_arrayInitWithTakeFrontToBack();
      sub_1C22EA32C(v33, v26);
      v16 -= v30;
      ++v17;
      a4 = v18;
      if (v31 == v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C23B4548(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v8);
  unint64_t v55 = (unint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v54 = (char *)&v50 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v50 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v50 - v16;
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_79;
  }
  int64_t v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_80;
  }
  uint64_t v21 = (uint64_t)(a2 - a1) / v19;
  unint64_t v58 = a1;
  unint64_t v57 = a4;
  uint64_t v22 = v20 / v19;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      uint64_t v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v35 = a4 + v24;
      unint64_t v56 = a4 + v24;
      unint64_t v58 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        uint64_t v37 = -v19;
        unint64_t v52 = a4;
        unint64_t v53 = a1;
        uint64_t v51 = v8;
        uint64_t v38 = (uint64_t)v54;
        do
        {
          sub_1C225F054(v35 + v37, v38);
          unint64_t v39 = a2 + v37;
          uint64_t v40 = v55;
          sub_1C225F054(a2 + v37, v55);
          uint64_t v41 = *(int *)(v8 + 56);
          if (*(unsigned char *)(v38 + v41 + 8)) {
            uint64_t v42 = -1;
          }
          else {
            uint64_t v42 = *(void *)(v38 + v41);
          }
          uint64_t v43 = v40 + v41;
          if (*(unsigned char *)(v43 + 8)) {
            uint64_t v44 = -1;
          }
          else {
            uint64_t v44 = *(void *)v43;
          }
          unint64_t v45 = a3 + v37;
          sub_1C22EA0E4(v40);
          sub_1C22EA0E4(v38);
          if (v42 >= v44)
          {
            unint64_t v48 = v56;
            v56 += v37;
            if (a3 < v48 || v45 >= v48)
            {
              uint64_t v8 = v51;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v39 = a2;
              unint64_t v46 = v52;
              unint64_t v47 = v53;
            }
            else
            {
              uint64_t v8 = v51;
              unint64_t v46 = v52;
              unint64_t v47 = v53;
              if (a3 != v48) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v39 = a2;
            }
          }
          else
          {
            if (a3 < a2 || v45 >= a2)
            {
              uint64_t v8 = v51;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v52;
              unint64_t v47 = v53;
            }
            else
            {
              uint64_t v8 = v51;
              unint64_t v46 = v52;
              unint64_t v47 = v53;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v58 += v37;
          }
          unint64_t v35 = v56;
          if (v56 <= v46) {
            break;
          }
          a2 = v39;
          a3 += v37;
        }
        while (v39 > v47);
      }
      goto LABEL_77;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v55 = a4 + v23;
    unint64_t v56 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      do
      {
        sub_1C225F054(a2, (uint64_t)v17);
        sub_1C225F054(a4, (uint64_t)v14);
        uint64_t v26 = *(int *)(v8 + 56);
        if (v17[v26 + 8]) {
          uint64_t v27 = -1;
        }
        else {
          uint64_t v27 = *(void *)&v17[v26];
        }
        uint64_t v28 = &v14[v26];
        if (v28[8]) {
          uint64_t v29 = -1;
        }
        else {
          uint64_t v29 = *(void *)v28;
        }
        sub_1C22EA0E4((uint64_t)v14);
        sub_1C22EA0E4((uint64_t)v17);
        unint64_t v30 = v58;
        if (v27 >= v29)
        {
          unint64_t v33 = v57 + v19;
          if (v58 < v57 || v58 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v58 != v57)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v57 = v33;
          unint64_t v31 = a2;
        }
        else
        {
          unint64_t v31 = a2 + v19;
          if (v58 < a2 || v58 >= v31)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v58 == a2)
          {
            unint64_t v30 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v58 = v30 + v19;
        a4 = v57;
        if (v57 >= v55) {
          break;
        }
        a2 = v31;
      }
      while (v31 < a3);
    }
LABEL_77:
    sub_1C23F2FEC(&v58, &v57, (uint64_t *)&v56);
    return 1;
  }
LABEL_81:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

void sub_1C23B4A70()
{
  if (!qword_1EA2E2628)
  {
    sub_1C23B1C78(255, &qword_1EBB6F028, (unint64_t *)&qword_1EBB6EFF0, 0x1E4F2B1B8, MEMORY[0x1E4FBB320]);
    sub_1C23B4B1C();
    unint64_t v0 = sub_1C254E980();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2628);
    }
  }
}

unint64_t sub_1C23B4B1C()
{
  unint64_t result = qword_1EA2E2630;
  if (!qword_1EA2E2630)
  {
    sub_1C23B1C78(255, &qword_1EBB6F028, (unint64_t *)&qword_1EBB6EFF0, 0x1E4F2B1B8, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2630);
  }
  return result;
}

void sub_1C23B4BA0()
{
  if (!qword_1EA2E2638)
  {
    sub_1C23B4CAC(255, &qword_1EA2E2640, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, MEMORY[0x1E4F1AAE0]);
    sub_1C23B4A70();
    sub_1C23B4D20(&qword_1EA2E2648, &qword_1EA2E2640, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData);
    sub_1C23B1D14(&qword_1EA2E2650, (void (*)(uint64_t))sub_1C23B4A70);
    unint64_t v0 = sub_1C254E950();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2638);
    }
  }
}

void sub_1C23B4CAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C23B4D20(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C23B4CAC(255, a2, a3, MEMORY[0x1E4F1AAE0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C23B4D84()
{
  return sub_1C23B1D14(&qword_1EA2E2660, (void (*)(uint64_t))sub_1C23B4BA0);
}

uint64_t sub_1C23B4DB8()
{
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C23B4E10@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C23B53E0(*(void *)(v2 + 32), *a1, *(void **)(v2 + 24), *(void **)(v2 + 48));
  *a2 = result;
  return result;
}

unint64_t sub_1C23B4E4C()
{
  unint64_t result = qword_1EA2E2668;
  if (!qword_1EA2E2668)
  {
    sub_1C23B5A70(255, &qword_1EA2E2658, (uint64_t (*)(uint64_t))sub_1C23B4BA0, sub_1C23B4D84, MEMORY[0x1E4F1AA28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2668);
  }
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1C23B4EE8(uint64_t a1, void *a2)
{
  uint64_t v14 = a2;
  uint64_t v2 = sub_1C254FC60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254FC00();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1C254F200();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v13 = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  sub_1C254F1F0();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  sub_1C23B1D14((unint64_t *)&qword_1EBB6FF88, MEMORY[0x1E4FBCC10]);
  unint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C23B1EF4(0, &qword_1EBB6FF50, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C23B5BC8((unint64_t *)&qword_1EBB6FF58, &qword_1EBB6FF50, v8);
  sub_1C2550200();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC58], v2);
  sub_1C254FCB0();
  type metadata accessor for UserDomainConceptDataProvider();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = MEMORY[0x1E4FBC868];
  v9[2] = MEMORY[0x1E4FBC868];
  v9[3] = v10;
  uint64_t v11 = v14;
  v9[4] = v14;
  id v12 = v11;
}

uint64_t sub_1C23B51AC(id *a1, void *a2)
{
  uint64_t v3 = v2;
  id v24 = a2;
  uint64_t v5 = sub_1C254CB40();
  uint64_t v6 = *(void (***)(char *, uint64_t))(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = MEMORY[0x1F4188790](v9);
  id v12 = (char *)v21 - v11;
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v13 = *(void *)(((unint64_t)a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13) {
      goto LABEL_3;
    }
    return 0;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v13) {
    return 0;
  }
LABEL_3:
  v21[1] = v3;
  uint64_t v22 = a1;
  uint64_t v14 = 0;
  unint64_t v23 = (unint64_t)a1 & 0xC000000000000001;
  uint64_t v15 = v6 + 1;
  while (1)
  {
    uint64_t v16 = v23
        ? (void (**)(char *, uint64_t))MEMORY[0x1C87588E0](v14, a1, v10)
        : (void (**)(char *, uint64_t))a1[v14 + 4];
    uint64_t v6 = v16;
    id v17 = objc_msgSend(v16, sel_targetUUID);
    sub_1C254CB20();

    id v18 = objc_msgSend(v24, sel_UUID);
    sub_1C254CB20();

    uint64_t v3 = sub_1C254CB10();
    a1 = (id *)*v15;
    (*v15)(v8, v5);
    ((void (*)(char *, uint64_t))a1)(v12, v5);

    if (v3) {
      return v14;
    }
    uint64_t v19 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v14;
    a1 = v22;
    if (v19 == v13) {
      return 0;
    }
  }
}

uint64_t sub_1C23B53E0(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v34 = a1;
  sub_1C23B5A70(0, &qword_1EA2E2670, (uint64_t (*)(uint64_t))sub_1C23B57C0, sub_1C23B585C, MEMORY[0x1E4F1A890]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v34 - v10;
  sub_1C23B5890();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C254E440();
  uint64_t v37 = a3;
  uint64_t v38 = v8;
  uint64_t v35 = v17;
  uint64_t v36 = v9;
  if (!a4) {
    goto LABEL_5;
  }
  id v18 = objc_msgSend(a4, sel_linkCollection, v34);
  if (!v18)
  {
    a4 = 0;
LABEL_5:
    char v25 = 1;
    goto LABEL_6;
  }
  uint64_t v19 = v18;
  id v20 = objc_msgSend(v18, sel_links);

  sub_1C21AB51C(0, &qword_1EA2E1B38);
  uint64_t v21 = (id *)sub_1C254F710();

  id v22 = a2;
  a4 = (void *)sub_1C23B51AC(v21, v22);
  char v24 = v23;
  swift_bridgeObjectRelease();

  char v25 = v24 & 1;
LABEL_6:
  uint64_t v40 = sub_1C23644AC(a2, 2, 0, 0);
  uint64_t v39 = MEMORY[0x1E4FBC860];
  sub_1C23B57C0();
  sub_1C23B585C();
  sub_1C254EBE0();
  swift_release();
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = v37;
  *(void *)(v26 + 16) = a2;
  *(void *)(v26 + 24) = v27;
  *(void *)(v26 + 32) = v35;
  *(void *)(v26 + 40) = a4;
  *(unsigned char *)(v26 + 48) = v25;
  type metadata accessor for UserDomainConceptViewData();
  sub_1C23B5950();
  id v28 = a2;
  id v29 = v27;
  uint64_t v30 = v38;
  sub_1C254EBD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v30);
  sub_1C23B5A3C();
  uint64_t v31 = sub_1C254EC30();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v40 = v31;
  sub_1C23B5A70(0, &qword_1EA2E26A0, (uint64_t (*)(uint64_t))sub_1C23B5890, sub_1C23B5A3C, MEMORY[0x1E4F1A9D0]);
  sub_1C23B5AF0();
  uint64_t v32 = sub_1C254EBC0();
  swift_release();
  return v32;
}

void sub_1C23B57C0()
{
  if (!qword_1EA2E2678)
  {
    sub_1C23B1C78(255, &qword_1EA2E1B08, (unint64_t *)&qword_1EA2DFB78, 0x1E4F2AF58, MEMORY[0x1E4FBB320]);
    sub_1C2206F9C();
    unint64_t v0 = sub_1C254E9E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2678);
    }
  }
}

uint64_t sub_1C23B585C()
{
  return sub_1C23B1D14(&qword_1EA2E2680, (void (*)(uint64_t))sub_1C23B57C0);
}

void sub_1C23B5890()
{
  if (!qword_1EA2E2688)
  {
    sub_1C23B5A70(255, &qword_1EA2E2670, (uint64_t (*)(uint64_t))sub_1C23B57C0, sub_1C23B585C, MEMORY[0x1E4F1A890]);
    type metadata accessor for UserDomainConceptViewData();
    sub_1C23B5950();
    unint64_t v0 = sub_1C254E900();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2688);
    }
  }
}

unint64_t sub_1C23B5950()
{
  unint64_t result = qword_1EA2E2690;
  if (!qword_1EA2E2690)
  {
    sub_1C23B5A70(255, &qword_1EA2E2670, (uint64_t (*)(uint64_t))sub_1C23B57C0, sub_1C23B585C, MEMORY[0x1E4F1A890]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2690);
  }
  return result;
}

uint64_t sub_1C23B59EC()
{
  return MEMORY[0x1F4186498](v0, 49, 7);
}

void sub_1C23B5A2C(unint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_1C23B2D98(a1, *(void **)(v2 + 16), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned char *)(v2 + 48), a2);
}

uint64_t sub_1C23B5A3C()
{
  return sub_1C23B1D14(&qword_1EA2E2698, (void (*)(uint64_t))sub_1C23B5890);
}

void sub_1C23B5A70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

unint64_t sub_1C23B5AF0()
{
  unint64_t result = qword_1EA2E26A8;
  if (!qword_1EA2E26A8)
  {
    sub_1C23B5A70(255, &qword_1EA2E26A0, (uint64_t (*)(uint64_t))sub_1C23B5890, sub_1C23B5A3C, MEMORY[0x1E4F1A9D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E26A8);
  }
  return result;
}

unint64_t sub_1C23B5B8C()
{
  unint64_t result = qword_1EA2E26B0;
  if (!qword_1EA2E26B0)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E26B0);
  }
  return result;
}

uint64_t sub_1C23B5BC8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C23B1EF4(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void destroy for LabsListViewDataProvider(uint64_t a1)
{
  swift_release();

  swift_release();
  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for LabsListViewDataProvider(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  id v5 = v3;
  swift_retain();
  id v6 = v4;
  return a1;
}

void *assignWithCopy for LabsListViewDataProvider(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[1];
  id v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  a1[2] = a2[2];
  swift_retain();
  swift_release();
  uint64_t v7 = (void *)a2[3];
  uint64_t v8 = (void *)a1[3];
  a1[3] = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for LabsListViewDataProvider(uint64_t a1, _OWORD *a2)
{
  swift_release();
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  swift_release();
  id v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for GatewayIdentifiedClinicalAccount(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GatewayIdentifiedClinicalAccount(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LabsListViewDataProvider()
{
  return &type metadata for LabsListViewDataProvider;
}

unsigned char *storeEnumTagSinglePayload for LabsListViewDataProvider.ItemState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C23B5F0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LabsListViewDataProvider.ItemState()
{
  return &type metadata for LabsListViewDataProvider.ItemState;
}

unint64_t sub_1C23B5F48()
{
  unint64_t result = qword_1EA2E26B8;
  if (!qword_1EA2E26B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E26B8);
  }
  return result;
}

uint64_t sub_1C23B5F9C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C254EB70();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C23B601C(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return sub_1C254EB80();
}

uint64_t sub_1C23B6090()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C254EB70();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C23B610C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return sub_1C254EB80();
}

void (*sub_1C23B6178(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1C254EB60();
  return sub_1C23B6204;
}

void sub_1C23B6204(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_1C23B626C()
{
  return swift_endAccess();
}

uint64_t sub_1C23B6300(uint64_t a1)
{
  sub_1C23B6744(0, &qword_1EA2E26E0, (uint64_t (*)(uint64_t))sub_1C23B655C, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v13 - v9;
  unint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  v11((char *)&v13 - v9, a1, v3, v8);
  ((void (*)(char *, char *, uint64_t))v11)(v6, v10, v3);
  swift_beginAccess();
  sub_1C23B6744(0, (unint64_t *)&unk_1EA2E5580, (uint64_t (*)(uint64_t))sub_1C23B655C, MEMORY[0x1E4F1AC70]);
  sub_1C254EB50();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

uint64_t sub_1C23B64CC()
{
  return swift_endAccess();
}

void sub_1C23B655C(uint64_t a1)
{
}

unint64_t sub_1C23B6590()
{
  unint64_t result = qword_1EA2E5590;
  if (!qword_1EA2E5590)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1EA2E5590);
  }
  return result;
}

uint64_t sub_1C23B65D0(uint64_t a1)
{
  sub_1C23B6744(0, &qword_1EA2E26E0, (uint64_t (*)(uint64_t))sub_1C23B655C, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  __n128 v5 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v8 - v6, a1, v3, v5);
  swift_beginAccess();
  sub_1C23B6744(0, (unint64_t *)&unk_1EA2E5580, (uint64_t (*)(uint64_t))sub_1C23B655C, MEMORY[0x1E4F1AC70]);
  sub_1C254EB50();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void sub_1C23B6744(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void (*sub_1C23B67A8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_1C23B6744(0, &qword_1EA2E26E0, (uint64_t (*)(uint64_t))sub_1C23B655C, MEMORY[0x1E4F1AC60]);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC15HealthRecordsUI41DownloadableAttachmentStateChangeListener__latestChange;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_1C23B6744(0, (unint64_t *)&unk_1EA2E5580, (uint64_t (*)(uint64_t))sub_1C23B655C, MEMORY[0x1E4F1AC70]);
  v3[16] = v9;
  sub_1C254EB40();
  swift_endAccess();
  return sub_1C23B690C;
}

void sub_1C23B690C(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_1C254EB50();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_1C254EB50();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);
  free(v3);
}

id DownloadableAttachmentStateChangeListener.__allocating_init(handler:)(uint64_t a1, uint64_t a2)
{
  sub_1C23B6744(0, (unint64_t *)&unk_1EA2E5580, (uint64_t (*)(uint64_t))sub_1C23B655C, MEMORY[0x1E4F1AC70]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = (char *)objc_allocWithZone(v2);
  unint64_t v11 = &v10[OBJC_IVAR____TtC15HealthRecordsUI41DownloadableAttachmentStateChangeListener__latestChange];
  uint64_t v18 = 0;
  sub_1C23B655C(0);
  uint64_t v12 = v10;
  sub_1C254EB30();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v9, v6);
  uint64_t v13 = &v12[OBJC_IVAR____TtC15HealthRecordsUI41DownloadableAttachmentStateChangeListener_handler];
  *(void *)uint64_t v13 = a1;
  *((void *)v13 + 1) = a2;
  swift_retain();

  v17.receiver = v12;
  v17.super_class = v2;
  id v14 = objc_msgSendSuper2(&v17, sel_init);
  swift_release();
  return v14;
}

id DownloadableAttachmentStateChangeListener.init(handler:)(uint64_t a1, uint64_t a2)
{
  sub_1C23B6744(0, (unint64_t *)&unk_1EA2E5580, (uint64_t (*)(uint64_t))sub_1C23B655C, MEMORY[0x1E4F1AC70]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = &v2[OBJC_IVAR____TtC15HealthRecordsUI41DownloadableAttachmentStateChangeListener__latestChange];
  uint64_t v18 = 0;
  sub_1C23B655C(0);
  unint64_t v11 = v2;
  sub_1C254EB30();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v9, v6);
  uint64_t v12 = &v11[OBJC_IVAR____TtC15HealthRecordsUI41DownloadableAttachmentStateChangeListener_handler];
  *(void *)uint64_t v12 = a1;
  *((void *)v12 + 1) = a2;
  swift_retain();

  uint64_t v13 = (objc_class *)type metadata accessor for DownloadableAttachmentStateChangeListener();
  v17.receiver = v11;
  v17.super_class = v13;
  id v14 = objc_msgSendSuper2(&v17, sel_init);
  swift_release();
  return v14;
}

uint64_t type metadata accessor for DownloadableAttachmentStateChangeListener()
{
  uint64_t result = qword_1EA2E2758;
  if (!qword_1EA2E2758) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C23B6DD4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1C254E560();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E510();
  id v9 = a1;
  uint64_t v10 = sub_1C254E550();
  os_log_type_t v11 = sub_1C254FA10();
  int v12 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v32 = v2;
    uint64_t v14 = v13;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v33 = v30;
    uint64_t v34 = ObjectType;
    *(_DWORD *)uint64_t v14 = 136446466;
    swift_getMetatypeMetadata();
    int v29 = v12;
    uint64_t v15 = sub_1C254F4F0();
    uint64_t v31 = v5;
    uint64_t v34 = sub_1C21AD354(v15, v16, &v33);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    v28[1] = v14 + 14;
    id v17 = v9;
    id v18 = objc_msgSend(v17, sel_description);
    uint64_t v19 = sub_1C254F470();
    unint64_t v21 = v20;

    uint64_t v34 = sub_1C21AD354(v19, v21, &v33);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v10, (os_log_type_t)v29, "[%{public}s]: downloadableAttachmentDidChangeState (downloadableAttachment: %s)", (uint8_t *)v14, 0x16u);
    uint64_t v22 = v30;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v22, -1, -1);
    uint64_t v23 = v14;
    uint64_t v2 = v32;
    MEMORY[0x1C875A0B0](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v31);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v34 = (uint64_t)v9;
  id v24 = v9;
  char v25 = v2;
  sub_1C254EB80();
  uint64_t v26 = *(void (**)(id))&v25[OBJC_IVAR____TtC15HealthRecordsUI41DownloadableAttachmentStateChangeListener_handler];
  swift_retain();
  v26(v24);
  return swift_release();
}

id DownloadableAttachmentStateChangeListener.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DownloadableAttachmentStateChangeListener.init()()
{
}

id DownloadableAttachmentStateChangeListener.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownloadableAttachmentStateChangeListener();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C23B72CC()
{
  return type metadata accessor for DownloadableAttachmentStateChangeListener();
}

void sub_1C23B72D4()
{
  sub_1C23B6744(319, (unint64_t *)&unk_1EA2E5580, (uint64_t (*)(uint64_t))sub_1C23B655C, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DownloadableAttachmentStateChangeListener(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DownloadableAttachmentStateChangeListener);
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.latestChange.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.latestChange.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.latestChange.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.$latestChange.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.$latestChange.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.$latestChange.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.__allocating_init(handler:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DownloadableAttachmentStateChangeListener.downloadableAttachmentDidChangeState(downloadableAttachment:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

unint64_t ClinicalSharingOnboardingStep.init(rawValue:)(unint64_t a1)
{
  return sub_1C23B758C(a1);
}

unint64_t sub_1C23B7558@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1C23B758C(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t sub_1C23B758C(unint64_t result)
{
  if (result > 5) {
    return 0;
  }
  return result;
}

unint64_t sub_1C23B75A0()
{
  unint64_t result = qword_1EA2E2770;
  if (!qword_1EA2E2770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2770);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingOnboardingStep()
{
  return &type metadata for ClinicalSharingOnboardingStep;
}

id TextAndActionCell.actionButton.getter()
{
  return *(id *)(v0 + OBJC_IVAR___HRUITextAndActionCell_actionButton);
}

uint64_t sub_1C23B7630()
{
  return sub_1C223A124(&OBJC_IVAR___HRUITextAndActionCell_explanation);
}

void sub_1C23B7654(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___HRUITextAndActionCell_explanation);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR___HRUITextAndActionCell_explanationLabel);
  if (v5[1])
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  objc_msgSend(v6, sel_setText_, v7);
}

void (*sub_1C23B770C(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HRUITextAndActionCell_explanation;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C23B7778;
}

void sub_1C23B7778(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = *(void **)(v4 + OBJC_IVAR___HRUITextAndActionCell_explanationLabel);
    if (*(void *)(v4 + v3[4] + 8))
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = 0;
    }
    objc_msgSend(v5, sel_setText_, v6);
  }
  free(v3);
}

uint64_t sub_1C23B7830()
{
  return sub_1C223A124(&OBJC_IVAR___HRUITextAndActionCell_actionTitle);
}

void sub_1C23B7854(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (a3)
  {
    uint64_t v6 = sub_1C254F470();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  id v9 = a1;
  a4(v6, v8);
}

void sub_1C23B78DC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___HRUITextAndActionCell_actionTitle);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR___HRUITextAndActionCell_actionButton);
  if (v5[1])
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  objc_msgSend(v6, sel_setTitle_forState_, v7, 0);
}

void (*sub_1C23B7998(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HRUITextAndActionCell_actionTitle;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C23B7A04;
}

void sub_1C23B7A04(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = *(void **)(v4 + OBJC_IVAR___HRUITextAndActionCell_actionButton);
    if (*(void *)(v4 + v3[4] + 8))
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = 0;
    }
    objc_msgSend(v5, sel_setTitle_forState_, v6, 0);
  }
  free(v3);
}

id TextAndActionCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a3)
  {
    uint64_t v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id TextAndActionCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR___HRUITextAndActionCell_explanationLabel;
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  uint64_t v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_init);
  uint64_t v9 = OBJC_IVAR___HRUITextAndActionCell_actionButton;
  *(void *)&v8[v9] = objc_msgSend(self, sel_buttonWithType_, 1);
  uint64_t v10 = &v8[OBJC_IVAR___HRUITextAndActionCell_explanation];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  os_log_type_t v11 = &v8[OBJC_IVAR___HRUITextAndActionCell_actionTitle];
  *(void *)os_log_type_t v11 = 0;
  *((void *)v11 + 1) = 0;

  if (a3)
  {
    int v12 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v12 = 0;
  }
  v16.receiver = v8;
  v16.super_class = (Class)type metadata accessor for TextAndActionCell();
  id v13 = objc_msgSendSuper2(&v16, sel_initWithStyle_reuseIdentifier_, a1, v12);

  id v14 = v13;
  sub_1C23B7DE0();

  return v14;
}

uint64_t type metadata accessor for TextAndActionCell()
{
  return self;
}

id sub_1C23B7CD0(void *a1)
{
  uint64_t v3 = OBJC_IVAR___HRUITextAndActionCell_explanationLabel;
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  uint64_t v6 = OBJC_IVAR___HRUITextAndActionCell_actionButton;
  *(void *)&v5[v6] = objc_msgSend(self, sel_buttonWithType_, 1);
  id v7 = &v5[OBJC_IVAR___HRUITextAndActionCell_explanation];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  uint64_t v8 = &v5[OBJC_IVAR___HRUITextAndActionCell_actionTitle];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for TextAndActionCell();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

void sub_1C23B7DE0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___HRUITextAndActionCell_explanationLabel];
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v2 = self;
  uint64_t v3 = *MEMORY[0x1E4FB28C8];
  id v4 = objc_msgSend(v2, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v1, sel_setFont_, v4);

  id v5 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v1, sel_setTextColor_, v5);

  objc_msgSend(v1, sel_setTextAlignment_, 1);
  objc_msgSend(v1, sel_setNumberOfLines_, 0);
  uint64_t v6 = *(void **)&v0[OBJC_IVAR___HRUITextAndActionCell_actionButton];
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v7 = objc_msgSend(v6, sel_titleLabel);
  if (v7)
  {
    id v9 = v7;
    id v10 = objc_msgSend(v2, sel_preferredFontForTextStyle_, v3);
    objc_msgSend(v9, sel_setFont_, v10);
  }
  LODWORD(v8) = 1144750080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 0, v8);
  LODWORD(v11) = 1144750080;
  objc_msgSend(v1, sel_setContentHuggingPriority_forAxis_, 1, v11);
  LODWORD(v12) = 1144750080;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 1, v12);
  LODWORD(v13) = 1144750080;
  objc_msgSend(v6, sel_setContentHuggingPriority_forAxis_, 0, v13);
  LODWORD(v14) = 1144750080;
  objc_msgSend(v6, sel_setContentCompressionResistancePriority_forAxis_, 1, v14);
  id v15 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v15, sel_addSubview_, v1);

  id v16 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  objc_msgSend(v16, sel_addSubview_, v6);

  unint64_t v45 = self;
  sub_1C21ACA3C();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C255EBD0;
  id v18 = objc_msgSend(v1, sel_leadingAnchor);
  id v19 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v20 = objc_msgSend(v19, (SEL)&selRef_minusOrderedSet_ + 2);

  id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, 16.0);
  *(void *)(v17 + 32) = v21;
  id v22 = objc_msgSend(v1, sel_topAnchor);
  id v23 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v24 = objc_msgSend(v23, sel_topAnchor);

  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, 8.0);
  *(void *)(v17 + 40) = v25;
  id v26 = objc_msgSend(v1, sel_trailingAnchor);
  id v27 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v28 = objc_msgSend(v27, (SEL)&selRef_titleWidthConstraint + 4);

  id v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v28, -16.0);
  *(void *)(v17 + 48) = v29;
  id v30 = objc_msgSend(v1, sel_bottomAnchor);
  id v31 = objc_msgSend(v6, sel_topAnchor);
  id v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v31, -16.0);

  *(void *)(v17 + 56) = v32;
  id v33 = objc_msgSend(v6, sel_leadingAnchor);
  id v34 = objc_msgSend(v0, sel_contentView);
  id v35 = objc_msgSend(v34, sel_leadingAnchor);

  id v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_constant_, v35, 16.0);
  *(void *)(v17 + 64) = v36;
  id v37 = objc_msgSend(v6, sel_trailingAnchor);
  id v38 = objc_msgSend(v0, sel_contentView);
  id v39 = objc_msgSend(v38, sel_trailingAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v39, -16.0);
  *(void *)(v17 + 72) = v40;
  id v41 = objc_msgSend(v6, sel_bottomAnchor);
  id v42 = objc_msgSend(v0, sel_contentView);
  id v43 = objc_msgSend(v42, sel_bottomAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, -8.0);
  *(void *)(v17 + 80) = v44;
  sub_1C254F730();
  sub_1C21F34D4();
  id v46 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v45, sel_activateConstraints_, v46);
}

id TextAndActionCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextAndActionCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C23B8444@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR___HRUITextAndActionCell_explanation, a2);
}

uint64_t sub_1C23B8450(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_1(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C23B7654);
}

uint64_t sub_1C23B8468@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR___HRUITextAndActionCell_actionTitle, a2);
}

uint64_t sub_1C23B8474(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_1(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C23B78DC);
}

uint64_t keypath_setTm_1(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t method lookup function for TextAndActionCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TextAndActionCell);
}

uint64_t dispatch thunk of TextAndActionCell.explanation.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of TextAndActionCell.explanation.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of TextAndActionCell.explanation.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of TextAndActionCell.actionTitle.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TextAndActionCell.actionTitle.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TextAndActionCell.actionTitle.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t sub_1C23B8698(uint64_t a1)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      sub_1C23B8E98();
      return sub_1C254FFA0();
    default:
      sub_1C25508E0();
      __break(1u);
      JUMPOUT(0x1C23B8798);
  }
}

unint64_t UserInteractionType.init(rawValue:)(unint64_t a1)
{
  return sub_1C23B8E78(a1);
}

unint64_t sub_1C23B87CC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1C23B8E78(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1C23B8800(uint64_t a1)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
      sub_1C23B8E98();
      return sub_1C254FFA0();
    default:
      sub_1C25508E0();
      __break(1u);
      JUMPOUT(0x1C23B8A9CLL);
  }
}

unint64_t UserInteractionContext.init(rawValue:)(unint64_t a1)
{
  return sub_1C23B8E88(a1);
}

unint64_t sub_1C23B8B0C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1C23B8E88(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t DisplayCategory.Kind.categoryAnalyticsName.getter()
{
  return sub_1C254FFA0();
}

unint64_t UserInteractionAction.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

uint64_t SearchContext.init(rawValue:)()
{
  return 0;
}

void *sub_1C23B8CD4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 0;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_1C23B8CEC(uint64_t a1)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      sub_1C23B8E98();
      return sub_1C254FFA0();
    default:
      sub_1C25508E0();
      __break(1u);
      JUMPOUT(0x1C23B8DD4);
  }
}

unint64_t PinLabUserActionType.init(rawValue:)(unint64_t a1)
{
  return sub_1C23B8ED8(a1);
}

unint64_t sub_1C23B8E04@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1C23B8ED8(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

BOOL PinLabRoomType.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t HRUserDomainConceptListType.categoryRoomContextAnalytic.getter(uint64_t a1)
{
  uint64_t v1 = 1;
  if (a1) {
    uint64_t v1 = 2;
  }
  if (a1 == 1) {
    return 0;
  }
  else {
    return v1;
  }
}

unint64_t sub_1C23B8E78(unint64_t result)
{
  if (result > 4) {
    return 0;
  }
  return result;
}

unint64_t sub_1C23B8E88(unint64_t result)
{
  if (result > 0x13) {
    return 0;
  }
  return result;
}

unint64_t sub_1C23B8E98()
{
  unint64_t result = qword_1EBB6EEC0;
  if (!qword_1EBB6EEC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB6EEC0);
  }
  return result;
}

unint64_t sub_1C23B8ED8(unint64_t result)
{
  if (result > 3) {
    return 0;
  }
  return result;
}

unint64_t sub_1C23B8EEC()
{
  unint64_t result = qword_1EA2E2798;
  if (!qword_1EA2E2798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2798);
  }
  return result;
}

unint64_t sub_1C23B8F44()
{
  unint64_t result = qword_1EA2E27A0;
  if (!qword_1EA2E27A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E27A0);
  }
  return result;
}

unint64_t sub_1C23B8F9C()
{
  unint64_t result = qword_1EA2E27A8;
  if (!qword_1EA2E27A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E27A8);
  }
  return result;
}

unint64_t sub_1C23B8FF4()
{
  unint64_t result = qword_1EA2E27B0;
  if (!qword_1EA2E27B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E27B0);
  }
  return result;
}

unint64_t sub_1C23B904C()
{
  unint64_t result = qword_1EA2E27B8;
  if (!qword_1EA2E27B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E27B8);
  }
  return result;
}

unint64_t sub_1C23B90A4()
{
  unint64_t result = qword_1EA2E27C0;
  if (!qword_1EA2E27C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E27C0);
  }
  return result;
}

unint64_t sub_1C23B90FC()
{
  unint64_t result = qword_1EA2E27C8;
  if (!qword_1EA2E27C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E27C8);
  }
  return result;
}

unint64_t sub_1C23B9154()
{
  unint64_t result = qword_1EA2E27D0;
  if (!qword_1EA2E27D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E27D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for UserInteractionType()
{
  return &type metadata for UserInteractionType;
}

ValueMetadata *type metadata accessor for UserInteractionContext()
{
  return &type metadata for UserInteractionContext;
}

ValueMetadata *type metadata accessor for UserInteractionAction()
{
  return &type metadata for UserInteractionAction;
}

ValueMetadata *type metadata accessor for CategoryRoomAction()
{
  return &type metadata for CategoryRoomAction;
}

ValueMetadata *type metadata accessor for SearchContext()
{
  return &type metadata for SearchContext;
}

ValueMetadata *type metadata accessor for PinLabUserActionType()
{
  return &type metadata for PinLabUserActionType;
}

ValueMetadata *type metadata accessor for PinLabRoomType()
{
  return &type metadata for PinLabRoomType;
}

ValueMetadata *type metadata accessor for PinLabCategoryRoomContext()
{
  return &type metadata for PinLabCategoryRoomContext;
}

void sub_1C23B9238(void **a1, void *a2)
{
  BOOL v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_font);
  swift_beginAccess();
  char v4 = *v3;
  *uint64_t v3 = v2;
  id v5 = v2;
}

id sub_1C23B929C()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_font);
  swift_beginAccess();
  BOOL v2 = *v1;
  return v2;
}

void sub_1C23B92F4(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_font);
  swift_beginAccess();
  char v4 = *v3;
  *uint64_t v3 = a1;
}

uint64_t (*sub_1C23B9348())()
{
  return j__swift_endAccess;
}

id LabelStackView.__allocating_init(textStyle:)(void *a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_labels] = MEMORY[0x1E4FBC860];
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_interItemSpacing] = 0x4010000000000000;
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_textStyle] = a1;
  char v4 = self;
  id v5 = v3;
  id v6 = a1;
  id v7 = objc_msgSend(v4, sel_preferredFontForTextStyle_, v6);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_font] = v7;

  v10.receiver = v5;
  v10.super_class = v1;
  id v8 = objc_msgSendSuper2(&v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  return v8;
}

id LabelStackView.init(textStyle:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_labels] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_interItemSpacing] = 0x4010000000000000;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_textStyle] = a1;
  uint64_t v3 = self;
  char v4 = v1;
  id v5 = a1;
  id v6 = objc_msgSend(v3, sel_preferredFontForTextStyle_, v5);
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_font] = v6;

  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for LabelStackView();
  id v7 = objc_msgSendSuper2(&v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  return v7;
}

uint64_t type metadata accessor for LabelStackView()
{
  return self;
}

void sub_1C23B9620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5 = v4;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_super v9 = (void *)sub_1C254F430();
  objc_msgSend(v8, sel_setText_, v9);

  objc_msgSend(v8, sel_setTextColor_, a3);
  objc_super v10 = &v5[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_font];
  swift_beginAccess();
  objc_msgSend(v8, sel_setFont_, *(void *)v10);
  objc_msgSend(v8, sel_setNumberOfLines_, a4);
  objc_msgSend(v5, sel_addSubview_, v8);
  double v11 = &v5[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_labels];
  swift_beginAccess();
  id v12 = v8;
  MEMORY[0x1C8757C00]();
  if (*(void *)((*(void *)v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v11 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    sub_1C254F760();
  sub_1C254F790();
  sub_1C254F730();
  swift_endAccess();
  objc_msgSend(v5, sel_setNeedsLayout);
}

void sub_1C23B97A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v6, sel_setAttributedText_, a1);
  objc_msgSend(v6, sel_setNumberOfLines_, a2);
  objc_msgSend(v3, sel_addSubview_, v6);
  id v7 = &v3[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_labels];
  swift_beginAccess();
  id v8 = v6;
  MEMORY[0x1C8757C00]();
  if (*(void *)((*(void *)v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v7 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    sub_1C254F760();
  sub_1C254F790();
  sub_1C254F730();
  swift_endAccess();
  objc_msgSend(v3, sel_setNeedsLayout);
}

id sub_1C23B98B0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_labels];
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (!(*(void *)v1 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain_n();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    *(void *)uint64_t v1 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    return objc_msgSend(v0, sel_setNeedsLayout);
  }
  swift_bridgeObjectRetain_n();
  id result = (id)sub_1C2550620();
  uint64_t v3 = (uint64_t)result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1C87588E0](i, v2);
      }
      else {
        id v6 = *(id *)(v2 + 8 * i + 32);
      }
      id v7 = v6;
      objc_msgSend(v6, sel_removeFromSuperview);
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C23B99E0()
{
  uint64_t v1 = sub_1C2550850();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  char v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (objc_class *)type metadata accessor for LabelStackView();
  v25.receiver = v0;
  v25.super_class = v5;
  objc_msgSendSuper2(&v25, sel_layoutSubviews);
  objc_msgSend(v0, sel_directionalLayoutMargins);
  double v7 = v6;
  objc_msgSend(v0, sel_directionalLayoutMargins);
  double v9 = v8;
  objc_msgSend(v0, sel_bounds);
  double v10 = CGRectGetWidth(v26) - v7;
  double v11 = &v0[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_labels];
  swift_beginAccess();
  uint64_t v12 = *(void *)v11;
  if (*(void *)v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C2550620();
    double v15 = v10 - v9;
    if (result) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  double v15 = v10 - v9;
  if (!v13) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v12 & 0xC000000000000001) != 0)
  {
    id v16 = (id)MEMORY[0x1C87588E0](0, v12);
  }
  else
  {
    if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_23;
    }
    id v16 = *(id *)(v12 + 32);
  }
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_sizeThatFits_, v15, 1.79769313e308);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBBEA8], v1);
  id v18 = objc_msgSend(v17, sel_traitCollection);
  objc_msgSend(v18, sel_displayScale);
  sub_1C254CDC0();
  objc_msgSend(v18, sel_displayScale);
  sub_1C254CDC0();

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
LABEL_9:
  uint64_t v19 = *(void *)v11;
  if (!(*(void *)v11 >> 62))
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v20) {
      goto LABEL_11;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  uint64_t v20 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  if (v20 >= 1)
  {
    uint64_t v21 = 0;
    do
    {
      if ((v19 & 0xC000000000000001) != 0) {
        id v22 = (id)MEMORY[0x1C87588E0](v21, v19);
      }
      else {
        id v22 = *(id *)(v19 + 8 * v21 + 32);
      }
      id v23 = v22;
      if (objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
      {
        objc_msgSend(v0, sel_bounds, v7);
        CGRectGetWidth(v28);
        objc_msgSend(v23, sel_intrinsicContentSize);
      }
      ++v21;
      objc_msgSend(v23, sel_setFrame_);
      objc_msgSend(v23, sel_sizeToFit);
      objc_msgSend(v23, sel_frame);
      CGRectGetMaxY(v27);
    }
    while (v20 != v21);
    return swift_bridgeObjectRelease();
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1C23B9E08()
{
  uint64_t v1 = sub_1C2550850();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  id v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, sel_directionalLayoutMargins, v3);
  double v7 = v6;
  objc_msgSend(v0, sel_directionalLayoutMargins);
  double v9 = v8;
  objc_msgSend(v0, sel_bounds);
  double Width = CGRectGetWidth(v33);
  id v30 = v0;
  double v11 = &v0[OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_labels];
  swift_beginAccess();
  id v29 = v11;
  uint64_t v12 = *(void *)v11;
  if (*(void *)v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C2550620();
    uint64_t v13 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v13) {
      goto LABEL_10;
    }
  }
  if (v13 < 1)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v15 = 0;
  double v16 = Width - v7 - v9;
  unint64_t v31 = v12 & 0xC000000000000001;
  uint64_t v32 = v13;
  uint64_t v17 = *MEMORY[0x1E4FBBEA8];
  id v18 = (void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  uint64_t v19 = (void (**)(char *, uint64_t))(v2 + 8);
  double v20 = 0.0;
  uint64_t v21 = v12;
  do
  {
    if (v31) {
      id v22 = (id)MEMORY[0x1C87588E0](v15, v12);
    }
    else {
      id v22 = *(id *)(v12 + 8 * v15 + 32);
    }
    id v23 = v22;
    ++v15;
    objc_msgSend(v22, sel_sizeThatFits_, v16, 1.79769313e308);
    (*v18)(v5, v17, v1);
    id v24 = objc_msgSend(v23, sel_traitCollection);
    objc_msgSend(v24, sel_displayScale);
    sub_1C254CDC0();
    objc_msgSend(v24, sel_displayScale);
    sub_1C254CDC0();
    double v26 = v25;

    (*v19)(v5, v1);
    double v20 = v20 + v26;
    uint64_t v12 = v21;
  }
  while (v32 != v15);
LABEL_10:
  uint64_t result = swift_bridgeObjectRelease();
  if (!(*(void *)v29 >> 62))
  {
    if (!__OFSUB__(*(void *)((*(void *)v29 & 0xFFFFFFFFFFFFFF8) + 0x10), 1)) {
      return result;
    }
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C2550620();
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFSUB__(v27, 1))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  return result;
}

id LabelStackView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void LabelStackView.init(frame:)()
{
}

id LabelStackView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LabelStackView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C23BA2DC@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  double v3 = (void **)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI14LabelStackView_font);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for LabelStackView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LabelStackView);
}

uint64_t dispatch thunk of LabelStackView.font.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of LabelStackView.font.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of LabelStackView.font.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of LabelStackView.__allocating_init(textStyle:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of LabelStackView.addLabel(text:textColor:numberOfLines:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of LabelStackView.addLabel(attributedText:numberOfLines:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of LabelStackView.removeAll()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t sub_1C23BA4A8(uint64_t a1)
{
  uint64_t v13 = a1;
  uint64_t v2 = sub_1C254FC60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254F200();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = sub_1C254FC00();
  MEMORY[0x1F4188790](v7);
  v12[1] = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  sub_1C23C0134(0, &qword_1EBB6EEE0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C255CD90;
  sub_1C254FBF0();
  uint64_t v14 = v8;
  sub_1C23BE96C((unint64_t *)&qword_1EBB6FF88, MEMORY[0x1E4FBCC10]);
  sub_1C23BFF80(0);
  sub_1C23BE96C((unint64_t *)&qword_1EBB6FF58, sub_1C23BFF80);
  sub_1C2550200();
  sub_1C254F1E0();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC58], v2);
  uint64_t v9 = sub_1C254FCB0();
  uint64_t v10 = v13;
  *(void *)(v1 + 16) = v9;
  *(void *)(v1 + 24) = v10;
  return v1;
}

uint64_t sub_1C23BA7C4(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  return sub_1C23BA7DC(a1, a2, a3);
}

uint64_t sub_1C23BA7DC(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(a3 + 24);
  swift_bridgeObjectRetain();
  a1(&v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C23BA868@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = sub_1C2206654(MEMORY[0x1E4FBC860]);
  sub_1C23C00C4(0, &qword_1EBB6EE70, &qword_1EBB6EE90, &qword_1EBB6EEA8, (uint64_t)off_1E6449E10);
  swift_allocObject();
  *a1 = sub_1C23BA4A8(v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)*MEMORY[0x1E4FB2650];
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1C23BFF58;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = self;
  swift_retain_n();
  id v7 = v4;
  id v8 = objc_msgSend(v6, sel_defaultCenter, v17, v18);
  uint64_t v9 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  id v10 = sub_1C22998DC(v7, (uint64_t)&v17, v8, (uint64_t)sub_1C23C0BD4, v5, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[4] = (uint64_t)v9;
  a1[1] = (uint64_t)v10;
  double v11 = (void *)*MEMORY[0x1E4FB2640];
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C23BFF58;
  *(void *)(v12 + 24) = v3;
  swift_retain();
  id v13 = v11;
  id v14 = objc_msgSend(v6, sel_defaultCenter);
  id v15 = sub_1C22998DC(v13, (uint64_t)&v17, v14, (uint64_t)sub_1C23C0BD8, v12, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[8] = (uint64_t)v9;
  uint64_t result = swift_release_n();
  a1[5] = (uint64_t)v15;
  return result;
}

uint64_t sub_1C23BAAC0@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = sub_1C2203C80(MEMORY[0x1E4FBC860]);
  sub_1C23C0134(0, &qword_1EBB6EE80, (uint64_t (*)(uint64_t))sub_1C23BFFB4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Box);
  swift_allocObject();
  *a1 = sub_1C23BA4A8(v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)*MEMORY[0x1E4FB2650];
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1C23BFF58;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = self;
  swift_retain_n();
  id v7 = v4;
  id v8 = objc_msgSend(v6, sel_defaultCenter, v17, v18);
  uint64_t v9 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  id v10 = sub_1C22998DC(v7, (uint64_t)&v17, v8, (uint64_t)sub_1C23C0BD4, v5, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[4] = (uint64_t)v9;
  a1[1] = (uint64_t)v10;
  double v11 = (void *)*MEMORY[0x1E4FB2640];
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C23BFF58;
  *(void *)(v12 + 24) = v3;
  swift_retain();
  id v13 = v11;
  id v14 = objc_msgSend(v6, sel_defaultCenter);
  id v15 = sub_1C22998DC(v13, (uint64_t)&v17, v14, (uint64_t)sub_1C23C0BD8, v12, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[8] = (uint64_t)v9;
  uint64_t result = swift_release_n();
  a1[5] = (uint64_t)v15;
  return result;
}

uint64_t sub_1C23BAD28@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = sub_1C2203DD8(MEMORY[0x1E4FBC860]);
  sub_1C23C0134(0, &qword_1EBB6EE68, (uint64_t (*)(uint64_t))sub_1C23C0198, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Box);
  swift_allocObject();
  *a1 = sub_1C23BA4A8(v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)*MEMORY[0x1E4FB2650];
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1C23C0268;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = self;
  swift_retain_n();
  id v7 = v4;
  id v8 = objc_msgSend(v6, sel_defaultCenter, v17, v18);
  uint64_t v9 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  id v10 = sub_1C22998DC(v7, (uint64_t)&v17, v8, (uint64_t)sub_1C23C0BD4, v5, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[4] = (uint64_t)v9;
  a1[1] = (uint64_t)v10;
  double v11 = (void *)*MEMORY[0x1E4FB2640];
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C23C0268;
  *(void *)(v12 + 24) = v3;
  swift_retain();
  id v13 = v11;
  id v14 = objc_msgSend(v6, sel_defaultCenter);
  id v15 = sub_1C22998DC(v13, (uint64_t)&v17, v14, (uint64_t)sub_1C23C0BD8, v12, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[8] = (uint64_t)v9;
  uint64_t result = swift_release_n();
  a1[5] = (uint64_t)v15;
  return result;
}

uint64_t sub_1C23BAF90@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = sub_1C2206670(MEMORY[0x1E4FBC860]);
  sub_1C23C00C4(0, &qword_1EA2E2830, &qword_1EA2E2838, (unint64_t *)&qword_1EBB6EEB8, 0x1E4FB1818);
  swift_allocObject();
  *a1 = sub_1C23BA4A8(v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)*MEMORY[0x1E4FB2650];
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1C23BFF58;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = self;
  swift_retain_n();
  id v7 = v4;
  id v8 = objc_msgSend(v6, sel_defaultCenter, v17, v18);
  uint64_t v9 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  id v10 = sub_1C22998DC(v7, (uint64_t)&v17, v8, (uint64_t)sub_1C23C0BD4, v5, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[4] = (uint64_t)v9;
  a1[1] = (uint64_t)v10;
  double v11 = (void *)*MEMORY[0x1E4FB2640];
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C23BFF58;
  *(void *)(v12 + 24) = v3;
  swift_retain();
  id v13 = v11;
  id v14 = objc_msgSend(v6, sel_defaultCenter);
  id v15 = sub_1C22998DC(v13, (uint64_t)&v17, v14, (uint64_t)sub_1C23C0BD8, v12, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[8] = (uint64_t)v9;
  uint64_t result = swift_release_n();
  a1[5] = (uint64_t)v15;
  return result;
}

uint64_t sub_1C23BB1E8@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = sub_1C2207380(MEMORY[0x1E4FBC860]);
  sub_1C23C0898(0, &qword_1EA2E2840, &qword_1EA2E2848, MEMORY[0x1E4FBAEA0], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Box);
  swift_allocObject();
  *a1 = sub_1C23BA4A8(v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)*MEMORY[0x1E4FB2650];
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1C23BFF58;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = self;
  swift_retain_n();
  id v7 = v4;
  id v8 = objc_msgSend(v6, sel_defaultCenter, v17, v18);
  uint64_t v9 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  id v10 = sub_1C22998DC(v7, (uint64_t)&v17, v8, (uint64_t)sub_1C23C0BD4, v5, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[4] = (uint64_t)v9;
  a1[1] = (uint64_t)v10;
  double v11 = (void *)*MEMORY[0x1E4FB2640];
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C23BFF58;
  *(void *)(v12 + 24) = v3;
  swift_retain();
  id v13 = v11;
  id v14 = objc_msgSend(v6, sel_defaultCenter);
  id v15 = sub_1C22998DC(v13, (uint64_t)&v17, v14, (uint64_t)sub_1C23C0BD8, v12, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[8] = (uint64_t)v9;
  uint64_t result = swift_release_n();
  a1[5] = (uint64_t)v15;
  return result;
}

uint64_t sub_1C23BB458@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = sub_1C22056E4(MEMORY[0x1E4FBC860]);
  sub_1C23C09E4();
  swift_allocObject();
  *a1 = sub_1C23BA4A8(v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)*MEMORY[0x1E4FB2650];
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1C23BFF58;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = self;
  swift_retain_n();
  id v7 = v4;
  id v8 = objc_msgSend(v6, sel_defaultCenter, v17, v18);
  uint64_t v9 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  id v10 = sub_1C22998DC(v7, (uint64_t)&v17, v8, (uint64_t)sub_1C23C0BD4, v5, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[4] = (uint64_t)v9;
  a1[1] = (uint64_t)v10;
  double v11 = (void *)*MEMORY[0x1E4FB2640];
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C23BFF58;
  *(void *)(v12 + 24) = v3;
  swift_retain();
  id v13 = v11;
  id v14 = objc_msgSend(v6, sel_defaultCenter);
  id v15 = sub_1C22998DC(v13, (uint64_t)&v17, v14, (uint64_t)sub_1C23C0BD8, v12, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[8] = (uint64_t)v9;
  uint64_t result = swift_release_n();
  a1[5] = (uint64_t)v15;
  return result;
}

uint64_t sub_1C23BB690@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = sub_1C22074CC(MEMORY[0x1E4FBC860]);
  sub_1C23BFEDC();
  swift_allocObject();
  *a1 = sub_1C23BA4A8(v2);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)*MEMORY[0x1E4FB2650];
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1C23BFF58;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = self;
  swift_retain_n();
  id v7 = v4;
  id v8 = objc_msgSend(v6, sel_defaultCenter, v17, v18);
  uint64_t v9 = (objc_class *)type metadata accessor for WeakNotificationObserver();
  id v10 = sub_1C22998DC(v7, (uint64_t)&v17, v8, (uint64_t)sub_1C22998D4, v5, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[4] = (uint64_t)v9;
  a1[1] = (uint64_t)v10;
  double v11 = (void *)*MEMORY[0x1E4FB2640];
  long long v17 = 0u;
  long long v18 = 0u;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C23BFF58;
  *(void *)(v12 + 24) = v3;
  swift_retain();
  id v13 = v11;
  id v14 = objc_msgSend(v6, sel_defaultCenter);
  id v15 = sub_1C22998DC(v13, (uint64_t)&v17, v14, (uint64_t)sub_1C2299B04, v12, (char *)objc_allocWithZone(v9));

  swift_release();
  a1[8] = (uint64_t)v9;
  uint64_t result = swift_release_n();
  a1[5] = (uint64_t)v15;
  return result;
}

uint64_t sub_1C23BB8C8()
{
  uint64_t v0 = sub_1C254F1C0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    sub_1C23C0134(0, &qword_1EBB6EED8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBBE00]);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C255CD90;
    sub_1C254F1B0();
    v8[2] = v6;
    sub_1C23BE96C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    sub_1C221B1A0();
    sub_1C23BE96C((unint64_t *)&qword_1EBB6FF40, (void (*)(uint64_t))sub_1C221B1A0);
    uint64_t v7 = sub_1C2550200();
    MEMORY[0x1F4188790](v7);
    v8[-4] = sub_1C23C0B88;
    v8[-3] = 0;
    v8[-2] = v5;
    sub_1C254FC80();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C23BBB44()
{
  uint64_t v0 = sub_1C254F1C0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    sub_1C23C0134(0, &qword_1EBB6EED8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBBE00]);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C255CD90;
    sub_1C254F1B0();
    v8[2] = v6;
    sub_1C23BE96C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    sub_1C221B1A0();
    sub_1C23BE96C((unint64_t *)&qword_1EBB6FF40, (void (*)(uint64_t))sub_1C221B1A0);
    uint64_t v7 = sub_1C2550200();
    MEMORY[0x1F4188790](v7);
    v8[-4] = sub_1C23BBDC0;
    v8[-3] = 0;
    v8[-2] = v5;
    sub_1C254FC80();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C23BBDC0(void *a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = MEMORY[0x1E4FBC868];
  return result;
}

uint64_t sub_1C23BBDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v20 = (uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v4;
  double v11 = *(void **)a1;
  id v10 = *(void **)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  id v22 = *(void **)(a1 + 40);
  uint64_t v15 = *(void *)a2;
  uint64_t v25 = *(void *)(a2 + 8);
  uint64_t v26 = v15;
  uint64_t v24 = *(void *)(a2 + 16);
  int v23 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v16 = *v4;
  v30[2] = a3;
  uint64_t v27 = sub_1C23C0B34;
  uint64_t v28 = v30;
  uint64_t v29 = v16;
  sub_1C23C0898(0, &qword_1EBB6E950, (unint64_t *)&qword_1EBB6E948, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache, MEMORY[0x1E4FBB718]);
  sub_1C254FC90();
  if ((void)v31)
  {
    v36[2] = v33;
    v36[3] = v34;
    uint64_t v37 = v35;
    v36[0] = v31;
    v36[1] = v32;
    *(void *)&long long v31 = v11;
    *((void *)&v31 + 1) = v10;
    *(void *)&long long v32 = v13;
    *((void *)&v32 + 1) = v12;
    *(void *)&long long v33 = v14;
    *((void *)&v33 + 1) = v22;
    sub_1C2207BC8(v11, v10, v13, v12, v14, v22);
    sub_1C2402560((uint64_t)&v31, v26, v25, v24, v23);
  }
  else
  {
    sub_1C23BE85C((uint64_t)&v31);
    sub_1C23BB1E8((uint64_t *)v36);
    v38[0] = v11;
    v38[1] = v10;
    v38[2] = v13;
    v38[3] = v12;
    v38[4] = v14;
    v38[5] = v22;
    sub_1C2207BC8(v11, v10, v13, v12, v14, v22);
    sub_1C2402560((uint64_t)v38, v26, v25, v24, v23);
    uint64_t v17 = v20;
    sub_1C21A9698(a3, v20);
    sub_1C23C0790((uint64_t)v36, (uint64_t)&v31);
    sub_1C2402804((uint64_t)&v31, v17);
  }
  return sub_1C23C0818((uint64_t)v36);
}

uint64_t sub_1C23BC040()
{
  if (qword_1EBB6D898 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBB6EB60;
  type metadata accessor for BrowseIconProvider();
  uint64_t v1 = (uint64_t *)swift_allocObject();
  swift_retain();
  sub_1C23BB458(v1 + 2);
  uint64_t result = sub_1C23BB458(v1 + 11);
  v1[20] = v0;
  qword_1EBB6EA58 = (uint64_t)v1;
  return result;
}

uint64_t *BrowseIconProvider.__allocating_init(accountIconProvider:)(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)swift_allocObject();
  sub_1C23BB458(v2 + 2);
  sub_1C23BB458(v2 + 11);
  v2[20] = a1;
  return v2;
}

uint64_t static BrowseIconProvider.shared.getter()
{
  if (qword_1EBB6D850 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t *BrowseIconProvider.init(accountIconProvider:)(uint64_t a1)
{
  sub_1C23BB458(v1 + 2);
  sub_1C23BB458(v1 + 11);
  v1[20] = a1;
  return v1;
}

uint64_t sub_1C23BC1B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v12 = a2[2];
  int v13 = *((unsigned __int8 *)a2 + 24);
  sub_1C21A9698(a1, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C21FD4EC();
    uint64_t v15 = (uint64_t *)&v9[*(int *)(v14 + 48)];
    char v16 = v13;
    uint64_t v17 = *v15;
    uint64_t v18 = v15[1];
    uint64_t v62 = v10;
    uint64_t v63 = v11;
    uint64_t v64 = v12;
    char v65 = v16;
    sub_1C24039AC(v17, v18, (uint64_t)&v62, (uint64_t)&v66);
    swift_bridgeObjectRelease();
    uint64_t v19 = v68;
    uint64_t v20 = v69;
    unint64_t v21 = BYTE8(v68) | 0x8000000000000000;
    long long v22 = v67;
    *(void *)a3 = v66;
    *(_OWORD *)(a3 + 8) = v22;
    *(void *)(a3 + 24) = v19;
    *(void *)(a3 + 32) = v21;
    *(void *)(a3 + 40) = v20;
    uint64_t v23 = sub_1C254CB40();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v9, v23);
  }
  int v52 = v13;
  unint64_t v53 = (void *)a3;
  uint64_t v50 = v10;
  uint64_t v51 = v11;
  swift_beginAccess();
  v48[1] = v3 + 88;
  uint64_t v25 = sub_1C23BC66C(v3 + 88, (uint64_t)&v66);
  MEMORY[0x1F4188790](v25);
  v48[-2] = a1;
  MEMORY[0x1F4188790](v26);
  v48[-4] = sub_1C23BE7B8;
  v48[-3] = v27;
  v48[-2] = v28;
  sub_1C23C0898(0, &qword_1EBB6E950, (unint64_t *)&qword_1EBB6E948, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache, MEMORY[0x1E4FBB718]);
  sub_1C254FC90();
  uint64_t v29 = sub_1C23BE7E4((uint64_t)&v66);
  uint64_t v30 = a1;
  uint64_t v49 = v12;
  if (!v62)
  {
    sub_1C23BE85C((uint64_t)&v62);
    uint64_t v40 = (uint64_t)v9;
    goto LABEL_7;
  }
  v54[0] = v50;
  v54[1] = v51;
  v54[2] = v12;
  char v55 = v52;
  MEMORY[0x1F4188790](v29);
  v48[-2] = v54;
  MEMORY[0x1F4188790](v31);
  v48[-4] = sub_1C23BE8F0;
  v48[-3] = v32;
  v48[-2] = v33;
  sub_1C23BE8F4();
  sub_1C254FC90();
  uint64_t v34 = v56;
  uint64_t v35 = v57;
  uint64_t v37 = v58;
  uint64_t v36 = v59;
  unint64_t v38 = v60;
  uint64_t v39 = v61;
  sub_1C23BE85C((uint64_t)&v62);
  uint64_t v40 = (uint64_t)v9;
  if (v38 >> 1 == 0xFFFFFFFF)
  {
LABEL_7:
    BrowseCategory.systemImageName.getter();
    id v42 = v53;
    if (v43
      && (id v44 = objc_msgSend(self, sel_configurationPreferringMulticolor),
          unint64_t v45 = (void *)sub_1C254F430(),
          swift_bridgeObjectRelease(),
          id v46 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v45, v44),
          v45,
          v44,
          v46))
    {
      long long v67 = 0u;
      long long v68 = 0u;
      id v66 = v46;
      uint64_t v69 = 0;
      uint64_t v62 = v50;
      uint64_t v63 = v51;
      uint64_t v64 = v49;
      char v65 = v52;
      swift_beginAccess();
      id v47 = v46;
      sub_1C23BBDF4((uint64_t)&v66, (uint64_t)&v62, v30);
      swift_endAccess();

      *id v42 = v46;
      *(_OWORD *)(v42 + 1) = 0u;
      *(_OWORD *)(v42 + 3) = 0u;
      v42[5] = 0;
    }
    else
    {
      *(_OWORD *)id v42 = 0u;
      *((_OWORD *)v42 + 1) = 0u;
      *((_OWORD *)v42 + 2) = xmmword_1C2567C10;
    }
    return sub_1C2268C64(v40);
  }
  id v41 = v53;
  *unint64_t v53 = v34;
  v41[1] = v35;
  v41[2] = v37;
  v41[3] = v36;
  v41[4] = v38;
  v41[5] = v39;
  return sub_1C2268C64(v40);
}

uint64_t sub_1C23BC66C(uint64_t a1, uint64_t a2)
{
  sub_1C23C0A58(0, &qword_1EBB6E960, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))type metadata accessor for UnboundedCache);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C23BC6EC(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v109 = a4;
  uint64_t v110 = a5;
  uint64_t v106 = a1;
  uint64_t v7 = sub_1C254F1D0();
  uint64_t v96 = *(void *)(v7 - 8);
  uint64_t v97 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v95 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254F1C0();
  uint64_t v102 = *(void *)(v9 - 8);
  uint64_t v103 = v9;
  MEMORY[0x1F4188790](v9);
  unint64_t v99 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C254F200();
  uint64_t v100 = *(void *)(v11 - 8);
  uint64_t v101 = v11;
  MEMORY[0x1F4188790](v11);
  BOOL v98 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C254CB40();
  uint64_t v104 = *(uint64_t (**)(uint64_t))(v13 - 8);
  uint64_t v105 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for BrowseCategory();
  uint64_t v92 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v93 = v17;
  uint64_t v94 = (uint64_t)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v84 - v19;
  uint64_t v22 = *(void *)a2;
  uint64_t v21 = *(void *)(a2 + 8);
  uint64_t v23 = *(uint64_t (**)(uint64_t))(a2 + 16);
  int v24 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v25 = (uint64_t (*)(uint64_t))swift_allocObject();
  id v107 = a3;
  uint64_t v26 = v109;
  *((void *)v25 + 2) = a3;
  *((void *)v25 + 3) = v26;
  uint64_t v27 = v106;
  *((void *)v25 + 4) = v110;
  sub_1C21A9698(v27, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C21FD4EC();
    id v28 = v107;
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v30 = v104;
    uint64_t v29 = v105;
    (*((void (**)(char *, char *, uint64_t))v104 + 4))(v15, v20, v105);
    uint64_t v31 = *(void *)(v108 + 160);
    uint64_t v120 = v22;
    uint64_t v121 = v21;
    v122 = v23;
    LOBYTE(v123) = v24;
    swift_retain();
    sub_1C2406948((uint64_t)v15, &v120, v31, (void (*)(uint64_t *))sub_1C23BE950, (uint64_t)v25);
    swift_release_n();
    return (*((uint64_t (**)(char *, uint64_t))v30 + 1))(v15, v29);
  }
  uint64_t v89 = v22;
  uint64_t v90 = v25;
  uint64_t v91 = v21;
  uint64_t v104 = v23;
  LODWORD(v105) = v24;
  uint64_t v88 = v20;
  uint64_t v33 = v108;
  swift_beginAccess();
  uint64_t v34 = sub_1C23BC66C(v33 + 16, (uint64_t)&v120);
  MEMORY[0x1F4188790](v34);
  *(&v84 - 2) = v27;
  MEMORY[0x1F4188790](v35);
  *(&v84 - 4) = (uint64_t)sub_1C23C0B34;
  *(&v84 - 3) = v36;
  *(&v84 - 2) = v37;
  sub_1C23C0898(0, &qword_1EBB6E950, (unint64_t *)&qword_1EBB6E948, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache, MEMORY[0x1E4FBB718]);
  swift_retain();
  id v38 = v107;
  id v39 = v107;
  sub_1C254FC90();
  uint64_t v40 = sub_1C23BE7E4((uint64_t)&v120);
  if (aBlock[0])
  {
    id v86 = v39;
    uint64_t v41 = v89;
    v111[0] = v89;
    v111[1] = v91;
    v111[2] = v104;
    char v112 = v105;
    MEMORY[0x1F4188790](v40);
    *(&v84 - 2) = (uint64_t)v111;
    MEMORY[0x1F4188790](v42);
    *(&v84 - 4) = (uint64_t)sub_1C23BE8F0;
    *(&v84 - 3) = v43;
    *(&v84 - 2) = v44;
    sub_1C23BE8F4();
    sub_1C254FC90();
    uint64_t v46 = v113;
    unint64_t v45 = v114;
    uint64_t v48 = v115;
    uint64_t v47 = v116;
    unint64_t v49 = v117;
    unint64_t v87 = v118;
    sub_1C23BE85C((uint64_t)aBlock);
    if (v49 >> 1 != 0xFFFFFFFF)
    {
      uint64_t v50 = (void *)v46;
      uint64_t v120 = v46;
      uint64_t v121 = (uint64_t)v45;
      v122 = (uint64_t (*)(uint64_t))v48;
      uint64_t v123 = (void *)v47;
      uint64_t v51 = v49;
      uint64_t v124 = (uint64_t (*)())v49;
      uint64_t v125 = (uint64_t)v87;
      char v126 = 0;
      if (v38)
      {
        uint64_t v52 = swift_allocObject();
        unint64_t v53 = v45;
        uint64_t v85 = (uint64_t)v45;
        uint64_t v54 = v52;
        uint64_t v55 = v110;
        *(void *)(v52 + 16) = v109;
        *(void *)(v52 + 24) = v55;
        sub_1C23BE9B4((uint64_t)&v120, v52 + 32);
        aBlock[4] = sub_1C23BEA58;
        aBlock[5] = v54;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1C224E544;
        aBlock[3] = &block_descriptor_13_0;
        uint64_t v109 = (void (*)(void))_Block_copy(aBlock);
        uint64_t v56 = v47;
        uint64_t v84 = v47;
        uint64_t v57 = v87;
        sub_1C23BEA5C(v50, v53, v48, v47, v49, v87);
        swift_retain();
        id v58 = v86;
        sub_1C23BEA5C(v50, v53, v48, v56, v49, v57);
        uint64_t v110 = v48;
        uint64_t v59 = v98;
        sub_1C254F1E0();
        uint64_t v113 = MEMORY[0x1E4FBC860];
        sub_1C23BE96C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
        sub_1C221B1A0();
        sub_1C23BE96C((unint64_t *)&qword_1EBB6FF40, (void (*)(uint64_t))sub_1C221B1A0);
        unint64_t v60 = v99;
        uint64_t v61 = v103;
        sub_1C2550200();
        uint64_t v62 = v109;
        MEMORY[0x1C87581B0](0, v59, v60, v109);
        _Block_release(v62);

        (*(void (**)(char *, uint64_t))(v102 + 8))(v60, v61);
        (*(void (**)(char *, uint64_t))(v100 + 8))(v59, v101);
        swift_release();
        uint64_t v64 = v84;
        uint64_t v63 = v85;
        uint64_t v65 = v110;
        sub_1C2224A88(v50, v85, v110, v84, v51);
        swift_release();
        sub_1C2224A88(v50, v63, v65, v64, v51);
      }
      else
      {
        sub_1C23BE9B4((uint64_t)&v120, (uint64_t)aBlock);
        sub_1C2207BC8(v50, v45, v48, v47, v49, v87);
        v109(aBlock);
        sub_1C2224A88(v50, (uint64_t)v45, v48, v47, v49);
        swift_release();
        sub_1C2224A88(v50, (uint64_t)v45, v48, v47, v49);
      }
      return sub_1C2268C64((uint64_t)v88);
    }
  }
  else
  {
    sub_1C23BE85C((uint64_t)aBlock);
    uint64_t v41 = v89;
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  long long v67 = v95;
  uint64_t v66 = v96;
  uint64_t v68 = v97;
  (*(void (**)(char *, void, uint64_t))(v96 + 104))(v95, *MEMORY[0x1E4FBCB28], v97);
  uint64_t v69 = (void *)sub_1C254FCC0();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
  uint64_t v70 = v94;
  sub_1C21A9698(v27, v94);
  uint64_t v71 = v33;
  unint64_t v72 = (*(unsigned __int8 *)(v92 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
  unint64_t v73 = (v72 + v93 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v72 + v93 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = v71;
  sub_1C2207DD8(v70, v75 + v72);
  unint64_t v76 = v75 + v73;
  uint64_t v77 = v91;
  *(void *)unint64_t v76 = v41;
  *(void *)(v76 + 8) = v77;
  *(void *)(v76 + 16) = v104;
  *(unsigned char *)(v76 + 24) = v105;
  uint64_t v78 = (uint64_t (**)(uint64_t))(v75 + v74);
  uint64_t v79 = v90;
  *uint64_t v78 = sub_1C23BE950;
  v78[1] = v79;
  uint64_t v124 = sub_1C23BE960;
  uint64_t v125 = v75;
  uint64_t v120 = MEMORY[0x1E4F143A8];
  uint64_t v121 = 1107296256;
  v122 = sub_1C224E544;
  uint64_t v123 = &block_descriptor_45;
  uint64_t v80 = _Block_copy(&v120);
  swift_retain();
  swift_retain();
  v81 = v98;
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C23BE96C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C221B1A0();
  sub_1C23BE96C((unint64_t *)&qword_1EBB6FF40, (void (*)(uint64_t))sub_1C221B1A0);
  unint64_t v82 = v99;
  uint64_t v83 = v103;
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v81, v82, v80);
  _Block_release(v80);
  swift_release();

  (*(void (**)(char *, uint64_t))(v102 + 8))(v82, v83);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v81, v101);
  swift_release();
  return sub_1C2268C64((uint64_t)v88);
}

uint64_t sub_1C23BD2AC(uint64_t a1, void *a2, uint64_t (*a3)(void *), uint64_t a4)
{
  uint64_t v8 = sub_1C254F1C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C254F200();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C23BE9B4(a1, (uint64_t)v22);
  if (a2)
  {
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a3;
    *(void *)(v16 + 24) = a4;
    sub_1C23BE9B4((uint64_t)v22, v16 + 32);
    aBlock[4] = sub_1C23BEA58;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_124;
    uint64_t v17 = _Block_copy(aBlock);
    id v18 = a2;
    swift_retain();
    sub_1C23C0754((uint64_t)v22);
    sub_1C254F1E0();
    v20[1] = MEMORY[0x1E4FBC860];
    sub_1C23BE96C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    sub_1C221B1A0();
    sub_1C23BE96C((unint64_t *)&qword_1EBB6FF40, (void (*)(uint64_t))sub_1C221B1A0);
    sub_1C2550200();
    MEMORY[0x1C87581B0](0, v15, v11, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return swift_release();
  }
  else
  {
    sub_1C23BE9B4((uint64_t)v22, (uint64_t)aBlock);
    return a3(aBlock);
  }
}

void sub_1C23BD5C8(uint64_t a1, void (*a2)(void *))
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void **)(a1 + 40);
  char v9 = *(unsigned char *)(a1 + 48);
  uint64_t v10 = *(void *)a1 & 1;
  unint64_t v11 = v7 & 1 | 0x8000000000000000;
  if (v9)
  {
    uint64_t v10 = *(void *)a1;
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 8);
  }
  if (*(unsigned char *)(a1 + 48)) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = *(void *)(a1 + 16);
  }
  if (*(unsigned char *)(a1 + 48)) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = *(void *)(a1 + 24);
  }
  if (*(unsigned char *)(a1 + 48))
  {
    unint64_t v11 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v15 = *(void *)(a1 + 40);
  }
  v16[0] = v10;
  v16[1] = v12;
  v16[2] = v13;
  v16[3] = v14;
  v16[4] = v11;
  v16[5] = v15;
  char v17 = v9;
  sub_1C23C069C(v3, v4, v5, v6, v7, v8, v9);
  a2(v16);
  sub_1C22CB1E0(v3, v4, v5, v6, v7, (uint64_t)v8, v9);
}

void *sub_1C23BD6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void (*a7)(void **))
{
  if (a6)
  {
    uint64_t v11 = a5 | a4;
    if (a5 | a4 | a3)
    {
      if (a3 != 1 || v11)
      {
        if (v11) {
          BOOL v13 = 0;
        }
        else {
          BOOL v13 = a3 == 2;
        }
        double v12 = 80.0;
        if (v13) {
          double v12 = 60.0;
        }
      }
      else
      {
        double v12 = 45.0;
      }
    }
    else
    {
      double v12 = 36.0;
    }
  }
  else
  {
    double v12 = *(double *)&a3;
  }
  sub_1C23BE430((uint64_t)&v25, v12, v12);
  uint64_t v14 = v25;
  uint64_t v15 = v26;
  uint64_t v16 = v27;
  uint64_t v17 = v28;
  uint64_t v18 = v29;
  uint64_t v19 = v30;
  if (v29 >> 1 != 0xFFFFFFFF)
  {
    v23[0] = a3;
    v23[1] = a4;
    v23[2] = a5;
    char v24 = a6 & 1;
    swift_beginAccess();
    sub_1C2207BC8(v14, v15, v16, v17, v18, v19);
    sub_1C23BBDF4((uint64_t)&v25, (uint64_t)v23, a2);
    swift_endAccess();
    sub_1C2224A88(v14, (uint64_t)v15, v16, v17, v18);
  }
  uint64_t v25 = v14;
  uint64_t v26 = v15;
  uint64_t v27 = v16;
  uint64_t v28 = v17;
  unint64_t v29 = v18;
  uint64_t v30 = v19;
  char v31 = 0;
  sub_1C23BEA5C(v14, v15, v16, v17, v18, v19);
  a7(&v25);
  sub_1C2224A88(v14, (uint64_t)v15, v16, v17, v18);
  return sub_1C2224A88(v14, (uint64_t)v15, v16, v17, v18);
}

uint64_t sub_1C23BD898(uint64_t a1, long long *a2)
{
  uint64_t v4 = type metadata accessor for BrowseCategory();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  sub_1C23BFB70();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v19 = *a2;
  uint64_t v12 = *((void *)a2 + 2);
  char v13 = *((unsigned char *)a2 + 24);
  sub_1C21A9698(a1, (uint64_t)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v20;
  sub_1C2207DD8((uint64_t)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  unint64_t v16 = v15 + ((v6 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_OWORD *)unint64_t v16 = v19;
  *(void *)(v16 + 16) = v12;
  *(unsigned char *)(v16 + 24) = v13;
  sub_1C23BFC04(0, &qword_1EA2E2800, (uint64_t (*)(uint64_t))sub_1C23BFC80, MEMORY[0x1E4F1AC28]);
  sub_1C23BFCE8();
  swift_retain();
  sub_1C254EB10();
  sub_1C23BE96C(&qword_1EA2E2818, (void (*)(uint64_t))sub_1C23BFB70);
  uint64_t v17 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v17;
}

uint64_t sub_1C23BDB1C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v20 = a6;
  uint64_t v11 = type metadata accessor for BrowseCategory();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  sub_1C21A9698(a1, (uint64_t)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  sub_1C2207DD8((uint64_t)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  unint64_t v17 = v16 + ((v13 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v17 = a2;
  *(void *)(v17 + 8) = a3;
  *(void *)(v17 + 16) = a4;
  *(unsigned char *)(v17 + 24) = a5 & 1;
  sub_1C23BFC04(0, &qword_1EA2E2800, (uint64_t (*)(uint64_t))sub_1C23BFC80, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  uint64_t result = sub_1C254EAF0();
  *uint64_t v20 = result;
  return result;
}

uint64_t sub_1C23BDCDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  unint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v17 = Strong;
    v20[0] = a5;
    v20[1] = a6;
    void v20[2] = a7;
    char v21 = a8 & 1;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    swift_retain();
    uint64_t v18 = (void *)sub_1C254FC70();
    sub_1C23BEEE4(a4, (uint64_t)v20, v18, v17, (void (*)(void *, uint64_t))sub_1C22290C4, v15);
    swift_release();
  }
  else
  {
    swift_retain();
  }
  return swift_release();
}

void sub_1C23BDE14(uint64_t a1, void (*a2)(void *, uint64_t))
{
  v65[1] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C254E560();
  __n128 v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)a1;
  uint64_t v9 = *(void **)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  unint64_t v14 = *(void *)(a1 + 32);
  uint64_t v13 = *(void **)(a1 + 40);
  if (*(unsigned char *)(a1 + 48) == 1)
  {
    uint64_t v15 = *(void *)(a1 + 24);
    id v16 = v10;
    a2(v10, 1);
    uint64_t v17 = v10;
    uint64_t v18 = (uint64_t)v9;
    uint64_t v19 = v12;
    uint64_t v20 = v15;
    uint64_t v21 = v14;
    uint64_t v22 = (uint64_t)v13;
    char v23 = 1;
LABEL_3:
    sub_1C23BEA4C(v17, v18, v19, v20, v21, v22, v23);
    return;
  }
  if (v14 >> 1 == 0xFFFFFFFF)
  {
    ((void (*)(void, void, __n128))a2)(0, 0, v6);
    return;
  }
  if ((v14 & 0x8000000000000000) != 0)
  {
    if (v10)
    {
      uint64_t v34 = *(void **)a1;
      uint64_t v35 = *(void **)(a1 + 8);
      uint64_t v36 = *(void *)(a1 + 16);
      uint64_t v37 = *(void *)(a1 + 24);
      sub_1C23BEA5C(v34, v35, v36, v11, v14, v13);
      a2(v13, 0);
      uint64_t v17 = v10;
      uint64_t v18 = (uint64_t)v9;
      uint64_t v19 = v12;
      uint64_t v20 = v37;
      uint64_t v21 = v14;
      uint64_t v22 = (uint64_t)v13;
      char v23 = 0;
      goto LABEL_3;
    }
    uint64_t v61 = v5;
    v64[0] = 0;
    uint64_t v29 = v11;
    sub_1C23BEA5C(v10, v9, v12, v11, v14, v13);
    uint64_t v62 = v29;
    sub_1C23BEA5C(v10, v9, v12, v29, v14, v13);
    id v30 = objc_msgSend(v13, sel_hr_imageWithWhiteBackground_, v64);
    id v31 = v64[0];
    if (v30)
    {
      id v32 = v30;
      a2(v30, 0);
      uint64_t v33 = v62;
      sub_1C23BEA4C(v10, (uint64_t)v9, v12, v62, v14, (uint64_t)v13, 0);
      sub_1C23BEA4C(v10, (uint64_t)v9, v12, v33, v14, (uint64_t)v13, 0);
    }
    else
    {
      id v38 = v31;
      id v63 = (id)sub_1C254C820();

      swift_willThrow();
      sub_1C254E510();
      id v39 = v63;
      id v40 = v63;
      id v41 = v39;
      uint64_t v42 = sub_1C254E550();
      os_log_type_t v43 = sub_1C254FA20();
      unint64_t v60 = v42;
      int v59 = v43;
      if (os_log_type_enabled(v42, v43))
      {
        uint64_t v44 = (uint8_t *)swift_slowAlloc();
        uint64_t v57 = swift_slowAlloc();
        v65[0] = v57;
        id v58 = v44;
        *(_DWORD *)uint64_t v44 = 136446210;
        uint64_t v56 = v44 + 12;
        uint64_t v55 = v44 + 4;
        v64[0] = v63;
        id v45 = v63;
        sub_1C2206F9C();
        uint64_t v54 = sub_1C25508F0();
        id v46 = (id)HKSensitiveLogItem();
        swift_unknownObjectRelease();
        sub_1C25501E0();
        swift_unknownObjectRelease();
        uint64_t v54 = MEMORY[0x1E4FBC840] + 8;
        uint64_t v47 = sub_1C254F510();
        v64[0] = (id)sub_1C21AD354(v47, v48, v65);
        sub_1C2550120();
        swift_bridgeObjectRelease();
        id v49 = v63;

        _os_log_impl(&dword_1C21A1000, v60, (os_log_type_t)v59, "Failed to create image with white background: %{public}s", v58, 0xCu);
        uint64_t v50 = v57;
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v50, -1, -1);
        MEMORY[0x1C875A0B0](v58, -1, -1);
      }
      else
      {
        id v51 = v63;
      }
      (*(void (**)(char *, uint64_t))(v61 + 8))(v8, v4);
      uint64_t v52 = v62;
      sub_1C23BEA5C(v10, v9, v12, v62, v14, v13);
      a2(v13, 0);
      sub_1C23BEA4C(v10, (uint64_t)v9, v12, v52, v14, (uint64_t)v13, 0);
      sub_1C23BEA4C(v10, (uint64_t)v9, v12, v52, v14, (uint64_t)v13, 0);
      sub_1C2224A88(v10, (uint64_t)v9, v12, v52, v14);
    }
  }
  else
  {
    char v24 = *(void **)a1;
    uint64_t v25 = *(void **)(a1 + 8);
    uint64_t v26 = *(void *)(a1 + 16);
    uint64_t v27 = *(void *)(a1 + 24);
    sub_1C23C06AC(v24, v25, v26, v11, v14, v13, 0);
    id v63 = v10;
    a2(v10, 0);
    sub_1C23BEA4C(v10, (uint64_t)v9, v12, v27, v14, (uint64_t)v13, 0);
    id v28 = v63;
  }
}

void sub_1C23BE430(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  unint64_t v6 = BrowseCategory.systemImageName.getter();
  if (v7)
  {
    if (v6 == 0x69662E736C6C6970 && v7 == 0xEA00000000006C6CLL || (sub_1C2550870() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      id v8 = objc_msgSend(self, sel_hk_medicationsSymbolImage);
      if (v8)
      {
LABEL_6:
        *(void *)a1 = v8;
        *(_OWORD *)(a1 + 8) = 0u;
        *(_OWORD *)(a1 + 24) = 0u;
        *(void *)(a1 + 40) = 0;
        return;
      }
    }
    else
    {
      id v9 = objc_msgSend(self, sel_configurationPreferringMulticolor);
      uint64_t v10 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      id v8 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v10, v9);

      if (v8) {
        goto LABEL_6;
      }
    }
  }
  BrowseCategory.coloredImageName.getter();
  if (!v11) {
    goto LABEL_13;
  }
  if (qword_1EBB6EFD0 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1EBB70020;
  uint64_t v13 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v13, v12, 0);

  if (!v14)
  {
LABEL_13:
    sub_1C2517664();
    if (v16)
    {
      if (qword_1EBB6EFC0 != -1) {
        swift_once();
      }
      id v17 = (id)qword_1EBB70018;
      uint64_t v18 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v18, v17, 0);

      id v15 = BrowseCategory.tintColorForTemplateImage.getter();
      if (v14) {
        goto LABEL_17;
      }
    }
    else
    {
      id v15 = BrowseCategory.tintColorForTemplateImage.getter();
    }

    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    long long v20 = xmmword_1C2567C10;
    goto LABEL_20;
  }
  id v15 = 0;
LABEL_17:
  id v19 = objc_msgSend(v14, sel_scaledToTargetSize_, a2, a3);

  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v15;
  long long v20 = 0uLL;
  *(_OWORD *)(a1 + 16) = 0u;
LABEL_20:
  *(_OWORD *)(a1 + 32) = v20;
}

uint64_t BrowseIconProvider.deinit()
{
  sub_1C23BE7E4(v0 + 16);
  sub_1C23BE7E4(v0 + 88);
  swift_release();
  return v0;
}

uint64_t BrowseIconProvider.__deallocating_deinit()
{
  sub_1C23BE7E4(v0 + 16);
  sub_1C23BE7E4(v0 + 88);
  swift_release();
  return swift_deallocClassInstance();
}

double sub_1C23BE7B8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C240314C(*a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C23BE7C4()
{
  return sub_1C23BA7DC(*(void (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C23BE7E4(uint64_t a1)
{
  sub_1C23C0A58(0, &qword_1EBB6E960, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))type metadata accessor for UnboundedCache);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C23BE85C(uint64_t a1)
{
  sub_1C23C0898(0, &qword_1EBB6E950, (unint64_t *)&qword_1EBB6E948, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C23BE8F4()
{
  if (!qword_1EBB6E820)
  {
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6E820);
    }
  }
}

uint64_t sub_1C23BE950(uint64_t a1)
{
  return sub_1C23BD2AC(a1, *(void **)(v1 + 16), *(uint64_t (**)(void *))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t block_destroy_helper_40()
{
  return swift_release();
}

uint64_t sub_1C23BE96C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C23BE9B4(uint64_t a1, uint64_t a2)
{
  sub_1C23BFC04(0, &qword_1EBB6EEE8, (uint64_t (*)(uint64_t))sub_1C23BE8F4, MEMORY[0x1E4FBC448]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C23BEA4C(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7) {

  }
  else {
    sub_1C2224A88(a1, a2, a3, a4, a5);
  }
}

void *sub_1C23BEA5C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if ((unint64_t)a5 >> 1 != 0xFFFFFFFF) {
    return sub_1C2207BC8(a1, a2, a3, a4, a5, a6);
  }
  return a1;
}

void sub_1C23BEA70(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4)
{
  id v45 = a3;
  uint64_t v43 = sub_1C254F1C0();
  uint64_t v7 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v44 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254F200();
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = *(void **)a1;
  id v15 = *(void **)(a1 + 8);
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v18 = *(void *)(a1 + 32);
  id v19 = *(void **)(a1 + 40);
  char v20 = *(unsigned char *)(a1 + 48);
  unint64_t v21 = v14 & 1;
  unint64_t v22 = v18 & 1 | 0x8000000000000000;
  if (v20)
  {
    unint64_t v21 = (unint64_t)v14;
    char v23 = 0;
  }
  else
  {
    char v23 = v15;
  }
  uint64_t v24 = v16;
  if (v20)
  {
    uint64_t v16 = 0;
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = v17;
  }
  if (v20)
  {
    unint64_t v22 = 0;
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = v19;
  }
  v48[0] = v21;
  v48[1] = v23;
  void v48[2] = v16;
  v48[3] = v25;
  v48[4] = v22;
  v48[5] = v26;
  char v49 = v20;
  if (a2)
  {
    uint64_t v42 = v10;
    id v38 = a2;
    uint64_t v37 = v13;
    uint64_t v41 = v11;
    uint64_t v27 = swift_allocObject();
    uint64_t v40 = v7;
    uint64_t v28 = v27;
    *(void *)(v27 + 16) = v45;
    *(void *)(v27 + 24) = a4;
    sub_1C23BE9B4((uint64_t)v48, v27 + 32);
    aBlock[4] = sub_1C23BEA58;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_117;
    id v45 = (void (*)(void))_Block_copy(aBlock);
    uint64_t v39 = v24;
    sub_1C23C069C(v14, (uint64_t)v15, v24, v17, v18, v19, v20);
    sub_1C23C069C(v14, (uint64_t)v15, v24, v17, v18, v19, v20);
    id v29 = v38;
    swift_retain();
    sub_1C254F1E0();
    uint64_t v46 = MEMORY[0x1E4FBC860];
    sub_1C23BE96C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    uint64_t v30 = v43;
    id v38 = v15;
    sub_1C221B1A0();
    sub_1C23BE96C((unint64_t *)&qword_1EBB6FF40, (void (*)(uint64_t))sub_1C221B1A0);
    id v31 = v44;
    sub_1C2550200();
    id v32 = v37;
    uint64_t v36 = (uint64_t)v19;
    uint64_t v33 = v18;
    uint64_t v34 = v17;
    uint64_t v35 = v45;
    MEMORY[0x1C87581B0](0, v37, v31, v45);
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v30);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v42);
    swift_release();
    sub_1C22CB1E0(v14, (uint64_t)v38, v39, v34, v33, v36, v20);
  }
  else
  {
    sub_1C23BE9B4((uint64_t)v48, (uint64_t)aBlock);
    sub_1C23C069C(v14, (uint64_t)v15, v24, v17, v18, v19, v20);
    v45(aBlock);
    sub_1C22CB1E0(v14, (uint64_t)v15, v24, v17, v18, (uint64_t)v19, v20);
  }
}

uint64_t sub_1C23BEEE4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void *, uint64_t), void *a6)
{
  uint64_t v111 = a4;
  uint64_t v11 = sub_1C254F1D0();
  uint64_t v97 = *(void *)(v11 - 8);
  uint64_t v98 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v96 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C254F1C0();
  uint64_t v103 = *(void *)(v13 - 8);
  uint64_t v104 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v100 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C254F200();
  uint64_t v101 = *(void *)(v15 - 8);
  uint64_t v102 = v15;
  MEMORY[0x1F4188790](v15);
  unint64_t v99 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_1C254CB40();
  uint64_t v105 = *(void (***)(char *, char *, uint64_t))(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v106 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for BrowseCategory();
  uint64_t v93 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v94 = v19;
  uint64_t v95 = (uint64_t)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  unint64_t v22 = (char *)&v88 - v21;
  char v23 = (void *)swift_allocObject();
  uint64_t v91 = a5;
  v23[2] = a5;
  void v23[3] = a6;
  uint64_t v24 = *(void *)a2;
  id v108 = a6;
  uint64_t v109 = v24;
  uint64_t v25 = *(uint64_t (**)(uint64_t))(a2 + 16);
  uint64_t v110 = *(void **)(a2 + 8);
  int v26 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v27 = (uint64_t (*)(uint64_t))swift_allocObject();
  char v112 = a3;
  *((void *)v27 + 2) = a3;
  *((void *)v27 + 3) = sub_1C23C0450;
  *((void *)v27 + 4) = v23;
  sub_1C21A9698(a1, (uint64_t)v22);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C21FD4EC();
    uint64_t v28 = v22;
    id v29 = v112;
    swift_retain_n();
    id v30 = v29;
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v31 = (uint64_t)v105;
    uint64_t v32 = (uint64_t)v106;
    uint64_t v33 = v28;
    uint64_t v34 = v107;
    v105[4](v106, v33, v107);
    uint64_t v35 = *(void *)(v111 + 160);
    uint64_t v122 = v109;
    uint64_t v123 = (uint64_t)v110;
    uint64_t v124 = v25;
    LOBYTE(v125) = v26;
    swift_retain();
    id v36 = v30;
    swift_retain();
    sub_1C240647C(v32, &v122, v35, v112, sub_1C23C0450, (uint64_t)v23);
    swift_release_n();

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v34);
    return swift_release();
  }
  uint64_t v105 = (void (**)(char *, char *, uint64_t))v22;
  uint64_t v106 = (char *)v25;
  uint64_t v92 = v27;
  LODWORD(v107) = v26;
  uint64_t v37 = v111 + 16;
  swift_beginAccess();
  uint64_t v38 = sub_1C23BC66C(v37, (uint64_t)&v122);
  MEMORY[0x1F4188790](v38);
  uint64_t v90 = a1;
  *(&v88 - 2) = a1;
  MEMORY[0x1F4188790](v39);
  *(&v88 - 4) = (uint64_t)sub_1C23C0B34;
  *(&v88 - 3) = v40;
  *(&v88 - 2) = v41;
  sub_1C23C0898(0, &qword_1EBB6E950, (unint64_t *)&qword_1EBB6E948, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache, MEMORY[0x1E4FBB718]);
  uint64_t v42 = v112;
  uint64_t v43 = v112;
  swift_retain_n();
  id v44 = v43;
  swift_retain();
  sub_1C254FC90();
  uint64_t v45 = sub_1C23BE7E4((uint64_t)&v122);
  if (!aBlock[0])
  {
    sub_1C23BE85C((uint64_t)aBlock);
    goto LABEL_8;
  }
  v113[0] = v109;
  v113[1] = v110;
  v113[2] = v106;
  char v114 = v107;
  MEMORY[0x1F4188790](v45);
  *(&v88 - 2) = (uint64_t)v113;
  MEMORY[0x1F4188790](v46);
  *(&v88 - 4) = (uint64_t)sub_1C23BE8F0;
  *(&v88 - 3) = v47;
  *(&v88 - 2) = v48;
  sub_1C23BE8F4();
  sub_1C254FC90();
  uint64_t v50 = v115;
  char v49 = v116;
  uint64_t v51 = v117;
  uint64_t v52 = v118;
  unint64_t v53 = v119;
  uint64_t v54 = v120;
  sub_1C23BE85C((uint64_t)aBlock);
  if (v53 >> 1 == 0xFFFFFFFF)
  {
LABEL_8:
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    uint64_t v71 = v96;
    uint64_t v70 = v97;
    uint64_t v72 = v98;
    (*(void (**)(char *, void, uint64_t))(v97 + 104))(v96, *MEMORY[0x1E4FBCB28], v98);
    unint64_t v73 = (void *)sub_1C254FCC0();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
    uint64_t v74 = v95;
    sub_1C21A9698(v90, v95);
    unint64_t v75 = (*(unsigned __int8 *)(v93 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
    char v112 = v23;
    unint64_t v76 = (v75 + v94 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v77 = (v75 + v94 + 39) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v78 = swift_allocObject();
    id v108 = v44;
    *(void *)(v78 + 16) = v111;
    sub_1C2207DD8(v74, v78 + v75);
    unint64_t v79 = v78 + v76;
    uint64_t v80 = v110;
    *(void *)unint64_t v79 = v109;
    *(void *)(v79 + 8) = v80;
    *(void *)(v79 + 16) = v106;
    *(unsigned char *)(v79 + 24) = v107;
    v81 = (uint64_t (**)(uint64_t))(v78 + v77);
    unint64_t v82 = v92;
    char *v81 = sub_1C23C0B30;
    v81[1] = v82;
    char v126 = sub_1C23BE960;
    uint64_t v127 = v78;
    uint64_t v122 = MEMORY[0x1E4F143A8];
    uint64_t v123 = 1107296256;
    uint64_t v124 = sub_1C224E544;
    uint64_t v125 = &block_descriptor_101;
    uint64_t v83 = _Block_copy(&v122);
    swift_retain();
    swift_retain();
    uint64_t v84 = v99;
    sub_1C254F1E0();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1C23BE96C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    sub_1C221B1A0();
    sub_1C23BE96C((unint64_t *)&qword_1EBB6FF40, (void (*)(uint64_t))sub_1C221B1A0);
    uint64_t v85 = v100;
    uint64_t v86 = v104;
    sub_1C2550200();
    MEMORY[0x1C87581B0](0, v84, v85, v83);
    _Block_release(v83);
    swift_release();

    swift_release();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v85, v86);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v84, v102);
    swift_release();
    sub_1C2268C64((uint64_t)v105);
    return swift_release();
  }
  uint64_t v122 = (uint64_t)v50;
  uint64_t v123 = (uint64_t)v49;
  uint64_t v124 = (uint64_t (*)(uint64_t))v51;
  uint64_t v125 = (void *)v52;
  char v126 = (uint64_t (*)())v53;
  uint64_t v127 = (uint64_t)v54;
  char v128 = 0;
  if (v42)
  {
    uint64_t v55 = v51;
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = sub_1C23C0450;
    *(void *)(v56 + 24) = v23;
    sub_1C23BE9B4((uint64_t)&v122, v56 + 32);
    aBlock[4] = sub_1C23BEA58;
    aBlock[5] = v56;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_110_0;
    uint64_t v110 = _Block_copy(aBlock);
    uint64_t v89 = v55;
    sub_1C23BEA5C(v50, v49, v55, v52, v53, v54);
    swift_retain();
    id v57 = v44;
    char v112 = v23;
    id v58 = v57;
    sub_1C23BEA5C(v50, v49, v55, v52, v53, v54);
    uint64_t v111 = v52;
    int v59 = v99;
    sub_1C254F1E0();
    uint64_t v115 = (void *)MEMORY[0x1E4FBC860];
    sub_1C23BE96C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    uint64_t v109 = (uint64_t)v54;
    sub_1C221B1A0();
    sub_1C23BE96C((unint64_t *)&qword_1EBB6FF40, (void (*)(uint64_t))sub_1C221B1A0);
    unint64_t v60 = v50;
    uint64_t v61 = v100;
    uint64_t v62 = v104;
    sub_1C2550200();
    id v63 = v110;
    MEMORY[0x1C87581B0](0, v59, v61, v110);
    _Block_release(v63);

    (*(void (**)(char *, uint64_t))(v103 + 8))(v61, v62);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v59, v102);
    swift_release();
    uint64_t v64 = v89;
    uint64_t v65 = v111;
    sub_1C2224A88(v60, (uint64_t)v49, v89, v111, v53);
    swift_release();

    swift_release();
    uint64_t v66 = v60;
    uint64_t v67 = (uint64_t)v49;
    uint64_t v68 = v64;
    uint64_t v69 = v65;
  }
  else
  {
    sub_1C23BE9B4((uint64_t)&v122, (uint64_t)aBlock);
    sub_1C2207BC8(v50, v49, v51, v52, v53, v54);
    sub_1C23BDE14((uint64_t)aBlock, v91);
    sub_1C2224A88(v50, (uint64_t)v49, v51, v52, v53);
    swift_release();
    swift_release();
    uint64_t v66 = v50;
    uint64_t v67 = (uint64_t)v49;
    uint64_t v68 = v51;
    uint64_t v69 = v52;
  }
  sub_1C2224A88(v66, v67, v68, v69, v53);
  sub_1C2268C64((uint64_t)v105);
  return swift_release();
}

void sub_1C23BFB70()
{
  if (!qword_1EA2E27F8)
  {
    sub_1C23BFC04(255, &qword_1EA2E2800, (uint64_t (*)(uint64_t))sub_1C23BFC80, MEMORY[0x1E4F1AC28]);
    sub_1C23BFCE8();
    unint64_t v0 = sub_1C254EB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E27F8);
    }
  }
}

void sub_1C23BFC04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_1C2206F9C();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C23BFC80()
{
  if (!qword_1EA2E2808)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6EEB8);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2808);
    }
  }
}

unint64_t sub_1C23BFCE8()
{
  unint64_t result = qword_1EA2E2810;
  if (!qword_1EA2E2810)
  {
    sub_1C23BFC04(255, &qword_1EA2E2800, (uint64_t (*)(uint64_t))sub_1C23BFC80, MEMORY[0x1E4F1AC28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2810);
  }
  return result;
}

uint64_t sub_1C23BFD74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for BrowseCategory() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + v5);
  uint64_t v7 = *(void *)(v1 + v5 + 8);
  uint64_t v8 = *(void *)(v1 + v5 + 16);
  char v9 = *(unsigned char *)(v1 + v5 + 24);
  return sub_1C23BDB1C(v1 + v4, v6, v7, v8, v9, a1);
}

uint64_t type metadata accessor for BrowseIconProvider()
{
  return self;
}

uint64_t method lookup function for BrowseIconProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BrowseIconProvider);
}

uint64_t dispatch thunk of BrowseIconProvider.__allocating_init(accountIconProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of BrowseIconProvider.placeholder(for:size:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of BrowseIconProvider.fetchIcon(for:size:queue:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of BrowseIconProvider.makeIconPublisher(for:size:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

void sub_1C23BFEDC()
{
  if (!qword_1EA2E2820)
  {
    sub_1C23C0908(255, &qword_1EA2E2828, (uint64_t)&type metadata for AccountIcon, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = type metadata accessor for Box();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2820);
    }
  }
}

uint64_t sub_1C23BFF58()
{
  return sub_1C23BB8C8();
}

uint64_t sub_1C23BFF60()
{
  return sub_1C2401D74(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_1C23BFF80(uint64_t a1)
{
}

void sub_1C23BFFB4()
{
  if (!qword_1EBB6EEA0)
  {
    sub_1C23C0048(255, (unint64_t *)&qword_1EBB6E940, (unint64_t *)&qword_1EBB6EEB8, 0x1E4FB1818, (uint64_t (*)(uint64_t, void, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
    unint64_t v0 = sub_1C254F340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6EEA0);
    }
  }
}

void sub_1C23C0048(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, void, uint64_t, unint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C21AB51C(255, a3);
    unint64_t v9 = sub_1C2207750();
    unint64_t v10 = a5(a1, MEMORY[0x1E4FBC958], v8, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1C23C00C4(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_1C23C0048(255, a3, a4, a5, MEMORY[0x1E4FBAEA0]);
    unint64_t v6 = type metadata accessor for Box();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C23C0134(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C23C0198()
{
  if (!qword_1EBB6EE88)
  {
    sub_1C254CB40();
    sub_1C23C0908(255, (unint64_t *)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
    sub_1C23BE96C((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1C254F340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6EE88);
    }
  }
}

uint64_t sub_1C23C0268()
{
  return sub_1C23BBB44();
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v1 = *(void *)(type metadata accessor for BrowseCategory() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1C254CB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
    sub_1C21FD4EC();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 25, v2 | 7);
}

uint64_t sub_1C23C0394(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for BrowseCategory() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v12 = *(void *)(v9 + 16);
  char v13 = *(unsigned char *)(v9 + 24);
  return sub_1C23BDCDC(a1, a2, v7, v8, v10, v11, v12, v13);
}

void sub_1C23C0450(uint64_t a1)
{
  sub_1C23BDE14(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

uint64_t objectdestroyTm_7()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t objectdestroy_4Tm()
{
  uint64_t v1 = *(void *)(type metadata accessor for BrowseCategory() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1C254CB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
    sub_1C21FD4EC();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, ((v4 + v3 + 39) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

void *sub_1C23C05D4()
{
  uint64_t v1 = *(void *)(type metadata accessor for BrowseCategory() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  unint64_t v4 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = *(void *)(v0 + v4 + 8);
  uint64_t v8 = *(void *)(v0 + v4 + 16);
  char v9 = *(unsigned char *)(v0 + v4 + 24);
  uint64_t v10 = *(void (**)(void **))(v0 + ((v3 + 39) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C23BD6B8(v5, v0 + v2, v6, v7, v8, v9, v10);
}

double sub_1C23C0680@<D0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C24031F0(*a1, **(void **)(v2 + 16), *(void *)(*(void *)(v2 + 16) + 8), *(void *)(*(void *)(v2 + 16) + 16), *(unsigned char *)(*(void *)(v2 + 16) + 24), a2);
}

id sub_1C23C069C(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, char a7)
{
  if (a7) {
    return a1;
  }
  else {
    return a6;
  }
}

id sub_1C23C06AC(id a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, char a7)
{
  if (a7) {
    return a1;
  }
  else {
    return sub_1C23BEA5C(a1, a2, a3, a4, a5, a6);
  }
}

uint64_t objectdestroy_9Tm()
{
  swift_release();
  sub_1C23BEA4C(*(id *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));
  return MEMORY[0x1F4186498](v0, 81, 7);
}

uint64_t sub_1C23C0708()
{
  uint64_t v1 = *(uint64_t (**)(unsigned char *))(v0 + 16);
  sub_1C23BE9B4(v0 + 32, (uint64_t)v3);
  return v1(v3);
}

uint64_t sub_1C23C0754(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C23C0790(uint64_t a1, uint64_t a2)
{
  sub_1C23C0908(0, (unint64_t *)&qword_1EBB6E948, (uint64_t)&type metadata for BrowseIcon, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C23C0818(uint64_t a1)
{
  sub_1C23C0908(0, (unint64_t *)&qword_1EBB6E948, (uint64_t)&type metadata for BrowseIcon, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C23C0898(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, ValueMetadata *, uint64_t, unint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C23C0908(255, a3, (uint64_t)&type metadata for BrowseIcon, a4);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C23C0908(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, ValueMetadata *, uint64_t, unint64_t))
{
  if (!*a2)
  {
    unint64_t v8 = sub_1C2207680();
    unint64_t v9 = a4(a1, &type metadata for AccountIcon.Size, a3, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C23C0974()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C23C09AC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C23C09E4()
{
  if (!qword_1EBB6EE78)
  {
    sub_1C23C0A58(255, &qword_1EBB6EE98, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = type metadata accessor for Box();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6EE78);
    }
  }
}

void sub_1C23C0A58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for BrowseCategory();
    sub_1C23C0908(255, (unint64_t *)&qword_1EBB6E948, (uint64_t)&type metadata for BrowseIcon, (uint64_t (*)(uint64_t, ValueMetadata *, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
    uint64_t v8 = v7;
    uint64_t v9 = sub_1C23BE96C(&qword_1EBB6FAD8, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
    unint64_t v10 = a3(a1, v6, v8, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C23C0BBC()
{
  return sub_1C23BE7C4();
}

uint64_t type metadata accessor for HighlightsDataSource()
{
  return self;
}

uint64_t type metadata accessor for VerticalHighlightsDataSource()
{
  return self;
}

uint64_t type metadata accessor for HorizontalHighlightsDataSource()
{
  uint64_t result = qword_1EA2E2850;
  if (!qword_1EA2E2850) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C23C0C70()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C23C0CB0()
{
  uint64_t v1 = sub_1C254D440();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254D430();
  uint64_t v5 = sub_1C254D410();
  if (v0)
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    uint64_t v6 = (void *)v5;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    id v7 = objc_msgSend(self, sel_estimatedDimension_, 100.0);
    uint64_t v1 = sub_1C254FDA0();
  }
  return v1;
}

uint64_t sub_1C23C0E00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C254E890();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = sub_1C254D2A0();
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C254E820();
  uint64_t v5 = sub_1C254D290();
  a1[3] = v3;
  uint64_t result = sub_1C23C1A58((unint64_t *)&qword_1EBB6E7D8, MEMORY[0x1E4F66208]);
  a1[4] = result;
  *a1 = v5;
  return result;
}

void sub_1C23C0FA0()
{
}

void sub_1C23C0FD0()
{
}

void sub_1C23C0FEC()
{
}

void sub_1C23C1008()
{
}

id sub_1C23C1034()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HorizontalHighlightsDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C23C106C()
{
  return type metadata accessor for HorizontalHighlightsDataSource();
}

uint64_t sub_1C23C1074@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C23C0E00(a1);
}

id sub_1C23C108C(uint64_t a1, unsigned __int8 *a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v43 = a5;
  int v42 = a4;
  uint64_t v37 = a3;
  uint64_t v41 = a1;
  sub_1C23C19F4(0, &qword_1EA2DFD80, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v36 - v7;
  int v40 = *a2;
  uint64_t v39 = *((void *)a2 + 1);
  sub_1C254D110();
  uint64_t v9 = (void *)MEMORY[0x1C87555F0]();
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C255CD80;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C23C19F4(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C255CDA0;
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v14 = sub_1C220D950();
  strcpy((char *)(v12 + 32), "pluginPackage");
  *(_WORD *)(v12 + 46) = -4864;
  *(void *)(v12 + 96) = v13;
  *(void *)(v12 + 104) = v14;
  *(void *)(v12 + 64) = v14;
  *(void *)(v12 + 72) = 0xD000000000000025;
  *(void *)(v12 + 80) = 0x80000001C2578100;
  *(void *)(v10 + 32) = sub_1C254F9A0();
  sub_1C23C19F4(0, &qword_1EA2DF320, MEMORY[0x1E4F67030], v11);
  uint64_t v15 = sub_1C254CEF0();
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  long long v38 = xmmword_1C255CD90;
  *(_OWORD *)(v18 + 16) = xmmword_1C255CD90;
  (*(void (**)(unint64_t, void, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E4F67020], v15);
  uint64_t v19 = sub_1C254CFE0();
  uint64_t v21 = v20;
  uint64_t v22 = sub_1C254C520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v8, 1, 1, v22);
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v38;
  *(void *)(v23 + 32) = sub_1C254CF10();
  uint64_t v24 = MEMORY[0x1C87555D0](v18, v19, v21, v8, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C229E610((uint64_t)v8);
  *(void *)(v10 + 40) = v24;
  if (v39) {
    char v25 = v40;
  }
  else {
    char v25 = 11;
  }
  LOBYTE(v44) = v25;
  *(void *)(v10 + 48) = _s14HealthPlatform8FeedItemC0A9RecordsUIE028predicateForConceptHighlightC5Items4uuid12categoryKind13sourceProfileSo11NSPredicateC10Foundation4UUIDVSg_AD15DisplayCategoryV0N0OSgAA06SourceP0OtFZ_0(v41, (unsigned __int8 *)&v44);
  uint64_t v44 = v10;
  sub_1C254F730();
  int v26 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v26);

  objc_msgSend(v9, sel_setPredicate_, v27);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1C255CEB0;
  id v29 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  id v30 = (void *)sub_1C254F430();
  id v31 = objc_msgSend(v29, sel_initWithKey_ascending_selector_, v30, 1, sel_localizedStandardCompare_);

  *(void *)(v28 + 32) = v31;
  uint64_t v44 = v28;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  uint64_t v32 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setSortDescriptors_, v32);

  if ((v42 & 1) == 0) {
    objc_msgSend(v9, sel_setFetchLimit_, v37);
  }
  id v33 = objc_allocWithZone(MEMORY[0x1E4F1C0F0]);
  id v34 = objc_msgSend(v33, sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v9, v43, 0, 0);

  return v34;
}

uint64_t sub_1C23C1604(void *a1)
{
  uint64_t v2 = sub_1C254D7E0();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C22259FC();
  uint64_t v3 = qword_1EBB6EF40;
  id v4 = a1;
  if (v3 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C254D7A0();
  uint64_t v6 = sub_1C254D540();
  sub_1C23C1A58(&qword_1EA2E08A8, (void (*)(uint64_t))sub_1C22259FC);
  sub_1C23C1A58((unint64_t *)&qword_1EA2DEA78, (void (*)(uint64_t))sub_1C22259FC);
  return v6;
}

uint64_t sub_1C23C17D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a2 + 64);
  long long v6 = *(_OWORD *)(a2 + 16);
  v23[0] = *(_OWORD *)a2;
  v23[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v23[2] = *(_OWORD *)(a2 + 32);
  void v23[3] = v7;
  uint64_t v24 = v5;
  id v8 = sub_1C23C108C(a1, (unsigned __int8 *)v23, a3, a4 & 1, a5);
  uint64_t v9 = sub_1C23C1604(v8);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  id v14 = objc_allocWithZone((Class)type metadata accessor for HorizontalHighlightsDataSource());
  id v15 = v8;
  uint64_t v16 = (void *)sub_1C254DFB0();
  sub_1C23C19F4(0, &qword_1EA2DF1F0, (uint64_t (*)(uint64_t))sub_1C2258038, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
  *(void *)(inited + 32) = 2;
  uint64_t v18 = sub_1C23C1A58(&qword_1EA2E2860, (void (*)(uint64_t))type metadata accessor for HorizontalHighlightsDataSource);
  uint64_t v19 = sub_1C23C1A58(&qword_1EA2E2868, (void (*)(uint64_t))type metadata accessor for HorizontalHighlightsDataSource);
  *(void *)(inited + 40) = v16;
  *(void *)(inited + 48) = v18;
  *(void *)(inited + 56) = v19;
  *(void *)(inited + 64) = 1;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = v11;
  *(void *)(inited + 88) = v13;
  sub_1C22067A4(inited);
  swift_setDeallocating();
  sub_1C2258038();
  id v20 = v16;
  swift_unknownObjectRetain();
  swift_arrayDestroy();
  sub_1C254DE20();
  swift_allocObject();
  swift_unknownObjectRetain();
  uint64_t v21 = sub_1C254DE10();
  swift_unknownObjectRelease();

  return v21;
}

void sub_1C23C19F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C23C1A58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C23C1AA4()
{
  uint64_t result = sub_1C254F430();
  qword_1EA2E2870 = result;
  return result;
}

id static NSNotificationName.ClinicalAccountOnboardingCompletionNotification.getter()
{
  return sub_1C21A4D60(&qword_1EA2DD758, (void **)&qword_1EA2E2870);
}

id sub_1C23C1B00(uint64_t a1)
{
  return sub_1C23C2148(a1, &qword_1EA2DD758, (void **)&qword_1EA2E2870, &qword_1EA2E2878);
}

id static NSNotification.ClinicalAccountOnboardingCompletionNotification.getter()
{
  return sub_1C21A4D60(&qword_1EA2DD760, &qword_1EA2E2878);
}

id sub_1C23C1B50(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EA2DD760, &qword_1EA2E2878);
}

unint64_t static ClinicalAccountOnboardingCompletionNotificationUserInfoKeys.account.getter()
{
  return 0xD000000000000041;
}

unint64_t static ClinicalAccountOnboardingCompletionNotificationUserInfoKeys.error.getter()
{
  return 0xD00000000000003FLL;
}

id ClinicalAccountOnboardingCompletionNotificationUserInfoKeys.init()()
{
  return sub_1C23C1DFC(type metadata accessor for ClinicalAccountOnboardingCompletionNotificationUserInfoKeys);
}

uint64_t type metadata accessor for ClinicalAccountOnboardingCompletionNotificationUserInfoKeys()
{
  return self;
}

id ClinicalAccountOnboardingCompletionNotificationUserInfoKeys.__deallocating_deinit()
{
  return sub_1C23C1ECC(type metadata accessor for ClinicalAccountOnboardingCompletionNotificationUserInfoKeys);
}

unint64_t static OAuthCompletionNotificationUserInfoKeys.account.getter()
{
  return 0xD00000000000002DLL;
}

unint64_t static OAuthCompletionNotificationUserInfoKeys.state.getter()
{
  return 0xD00000000000002BLL;
}

unint64_t static OAuthCompletionNotificationUserInfoKeys.error.getter()
{
  return 0xD00000000000002BLL;
}

id OAuthCompletionNotificationUserInfoKeys.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id OAuthCompletionNotificationUserInfoKeys.init()()
{
  return sub_1C23C1DFC(type metadata accessor for OAuthCompletionNotificationUserInfoKeys);
}

id sub_1C23C1DFC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for OAuthCompletionNotificationUserInfoKeys()
{
  return self;
}

id sub_1C23C1E70(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  v4.receiver = a1;
  v4.super_class = (Class)a3();
  return objc_msgSendSuper2(&v4, sel_init);
}

id OAuthCompletionNotificationUserInfoKeys.__deallocating_deinit()
{
  return sub_1C23C1ECC(type metadata accessor for OAuthCompletionNotificationUserInfoKeys);
}

id sub_1C23C1ECC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1C23C1F08()
{
  uint64_t result = sub_1C254F430();
  qword_1EA2E2880 = result;
  return result;
}

id static NSNotificationName.OAuthCompletionNotification.getter()
{
  return sub_1C21A4D60(&qword_1EA2DD768, (void **)&qword_1EA2E2880);
}

id sub_1C23C1F64(uint64_t a1)
{
  return sub_1C23C2148(a1, &qword_1EA2DD768, (void **)&qword_1EA2E2880, &qword_1EA2E2888);
}

id static NSNotification.OAuthCompletionNotification.getter()
{
  return sub_1C21A4D60(&qword_1EA2DD770, &qword_1EA2E2888);
}

id sub_1C23C1FB4(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EA2DD770, &qword_1EA2E2888);
}

uint64_t sub_1C23C1FD8()
{
  uint64_t result = sub_1C254F430();
  qword_1EBB6E5E8 = result;
  return result;
}

uint64_t sub_1C23C2010()
{
  uint64_t result = sub_1C254F430();
  qword_1EBB6E5F0 = result;
  return result;
}

uint64_t sub_1C23C2048()
{
  uint64_t result = sub_1C254F430();
  qword_1EA2E2890 = result;
  return result;
}

id static NSNotificationName.accountStatusRedetermineUpgradableAccounts.getter()
{
  return sub_1C21A4D60(&qword_1EA2DD778, (void **)&qword_1EA2E2890);
}

uint64_t static AccountStatusSummaryTileNotificationKey.accountID.getter()
{
  return 0x49746E756F636361;
}

uint64_t sub_1C23C20C0()
{
  uint64_t result = sub_1C254F430();
  qword_1EA2E2898 = result;
  return result;
}

id static NSNotificationName.WDMedicalRecordTimelineShouldReloadNotification.getter()
{
  return sub_1C21A4D60(&qword_1EA2DD780, (void **)&qword_1EA2E2898);
}

id sub_1C23C211C(uint64_t a1)
{
  return sub_1C23C2148(a1, &qword_1EA2DD780, (void **)&qword_1EA2E2898, (void **)&qword_1EA2E28A0);
}

id sub_1C23C2148(uint64_t a1, void *a2, void **a3, void **a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  long long v6 = *a3;
  *a4 = *a3;
  return v6;
}

id static NSNotification.WDMedicalRecordTimelineShouldReloadNotification.getter()
{
  return sub_1C21A4D60(&qword_1EA2DD788, (void **)&qword_1EA2E28A0);
}

ValueMetadata *type metadata accessor for AccountStatusSummaryTileNotificationKey()
{
  return &type metadata for AccountStatusSummaryTileNotificationKey;
}

id sub_1C23C21D4(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EA2DD788, (void **)&qword_1EA2E28A0);
}

id sub_1C23C21FC()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  v7[0] = 0;
  id v1 = objc_msgSend(v0, sel_countOfConceptsAssociatedToUserRecordsWithError_, v7);
  id v2 = v7[0];
  if (v1)
  {
    objc_super v3 = v1;
    id v4 = v7[0];
    id v2 = objc_msgSend(v3, sel_integerValue);
  }
  else
  {
    id v5 = v7[0];
    sub_1C254C820();

    swift_willThrow();
  }
  return v2;
}

BOOL URL.isCategoryRoomURL.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254C900();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254C8E0();
  if (!v7) {
    return 0;
  }
  uint64_t v8 = v6;
  uint64_t v9 = v7;
  uint64_t v10 = sub_1C254C8C0();
  if (!v11)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v12 = v10;
  uint64_t v13 = v11;
  uint64_t v33 = v8;
  uint64_t v34 = v9;
  strcpy((char *)v32, "x-apple-health");
  HIBYTE(v32[1]) = -18;
  unint64_t v14 = sub_1C2218914();
  uint64_t v15 = sub_1C2550180();
  swift_bridgeObjectRelease();
  if (v15)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  uint64_t v33 = v12;
  uint64_t v34 = v13;
  v32[0] = 0xD00000000000001DLL;
  v32[1] = 0x80000001C2581C00;
  uint64_t v16 = sub_1C2550180();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  if (v16) {
    goto LABEL_7;
  }
  uint64_t v33 = sub_1C254C8D0();
  uint64_t v34 = v18;
  uint64_t v19 = MEMORY[0x1C87586D0](47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x1E4FBB1A0], v14);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    uint64_t v21 = (unint64_t *)(v19 + 32 * v20);
    unint64_t v22 = *v21;
    unint64_t v23 = v21[1];
    unint64_t v25 = v21[2];
    unint64_t v24 = v21[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if ((v23 ^ v22) >= 0x4000)
    {
      uint64_t v26 = sub_1C23C2EE4(v22, v23, v25, v24, 10);
      if ((v27 & 0x100) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_1C23C2B74(v22, v23, v25, v24, 10);
        char v30 = v29;
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0) {
          goto LABEL_16;
        }
      }
      else if ((v27 & 1) == 0)
      {
        uint64_t v28 = (unsigned __int8 *)v26;
LABEL_16:
        DisplayCategory.Kind.init(rawValue:)((Swift::Int)v28);
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
  }
  swift_bridgeObjectRelease();
  LOBYTE(v33) = 11;
LABEL_18:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v33 != 11;
}

uint64_t URL.chrDisplayCategoryKind.getter@<X0>(unsigned char *a1@<X8>)
{
  sub_1C254C8D0();
  unint64_t v2 = sub_1C2218914();
  uint64_t v3 = MEMORY[0x1C87586D0](47, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x1E4FBB1A0], v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    id v5 = (unint64_t *)(v3 + 32 * v4);
    unint64_t v6 = *v5;
    unint64_t v7 = v5[1];
    unint64_t v9 = v5[2];
    unint64_t v8 = v5[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if ((v7 ^ v6) >= 0x4000)
    {
      uint64_t v10 = sub_1C23C2EE4(v6, v7, v9, v8, 10);
      if ((v11 & 0x100) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = sub_1C23C2B74(v6, v7, v9, v8, 10);
        char v14 = v13;
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0) {
          goto LABEL_8;
        }
      }
      else if ((v11 & 1) == 0)
      {
        uint64_t v12 = (unsigned __int8 *)v10;
LABEL_8:
        DisplayCategory.Kind.init(rawValue:)((Swift::Int)v12);
        return swift_bridgeObjectRelease();
      }
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 11;
  return result;
}

BOOL URL.isViewHealthRecordURL.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254C900();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254C8E0();
  if (!v7) {
    return 0;
  }
  uint64_t v8 = v6;
  uint64_t v9 = v7;
  uint64_t v10 = sub_1C254C8C0();
  if (v11)
  {
    uint64_t v12 = v10;
    uint64_t v13 = v11;
    uint64_t v20 = v8;
    uint64_t v21 = v9;
    strcpy((char *)v19, "x-apple-health");
    HIBYTE(v19[1]) = -18;
    sub_1C2218914();
    uint64_t v14 = sub_1C2550180();
    swift_bridgeObjectRelease();
    if (v14)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
      BOOL v15 = 0;
    }
    else
    {
      uint64_t v20 = v12;
      uint64_t v21 = v13;
      v19[0] = 0xD000000000000010;
      v19[1] = 0x80000001C2581C20;
      uint64_t v16 = sub_1C2550180();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
      if (v16)
      {
        BOOL v15 = 0;
      }
      else
      {
        uint64_t v17 = *(void *)(sub_1C254C850() + 16);
        swift_bridgeObjectRelease();
        BOOL v15 = v17 == 2;
      }
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v15;
}

uint64_t URL.medicalRecordID.getter@<X0>(uint64_t a1@<X8>)
{
  if (URL.isViewHealthRecordURL.getter())
  {
    sub_1C254C860();
    sub_1C254CAE0();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = sub_1C254CB40();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    return v4(a1, 1, 1, v3);
  }
}

uint64_t static URL.categoryRoomURL(for:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C23C2FB8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  v11[2] = 0xD00000000000002FLL;
  v11[3] = 0x80000001C2581C40;
  v11[1] = v7;
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254C8F0();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1C254C900();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1C23C2B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_1C23C3010();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C254F620();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1C2517C80();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_1C2550440();
  }
LABEL_7:
  uint64_t v13 = sub_1C23C2C68(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1C23C2C68(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1C23C2EE4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    unsigned int v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    unsigned int v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    unsigned int v11 = (void *)sub_1C2550440();
  }
  uint64_t result = sub_1C23C3064((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

void sub_1C23C2FB8()
{
  if (!qword_1EA2DF038)
  {
    sub_1C254C900();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF038);
    }
  }
}

unint64_t sub_1C23C3010()
{
  unint64_t result = qword_1EA2E28A8;
  if (!qword_1EA2E28A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E28A8);
  }
  return result;
}

uint64_t sub_1C23C3064(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    unint64_t result = sub_1C2517C04(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  unint64_t result = sub_1C254F5E0();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    unint64_t result = sub_1C2517C04(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    unint64_t result = sub_1C2517C04(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    unint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  unint64_t result = sub_1C254F5E0();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  uint64_t v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    uint64_t v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          uint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

id sub_1C23C348C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___iconView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___iconView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___iconView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
    objc_msgSend(v4, sel_setContentMode_, 1);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C23C3528()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___titleLabel);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v4, sel_setNumberOfLines_, 0);
    id v5 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
    objc_msgSend(v4, sel_setFont_, v5);

    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void sub_1C23C360C()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell_baseAccessibilityIdentifier + 8];
  if (v1)
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell_baseAccessibilityIdentifier];
    sub_1C22259B4(0, (unint64_t *)&qword_1EBB6FA60);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1C255CD90;
    *(void *)(v3 + 32) = v2;
    *(void *)(v3 + 40) = v1;
    swift_bridgeObjectRetain_n();
    id v4 = (void *)sub_1C254F700();
    id v5 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v0, sel_setAccessibilityIdentifier_, v5);
    swift_bridgeObjectRelease();

    id v6 = sub_1C23C348C();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C255CDA0;
    *(void *)(v7 + 32) = v2;
    *(void *)(v7 + 40) = v1;
    *(void *)(v7 + 48) = 1852793673;
    *(void *)(v7 + 56) = 0xE400000000000000;
    swift_bridgeObjectRetain();
    unsigned __int8 v8 = (void *)sub_1C254F700();
    id v9 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v6, sel_setAccessibilityIdentifier_, v9);
    swift_bridgeObjectRelease();

    id v10 = sub_1C23C3528();
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C255CDA0;
    *(void *)(v11 + 32) = v2;
    *(void *)(v11 + 40) = v1;
    *(void *)(v11 + 48) = 0x6554636974617453;
    *(void *)(v11 + 56) = 0xEA00000000007478;
    uint64_t v12 = (void *)sub_1C254F700();
    id v13 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v10, sel_setAccessibilityIdentifier_, v13);
    swift_bridgeObjectRelease();
  }
}

id sub_1C23C3838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___iconView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell____lazy_storage___titleLabel] = 0;
  id v5 = &v3[OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell_baseAccessibilityIdentifier];
  *(void *)id v5 = 0;
  *((void *)v5 + 1) = 0;
  if (a3)
  {
    id v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for TextWithIconCell();
  id v7 = objc_msgSendSuper2(&v10, sel_initWithStyle_reuseIdentifier_, a1, v6);

  id v8 = v7;
  sub_1C23C39D4();

  return v8;
}

void sub_1C23C39D4()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = sub_1C23C348C();
  objc_msgSend(v1, sel_addSubview_, v2);

  id v3 = objc_msgSend(v0, sel_contentView);
  id v4 = sub_1C23C3528();
  objc_msgSend(v3, sel_addSubview_, v4);

  id v58 = self;
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C255E110;
  id v6 = sub_1C23C348C();
  id v7 = objc_msgSend(v6, sel_widthAnchor);

  if (qword_1EA2DD790 != -1) {
    swift_once();
  }
  id v8 = objc_msgSend(v7, sel_constraintEqualToConstant_, *(double *)&qword_1EA2E28B0);

  *(void *)(v5 + 32) = v8;
  id v9 = sub_1C23C348C();
  id v10 = objc_msgSend(v9, sel_heightAnchor);

  id v11 = objc_msgSend(v10, sel_constraintEqualToConstant_, *(double *)&qword_1EA2E28B0);
  *(void *)(v5 + 40) = v11;
  id v12 = sub_1C23C348C();
  id v13 = objc_msgSend(v12, sel_leadingAnchor);

  id v14 = objc_msgSend(v0, sel_contentView);
  id v15 = objc_msgSend(v14, sel_layoutMarginsGuide);

  id v16 = objc_msgSend(v15, (SEL)&selRef_minusOrderedSet_ + 2);
  id v17 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v16);

  *(void *)(v5 + 48) = v17;
  id v18 = sub_1C23C348C();
  id v19 = objc_msgSend(v18, sel_topAnchor);

  id v20 = objc_msgSend(v0, sel_contentView);
  id v21 = objc_msgSend(v20, sel_layoutMarginsGuide);

  id v22 = objc_msgSend(v21, sel_topAnchor);
  id v23 = objc_msgSend(v19, sel_constraintGreaterThanOrEqualToAnchor_, v22);

  *(void *)(v5 + 56) = v23;
  id v24 = objc_msgSend(v0, sel_contentView);
  id v25 = objc_msgSend(v24, sel_layoutMarginsGuide);

  id v26 = objc_msgSend(v25, sel_bottomAnchor);
  id v27 = sub_1C23C348C();
  id v28 = objc_msgSend(v27, sel_bottomAnchor);

  id v29 = objc_msgSend(v26, sel_constraintGreaterThanOrEqualToAnchor_, v28);
  *(void *)(v5 + 64) = v29;
  id v30 = sub_1C23C3528();
  id v31 = objc_msgSend(v30, sel_centerYAnchor);

  id v32 = sub_1C23C348C();
  id v33 = objc_msgSend(v32, sel_centerYAnchor);

  id v34 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v33);
  *(void *)(v5 + 72) = v34;
  id v35 = sub_1C23C3528();
  id v36 = objc_msgSend(v35, sel_topAnchor);

  id v37 = objc_msgSend(v0, sel_contentView);
  id v38 = objc_msgSend(v37, sel_layoutMarginsGuide);

  id v39 = objc_msgSend(v38, sel_topAnchor);
  id v40 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v39);

  *(void *)(v5 + 80) = v40;
  id v41 = sub_1C23C3528();
  id v42 = objc_msgSend(v41, sel_leadingAnchor);

  id v43 = sub_1C23C348C();
  id v44 = objc_msgSend(v43, sel_trailingAnchor);

  if (qword_1EA2DD798 != -1) {
    swift_once();
  }
  id v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v44, *(double *)&qword_1EA2E28B8);

  *(void *)(v5 + 88) = v45;
  id v46 = objc_msgSend(v0, sel_contentView);
  id v47 = objc_msgSend(v46, sel_layoutMarginsGuide);

  id v48 = objc_msgSend(v47, sel_trailingAnchor);
  id v49 = sub_1C23C3528();
  id v50 = objc_msgSend(v49, sel_trailingAnchor);

  id v51 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v50);
  *(void *)(v5 + 96) = v51;
  id v52 = objc_msgSend(v0, sel_contentView);
  id v53 = objc_msgSend(v52, sel_layoutMarginsGuide);

  id v54 = objc_msgSend(v53, sel_bottomAnchor);
  id v55 = sub_1C23C3528();
  id v56 = objc_msgSend(v55, sel_bottomAnchor);

  id v57 = objc_msgSend(v54, sel_constraintEqualToAnchor_, v56);
  *(void *)(v5 + 104) = v57;
  sub_1C254F730();
  sub_1C21F34D4();
  id v59 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v58, sel_activateConstraints_, v59);
}

id sub_1C23C4218()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextWithIconCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for TextWithIconCell()
{
  return self;
}

void sub_1C23C42D0()
{
  qword_1EA2E28B0 = 0x403D000000000000;
}

void sub_1C23C42E0()
{
  qword_1EA2E28B8 = 0x4030000000000000;
}

void SettingsViewController.tableView(_:didSelectRowAt:)(void *a1)
{
  objc_super v2 = v1;
  id v4 = (void *)sub_1C254CD30();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v4, 1);

  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts;
  unint64_t v6 = swift_bridgeObjectRetain();
  int64_t v7 = sub_1C22E6C84(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1C254CD80();
  if (v8 < 0 || v8 >= *(void *)(v7 + 16))
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v9 = *(unsigned __int8 *)(v7 + v8 + 32);
  swift_bridgeObjectRelease();
  switch(v9)
  {
    case 1:
      sub_1C23C48A0();
      return;
    case 2:
      unint64_t v23 = sub_1C254CD60();
      id v24 = &OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_appSourceModels;
      goto LABEL_16;
    case 3:
      unint64_t v23 = sub_1C254CD60();
      id v24 = &OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_researchStudySourceModels;
LABEL_16:
      uint64_t v25 = *(void *)&v2[*v24];
      swift_bridgeObjectRetain();
      sub_1C23C4994(v23, v25);
      goto LABEL_17;
    case 4:
      id v26 = (char *)objc_msgSend(objc_allocWithZone((Class)WDClinicalSettingsViewController), sel_initWithStyle_profile_, 1, *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile]);
      if (!v26) {
        return;
      }
      id v37 = v26;
      id v27 = objc_msgSend(v26, sel_navigationItem);
      objc_msgSend(v27, sel_setLargeTitleDisplayMode_, 2);

      objc_msgSend(v2, sel_showViewController_sender_, v37, 0);
      goto LABEL_36;
    case 5:
      sub_1C23C4F28();
      return;
    case 6:
      uint64_t v28 = sub_1C254CD60();
      sub_1C23C5050(v28);
      return;
    default:
      unint64_t v10 = *(void *)&v1[v5];
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_1C2550620();
        swift_bridgeObjectRelease();
        if (!v29) {
          return;
        }
      }
      else if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        return;
      }
      uint64_t v11 = sub_1C254CD60();
      uint64_t v12 = v11;
      unint64_t v13 = *(void *)&v1[v5];
      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_1C2550620();
        swift_bridgeObjectRelease();
        if (v12 == v30) {
          goto LABEL_8;
        }
      }
      else if (v11 == *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_8:
        id v14 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
        id v15 = objc_msgSend(objc_allocWithZone((Class)WDClinicalOnboardingOAuthNavigationViewController), sel_initWithContext_onboardingOptions_sourceIdentifier_profile_existingAccount_, 3, 0, 0, v14, 0);
        id v16 = objc_msgSend(v14, sel_onboardingManager);
        id v17 = objc_msgSend(v16, sel_getPendingOnboardingGatewayAndClear);

        objc_msgSend(v15, sel_setGatewayProxyToTry_, v17);
        id v18 = objc_msgSend(v14, sel_onboardingManager);
        id v19 = (void *)swift_allocObject();
        void v19[2] = v2;
        v19[3] = v15;
        v19[4] = 0;
        v19[5] = 0;
        aBlock[4] = sub_1C238593C;
        aBlock[5] = v19;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1C22F3AD0;
        aBlock[3] = &block_descriptor_46;
        id v20 = _Block_copy(aBlock);
        id v21 = v2;
        id v22 = v15;
        swift_release();
        objc_msgSend(v18, sel_registerInflightOnboardingViewController_completion_, v22, v20);
        _Block_release(v20);

        if (qword_1EBB6D840 != -1) {
          swift_once();
        }
        sub_1C23CCB04(2, 3, 0);
        return;
      }
      unint64_t v31 = sub_1C254CD60();
      unint64_t v32 = v31;
      uint64_t v33 = *(void *)&v2[v5];
      if ((v33 & 0xC000000000000001) == 0)
      {
        if ((v31 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v31 < *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v34 = *(id *)(v33 + 8 * v31 + 32);
          goto LABEL_35;
        }
        __break(1u);
        JUMPOUT(0x1C23C4884);
      }
      swift_bridgeObjectRetain();
      id v34 = (id)MEMORY[0x1C87588E0](v32, v33);
      swift_bridgeObjectRelease();
LABEL_35:
      id v35 = *(void **)&v2[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
      LOBYTE(aBlock[0]) = 0;
      objc_allocWithZone((Class)type metadata accessor for ClinicalAccountDetailsViewController());
      id v36 = v34;
      id v37 = sub_1C242E68C(v36, v35, (char *)aBlock, 0, 0);
      objc_msgSend(v2, sel_showViewController_sender_, v37, 0);

LABEL_36:

      return;
  }
}

void sub_1C23C48A0()
{
  id v1 = v0;
  objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
  id v3 = (objc_class *)type metadata accessor for PDFConfigurationViewController();
  id v4 = objc_allocWithZone(v3);
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  id v5 = objc_allocWithZone(v3);
  id v6 = PDFConfigurationViewController.init(profile:account:category:)(v2, 0, (uint64_t *)v8);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B70]), sel_initWithRootViewController_, v6);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v7, 1, 0);
}

void sub_1C23C4994(unint64_t a1, uint64_t a2)
{
  id v3 = v2;
  v57[1] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0xC000000000000001) == 0)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      id v11 = *(id *)(a2 + 8 * a1 + 32);
      goto LABEL_5;
    }
    __break(1u);
  }
  id v11 = (id)MEMORY[0x1C87588E0](a1, a2, v8);
LABEL_5:
  uint64_t v12 = v11;
  unint64_t v13 = &selRef_setUnsupportedSearchResults_;
  id v14 = objc_msgSend(v11, sel_source);
  v56[0] = 0;
  id v15 = objc_msgSend(v14, sel__fetchBundleWithError_, v56);

  if (v15)
  {
    id v16 = v56[0];

    id v17 = *(id *)&v3[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
    id v18 = objc_msgSend(v12, sel_source);
    id v19 = objc_msgSend(objc_allocWithZone((Class)WDClinicalAuthorizationSettingsViewController), sel_initWithProfile_source_, v17, v18);

    objc_msgSend(v3, sel_showViewController_sender_, v19, 0);
  }
  else
  {
    id v20 = v56[0];
    id v21 = (void *)sub_1C254C820();

    swift_willThrow();
    sub_1C254E500();
    id v22 = v12;
    id v23 = v21;
    id v24 = v22;
    id v25 = v21;
    id v26 = sub_1C254E550();
    os_log_type_t v27 = sub_1C254FA20();
    int v28 = v27;
    id v55 = v26;
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v29 = swift_slowAlloc();
      int v53 = v28;
      uint64_t v30 = v29;
      unint64_t v31 = (void *)swift_slowAlloc();
      id v52 = v31;
      uint64_t v54 = swift_slowAlloc();
      v57[0] = v54;
      *(_DWORD *)uint64_t v30 = 138543618;
      id v32 = objc_msgSend(v24, sel_source);
      v56[0] = v32;
      sub_1C2550120();
      *unint64_t v31 = v32;

      *(_WORD *)(v30 + 12) = 2082;
      v56[0] = v21;
      id v33 = v21;
      sub_1C2206F9C();
      sub_1C25508F0();
      id v34 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v51 = MEMORY[0x1E4FBC840] + 8;
      uint64_t v35 = sub_1C254F510();
      v56[0] = (id)sub_1C21AD354(v35, v36, v57);
      sub_1C2550120();
      unint64_t v13 = &selRef_setUnsupportedSearchResults_;
      swift_bridgeObjectRelease();

      id v37 = v55;
      _os_log_impl(&dword_1C21A1000, v55, (os_log_type_t)v53, "Failed to fetch app bundle for source %{public}@: %{public}s", (uint8_t *)v30, 0x16u);
      sub_1C23C5780();
      id v38 = v52;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v38, -1, -1);
      uint64_t v39 = v6;
      id v40 = v37;
      id v41 = v24;
      id v42 = v3;
      uint64_t v43 = v54;
      swift_arrayDestroy();
      uint64_t v44 = v43;
      id v3 = v42;
      id v24 = v41;
      MEMORY[0x1C875A0B0](v44, -1, -1);
      MEMORY[0x1C875A0B0](v30, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v39);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    id v45 = self;
    id v46 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile], sel_healthStore);
    id v47 = objc_msgSend(v45, sel_sharedInstanceForHealthStore_, v46);

    id v48 = [v24 v13[52]];
    id v49 = objc_msgSend(v47, sel_createDeletedSourceMessageViewControllerForSource_, v48);

    id v50 = objc_msgSend(v49, sel_navigationItem);
    objc_msgSend(v50, sel_setLargeTitleDisplayMode_, 2);

    objc_msgSend(v3, sel_showViewController_sender_, v49, 0);
  }
}

void sub_1C23C4F28()
{
  if (qword_1EBB6D858 != -1) {
    swift_once();
  }
  id v1 = (void *)sub_1C254F430();
  id v2 = objc_msgSend(self, sel_presenterForPrivacySplashWithIdentifier_, v1);

  if (v2)
  {
    objc_msgSend(v2, sel_setPresentingViewController_, v0);
    objc_msgSend(v2, sel_present);
    if (qword_1EBB6D840 != -1) {
      swift_once();
    }
    sub_1C23CEB5C(0, 1, 1);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C23C5050(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_1C254CCF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(self, sel_isAppleInternalInstall))
  {
    switch(a1)
    {
      case 0:
        if (qword_1EA2DD970 != -1) {
          swift_once();
        }
        LOBYTE(v32) = byte_1EA2E52D0;
        UserInterfaceMode.toggle()();
        char v31 = (char)v32;
        _s15HealthRecordsUI8FeaturesC7setMode_6notifyyAA013UserInterfaceF0O_SbtFZ_0(&v31, 1);
        unint64_t v8 = swift_bridgeObjectRetain();
        int64_t v9 = sub_1C22E6C84(v8);
        swift_bridgeObjectRelease();
        sub_1C252EF00(6u, v9);
        char v11 = v10;
        swift_bridgeObjectRelease();
        if (v11) {
          return;
        }
        id v12 = objc_msgSend(v2, sel_tableView);
        if (!v12)
        {
          __break(1u);
          JUMPOUT(0x1C23C5408);
        }
        unint64_t v13 = v12;
        sub_1C254CCE0();
        id v14 = (id)sub_1C254CCD0();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        objc_msgSend(v13, sel_reloadSections_withRowAnimation_, v14, 100);

        goto LABEL_11;
      case 1:
        id v25 = *(void **)&v2[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
        id v26 = objc_allocWithZone((Class)type metadata accessor for InternalStateViewController());
        id v27 = v25;
        id v30 = sub_1C225A5A4(v27);

        objc_msgSend(v2, sel_showViewController_sender_, v30, v2);
        goto LABEL_13;
      case 2:
        id v15 = *(void **)&v2[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
        id v16 = objc_allocWithZone((Class)type metadata accessor for InternalSharedItemsViewController());
        id v30 = sub_1C24151C4(v15);
        objc_msgSend(v2, sel_showViewController_sender_, v30, v2);
LABEL_13:
        int v28 = v30;

        return;
      case 3:
        id v17 = *(void **)&v2[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
        type metadata accessor for EntriesDataSource(0);
        swift_allocObject();
        id v18 = v17;
        sub_1C247836C(v18);
        sub_1C23C57D8();
        uint64_t v19 = sub_1C254ED70();
        uint64_t v21 = v20;

        id v32 = v18;
        uint64_t v33 = v19;
        uint64_t v34 = v21;
        sub_1C23C5830();
        id v23 = objc_allocWithZone(v22);
        id v14 = (id)sub_1C254EEB0();
        id v24 = (void *)sub_1C254F430();
        objc_msgSend(v14, sel_setTitle_, v24);

        objc_msgSend(v2, sel_showViewController_sender_, v14, v2);
LABEL_11:

        break;
      default:
        JUMPOUT(0);
    }
  }
}

BOOL SettingsViewController.tableView(_:shouldHighlightRowAt:)()
{
  return sub_1C23C5674();
}

uint64_t sub_1C23C561C()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t block_destroy_helper_41()
{
  return swift_release();
}

BOOL sub_1C23C5674()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts;
  unint64_t v3 = swift_bridgeObjectRetain();
  int64_t v4 = sub_1C22E6C84(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C254CD80();
  if (v5 < 0 || v5 >= *(void *)(v4 + 16))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  int v6 = *(unsigned __int8 *)(v4 + v5 + 32);
  swift_bridgeObjectRelease();
  if (v6)
  {
    if (v6 == 2)
    {
      uint64_t v7 = &OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_appSourceModels;
      goto LABEL_11;
    }
    if (v6 == 3)
    {
      uint64_t v7 = &OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_researchStudySourceModels;
LABEL_11:
      unint64_t v9 = *(void *)(v1 + *v7);
      goto LABEL_12;
    }
    return 1;
  }
  unint64_t v9 = *(void *)(v1 + v2);
LABEL_12:
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  return v10 != 0;
}

void sub_1C23C5780()
{
  if (!qword_1EBB6F230)
  {
    sub_1C224B3D4();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F230);
    }
  }
}

unint64_t sub_1C23C57D8()
{
  unint64_t result = qword_1EA2E28D8;
  if (!qword_1EA2E28D8)
  {
    type metadata accessor for EntriesDataSource(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E28D8);
  }
  return result;
}

void sub_1C23C5830()
{
  if (!qword_1EA2E28E0)
  {
    sub_1C23C588C();
    unint64_t v0 = sub_1C254EEC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E28E0);
    }
  }
}

unint64_t sub_1C23C588C()
{
  unint64_t result = qword_1EA2E28E8;
  if (!qword_1EA2E28E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E28E8);
  }
  return result;
}

uint64_t sub_1C23C58E0(uint64_t a1)
{
  unint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  int v6 = *(void **)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  sub_1C21F4424(v1 + 88, (uint64_t)v15);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 128) = 0;
  *(unsigned char *)(v11 + 136) = 1;
  *(void *)(v11 + 16) = v3;
  *(void *)(v11 + 24) = v4;
  *(void *)(v11 + 32) = v5;
  *(void *)(v11 + 40) = v6;
  *(void *)(v11 + 48) = v7;
  *(void *)(v11 + 56) = v8;
  *(unsigned char *)(v11 + 64) = v9;
  *(void *)(v11 + 72) = v10;
  *(void *)(v11 + 80) = a1;
  sub_1C21F44EC(v15, v11 + 88);
  swift_retain();
  swift_bridgeObjectRetain();
  id v12 = v3;
  id v13 = v6;
  return v11;
}

uint64_t sub_1C23C59D4(uint64_t a1)
{
  unint64_t v3 = (void *)v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  int v6 = (void *)v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  sub_1C21F4424((uint64_t)(v1 + 9), (uint64_t)v13);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 112) = 0;
  *(unsigned char *)(v9 + 120) = 1;
  *(void *)(v9 + 128) = 0;
  *(unsigned char *)(v9 + 136) = 1;
  *(void *)(v9 + 144) = 0;
  *(unsigned char *)(v9 + 152) = 1;
  *(void *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = v4;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v6;
  *(void *)(v9 + 48) = v7;
  *(void *)(v9 + 56) = v8;
  *(void *)(v9 + 64) = a1;
  sub_1C21F44EC(v13, v9 + 72);
  id v10 = v3;
  id v11 = v6;
  swift_bridgeObjectRetain();
  return v9;
}

double sub_1C23C5ABC(void *a1)
{
  uint64_t v2 = v1;
  double v4 = 0.0;
  double v5 = 0.0;
  if ((*(unsigned char *)(v1 + 40) & 1) == 0)
  {
    double v6 = *(double *)(v1 + 32);
    uint64_t v7 = a1[3];
    uint64_t v8 = a1[4];
    __swift_project_boxed_opaque_existential_1Tm(a1, v7);
    double v5 = sub_1C22B3D88(v7, v8, v6);
  }
  unint64_t v9 = *(void *)(v2 + 48);
  MEMORY[0x1F4188790](a1);
  void v19[2] = a1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C22683A8((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1C23CABF8, (uint64_t)v19, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    if (v11 == 1)
    {
      uint64_t v12 = 0;
LABEL_9:
      uint64_t v15 = v11 - v12;
      id v16 = (double *)(v10 + 8 * v12 + 32);
      do
      {
        double v17 = *v16++;
        double v4 = v4 + v17;
        --v15;
      }
      while (v15);
      goto LABEL_11;
    }
    uint64_t v12 = v11 & 0x7FFFFFFFFFFFFFFELL;
    id v13 = (double *)(v10 + 40);
    uint64_t v14 = v11 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v4 = v4 + *(v13 - 1) + *v13;
      v13 += 2;
      v14 -= 2;
    }
    while (v14);
    if (v11 != v12) {
      goto LABEL_9;
    }
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return v5 + v4;
}

double sub_1C23C5C10()
{
  if ((*(unsigned char *)(v0 + 120) & 1) == 0) {
    return *(double *)(v0 + 112);
  }
  sub_1C23C5C48((void *)v0);
  *(double *)(v0 + 112) = result;
  *(unsigned char *)(v0 + 120) = 0;
  return result;
}

void sub_1C23C5C48(void *a1)
{
  unint64_t v2 = a1[8];
  unint64_t v3 = v2 >> 62;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v4 < 0)
    {
      __break(1u);
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4)
  {
    if ((v2 & 0xC000000000000001) == 0
      && (unint64_t)(v4 - 1) >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_retain();
    uint64_t v5 = 0;
    double v6 = 0.0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        MEMORY[0x1C87588E0](v5, v2);
      }
      else {
        swift_retain();
      }
      ++v5;
      double v7 = sub_1C23C5E28();
      swift_release();
      double v6 = v6 + v7;
    }
    while (v4 != v5);
    swift_release();
    if (!v3) {
      goto LABEL_12;
    }
  }
  else if (!v3)
  {
LABEL_12:
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C2550620();
  swift_bridgeObjectRelease();
LABEL_15:
  if (__OFSUB__(v8, 1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v9 = a1[12];
  uint64_t v10 = a1[13];
  __swift_project_boxed_opaque_existential_1Tm(a1 + 9, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 48))(v9, v10);
  if (qword_1EA2DD580 != -1) {
LABEL_21:
  }
    swift_once();
}

double sub_1C23C5E28()
{
  if ((*(unsigned char *)(v0 + 136) & 1) == 0) {
    return *(double *)(v0 + 128);
  }
  sub_1C23C66C8((void *)v0);
  *(double *)(v0 + 128) = result;
  *(unsigned char *)(v0 + 136) = 0;
  return result;
}

uint64_t sub_1C23C5E60()
{
  if (*(unsigned char *)(v0 + 136) != 1) {
    return *(void *)(v0 + 128);
  }
  uint64_t result = sub_1C23C5E9C(v0);
  *(void *)(v0 + 128) = result;
  *(unsigned char *)(v0 + 136) = 0;
  return result;
}

uint64_t sub_1C23C5E9C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1 >> 62) {
    goto LABEL_38;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; uint64_t v2 = sub_1C2550620())
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    unint64_t v23 = v1;
    unint64_t v24 = v1 & 0xC000000000000001;
    unint64_t v21 = v1 + 32;
    uint64_t v22 = v2;
    while (1)
    {
      if (v24)
      {
        uint64_t v5 = MEMORY[0x1C87588E0](v3, v1);
        BOOL v6 = __OFADD__(v3++, 1);
        if (v6) {
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t v5 = *(void *)(v21 + 8 * v3);
        swift_retain();
        BOOL v6 = __OFADD__(v3++, 1);
        if (v6) {
          goto LABEL_35;
        }
      }
      unint64_t v7 = *(void *)(v5 + 80);
      if (v7 >> 62) {
        break;
      }
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v8) {
        goto LABEL_11;
      }
LABEL_29:
      swift_bridgeObjectRelease();
      uint64_t v10 = MEMORY[0x1E4FBC860];
      uint64_t v16 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (v16) {
        goto LABEL_24;
      }
LABEL_30:
      uint64_t v17 = 0;
LABEL_31:
      swift_release();
      swift_bridgeObjectRelease();
      BOOL v6 = __OFADD__(v4, v17);
      v4 += v17;
      if (v6) {
        goto LABEL_36;
      }
      if (v3 == v2) {
        goto LABEL_40;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C2550620();
    if (!v8) {
      goto LABEL_29;
    }
LABEL_11:
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C2274AAC(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      goto LABEL_37;
    }
    uint64_t v9 = 0;
    uint64_t v10 = v25;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        uint64_t v11 = MEMORY[0x1C87588E0](v9, v7);
      }
      else
      {
        uint64_t v11 = *(void *)(v7 + 8 * v9 + 32);
        swift_retain();
      }
      unint64_t v12 = *(void *)(v11 + 48);
      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = sub_1C2550620();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_release();
      }
      unint64_t v15 = *(void *)(v25 + 16);
      unint64_t v14 = *(void *)(v25 + 24);
      if (v15 >= v14 >> 1) {
        sub_1C2274AAC(v14 > 1, v15 + 1, 1);
      }
      ++v9;
      *(void *)(v25 + 16) = v15 + 1;
      *(void *)(v25 + 8 * v15 + 32) = v13;
    }
    while (v8 != v9);
    swift_bridgeObjectRelease();
    uint64_t v2 = v22;
    unint64_t v1 = v23;
    uint64_t v16 = *(void *)(v25 + 16);
    if (!v16) {
      goto LABEL_30;
    }
LABEL_24:
    uint64_t v17 = 0;
    id v18 = (uint64_t *)(v10 + 32);
    while (1)
    {
      uint64_t v19 = *v18++;
      BOOL v6 = __OFADD__(v17, v19);
      v17 += v19;
      if (v6) {
        break;
      }
      if (!--v16) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain_n();
  }
  uint64_t v4 = 0;
LABEL_40:
  swift_bridgeObjectRelease_n();
  return v4;
}

double sub_1C23C615C()
{
  if ((*(unsigned char *)(v0 + 152) & 1) == 0) {
    return *(double *)(v0 + 144);
  }
  sub_1C23C6194(v0);
  *(double *)(v0 + 144) = result;
  *(unsigned char *)(v0 + 152) = 0;
  return result;
}

uint64_t sub_1C23C6194(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v2) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_1C2550620();
  uint64_t v2 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v2 >= 1)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      double v5 = 0.0;
      do
      {
        double v6 = *(double *)(MEMORY[0x1C87588E0](v4, v1) + 24);
        swift_unknownObjectRelease();
        if (v5 <= v6) {
          double v5 = v6;
        }
        ++v4;
      }
      while (v2 != v4);
    }
    else
    {
      unint64_t v7 = (uint64_t *)(v1 + 32);
      double v8 = 0.0;
      do
      {
        uint64_t v9 = *v7++;
        double v10 = *(double *)(v9 + 24);
        if (v8 <= v10) {
          double v8 = v10;
        }
        --v2;
      }
      while (v2);
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C23C628C()
{
  unint64_t v1 = *(void *)(v0 + 64);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  if (!sub_1C2550620()) {
    goto LABEL_19;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) == 0)
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v3 = *(void *)(v1 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    unint64_t v1 = *(void *)(v3 + 80);
    swift_bridgeObjectRetain();
    swift_release();
    if ((v1 & 0x8000000000000000) == 0 && (v1 & 0x4000000000000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_20:
  uint64_t v9 = MEMORY[0x1C87588E0](0, v1);
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v9 + 80);
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  if ((v1 & 0x8000000000000000) == 0 && (v1 & 0x4000000000000000) == 0)
  {
LABEL_7:
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_24;
  }
LABEL_8:
  if ((v1 & 0xC000000000000001) == 0)
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v4 = *(void *)(v1 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    unint64_t v1 = *(void *)(v4 + 48);
    swift_bridgeObjectRetain();
    swift_release();
    if ((v1 & 0x8000000000000000) == 0 && (v1 & 0x4000000000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t v11 = MEMORY[0x1C87588E0](0, v1);
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v11 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  if ((v1 & 0x8000000000000000) == 0 && (v1 & 0x4000000000000000) == 0)
  {
LABEL_12:
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_13;
    }
    goto LABEL_28;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v12)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_29;
  }
LABEL_13:
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_30:
    uint64_t v5 = MEMORY[0x1C87588E0](0, v1);
    goto LABEL_16;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v5 = *(void *)(v1 + 32);
  swift_retain();
LABEL_16:
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(v5 + 16);
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_release();
    return v7;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C2550620();
  swift_release();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1C23C6518()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  return swift_deallocClassInstance();
}

uint64_t _s12SizedSectionCMa()
{
  return self;
}

double sub_1C23C658C()
{
  unint64_t v1 = (void *)v0;
  double v2 = 0.0;
  double v3 = 0.0;
  if ((*(unsigned char *)(v0 + 64) & 1) == 0)
  {
    double v4 = *(double *)(v0 + 56);
    uint64_t v5 = *(void *)(v0 + 112);
    uint64_t v6 = v1[15];
    __swift_project_boxed_opaque_existential_1Tm(v1 + 11, v1[14]);
    double v7 = sub_1C22B3D88(v5, v6, v4);
    uint64_t v8 = v1[14];
    uint64_t v9 = v1[15];
    __swift_project_boxed_opaque_existential_1Tm(v1 + 11, v8);
    double v3 = v7 + (*(double (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
  }
  if (v1[9])
  {
    sub_1C23C667C();
    double v11 = v10;
    uint64_t v12 = v1 + 11;
    uint64_t v14 = v1[14];
    uint64_t v13 = v1[15];
    __swift_project_boxed_opaque_existential_1Tm(v12, v14);
    double v2 = sub_1C22B3D88(v14, v13, v11);
  }
  return v3 + v2;
}

void sub_1C23C667C()
{
  if (*(unsigned char *)(v0 + 56))
  {
    uint64_t v1 = *(void *)(v0 + 32);
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      double v3 = (double *)(v1 + 32);
      double v4 = 0.0;
      do
      {
        double v5 = *v3++;
        double v6 = v5;
        if (v4 <= v5) {
          double v4 = v6;
        }
        --v2;
      }
      while (v2);
    }
    else
    {
      double v4 = 0.0;
    }
    *(double *)(v0 + 48) = v4;
    *(unsigned char *)(v0 + 56) = 0;
  }
}

void sub_1C23C66C8(void *a1)
{
  unint64_t v2 = a1[10];
  swift_retain();
  unint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C23CAC18(v3, a1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    if (v5 == 1)
    {
      uint64_t v6 = 0;
      double v7 = 0.0;
LABEL_8:
      uint64_t v10 = v5 - v6;
      double v11 = (double *)(v4 + 8 * v6 + 32);
      do
      {
        double v12 = *v11++;
        double v7 = v7 + v12;
        --v10;
      }
      while (v10);
      goto LABEL_10;
    }
    uint64_t v6 = v5 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v8 = (double *)(v4 + 40);
    double v7 = 0.0;
    uint64_t v9 = v5 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v7 = v7 + *(v8 - 1) + *v8;
      v8 += 2;
      v9 -= 2;
    }
    while (v9);
    if (v5 != v6) {
      goto LABEL_8;
    }
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!__OFSUB__(v15, 1)) {
      goto LABEL_12;
    }
  }
  else if (!__OFSUB__(*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10), 1))
  {
LABEL_12:
    uint64_t v13 = a1[14];
    uint64_t v14 = a1[15];
    __swift_project_boxed_opaque_existential_1Tm(a1 + 11, v13);
    (*(double (**)(uint64_t, uint64_t))(v14 + 48))(v13, v14);
    sub_1C23C658C();
    return;
  }
  __break(1u);
}

uint64_t sub_1C23C6840()
{
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 88);
  return swift_deallocClassInstance();
}

uint64_t _s11SizedRecordCMa()
{
  return self;
}

void sub_1C23C68BC(void *a1@<X1>, double *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v3);
  sub_1C23C667C();
  *a2 = sub_1C22B3D88(v3, v4, v5);
}

uint64_t sub_1C23C6924()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t _s15SizedValueGroupCMa()
{
  return self;
}

uint64_t sub_1C23C6988(unint64_t a1, double a2)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_1C25505E0();
    __break(1u);
    return result;
  }
  if (!a1) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t result = sub_1C254F780();
  *(void *)(result + 16) = a1;
  uint64_t v4 = (double *)(result + 32);
  if (a1 < 4)
  {
    unint64_t v5 = 0;
    double v6 = a2;
LABEL_9:
    unint64_t v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v5 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v4 += a1 & 0xFFFFFFFFFFFFFFFCLL;
  double v6 = a2;
  int64x2_t v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  uint64_t v8 = (int64x2_t *)(result + 48);
  unint64_t v9 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *uint64_t v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v5 != a1) {
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1C23C6A7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t _s10SizedValueCMa()
{
  return self;
}

uint64_t sub_1C23C6AE8()
{
  return sub_1C23CA7F8(&qword_1EA2E28F0, &qword_1EA2E28F8, MEMORY[0x1E4FBB978]);
}

uint64_t sub_1C23C6B38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  sub_1C23CA0CC();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = 0;
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  *a1 = v4;
  return result;
}

uint64_t sub_1C23C6B98()
{
  return 2;
}

uint64_t sub_1C23C6BA0()
{
  uint64_t v1 = sub_1C23C7550(*v0);
  swift_release();
  return v1;
}

uint64_t sub_1C23C6BD8(void *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C23C7DEC(a1, a2, a3);
}

uint64_t sub_1C23C6BFC()
{
  return sub_1C254F690();
}

uint64_t sub_1C23C6C20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  sub_1C23CA280();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = 0;
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  *a1 = v4;
  return result;
}

uint64_t sub_1C23C6C80()
{
  uint64_t v1 = sub_1C23C72F4(*v0);
  swift_release();
  return v1;
}

uint64_t sub_1C23C6CB8(void *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C23C7BF8(a1, a2, a3);
}

uint64_t sub_1C23C6CDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 48);
  sub_1C23CA434();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = 0;
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  *a1 = v4;
  return result;
}

uint64_t sub_1C23C6D3C()
{
  uint64_t v1 = sub_1C23C77AC(*v0);
  swift_release();
  return v1;
}

uint64_t sub_1C23C6D74(void *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C23C7FE0(a1, a2, a3);
}

uint64_t sub_1C23C6D98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 16);
  sub_1C23CA670();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = 0;
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  *a1 = v4;
  return result;
}

uint64_t sub_1C23C6DF8()
{
  uint64_t v1 = sub_1C23C7098(*v0);
  swift_release();
  return v1;
}

uint64_t sub_1C23C6E30(void *a1, unint64_t a2, uint64_t a3)
{
  return sub_1C23C7A08(a1, a2, a3);
}

uint64_t sub_1C23C6E54()
{
  return sub_1C23C6F68(&qword_1EA2E2908, &qword_1EA2E2910, _s10SizedValueCMa);
}

void sub_1C23C6E90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3();
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C23C6EF0()
{
  return sub_1C23C6F68(&qword_1EA2E2918, &qword_1EA2E2920, _s15SizedValueGroupCMa);
}

uint64_t sub_1C23C6F2C()
{
  return sub_1C23C6F68(&qword_1EA2E2928, &qword_1EA2E2930, _s11SizedRecordCMa);
}

uint64_t sub_1C23C6F68(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C23C6E90(255, a2, a3, MEMORY[0x1E4FBB978]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1C23C6FCC(void *a1)
{
  return sub_1C226DB24(0, a1[2], 0, a1);
}

void *sub_1C23C6FE0(void *a1)
{
  return sub_1C226DDC0(0, a1[2], 0, a1);
}

void *sub_1C23C6FF4(void *a1)
{
  return sub_1C226DEF0(0, a1[2], 0, a1);
}

void sub_1C23C7008(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1C87588F0);
}

uint64_t sub_1C23C7084(unint64_t a1)
{
  return sub_1C226C100(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1C23C7098(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  sub_1C23CA670();
  uint64_t inited = (void *)swift_initStackObject();
  inited[2] = v1;
  inited[3] = 0;
  if (v1 >> 62) {
    goto LABEL_31;
  }
  uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_34;
  }
  while (2)
  {
    id v27 = inited;
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    unint64_t v6 = v1 & 0xC000000000000001;
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    uint64_t inited = (void *)(MEMORY[0x1E4FBC860] + 32);
    unint64_t v28 = v1 & 0xC000000000000001;
    uint64_t v29 = v1 & 0xFFFFFFFFFFFFFF8;
    while (v6)
    {
      id v8 = (id)MEMORY[0x1C87588E0](v5, v1);
      if (!v4) {
        goto LABEL_11;
      }
LABEL_6:
      BOOL v9 = __OFSUB__(v4--, 1);
      if (v9) {
        goto LABEL_28;
      }
LABEL_26:
      ++v5;
      *inited++ = v8;
      if (v3 == v5)
      {
        v27[3] = v3;
        uint64_t result = swift_release();
        goto LABEL_35;
      }
    }
    if (v5 >= *(void *)(v29 + 16)) {
      goto LABEL_29;
    }
    id v8 = *(id *)(v1 + 8 * v5 + 32);
    if (v4) {
      goto LABEL_6;
    }
LABEL_11:
    unint64_t v10 = v7[3];
    if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0) {
      goto LABEL_30;
    }
    unint64_t v11 = v1;
    int64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (v12 <= 1) {
      uint64_t v13 = 1;
    }
    else {
      uint64_t v13 = v12;
    }
    sub_1C21ACA3C();
    uint64_t v14 = (void *)swift_allocObject();
    int64_t v15 = _swift_stdlib_malloc_size(v14);
    uint64_t v16 = v15 - 32;
    if (v15 < 32) {
      uint64_t v16 = v15 - 25;
    }
    uint64_t v17 = v16 >> 3;
    void v14[2] = v13;
    v14[3] = (2 * (v16 >> 3)) | 1;
    unint64_t v18 = (unint64_t)(v14 + 4);
    uint64_t v19 = v7[3] >> 1;
    if (v7[2])
    {
      if (v14 != v7 || v18 >= (unint64_t)&v7[v19 + 4]) {
        memmove(v14 + 4, v7 + 4, 8 * v19);
      }
      id v7[2] = 0;
    }
    uint64_t inited = (void *)(v18 + 8 * v19);
    uint64_t v21 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
    swift_release();
    uint64_t v7 = v14;
    unint64_t v1 = v11;
    unint64_t v6 = v28;
    BOOL v9 = __OFSUB__(v21, 1);
    uint64_t v4 = v21 - 1;
    if (!v9) {
      goto LABEL_26;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (v3 < 1)
      {
        __break(1u);
        break;
      }
      continue;
    }
    break;
  }
LABEL_34:
  uint64_t result = swift_release();
  uint64_t v4 = 0;
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
LABEL_35:
  unint64_t v24 = v7[3];
  if (v24 < 2) {
    return (uint64_t)v7;
  }
  unint64_t v25 = v24 >> 1;
  BOOL v9 = __OFSUB__(v25, v4);
  uint64_t v26 = v25 - v4;
  if (!v9)
  {
    id v7[2] = v26;
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C23C72F4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 80);
  sub_1C23CA280();
  uint64_t inited = (uint64_t *)swift_initStackObject();
  inited[2] = v1;
  inited[3] = 0;
  if (v1 >> 62) {
    goto LABEL_31;
  }
  uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_34;
  }
  while (2)
  {
    id v27 = inited;
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    unint64_t v6 = v1 & 0xC000000000000001;
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    uint64_t inited = (uint64_t *)(MEMORY[0x1E4FBC860] + 32);
    unint64_t v28 = v1 & 0xC000000000000001;
    uint64_t v29 = v1 & 0xFFFFFFFFFFFFFF8;
    while (v6)
    {
      uint64_t v8 = MEMORY[0x1C87588E0](v5, v1);
      if (!v4) {
        goto LABEL_11;
      }
LABEL_6:
      BOOL v9 = __OFSUB__(v4--, 1);
      if (v9) {
        goto LABEL_28;
      }
LABEL_26:
      ++v5;
      *inited++ = v8;
      if (v3 == v5)
      {
        v27[3] = v3;
        uint64_t result = swift_release();
        goto LABEL_35;
      }
    }
    if (v5 >= *(void *)(v29 + 16)) {
      goto LABEL_29;
    }
    uint64_t v8 = *(void *)(v1 + 8 * v5 + 32);
    swift_retain();
    if (v4) {
      goto LABEL_6;
    }
LABEL_11:
    unint64_t v10 = v7[3];
    if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0) {
      goto LABEL_30;
    }
    unint64_t v11 = v1;
    int64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (v12 <= 1) {
      uint64_t v13 = 1;
    }
    else {
      uint64_t v13 = v12;
    }
    sub_1C21ACA3C();
    uint64_t v14 = (void *)swift_allocObject();
    int64_t v15 = _swift_stdlib_malloc_size(v14);
    uint64_t v16 = v15 - 32;
    if (v15 < 32) {
      uint64_t v16 = v15 - 25;
    }
    uint64_t v17 = v16 >> 3;
    void v14[2] = v13;
    v14[3] = (2 * (v16 >> 3)) | 1;
    unint64_t v18 = (unint64_t)(v14 + 4);
    uint64_t v19 = v7[3] >> 1;
    if (v7[2])
    {
      if (v14 != v7 || v18 >= (unint64_t)&v7[v19 + 4]) {
        memmove(v14 + 4, v7 + 4, 8 * v19);
      }
      id v7[2] = 0;
    }
    uint64_t inited = (uint64_t *)(v18 + 8 * v19);
    uint64_t v21 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
    swift_release();
    uint64_t v7 = v14;
    unint64_t v1 = v11;
    unint64_t v6 = v28;
    BOOL v9 = __OFSUB__(v21, 1);
    uint64_t v4 = v21 - 1;
    if (!v9) {
      goto LABEL_26;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (v3 < 1)
      {
        __break(1u);
        break;
      }
      continue;
    }
    break;
  }
LABEL_34:
  uint64_t result = swift_release();
  uint64_t v4 = 0;
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
LABEL_35:
  unint64_t v24 = v7[3];
  if (v24 < 2) {
    return (uint64_t)v7;
  }
  unint64_t v25 = v24 >> 1;
  BOOL v9 = __OFSUB__(v25, v4);
  uint64_t v26 = v25 - v4;
  if (!v9)
  {
    id v7[2] = v26;
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C23C7550(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  sub_1C23CA0CC();
  uint64_t inited = (uint64_t *)swift_initStackObject();
  inited[2] = v1;
  inited[3] = 0;
  if (v1 >> 62) {
    goto LABEL_31;
  }
  uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_34;
  }
  while (2)
  {
    id v27 = inited;
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    unint64_t v6 = v1 & 0xC000000000000001;
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    uint64_t inited = (uint64_t *)(MEMORY[0x1E4FBC860] + 32);
    unint64_t v28 = v1 & 0xC000000000000001;
    uint64_t v29 = v1 & 0xFFFFFFFFFFFFFF8;
    while (v6)
    {
      uint64_t v8 = MEMORY[0x1C87588E0](v5, v1);
      if (!v4) {
        goto LABEL_11;
      }
LABEL_6:
      BOOL v9 = __OFSUB__(v4--, 1);
      if (v9) {
        goto LABEL_28;
      }
LABEL_26:
      ++v5;
      *inited++ = v8;
      if (v3 == v5)
      {
        v27[3] = v3;
        uint64_t result = swift_release();
        goto LABEL_35;
      }
    }
    if (v5 >= *(void *)(v29 + 16)) {
      goto LABEL_29;
    }
    uint64_t v8 = *(void *)(v1 + 8 * v5 + 32);
    swift_retain();
    if (v4) {
      goto LABEL_6;
    }
LABEL_11:
    unint64_t v10 = v7[3];
    if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0) {
      goto LABEL_30;
    }
    unint64_t v11 = v1;
    int64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (v12 <= 1) {
      uint64_t v13 = 1;
    }
    else {
      uint64_t v13 = v12;
    }
    sub_1C21ACA3C();
    uint64_t v14 = (void *)swift_allocObject();
    int64_t v15 = _swift_stdlib_malloc_size(v14);
    uint64_t v16 = v15 - 32;
    if (v15 < 32) {
      uint64_t v16 = v15 - 25;
    }
    uint64_t v17 = v16 >> 3;
    void v14[2] = v13;
    v14[3] = (2 * (v16 >> 3)) | 1;
    unint64_t v18 = (unint64_t)(v14 + 4);
    uint64_t v19 = v7[3] >> 1;
    if (v7[2])
    {
      if (v14 != v7 || v18 >= (unint64_t)&v7[v19 + 4]) {
        memmove(v14 + 4, v7 + 4, 8 * v19);
      }
      id v7[2] = 0;
    }
    uint64_t inited = (uint64_t *)(v18 + 8 * v19);
    uint64_t v21 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
    swift_release();
    uint64_t v7 = v14;
    unint64_t v1 = v11;
    unint64_t v6 = v28;
    BOOL v9 = __OFSUB__(v21, 1);
    uint64_t v4 = v21 - 1;
    if (!v9) {
      goto LABEL_26;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (v3 < 1)
      {
        __break(1u);
        break;
      }
      continue;
    }
    break;
  }
LABEL_34:
  uint64_t result = swift_release();
  uint64_t v4 = 0;
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
LABEL_35:
  unint64_t v24 = v7[3];
  if (v24 < 2) {
    return (uint64_t)v7;
  }
  unint64_t v25 = v24 >> 1;
  BOOL v9 = __OFSUB__(v25, v4);
  uint64_t v26 = v25 - v4;
  if (!v9)
  {
    id v7[2] = v26;
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C23C77AC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 48);
  sub_1C23CA434();
  uint64_t inited = (uint64_t *)swift_initStackObject();
  inited[2] = v1;
  inited[3] = 0;
  if (v1 >> 62) {
    goto LABEL_31;
  }
  uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_34;
  }
  while (2)
  {
    id v27 = inited;
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    unint64_t v6 = v1 & 0xC000000000000001;
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    uint64_t inited = (uint64_t *)(MEMORY[0x1E4FBC860] + 32);
    unint64_t v28 = v1 & 0xC000000000000001;
    uint64_t v29 = v1 & 0xFFFFFFFFFFFFFF8;
    while (v6)
    {
      uint64_t v8 = MEMORY[0x1C87588E0](v5, v1);
      if (!v4) {
        goto LABEL_11;
      }
LABEL_6:
      BOOL v9 = __OFSUB__(v4--, 1);
      if (v9) {
        goto LABEL_28;
      }
LABEL_26:
      ++v5;
      *inited++ = v8;
      if (v3 == v5)
      {
        v27[3] = v3;
        uint64_t result = swift_release();
        goto LABEL_35;
      }
    }
    if (v5 >= *(void *)(v29 + 16)) {
      goto LABEL_29;
    }
    uint64_t v8 = *(void *)(v1 + 8 * v5 + 32);
    swift_retain();
    if (v4) {
      goto LABEL_6;
    }
LABEL_11:
    unint64_t v10 = v7[3];
    if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0) {
      goto LABEL_30;
    }
    unint64_t v11 = v1;
    int64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if (v12 <= 1) {
      uint64_t v13 = 1;
    }
    else {
      uint64_t v13 = v12;
    }
    sub_1C21ACA3C();
    uint64_t v14 = (void *)swift_allocObject();
    int64_t v15 = _swift_stdlib_malloc_size(v14);
    uint64_t v16 = v15 - 32;
    if (v15 < 32) {
      uint64_t v16 = v15 - 25;
    }
    uint64_t v17 = v16 >> 3;
    void v14[2] = v13;
    v14[3] = (2 * (v16 >> 3)) | 1;
    unint64_t v18 = (unint64_t)(v14 + 4);
    uint64_t v19 = v7[3] >> 1;
    if (v7[2])
    {
      if (v14 != v7 || v18 >= (unint64_t)&v7[v19 + 4]) {
        memmove(v14 + 4, v7 + 4, 8 * v19);
      }
      id v7[2] = 0;
    }
    uint64_t inited = (uint64_t *)(v18 + 8 * v19);
    uint64_t v21 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
    swift_release();
    uint64_t v7 = v14;
    unint64_t v1 = v11;
    unint64_t v6 = v28;
    BOOL v9 = __OFSUB__(v21, 1);
    uint64_t v4 = v21 - 1;
    if (!v9) {
      goto LABEL_26;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (v3 < 1)
      {
        __break(1u);
        break;
      }
      continue;
    }
    break;
  }
LABEL_34:
  uint64_t result = swift_release();
  uint64_t v4 = 0;
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
LABEL_35:
  unint64_t v24 = v7[3];
  if (v24 < 2) {
    return (uint64_t)v7;
  }
  unint64_t v25 = v24 >> 1;
  BOOL v9 = __OFSUB__(v25, v4);
  uint64_t v26 = v25 - v4;
  if (!v9)
  {
    id v7[2] = v26;
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C23C7A08(void *a1, unint64_t a2, uint64_t a3)
{
  unint64_t v8 = *(void *)(v3 + 16);
  sub_1C23CA670();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = 0;
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  if (a2 && a3)
  {
    if (a3 < 0) {
      goto LABEL_30;
    }
    unint64_t v4 = v8 >> 62;
    if (v8 >> 62) {
      goto LABEL_31;
    }
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      do
      {
        if ((v8 & 0xC000000000000001) != 0)
        {
          id v11 = (id)MEMORY[0x1C87588E0](0, v8);
        }
        else
        {
          if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          id v11 = *(id *)(v8 + 32);
        }
        id v12 = v11;
        uint64_t result = 1;
        *(void *)(v9 + 24) = 1;
        *(void *)a2 = v12;
        uint64_t v13 = (char *)(a3 - 1);
        if (a3 == 1) {
          goto LABEL_33;
        }
        uint64_t v19 = a3;
        uint64_t v20 = a1;
        uint64_t v14 = 0;
        a1 = (void *)(v8 & 0xFFFFFFFFFFFFFF8);
        a3 = a2 + 8;
        while (v13 != v14)
        {
          if (v4)
          {
            swift_bridgeObjectRetain();
            uint64_t v15 = sub_1C2550620();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v15 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          a2 = (unint64_t)(v14 + 1);
          if (v14 + 1 == (char *)v15) {
            goto LABEL_25;
          }
          if ((v8 & 0xC000000000000001) != 0)
          {
            id v16 = (id)MEMORY[0x1C87588E0](v14 + 1, v8);
            uint64_t v17 = v14 + 2;
            if (__OFADD__(a2, 1))
            {
LABEL_24:
              __break(1u);
LABEL_25:
              uint64_t result = (uint64_t)(v14 + 1);
LABEL_26:
              a1 = v20;
              goto LABEL_33;
            }
          }
          else
          {
            if ((a2 & 0x8000000000000000) != 0) {
              goto LABEL_28;
            }
            if (a2 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_29;
            }
            id v16 = *(id *)(v8 + 8 * (void)v14 + 40);
            uint64_t v17 = v14 + 2;
            if (__OFADD__(a2, 1)) {
              goto LABEL_24;
            }
          }
          *(void *)(v9 + 24) = v17;
          *(void *)(a3 + 8 * (void)v14++) = v16;
          if (v13 == v14)
          {
            uint64_t result = v19;
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_1C2550620();
        uint64_t result = swift_bridgeObjectRelease();
      }
      while (v18);
    }
  }
  uint64_t result = 0;
LABEL_33:
  *a1 = v9;
  return result;
}

uint64_t sub_1C23C7BF8(void *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v8 = *(void *)(v3 + 80);
  sub_1C23CA280();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = 0;
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  if (a2 && a3)
  {
    if (a3 < 0) {
      goto LABEL_30;
    }
    unint64_t v4 = v8 >> 62;
    if (v8 >> 62) {
      goto LABEL_31;
    }
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      do
      {
        if ((v8 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = MEMORY[0x1C87588E0](0, v8);
        }
        else
        {
          if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          uint64_t v11 = *(void *)(v8 + 32);
          swift_retain();
        }
        uint64_t result = 1;
        *(void *)(v9 + 24) = 1;
        *a2 = v11;
        id v12 = (char *)(a3 - 1);
        if (a3 == 1) {
          goto LABEL_33;
        }
        uint64_t v18 = a3;
        uint64_t v19 = a1;
        uint64_t v13 = 0;
        a1 = (void *)(v8 & 0xFFFFFFFFFFFFFF8);
        a3 = (uint64_t)(a2 + 1);
        while (v12 != (char *)v13)
        {
          if (v4)
          {
            swift_bridgeObjectRetain();
            uint64_t v14 = sub_1C2550620();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v14 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          a2 = (uint64_t *)(v13 + 1);
          if (v13 + 1 == v14) {
            goto LABEL_25;
          }
          if ((v8 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = MEMORY[0x1C87588E0](v13 + 1, v8);
            uint64_t v16 = v13 + 2;
            if (__OFADD__(a2, 1))
            {
LABEL_24:
              __break(1u);
LABEL_25:
              uint64_t result = v13 + 1;
LABEL_26:
              a1 = v19;
              goto LABEL_33;
            }
          }
          else
          {
            if (((unint64_t)a2 & 0x8000000000000000) != 0) {
              goto LABEL_28;
            }
            if ((unint64_t)a2 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_29;
            }
            uint64_t v15 = swift_retain();
            uint64_t v16 = v13 + 2;
            if (__OFADD__(a2, 1)) {
              goto LABEL_24;
            }
          }
          *(void *)(v9 + 24) = v16;
          *(void *)(a3 + 8 * v13++) = v15;
          if (v12 == (char *)v13)
          {
            uint64_t result = v18;
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_1C2550620();
        uint64_t result = swift_bridgeObjectRelease();
      }
      while (v17);
    }
  }
  uint64_t result = 0;
LABEL_33:
  *a1 = v9;
  return result;
}

uint64_t sub_1C23C7DEC(void *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v8 = *(void *)(v3 + 64);
  sub_1C23CA0CC();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = 0;
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  if (a2 && a3)
  {
    if (a3 < 0) {
      goto LABEL_30;
    }
    unint64_t v4 = v8 >> 62;
    if (v8 >> 62) {
      goto LABEL_31;
    }
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      do
      {
        if ((v8 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = MEMORY[0x1C87588E0](0, v8);
        }
        else
        {
          if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          uint64_t v11 = *(void *)(v8 + 32);
          swift_retain();
        }
        uint64_t result = 1;
        *(void *)(v9 + 24) = 1;
        *a2 = v11;
        id v12 = (char *)(a3 - 1);
        if (a3 == 1) {
          goto LABEL_33;
        }
        uint64_t v18 = a3;
        uint64_t v19 = a1;
        uint64_t v13 = 0;
        a1 = (void *)(v8 & 0xFFFFFFFFFFFFFF8);
        a3 = (uint64_t)(a2 + 1);
        while (v12 != (char *)v13)
        {
          if (v4)
          {
            swift_bridgeObjectRetain();
            uint64_t v14 = sub_1C2550620();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v14 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          a2 = (uint64_t *)(v13 + 1);
          if (v13 + 1 == v14) {
            goto LABEL_25;
          }
          if ((v8 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = MEMORY[0x1C87588E0](v13 + 1, v8);
            uint64_t v16 = v13 + 2;
            if (__OFADD__(a2, 1))
            {
LABEL_24:
              __break(1u);
LABEL_25:
              uint64_t result = v13 + 1;
LABEL_26:
              a1 = v19;
              goto LABEL_33;
            }
          }
          else
          {
            if (((unint64_t)a2 & 0x8000000000000000) != 0) {
              goto LABEL_28;
            }
            if ((unint64_t)a2 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_29;
            }
            uint64_t v15 = swift_retain();
            uint64_t v16 = v13 + 2;
            if (__OFADD__(a2, 1)) {
              goto LABEL_24;
            }
          }
          *(void *)(v9 + 24) = v16;
          *(void *)(a3 + 8 * v13++) = v15;
          if (v12 == (char *)v13)
          {
            uint64_t result = v18;
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_1C2550620();
        uint64_t result = swift_bridgeObjectRelease();
      }
      while (v17);
    }
  }
  uint64_t result = 0;
LABEL_33:
  *a1 = v9;
  return result;
}

uint64_t sub_1C23C7FE0(void *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v8 = *(void *)(v3 + 48);
  sub_1C23CA434();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = 0;
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  if (a2 && a3)
  {
    if (a3 < 0) {
      goto LABEL_30;
    }
    unint64_t v4 = v8 >> 62;
    if (v8 >> 62) {
      goto LABEL_31;
    }
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      do
      {
        if ((v8 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = MEMORY[0x1C87588E0](0, v8);
        }
        else
        {
          if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          uint64_t v11 = *(void *)(v8 + 32);
          swift_retain();
        }
        uint64_t result = 1;
        *(void *)(v9 + 24) = 1;
        *a2 = v11;
        id v12 = (char *)(a3 - 1);
        if (a3 == 1) {
          goto LABEL_33;
        }
        uint64_t v18 = a3;
        uint64_t v19 = a1;
        uint64_t v13 = 0;
        a1 = (void *)(v8 & 0xFFFFFFFFFFFFFF8);
        a3 = (uint64_t)(a2 + 1);
        while (v12 != (char *)v13)
        {
          if (v4)
          {
            swift_bridgeObjectRetain();
            uint64_t v14 = sub_1C2550620();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v14 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          a2 = (uint64_t *)(v13 + 1);
          if (v13 + 1 == v14) {
            goto LABEL_25;
          }
          if ((v8 & 0xC000000000000001) != 0)
          {
            uint64_t v15 = MEMORY[0x1C87588E0](v13 + 1, v8);
            uint64_t v16 = v13 + 2;
            if (__OFADD__(a2, 1))
            {
LABEL_24:
              __break(1u);
LABEL_25:
              uint64_t result = v13 + 1;
LABEL_26:
              a1 = v19;
              goto LABEL_33;
            }
          }
          else
          {
            if (((unint64_t)a2 & 0x8000000000000000) != 0) {
              goto LABEL_28;
            }
            if ((unint64_t)a2 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_29;
            }
            uint64_t v15 = swift_retain();
            uint64_t v16 = v13 + 2;
            if (__OFADD__(a2, 1)) {
              goto LABEL_24;
            }
          }
          *(void *)(v9 + 24) = v16;
          *(void *)(a3 + 8 * v13++) = v15;
          if (v12 == (char *)v13)
          {
            uint64_t result = v18;
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_1C2550620();
        uint64_t result = swift_bridgeObjectRelease();
      }
      while (v17);
    }
  }
  uint64_t result = 0;
LABEL_33:
  *a1 = v9;
  return result;
}

uint64_t sub_1C23C81D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8 - 8);
  id v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v34 = a4;
  uint64_t v17 = a4 + 56;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  if (-v31 < 64) {
    uint64_t v18 = ~(-1 << -(char)v31);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v28 = ~v31;
    *a1 = v34;
    a1[1] = v17;
    a1[2] = v28;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  id v30 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v32 = v17;
  int64_t v33 = (unint64_t)(63 - v31) >> 6;
  int64_t v29 = v33 - 1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v27 = *(void *)(v9 + 72);
    sub_1C23CAE7C(*(void *)(v34 + 48) + v27 * v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1C23CAEE4((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    uint64_t result = sub_1C23CAEE4((uint64_t)v15, a2, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    if (v21 == a3) {
      goto LABEL_33;
    }
    a2 += v27;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      a3 = v21;
LABEL_33:
      a1 = v30;
      uint64_t v17 = v32;
      goto LABEL_34;
    }
    uint64_t v17 = v32;
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    if (!v25) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  v20 += 2;
  if (v24 + 1 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24;
LABEL_39:
    a3 = v21;
    a1 = v30;
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v24 + 2;
  if (v24 + 2 >= v33) {
    goto LABEL_36;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_17;
  }
  int64_t v20 = v24 + 3;
  if (v24 + 3 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24 + 2;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25)
  {
LABEL_14:
    int64_t v24 = v20;
    goto LABEL_18;
  }
  int64_t v26 = v24 + 4;
  if (v24 + 4 >= v33)
  {
LABEL_36:
    unint64_t v19 = 0;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25)
  {
LABEL_17:
    int64_t v24 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      int64_t v20 = v29;
      goto LABEL_39;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1C23C84F8(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 56);
  uint64_t v4 = a4 + 56;
  uint64_t v5 = v6;
  uint64_t v33 = v4;
  uint64_t v7 = -1 << *(unsigned char *)(v4 - 24);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & v5;
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v33;
    result[2] = ~v7;
    result[3] = v12;
    result[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  uint64_t v30 = -1 << *(unsigned char *)(v4 - 24);
  uint64_t v31 = result;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v32 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v15 = v14 | (v12 << 6);
  while (1)
  {
    uint64_t v19 = *(void *)(a4 + 48) + 72 * v15;
    ++v13;
    uint64_t v21 = *(void **)(v19 + 8);
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 40);
    uint64_t v22 = *(void *)(v19 + 48);
    uint64_t v25 = *(void *)(v19 + 56);
    int64_t v24 = *(void **)(v19 + 64);
    long long v26 = *(_OWORD *)(v19 + 24);
    *(unsigned char *)uint64_t v11 = *(unsigned char *)v19;
    *(void *)(v11 + 8) = v21;
    *(void *)(v11 + 16) = v20;
    *(_OWORD *)(v11 + 24) = v26;
    *(void *)(v11 + 40) = v23;
    *(void *)(v11 + 48) = v22;
    *(void *)(v11 + 56) = v25;
    *(void *)(v11 + 64) = v24;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v28 = v24;
      id v29 = v21;
      goto LABEL_38;
    }
    v11 += 72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v27 = v24;
    uint64_t result = v21;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v16 >= v32) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v33 + 8 * v16);
    if (!v17)
    {
      v12 += 2;
      if (v16 + 1 >= v32)
      {
        unint64_t v9 = 0;
        int64_t v12 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v33 + 8 * v12);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v33 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v12 = v16 + 3;
        if (v16 + 3 < v32)
        {
          unint64_t v17 = *(void *)(v33 + 8 * v12);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v12;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v32)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v33 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v32)
              {
                unint64_t v9 = 0;
                int64_t v12 = v32 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v33 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v16 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v30;
      uint64_t result = v31;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v12 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C23C87AC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C23C89AC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1C23C8BA8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C23C912C(a1, a2, a3, a4, &qword_1EA2E0010, 0x1E4F2B560, &qword_1EA2E0018);
}

uint64_t sub_1C23C8BC4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C254E220();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  id v42 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v10);
  id v41 = (char *)&v32 - v13;
  uint64_t v43 = a4;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v15 = a4 + 56;
  uint64_t v14 = v16;
  uint64_t v37 = v15;
  uint64_t v17 = -1 << *(unsigned char *)(v15 - 24);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v14;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v31 = v37;
    *a1 = v43;
    a1[1] = v31;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v34 = -1 << *(unsigned char *)(v15 - 24);
  uint64_t v35 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v38 = v9 + 32;
  uint64_t v39 = v9 + 16;
  int64_t v36 = (unint64_t)(63 - v17) >> 6;
  int64_t v33 = v36 - 1;
  uint64_t v40 = a3;
  uint64_t v22 = v41;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v24 = v23 | (v20 << 6);
  while (1)
  {
    ++v21;
    id v28 = v42;
    uint64_t v29 = *(void *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v42, *(void *)(v43 + 48) + v29 * v24, v8);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v22, v28, v8);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v8);
    a3 = v40;
    if (v21 == v40) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v25 >= v36) {
      goto LABEL_32;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v20 = v25;
  }
  v20 += 2;
  if (v25 + 1 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v36) {
    goto LABEL_32;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v20 = v25 + 3;
  if (v25 + 3 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25 + 2;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v20;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v36)
  {
LABEL_32:
    unint64_t v19 = 0;
LABEL_36:
    a3 = v21;
LABEL_37:
    uint64_t v17 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v36)
    {
      unint64_t v19 = 0;
      int64_t v20 = v33;
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C23C8F0C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    *(unsigned char *)uint64_t v11 = *(unsigned char *)(*(void *)(a4 + 48) + v16);
    *(void *)(v11 + 8) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 16;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1C23C9110(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C23C912C(a1, a2, a3, a4, (unint64_t *)&qword_1EA2E1530, 0x1E4F67708, &qword_1EA2DF698);
}

void *sub_1C23C912C(void *result, void *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7 = a4;
  unint64_t v9 = a2;
  uint64_t v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1C2550250();
    sub_1C21AB51C(0, a5);
    sub_1C21A818C(a7, a5);
    uint64_t result = (void *)sub_1C254F940();
    uint64_t v7 = v33;
    uint64_t v12 = v34;
    uint64_t v13 = v35;
    int64_t v14 = v36;
    unint64_t v15 = v37;
    if (v9) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v16 = 0;
    goto LABEL_38;
  }
  int64_t v14 = 0;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v12 = a4 + 56;
  uint64_t v13 = ~v24;
  uint64_t v25 = -v24;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v15 = v26 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v16 = 0;
LABEL_38:
    int64_t v27 = v29;
LABEL_41:
    *int64_t v27 = v7;
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (void *)v16;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v16 = 0;
  int64_t v30 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_1C25502D0()) {
        goto LABEL_40;
      }
      sub_1C21AB51C(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v19 = v32;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v32) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    int64_t v20 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v20 >= v30)
    {
      unint64_t v15 = 0;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v20);
    if (v21) {
      goto LABEL_23;
    }
    int64_t v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      unint64_t v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30) {
        goto LABEL_44;
      }
      unint64_t v21 = *(void *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        int64_t v20 = v14 + 3;
        goto LABEL_23;
      }
      int64_t v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        unint64_t v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (!v21)
      {
        int64_t v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          unint64_t v15 = 0;
          int64_t v14 = v22;
          goto LABEL_40;
        }
        unint64_t v21 = *(void *)(v12 + 8 * v20);
        if (!v21)
        {
          int64_t v23 = v14 + 6;
          while (v30 != v23)
          {
            unint64_t v21 = *(void *)(v12 + 8 * v23++);
            if (v21)
            {
              int64_t v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v15 = 0;
          int64_t v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v20 = v22;
LABEL_23:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v14 = v20;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v7 + 48) + 8 * v18);
    id v19 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      uint64_t v16 = a3;
LABEL_40:
      uint64_t v13 = v28;
      int64_t v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1C23C9428(uint64_t result, int64_t *a2, uint64_t a3, uint64_t a4, int64_t a5)
{
  if (!a2)
  {
    int64_t v7 = 0;
    a3 = 0;
    BOOL v5 = 1;
    goto LABEL_22;
  }
  BOOL v5 = a3 == 0;
  if (!a3)
  {
    int64_t v7 = 0;
    goto LABEL_22;
  }
  if (a3 < 0) {
    goto LABEL_25;
  }
  unint64_t v6 = a5 - a4;
  if (a5 >= a4)
  {
    *a2 = a5;
    if (a3 == 1)
    {
      BOOL v5 = 0;
      int64_t v7 = a5;
LABEL_22:
      *(void *)uint64_t result = a4;
      *(void *)(result + 8) = a5;
      *(void *)(result + 16) = v7;
      *(unsigned char *)(result + 24) = v5;
      return a3;
    }
    if (a3 - 2 < v6) {
      unint64_t v6 = a3 - 2;
    }
    unint64_t v8 = v6 + 1;
    if (v8 > 4)
    {
      uint64_t v11 = v8 & 3;
      if ((v8 & 3) == 0) {
        uint64_t v11 = 4;
      }
      unint64_t v12 = v8 - v11;
      int64_t v7 = a5 - (v8 - v11);
      uint64_t v9 = v12 + 1;
      uint64_t v10 = &a2[v12];
      int64x2_t v13 = vaddq_s64(vdupq_n_s64(a5), (int64x2_t)xmmword_1C2567E00);
      int64_t v14 = (int64x2_t *)(a2 + 3);
      v15.i64[0] = -1;
      v15.i64[1] = -1;
      int64x2_t v16 = vdupq_n_s64(0xFFFFFFFFFFFFFFFDLL);
      int64x2_t v17 = vdupq_n_s64(0xFFFFFFFFFFFFFFFCLL);
      do
      {
        v14[-1] = vaddq_s64(v13, v15);
        *int64_t v14 = vaddq_s64(v13, v16);
        int64x2_t v13 = vaddq_s64(v13, v17);
        v14 += 2;
        v12 -= 4;
      }
      while (v12);
    }
    else
    {
      uint64_t v9 = 1;
      int64_t v7 = a5;
      uint64_t v10 = a2;
    }
    unint64_t v18 = v10 + 1;
    while (1)
    {
      if (a4 == v7)
      {
        BOOL v5 = 0;
        int64_t v7 = a4;
        a3 = v9;
        goto LABEL_22;
      }
      if (v7 <= a4) {
        break;
      }
      ++v9;
      *v18++ = --v7;
      if (a3 == v9)
      {
        BOOL v5 = 0;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C23C9558(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  BOOL v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1C23C9754(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C22853B0();
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = *(void *)(a4 + 64);
  uint64_t v34 = a4 + 64;
  uint64_t v15 = -1 << *(unsigned char *)(a4 + 32);
  if (-v15 < 64) {
    uint64_t v16 = ~(-1 << -(char)v15);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
LABEL_38:
    uint64_t v28 = v34;
    *a1 = a4;
    a1[1] = v28;
    a1[2] = ~v15;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v32 = a1;
  int64_t v18 = 0;
  uint64_t v19 = 0;
  int64_t v33 = (unint64_t)(63 - v15) >> 6;
  int64_t v30 = v33 - 1;
  uint64_t v20 = a3;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v22 = v21 | (v18 << 6);
  while (1)
  {
    ++v19;
    uint64_t v26 = *(void *)(a4 + 48);
    uint64_t v27 = type metadata accessor for BrowseCategory();
    sub_1C23CAE7C(v26 + *(void *)(*(void *)(v27 - 8) + 72) * v22, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    *(void *)&v10[*(int *)(v36 + 48)] = *(void *)(*(void *)(a4 + 56) + 8 * v22);
    sub_1C23CAEE4((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(void))sub_1C22853B0);
    sub_1C23CAEE4((uint64_t)v13, a2, (uint64_t (*)(void))sub_1C22853B0);
    if (v19 == v20) {
      goto LABEL_37;
    }
    a2 += *(void *)(v35 + 72);
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v23 >= v33) {
      goto LABEL_33;
    }
    unint64_t v24 = *(void *)(v34 + 8 * v23);
    if (!v24) {
      break;
    }
LABEL_18:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v18 = v23;
  }
  v18 += 2;
  if (v23 + 1 >= v33)
  {
    unint64_t v17 = 0;
    int64_t v18 = v23;
    goto LABEL_37;
  }
  unint64_t v24 = *(void *)(v34 + 8 * v18);
  if (v24) {
    goto LABEL_14;
  }
  int64_t v25 = v23 + 2;
  if (v23 + 2 >= v33) {
    goto LABEL_33;
  }
  unint64_t v24 = *(void *)(v34 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v18 = v23 + 3;
  if (v23 + 3 >= v33)
  {
    unint64_t v17 = 0;
    int64_t v18 = v23 + 2;
    goto LABEL_37;
  }
  unint64_t v24 = *(void *)(v34 + 8 * v18);
  if (v24)
  {
LABEL_14:
    int64_t v23 = v18;
    goto LABEL_18;
  }
  int64_t v25 = v23 + 4;
  if (v23 + 4 >= v33)
  {
LABEL_33:
    unint64_t v17 = 0;
LABEL_37:
    uint64_t v15 = v31;
    a1 = v32;
    goto LABEL_38;
  }
  unint64_t v24 = *(void *)(v34 + 8 * v25);
  if (v24)
  {
LABEL_17:
    int64_t v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v33)
    {
      unint64_t v17 = 0;
      int64_t v18 = v30;
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v34 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
}

void *sub_1C23C9AAC(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  BOOL v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void **)(*(void *)(a4 + 56) + 8 * v16);
    *uint64_t v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C23C9CA8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  BOOL v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C23C9EA8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  BOOL v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    void *v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v27 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = 16 * v16;
    uint64_t v21 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    unint64_t v24 = (uint64_t *)(*(void *)(a4 + 56) + v20);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    *uint64_t v11 = v23;
    v11[1] = v22;
    v11[2] = v25;
    v11[3] = v26;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 4;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v27;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void sub_1C23CA0CC()
{
  if (!qword_1EA2E2938)
  {
    sub_1C23CA4D0(255, &qword_1EA2E2940, &qword_1EA2DFB50, _s11SizedRecordCMa, (void (*)(void))sub_1C23CA168);
    sub_1C23CA1F0();
    unint64_t v0 = sub_1C25503F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2938);
    }
  }
}

unint64_t sub_1C23CA168()
{
  unint64_t result = qword_1EA2DFB58;
  if (!qword_1EA2DFB58)
  {
    sub_1C23C6E90(255, &qword_1EA2DFB50, _s11SizedRecordCMa, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DFB58);
  }
  return result;
}

unint64_t sub_1C23CA1F0()
{
  unint64_t result = qword_1EA2E2948;
  if (!qword_1EA2E2948)
  {
    sub_1C23CA4D0(255, &qword_1EA2E2940, &qword_1EA2DFB50, _s11SizedRecordCMa, (void (*)(void))sub_1C23CA168);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2948);
  }
  return result;
}

void sub_1C23CA280()
{
  if (!qword_1EA2E2950)
  {
    sub_1C23CA4D0(255, &qword_1EA2E2958, &qword_1EA2DFB60, _s15SizedValueGroupCMa, (void (*)(void))sub_1C23CA31C);
    sub_1C23CA3A4();
    unint64_t v0 = sub_1C25503F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2950);
    }
  }
}

unint64_t sub_1C23CA31C()
{
  unint64_t result = qword_1EA2DFB68;
  if (!qword_1EA2DFB68)
  {
    sub_1C23C6E90(255, &qword_1EA2DFB60, _s15SizedValueGroupCMa, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DFB68);
  }
  return result;
}

unint64_t sub_1C23CA3A4()
{
  unint64_t result = qword_1EA2E2960;
  if (!qword_1EA2E2960)
  {
    sub_1C23CA4D0(255, &qword_1EA2E2958, &qword_1EA2DFB60, _s15SizedValueGroupCMa, (void (*)(void))sub_1C23CA31C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2960);
  }
  return result;
}

void sub_1C23CA434()
{
  if (!qword_1EA2E2968)
  {
    sub_1C23CA4D0(255, &qword_1EA2E2970, &qword_1EA2DFB30, _s10SizedValueCMa, (void (*)(void))sub_1C23CA558);
    sub_1C23CA5E0();
    unint64_t v0 = sub_1C25503F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2968);
    }
  }
}

void sub_1C23CA4D0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), void (*a5)(void))
{
  if (!*a2)
  {
    sub_1C23C6E90(255, a3, a4, MEMORY[0x1E4FBB320]);
    a5();
    unint64_t v7 = sub_1C2550500();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C23CA558()
{
  unint64_t result = qword_1EA2DFB38;
  if (!qword_1EA2DFB38)
  {
    sub_1C23C6E90(255, &qword_1EA2DFB30, _s10SizedValueCMa, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DFB38);
  }
  return result;
}

unint64_t sub_1C23CA5E0()
{
  unint64_t result = qword_1EA2E2978;
  if (!qword_1EA2E2978)
  {
    sub_1C23CA4D0(255, &qword_1EA2E2970, &qword_1EA2DFB30, _s10SizedValueCMa, (void (*)(void))sub_1C23CA558);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2978);
  }
  return result;
}

void sub_1C23CA670()
{
  if (!qword_1EA2E2980)
  {
    sub_1C23CA6D4();
    sub_1C23CA83C();
    unint64_t v0 = sub_1C25503F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2980);
    }
  }
}

void sub_1C23CA6D4()
{
  if (!qword_1EA2E2988)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
    sub_1C23CA788(255, &qword_1EA2E2990, MEMORY[0x1E4FBB320]);
    sub_1C23CA7F8(&qword_1EA2E2998, &qword_1EA2E2990, v0);
    unint64_t v1 = sub_1C2550500();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E2988);
    }
  }
}

void sub_1C23CA788(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C21AB51C(255, (unint64_t *)&qword_1EA2E2900);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C23CA7F8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C23CA788(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C23CA83C()
{
  unint64_t result = qword_1EA2E29A0;
  if (!qword_1EA2E29A0)
  {
    sub_1C23CA6D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E29A0);
  }
  return result;
}

uint64_t sub_1C23CA894(void *a1, uint64_t a2, char a3, double a4)
{
  unint64_t v7 = *(void *)(*(void *)(v4 + 32) + 16);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C23C6988(v7, 0.0);
  unint64_t v9 = (void *)result;
  uint64_t v33 = v4;
  unint64_t v10 = *(void *)(v4 + 16);
  if (v10 >> 62) {
    goto LABEL_46;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v11)
    {
LABEL_39:
      char v31 = *(unsigned char *)(v33 + 40);
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 48) = 0;
      *(unsigned char *)(v32 + 56) = 1;
      *(void *)(v32 + 16) = v10;
      *(void *)(v32 + 24) = a1;
      *(void *)(v32 + 32) = v9;
      *(unsigned char *)(v32 + 40) = v31;
      swift_bridgeObjectRetain();
      return v32;
    }
    unint64_t v12 = v10 & 0xC000000000000001;
    if ((v10 & 0xC000000000000001) == 0
      && (unint64_t)(v11 - 1) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      break;
    }
    unint64_t v13 = 0;
    unint64_t v14 = v10 + 32;
    while (1)
    {
      if (v12) {
        id v16 = (id)MEMORY[0x1C87588E0](v13, v10);
      }
      else {
        id v16 = *(id *)(v14 + 8 * v13);
      }
      int64_t v17 = v16;
      id v18 = objc_msgSend(v16, sel_string);

      uint64_t v19 = sub_1C254F470();
      unint64_t v21 = v20;

      swift_bridgeObjectRelease();
      uint64_t v22 = HIBYTE(v21) & 0xF;
      if ((v21 & 0x2000000000000000) == 0) {
        uint64_t v22 = v19 & 0xFFFFFFFFFFFFLL;
      }
      if (!v22)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          a1 = sub_1C23C6FCC(a1);
        }
        if (v13 >= a1[2]) {
          goto LABEL_43;
        }
        a1[v13 + 4] = 0;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v9 = sub_1C23C6FCC(v9);
        }
        double v15 = 0.0;
        if (v13 >= v9[2]) {
          goto LABEL_44;
        }
        goto LABEL_8;
      }
      if (v13 >= a1[2]) {
        break;
      }
      double v23 = 0.0;
      if ((a3 & 1) == 0 && a2 == v13)
      {
        if (*(unsigned char *)(v33 + 40)) {
          double v23 = a4;
        }
        else {
          double v23 = 0.0;
        }
      }
      double v24 = *(double *)&a1[v13 + 4];
      if (v12)
      {
        id v25 = (id)MEMORY[0x1C87588E0](v13, v10);
      }
      else
      {
        if (v13 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_45;
        }
        id v25 = *(id *)(v14 + 8 * v13);
      }
      uint64_t v26 = v25;
      objc_msgSend(v25, sel_boundingRectWithSize_options_context_, 1, 0, v24 + v23, 1.79769313e308);
      double v28 = v27;
      double v30 = v29;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = sub_1C23C6FCC(a1);
      }
      if (v13 >= a1[2]) {
        goto LABEL_41;
      }
      *(double *)&a1[v13 + 4] = ceil(v28);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v9 = sub_1C23C6FCC(v9);
      }
      if (v13 >= v9[2]) {
        goto LABEL_42;
      }
      double v15 = ceil(v30);
LABEL_8:
      *(double *)&v9[v13++ + 4] = v15;
      if (v11 == v13) {
        goto LABEL_39;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C2550620();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11 < 0)
    {
      __break(1u);
      break;
    }
  }
  __break(1u);
  return result;
}

void sub_1C23CABF8(double *a1@<X8>)
{
  sub_1C23C68BC(*(void **)(v1 + 16), a1);
}

uint64_t sub_1C23CAC18(unint64_t a1, void *a2)
{
  id v25 = a2;
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
    if (!v3) {
      return v4;
    }
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2274ACC(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0) {
      break;
    }
    uint64_t v6 = 0;
    uint64_t v4 = v28;
    unint64_t v26 = v2;
    unint64_t v27 = v2 & 0xC000000000000001;
    unint64_t v7 = v25 + 11;
    double v24 = (void *)(v2 + 32);
    while (v6 != v3)
    {
      if (v27)
      {
        uint64_t v8 = MEMORY[0x1C87588E0](v6, v26);
        uint64_t v9 = v8;
      }
      else
      {
        uint64_t v9 = v24[v6];
        uint64_t v8 = swift_retain();
      }
      double v10 = 0.0;
      if ((*(unsigned char *)(v9 + 40) & 1) == 0)
      {
        double v11 = *(double *)(v9 + 32);
        uint64_t v12 = v25[14];
        uint64_t v13 = v25[15];
        __swift_project_boxed_opaque_existential_1Tm(v7, v12);
        double v10 = sub_1C22B3D88(v12, v13, v11);
      }
      unint64_t v2 = (unint64_t)&v23;
      unint64_t v14 = *(void *)(v9 + 48);
      MEMORY[0x1F4188790](v8);
      v22[2] = v7;
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1C22683A8((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1C23CB4D4, (uint64_t)v22, v14);
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(v15 + 16);
      if (v16)
      {
        int64_t v17 = (double *)(v15 + 32);
        double v18 = 0.0;
        do
        {
          double v19 = *v17++;
          double v18 = v18 + v19;
          --v16;
        }
        while (v16);
        swift_release();
      }
      else
      {
        swift_release();
        double v18 = 0.0;
      }
      swift_bridgeObjectRelease();
      uint64_t v28 = v4;
      unint64_t v21 = *(void *)(v4 + 16);
      unint64_t v20 = *(void *)(v4 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1C2274ACC(v20 > 1, v21 + 1, 1);
        uint64_t v4 = v28;
      }
      ++v6;
      *(void *)(v4 + 16) = v21 + 1;
      *(double *)(v4 + 8 * v21 + 32) = v10 + v18;
      if (v6 == v3) {
        return v4;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C23CAE7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C23CAEE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t _s9SizedDataVwxx(id *a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t _s9SizedDataVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  unint64_t v20 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v20;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v5 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v6;
  unint64_t v7 = *(void **)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v7;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  uint64_t v8 = *(void **)(a2 + 144);
  *(void *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v9 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v9;
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  uint64_t v10 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v10;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  uint64_t v11 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v11;
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  uint64_t v12 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v12;
  id v13 = v3;
  id v14 = v20;
  id v15 = v4;
  id v16 = v5;
  swift_bridgeObjectRetain();
  id v17 = v7;
  id v18 = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s9SizedDataVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unint64_t v7 = *(void **)(a2 + 24);
  uint64_t v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v10 = *(void **)(a1 + 48);
  uint64_t v11 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v11;
  id v12 = v11;

  long long v13 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v13;
  id v14 = *(void **)(a1 + 80);
  id v15 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v15;
  id v16 = v15;

  long long v17 = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v17;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v18 = *(void **)(a2 + 120);
  double v19 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = v18;
  id v20 = v18;

  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  unint64_t v21 = *(void **)(a2 + 144);
  uint64_t v22 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = v21;
  id v23 = v21;

  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  uint64_t v24 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v24;
  swift_retain();
  swift_release();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  uint64_t v25 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v25;
  swift_retain();
  swift_release();
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  uint64_t v26 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v26;
  swift_retain();
  swift_release();
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  uint64_t v27 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v27;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy280_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t _s9SizedDataVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  id v6 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  unint64_t v7 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);

  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);

  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  id v9 = *(void **)(a1 + 144);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);

  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_release();
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  swift_release();
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  swift_release();
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  swift_release();
  return a1;
}

uint64_t _s9SizedDataVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 280)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9SizedDataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 280) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 280) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s9SizedDataVMa()
{
  return &_s9SizedDataVN;
}

void sub_1C23CB4D4(double *a1@<X8>)
{
}

uint64_t type metadata accessor for ClinicalSharingAllItemsDataSource()
{
  uint64_t result = qword_1EA2E29C0;
  if (!qword_1EA2E29C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C23CB538()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C23CB598(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v65 = *v2;
  uint64_t v70 = sub_1C254E560();
  uint64_t v6 = *(void *)(v70 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v70);
  id v63 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v59 - v9;
  uint64_t v71 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v11 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  long long v13 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t v61 = qword_1EA2E29A8;
  *(void *)((char *)v3 + qword_1EA2E29A8) = MEMORY[0x1E4FBC860];
  uint64_t v15 = *(void *)(a2 + 48);
  *(void *)((char *)v3 + qword_1EA2E29B8) = v15;
  swift_beginAccess();
  *(void *)((char *)v3 + qword_1EA2E29B0) = *(void *)(v15 + 16);
  swift_retain();
  uint64_t v67 = a2;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v72 = sub_1C220417C(v14);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17)
  {
    swift_bridgeObjectRelease();
LABEL_26:
    uint64_t v55 = sub_1C24B9BB8(v72);
    swift_bridgeObjectRelease();
    *(void *)((char *)v3 + v61) = v55;
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v56 = swift_bridgeObjectRetain();
    sub_1C228A5C4(v56);
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1C254DD00();
    unint64_t v26 = *(void *)(v18 + qword_1EA2E29A8);
    if (v26 >> 62) {
      goto LABEL_34;
    }
    uint64_t v57 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v57) {
      goto LABEL_28;
    }
LABEL_35:
    swift_release();
    swift_release_n();
    swift_bridgeObjectRelease();
    return v18;
  }
  unint64_t v60 = v3;
  uint64_t v18 = 0;
  unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v59[1] = a1;
  uint64_t v20 = a1 + v19;
  uint64_t v68 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v73 = *(void *)(v11 + 72);
  *(void *)&long long v16 = 136315138;
  long long v64 = v16;
  uint64_t v62 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v69 = v13;
  uint64_t v66 = v10;
  while (1)
  {
    sub_1C22667C4(v20, (uint64_t)v13);
    uint64_t v21 = *((void *)v13 + 8);
    if (!v21)
    {
      sub_1C254E510();
      uint64_t v36 = sub_1C254E550();
      os_log_type_t v37 = sub_1C254FA40();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        unint64_t v74 = v39;
        *(_DWORD *)uint64_t v38 = v64;
        uint64_t v40 = sub_1C2550AA0();
        *(void *)(v38 + 4) = sub_1C21AD354(v40, v41, (uint64_t *)&v74);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C21A1000, v36, v37, "[%s] Item did not have a name", (uint8_t *)v38, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v39, -1, -1);
        MEMORY[0x1C875A0B0](v38, -1, -1);
      }

      (*v68)(v10, v70);
      goto LABEL_4;
    }
    uint64_t v22 = *(void *)&v13[*(int *)(v71 + 52)];
    if (v22) {
      break;
    }
    id v42 = v63;
    sub_1C254E510();
    uint64_t v43 = sub_1C254E550();
    uint64_t v44 = sub_1C254FA40();
    if (os_log_type_enabled(v43, (os_log_type_t)v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      unint64_t v74 = v46;
      *(_DWORD *)uint64_t v45 = v64;
      uint64_t v47 = sub_1C2550AA0();
      *(void *)(v45 + 4) = sub_1C21AD354(v47, v48, (uint64_t *)&v74);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v43, (os_log_type_t)v44, "[%s] Item did not have any associate items", (uint8_t *)v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v46, -1, -1);
      MEMORY[0x1C875A0B0](v45, -1, -1);
    }

    (*v68)(v42, v70);
LABEL_23:
    long long v13 = v69;
LABEL_4:
    sub_1C2266828((uint64_t)v13);
    v20 += v73;
    if (!--v17)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v60;
      goto LABEL_26;
    }
  }
  uint64_t v23 = *((void *)v13 + 7);
  uint64_t v24 = v67;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1C23CBE00(v22, v24);
  swift_release();
  unint64_t v26 = v72;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v74 = v26;
  unint64_t v29 = sub_1C21A6470(v23, v21);
  uint64_t v30 = *(void *)(v26 + 16);
  BOOL v31 = (v28 & 1) == 0;
  uint64_t v32 = v30 + v31;
  if (!__OFADD__(v30, v31))
  {
    char v33 = v28;
    if (*(void *)(v26 + 24) >= v32)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v26 = (unint64_t)&v74;
        sub_1C24ADDC0();
      }
    }
    else
    {
      sub_1C2279DE8(v32, isUniquelyReferenced_nonNull_native);
      unint64_t v26 = v74;
      unint64_t v34 = sub_1C21A6470(v23, v21);
      if ((v33 & 1) != (v35 & 1)) {
        goto LABEL_39;
      }
      unint64_t v29 = v34;
    }
    id v49 = (void *)v74;
    unint64_t v72 = v74;
    if (v33)
    {
      uint64_t v50 = *(void *)(v74 + 56);
      swift_bridgeObjectRelease();
      *(void *)(v50 + 8 * v29) = v25;
    }
    else
    {
      *(void *)(v74 + 8 * (v29 >> 6) + 64) |= 1 << v29;
      uint64_t v51 = (uint64_t *)(v49[6] + 16 * v29);
      *uint64_t v51 = v23;
      v51[1] = v21;
      *(void *)(v49[7] + 8 * v29) = v25;
      uint64_t v52 = v49[2];
      BOOL v53 = __OFADD__(v52, 1);
      uint64_t v54 = v52 + 1;
      if (v53) {
        goto LABEL_33;
      }
      v49[2] = v54;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v66;
    goto LABEL_23;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  swift_retain();
  swift_bridgeObjectRetain();
  if (!sub_1C2550620()) {
    goto LABEL_35;
  }
LABEL_28:
  if ((v26 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C87588E0](0, v26);
LABEL_31:
    swift_bridgeObjectRelease();
    type metadata accessor for ClinicalSharingSelectableDatatypesDataSource();
    sub_1C254D660();
    swift_release();
    swift_release();
    swift_release_n();
    return v18;
  }
  if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
    goto LABEL_31;
  }
  __break(1u);
LABEL_39:
  uint64_t result = sub_1C2550910();
  __break(1u);
  return result;
}

void sub_1C23CBD08()
{
}

uint64_t sub_1C23CBD38()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C23CBD88()
{
  sub_1C254DCF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C23CBDF8()
{
  return type metadata accessor for ClinicalSharingAllItemsDataSource();
}

uint64_t sub_1C23CBE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254E220();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v46 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v7 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v48 = MEMORY[0x1E4FBC860];
    sub_1C22747C4(0, v10, 0);
    uint64_t v12 = 0;
    unint64_t v42 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v41 = a1 + v42;
    uint64_t v13 = *(void *)(v7 + 72);
    uint64_t v44 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v45 = v5 + 16;
    uint64_t v35 = v5;
    uint64_t v36 = a2;
    unint64_t v34 = v9;
    int64_t v37 = v10;
    uint64_t v40 = v13;
    do
    {
      uint64_t v43 = v12;
      sub_1C22667C4(v41 + v13 * v12, (uint64_t)v9);
      uint64_t v14 = *(void *)(a2 + 48);
      uint64_t v15 = *(void *)(v14 + 24);
      if (*(void *)(v15 + 16))
      {
        long long v16 = &v9[*(int *)(v38 + 48)];
        sub_1C23CC1DC(&qword_1EA2DF688);
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v47 = v16;
        uint64_t v17 = sub_1C254F370();
        uint64_t v18 = -1 << *(unsigned char *)(v15 + 32);
        unint64_t v19 = v17 & ~v18;
        if ((*(void *)(v15 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
        {
          uint64_t v39 = v14;
          uint64_t v20 = ~v18;
          uint64_t v21 = v5;
          uint64_t v22 = *(void *)(v5 + 72);
          uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
          while (1)
          {
            uint64_t v24 = v46;
            v23(v46, *(void *)(v15 + 48) + v22 * v19, v4);
            sub_1C23CC1DC(&qword_1EA2DFE28);
            char v25 = sub_1C254F420();
            (*v44)(v24, v4);
            if (v25) {
              break;
            }
            unint64_t v19 = (v19 + 1) & v20;
            if (((*(void *)(v15 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
            {
              swift_release();
              char v26 = 0;
              goto LABEL_12;
            }
          }
          swift_release();
          char v26 = 1;
LABEL_12:
          uint64_t v5 = v35;
          a2 = v36;
          uint64_t v9 = v34;
        }
        else
        {
          swift_release();
          char v26 = 0;
        }
        int64_t v10 = v37;
        swift_bridgeObjectRelease();
      }
      else
      {
        char v26 = 0;
      }
      v9[49] = v26;
      uint64_t v11 = v48;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v28 = v43;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C22747C4(0, *(void *)(v11 + 16) + 1, 1);
        uint64_t v11 = v48;
      }
      unint64_t v30 = *(void *)(v11 + 16);
      unint64_t v29 = *(void *)(v11 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1C22747C4(v29 > 1, v30 + 1, 1);
        uint64_t v11 = v48;
      }
      uint64_t v12 = v28 + 1;
      *(void *)(v11 + 16) = v30 + 1;
      uint64_t v31 = v11 + v42 + v30 * v40;
      uint64_t v13 = v40;
      sub_1C2266760((uint64_t)v9, v31);
    }
    while (v12 != v10);
  }
  return v11;
}

uint64_t sub_1C23CC1DC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C254E220();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C23CC224(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

Swift::Void __swiftcall AnalyticsManager.postSignedClinicalDataImportEvent(source:action:outcome:)(HealthRecordsUI::SignedClinicalDataImportEvent::SourceType source, HealthRecordsUI::SignedClinicalDataImportEvent::ActionType action, HealthRecordsUI::SignedClinicalDataImportEvent::OutcomeType outcome)
{
  char v3 = *(unsigned char *)action;
  char v4 = *(unsigned char *)outcome;
  v6[0] = *(unsigned char *)source;
  v6[1] = v3;
  v6[2] = v4;
  uint64_t v5 = v6;
  AnalyticsManager.postSignedClinicalDataImportEvent(_:)((HealthRecordsUI::SignedClinicalDataImportEvent)v5);
}

uint64_t Presentation.funnelContext()()
{
  uint64_t v1 = sub_1C254D320();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16))(v5, v0, v1, v3);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v6 == *MEMORY[0x1E4F66250] || v6 == *MEMORY[0x1E4F66248]) {
    return 1;
  }
  if (v6 == *MEMORY[0x1E4F66290]) {
    return 0;
  }
  if (v6 == *MEMORY[0x1E4F662A8]) {
    return 2;
  }
  if (v6 == *MEMORY[0x1E4F66288] || v6 == *MEMORY[0x1E4F66280]) {
    return 0;
  }
  if (v6 == *MEMORY[0x1E4F66260] || v6 == *MEMORY[0x1E4F66298]) {
    return 3;
  }
  if (v6 == *MEMORY[0x1E4F66270] || v6 == *MEMORY[0x1E4F66258]) {
    return 6;
  }
  if (v6 == *MEMORY[0x1E4F662A0]) {
    return 0;
  }
  if (v6 == *MEMORY[0x1E4F66278]) {
    return 7;
  }
  if (v6 == *MEMORY[0x1E4F66268]) {
    return 9;
  }
  if (v6 == *MEMORY[0x1E4F662B0]) {
    return 0;
  }
  uint64_t result = sub_1C25505F0();
  __break(1u);
  return result;
}

uint64_t sub_1C23CC4E0(uint64_t result)
{
  switch(result)
  {
    case 0:
      return result;
    case 1:
    case 2:
    case 3:
    case 4:
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0);
      uint64_t result = sub_1C254FFA0();
      break;
    default:
      sub_1C25508E0();
      __break(1u);
      JUMPOUT(0x1C23CC608);
  }
  return result;
}

unint64_t HealthRecordsConceptType.init(rawValue:)(unint64_t a1)
{
  return sub_1C23B8E78(a1);
}

id sub_1C23CC63C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AnalyticsManager()), sel_init);
  qword_1EBB6E968 = (uint64_t)result;
  return result;
}

id AnalyticsManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id static AnalyticsManager.shared.getter()
{
  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBB6E968;
  return v0;
}

id AnalyticsManager.init()()
{
  uint64_t v16 = sub_1C254FC60();
  uint64_t v1 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  __n128 v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C254FC00();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1C254F200();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR___CHRAnalyticsManager_queuedEvents] = MEMORY[0x1E4FBC860];
  uint64_t v15 = OBJC_IVAR___CHRAnalyticsManager_managerQueue;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v7 = v0;
  sub_1C254F1E0();
  uint64_t v18 = v6;
  sub_1C23D02F8((unint64_t *)&qword_1EBB6FF88, MEMORY[0x1E4FBCC10]);
  sub_1C21ACEB0(0, &qword_1EBB6FF50, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C21ACDC4();
  sub_1C2550200();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v16);
  *(void *)&v0[v15] = sub_1C254FCB0();
  v7[OBJC_IVAR___CHRAnalyticsManager_optInDetermined] = 0;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  *(void *)&v7[OBJC_IVAR___CHRAnalyticsManager_healthStore] = v8;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0A0]), sel_initWithHealthStore_, v8);
  *(void *)&v7[OBJC_IVAR___CHRAnalyticsManager_healthRecordsStore] = v9;
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AE08]), sel_initWithHealthStore_, v8);
  *(void *)&v7[OBJC_IVAR___CHRAnalyticsManager_conceptStore] = v10;

  uint64_t v11 = (objc_class *)type metadata accessor for AnalyticsManager();
  v17.receiver = v7;
  v17.super_class = v11;
  id v12 = objc_msgSendSuper2(&v17, sel_init);
  sub_1C23CF3D4();

  return v12;
}

uint64_t sub_1C23CCB04(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = sub_1C254F230();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (void *)((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)&v3[OBJC_IVAR___CHRAnalyticsManager_managerQueue];
  *id v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBD8], v7);
  id v12 = v11;
  char v13 = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v15 = (void *)swift_allocObject();
  long long v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = v3;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1C23D0118;
  *(void *)(v16 + 24) = v15;
  aBlock[4] = sub_1C23D0134;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23CC224;
  aBlock[3] = &block_descriptor_47;
  objc_super v17 = _Block_copy(aBlock);
  id v18 = a3;
  unint64_t v19 = v3;
  swift_retain();
  swift_release();
  dispatch_sync(v12, v17);
  _Block_release(v17);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1C23CCD54(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1C21ACEB0(0, &qword_1EA2E2A10, (uint64_t (*)(uint64_t))sub_1C23D06B8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255D0E0;
  *(void *)(inited + 32) = 1885697139;
  *(void *)(inited + 40) = 0xE400000000000000;
  sub_1C22CC0DC(a1);
  uint64_t v9 = sub_1C254F430();
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = 0x747865746E6F63;
  *(void *)(inited + 64) = 0xE700000000000000;
  sub_1C22CC2DC(a2);
  uint64_t v10 = sub_1C254F430();
  swift_bridgeObjectRelease();
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = 0x6D614E746E657665;
  *(void *)(inited + 88) = 0xE900000000000065;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0);
  *(void *)(inited + 96) = sub_1C254FFA0();
  unint64_t v11 = sub_1C2205930(inited);
  if (a3
    && (id v12 = a3,
        char v13 = swift_isUniquelyReferenced_nonNull_native(),
        sub_1C2366420((uint64_t)v12, 0x5579617765746167, 0xEA00000000006C72, v13),
        v12,
        swift_bridgeObjectRelease(),
        (*(unsigned char *)(a4 + OBJC_IVAR___CHRAnalyticsManager_optInDetermined) & 1) == 0))
  {
    uint64_t v14 = (void **)(a4 + OBJC_IVAR___CHRAnalyticsManager_queuedEvents);
    swift_beginAccess();
    uint64_t v15 = *v14;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v14 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v15 = sub_1C226DC54(0, v15[2] + 1, 1, v15);
      *uint64_t v14 = v15;
    }
    unint64_t v18 = v15[2];
    unint64_t v17 = v15[3];
    if (v18 >= v17 >> 1)
    {
      uint64_t v15 = sub_1C226DC54((void *)(v17 > 1), v18 + 1, 1, v15);
      *uint64_t v14 = v15;
    }
    long long v15[2] = v18 + 1;
    v15[v18 + 4] = v11;
    swift_endAccess();
  }
  else
  {
    sub_1C23D07CC(v11);
  }
  return swift_bridgeObjectRelease();
}

void sub_1C23CD050(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  if (a4)
  {
    sub_1C21AA50C(a4, (uint64_t)&aBlock);
    char v19 = aBlock;
    uint64_t v10 = a1;
    uint64_t v11 = a2;
    uint64_t v12 = a3;
    char v13 = (void *)v21;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    a3 = v12;
    a2 = v11;
    a1 = v10;
    swift_bridgeObjectRelease();
    if (a5)
    {
LABEL_3:
      uint64_t v14 = *(void **)&v5[OBJC_IVAR___CHRAnalyticsManager_conceptStore];
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v5;
      *(void *)(v15 + 24) = a1;
      *(void *)(v15 + 32) = a2;
      *(void *)(v15 + 40) = a3;
      *(unsigned char *)(v15 + 48) = v19;
      uint64_t v24 = sub_1C23D0164;
      uint64_t v25 = v15;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v21 = 1107296256;
      uint64_t v22 = sub_1C23CC220;
      uint64_t v23 = &block_descriptor_9_2;
      uint64_t v16 = _Block_copy(&aBlock);
      id v17 = a5;
      unint64_t v18 = v5;
      swift_release();
      objc_msgSend(v14, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, v17, 0, v16);
      _Block_release(v16);

      return;
    }
  }
  else
  {
    char v19 = 11;
    if (a5) {
      goto LABEL_3;
    }
  }
  LOBYTE(aBlock) = v19;
  sub_1C23CD65C(a1, a2, a3, (char *)&aBlock, 0);
}

void sub_1C23CD2BC(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, void *a5)
{
  char v9 = *a4;
  if (a5)
  {
    uint64_t v11 = *(void **)&v5[OBJC_IVAR___CHRAnalyticsManager_conceptStore];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v5;
    *(void *)(v12 + 24) = a1;
    *(void *)(v12 + 32) = a2;
    *(void *)(v12 + 40) = a3;
    *(unsigned char *)(v12 + 48) = v9;
    v16[4] = sub_1C23D0164;
    v16[5] = v12;
    v16[0] = MEMORY[0x1E4F143A8];
    v16[1] = 1107296256;
    v16[2] = sub_1C23CC220;
    v16[3] = &block_descriptor_16_1;
    char v13 = _Block_copy(v16);
    id v14 = a5;
    uint64_t v15 = v5;
    swift_release();
    objc_msgSend(v11, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, v14, 0, v13);
    _Block_release(v13);
  }
  else
  {
    LOBYTE(v16[0]) = *a4;
    sub_1C23CD65C(a1, a2, a3, (char *)v16, 0);
  }
}

void sub_1C23CD3FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a1)
  {
    char v12 = a7;
    id v10 = a1;
    if (objc_msgSend(v10, sel_isAdHoc)) {
      uint64_t v11 = 1;
    }
    else {
      uint64_t v11 = 2;
    }
    sub_1C23CD65C(a4, a5, a6, &v12, v11);
  }
  else
  {
    char v13 = a7;
    sub_1C23CD65C(a4, a5, a6, &v13, 0);
  }
}

uint64_t sub_1C23CD4A0(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  if (a5)
  {
    char v7 = *a4;
    uint64_t v5 = &v7;
    a5 = 4;
  }
  else
  {
    char v8 = *a4;
    uint64_t v5 = &v8;
  }
  return sub_1C23CD65C(a1, a2, a3, v5, a5);
}

uint64_t sub_1C23CD4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21A9698(a2, (uint64_t)v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  char v8 = 11;
  uint64_t v9 = 7;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1C21FD4EC();
      swift_bridgeObjectRelease();
      uint64_t v10 = sub_1C254CB40();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v6, v10);
      char v8 = 11;
      uint64_t v9 = 5;
      break;
    case 2:
    case 6:
    case 7:
      uint64_t v9 = 6;
      break;
    case 3:
    case 5:
    case 8:
      uint64_t v9 = 19;
      break;
    case 4:
      break;
    default:
      char v8 = *v6;
      uint64_t v9 = 8;
      break;
  }
  char v13 = v8;
  return sub_1C23CD65C(0, v9, a1, &v13, 0);
}

uint64_t sub_1C23CD65C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v11 = sub_1C254F230();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (void *)((char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v15 = *a4;
  uint64_t v16 = *(void **)(v5 + OBJC_IVAR___CHRAnalyticsManager_managerQueue);
  *id v14 = v16;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4FBCBD8], v11);
  id v17 = v16;
  char v18 = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  *(void *)(v20 + 32) = a5;
  *(unsigned char *)(v20 + 40) = v15;
  *(void *)(v20 + 48) = a3;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1C23D01B0;
  *(void *)(v21 + 24) = v20;
  aBlock[4] = sub_1C23D0B04;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23CC224;
  aBlock[3] = &block_descriptor_26_0;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync(v17, v22);
  _Block_release(v22);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
  return result;
}

void sub_1C23CD8B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0);
  uint64_t v10 = (void *)sub_1C254FFA0();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 32) = a3;
  *(unsigned char *)(v11 + 40) = a4;
  *(void *)(v11 + 48) = a5;
  v13[4] = sub_1C23D07B8;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  long long v13[2] = sub_1C23CDC8C;
  v13[3] = &block_descriptor_129;
  uint64_t v12 = _Block_copy(v13);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v12);
}

uint64_t sub_1C23CD9E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9 = sub_1C23B8698(a1);
  uint64_t v10 = MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1C2366420(v9, 1701869940, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_1C23B8800(a2);
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_1C2366420(v12, 0x747865746E6F63, 0xE700000000000000, v13);
  uint64_t v24 = v10;
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1C23CC4E0(a3);
  if (v14)
  {
    uint64_t v15 = v14;
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    sub_1C2366420(v15, 0x54747065636E6F63, 0xEB00000000657079, v16);
    uint64_t v24 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
  }
  if (a4 != 11)
  {
    uint64_t v17 = DisplayCategory.Kind.categoryAnalyticsName.getter();
    if (!v17)
    {

      if (a5 == 1) {
        goto LABEL_11;
      }
      goto LABEL_8;
    }
    uint64_t v18 = v17;
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    sub_1C2366420(v18, 0x79726F6765746163, 0xEA00000000004449, v19);
    swift_bridgeObjectRelease();
  }
  if (a5 == 1)
  {
LABEL_11:
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
    uint64_t v21 = sub_1C254FF40();
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    sub_1C2366420(v21, 0x6E6F69746361, 0xE600000000000000, v22);
    uint64_t v20 = v24;
    swift_bridgeObjectRelease();
    return v20;
  }
LABEL_8:
  if (!a5) {
    goto LABEL_11;
  }

  return v24;
}

id sub_1C23CDC8C(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
    uint64_t v4 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

uint64_t sub_1C23CDD28(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C254F230();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = (void *)((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR___CHRAnalyticsManager_managerQueue);
  *char v8 = v9;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FBCBD8], v5);
  id v10 = v9;
  LOBYTE(v9) = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    char v13 = (void *)swift_allocObject();
    long long v13[2] = v12;
    v13[3] = a1;
    v13[4] = a2;
    uint64_t v14 = *(void **)(v2 + OBJC_IVAR___CHRAnalyticsManager_healthRecordsStore);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_1C23D0244;
    *(void *)(v15 + 24) = v13;
    aBlock[4] = sub_1C23D0250;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C23CC220;
    aBlock[3] = &block_descriptor_38_0;
    char v16 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v14, sel_fetchIsImproveHealthRecordsDataSubmissionAllowedWithCompletion_, v16);
    _Block_release(v16);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C23CDF70(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = a3 + 16;
  swift_beginAccess();
  uint64_t v9 = (char *)MEMORY[0x1C875A200](v8);
  if (v9)
  {
    id v10 = v9;
    if (a1)
    {
      uint64_t v11 = *(NSObject **)&v9[OBJC_IVAR___CHRAnalyticsManager_managerQueue];
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = a4;
      *(void *)(v12 + 24) = a5;
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = sub_1C23D0778;
      *(void *)(v13 + 24) = v12;
      aBlock[4] = sub_1C23D0B04;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C23CC224;
      aBlock[3] = &block_descriptor_117_0;
      uint64_t v14 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      dispatch_sync(v11, v14);

      _Block_release(v14);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
    }
    else
    {
    }
  }
}

void sub_1C23CE104(uint64_t a1, uint64_t a2)
{
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0);
  uint64_t v4 = (void *)sub_1C254FFA0();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  v7[4] = sub_1C23D07A0;
  v7[5] = v5;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  id v7[2] = sub_1C23CDC8C;
  v7[3] = &block_descriptor_123_0;
  uint64_t v6 = _Block_copy(v7);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v6);
}

uint64_t sub_1C23CE208(unint64_t a1, uint64_t a2)
{
  if (a1 > 1
    || (sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0),
        uint64_t v3 = sub_1C254FFA0(),
        uint64_t v4 = MEMORY[0x1E4FBC868],
        char v5 = swift_isUniquelyReferenced_nonNull_native(),
        sub_1C2366420(v3, 0x6E6F69746361, 0xE600000000000000, v5),
        swift_bridgeObjectRelease(),
        a2))
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0);
    uint64_t v6 = sub_1C254FFA0();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C2366420(v6, 0x747865746E6F63, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

uint64_t sub_1C23CE38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v9 = *a5;
  char v10 = *((unsigned char *)a5 + 8);
  uint64_t result = sub_1C254E430();
  if (result)
  {
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    *(void *)(v13 + 24) = a3;
    *(void *)(v13 + 32) = a4;
    *(void *)(v13 + 40) = v9;
    *(unsigned char *)(v13 + 48) = v10;
    uint64_t v14 = *(void **)(v6 + OBJC_IVAR___CHRAnalyticsManager_healthRecordsStore);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_1C23D0290;
    *(void *)(v15 + 24) = v13;
    v17[4] = sub_1C23D0BAC;
    v17[5] = v15;
    v17[0] = MEMORY[0x1E4F143A8];
    v17[1] = 1107296256;
    v17[2] = sub_1C23CC220;
    v17[3] = &block_descriptor_49_0;
    char v16 = _Block_copy(v17);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v14, sel_fetchIsImproveHealthRecordsDataSubmissionAllowedWithCompletion_, v16);
    _Block_release(v16);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1C23CE510(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v12 = a3 + 16;
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x1C875A200](v12);
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    if (a1)
    {
      uint64_t v15 = 1;
      if (a6) {
        uint64_t v15 = 2;
      }
      if (a6 == 1) {
        uint64_t v15 = 0;
      }
      if (a7) {
        uint64_t v16 = 2;
      }
      else {
        uint64_t v16 = v15;
      }
      sub_1C23CE5B8(a4, a5, v16);
    }
  }
}

uint64_t sub_1C23CE5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1C254F230();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (void *)((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v3 + OBJC_IVAR___CHRAnalyticsManager_managerQueue);
  *char v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBD8], v7);
  uint64_t v12 = v11;
  char v13 = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v15 = (void *)swift_allocObject();
  long long v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1C23D02B0;
  *(void *)(v16 + 24) = v15;
  aBlock[4] = sub_1C23D0B04;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23CC224;
  aBlock[3] = &block_descriptor_59_0;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync(v12, v17);
  _Block_release(v17);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
  return result;
}

void sub_1C23CE7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0);
  uint64_t v6 = (void *)sub_1C254FFA0();
  uint64_t v7 = (void *)swift_allocObject();
  id v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v9[4] = sub_1C23D075C;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  v9[2] = sub_1C23CDC8C;
  v9[3] = &block_descriptor_107;
  uint64_t v8 = _Block_copy(v9);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v8);
}

uint64_t sub_1C23CE90C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C23B8CEC(a1);
  uint64_t v6 = MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1C2366420(v5, 0xD000000000000010, 0x80000001C25821E0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  if (a2 <= 1
    && ((sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0),
         uint64_t v8 = sub_1C254FFA0(),
         char v9 = swift_isUniquelyReferenced_nonNull_native(),
         sub_1C2366420(v8, 0x657079546D6F6F72, 0xE800000000000000, v9),
         swift_bridgeObjectRelease(),
         a3 == 2)
     || a3 == 1
     || !a3))
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0);
    uint64_t v10 = sub_1C254FFA0();
    char v11 = swift_isUniquelyReferenced_nonNull_native();
    sub_1C2366420(v10, 0xD000000000000013, 0x80000001C2582210, v11);
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C23CEB5C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = sub_1C254F230();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (void *)((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v11 = *(void **)(v3 + OBJC_IVAR___CHRAnalyticsManager_managerQueue);
  *uint64_t v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBD8], v7);
  uint64_t v12 = v11;
  char v13 = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  *(unsigned char *)(v15 + 32) = a3 & 1;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1C23D02DC;
  *(void *)(v16 + 24) = v15;
  aBlock[4] = sub_1C23D0B04;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23CC224;
  aBlock[3] = &block_descriptor_69_0;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync(v12, v17);
  _Block_release(v17);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
  return result;
}

void sub_1C23CEDA0(uint64_t a1, uint64_t a2, char a3)
{
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0);
  uint64_t v6 = (void *)sub_1C254FFA0();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(unsigned char *)(v7 + 32) = a3;
  v9[4] = sub_1C23D0740;
  v9[5] = v7;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  v9[2] = sub_1C23CDC8C;
  v9[3] = &block_descriptor_101_0;
  uint64_t v8 = _Block_copy(v9);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v8);
}

uint64_t sub_1C23CEEB4(unint64_t a1, uint64_t a2, char a3)
{
  if (a1 > 1)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0);
    uint64_t v5 = sub_1C254FFA0();
    uint64_t v6 = MEMORY[0x1E4FBC868];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C2366420(v5, 1701869940, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_1C2533B44(a2);
    char v9 = swift_isUniquelyReferenced_nonNull_native();
    sub_1C2366420(v8, 0x747865746E6F63, 0xE700000000000000, v9);
    swift_bridgeObjectRelease();
    id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, a3 & 1);
    char v11 = swift_isUniquelyReferenced_nonNull_native();
    sub_1C2366420((uint64_t)v10, 0x6E6F69746361, 0xE600000000000000, v11);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t sub_1C23CF0C0(char a1)
{
  uint64_t v2 = sub_1C254E070();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254E080();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254E0A0();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v7 + 104))(v9, *MEMORY[0x1E4F666B8], v6, v12);
  uint64_t v15 = (unsigned int *)MEMORY[0x1E4F66690];
  if ((a1 & 1) == 0) {
    uint64_t v15 = (unsigned int *)MEMORY[0x1E4F666A8];
  }
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *v15, v2);
  sub_1C254E090();
  sub_1C23D02F8(&qword_1EA2E2A00, MEMORY[0x1E4F666C0]);
  sub_1C254D140();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

void sub_1C23CF354(void *a1, uint64_t a2, void (*a3)(void))
{
  if (a1)
  {
    id v4 = a1;
    ((void (*)(id, void))a3)(objc_msgSend(v4, sel_BOOLValue), 0);
  }
  else
  {
    a3(2);
  }
}

uint64_t sub_1C23CF3D4()
{
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___CHRAnalyticsManager_healthRecordsStore);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1C23D0A70;
  *(void *)(v3 + 24) = v1;
  v6[4] = sub_1C23D0BAC;
  v6[5] = v3;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = sub_1C23CC220;
  unsigned char v6[3] = &block_descriptor_143;
  id v4 = _Block_copy(v6);
  swift_retain_n();
  swift_release();
  objc_msgSend(v2, sel_fetchIsImproveHealthRecordsDataSubmissionAllowedWithCompletion_, v4);
  _Block_release(v4);
  return swift_release_n();
}

uint64_t sub_1C23CF4FC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C875A200](v4);
  if (result)
  {
    uint64_t v6 = (void *)result;
    uint64_t v7 = *(NSObject **)(result + OBJC_IVAR___CHRAnalyticsManager_managerQueue);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v6;
    *(unsigned char *)(v8 + 24) = a1;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_1C23D0AE8;
    *(void *)(v9 + 24) = v8;
    aBlock[4] = sub_1C23D0B04;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C23CC224;
    aBlock[3] = &block_descriptor_153;
    uint64_t v10 = _Block_copy(aBlock);
    id v11 = v6;
    swift_retain();
    swift_release();
    dispatch_sync(v7, v10);

    _Block_release(v10);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v7) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1C23CF688(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR___CHRAnalyticsManager_optInDetermined) = a2 != 2;
  if (a2 == 2) {
    return result;
  }
  uint64_t v2 = result + OBJC_IVAR___CHRAnalyticsManager_queuedEvents;
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 16);
  if (!v4)
  {
LABEL_41:
    *(void *)uint64_t v2 = MEMORY[0x1E4FBC860];
    return swift_bridgeObjectRelease();
  }
  uint64_t v49 = v2;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (1)
  {
    uint64_t v6 = *(void *)(v3 + 8 * v5 + 32);
    if (!*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1C21A6470(0x6D614E746E657665, 0xE900000000000065);
    if (v8)
    {
      uint64_t v9 = *(void **)(*(void *)(v6 + 56) + 8 * v7);
      self;
      if (swift_dynamicCastObjCClass())
      {
        uint64_t aBlock = 0;
        uint64_t v53 = 0;
        id v10 = v9;
        sub_1C254F460();

        if (v53) {
          break;
        }
      }
    }
    swift_bridgeObjectRelease();
LABEL_5:
    if (v4 == ++v5)
    {
      swift_bridgeObjectRelease();
      uint64_t v2 = v49;
      goto LABEL_41;
    }
  }
  if (!*(void *)(v6 + 16))
  {
    __n128 v12 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_39;
  }
  unint64_t v11 = sub_1C21A6470(1885697139, 0xE400000000000000);
  __n128 v12 = (void *)MEMORY[0x1E4FBC868];
  if ((v13 & 1) == 0) {
    goto LABEL_25;
  }
  id v50 = *(id *)(*(void *)(v6 + 56) + 8 * v11);
  uint64_t v14 = (void *)MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t aBlock = v14;
  unint64_t v17 = sub_1C21A6470(1885697139, 0xE400000000000000);
  uint64_t v18 = v14[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (!__OFADD__(v18, v19))
  {
    char v21 = v16;
    if (v14[3] >= v20)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        __n128 v12 = aBlock;
        if ((v16 & 1) == 0) {
          goto LABEL_22;
        }
      }
      else
      {
        sub_1C24B0010();
        __n128 v12 = aBlock;
        if ((v21 & 1) == 0) {
          goto LABEL_22;
        }
      }
    }
    else
    {
      sub_1C227E0A0(v20, isUniquelyReferenced_nonNull_native);
      unint64_t v22 = sub_1C21A6470(1885697139, 0xE400000000000000);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_47;
      }
      unint64_t v17 = v22;
      __n128 v12 = aBlock;
      if ((v21 & 1) == 0)
      {
LABEL_22:
        v12[(v17 >> 6) + 8] |= 1 << v17;
        id v26 = (void *)(v12[6] + 16 * v17);
        *id v26 = 1885697139;
        v26[1] = 0xE400000000000000;
        uint64_t v25 = v50;
        *(void *)(v12[7] + 8 * v17) = v50;
        uint64_t v27 = v12[2];
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28) {
          goto LABEL_45;
        }
        void v12[2] = v29;
LABEL_24:

        swift_bridgeObjectRelease();
LABEL_25:
        if (!*(void *)(v6 + 16)) {
          goto LABEL_39;
        }
        unint64_t v30 = sub_1C21A6470(0x747865746E6F63, 0xE700000000000000);
        if ((v31 & 1) == 0) {
          goto LABEL_39;
        }
        id v51 = *(id *)(*(void *)(v6 + 56) + 8 * v30);
        char v32 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t aBlock = v12;
        unint64_t v34 = sub_1C21A6470(0x747865746E6F63, 0xE700000000000000);
        uint64_t v35 = v12[2];
        BOOL v36 = (v33 & 1) == 0;
        uint64_t v37 = v35 + v36;
        if (__OFADD__(v35, v36)) {
          goto LABEL_44;
        }
        char v38 = v33;
        if (v12[3] >= v37)
        {
          if (v32)
          {
            __n128 v12 = aBlock;
            if ((v33 & 1) == 0) {
              goto LABEL_36;
            }
          }
          else
          {
            sub_1C24B0010();
            __n128 v12 = aBlock;
            if ((v38 & 1) == 0) {
              goto LABEL_36;
            }
          }
        }
        else
        {
          sub_1C227E0A0(v37, v32);
          unint64_t v39 = sub_1C21A6470(0x747865746E6F63, 0xE700000000000000);
          if ((v38 & 1) != (v40 & 1)) {
            goto LABEL_47;
          }
          unint64_t v34 = v39;
          __n128 v12 = aBlock;
          if ((v38 & 1) == 0)
          {
LABEL_36:
            v12[(v34 >> 6) + 8] |= 1 << v34;
            uint64_t v43 = (void *)(v12[6] + 16 * v34);
            *uint64_t v43 = 0x747865746E6F63;
            v43[1] = 0xE700000000000000;
            unint64_t v42 = v51;
            *(void *)(v12[7] + 8 * v34) = v51;
            uint64_t v44 = v12[2];
            BOOL v28 = __OFADD__(v44, 1);
            uint64_t v45 = v44 + 1;
            if (v28) {
              goto LABEL_46;
            }
            void v12[2] = v45;
LABEL_38:

            swift_bridgeObjectRelease();
LABEL_39:
            uint64_t v46 = (void *)sub_1C254F430();
            swift_bridgeObjectRelease();
            uint64_t v47 = swift_allocObject();
            *(void *)(v47 + 16) = v12;
            unint64_t v56 = sub_1C23D0B60;
            uint64_t v57 = v47;
            uint64_t aBlock = (void *)MEMORY[0x1E4F143A8];
            uint64_t v53 = 1107296256;
            uint64_t v54 = sub_1C23CDC8C;
            uint64_t v55 = &block_descriptor_160;
            uint64_t v48 = _Block_copy(&aBlock);
            swift_release();
            AnalyticsSendEventLazy();
            _Block_release(v48);
            swift_bridgeObjectRelease();

            goto LABEL_5;
          }
        }
        uint64_t v41 = v12[7];

        unint64_t v42 = v51;
        *(void *)(v41 + 8 * v34) = v51;
        goto LABEL_38;
      }
    }
    uint64_t v24 = v12[7];

    uint64_t v25 = v50;
    *(void *)(v24 + 8 * v17) = v50;
    goto LABEL_24;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  uint64_t result = sub_1C2550910();
  __break(1u);
  return result;
}

id AnalyticsManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalyticsManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall AnalyticsManager.postSignedClinicalDataImportEvent(_:)(HealthRecordsUI::SignedClinicalDataImportEvent a1)
{
  objc_super v2 = *(char **)&a1.source;
  uint64_t v3 = sub_1C254F230();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = MEMORY[0x1F4188790](v3);
  unint64_t v7 = (void *)((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v8 = *v2;
  char v9 = v2[1];
  char v10 = v2[2];
  unint64_t v11 = *(void **)(v1 + OBJC_IVAR___CHRAnalyticsManager_managerQueue);
  void *v7 = v11;
  (*(void (**)(void *, void, uint64_t, __n128))(v4 + 104))(v7, *MEMORY[0x1E4FBCBD8], v3, v5);
  __n128 v12 = v11;
  char v13 = sub_1C254F260();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v7, v3);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v14 = (unsigned char *)swift_allocObject();
  v14[16] = v8;
  v14[17] = v9;
  v14[18] = v10;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1C23D0350;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = sub_1C23D0B04;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23CC224;
  aBlock[3] = &block_descriptor_79;
  char v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync(v12, v16);
  _Block_release(v16);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
LABEL_5:
  }
    __break(1u);
}

void sub_1C23CFED4(unsigned int a1)
{
  unsigned int v2 = a1 >> 8;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0);
  uint64_t v3 = (void *)sub_1C254FFA0();
  uint64_t v4 = (unsigned char *)swift_allocObject();
  v4[16] = a1;
  v4[17] = v2;
  v4[18] = BYTE2(a1) & 1;
  v6[4] = sub_1C23D0694;
  v6[5] = v4;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = sub_1C23CDC8C;
  unsigned char v6[3] = &block_descriptor_95;
  __n128 v5 = _Block_copy(v6);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v5);
}

unint64_t sub_1C23CFFE4()
{
  sub_1C21ACEB0(0, &qword_1EA2E2A10, (uint64_t (*)(uint64_t))sub_1C23D06B8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
  *(void *)(inited + 32) = 0x6E6F69746361;
  *(void *)(inited + 40) = 0xE600000000000000;
  SignedClinicalDataImportEvent.eventDescription.getter();
  uint64_t v1 = sub_1C254F430();
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v1;
  return sub_1C2205930(inited);
}

uint64_t type metadata accessor for AnalyticsManager()
{
  return self;
}

uint64_t sub_1C23D00D8()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C23D0118()
{
  return sub_1C23CCD54(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1C23D0124()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C23D0134()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_destroy_helper_42()
{
  return swift_release();
}

uint64_t sub_1C23D0168()
{
  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t sub_1C23D01A0()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C23D01B0()
{
  sub_1C23CD8B8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1C23D01C4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C23D01D4()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C23D020C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C23D0244(char a1, uint64_t a2)
{
  sub_1C23CDF70(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_1C23D0250(void *a1, uint64_t a2)
{
  sub_1C23CF354(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t sub_1C23D0258()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 49, 7);
}

void sub_1C23D0290(char a1, uint64_t a2)
{
  sub_1C23CE510(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned char *)(v2 + 48));
}

uint64_t sub_1C23D02A0()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C23D02B0()
{
  sub_1C23CE7F8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C23D02BC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C23D02CC()
{
  return MEMORY[0x1F4186498](v0, 33, 7);
}

void sub_1C23D02DC()
{
  sub_1C23CEDA0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_1C23D02E8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C23D02F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C23D0340()
{
  return MEMORY[0x1F4186498](v0, 19, 7);
}

void sub_1C23D0350()
{
  if (v0[18]) {
    int v1 = 0x10000;
  }
  else {
    int v1 = 0;
  }
  sub_1C23CFED4(v1 | (v0[17] << 8) | v0[16]);
}

uint64_t sub_1C23D0374()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1C23D0388()
{
  unint64_t result = qword_1EA2E2A08;
  if (!qword_1EA2E2A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2A08);
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthRecordsConceptType()
{
  return &type metadata for HealthRecordsConceptType;
}

uint64_t method lookup function for AnalyticsManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AnalyticsManager);
}

uint64_t dispatch thunk of AnalyticsManager.submitAndFlushQueuedEvents()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AnalyticsManager.postOnboardingFunnelEvent(step:context:gatewayUrl:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AnalyticsManager.postUserInteractionEvent(type:context:action:category:conceptIdentifier:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of AnalyticsManager.postUserInteractionEvent(type:context:action:categoryKind:conceptIdentifier:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AnalyticsManager.postUserInteractionEvent(type:context:action:categoryKind:userConcept:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of AnalyticsManager.postUserInteractionEvent(action:browseCategory:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of AnalyticsManager.postUserInteractionEvent(type:context:action:categoryKind:conceptType:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of AnalyticsManager.postLabSearchEvent(action:context:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of AnalyticsManager.postPinLabEventIfNeeded(for:conceptManager:userActionType:room:configuration:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of AnalyticsManager.postPinLabEvent(userActionType:roomType:categoryRoomContext:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of AnalyticsManager.postPrivacyInteractionEvent(type:context:action:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of AnalyticsManager.postNotificationAlertResponseEvent(didTapSettings:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t sub_1C23D0684()
{
  return MEMORY[0x1F4186498](v0, 19, 7);
}

unint64_t sub_1C23D0694()
{
  return sub_1C23CFFE4();
}

void sub_1C23D06B8()
{
  if (!qword_1EA2E2A18)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6F510);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E2A18);
    }
  }
}

uint64_t sub_1C23D0730()
{
  return MEMORY[0x1F4186498](v0, 33, 7);
}

uint64_t sub_1C23D0740()
{
  return sub_1C23CEEB4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_1C23D074C()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C23D075C()
{
  return sub_1C23CE90C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C23D0768()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C23D0778()
{
  sub_1C23CE104(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C23D0780()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C23D0790()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C23D07A0()
{
  return sub_1C23CE208(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C23D07A8()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C23D07B8()
{
  return sub_1C23CD9E4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48));
}

void sub_1C23D07CC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    unint64_t v2 = sub_1C21A6470(0x6D614E746E657665, 0xE900000000000065);
    if (v3)
    {
      uint64_t v4 = *(void **)(*(void *)(a1 + 56) + 8 * v2);
      self;
      if (swift_dynamicCastObjCClass())
      {
        id v5 = v4;
        sub_1C254F460();
      }
    }
  }
}

uint64_t sub_1C23D0A30()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C23D0A68()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C23D0A70(char a1, uint64_t a2)
{
  return sub_1C23CF4FC(a1, a2, v2);
}

uint64_t sub_1C23D0A78()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C23D0AB0()
{
  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_1C23D0AE8()
{
  return sub_1C23CF688(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1C23D0AF4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id AllergyReactionFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  id v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_1C23D0C18(unint64_t a1)
{
  id v3 = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C2310F50(a1, (uint64_t)v3);

  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C23D0C84(unint64_t a1)
{
  id v3 = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C23D1C38(a1, (uint64_t)v3);

  swift_bridgeObjectRelease();
  return v4;
}

id AllergyReactionFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_store);
}

uint64_t AllergyReactionFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context);
}

id AllergyReactionFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for AllergyReactionFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1C23D0D58(void *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context) >= 2uLL)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C23D1984(a1);
  }
  return result;
}

uint64_t sub_1C23D0E84(void *a1)
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  objc_super v4 = (char *)&v25[-1] - v3;
  uint64_t v5 = sub_1C254CBD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255CDA0;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C254C730();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();

  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v12 = sub_1C220D950();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 32) = v8;
  *(void *)(v6 + 40) = v10;
  id v13 = objc_msgSend(a1, sel_onsetDate);
  if (!v13)
  {
    unint64_t v17 = (uint64_t *)(v6 + 72);
    *(void *)(v6 + 96) = v11;
    *(void *)(v6 + 104) = v12;
    goto LABEL_7;
  }
  uint64_t v14 = v13;
  id v26 = v13;
  sub_1C23D11F8(&v26, v25);

  uint64_t v15 = v25[0];
  uint64_t v16 = v25[1];
  unint64_t v17 = (uint64_t *)(v6 + 72);
  *(void *)(v6 + 96) = v11;
  *(void *)(v6 + 104) = v12;
  if (!v16)
  {
LABEL_7:
    id v18 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C254C730();
    uint64_t v16 = v20;
    swift_bridgeObjectRelease();

    *unint64_t v17 = v19;
    goto LABEL_8;
  }
  *unint64_t v17 = v15;
LABEL_8:
  *(void *)(v6 + 80) = v16;
  id v21 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v22 = sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v4);
  return v22;
}

uint64_t sub_1C23D11F8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  id v26 = a2;
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v25 - v4;
  uint64_t v6 = *a1;
  uint64_t v7 = sub_1C254CBD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C255CDA0;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C254C730();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();

  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v14 = sub_1C220D950();
  *(void *)(v8 + 64) = v14;
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v12;
  id v15 = objc_msgSend(v6, sel_displayString);
  uint64_t v16 = sub_1C254F470();
  uint64_t v18 = v17;

  *(void *)(v8 + 96) = v13;
  *(void *)(v8 + 104) = v14;
  *(void *)(v8 + 72) = v16;
  *(void *)(v8 + 80) = v18;
  id v19 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v20 = sub_1C254F4A0();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C2269E88((uint64_t)v5);
  uint64_t v24 = v26;
  *id v26 = v20;
  v24[1] = v22;
  return result;
}

id AllergyReactionFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AllergyReactionFormatter.init()()
{
}

id AllergyReactionFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AllergyReactionFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C23D15C4()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_store);
}

uint64_t sub_1C23D15D8()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context);
}

id sub_1C23D15EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (objc_class *)type metadata accessor for AllergyReactionFormatter();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1C23D1660(void *a1)
{
  if (*(void *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context) >= 2uLL)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C23D1984(a1);
  }
  return result;
}

id sub_1C23D16C8(void *a1)
{
  unint64_t v2 = sub_1C224F52C();
  id v19 = a1;
  id v3 = a1;
  uint64_t v4 = sub_1C23F631C(v3);

  uint64_t v5 = Array<A>.newlineJoined.getter(v4);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  id v8 = (id)sub_1C2389A3C(v5, v7, v2, sub_1C23D1F00, v18);
  if (!v8)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v9 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C254C730();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();

    uint64_t v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0) {
      uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
    }
    if (!v13)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    id v8 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init, 0xE000000000000000);
    objc_msgSend(v8, sel_setDisplayItemType_, 15);
    id v14 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    id v15 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setTitle_, v15, 0xE000000000000000);

    uint64_t v16 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setSubtitle_, v16);

    objc_msgSend(v8, sel_setSeparatorStyle_, 0);
    objc_msgSend(v8, sel_setSeparatorHidden_, 0);
    objc_msgSend(v8, sel_setExtraTopPadding_, 0);
  }
  objc_msgSend(v8, sel_setSeparatorStyle_, 1);
  return v8;
}

uint64_t sub_1C23D1984(void *a1)
{
  id v2 = sub_1C23D16C8(a1);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C224F52C();
  swift_bridgeObjectRetain();
  id v4 = a1;
  uint64_t v5 = sub_1C23F6328(v4);
  unint64_t v7 = v6;

  id v8 = sub_1C2389A40(v5, v7);
  swift_bridgeObjectRelease();
  if (!v8)
  {
    id v9 = (void *)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    id v10 = v9;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C254C730();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();

    id v8 = sub_1C2389A40(v11, v13);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    MEMORY[0x1C8757C00](v2);
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  if (v8)
  {
    MEMORY[0x1C8757C00](v8);
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }

  return v15;
}

uint64_t sub_1C23D1C38(unint64_t a1, uint64_t a2)
{
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
LABEL_12:
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C2550620();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  unint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI24AllergyReactionFormatter_context);
  for (uint64_t i = 4; ; ++i)
  {
    a2 = i - 4;
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1C87588E0](i - 4, a1);
    }
    else {
      id v7 = *(id *)(a1 + 8 * i);
    }
    id v8 = v7;
    uint64_t v9 = i - 3;
    if (__OFADD__(a2, 1))
    {
      __break(1u);
      goto LABEL_12;
    }
    if (v5 >= 2) {
      break;
    }
    unint64_t v10 = sub_1C23D1984(v7);

    sub_1C22723E8(v10);
    if (v9 == v4)
    {
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AllergyReactionFormatter()
{
  return self;
}

unint64_t sub_1C23D1DBC(uint64_t a1)
{
  unint64_t result = sub_1C23D1DE4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C23D1DE4()
{
  unint64_t result = qword_1EA2E2A30;
  if (!qword_1EA2E2A30)
  {
    type metadata accessor for AllergyReactionFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2A30);
  }
  return result;
}

uint64_t method lookup function for AllergyReactionFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AllergyReactionFormatter);
}

uint64_t dispatch thunk of AllergyReactionFormatter.structuredItems(from:country:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AllergyReactionFormatter.displayItems(from:country:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AllergyReactionFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C23D1F00()
{
  return sub_1C23D0E84(*(void **)(v0 + 16));
}

uint64_t type metadata accessor for UserDomainConceptDetailViewController()
{
  uint64_t result = qword_1EA2E2A50;
  if (!qword_1EA2E2A50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C23D1F54()
{
  return swift_initClassMetadata2();
}

void sub_1C23D1FB4()
{
}

void sub_1C23D2010()
{
  id v1 = v0;
  id v2 = *(void **)&v0[qword_1EA2E2A40];
  id v3 = *(void **)&v0[qword_1EA2E2A38];
  uint64_t v4 = *(void *)&v0[qword_1EA2E2A48];
  uint64_t v5 = type metadata accessor for UserDomainConceptDetailDataSourceProvider();
  swift_allocObject();
  id v6 = v2;
  id v7 = v3;
  swift_retain();
  id v8 = sub_1C23D55C8(v6, v7, v4);

  swift_release();
  uint64_t v17 = v5;
  uint64_t v18 = sub_1C23D2BEC(&qword_1EA2E2A60, (void (*)(uint64_t))type metadata accessor for UserDomainConceptDetailDataSourceProvider);
  uint64_t v16 = v8;
  sub_1C254E0F0();
  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for UserDomainConceptDetailViewController();
  objc_msgSendSuper2(&v15, sel_viewDidLoad);
  id v9 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v9, sel_setLargeTitleDisplayMode_, 2);

  id v10 = objc_msgSend(v1, sel_navigationItem);
  id v11 = objc_msgSend(self, sel_mainBundle);
  id v12 = objc_msgSend(v11, sel_preferredLocalizations);

  uint64_t v13 = sub_1C254F710();
  HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v13);
  swift_bridgeObjectRelease();
  id v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setTitle_, v14);
}

void sub_1C23D221C(void *a1)
{
  id v1 = a1;
  sub_1C23D2010();
}

id sub_1C23D2264()
{
  id result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    sub_1C254E0D0();
    sub_1C254E0C0();
    swift_allocObject();
    return (id)sub_1C254E0B0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1C23D22E8()
{
  sub_1C254E100();
  id v1 = (void (*)(void))sub_1C254E110();
  v1();
  sub_1C254E0D0();
  uint64_t v2 = sub_1C254DCA0();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    sub_1C2270AE4(0, (unint64_t *)&qword_1EA2DEA40);
    sub_1C2270AE4(0, &qword_1EA2E2A68);
    uint64_t v4 = 0;
    while (1)
    {
      long long v9 = *(_OWORD *)(v2 + 16 * v4 + 32);
      swift_unknownObjectRetain_n();
      if (swift_dynamicCast())
      {
        sub_1C21F44EC(v7, (uint64_t)v10);
        __swift_project_boxed_opaque_existential_1Tm(v10, v10[3]);
        id result = objc_msgSend(v0, sel_collectionView);
        if (!result)
        {
          __break(1u);
          return result;
        }
        id v6 = result;
        sub_1C254DD90();

        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
      }
      else
      {
        uint64_t v8 = 0;
        memset(v7, 0, sizeof(v7));
        swift_unknownObjectRelease();
        sub_1C23D2B34((uint64_t)v7, &qword_1EA2E2A70, &qword_1EA2E2A68);
      }
      if (v3 == ++v4) {
        return (id)swift_bridgeObjectRelease();
      }
    }
  }
  return (id)swift_bridgeObjectRelease();
}

void sub_1C23D24DC(void *a1)
{
  uint64_t v2 = (void *)sub_1C254CD30();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  uint64_t v3 = (void *)sub_1C254CD30();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_1C254E0D0();
    sub_1C254DCE0();
    sub_1C254D6D0();
    swift_release();
    sub_1C21F4424((uint64_t)v11, (uint64_t)v8);
    sub_1C2270AE4(0, (unint64_t *)&qword_1EA2DED90);
    sub_1C2270AE4(0, &qword_1EA2DE778);
    if (swift_dynamicCast())
    {
      uint64_t v5 = v6;
LABEL_6:
      sub_1C21F44EC(v5, (uint64_t)v10);
      __swift_project_boxed_opaque_existential_1Tm(v10, v10[3]);
      sub_1C254D8A0();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
      return;
    }
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1C23D2B34((uint64_t)v6, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);
    *(void *)&v6[0] = v4;
    sub_1C220F054();
    id v4 = v4;
    if (swift_dynamicCast())
    {
      uint64_t v5 = v8;
      goto LABEL_6;
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    sub_1C23D2B34((uint64_t)v8, (unint64_t *)&qword_1EA2DE780, &qword_1EA2DE778);
  }
}

uint64_t sub_1C23D2700(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C254CD90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CD40();
  id v9 = a3;
  id v10 = a1;
  sub_1C23D24DC(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C23D27FC()
{
}

void sub_1C23D282C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C23D2860()
{
  return swift_release();
}

id sub_1C23D28B0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UserDomainConceptDetailViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C23D28E8(uint64_t a1)
{
  return swift_release();
}

uint64_t sub_1C23D2944()
{
  return type metadata accessor for UserDomainConceptDetailViewController();
}

id sub_1C23D294C(void *a1, void *a2)
{
  *(void *)&v2[qword_1EA2E2A38] = a2;
  *(void *)&v2[qword_1EA2E2A40] = a1;
  uint64_t v5 = qword_1EBB6EF30;
  uint64_t v6 = v2;
  id v7 = a2;
  id v8 = a1;
  if (v5 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_1EBB6FB90;
  id v10 = objc_msgSend(v7, sel_healthStore);
  id v11 = objc_msgSend(v10, sel_profileIdentifier);

  uint64_t v15 = *(void *)(v9 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v12);
  sub_1C254CEE0();
  sub_1C254E460();
  sub_1C23D2BEC((unint64_t *)&qword_1EBB6F240, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();

  swift_release();
  *(void *)&v6[qword_1EA2E2A48] = v16;

  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for UserDomainConceptDetailViewController();
  return objc_msgSendSuper2(&v14, sel_initWithCollectionViewLayout_, 0);
}

uint64_t sub_1C23D2B34(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1C23D2B90(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C23D2B90(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C2270AE4(255, a3);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C23D2BEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t HKDiagnosticTestResult.unitString.getter()
{
  id v1 = objc_msgSend(v0, sel_value);
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  id v3 = objc_msgSend(self, sel__unitStringForValueCollection_, v1);
  uint64_t v4 = sub_1C254F470();

  return v4;
}

BOOL TestResultRepresentable.displaysMultipleValues.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)((*(uint64_t (**)(void))(a2 + 80))() + 16);
  swift_bridgeObjectRelease();
  return v2 > 1;
}

id HKDiagnosticTestResult.valueString.getter()
{
  uint64_t v1 = sub_1C254C4A0();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_value, v3);
  if (v6
    && (v7 = v6, id v8 = objc_msgSend(v6, sel_inspectableValue), v7, v8)
    && (id v9 = objc_msgSend(v8, sel_codedValueCollection), v8, v9)
    && (id v10 = objc_msgSend(v9, sel_canonicalBloodPressureDisplay),
        v9,
        v10))
  {
    id v11 = (id)sub_1C254F470();
  }
  else
  {
    id v12 = objc_msgSend(v0, sel_value);
    if (!v12) {
      goto LABEL_8;
    }
    uint64_t v13 = v12;
    id v14 = objc_msgSend(v12, sel_displayString);

    sub_1C254F470();
    uint64_t v15 = sub_1C254F530();
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    if (!v17)
    {
LABEL_8:
      id v18 = objc_msgSend(v0, sel_value);
      if (!v18) {
        goto LABEL_14;
      }
      id v19 = v18;
      id v20 = objc_msgSend(v18, sel_inspectableValue);

      if (!v20) {
        goto LABEL_14;
      }
      id v21 = objc_msgSend(v20, sel_ontologyConcept);

      if (!v21) {
        goto LABEL_14;
      }
      id v22 = objc_msgSend(v21, sel_localizedPreferredName);

      if (v22
        && (sub_1C254F470(), v22, uint64_t v15 = sub_1C254F530(), v17 = v23, swift_bridgeObjectRelease(), v17))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_14:
        id v24 = objc_msgSend(v0, sel_value);
        uint64_t v25 = v24;
        if (!v24) {
          goto LABEL_21;
        }
        id v11 = objc_msgSend(v24, sel_inspectableValue);

        if (!v11)
        {
          swift_bridgeObjectRelease_n();
          return v11;
        }
        id v26 = objc_msgSend(v11, sel_stringValue);

        if (!v26)
        {
LABEL_21:
          swift_bridgeObjectRelease_n();
          return 0;
        }
        uint64_t v15 = sub_1C254F470();
        uint64_t v17 = v27;
        swift_bridgeObjectRelease_n();
      }
    }
    v29[0] = v15;
    v29[1] = v17;
    sub_1C254C490();
    sub_1C2218914();
    id v11 = (id)sub_1C2550160();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    swift_bridgeObjectRelease();
  }
  return v11;
}

id HKDiagnosticTestResult.valueInRange.getter()
{
  id v1 = objc_msgSend(v0, sel_value);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v0, sel_referenceRanges);
  id v4 = objc_msgSend(v2, sel_valueInRangeWithReferenceRanges_includeUnitString_allowsNullRange_, v3, 1, 1);

  return v4;
}

uint64_t HKCodedValue.valueTitle.getter()
{
  id v1 = objc_msgSend(v0, sel_ontologyConcept);
  id v2 = objc_msgSend(v1, sel_localizedPreferredName);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1C254F470();

  return v3;
}

id HKCodedValue.valueInRange.getter()
{
  id v1 = objc_msgSend(v0, sel_value);
  id v2 = objc_msgSend(self, sel_inspectableValueCollectionSingleWithValue_, v1);

  id v3 = objc_msgSend(v0, sel_referenceRanges);
  id v4 = objc_msgSend(v2, sel_valueInRangeWithReferenceRanges_includeUnitString_allowsNullRange_, v3, 1, 1);

  return v4;
}

uint64_t HKCodedValue.valueString.getter()
{
  uint64_t v1 = sub_1C254C4A0();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_value, v3);
  id v7 = objc_msgSend(v6, sel_displayString);

  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  v13[0] = v8;
  v13[1] = v10;
  sub_1C254C490();
  sub_1C2218914();
  uint64_t v11 = sub_1C2550160();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t HKCodedValue.unitString.getter()
{
  uint64_t v1 = self;
  id v2 = objc_msgSend(v0, sel_value);
  id v3 = objc_msgSend(v1, sel__unitStringForValue_, v2);

  uint64_t v4 = sub_1C254F470();
  return v4;
}

uint64_t sub_1C23D3464()
{
  id v1 = objc_msgSend(*v0, sel_ontologyConcept);
  id v2 = objc_msgSend(v1, sel_localizedPreferredName);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1C254F470();

  return v3;
}

id sub_1C23D34EC()
{
  id v1 = *v0;
  id v2 = objc_msgSend(*v0, sel_value);
  id v3 = objc_msgSend(self, sel_inspectableValueCollectionSingleWithValue_, v2);

  id v4 = objc_msgSend(v1, sel_referenceRanges);
  id v5 = objc_msgSend(v3, sel_valueInRangeWithReferenceRanges_includeUnitString_allowsNullRange_, v4, 1, 1);

  return v5;
}

uint64_t sub_1C23D35AC()
{
  uint64_t v1 = sub_1C254C4A0();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  id v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*v0, sel_value, v3);
  id v7 = objc_msgSend(v6, sel_displayString);

  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  v13[0] = v8;
  v13[1] = v10;
  sub_1C254C490();
  sub_1C2218914();
  uint64_t v11 = sub_1C2550160();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C23D36FC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = self;
  id v3 = objc_msgSend(v1, sel_value);
  id v4 = objc_msgSend(v2, sel__unitStringForValue_, v3);

  uint64_t v5 = sub_1C254F470();
  return v5;
}

uint64_t HKDiagnosticTestResult.testResultTitle.getter()
{
  id v1 = objc_msgSend(v0, sel_preferredDisplayName);
  uint64_t v2 = sub_1C254F470();

  return v2;
}

uint64_t HKDiagnosticTestResult.date.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_meaningfulDate);
  if (v3)
  {
    id v4 = v3;
    sub_1C254CA80();

    uint64_t v5 = sub_1C254CAD0();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1C254CAD0();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }
  return v6(v8, v9, 1, v7);
}

uint64_t HKDiagnosticTestResult.dateTitle.getter()
{
  return sub_1C23D3A60((SEL *)&selRef_meaningfulDateTitle);
}

uint64_t HKDiagnosticTestResult.sourceName.getter()
{
  id v1 = objc_msgSend(v0, sel_sourceRevision);
  id v2 = objc_msgSend(v1, sel_source);

  id v3 = objc_msgSend(v2, sel_name);
  uint64_t v4 = sub_1C254F470();

  return v4;
}

uint64_t HKDiagnosticTestResult.identifier.getter()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_UUID, v3);
  sub_1C254CB20();

  uint64_t v7 = sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v7;
}

uint64_t HKDiagnosticTestResult.valueTitle.getter()
{
  return sub_1C23D3A60((SEL *)&selRef_preferredDisplayName);
}

uint64_t sub_1C23D3A60(SEL *a1)
{
  id v2 = [v1 *a1];
  uint64_t v3 = sub_1C254F470();

  return v3;
}

uint64_t HKDiagnosticTestResult.valueDisplayables.getter()
{
  id v1 = objc_msgSend(v0, sel_value);
  if (v1
    && (id v2 = v1, v3 = objc_msgSend(v1, sel_inspectableValue), v2, v3)
    && (id v4 = objc_msgSend(v3, sel_codedValueCollection), v3, v4)
    && (id v5 = objc_msgSend(v4, sel_canonicalBloodPressureDisplay),
        v4,
        v5))
  {
  }
  else
  {
    id v6 = objc_msgSend(v0, sel_value);
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, sel_inspectableValue);

      if (v8)
      {
        id v9 = objc_msgSend(v8, sel_codedValueCollection);

        if (v9)
        {
          id v10 = objc_msgSend(v9, sel_codedValues);

          sub_1C23D3C2C();
          unint64_t v11 = sub_1C254F710();

          uint64_t v12 = sub_1C228AEC8(v11);
          swift_bridgeObjectRelease();
          return v12;
        }
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

unint64_t sub_1C23D3C2C()
{
  unint64_t result = qword_1EA2DFBC8;
  if (!qword_1EA2DFBC8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DFBC8);
  }
  return result;
}

uint64_t HKDiagnosticTestResult.interactive.getter()
{
  return 1;
}

BOOL HKDiagnosticTestResult.verifiable.getter()
{
  return objc_msgSend(v0, sel_medicalRecordOriginType) == (id)3;
}

uint64_t HKDiagnosticTestResult.sharedResult.getter()
{
  return 0;
}

uint64_t sub_1C23D3CA8()
{
  id v1 = objc_msgSend(*v0, sel_preferredDisplayName);
  uint64_t v2 = sub_1C254F470();

  return v2;
}

uint64_t sub_1C23D3D00(uint64_t a1, uint64_t a2)
{
  return sub_1C23D3F00(a1, a2, (SEL *)&selRef_meaningfulDateTitle);
}

uint64_t sub_1C23D3D0C()
{
  id v1 = objc_msgSend(*v0, sel_sourceRevision);
  id v2 = objc_msgSend(v1, sel_source);

  id v3 = objc_msgSend(v2, sel_name);
  uint64_t v4 = sub_1C254F470();

  return v4;
}

uint64_t sub_1C23D3DA4()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*v0, sel_UUID, v3);
  sub_1C254CB20();

  uint64_t v7 = sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v7;
}

BOOL sub_1C23D3EA4()
{
  return objc_msgSend(*v0, sel_medicalRecordOriginType) == (id)3;
}

uint64_t sub_1C23D3ED0()
{
  return HKDiagnosticTestResult.valueDisplayables.getter();
}

uint64_t sub_1C23D3EF4(uint64_t a1, uint64_t a2)
{
  return sub_1C23D3F00(a1, a2, (SEL *)&selRef_preferredDisplayName);
}

uint64_t sub_1C23D3F00(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  uint64_t v5 = sub_1C254F470();

  return v5;
}

id sub_1C23D3F54()
{
  uint64_t v1 = *v0;
  id v2 = objc_msgSend(v1, sel_value);
  if (!v2) {
    return 0;
  }
  double v3 = v2;
  id v4 = objc_msgSend(v1, sel_referenceRanges);
  id v5 = objc_msgSend(v3, sel_valueInRangeWithReferenceRanges_includeUnitString_allowsNullRange_, v4, 1, 1);

  return v5;
}

id sub_1C23D3FF4()
{
  return HKDiagnosticTestResult.valueString.getter();
}

uint64_t sub_1C23D4018()
{
  id v1 = objc_msgSend(*v0, sel_value);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = objc_msgSend(self, sel__unitStringForValueCollection_, v1);
  uint64_t v4 = sub_1C254F470();

  return v4;
}

uint64_t dispatch thunk of TestResultValueDisplayable.valueTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TestResultValueDisplayable.valueInRange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TestResultValueDisplayable.valueString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TestResultValueDisplayable.unitString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TestResultRepresentable.categoryKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of TestResultRepresentable.testResultTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of TestResultRepresentable.date.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TestResultRepresentable.dateTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of TestResultRepresentable.sourceName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of TestResultRepresentable.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of TestResultRepresentable.interactive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of TestResultRepresentable.verifiable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of TestResultRepresentable.valueDisplayables.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of TestResultRepresentable.sharedResult.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of TestResultRepresentable.displaysMultipleValues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t sub_1C23D41D8@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C228B394(*a1);
  *a2 = result;
  return result;
}

void *sub_1C23D4204()
{
  id v1 = v0;
  uint64_t v2 = sub_1C254E560();
  uint64_t v48 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50[5] = (uint64_t)sub_1C23D47D8();
  v50[6] = v5;
  id v6 = (void *)v0[2];
  v50[7] = sub_1C23D5914(v6, 1);
  v50[8] = v7;
  type metadata accessor for EducationDataSource();
  uint64_t v8 = swift_allocObject();
  id v9 = v6;
  id v10 = sub_1C23D5314(v9, v8);
  uint64_t v11 = sub_1C23D4D78(&qword_1EA2E2AA0, (void (*)(uint64_t))type metadata accessor for EducationDataSource);
  v50[9] = (uint64_t)v10;
  v50[10] = v11;
  v50[11] = sub_1C23D5AC8(v9);
  v50[12] = v12;
  uint64_t v13 = (void *)v1[4];
  uint64_t v14 = v1[5];
  id v15 = v9;
  swift_retain();
  id v16 = objc_msgSend(v13, sel_healthStore);
  type metadata accessor for PinnedConceptDataSource();
  swift_allocObject();
  uint64_t v17 = sub_1C248A15C(v15, v14, v16);
  uint64_t v18 = sub_1C23D4D78(&qword_1EA2E2AA8, (void (*)(uint64_t))type metadata accessor for PinnedConceptDataSource);
  v50[13] = (uint64_t)v17;
  v50[14] = v18;
  uint64_t v19 = v1[6];
  type metadata accessor for RecordDataSource();
  swift_allocObject();
  swift_retain();
  id v20 = v13;
  id v21 = RecordDataSource.init(recordPublisher:profile:)(v19, v20);
  uint64_t v22 = sub_1C23D4D78(&qword_1EA2E2AB0, (void (*)(uint64_t))type metadata accessor for RecordDataSource);
  v50[15] = (uint64_t)v21;
  v50[16] = v22;
  type metadata accessor for ShowAllRecordsDataSource();
  swift_allocObject();
  id v23 = v15;
  swift_retain();
  id v24 = sub_1C22E5898(v23, v19, v20, 0xD000000000000015, 0x80000001C2582580);
  uint64_t v25 = sub_1C23D4D78(&qword_1EA2E2AB8, (void (*)(uint64_t))type metadata accessor for ShowAllRecordsDataSource);
  uint64_t v26 = 0;
  v50[17] = (uint64_t)v24;
  v50[18] = v25;
  uint64_t v27 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v29 = v50[v26 + 5];
    if (v29)
    {
      uint64_t v30 = v50[v26 + 6];
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v50[0] = (uint64_t)v27;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v27 = sub_1C226C148(0, v27[2] + 1, 1, v27);
        v50[0] = (uint64_t)v27;
      }
      unint64_t v33 = v27[2];
      unint64_t v32 = v27[3];
      if (v33 >= v32 >> 1)
      {
        uint64_t v27 = sub_1C226C148((void *)(v32 > 1), v33 + 1, 1, v27);
        v50[0] = (uint64_t)v27;
      }
      uint64_t ObjectType = swift_getObjectType();
      sub_1C2332694(v33, v29, v50, ObjectType, v30);
    }
    v26 += 2;
  }
  while (v26 != 14);
  sub_1C232A400();
  swift_arrayDestroy();
  sub_1C254E510();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v34 = sub_1C254E550();
  os_log_type_t v35 = sub_1C254FA40();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 136446466;
    uint64_t v49 = *v1;
    v50[0] = v37;
    sub_1C23D5C78();
    uint64_t v38 = sub_1C254F4F0();
    uint64_t v47 = v2;
    uint64_t v49 = sub_1C21AD354(v38, v39, v50);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2082;
    uint64_t v40 = sub_1C2270AE4(0, (unint64_t *)&qword_1EA2DEA40);
    uint64_t v41 = swift_bridgeObjectRetain();
    uint64_t v42 = MEMORY[0x1C8757C30](v41, v40);
    unint64_t v44 = v43;
    swift_bridgeObjectRelease();
    uint64_t v49 = sub_1C21AD354(v42, v44, v50);
    sub_1C2550120();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v34, v35, "[%{public}s] Notifying data sources of hidden display types change, sources: %{public}s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v37, -1, -1);
    MEMORY[0x1C875A0B0](v36, -1, -1);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v4, v47);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v4, v2);
  }
  return v27;
}

void *sub_1C23D47D8()
{
  sub_1C23D5D20(0, &qword_1EA2E2A78, &qword_1EA2E0368, (unint64_t *)&qword_1EA2DF840);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v20 - v4;
  sub_1C23D4C7C();
  uint64_t v22 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *(void **)(v0 + 24);
  type metadata accessor for UserDomainConceptDataProvider();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = MEMORY[0x1E4FBC868];
  v11[2] = MEMORY[0x1E4FBC868];
  v11[3] = v12;
  void v11[4] = v10;
  uint64_t v13 = *(void **)(v0 + 16);
  id v21 = v13;
  id v20 = v10;
  uint64_t v23 = sub_1C23644AC(v13, 0, 0, 0);
  sub_1C23B57C0();
  sub_1C23D4C20(0, &qword_1EA2E0368, (unint64_t *)&qword_1EA2DF840);
  sub_1C23D4D78(&qword_1EA2E2680, (void (*)(uint64_t))sub_1C23B57C0);
  sub_1C254EC00();
  swift_release();
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1C23D4D00();
  sub_1C254EBE0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1C23D4D78(&qword_1EA2E2A90, (void (*)(uint64_t))sub_1C23D4C7C);
  uint64_t v14 = v22;
  uint64_t v15 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v14);
  type metadata accessor for ChartDataSource();
  uint64_t v16 = swift_allocObject();
  id v17 = v20;
  uint64_t v18 = sub_1C23D4DC0((uint64_t)v21, 0, v15, 0, 1, v17, v16);
  swift_release();
  sub_1C23D4D78(&qword_1EA2E2A98, (void (*)(uint64_t))type metadata accessor for ChartDataSource);
  return v18;
}

uint64_t sub_1C23D4B54@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C228B588(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C23D4B80()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UserDomainConceptDetailDataSourceProvider()
{
  return self;
}

void *sub_1C23D4BFC()
{
  return sub_1C23D4204();
}

void sub_1C23D4C20(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C2270AE4(255, a3);
    unint64_t v4 = sub_1C254F7A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C23D4C7C()
{
  if (!qword_1EA2E2A80)
  {
    sub_1C23D5D20(255, &qword_1EA2E2A78, &qword_1EA2E0368, (unint64_t *)&qword_1EA2DF840);
    sub_1C23D4D00();
    unint64_t v0 = sub_1C254E910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2A80);
    }
  }
}

unint64_t sub_1C23D4D00()
{
  unint64_t result = qword_1EA2E2A88;
  if (!qword_1EA2E2A88)
  {
    sub_1C23D5D20(255, &qword_1EA2E2A78, &qword_1EA2E0368, (unint64_t *)&qword_1EA2DF840);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2A88);
  }
  return result;
}

uint64_t sub_1C23D4D78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1C23D4DC0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7)
{
  uint64_t v31 = a4;
  id v32 = a6;
  int v35 = a2 & 1;
  unint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C21AB6D8(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v31 - v14;
  sub_1C22CDCB8();
  uint64_t v34 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[3] = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EFF0);
  v38[4] = &protocol witness table for HKMedicalUserDomainConcept;
  v38[0] = a1;
  *(void *)(a7 + 112) = 0;
  sub_1C21F4424((uint64_t)v38, a7 + 40);
  id v20 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordChartabilityDeterminer());
  swift_retain();
  *(void *)(a7 + 80) = objc_msgSend(v20, sel_init);
  *(void *)(a7 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B08]), sel_initWithHealthStore_, a6);
  *(void *)(a7 + 96) = a4;
  char v21 = a5 & 1;
  *(unsigned char *)(a7 + 104) = a5 & 1;
  swift_release();
  sub_1C21AB6D8(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C255CD90;
  sub_1C254D990();
  uint64_t v23 = ConceptsDataSource.init(arrangedSections:isHidden:)(v22, 0);
  swift_retain();
  sub_1C244073C(1);
  uint64_t v37 = a3;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v36 = (id)sub_1C254FC70();
  uint64_t v24 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v15, 1, 1, v24);
  sub_1C22CDDAC();
  sub_1C23D4D78(&qword_1EA2E0370, (void (*)(uint64_t))sub_1C22CDDAC);
  sub_1C22611AC();
  sub_1C254EC70();
  sub_1C23D5CB0((uint64_t)v15, (unint64_t *)&qword_1EBB6F4A0, v33);

  uint64_t v25 = swift_allocObject();
  swift_weakInit();
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = v31;
  *(void *)(v26 + 16) = v25;
  *(void *)(v26 + 24) = v27;
  *(unsigned char *)(v26 + 32) = v21;
  *(unsigned char *)(v26 + 33) = v35;
  sub_1C23D4D78(&qword_1EA2E0378, (void (*)(uint64_t))sub_1C22CDCB8);
  uint64_t v28 = v34;
  uint64_t v29 = sub_1C254ECC0();
  swift_release();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v28);
  v23[14] = v29;
  swift_release();
  return v23;
}

uint64_t sub_1C23D52A4()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C23D52DC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 34, 7);
}

void *sub_1C23D5314(void *a1, uint64_t a2)
{
  v16[3] = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EFF0);
  v16[4] = &protocol witness table for HKMedicalUserDomainConcept;
  v16[0] = a1;
  sub_1C21F4424((uint64_t)v16, a2 + 40);
  sub_1C21F4424((uint64_t)v16, (uint64_t)v15);
  type metadata accessor for EducationItem();
  uint64_t v4 = swift_allocObject();
  type metadata accessor for EducationCell();
  sub_1C23D4D78(&qword_1EA2E16B8, (void (*)(uint64_t))type metadata accessor for EducationCell);
  *(void *)(v4 + 56) = sub_1C254D330();
  *(void *)(v4 + 64) = v5;
  sub_1C21F44EC(v15, v4 + 16);
  sub_1C21ACA3C();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CEB0;
  *(void *)(inited + 32) = v4;
  *(void *)&v15[0] = inited;
  sub_1C254F730();
  unint64_t v7 = *(void *)&v15[0];
  sub_1C21AB6D8(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C255CD90;
  swift_retain();
  HKMedicalUserDomainConcept.educationTitle.getter();
  sub_1C228B0BC(v7);
  swift_bridgeObjectRelease();
  sub_1C254D990();
  id v9 = ConceptsDataSource.init(arrangedSections:isHidden:)(v8, 0);
  swift_retain();
  id v10 = objc_msgSend(a1, sel_educationContent);
  if (v10)
  {
    uint64_t v11 = v10;
    BOOL v12 = sub_1C25453B4();

    char v13 = !v12;
  }
  else
  {
    char v13 = 1;
  }
  sub_1C244073C(v13 & 1);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  return v9;
}

void *sub_1C23D55C8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1C23D5D20(0, &qword_1EA2E2AC8, &qword_1EA2E08D8, (unint64_t *)&qword_1EA2DF850);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  BOOL v12 = (char *)&v26 - v11;
  sub_1C23D5DE4();
  uint64_t v26 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[2] = a1;
  id v17 = a1;
  v4[3] = objc_msgSend(a2, sel_healthStore);
  v4[4] = a2;
  v4[5] = a3;
  id v18 = a2;
  swift_retain();
  id v19 = objc_msgSend(v18, sel_healthStore);
  type metadata accessor for UserDomainConceptDataProvider();
  id v20 = (void *)swift_allocObject();
  uint64_t v21 = MEMORY[0x1E4FBC868];
  void v20[2] = MEMORY[0x1E4FBC868];
  void v20[3] = v21;
  v20[4] = v19;
  uint64_t v22 = sub_1C23644AC(v17, 3, 0, 0);
  swift_release();
  uint64_t v27 = v22;
  sub_1C23B57C0();
  sub_1C23D4C20(0, &qword_1EA2E08D8, (unint64_t *)&qword_1EA2DF850);
  sub_1C23D4D78(&qword_1EA2E2680, (void (*)(uint64_t))sub_1C23B57C0);
  sub_1C254EC00();
  swift_release();
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1C23D5E68();
  sub_1C254EBE0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1C23D4D78(&qword_1EA2E2AE0, (void (*)(uint64_t))sub_1C23D5DE4);
  uint64_t v23 = v26;
  uint64_t v24 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v23);
  v4[6] = v24;
  return v4;
}

uint64_t sub_1C23D5914(void *a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1C21AB6D8(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  *(void *)&double v6 = MEMORY[0x1F4188790](v5 - 8).n128_u64[0];
  uint64_t v8 = (char *)&v16[-1] - v7;
  id v9 = objc_msgSend(a1, sel_UUID, v6);
  sub_1C254CB20();

  uint64_t v10 = sub_1C254CB40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  sub_1C254FB30();
  __swift_project_boxed_opaque_existential_1Tm(v16, v16[3]);
  uint64_t v11 = (void *)sub_1C254CE10();
  BOOL v12 = (void *)sub_1C254CF10();
  uint64_t v13 = sub_1C23C17D8((uint64_t)v8, (uint64_t)v17, a2, 0, (uint64_t)v11);

  sub_1C23D5CB0((uint64_t)v8, (unint64_t *)&qword_1EA2DEFF0, v4);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  return v13;
}

uint64_t sub_1C23D5AC8(void *a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1C21AB6D8(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  *(void *)&double v4 = MEMORY[0x1F4188790](v3 - 8).n128_u64[0];
  double v6 = (char *)&v14[-1] - v5;
  id v7 = objc_msgSend(a1, sel_UUID, v4);
  sub_1C254CB20();

  uint64_t v8 = sub_1C254CB40();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_1C254FB30();
  __swift_project_boxed_opaque_existential_1Tm(v14, v14[3]);
  id v9 = (void *)sub_1C254CE10();
  uint64_t v10 = (void *)sub_1C254CF10();
  uint64_t v11 = sub_1C225FF44((uint64_t)v6, (unsigned __int8 *)v15, 1, 0, (uint64_t)v9);

  sub_1C23D5CB0((uint64_t)v6, (unint64_t *)&qword_1EA2DEFF0, v2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v11;
}

unint64_t sub_1C23D5C78()
{
  unint64_t result = qword_1EA2E2AC0;
  if (!qword_1EA2E2AC0)
  {
    type metadata accessor for UserDomainConceptDetailDataSourceProvider();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E2AC0);
  }
  return result;
}

uint64_t sub_1C23D5CB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C21AB6D8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C23D5D20(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1C23B57C0();
    sub_1C23D4C20(255, a3, a4);
    sub_1C23D4D78(&qword_1EA2E2680, (void (*)(uint64_t))sub_1C23B57C0);
    unint64_t v7 = sub_1C254E930();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C23D5DE4()
{
  if (!qword_1EA2E2AD0)
  {
    sub_1C23D5D20(255, &qword_1EA2E2AC8, &qword_1EA2E08D8, (unint64_t *)&qword_1EA2DF850);
    sub_1C23D5E68();
    unint64_t v0 = sub_1C254E910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2AD0);
    }
  }
}

unint64_t sub_1C23D5E68()
{
  unint64_t result = qword_1EA2E2AD8;
  if (!qword_1EA2E2AD8)
  {
    sub_1C23D5D20(255, &qword_1EA2E2AC8, &qword_1EA2E08D8, (unint64_t *)&qword_1EA2DF850);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2AD8);
  }
  return result;
}

uint64_t type metadata accessor for PatientDetailsDataSource()
{
  uint64_t result = qword_1EA2E2AF8;
  if (!qword_1EA2E2AF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C23D5F2C()
{
  return swift_initClassMetadata2();
}

void sub_1C23D5F84(id a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254F230();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *uint64_t v11 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCBF0], v8);
  char v12 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    uint64_t v13 = qword_1EA2E2AE8;
    uint64_t v14 = *(void **)(v2 + qword_1EA2E2AE8);
    if (v14)
    {
      if (!a1) {
        goto LABEL_6;
      }
      sub_1C21AB51C(0, &qword_1EA2E0138);
      id v15 = a1;
      id v16 = v14;
      char v17 = sub_1C254FF70();

      if (v17) {
        return;
      }
      uint64_t v14 = *(void **)(v2 + v13);
      if (v14)
      {
LABEL_6:
        uint64_t v52 = v4;
        uint64_t v18 = *(void **)(v2 + qword_1EA2E2AF0);
        a1 = v14;
        id v50 = v18;
        id v19 = objc_msgSend(v18, sel_clinicalSourcesDataProvider);
        id v20 = objc_msgSend(v19, sel_nameAndFormattedBirthDateForAccountOwner_useMultipleLines_, a1, 1);

        if (v20)
        {
          uint64_t v48 = sub_1C254F470();
          uint64_t v4 = v21;
        }
        else
        {
          uint64_t v48 = 0;
          uint64_t v4 = 0;
        }
        uint64_t v53 = v2;
        if (qword_1EBB6EF40 == -1) {
          goto LABEL_12;
        }
        goto LABEL_18;
      }
    }
    else if (!a1)
    {
      return;
    }
    sub_1C254DA10();
    return;
  }
  __break(1u);
LABEL_18:
  swift_once();
LABEL_12:
  id v22 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C254C730();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();

  sub_1C2201F2C();
  uint64_t v26 = swift_allocObject();
  long long v49 = xmmword_1C255CDA0;
  *(_OWORD *)(v26 + 16) = xmmword_1C255CDA0;
  *(void *)(v26 + 32) = sub_1C254F470();
  *(void *)(v26 + 40) = v27;
  *(void *)(v26 + 48) = 0x746E6569746150;
  *(void *)(v26 + 56) = 0xE700000000000000;
  uint64_t v28 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v29 = (id)HKUIJoinStringsForAutomationIdentifier();

  uint64_t v51 = v5;
  if (v29)
  {
    uint64_t v30 = sub_1C254F470();
    uint64_t v32 = v31;
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v32 = 0;
  }
  uint64_t v33 = type metadata accessor for TitleSubtitleDetailItem(0);
  uint64_t v34 = (void *)swift_allocObject();
  sub_1C254CB30();
  v34[2] = v23;
  v34[3] = v25;
  v34[4] = v48;
  v34[5] = v4;
  uint64_t v35 = MEMORY[0x1E4FBC860];
  v34[6] = 0;
  v34[7] = v35;
  v34[8] = v30;
  v34[9] = v32;
  id v36 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1C254C730();
  uint64_t v39 = v38;
  swift_bridgeObjectRelease();

  uint64_t v40 = type metadata accessor for FHIRRawResourceItem();
  swift_allocObject();
  id v41 = a1;
  id v42 = v50;
  unint64_t v43 = sub_1C23D69C8(v37, v39, v42, v41);

  unint64_t v44 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1C23D6E1C(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
  sub_1C23D6E1C(0, &qword_1EA2DF5D0, (uint64_t (*)(uint64_t))sub_1C22270A8, v44);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v49;
  *(void *)(v45 + 56) = v33;
  *(void *)(v45 + 64) = sub_1C23D6E80(&qword_1EA2DF188, 255, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItem);
  *(void *)(v45 + 32) = v34;
  *(void *)(v45 + 96) = v40;
  *(void *)(v45 + 104) = sub_1C23D6E80((unint64_t *)&unk_1EA2E2B10, v46, (void (*)(uint64_t))type metadata accessor for FHIRRawResourceItem);
  *(void *)(v45 + 72) = v43;
  swift_retain();
  swift_retain();
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v7, v52);
  sub_1C254D990();
  sub_1C254DA10();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1C23D6698()
{
}

void sub_1C23D66C8()
{
  uint64_t v1 = *(void **)(v0 + qword_1EA2E2AF0);
}

uint64_t sub_1C23D6708()
{
  uint64_t v0 = sub_1C254DA50();

  return swift_deallocClassInstance();
}

uint64_t sub_1C23D6768()
{
  return type metadata accessor for PatientDetailsDataSource();
}

uint64_t sub_1C23D6770()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DAE0();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C23D6844()
{
  return sub_1C254E160();
}

void sub_1C23D68A0()
{
}

uint64_t type metadata accessor for FHIRRawResourceItem()
{
  return self;
}

void sub_1C23D68F4(uint64_t a1, void *a2)
{
  uint64_t v4 = *v2;
  id v5 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordSourceDataViewController), sel_initWithProfile_medicalRecord_, *(void *)(v4 + 96), *(void *)(v4 + 104));
  objc_msgSend(a2, sel_showViewController_sender_, v5, v4);
}

uint64_t sub_1C23D697C()
{
  return sub_1C23D6E80(&qword_1EA2E2B08, 255, (void (*)(uint64_t))type metadata accessor for PatientDetailsDataSource);
}

void *sub_1C23D69C8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v5 = v4;
  id v32 = a4;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  sub_1C23D6E1C(0, &qword_1EA2DE9F0, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v33 = sub_1C254E600();
  uint64_t v11 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C254E5A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  char v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[12] = a3;
  v5[13] = a4;
  sub_1C23D6E1C(0, &qword_1EA2DE9D8, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C254E620();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C255CD90;
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FB0E18], v14);
  uint64_t v19 = sub_1C254E5B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v10, 1, 1, v19);
  id v20 = a3;
  id v21 = v32;
  sub_1C254E5F0();
  sub_1C254E5C0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v33);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_1C2201F2C();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C255CDA0;
  *(void *)(v22 + 32) = sub_1C254F470();
  *(void *)(v22 + 40) = v23;
  *(void *)(v22 + 48) = 0xD000000000000010;
  *(void *)(v22 + 56) = 0x80000001C2582610;
  uint64_t v24 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v25 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v25)
  {
    uint64_t v26 = sub_1C254F470();
    uint64_t v28 = v27;
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v28 = 0;
  }
  type metadata accessor for TextItemCell();
  sub_1C23D6E80(&qword_1EA2DE790, 255, (void (*)(uint64_t))type metadata accessor for TextItemCell);
  v5[10] = sub_1C254D330();
  v5[11] = v29;
  uint64_t v30 = v35;
  void v5[2] = v34;
  v5[3] = v30;
  v5[4] = 0;
  v5[5] = 0;
  v5[6] = 0;
  v5[7] = v18;
  v5[8] = v26;
  v5[9] = v28;
  return v5;
}

void sub_1C23D6E1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C23D6E80(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C23D6EC8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + qword_1EA2E2AE8) = 0;
  *(void *)(v2 + qword_1EA2E2AF0) = a1;
  sub_1C23D6E1C(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
  id v8 = a1;
  sub_1C254CB30();
  sub_1C254CAF0();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  sub_1C254D990();
  v11[0] = 0;
  v11[1] = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v11, "MutableArray<");
  HIWORD(v11[1]) = -4864;
  sub_1C254CB30();
  sub_1C254CAF0();
  v9(v7, v4);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  return sub_1C254D9F0();
}

uint64_t BloodPressureChartData.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_date;
  uint64_t v4 = sub_1C254CAD0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t BloodPressureChartData.dateFormat.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_dateFormat);
}

uint64_t BloodPressureChartData.hasTime.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_hasTime);
}

uint64_t BloodPressureChartData.partOfOutOfRangeSeries.getter()
{
  return 0;
}

id BloodPressureChartData.__allocating_init(date:dateFormat:hasTime:systolicRange:diastolicRange:)(uint64_t a1, uint64_t a2, char a3, void *a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = objc_allocWithZone(v6);
  v12[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_partOfOutOfRangeSeries] = 0;
  uint64_t v13 = &v12[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_date];
  uint64_t v14 = sub_1C254CAD0();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  *(void *)&v12[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_dateFormat] = a2;
  v12[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_hasTime] = a3;
  v18.receiver = v12;
  v18.super_class = v6;
  id v16 = objc_msgSendSuper2(&v18, sel_init);
  objc_msgSend(v16, sel_setSystolicRange_, a4);
  objc_msgSend(v16, sel_setDiastolicRange_, a5);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a1, v14);
  return v16;
}

id BloodPressureChartData.init(date:dateFormat:hasTime:systolicRange:diastolicRange:)(uint64_t a1, uint64_t a2, char a3, void *a4, void *a5)
{
  v5[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_partOfOutOfRangeSeries] = 0;
  uint64_t v11 = &v5[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_date];
  uint64_t v12 = sub_1C254CAD0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_dateFormat] = a2;
  v5[OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_hasTime] = a3;
  v16.receiver = v5;
  v16.super_class = (Class)type metadata accessor for BloodPressureChartData();
  id v14 = objc_msgSendSuper2(&v16, sel_init);
  objc_msgSend(v14, sel_setSystolicRange_, a4);
  objc_msgSend(v14, sel_setDiastolicRange_, a5);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  return v14;
}

uint64_t type metadata accessor for BloodPressureChartData()
{
  uint64_t result = qword_1EA2E2B20;
  if (!qword_1EA2E2B20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id BloodPressureChartData.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BloodPressureChartData.init()()
{
}

id BloodPressureChartData.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureChartData();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C23D761C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_date;
  uint64_t v4 = sub_1C254CAD0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1C23D7690()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_dateFormat);
}

uint64_t sub_1C23D76A0()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22BloodPressureChartData_hasTime);
}

void Array<A>.minMaxRanges()(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v56 >= 2) {
      goto LABEL_3;
    }
    swift_bridgeObjectRetain();
    if (sub_1C2550620()) {
      goto LABEL_7;
    }
LABEL_65:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3 > 1)
  {
LABEL_3:
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67CA0]), sel_init);
    id v58 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67CA0]), sel_init);
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C2550620();
      if (!v5) {
        goto LABEL_65;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v5) {
        goto LABEL_65;
      }
    }
    if (v5 >= 1)
    {
      uint64_t v9 = 0;
      id v57 = v4;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v10 = (id)MEMORY[0x1C87588E0](v9, a1);
        }
        else {
          id v10 = *(id *)(a1 + 8 * v9 + 32);
        }
        uint64_t v11 = v10;
        id v12 = objc_msgSend(v10, sel_systolicRange, v57);
        if (v12)
        {
          uint64_t v13 = v12;
          id v14 = objc_msgSend(v12, sel_minValue);

          if (v14)
          {
            sub_1C2371CF0();
            uint64_t v15 = (void *)sub_1C254FF50();
            id v16 = objc_msgSend(v15, sel_compare_, v14);

            if (v16 == (id)-1)
            {
              id v17 = objc_msgSend(v4, sel_minValue);
              id v18 = v14;
              id v19 = v18;
              if (v17)
              {
                id v20 = v18;
                id v21 = v17;
                if (objc_msgSend(v20, sel_compare_, v21) == (id)-1) {
                  uint64_t v22 = v20;
                }
                else {
                  uint64_t v22 = v21;
                }
                id v19 = v22;

                id v4 = v57;
              }
              objc_msgSend(v4, sel_setMinValue_, v19);
            }
          }
        }
        id v23 = objc_msgSend(v11, sel_systolicRange);
        if (v23)
        {
          uint64_t v24 = v23;
          id v25 = objc_msgSend(v23, sel_maxValue);

          if (v25)
          {
            sub_1C2371CF0();
            uint64_t v26 = (void *)sub_1C254FF50();
            id v27 = objc_msgSend(v26, sel_compare_, v25);

            if (v27 == (id)-1)
            {
              id v28 = objc_msgSend(v4, sel_maxValue);
              id v29 = v25;
              id v30 = v29;
              if (v28)
              {
                id v31 = v29;
                id v32 = v28;
                if (objc_msgSend(v31, sel_compare_, v32) == (id)-1) {
                  uint64_t v33 = v32;
                }
                else {
                  uint64_t v33 = v31;
                }
                id v30 = v33;

                id v4 = v57;
              }
              objc_msgSend(v4, sel_setMaxValue_, v30);
            }
          }
        }
        id v34 = objc_msgSend(v11, sel_diastolicRange);
        if (v34)
        {
          uint64_t v35 = v34;
          id v36 = objc_msgSend(v34, sel_minValue);

          if (v36)
          {
            sub_1C2371CF0();
            uint64_t v37 = (void *)sub_1C254FF50();
            id v38 = objc_msgSend(v37, sel_compare_, v36);

            if (v38 == (id)-1)
            {
              id v39 = objc_msgSend(v58, sel_minValue);
              id v40 = v36;
              id v41 = v40;
              if (v39)
              {
                id v42 = v40;
                id v43 = v39;
                if (objc_msgSend(v42, sel_compare_, v43) == (id)-1) {
                  unint64_t v44 = v42;
                }
                else {
                  unint64_t v44 = v43;
                }
                id v41 = v44;

                id v4 = v57;
              }
              objc_msgSend(v58, sel_setMinValue_, v41);
            }
          }
        }
        id v45 = objc_msgSend(v11, sel_diastolicRange);
        if (v45)
        {
          uint64_t v46 = v45;
          id v47 = objc_msgSend(v45, sel_maxValue);

          if (v47)
          {
            sub_1C2371CF0();
            uint64_t v48 = (void *)sub_1C254FF50();
            id v49 = objc_msgSend(v48, sel_compare_, v47);

            if (v49 == (id)-1)
            {
              id v50 = objc_msgSend(v58, sel_maxValue);
              id v51 = v47;
              id v52 = v51;
              if (v50)
              {
                id v53 = v51;
                id v54 = v50;
                if (objc_msgSend(v53, sel_compare_, v54) == (id)-1) {
                  uint64_t v55 = v54;
                }
                else {
                  uint64_t v55 = v53;
                }
                id v52 = v55;

                id v4 = v57;
              }
              objc_msgSend(v58, sel_setMaxValue_, v52);
            }
          }
        }
        ++v9;
      }
      while (v5 != v9);
      goto LABEL_65;
    }
    goto LABEL_68;
  }
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_65;
  }
LABEL_7:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x1C87588E0](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    id v6 = *(id *)(a1 + 32);
  }
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_systolicRange);

  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v8 = (id)MEMORY[0x1C87588E0](0, a1);
    swift_bridgeObjectRelease();
LABEL_62:
    objc_msgSend(v8, sel_diastolicRange);

    return;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v8 = *(id *)(a1 + 32);
    goto LABEL_62;
  }
LABEL_69:
  __break(1u);
}

uint64_t sub_1C23D7D14()
{
  return type metadata accessor for BloodPressureChartData();
}

uint64_t sub_1C23D7D1C()
{
  uint64_t result = sub_1C254CAD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for BloodPressureChartData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BloodPressureChartData);
}

uint64_t dispatch thunk of BloodPressureChartData.__allocating_init(date:dateFormat:hasTime:systolicRange:diastolicRange:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t Array.subscript.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  sub_1C254F7A0();
  swift_getWitnessTable();
  sub_1C254F970();
  sub_1C23D80C0();
  if (sub_1C254F980())
  {
    sub_1C254F7B0();
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v4, 1, a1);
}

uint64_t Array<A>.excluding(_:)()
{
  return sub_1C2550450();
}

{
  sub_1C254F7A0();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  return sub_1C2550450();
}

BOOL sub_1C23D8034()
{
  return (sub_1C254F6A0() & 1) == 0;
}

void sub_1C23D80C0()
{
  if (!qword_1EA2E2B30)
  {
    unint64_t v0 = sub_1C254F990();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2B30);
    }
  }
}

BOOL sub_1C23D8120()
{
  return (sub_1C254F420() & 1) == 0;
}

BOOL sub_1C23D815C()
{
  return sub_1C23D8034();
}

unint64_t static RemovedCategoryNavigationFeedItemIdentifierFactory.makePrefixComponent(feedItemKind:)()
{
  return 0xD000000000000016;
}

unint64_t static RemovedCategoryNavigationFeedItemIdentifierFactory.makeComponent(categoryKind:)()
{
  return 0xD00000000000001BLL;
}

uint64_t static RemovedCategoryNavigationFeedItemIdentifierFactory.make(categoryKind:profile:)(unsigned __int8 *a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C255CDA0;
  id v8 = (void *)sub_1C254CF00();
  unint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  if (v8)
  {
    unint64_t v18 = 0x656C69666F72505BLL;
    unint64_t v19 = 0xE90000000000003ALL;
    id v9 = v8;
    id v10 = objc_msgSend(v9, sel_identifier);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();

    unint64_t v12 = v18;
    unint64_t v11 = v19;
  }
  else
  {
    unint64_t v11 = 0x80000001C2578680;
    unint64_t v12 = 0xD000000000000013;
  }
  unint64_t v18 = v12;
  unint64_t v19 = v11;
  sub_1C254F5A0();

  unint64_t v13 = v19;
  *(void *)(v7 + 32) = v18;
  *(void *)(v7 + 40) = v13;
  unint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v18 = 0xD00000000000001BLL;
  unint64_t v19 = 0x80000001C257B910;
  v17[1] = v6;
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  unint64_t v14 = v19;
  *(void *)(v7 + 48) = v18;
  *(void *)(v7 + 56) = v14;
  unint64_t v18 = v7;
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
  sub_1C226BF44();
  uint64_t v15 = sub_1C254F390();
  swift_bridgeObjectRelease();
  return v15;
}

ValueMetadata *type metadata accessor for RemovedCategoryNavigationFeedItemIdentifierFactory()
{
  return &type metadata for RemovedCategoryNavigationFeedItemIdentifierFactory;
}

uint64_t sub_1C23D85BC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEB0000000068746CLL;
  unint64_t v3 = 0x6165486F54646461;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0x6C61576F54646461;
    }
    else {
      unint64_t v5 = 0xD000000000000014;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEB0000000074656CLL;
    }
    else {
      unint64_t v6 = 0x80000001C2573F90;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x6165486F54646461;
  unint64_t v6 = 0xEB0000000068746CLL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0x6C61576F54646461;
    }
    else {
      unint64_t v3 = 0xD000000000000014;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEB0000000074656CLL;
    }
    else {
      unint64_t v2 = 0x80000001C2573F90;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C2550870();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C23D86F0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x64656C696166;
  }
  else {
    uint64_t v3 = 0x6564656563637573;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000064;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x64656C696166;
  }
  else {
    uint64_t v5 = 0x6564656563637573;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000064;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1C2550870();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C23D8798(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x65646F63205251;
    }
    else {
      uint64_t v3 = 0x51204343442D5545;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE700000000000000;
    }
    else {
      unint64_t v4 = 0xEE0065646F632052;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x65646F63205251;
      }
      else {
        uint64_t v6 = 0x51204343442D5545;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE700000000000000;
      }
      else {
        unint64_t v7 = 0xEE0065646F632052;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701603686;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE400000000000000;
  if (v3 != 1701603686)
  {
LABEL_21:
    char v8 = sub_1C2550870();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C23D88BC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x74726F706D69;
    }
    else {
      uint64_t v3 = 0x65746172656E6567;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE600000000000000;
    }
    else {
      unint64_t v4 = 0xEB00000000464450;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x74726F706D69;
      }
      else {
        uint64_t v6 = 0x65746172656E6567;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE600000000000000;
      }
      else {
        unint64_t v7 = 0xEB00000000464450;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x77656976657270;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x77656976657270)
  {
LABEL_21:
    char v8 = sub_1C2550870();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C23D89E0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7265656E69676E45;
  }
  else {
    uint64_t v3 = 0x647261646E617453;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xEB00000000676E69;
  }
  if (a2) {
    uint64_t v5 = 0x7265656E69676E45;
  }
  else {
    uint64_t v5 = 0x647261646E617453;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000676E69;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1C2550870();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C23D8A90(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x676E6964616F6CLL;
  }
  else {
    uint64_t v3 = 0x617461446F6ELL;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x676E6964616F6CLL;
  }
  else {
    uint64_t v5 = 0x617461446F6ELL;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1C2550870();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C23D8B34()
{
  unint64_t v0 = FeedItemKind.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == FeedItemKind.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C2550870();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1C23D8BCC(char a1)
{
  if (!a1) {
    goto LABEL_5;
  }
  char v2 = sub_1C2550870();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
    if (a1 != 2)
    {
      char v3 = sub_1C2550870();
      goto LABEL_7;
    }
LABEL_5:
    char v3 = 1;
LABEL_7:
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
  char v3 = 1;
  return v3 & 1;
}

uint64_t sub_1C23D8CDC(unsigned __int8 a1)
{
  if (a1 == 1) {
    goto LABEL_6;
  }
  char v2 = sub_1C2550870();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
    if (a1 <= 1u)
    {
      char v3 = sub_1C2550870();
LABEL_7:
      swift_bridgeObjectRelease();
      return v3 & 1;
    }
LABEL_6:
    char v3 = 1;
    goto LABEL_7;
  }
  char v3 = 1;
  return v3 & 1;
}

uint64_t sub_1C23D8E24()
{
  return sub_1C2550A10();
}

uint64_t sub_1C23D8EDC()
{
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C23D8F80()
{
  return sub_1C2550A10();
}

uint64_t sub_1C23D9034@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C23DC98C();
  *a1 = result;
  return result;
}

void sub_1C23D9064(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEB0000000068746CLL;
  unint64_t v4 = 0xEB0000000074656CLL;
  unint64_t v5 = 0x6C61576F54646461;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000014;
    unint64_t v4 = 0x80000001C2573F90;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6165486F54646461;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C23D90D8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C23D85BC(*a1, *a2);
}

uint64_t sub_1C23D90E4(unint64_t a1, char a2)
{
  uint64_t v3 = 0;
  switch(a2)
  {
    case 1:
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        if (sub_1C2550620() == 1)
        {
          swift_bridgeObjectRetain();
          uint64_t v3 = sub_1C2550620();
          sub_1C23DC9F0((void *)a1, 1);
          if (!v3) {
            goto LABEL_15;
          }
LABEL_11:
          if ((a1 & 0xC000000000000001) != 0) {
            goto LABEL_39;
          }
          if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v7 = *(id *)(a1 + 32);
            goto LABEL_14;
          }
          __break(1u);
LABEL_41:
          id v9 = (id)MEMORY[0x1C87588E0](0, a1);
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v6 == 1) {
          goto LABEL_11;
        }
      }
      id v10 = (void *)a1;
      char v11 = 1;
      goto LABEL_35;
    case 2:
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        if (sub_1C2550620() == 1)
        {
          swift_bridgeObjectRetain();
          uint64_t v3 = sub_1C2550620();
          sub_1C23DC9F0((void *)a1, 2);
          if (!v3) {
            goto LABEL_22;
          }
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v8 == 1)
        {
LABEL_18:
          if ((a1 & 0xC000000000000001) != 0) {
            goto LABEL_41;
          }
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            JUMPOUT(0x1C23D9358);
          }
          id v9 = *(id *)(a1 + 32);
LABEL_21:
          uint64_t v3 = (uint64_t)v9;
LABEL_22:
          sub_1C23DC9F0((void *)a1, 2);
          return v3;
        }
      }
      id v10 = (void *)a1;
      char v11 = 2;
      goto LABEL_35;
    case 3:
      return v3;
    default:
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        if (sub_1C2550620() == 1)
        {
          swift_bridgeObjectRetain();
          uint64_t v3 = sub_1C2550620();
          sub_1C23DC9F0((void *)a1, 0);
          if (!v3) {
            goto LABEL_8;
          }
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v4 == 1)
        {
LABEL_4:
          if ((a1 & 0xC000000000000001) != 0)
          {
            id v5 = (id)MEMORY[0x1C87588E0](0, a1);
          }
          else
          {
            if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_39:
              id v7 = (id)MEMORY[0x1C87588E0](0, a1);
LABEL_14:
              uint64_t v3 = (uint64_t)v7;
LABEL_15:
              sub_1C23DC9F0((void *)a1, 1);
              return v3;
            }
            id v5 = *(id *)(a1 + 32);
          }
          uint64_t v3 = (uint64_t)v5;
LABEL_8:
          sub_1C23DC9F0((void *)a1, 0);
          return v3;
        }
      }
      id v10 = (void *)a1;
      char v11 = 0;
LABEL_35:
      sub_1C23DC9F0(v10, v11);
      return 0;
  }
}

unint64_t sub_1C23D9368(unint64_t a1)
{
  switch(a1 >> 61)
  {
    case 1uLL:
      id v6 = (id)(a1 & 0x1FFFFFFFFFFFFFFFLL);
      sub_1C25503A0();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000025;
      swift_getErrorValue();
      goto LABEL_7;
    case 2uLL:
      id v3 = (id)(a1 & 0x1FFFFFFFFFFFFFFFLL);
      sub_1C25503A0();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000023;
      swift_getErrorValue();
      goto LABEL_7;
    case 3uLL:
      id v7 = (id)(a1 & 0x1FFFFFFFFFFFFFFFLL);
      sub_1C25503A0();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000016;
      swift_getErrorValue();
      goto LABEL_7;
    case 4uLL:
      uint64_t v4 = __ROR8__(a1, 3);
      unint64_t result = 0xD00000000000001ALL;
      switch(v4 ^ 0x1000000000000000)
      {
        case 2:
          unint64_t result = 0xD00000000000001CLL;
          break;
        case 3:
          unint64_t result = 0xD000000000000024;
          break;
        case 4:
          unint64_t result = 0xD00000000000002BLL;
          break;
        case 5:
          unint64_t result = 0xD00000000000001CLL;
          break;
        case 6:
          unint64_t result = 0xD00000000000001CLL;
          break;
        case 7:
          unint64_t result = 0xD00000000000001ELL;
          break;
        case 8:
          unint64_t result = 0xD000000000000026;
          break;
        case 9:
          unint64_t result = 0xD00000000000002DLL;
          break;
        case 0xCLL:
          unint64_t result = 0xD00000000000001CLL;
          break;
        case 0xDLL:
          unint64_t result = 0xD00000000000001DLL;
          break;
        default:
          return result;
      }
      return result;
    default:
      id v2 = (id)a1;
      sub_1C25503A0();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000023;
      swift_getErrorValue();
LABEL_7:
      sub_1C2550940();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      sub_1C23DCC68(a1);
      return v8;
  }
}

uint64_t sub_1C23D96C0()
{
  if (!*(unsigned char *)(v0 + 16))
  {
    if (qword_1EA2DD680 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    if (qword_1EA2DD680 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (qword_1EA2DD680 != -1) {
LABEL_9:
  }
    swift_once();
LABEL_8:
  id v1 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1C23D988C()
{
  if (!*(unsigned char *)(v0 + 16))
  {
    if (qword_1EA2DD680 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    if (qword_1EA2DD680 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (qword_1EA2DD680 != -1) {
LABEL_9:
  }
    swift_once();
LABEL_8:
  id v1 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v2;
}

id sub_1C23D9A58()
{
  unint64_t v1 = v0;
  unint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(unsigned char *)(v0 + 16))
  {
    unint64_t v2 = *(void *)(v0 + 24);
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain_n();
      id v5 = (char *)sub_1C2550620();
      if (!v5) {
        goto LABEL_35;
      }
    }
    else
    {
      id v5 = *(char **)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v5) {
        goto LABEL_35;
      }
    }
    if ((v2 & 0xC000000000000001) != 0) {
      id v13 = (id)MEMORY[0x1C87588E0](0, v2);
    }
    else {
      id v13 = *(id *)(v2 + 32);
    }
    unint64_t v14 = v13;
    if (sub_1C254FDB0()) {
      goto LABEL_14;
    }

    if (v5 != (char *)1)
    {
      uint64_t v22 = 5;
      do
      {
        if ((v2 & 0xC000000000000001) != 0) {
          id v23 = (id)MEMORY[0x1C87588E0](v22 - 4, v2);
        }
        else {
          id v23 = *(id *)(v2 + 8 * v22);
        }
        unint64_t v14 = v23;
        uint64_t v24 = (char *)(v22 - 3);
        if (__OFADD__(v22 - 4, 1)) {
          goto LABEL_52;
        }
        if (sub_1C254FDB0()) {
          goto LABEL_14;
        }

        ++v22;
      }
      while (v24 != v5);
    }
LABEL_35:
    swift_bridgeObjectRelease_n();
    unint64_t v2 = *(void *)(v1 + 24);
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain_n();
      id v5 = (char *)sub_1C2550620();
      if (!v5) {
        goto LABEL_49;
      }
    }
    else
    {
      id v5 = *(char **)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v5) {
        goto LABEL_49;
      }
    }
    unint64_t v1 = v2 & 0xC000000000000001;
    if ((v2 & 0xC000000000000001) != 0) {
      id v25 = (id)MEMORY[0x1C87588E0](0, v2);
    }
    else {
      id v25 = *(id *)(v2 + 32);
    }
    unint64_t v14 = v25;
    if (sub_1C254FDD0())
    {
LABEL_14:
      swift_bridgeObjectRelease_n();

      id v10 = (id)HKHealthUIFrameworkBundle();
      char v11 = (void *)sub_1C254F430();
      id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v11, v10);
      goto LABEL_50;
    }

    if (v5 != (char *)1)
    {
      uint64_t v26 = 5;
      do
      {
        if (v1) {
          id v27 = (id)MEMORY[0x1C87588E0](v26 - 4, v2);
        }
        else {
          id v27 = *(id *)(v2 + 8 * v26);
        }
        unint64_t v14 = v27;
        id v28 = (char *)(v26 - 3);
        if (__OFADD__(v26 - 4, 1)) {
          goto LABEL_53;
        }
        if (sub_1C254FDD0()) {
          goto LABEL_14;
        }

        ++v26;
      }
      while (v28 != v5);
    }
LABEL_49:
    swift_bridgeObjectRelease_n();
    id v10 = (id)HKHealthUIFrameworkBundle();
    char v11 = (void *)sub_1C254F430();
    id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v11, v10);
    goto LABEL_50;
  }
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    unint64_t v1 = *(void *)(v0 + 24);
    if (v1 >> 62) {
      goto LABEL_54;
    }
    uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v6)
    {
      while (1)
      {
        id v7 = (v1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87588E0](0, v1) : *(id *)(v1 + 32);
        unint64_t v8 = v7;
        if (sub_1C254FDB0()) {
          break;
        }

        if (v6 != 1)
        {
          uint64_t v16 = 5;
          while (1)
          {
            id v17 = (v1 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x1C87588E0](v16 - 4, v1)
                : *(id *)(v1 + 8 * v16);
            unint64_t v8 = v17;
            uint64_t v18 = v16 - 3;
            if (__OFADD__(v16 - 4, 1)) {
              break;
            }
            if (sub_1C254FDB0()) {
              goto LABEL_8;
            }

            ++v16;
            if (v18 == v6) {
              goto LABEL_24;
            }
          }
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          swift_bridgeObjectRetain_n();
          uint64_t v6 = sub_1C2550620();
          if (v6) {
            continue;
          }
        }
        goto LABEL_24;
      }
LABEL_8:
      swift_bridgeObjectRelease_n();

      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v10 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      char v11 = (void *)sub_1C254F430();
      id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v11, v10);
    }
    else
    {
LABEL_24:
      swift_bridgeObjectRelease_n();
      sub_1C254E510();
      unint64_t v19 = sub_1C254E550();
      os_log_type_t v20 = sub_1C254FA30();
      if (os_log_type_enabled(v19, v20))
      {
        id v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v21 = 0;
        _os_log_impl(&dword_1C21A1000, v19, v20, "SignedClinicalDataPreviewViewController is in “Add to Wallet” mode but got no immunization record types, falling back to showing generic top icon", v21, 2u);
        MEMORY[0x1C875A0B0](v21, -1, -1);
      }

      (*(void (**)(char *, unint64_t))(v3 + 8))(v5, v2);
      id v10 = (id)HKHealthUIFrameworkBundle();
      char v11 = (void *)sub_1C254F430();
      id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v11, v10);
    }
  }
  else
  {
    uint64_t v15 = swift_getObjCClassFromMetadata();
    id v10 = objc_msgSend(self, sel_bundleForClass_, v15);
    char v11 = (void *)sub_1C254F430();
    id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v11, v10);
  }
LABEL_50:
  id v29 = v12;

  return v29;
}

uint64_t sub_1C23DA120()
{
  if (!*(unsigned char *)(v0 + 16))
  {
    if (qword_1EA2DD680 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    if (qword_1EA2DD680 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (qword_1EA2DD680 != -1) {
LABEL_9:
  }
    swift_once();
LABEL_8:
  id v1 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t *sub_1C23DA2F8(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v32 = *v2;
  uint64_t v33 = a2;
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_44;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = sub_1C2550620())
  {
    unint64_t v11 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) == 0)
    {
      id v12 = *(id *)(a1 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v12 = (id)MEMORY[0x1C87588E0](0, a1);
LABEL_5:
      id v13 = v12;
      if (sub_1C254FDC0())
      {
        swift_bridgeObjectRelease();
        char v14 = 0;
        goto LABEL_22;
      }

      if (v10 == 1) {
        goto LABEL_8;
      }
      uint64_t v31 = v7;
      if (v11) {
        break;
      }
      unint64_t v11 = 5;
      while (1)
      {
        uint64_t v7 = v11 - 3;
        if (__OFADD__(v11 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a1 + 8 * v11);
        if (sub_1C254FDC0())
        {
LABEL_20:
          swift_bridgeObjectRelease();
          char v14 = 0;
          goto LABEL_21;
        }

        ++v11;
        if (v7 == v10)
        {
LABEL_19:
          swift_bridgeObjectRelease();
          id v13 = 0;
          char v14 = 1;
LABEL_21:
          uint64_t v7 = v31;
          goto LABEL_22;
        }
      }
      __break(1u);
    }
    uint64_t v15 = 1;
    while (1)
    {
      uint64_t v16 = MEMORY[0x1C87588E0](v15, a1);
      uint64_t v7 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        break;
      }
      id v13 = (id)v16;
      if (sub_1C254FDC0()) {
        goto LABEL_20;
      }
      swift_unknownObjectRelease();
      ++v15;
      if (v7 == v10) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
  }
LABEL_8:
  swift_bridgeObjectRelease();
  id v13 = 0;
  char v14 = 1;
LABEL_22:

  sub_1C254E3C0();
  if ((sub_1C254E3A0() & 1) == 0)
  {
    uint64_t v17 = v33;
    if (v33)
    {
LABEL_27:
      char v18 = 0;
      goto LABEL_28;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    sub_1C23DCCC0();
    swift_allocError();
    swift_willThrow();
    type metadata accessor for SignedClinicalDataImportHandler();
    swift_deallocPartialClassInstance();
    return v4;
  }
  uint64_t v17 = v33;
  if (v33)
  {
    if (v14)
    {
      char v18 = 2;
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if ((v14 & 1) == 0) {
    goto LABEL_41;
  }
  char v18 = 1;
LABEL_28:
  *((unsigned char *)v4 + 16) = v18;
  v4[3] = a1;
  v4[4] = v17;
  swift_retain();
  sub_1C254E510();
  swift_retain_n();
  unint64_t v19 = sub_1C254E550();
  os_log_type_t v20 = sub_1C254FA40();
  if (os_log_type_enabled(v19, v20))
  {
    v30[1] = v3;
    uint64_t v31 = v7;
    v30[0] = v6;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v34 = v22;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v35 = v32;
    swift_getMetatypeMetadata();
    uint64_t v23 = sub_1C254F4F0();
    uint64_t v35 = sub_1C21AD354(v23, v24, &v34);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v25 = 0xEB0000000074656CLL;
    unint64_t v26 = 0x6C61576F54646461;
    if (*((unsigned char *)v4 + 16) != 1)
    {
      unint64_t v26 = 0xD000000000000014;
      unint64_t v25 = 0x80000001C2573F90;
    }
    if (*((unsigned char *)v4 + 16)) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 0x6165486F54646461;
    }
    if (*((unsigned char *)v4 + 16)) {
      unint64_t v28 = v25;
    }
    else {
      unint64_t v28 = 0xEB0000000068746CLL;
    }
    uint64_t v35 = sub_1C21AD354(v27, v28, &v34);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v19, v20, "%s initialized in %s mode", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v22, -1, -1);
    MEMORY[0x1C875A0B0](v21, -1, -1);

    swift_release();
    (*(void (**)(char *, void))(v31 + 8))(v9, v30[0]);
  }
  else
  {

    swift_release();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v4;
}

uint64_t sub_1C23DA804(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (a1)
  {
    uint64_t v4 = a1;
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      *(void *)(Strong + 24) = v4;
      swift_bridgeObjectRetain();
      swift_release();
      swift_bridgeObjectRelease();
    }
    a1 = 1;
  }
  return a3(a1);
}

uint64_t sub_1C23DA89C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E510();
  swift_retain_n();
  uint64_t v10 = sub_1C254E550();
  os_log_type_t v11 = sub_1C254FA40();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = v6;
    id v13 = (uint8_t *)v12;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = a1;
    uint64_t v15 = v14;
    uint64_t v26 = v14;
    uint64_t v23 = a2;
    uint64_t v24 = v5;
    *(_DWORD *)id v13 = 136315138;
    v20[1] = v13 + 4;
    swift_getMetatypeMetadata();
    uint64_t v24 = sub_1C254F4F0();
    unint64_t v25 = v16;
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_1C21AD354(v24, v25, &v26);
    a2 = v23;
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v10, v11, "%s adding records", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v17 = v15;
    a1 = v22;
    MEMORY[0x1C875A0B0](v17, -1, -1);
    MEMORY[0x1C875A0B0](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  char v18 = (void *)swift_allocObject();
  v18[2] = v2;
  v18[3] = a1;
  v18[4] = a2;
  swift_retain();
  swift_retain();
  sub_1C23DAF9C((void (*)(void, void))sub_1C23DCA80, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_1C23DABB8(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(unsigned char *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  *(void *)(v10 + 48) = a5;
  sub_1C23DCAEC(a1, a2);
  swift_retain();
  swift_retain();
  sub_1C23DBA78((unint64_t)a1, a2, (void (*)(void))sub_1C23DCAD8, v10);
  return swift_release();
}

void sub_1C23DAC78(void *a1, void *a2, char a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v11 = sub_1C254E560();
  uint64_t v28 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C23DCAEC(a2, a3);
  sub_1C23DCC10(a1);
  unint64_t v14 = sub_1C23DCB38((unint64_t)a2, a3, (unint64_t)a1);
  sub_1C254E510();
  swift_retain();
  sub_1C23DCC20(v14);
  swift_retain();
  sub_1C23DCC20(v14);
  uint64_t v15 = sub_1C254E550();
  os_log_type_t v16 = sub_1C254FA40();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    v26[0] = v11;
    uint64_t v18 = v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v30 = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v27 = a5;
    uint64_t v20 = sub_1C22E55F4();
    uint64_t v29 = sub_1C21AD354(v20, v21, &v30);
    v26[1] = a6;
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    sub_1C23DCC20(v14);
    unint64_t v22 = sub_1C23D9368(v14);
    unint64_t v24 = v23;
    sub_1C23DCC68(v14);
    uint64_t v25 = v22;
    a5 = v27;
    uint64_t v29 = sub_1C21AD354(v25, v24, &v30);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    sub_1C23DCC68(v14);
    sub_1C23DCC68(v14);
    _os_log_impl(&dword_1C21A1000, v15, v16, "%s adding records outcome: %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v19, -1, -1);
    MEMORY[0x1C875A0B0](v18, -1, -1);

    (*(void (**)(char *, void))(v28 + 8))(v13, v26[0]);
  }
  else
  {
    swift_release_n();
    sub_1C23DCC68(v14);
    sub_1C23DCC68(v14);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v11);
  }
  a5(v14);
  sub_1C23DCC68(v14);
}

uint64_t sub_1C23DAF9C(void (*a1)(void, void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)v2;
  uint64_t v7 = sub_1C254E560();
  uint64_t v33 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v29 - v11;
  if ((sub_1C23D8BCC(*(unsigned char *)(v2 + 16)) & 1) != 0 && (uint64_t v13 = *(void *)(v2 + 32)) != 0)
  {
    swift_retain();
    sub_1C254E510();
    swift_retain_n();
    unint64_t v14 = sub_1C254E550();
    os_log_type_t v15 = sub_1C254FA40();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v31 = v7;
      uint64_t v17 = (uint8_t *)v16;
      uint64_t v30 = swift_slowAlloc();
      uint64_t v36 = v30;
      uint64_t v32 = a1;
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v29 = v17 + 4;
      uint64_t v34 = v6;
      swift_getMetatypeMetadata();
      uint64_t v34 = sub_1C254F4F0();
      unint64_t v35 = v18;
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      uint64_t v34 = sub_1C21AD354(v34, v35, &v36);
      a1 = v32;
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v14, v15, "%s starting to store to Health", v17, 0xCu);
      uint64_t v19 = v30;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v19, -1, -1);
      MEMORY[0x1C875A0B0](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v31);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v7);
    }
    swift_retain();
    swift_retain();
    sub_1C2346AFC(v13, v3, (uint64_t)a1, a2);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    sub_1C254E510();
    swift_retain_n();
    uint64_t v20 = sub_1C254E550();
    os_log_type_t v21 = sub_1C254FA40();
    if (os_log_type_enabled(v20, v21))
    {
      unint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v32 = a1;
      uint64_t v24 = v23;
      uint64_t v36 = v23;
      uint64_t v31 = v7;
      *(_DWORD *)unint64_t v22 = 136315138;
      uint64_t v30 = (uint64_t)(v22 + 4);
      uint64_t v34 = v6;
      swift_getMetatypeMetadata();
      uint64_t v34 = sub_1C254F4F0();
      unint64_t v35 = v25;
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      uint64_t v34 = sub_1C21AD354(v34, v35, &v36);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v20, v21, "%s skipping storing to Health", v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v26 = v24;
      a1 = v32;
      MEMORY[0x1C875A0B0](v26, -1, -1);
      MEMORY[0x1C875A0B0](v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v31);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v7);
    }
    uint64_t v27 = swift_bridgeObjectRetain();
    a1(v27, 0);
    return swift_bridgeObjectRelease();
  }
}

void sub_1C23DB4E8(uint64_t a1, int a2, void *a3, uint64_t a4, void (*a5)(void, void), uint64_t a6)
{
  uint64_t v12 = sub_1C254E560();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  os_log_type_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v44 - v17;
  if (!a1)
  {
    sub_1C254E510();
    swift_retain();
    id v28 = a3;
    swift_retain();
    id v29 = a3;
    uint64_t v30 = sub_1C254E550();
    os_log_type_t v31 = sub_1C254FA20();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v49 = v13;
      uint64_t v45 = v12;
      uint64_t v46 = a6;
      id v47 = a5;
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v51 = v33;
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v34 = sub_1C22E55F4();
      uint64_t v50 = sub_1C21AD354(v34, v35, &v51);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      if (a3)
      {
        swift_getErrorValue();
        uint64_t v36 = sub_1C2550940();
        unint64_t v38 = v37;
      }
      else
      {
        unint64_t v38 = 0xEB000000007D726FLL;
        uint64_t v36 = 0x727265206C696E7BLL;
      }
      uint64_t v50 = sub_1C21AD354(v36, v38, &v51);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v30, v31, "%s failed to store to Health: %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v33, -1, -1);
      MEMORY[0x1C875A0B0](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v45);
      a5 = v47;
      id v40 = a3;
      if (a3) {
        goto LABEL_17;
      }
    }
    else
    {
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
      id v40 = a3;
      if (a3)
      {
LABEL_17:
        id v43 = a3;
        a5(v40, 3);

        return;
      }
    }
    id v41 = self;
    id v42 = (void *)sub_1C254F430();
    id v40 = objc_msgSend(v41, sel_hk_error_description_, 0, v42);

    goto LABEL_17;
  }
  int v48 = a2;
  uint64_t v49 = v13;
  *(void *)(a4 + 24) = a1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1C254E510();
  swift_retain_n();
  uint64_t v19 = sub_1C254E550();
  os_log_type_t v20 = sub_1C254FA40();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v46 = a6;
    unint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    id v47 = a5;
    uint64_t v24 = v23;
    uint64_t v51 = v23;
    *(_DWORD *)unint64_t v22 = 136315138;
    uint64_t v45 = v12;
    uint64_t v25 = sub_1C22E55F4();
    uint64_t v50 = sub_1C21AD354(v25, v26, &v51);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v19, v20, "%s stored to Health", v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v27 = v24;
    a5 = v47;
    MEMORY[0x1C875A0B0](v27, -1, -1);
    MEMORY[0x1C875A0B0](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v45);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v12);
  }
  if (v48) {
    uint64_t v39 = 2;
  }
  else {
    uint64_t v39 = 1;
  }
  a5(a1, v39);
  swift_bridgeObjectRelease();
}

void sub_1C23DBA78(unint64_t a1, char a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *(void *)v5;
  uint64_t v52 = sub_1C254E560();
  uint64_t v11 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v46 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v46 - v18;
  char v20 = sub_1C23D8CDC(*(unsigned char *)(v5 + 16));
  uint64_t v51 = a3;
  if ((v20 & 1) == 0)
  {
    uint64_t v50 = a4;
    sub_1C254E510();
    swift_retain_n();
    os_log_type_t v31 = sub_1C254E550();
    os_log_type_t v32 = sub_1C254FA40();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v59 = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      id v49 = v33 + 4;
      uint64_t aBlock = v10;
      swift_getMetatypeMetadata();
      uint64_t aBlock = sub_1C254F4F0();
      unint64_t v54 = v35;
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      uint64_t aBlock = sub_1C21AD354(aBlock, v54, &v59);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v31, v32, "%s skipping adding to Wallet (not in add-to-Wallet mode)", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v34, -1, -1);
      MEMORY[0x1C875A0B0](v33, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v52);
    goto LABEL_15;
  }
  uint64_t v21 = sub_1C23D90E4(a1, a2);
  if (!v21)
  {
    sub_1C254E510();
    swift_retain_n();
    uint64_t v36 = sub_1C254E550();
    os_log_type_t v37 = sub_1C254FA40();
    if (os_log_type_enabled(v36, v37))
    {
      unint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v50 = a4;
      uint64_t v40 = v39;
      uint64_t v59 = v39;
      *(_DWORD *)unint64_t v38 = 136315138;
      id v49 = v38 + 4;
      uint64_t aBlock = v10;
      swift_getMetatypeMetadata();
      uint64_t aBlock = sub_1C254F4F0();
      unint64_t v54 = v41;
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      uint64_t aBlock = sub_1C21AD354(aBlock, v54, &v59);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v36, v37, "%s skipping adding to Wallet (may not proceed given Health outcome)", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v40, -1, -1);
      MEMORY[0x1C875A0B0](v38, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v52);
LABEL_15:
    v51(0);
    return;
  }
  unint64_t v22 = (void *)v21;
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  id v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F677D0]), sel_initWithHealthStore_, v23);
  sub_1C254E510();
  swift_retain_n();
  uint64_t v24 = sub_1C254E550();
  os_log_type_t v25 = sub_1C254FA40();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v50 = a4;
    uint64_t v27 = (uint8_t *)v26;
    uint64_t v47 = swift_slowAlloc();
    uint64_t v59 = v47;
    id v48 = v23;
    *(_DWORD *)uint64_t v27 = 136315138;
    uint64_t v46 = v27 + 4;
    uint64_t aBlock = v10;
    swift_getMetatypeMetadata();
    uint64_t aBlock = sub_1C254F4F0();
    unint64_t v54 = v28;
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t aBlock = sub_1C21AD354(aBlock, v54, &v59);
    id v23 = v48;
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v24, v25, "%s starting to fetch SCD group", v27, 0xCu);
    uint64_t v29 = v47;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v29, -1, -1);
    uint64_t v30 = v27;
    a4 = v50;
    MEMORY[0x1C875A0B0](v30, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v52);
  id v42 = (void *)swift_allocObject();
  id v43 = v51;
  v42[2] = v5;
  v42[3] = v43;
  v42[4] = a4;
  id v57 = sub_1C23DC9DC;
  id v58 = v42;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v54 = 1107296256;
  uint64_t v55 = sub_1C23447F8;
  uint64_t v56 = &block_descriptor_48;
  uint64_t v44 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id v45 = v49;
  objc_msgSend(v49, sel_fetchSignedClinicalDataGroupBackingMedicalRecord_options_completion_, v22, 11, v44);
  _Block_release(v44);
}

void sub_1C23DC250(void *a1, void *a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v9 = sub_1C254E560();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v42 - v14;
  if (a1)
  {
    id v16 = a1;
    sub_1C254E510();
    swift_retain_n();
    uint64_t v17 = sub_1C254E550();
    os_log_type_t v18 = sub_1C254FA40();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      id v43 = a4;
      char v20 = (uint8_t *)v19;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v44 = v10;
      uint64_t v22 = v21;
      uint64_t v47 = v21;
      uint64_t v45 = v9;
      *(_DWORD *)char v20 = 136315138;
      id v42 = v16;
      uint64_t v23 = sub_1C22E55F4();
      uint64_t v46 = sub_1C21AD354(v23, v24, &v47);
      id v16 = v42;
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v17, v18, "%s got SCD group, attempting to add to Wallet", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v22, -1, -1);
      os_log_type_t v25 = v20;
      a4 = v43;
      MEMORY[0x1C875A0B0](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v45);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
    type metadata accessor for SignedClinicalDataWalletHandler();
    swift_allocObject();
    sub_1C22E4440(v16, a4, a5);

    swift_release();
  }
  else
  {
    uint64_t v44 = v10;
    uint64_t v45 = v9;
    if (a2)
    {
      id v26 = a2;
    }
    else
    {
      uint64_t v27 = self;
      unint64_t v28 = a4;
      uint64_t v29 = (void *)sub_1C254F430();
      id v26 = objc_msgSend(v27, sel_hk_error_description_, 0, v29);

      a4 = v28;
    }
    id v30 = a2;
    sub_1C254E510();
    swift_retain();
    id v31 = v26;
    swift_retain();
    id v32 = v26;
    uint64_t v33 = sub_1C254E550();
    os_log_type_t v34 = sub_1C254FA20();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v47 = v36;
      *(_DWORD *)uint64_t v35 = 136315394;
      id v43 = a4;
      uint64_t v37 = sub_1C22E55F4();
      uint64_t v46 = sub_1C21AD354(v37, v38, &v47);
      id v42 = (id)a5;
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v39 = sub_1C2550940();
      uint64_t v46 = sub_1C21AD354(v39, v40, &v47);
      a4 = v43;
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v33, v34, "%s failed to fetch SCD group: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v36, -1, -1);
      MEMORY[0x1C875A0B0](v35, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v45);
    id v41 = v26;
    a4((uint64_t)v26);
  }
}

uint64_t sub_1C23DC7A4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SignedClinicalDataImportHandler()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for SignedClinicalDataImportHandler.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C23DC8D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignedClinicalDataImportHandler.Mode()
{
  return &type metadata for SignedClinicalDataImportHandler.Mode;
}

unint64_t sub_1C23DC910()
{
  unint64_t result = qword_1EA2E2B38;
  if (!qword_1EA2E2B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2B38);
  }
  return result;
}

unint64_t sub_1C23DC964()
{
  return 0xD000000000000015;
}

uint64_t sub_1C23DC98C()
{
  unint64_t v0 = sub_1C25506C0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

void sub_1C23DC9DC(void *a1, void *a2)
{
  sub_1C23DC250(a1, a2, *(void *)(v2 + 16), *(void (**)(uint64_t))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t block_destroy_helper_43()
{
  return swift_release();
}

void sub_1C23DC9F0(void *a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      break;
    case 3:

      break;
    default:
      return;
  }
}

uint64_t objectdestroyTm_8()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C23DCA80(void *a1, char a2)
{
  return sub_1C23DABB8(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1C23DCA8C()
{
  sub_1C23DC9F0(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C23DCAD8(void *a1)
{
  sub_1C23DAC78(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(void))(v1 + 40), *(void *)(v1 + 48));
}

id sub_1C23DCAEC(id result, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 3:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C23DCB38(unint64_t a1, char a2, unint64_t a3)
{
  switch(a2)
  {
    case 1:
      sub_1C23DC9F0((void *)a1, 1);
      if (a3 >= 5) {
        uint64_t result = a3;
      }
      else {
        uint64_t result = (8 * a3) | 0x8000000000000000;
      }
      break;
    case 2:
      sub_1C23DC9F0((void *)a1, 2);
      if (a3 >= 5) {
        uint64_t result = a3 | 0x2000000000000000;
      }
      else {
        uint64_t result = 8 * a3 - 0x7FFFFFFFFFFFFFD8;
      }
      break;
    case 3:
      sub_1C23DCCB0((id)a3);
      uint64_t result = a1 | 0x6000000000000000;
      break;
    default:
      sub_1C23DC9F0((void *)a1, 0);
      if (a3 >= 5) {
        uint64_t result = a3 | 0x4000000000000000;
      }
      else {
        uint64_t result = qword_1C25687E0[a3];
      }
      break;
  }
  return result;
}

id sub_1C23DCC10(id result)
{
  if ((unint64_t)result >= 5) {
    return result;
  }
  return result;
}

unint64_t sub_1C23DCC20(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
      goto LABEL_3;
    case 1uLL:
    case 2uLL:
    case 3uLL:
      result &= 0x1FFFFFFFFFFFFFFFuLL;
LABEL_3:
      uint64_t result = (unint64_t)(id)result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1C23DCC68(unint64_t a1)
{
  switch(a1 >> 61)
  {
    case 0uLL:
      goto LABEL_3;
    case 1uLL:
    case 2uLL:
    case 3uLL:
      a1 &= 0x1FFFFFFFFFFFFFFFuLL;
LABEL_3:

      break;
    default:
      return;
  }
}

void sub_1C23DCCB0(id a1)
{
  if ((unint64_t)a1 >= 5) {
}
  }

unint64_t sub_1C23DCCC0()
{
  unint64_t result = qword_1EA2E2B40;
  if (!qword_1EA2E2B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2B40);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SignedClinicalDataImportHandlerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C23DCDB0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SignedClinicalDataImportHandlerError()
{
  return &type metadata for SignedClinicalDataImportHandlerError;
}

unint64_t sub_1C23DCDF0()
{
  unint64_t result = qword_1EA2E2B48;
  if (!qword_1EA2E2B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2B48);
  }
  return result;
}

unint64_t sub_1C23DCE84()
{
  return 0xD000000000000014;
}

id AccountTableViewCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  if (a3)
  {
    unsigned int v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

char *AccountTableViewCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C23DDA00(a2, a3);
}

char *sub_1C23DCF64(void *a1)
{
  uint64_t v3 = OBJC_IVAR___HRAccountTableViewCell_brandView;
  double v4 = *MEMORY[0x1E4F1DB20];
  double v5 = *(double *)(MEMORY[0x1E4F1DB20] + 8);
  double v6 = *(double *)(MEMORY[0x1E4F1DB20] + 16);
  double v7 = *(double *)(MEMORY[0x1E4F1DB20] + 24);
  id v8 = objc_allocWithZone((Class)WDMedicalRecordBrandView);
  uint64_t v9 = v1;
  *(void *)&v1[v3] = objc_msgSend(v8, sel_initWithFrame_, v4, v5, v6, v7);

  v17.receiver = v9;
  v17.super_class = (Class)type metadata accessor for AccountTableViewCell();
  uint64_t v10 = (char *)objc_msgSendSuper2(&v17, sel_initWithCoder_, a1);
  uint64_t v11 = v10;
  if (v10)
  {
    uint64_t v12 = *(void **)&v10[OBJC_IVAR___HRAccountTableViewCell_brandView];
    uint64_t v13 = v10;
    objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v12, sel_setLogoSize_, 36.0);
    id v14 = objc_msgSend(v13, sel_contentView);
    objc_msgSend(v14, sel_addSubview_, v12);

    id v15 = objc_msgSend(v13, sel_contentView);
    if (qword_1EA2DD958 != -1) {
      swift_once();
    }
    objc_msgSend(v12, sel_hk_alignConstraintsWithView_insets_, v15, xmmword_1EA2E52A8, *(double *)&qword_1EA2E52B8, unk_1EA2E52C0);
  }
  else
  {
    id v15 = a1;
  }

  return v11;
}

void sub_1C23DD14C(void *a1, uint64_t a2)
{
}

void sub_1C23DD16C(void *a1, uint64_t a2)
{
}

void sub_1C23DD18C(void *a1, uint64_t a2, void *a3, void *a4, char a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a1;
  sub_1C23DD224(v8, 0, (uint64_t)v9, 0, 0, a5);
}

void sub_1C23DD224(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v48 = a4;
  sub_1C23DDC84();
  MEMORY[0x1F4188790](v12 - 8);
  id v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  uint64_t v16 = *(void *)(v15 - 8);
  *(void *)&double v17 = MEMORY[0x1F4188790](v15).n128_u64[0];
  uint64_t v47 = (uint64_t)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v49 = v6;
  uint64_t v19 = *(void **)(v6 + OBJC_IVAR___HRAccountTableViewCell_brandView);
  objc_msgSend(v19, sel_setBrandable_dataProvider_, a1, a3, v17);
  if (a6) {
    goto LABEL_7;
  }
  if (qword_1EA2DD8D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (byte_1EA2E4618 != 1) {
    goto LABEL_7;
  }
  id v20 = a2;
  id v21 = a1;
  sub_1C22AD574(v21, a2, 0, 0, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1C23DDCDC((uint64_t)v14, (uint64_t (*)(void))sub_1C23DDC84);
LABEL_7:
    id v22 = objc_msgSend(v19, sel_brandSubtitleLabel);
    id v23 = objc_msgSend(a1, sel_subtitle);
    objc_msgSend(v22, sel_setText_, v23);

    id v24 = objc_msgSend(v19, sel_brandSubtitleLabel);
    id v25 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v24, sel_setTextColor_, v25);

    id v26 = objc_msgSend(v19, sel_brandSubtitleLabel);
    objc_msgSend(v26, sel_setNumberOfLines_, 1);

    goto LABEL_8;
  }
  sub_1C2223DC4((uint64_t)v14, v47);
  id v38 = objc_msgSend(v19, sel_brandSubtitleLabel);
  sub_1C22AE030();
  if (v39) {
    goto LABEL_14;
  }
  id v40 = objc_msgSend(v21, sel_subtitle);
  if (v40)
  {
    id v41 = v40;
    sub_1C254F470();

LABEL_14:
    uint64_t v42 = v47;
    id v43 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  id v43 = 0;
  uint64_t v42 = v47;
LABEL_15:
  objc_msgSend(v38, sel_setText_, v43);

  id v44 = objc_msgSend(v19, sel_brandSubtitleLabel);
  if ((*(void *)(v42 + *(int *)(v15 + 20)) | 2) == 3
    || (id v45 = objc_msgSend(self, sel_hk_appErrorColor)) == 0)
  {
    id v45 = objc_msgSend(self, sel_secondaryLabelColor);
  }
  objc_msgSend(v44, sel_setTextColor_, v45);

  id v46 = objc_msgSend(v19, sel_brandSubtitleLabel);
  objc_msgSend(v46, sel_setNumberOfLines_, 0);

  sub_1C23DDCDC(v42, (uint64_t (*)(void))type metadata accessor for ClinicalAccountLoginUpgradeAction);
LABEL_8:
  uint64_t v27 = (void *)v49;
  objc_msgSend((id)v49, sel_setAccessoryType_, 1);
  if (a5)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = v48;
    uint64_t v29 = (void *)sub_1C254F430();
    objc_msgSend(v27, sel_setAccessibilityIdentifier_, v29);

    id v30 = objc_msgSend(v19, sel_brandTitleLabel);
    sub_1C2201F2C();
    uint64_t v31 = swift_allocObject();
    long long v49 = xmmword_1C255CDA0;
    *(_OWORD *)(v31 + 16) = xmmword_1C255CDA0;
    *(void *)(v31 + 32) = v28;
    *(void *)(v31 + 40) = a5;
    *(void *)(v31 + 48) = 0x656C746954;
    *(void *)(v31 + 56) = 0xE500000000000000;
    swift_bridgeObjectRetain();
    id v32 = (void *)sub_1C254F700();
    id v33 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v30, sel_setAccessibilityIdentifier_, v33);
    swift_bridgeObjectRelease();

    id v34 = objc_msgSend(v19, sel_brandSubtitleLabel);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v49;
    *(void *)(v35 + 32) = v28;
    *(void *)(v35 + 40) = a5;
    *(void *)(v35 + 48) = 0x656C746974627553;
    *(void *)(v35 + 56) = 0xE800000000000000;
    uint64_t v36 = (void *)sub_1C254F700();
    id v37 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v34, sel_setAccessibilityIdentifier_, v37);
    swift_bridgeObjectRelease();
  }
}

void sub_1C23DD9AC()
{
}

id AccountTableViewCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountTableViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

char *sub_1C23DDA00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR___HRAccountTableViewCell_brandView;
  double v5 = *MEMORY[0x1E4F1DB20];
  double v6 = *(double *)(MEMORY[0x1E4F1DB20] + 8);
  double v7 = *(double *)(MEMORY[0x1E4F1DB20] + 16);
  double v8 = *(double *)(MEMORY[0x1E4F1DB20] + 24);
  id v9 = objc_allocWithZone((Class)WDMedicalRecordBrandView);
  id v10 = v2;
  *(void *)&v2[v4] = objc_msgSend(v9, sel_initWithFrame_, v5, v6, v7, v8);

  if (a2)
  {
    uint64_t v11 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  v18.receiver = v10;
  v18.super_class = (Class)type metadata accessor for AccountTableViewCell();
  uint64_t v12 = (char *)objc_msgSendSuper2(&v18, sel_initWithStyle_reuseIdentifier_, 3, v11);

  uint64_t v13 = *(void **)&v12[OBJC_IVAR___HRAccountTableViewCell_brandView];
  id v14 = v12;
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v13, sel_setLogoSize_, 36.0);
  id v15 = objc_msgSend(v14, sel_contentView);
  objc_msgSend(v15, sel_addSubview_, v13);

  id v16 = objc_msgSend(v14, sel_contentView);
  if (qword_1EA2DD958 != -1) {
    swift_once();
  }
  objc_msgSend(v13, sel_hk_alignConstraintsWithView_insets_, v16, xmmword_1EA2E52A8, *(double *)&qword_1EA2E52B8, unk_1EA2E52C0);

  return v14;
}

uint64_t type metadata accessor for AccountTableViewCell()
{
  return self;
}

uint64_t method lookup function for AccountTableViewCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountTableViewCell);
}

uint64_t dispatch thunk of AccountTableViewCell.configureWithAccountDataProviderForObjC(_:_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AccountTableViewCell.configureIgnoreActionWithAccountDataProviderForObjC(_:_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

void sub_1C23DDC84()
{
  if (!qword_1EA2DEA08)
  {
    type metadata accessor for ClinicalAccountLoginUpgradeAction();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DEA08);
    }
  }
}

uint64_t sub_1C23DDCDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C23DDD3C()
{
  (*(void (**)(void))(v0 + 16))();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C23DDD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  uint64_t v13 = sub_1C254FC60();
  uint64_t v3 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  double v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254FC00();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1C254F200();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v12 = OBJC_IVAR____TtC15HealthRecordsUI18PDFReportGenerator_queue;
  unint64_t v11 = sub_1C22023A4();
  sub_1C254F1E0();
  uint64_t v16 = MEMORY[0x1E4FBC860];
  sub_1C23DFFD4((unint64_t *)&qword_1EBB6FF88, MEMORY[0x1E4FBCC10]);
  double v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C23E001C(0, &qword_1EBB6FF50, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C23DF664((unint64_t *)&qword_1EBB6FF58, &qword_1EBB6FF50, v8);
  sub_1C2550200();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC58], v13);
  *(void *)(v2 + v12) = sub_1C254FCB0();
  uint64_t v9 = v15;
  *(void *)(v2 + 16) = v14;
  sub_1C22179D4(v9, v2 + OBJC_IVAR____TtC15HealthRecordsUI18PDFReportGenerator_configuration);
  return v2;
}

unsigned char *sub_1C23DE034(unsigned char *result)
{
  *unint64_t result = 1;
  return result;
}

uint64_t sub_1C23DE040(os_unfair_lock_s *a1)
{
  uint64_t v1 = a1 + 4;
  uint64_t v2 = a1 + 5;
  os_unfair_lock_lock(a1 + 5);
  sub_1C23DE09C(v1, &v4);
  os_unfair_lock_unlock(v2);
  return v4;
}

unsigned char *sub_1C23DE09C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C23DE0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v27 = a5;
  int v31 = a4;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v32 = a1;
  uint64_t v35 = a7;
  uint64_t v10 = _s13ConfigurationVMa();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C23DEF38();
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 20) = 0;
  *(unsigned char *)(v14 + 16) = 0;
  uint64_t v34 = type metadata accessor for PDFReportGenerator.CancellationToken();
  uint64_t v15 = swift_allocObject();
  uint64_t v33 = v15;
  *(void *)(v15 + 16) = sub_1C23DEF98;
  *(void *)(v15 + 24) = v14;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = sub_1C23DEFF8;
  v16[3] = v14;
  void v16[4] = a5;
  void v16[5] = a6;
  id v28 = *(id *)(v7 + 16);
  sub_1C22177F8(v7 + OBJC_IVAR____TtC15HealthRecordsUI18PDFReportGenerator_configuration, (uint64_t)v13);
  unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v18 = (v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1C23DF040;
  *(void *)(v19 + 24) = v16;
  uint64_t v20 = v29;
  *(void *)(v19 + 32) = v7;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 48) = v30;
  *(unsigned char *)(v19 + 56) = v31 & 1;
  *(void *)(v19 + 64) = v32;
  sub_1C22179D4((uint64_t)v13, v19 + v17);
  id v21 = (uint64_t (**)())(v19 + v18);
  *id v21 = sub_1C23DEFF8;
  v21[1] = (uint64_t (*)())v14;
  id v22 = (void *)(v19 + ((v18 + 23) & 0xFFFFFFFFFFFFFFF8));
  *id v22 = v27;
  v22[1] = a6;
  aBlock[4] = sub_1C23DF2BC;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224DAAC;
  aBlock[3] = &block_descriptor_49;
  id v23 = _Block_copy(aBlock);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v28, sel_hk_fetchExistingDemographicInformationWithCompletion_, v23);
  _Block_release(v23);
  id v24 = v35;
  v35[3] = v34;
  swift_release();
  uint64_t result = swift_release();
  *id v24 = v33;
  return result;
}

uint64_t sub_1C23DE388(void *a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  id v53 = a1;
  uint64_t v54 = a8;
  int v52 = a7;
  uint64_t v50 = a5;
  uint64_t v51 = a6;
  uint64_t v16 = sub_1C254F1C0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C254F200();
  uint64_t v55 = *(void *)(v20 - 8);
  uint64_t v56 = v20;
  MEMORY[0x1F4188790](v20);
  id v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = _s13ConfigurationVMa();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  uint64_t v26 = MEMORY[0x1F4188790](v23 - 8);
  uint64_t v27 = (char *)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = a2(v26);
  if ((result & 1) == 0)
  {
    uint64_t v45 = a12;
    uint64_t v46 = a13;
    uint64_t v43 = a10;
    uint64_t v44 = a11;
    uint64_t v49 = *(void *)(a4 + OBJC_IVAR____TtC15HealthRecordsUI18PDFReportGenerator_queue);
    sub_1C22177F8(a9, (uint64_t)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v29 = (*(unsigned __int8 *)(v24 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    unint64_t v30 = (v25 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v48 = v17;
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = a2;
    *(void *)(v31 + 24) = a3;
    uint64_t v47 = v16;
    uint64_t v32 = v53;
    uint64_t v33 = v54;
    uint64_t v34 = v50;
    *(void *)(v31 + 32) = v53;
    *(void *)(v31 + 40) = v34;
    *(void *)(v31 + 48) = v51;
    *(unsigned char *)(v31 + 56) = v52 & 1;
    *(void *)(v31 + 64) = v33;
    sub_1C22179D4((uint64_t)v27, v31 + v29);
    uint64_t v35 = (void *)(v31 + v30);
    uint64_t v36 = v44;
    *uint64_t v35 = v43;
    v35[1] = v36;
    id v37 = (void *)(v31 + ((v30 + 23) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v38 = v46;
    *id v37 = v45;
    v37[1] = v38;
    aBlock[4] = sub_1C23DF5AC;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_17_0;
    uint64_t v39 = _Block_copy(aBlock);
    swift_retain();
    id v40 = v32;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1C254F1E0();
    uint64_t v57 = MEMORY[0x1E4FBC860];
    sub_1C23DFFD4((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    id v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C23E001C(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C23DF664((unint64_t *)&qword_1EBB6FF40, (unint64_t *)&qword_1EBB6FF30, v41);
    uint64_t v42 = v47;
    sub_1C2550200();
    MEMORY[0x1C87581B0](0, v22, v19, v39);
    _Block_release(v39);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v42);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v22, v56);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C23DE7B4(uint64_t (*a1)(void), uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t), uint64_t a10, void (*a11)(uint64_t, unint64_t, uint64_t, uint64_t), uint64_t a12)
{
  LODWORD(v69) = a6;
  uint64_t v18 = sub_1C254C780();
  uint64_t v64 = *(void *)(v18 - 8);
  uint64_t v65 = v18;
  MEMORY[0x1F4188790](v18);
  id v63 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C254CBE0();
  uint64_t v58 = *(void *)(v20 - 8);
  uint64_t v59 = v20;
  MEMORY[0x1F4188790](v20);
  id v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1C254CCC0();
  uint64_t v61 = *(void *)(v23 - 8);
  uint64_t v62 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v67 = (uint64_t)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1C254CAD0();
  uint64_t v66 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  unint64_t v60 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C23DFF88(0, &qword_1EA2DE7A0, (uint64_t)&_s13HealthKitDataVN, (uint64_t (*)(void, uint64_t))_s7PDFDataVMa);
  uint64_t v27 = v26;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  unint64_t v30 = (char *)&v57 - v29;
  uint64_t result = ((uint64_t (*)(uint64_t))a1)(v28);
  if ((result & 1) == 0)
  {
    sub_1C22177F8(a8, (uint64_t)&v30[*(int *)(v27 + 28)]);
    *(void *)unint64_t v30 = a3;
    *((void *)v30 + 1) = a4;
    *((void *)v30 + 2) = a5;
    v30[24] = v69 & 1;
    *((void *)v30 + 4) = a7;
    id v32 = a3;
    uint64_t v33 = swift_bridgeObjectRetain();
    if ((((uint64_t (*)(uint64_t))a1)(v33) & 1) == 0)
    {
      uint64_t v34 = sub_1C239995C((unint64_t)v30, a9, a10);
      if (v35 >> 60 == 15)
      {
        a11(0, 0, 0, 0);
      }
      else
      {
        uint64_t v36 = v34;
        unint64_t v37 = v35;
        if (a1())
        {
          sub_1C23DF6C8((uint64_t)v30);
          return sub_1C22071AC(v36, v37);
        }
        uint64_t v38 = a8 + *(int *)(_s13ConfigurationVMa() + 20);
        uint64_t v69 = v36;
        uint64_t v39 = (uint64_t)v60;
        (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v60, v38, v68);
        uint64_t v41 = v58;
        uint64_t v40 = v59;
        (*(void (**)(char *, void, uint64_t))(v58 + 104))(v22, *MEMORY[0x1E4F27B20], v59);
        sub_1C254CBF0();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v40);
        uint64_t v42 = v63;
        sub_1C254C770();
        id v43 = objc_msgSend(v32, sel_firstName);
        sub_1C254F470();
        uint64_t v59 = a12;

        sub_1C254C740();
        id v44 = objc_msgSend(v32, sel_lastName);
        sub_1C254F470();

        sub_1C254C750();
        uint64_t v45 = self;
        uint64_t v46 = (void *)sub_1C254C760();
        id v47 = objc_msgSend(v45, sel_localizedStringFromPersonNameComponents_style_options_, v46, 2, 0);

        uint64_t v48 = sub_1C254F470();
        uint64_t v50 = v49;

        sub_1C23DFF88(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
        *(void *)(inited + 32) = v48;
        *(void *)(inited + 40) = v50;
        uint64_t v52 = v67;
        uint64_t v53 = sub_1C23DF748(v39, inited, v67, 1);
        uint64_t v55 = v54;
        swift_setDeallocating();
        swift_arrayDestroy();
        (*(void (**)(char *, uint64_t))(v64 + 8))(v42, v65);
        (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v52, v62);
        (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v39, v68);
        uint64_t v56 = v69;
        sub_1C2205E14(v69, v37);
        a11(v56, v37, v53, v55);
        sub_1C2205E6C(v56, v37);
        swift_bridgeObjectRelease();
        sub_1C22071AC(v56, v37);
      }
    }
    return sub_1C23DF6C8((uint64_t)v30);
  }
  return result;
}

uint64_t sub_1C23DEDA4()
{
  sub_1C221810C(v0 + OBJC_IVAR____TtC15HealthRecordsUI18PDFReportGenerator_configuration);
  return swift_deallocClassInstance();
}

uint64_t sub_1C23DEE20()
{
  return type metadata accessor for PDFReportGenerator();
}

uint64_t type metadata accessor for PDFReportGenerator()
{
  uint64_t result = qword_1EA2E2B60;
  if (!qword_1EA2E2B60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C23DEE74()
{
  uint64_t result = _s13ConfigurationVMa();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for PDFReportGenerator.CancellationToken()
{
  return self;
}

void sub_1C23DEF38()
{
  if (!qword_1EA2E2B70)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C2550430();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2B70);
    }
  }
}

void sub_1C23DEF98()
{
  os_unfair_lock_lock((os_unfair_lock_t)(v0 + 20));
  sub_1C23DE034((unsigned char *)(v0 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v0 + 20));
}

uint64_t sub_1C23DEFF8()
{
  return sub_1C23DE040(v0);
}

uint64_t sub_1C23DF000()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C23DF040()
{
  uint64_t v1 = *(void (**)(void, void, void, void))(v0 + 32);
  char v2 = (*(uint64_t (**)(void))(v0 + 16))();
  if (v2) {
    v1(0, 0, 0, 0);
  }
  return v2 & 1;
}

uint64_t sub_1C23DF0A0()
{
  uint64_t v1 = (int *)(_s13ConfigurationVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 72) & ~v2;
  uint64_t v12 = v2 | 7;
  unint64_t v4 = (((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C254CCC0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v0 + v3, v5);
  uint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = sub_1C254CAD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  uint64_t v9 = v0 + v3 + v1[11];
  uint64_t v10 = sub_1C254CBD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  v6(v0 + v3 + v1[14], v5);
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, v4 + 16, v12);
}

uint64_t sub_1C23DF2BC(void *a1)
{
  uint64_t v3 = *(void *)(_s13ConfigurationVMa() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1C23DE388(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void *)(v1 + 64), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v5 + 8), *(void *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t block_destroy_helper_44()
{
  return swift_release();
}

uint64_t sub_1C23DF390()
{
  uint64_t v1 = (int *)(_s13ConfigurationVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 72) & ~v2;
  uint64_t v12 = v2 | 7;
  unint64_t v4 = (((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C254CCC0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v0 + v3, v5);
  uint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = sub_1C254CAD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  uint64_t v9 = v0 + v3 + v1[11];
  uint64_t v10 = sub_1C254CBD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  v6(v0 + v3 + v1[14], v5);
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, v4 + 16, v12);
}

uint64_t sub_1C23DF5AC()
{
  uint64_t v1 = *(void *)(_s13ConfigurationVMa() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1C23DE7B4(*(uint64_t (**)(void))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void *)(v0 + 64), v0 + v2, *(uint64_t (**)(uint64_t))(v0 + v3), *(void *)(v0 + v3 + 8), *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1C23DF664(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C23E001C(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C23DF6C8(uint64_t a1)
{
  sub_1C23DFF88(0, &qword_1EA2DE7A0, (uint64_t)&_s13HealthKitDataVN, (uint64_t (*)(void, uint64_t))_s7PDFDataVMa);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C23DF748(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v57 = a4;
  uint64_t v58 = a1;
  uint64_t v5 = sub_1C254CD20();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v56[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C23E001C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v56[-v10];
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  uint64_t v13 = (void *)sub_1C254CC30();
  objc_msgSend(v12, sel_setCalendar_, v13);

  sub_1C254CC70();
  uint64_t v14 = sub_1C254CBD0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = 0;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14) != 1)
  {
    uint64_t v16 = (void *)sub_1C254CB80();
    (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v11, v14);
  }
  objc_msgSend(v12, sel_setLocale_, v16);

  sub_1C254CC90();
  uint64_t v17 = (void *)sub_1C254CD10();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v12, sel_setTimeZone_, v17);

  uint64_t v18 = (void *)sub_1C254F430();
  objc_msgSend(v12, sel_setDateFormat_, v18);

  sub_1C23DFF88(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C255CD90;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v20 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C254C730();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();

  *(void *)(v19 + 32) = v21;
  *(void *)(v19 + 40) = v23;
  uint64_t v65 = (void *)v19;
  uint64_t v24 = *(void *)(a2 + 16);
  if (v24)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = (uint64_t *)(a2 + 40);
    uint64_t v26 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v30 = *(v25 - 1);
      uint64_t v31 = *v25;
      uint64_t v32 = HIBYTE(*v25) & 0xF;
      if ((*v25 & 0x2000000000000000) == 0) {
        uint64_t v32 = v30 & 0xFFFFFFFFFFFFLL;
      }
      if (v32)
      {
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        id v63 = (void *)v26;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C2274764(0, *(void *)(v26 + 16) + 1, 1);
          uint64_t v26 = (uint64_t)v63;
        }
        unint64_t v28 = *(void *)(v26 + 16);
        unint64_t v27 = *(void *)(v26 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_1C2274764(v27 > 1, v28 + 1, 1);
          uint64_t v26 = (uint64_t)v63;
        }
        *(void *)(v26 + 16) = v28 + 1;
        uint64_t v29 = v26 + 16 * v28;
        *(void *)(v29 + 32) = v30;
        *(void *)(v29 + 40) = v31;
      }
      v25 += 2;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
  }
  sub_1C2272294(v26);
  uint64_t v34 = (void *)sub_1C254CA50();
  id v35 = objc_msgSend(v12, sel_stringFromDate_, v34);

  uint64_t v36 = sub_1C254F470();
  uint64_t v38 = v37;

  uint64_t v39 = v65;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v39 = sub_1C226BFC0(0, v39[2] + 1, 1, v39);
  }
  unint64_t v41 = v39[2];
  unint64_t v40 = v39[3];
  if (v41 >= v40 >> 1) {
    uint64_t v39 = sub_1C226BFC0((void *)(v40 > 1), v41 + 1, 1, v39);
  }
  v39[2] = v41 + 1;
  uint64_t v42 = &v39[2 * v41];
  v42[4] = v36;
  v42[5] = v38;
  swift_bridgeObjectRelease();
  id v63 = v39;
  id v43 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C23DFF88(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C226BF44();
  uint64_t v44 = sub_1C254F390();
  uint64_t v46 = v45;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v57)
  {
    objc_msgSend(v12, sel_setDateStyle_, 0);
    objc_msgSend(v12, sel_setTimeStyle_, 2);
    id v47 = (void *)sub_1C254CA50();
    id v48 = objc_msgSend(v12, sel_stringFromDate_, v47);

    if (!v48)
    {
      sub_1C254F470();
      id v48 = (id)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    id v49 = objc_msgSend(v48, sel_hk_stringByNormalizingSpaces);

    sub_1C254F470();
    id v63 = (void *)v44;
    uint64_t v64 = v46;
    id v50 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t v44 = (uint64_t)v63;
    uint64_t v46 = v64;
  }
  id v63 = (void *)v44;
  uint64_t v64 = v46;
  uint64_t v61 = 47;
  unint64_t v62 = 0xE100000000000000;
  uint64_t v59 = 45;
  unint64_t v60 = 0xE100000000000000;
  sub_1C2218914();
  uint64_t v51 = sub_1C2550170();
  uint64_t v53 = v52;
  swift_bridgeObjectRelease();
  id v63 = (void *)v51;
  uint64_t v64 = v53;
  uint64_t v61 = 58;
  unint64_t v62 = 0xE100000000000000;
  uint64_t v59 = 46;
  unint64_t v60 = 0xE100000000000000;
  uint64_t v54 = sub_1C2550170();
  swift_bridgeObjectRelease();

  return v54;
}

void sub_1C23DFF88(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C23DFFD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C23E001C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C23E0088()
{
  uint64_t result = sub_1C254F430();
  qword_1EA2E2B78 = result;
  return result;
}

id static FeatureModeToggleAction.ActionData.notificationName.getter()
{
  if (qword_1EA2DD7A8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EA2E2B78;
  return v0;
}

void FeatureModeToggleAction.ActionData.mode.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FeatureModeToggleAction.ActionData.hash(into:)()
{
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C23E01A4()
{
  return 1701080941;
}

uint64_t sub_1C23E01B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701080941 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C2550870();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C23E023C(uint64_t a1)
{
  unint64_t v2 = sub_1C23E1314();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C23E0278(uint64_t a1)
{
  unint64_t v2 = sub_1C23E1314();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeatureModeToggleAction.ActionData.encode(to:)(void *a1)
{
  sub_1C23E1A80(0, &qword_1EA2E2B80, (uint64_t (*)(void))sub_1C23E1314, (uint64_t)&type metadata for FeatureModeToggleAction.ActionData.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = &v10[-v6];
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C23E1314();
  sub_1C2550A70();
  v10[31] = v8;
  sub_1C23E1368();
  sub_1C25507D0();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FeatureModeToggleAction.ActionData.hashValue.getter()
{
  return sub_1C2550A10();
}

uint64_t FeatureModeToggleAction.ActionData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v12 = a2;
  sub_1C23E1A80(0, &qword_1EA2E2B98, (uint64_t (*)(void))sub_1C23E1314, (uint64_t)&type metadata for FeatureModeToggleAction.ActionData.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C23E1314();
  sub_1C2550A50();
  if (!v2)
  {
    uint64_t v9 = v12;
    sub_1C23E13BC();
    sub_1C2550740();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *uint64_t v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

id sub_1C23E067C()
{
  if (qword_1EA2DD7A8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EA2E2B78;
  return v0;
}

uint64_t sub_1C23E06D8()
{
  return sub_1C2550A10();
}

uint64_t sub_1C23E0764()
{
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C23E07DC()
{
  return sub_1C2550A10();
}

uint64_t sub_1C23E0864@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FeatureModeToggleAction.ActionData.init(from:)(a1, a2);
}

uint64_t sub_1C23E087C(void *a1)
{
  return FeatureModeToggleAction.ActionData.encode(to:)(a1);
}

uint64_t FeatureModeToggleAction.__allocating_init(_:)(char *a1)
{
  char v1 = *a1;
  type metadata accessor for FeatureModeToggleAction();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = v1;
  return result;
}

uint64_t FeatureModeToggleAction.__allocating_init(_:)(unsigned char *a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = *a1;
  return result;
}

uint64_t FeatureModeToggleAction.init(_:)(unsigned char *a1)
{
  *(unsigned char *)(v1 + 16) = *a1;
  return v1;
}

uint64_t FeatureModeToggleAction.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1C254C580();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v6 = sub_1C23E0B34((uint64_t)v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

uint64_t FeatureModeToggleAction.init(_:)(uint64_t a1)
{
  uint64_t v2 = sub_1C254C580();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  uint64_t v7 = sub_1C23E0B34((uint64_t)v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v7;
}

uint64_t sub_1C23E0B34(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = (void *)sub_1C254C560();
  if (qword_1EA2DD7A8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1C254F470();
  uint64_t v8 = v7;
  if (v6 == sub_1C254F470() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
LABEL_10:
    uint64_t v14 = sub_1C254C570();
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v31 = sub_1C254F430();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0);
      sub_1C23E1B3C();
      sub_1C2550330();
      if (*(void *)(v15 + 16) && (unint64_t v16 = sub_1C2457670((uint64_t)v27), (v17 & 1) != 0))
      {
        sub_1C21A9A38(*(void *)(v15 + 56) + 32 * v16, (uint64_t)&v29);
      }
      else
      {
        long long v29 = 0u;
        long long v30 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1C2298B34((uint64_t)v27);
    }
    else
    {
      long long v29 = 0u;
      long long v30 = 0u;
    }
    sub_1C224E4C4((uint64_t)&v29, (uint64_t)v27);
    if (v28)
    {
      sub_1C21AB51C(0, &qword_1EA2E2C20);
      if (swift_dynamicCast())
      {
        uint64_t v18 = (void *)v31;
        if (qword_1EA2DD7B8 != -1) {
          swift_once();
        }
        id v19 = v18;
        uint64_t v20 = sub_1C254C940();
        unint64_t v22 = v21;

        sub_1C23E1494();
        sub_1C254C3E0();
        if (!v2)
        {
          sub_1C2205E6C(v20, v22);

          uint64_t v26 = sub_1C254C580();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(a1, v26);
          sub_1C224E3A4((uint64_t)&v29);
          *(unsigned char *)(v3 + 16) = v27[0];
          return v3;
        }
        sub_1C2205E6C(v20, v22);

        goto LABEL_25;
      }
    }
    else
    {
      sub_1C224E3A4((uint64_t)v27);
    }
    sub_1C23E1AE8();
    swift_allocError();
    *uint64_t v23 = 1;
    swift_willThrow();
LABEL_25:
    uint64_t v24 = sub_1C254C580();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a1, v24);
    sub_1C224E3A4((uint64_t)&v29);
    goto LABEL_26;
  }
  char v11 = sub_1C2550870();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_10;
  }
  sub_1C23E1AE8();
  swift_allocError();
  *id v12 = 0;
  swift_willThrow();
  uint64_t v13 = sub_1C254C580();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
LABEL_26:
  sub_1C23E1A80(0, (unint64_t *)&qword_1EA2E2C10, (uint64_t (*)(void))sub_1C23E199C, (uint64_t)&type metadata for FeatureModeToggleAction.ActionData, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedItemAction);
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t FeatureModeToggleAction.__allocating_init(from:)(uint64_t a1)
{
  swift_allocObject();
  sub_1C21F4424(a1, (uint64_t)v4);
  uint64_t v2 = sub_1C23E1024(v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v2;
}

uint64_t FeatureModeToggleAction.init(from:)(uint64_t a1)
{
  sub_1C21F4424(a1, (uint64_t)v4);
  uint64_t v2 = sub_1C23E1024(v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v2;
}

uint64_t sub_1C23E1024(void *a1)
{
  sub_1C23E1900();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C23E1A80(0, &qword_1EA2E2BF8, (uint64_t (*)(void))sub_1C23E199C, (uint64_t)&type metadata for FeatureModeToggleAction.ActionData, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedItemAction.CodingKeys);
  sub_1C23E19F0();
  sub_1C2550A50();
  if (v1)
  {
    uint64_t v9 = v11;
    sub_1C23E1A80(0, (unint64_t *)&qword_1EA2E2C10, (uint64_t (*)(void))sub_1C23E199C, (uint64_t)&type metadata for FeatureModeToggleAction.ActionData, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedItemAction);
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1C23E1494();
    sub_1C2550740();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v9 = v11;
    *(unsigned char *)(v11 + 16) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v9;
}

uint64_t FeatureModeToggleAction.deinit()
{
  return v0;
}

uint64_t FeatureModeToggleAction.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s15HealthRecordsUI23FeatureModeToggleActionC0G4DataV2eeoiySbAE_AEtFZ_0(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 0x7265656E69676E45;
  }
  else {
    uint64_t v3 = 0x647261646E617453;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xEB00000000676E69;
  }
  if (*a2) {
    uint64_t v5 = 0x7265656E69676E45;
  }
  else {
    uint64_t v5 = 0x647261646E617453;
  }
  if (*a2) {
    unint64_t v6 = 0xEB00000000676E69;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C2550870();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1C23E1314()
{
  unint64_t result = qword_1EA2E2B88;
  if (!qword_1EA2E2B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2B88);
  }
  return result;
}

unint64_t sub_1C23E1368()
{
  unint64_t result = qword_1EA2E2B90;
  if (!qword_1EA2E2B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2B90);
  }
  return result;
}

unint64_t sub_1C23E13BC()
{
  unint64_t result = qword_1EA2E2BA0;
  if (!qword_1EA2E2BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2BA0);
  }
  return result;
}

uint64_t type metadata accessor for FeatureModeToggleAction()
{
  uint64_t result = qword_1EA2E2BC8;
  if (!qword_1EA2E2BC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C23E145C(void *a1)
{
  a1[1] = sub_1C23E1494();
  a1[2] = sub_1C23E14E8();
  unint64_t result = sub_1C23E153C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C23E1494()
{
  unint64_t result = qword_1EA2E2BA8;
  if (!qword_1EA2E2BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2BA8);
  }
  return result;
}

unint64_t sub_1C23E14E8()
{
  unint64_t result = qword_1EA2E2BB0;
  if (!qword_1EA2E2BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2BB0);
  }
  return result;
}

unint64_t sub_1C23E153C()
{
  unint64_t result = qword_1EA2E2BB8;
  if (!qword_1EA2E2BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2BB8);
  }
  return result;
}

unint64_t sub_1C23E1594()
{
  unint64_t result = qword_1EA2E2BC0;
  if (!qword_1EA2E2BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2BC0);
  }
  return result;
}

uint64_t sub_1C23E15E8()
{
  return swift_initClassMetadata2();
}

unsigned char *storeEnumTagSinglePayload for FeatureModeToggleAction.ActionData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C23E16ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureModeToggleAction.ActionData()
{
  return &type metadata for FeatureModeToggleAction.ActionData;
}

unsigned char *storeEnumTagSinglePayload for FeatureModeToggleAction.ActionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C23E17C0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureModeToggleAction.ActionData.CodingKeys()
{
  return &type metadata for FeatureModeToggleAction.ActionData.CodingKeys;
}

unint64_t sub_1C23E17FC()
{
  unint64_t result = qword_1EA2E2BD8;
  if (!qword_1EA2E2BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2BD8);
  }
  return result;
}

unint64_t sub_1C23E1854()
{
  unint64_t result = qword_1EA2E2BE0;
  if (!qword_1EA2E2BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2BE0);
  }
  return result;
}

unint64_t sub_1C23E18AC()
{
  unint64_t result = qword_1EA2E2BE8;
  if (!qword_1EA2E2BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2BE8);
  }
  return result;
}

void sub_1C23E1900()
{
  if (!qword_1EA2E2BF0)
  {
    sub_1C23E1A80(255, &qword_1EA2E2BF8, (uint64_t (*)(void))sub_1C23E199C, (uint64_t)&type metadata for FeatureModeToggleAction.ActionData, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedItemAction.CodingKeys);
    sub_1C23E19F0();
    unint64_t v0 = sub_1C2550760();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2BF0);
    }
  }
}

unint64_t sub_1C23E199C()
{
  unint64_t result = qword_1EA2E2C00;
  if (!qword_1EA2E2C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2C00);
  }
  return result;
}

unint64_t sub_1C23E19F0()
{
  unint64_t result = qword_1EA2E2C08;
  if (!qword_1EA2E2C08)
  {
    sub_1C23E1A80(255, &qword_1EA2E2BF8, (uint64_t (*)(void))sub_1C23E199C, (uint64_t)&type metadata for FeatureModeToggleAction.ActionData, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FeedItemAction.CodingKeys);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2C08);
  }
  return result;
}

void sub_1C23E1A80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C23E1AE8()
{
  unint64_t result = qword_1EA2E2C18;
  if (!qword_1EA2E2C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2C18);
  }
  return result;
}

unint64_t sub_1C23E1B3C()
{
  unint64_t result = qword_1EA2E2C28;
  if (!qword_1EA2E2C28)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6EEC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2C28);
  }
  return result;
}

uint64_t FeedItemAction.init(_:)(uint64_t a1)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 32))(v1 + *(void *)(*(void *)v1 + 96), a1);
  return v1;
}

uint64_t *FeedItemAction.init(_:)(uint64_t a1)
{
  BOOL v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 80);
  v32[0] = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v33 = (char *)v32 - v6;
  uint64_t v7 = (void *)sub_1C254C560();
  char v8 = (void *)(*(uint64_t (**)(uint64_t, void))(*(void *)(v4 + 88) + 32))(v5, *(void *)(v4 + 88));
  uint64_t v9 = sub_1C254F470();
  uint64_t v11 = v10;
  if (v9 == sub_1C254F470() && v11 == v12)
  {

    swift_bridgeObjectRelease_n();
LABEL_8:
    uint64_t v17 = sub_1C254C570();
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v38 = sub_1C254F430();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0);
      sub_1C23E1B3C();
      sub_1C2550330();
      if (*(void *)(v18 + 16) && (unint64_t v19 = sub_1C2457670((uint64_t)v34), (v20 & 1) != 0))
      {
        sub_1C21A9A38(*(void *)(v18 + 56) + 32 * v19, (uint64_t)&v36);
      }
      else
      {
        long long v36 = 0u;
        long long v37 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1C2298B34((uint64_t)v34);
    }
    else
    {
      long long v36 = 0u;
      long long v37 = 0u;
    }
    sub_1C224E4C4((uint64_t)&v36, (uint64_t)v34);
    if (v35)
    {
      sub_1C21AB51C(0, &qword_1EA2E2C20);
      if (swift_dynamicCast())
      {
        unint64_t v21 = (void *)v38;
        if (qword_1EA2DD7B8 != -1) {
          swift_once();
        }
        id v22 = v21;
        uint64_t v23 = sub_1C254C940();
        unint64_t v25 = v24;

        uint64_t v26 = v32[1];
        unint64_t v27 = v33;
        sub_1C254C3E0();
        if (!v26)
        {
          sub_1C2205E6C(v23, v25);

          uint64_t v31 = sub_1C254C580();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(a1, v31);
          sub_1C224E3A4((uint64_t)&v36);
          (*(void (**)(uint64_t, char *, uint64_t))(v32[0] + 32))((uint64_t)v2 + *(void *)(*v2 + 96), v27, v5);
          return v2;
        }
        sub_1C2205E6C(v23, v25);

        goto LABEL_23;
      }
    }
    else
    {
      sub_1C224E3A4((uint64_t)v34);
    }
    sub_1C23E1AE8();
    swift_allocError();
    *uint64_t v28 = 1;
    swift_willThrow();
LABEL_23:
    uint64_t v29 = sub_1C254C580();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(a1, v29);
    sub_1C224E3A4((uint64_t)&v36);
    goto LABEL_24;
  }
  char v14 = sub_1C2550870();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14) {
    goto LABEL_8;
  }
  sub_1C23E1AE8();
  swift_allocError();
  *uint64_t v15 = 0;
  swift_willThrow();
  uint64_t v16 = sub_1C254C580();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
LABEL_24:
  type metadata accessor for FeedItemAction();
  swift_deallocPartialClassInstance();
  return v2;
}

uint64_t FeedItemAction.init(from:)(void *a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v15 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v18 = (char *)&v14 - v4;
  type metadata accessor for FeedItemAction.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1C2550760();
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v8 = a1[3];
  char v20 = a1;
  __swift_project_boxed_opaque_existential_1Tm(a1, v8);
  uint64_t v9 = v19;
  sub_1C2550A50();
  if (v9)
  {
    type metadata accessor for FeedItemAction();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v18;
    uint64_t v12 = v16;
    uint64_t v11 = v17;
    sub_1C2550740();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v1 + *(void *)(*(void *)v1 + 96), v10, v3);
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  return v1;
}

uint64_t FeedItemAction.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  return v0;
}

uint64_t sub_1C23E2420@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_1C23E24C4(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t (*sub_1C23E2570())()
{
  return j__swift_endAccess;
}

void sub_1C23E25D8(uint64_t a1)
{
  BOOL v2 = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 80);
  uint64_t v37 = *(v4 - 1);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v31 - v5;
  uint64_t v7 = sub_1C254E560();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E520();
  swift_retain_n();
  uint64_t v11 = sub_1C254E550();
  os_log_type_t v12 = sub_1C254FA40();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v35 = v6;
  if (v13)
  {
    uint64_t v33 = v7;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v34 = v4;
    uint64_t v32 = v15;
    uint64_t v39 = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    uint64_t v31 = v14 + 4;
    uint64_t v38 = *v2;
    type metadata accessor for FeedItemAction();
    swift_getMetatypeMetadata();
    uint64_t v16 = sub_1C254F510();
    uint64_t v38 = sub_1C21AD354(v16, v17, &v39);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v11, v12, "Performing FeedItemAction: %%{public}%{public}s", v14, 0xCu);
    uint64_t v18 = v32;
    swift_arrayDestroy();
    uint64_t v4 = v34;
    MEMORY[0x1C875A0B0](v18, -1, -1);
    MEMORY[0x1C875A0B0](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v33);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_1C21AB51C(0, &qword_1EA2DE898);
  uint64_t v19 = (void *)sub_1C254FAC0();
  uint64_t v34 = (void *)(*(uint64_t (**)(void *, void))(*(void *)(v3 + 88) + 32))(v4, *(void *)(v3 + 88));
  sub_1C23E3688();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
  uint64_t v39 = sub_1C254F430();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0);
  sub_1C23E1B3C();
  sub_1C2550330();
  unint64_t v21 = v4;
  if (qword_1EA2DD7B0 != -1) {
    swift_once();
  }
  uint64_t v22 = (uint64_t)v35;
  sub_1C23E2420((uint64_t)v35);
  uint64_t v23 = v36;
  uint64_t v24 = sub_1C254C450();
  if (v23)
  {
    (*(void (**)(uint64_t, void *))(v37 + 8))(v22, v21);

    sub_1C2298B34(inited + 32);
    swift_setDeallocating();
    sub_1C23E36E0();
    swift_arrayDestroy();
  }
  else
  {
    uint64_t v26 = v24;
    unint64_t v27 = v25;
    (*(void (**)(uint64_t, void *))(v37 + 8))(v22, v21);
    uint64_t v28 = sub_1C254C930();
    sub_1C2205E6C(v26, v27);
    *(void *)(inited + 96) = sub_1C21AB51C(0, &qword_1EA2E2C20);
    *(void *)(inited + 72) = v28;
    sub_1C2204984(inited);
    id v29 = objc_allocWithZone((Class)sub_1C254D1D0());
    long long v30 = (void *)sub_1C254D1C0();
    objc_msgSend(v19, sel_addOperation_, v30);
  }
}

uint64_t sub_1C23E2B14(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v7 - v4;
  sub_1C23E2420((uint64_t)&v7 - v4);
  sub_1C254F380();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C23E2C10(void *a1)
{
  uint64_t v2 = v1;
  v12[0] = *(void *)(*(void *)v2 + 80);
  uint64_t v14 = *(void *)(v12[0] - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)v12 - v4;
  v12[1] = *(void *)(v6 + 88);
  type metadata accessor for FeedItemAction.CodingKeys();
  swift_getWitnessTable();
  uint64_t v7 = sub_1C25507E0();
  uint64_t v13 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  uint64_t v10 = v12[0];
  sub_1C2550A70();
  sub_1C23E2420((uint64_t)v5);
  sub_1C25507D0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v9, v7);
}

uint64_t sub_1C23E2E48()
{
  sub_1C25509C0();
  sub_1C23E2B14((uint64_t)v1);
  return sub_1C2550A10();
}

BOOL static FeedItemActionError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedItemActionError.hash(into:)()
{
  return sub_1C25509D0();
}

uint64_t FeedItemActionError.hashValue.getter()
{
  return sub_1C2550A10();
}

uint64_t sub_1C23E2F14(uint64_t a1)
{
  return sub_1C23E2F7C(a1, MEMORY[0x1E4F26D58], MEMORY[0x1E4F26D50], &qword_1EA2E2C30);
}

uint64_t sub_1C23E2F48(uint64_t a1)
{
  return sub_1C23E2F7C(a1, MEMORY[0x1E4F26CC8], MEMORY[0x1E4F26CC0], &qword_1EA2E2C38);
}

uint64_t sub_1C23E2F7C(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  a2(0);
  swift_allocObject();
  uint64_t result = a3();
  *a4 = result;
  return result;
}

uint64_t sub_1C23E2FD0(uint64_t a1)
{
  __n128 v1 = MEMORY[0x1F4188790](a1);
  uint64_t v3 = (char *)&v6 - v2;
  (*(void (**)(char *, __n128))(v4 + 16))((char *)&v6 - v2, v1);
  return sub_1C23E24C4((uint64_t)v3);
}

uint64_t FeedItemAction.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 96), a1);
  return v2;
}

{
  uint64_t v2;

  uint64_t v2 = swift_allocObject();
  FeedItemAction.init(_:)(a1);
  return v2;
}

uint64_t static FeedItemAction.== infix(_:_:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v12 - v7;
  sub_1C23E2420((uint64_t)&v12 - v7);
  sub_1C23E2420((uint64_t)v5);
  char v9 = sub_1C254F420();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  v10(v8, v2);
  return v9 & 1;
}

uint64_t sub_1C23E32B0(uint64_t a1, uint64_t a2)
{
  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C2550870();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C23E3328()
{
  return 1635017060;
}

uint64_t sub_1C23E3338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C23E32B0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C23E336C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C221E058();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C23E339C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C23E33F0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t FeedItemAction.__deallocating_deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  return swift_deallocClassInstance();
}

uint64_t FeedItemAction.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FeedItemAction.init(from:)(a1);
  return v2;
}

uint64_t sub_1C23E3540()
{
  return sub_1C23E2E48();
}

uint64_t sub_1C23E3564(uint64_t a1)
{
  return sub_1C23E2B14(a1);
}

uint64_t sub_1C23E3588()
{
  sub_1C25509C0();
  sub_1C23E2B14((uint64_t)v1);
  return sub_1C2550A10();
}

uint64_t sub_1C23E35C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 176))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C23E3604(void *a1)
{
  return sub_1C23E2C10(a1);
}

void sub_1C23E3628(uint64_t a1)
{
}

uint64_t sub_1C23E364C(uint64_t *a1)
{
  return static FeedItemAction.== infix(_:_:)(*a1);
}

uint64_t type metadata accessor for FeedItemAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FeedItemAction.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C23E3688()
{
  if (!qword_1EA2DEFC8)
  {
    sub_1C23E36E0();
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DEFC8);
    }
  }
}

void sub_1C23E36E0()
{
  if (!qword_1EA2DEFD0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DEFD0);
    }
  }
}

unint64_t sub_1C23E3750()
{
  unint64_t result = qword_1EA2E2C40[0];
  if (!qword_1EA2E2C40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA2E2C40);
  }
  return result;
}

uint64_t sub_1C23E37A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C23E37C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C23E2420(a1);
}

uint64_t sub_1C23E37E8()
{
  return 16;
}

__n128 sub_1C23E37F4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of static FeedItemActionData.notificationName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedItemActionProtocol.perform()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unsigned char *storeEnumTagSinglePayload for FeedItemActionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C23E3908);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemActionError()
{
  return &type metadata for FeedItemActionError;
}

uint64_t sub_1C23E3940()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FeedItemAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedItemAction);
}

uint64_t dispatch thunk of FeedItemAction.data.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of FeedItemAction.data.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of FeedItemAction.data.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of FeedItemAction.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of FeedItemAction.perform()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of FeedItemAction.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of FeedItemAction.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of FeedItemAction.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of FeedItemAction.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

unsigned char *sub_1C23E3B74(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C23E3C10);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C23E3C38()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C23E3C54()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C23E3C70()
{
  return swift_getWitnessTable();
}

id MedicalRecordChartOverlayContext.__allocating_init(title:dataSource:defaultColors:selectedColors:verticalAxis:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  id v13 = objc_allocWithZone(v6);
  return MedicalRecordChartOverlayContext.init(title:dataSource:defaultColors:selectedColors:verticalAxis:)(a1, a2, a3, a4, a5, a6);
}

id MedicalRecordChartOverlayContext.init(title:dataSource:defaultColors:selectedColors:verticalAxis:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedOverlayDisplayType] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedDataSource] = 0;
  uint64_t v8 = &v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_title];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_dataSource] = a3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_defaultColors] = a4;
  if (a5)
  {
    id v9 = a5;
  }
  else
  {
    uint64_t v11 = (void **)(a3 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors);
    swift_beginAccess();
    uint64_t v12 = *v11;
    if (*v11)
    {
      id v9 = *v11;
    }
    else
    {
      id v9 = a4;
      uint64_t v12 = 0;
    }
    id v13 = v12;
  }
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_selectedColors] = v9;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_verticalAxis] = a6;
  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for MedicalRecordChartOverlayContext();
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t type metadata accessor for MedicalRecordChartOverlayContext()
{
  return self;
}

id sub_1C23E3EB4()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem);
  if (v2)
  {
    int v3 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem);
    id v4 = v3;
  }
  else
  {
    id v4 = sub_1C23E46EC(0, 0);
    int v3 = 0;
    uint64_t v2 = *(void **)(v0 + v1);
  }
  *(void *)(v0 + v1) = v4;
  id v5 = v3;
  id v6 = v4;

  return v6;
}

uint64_t sub_1C23E3FAC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, void))
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = &v30[-v10];
  unint64_t v12 = *(void *)(*(void *)(v5 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_dataSource)
                  + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets);
  if (v12)
  {
    MEMORY[0x1F4188790](v9);
    unint64_t v29 = a1;
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_1C228A418(sub_1C23E4838, (uint64_t)&v30[-32], v12);
    if (v13 >> 62) {
      uint64_t v14 = sub_1C2550620();
    }
    else {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v15 = OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem;
  uint64_t v16 = *(void **)(v5 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem);
  if (v16)
  {
    unint64_t v17 = *(void **)(v5 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem);
    id v18 = v17;
  }
  else
  {
    id v18 = sub_1C23E46EC(0, 0);
    unint64_t v17 = 0;
    uint64_t v16 = *(void **)(v5 + v15);
  }
  *(void *)(v5 + v15) = v18;
  id v19 = v17;
  id v20 = v18;

  uint64_t v21 = sub_1C254CBD0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 1, 1, v21);
  if (qword_1EA2DD648 != -1) {
    swift_once();
  }
  uint64_t v22 = (void *)qword_1EA2E0AB8;
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v23 + 16) = xmmword_1C255CD90;
  uint64_t v25 = MEMORY[0x1E4FBB5C8];
  *(void *)(v23 + 56) = v24;
  *(void *)(v23 + 64) = v25;
  *(void *)(v23 + 32) = v14;
  id v26 = v22;
  swift_bridgeObjectRetain();
  unint64_t v29 = 0xE000000000000000;
  sub_1C254C730();
  sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v11);
  unint64_t v27 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setValue_, v27);

  return a5(1, 0);
}

id sub_1C23E4454()
{
  sub_1C23E4858();
  id v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_diagnosticTestResultTypeForIdentifier_, *MEMORY[0x1E4F29A70]);
  return v0;
}

id MedicalRecordChartOverlayContext.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MedicalRecordChartOverlayContext.init()()
{
}

id MedicalRecordChartOverlayContext.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordChartOverlayContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C23E46EC(uint64_t a1, void *a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67AB8]), sel_init);
  uint64_t v5 = (void *)sub_1C254F430();
  objc_msgSend(v4, sel_setTitle_, v5);

  id v6 = (void *)sub_1C254F430();
  objc_msgSend(v4, sel_setUnit_, v6);

  if (a2) {
    a2 = (void *)sub_1C254F430();
  }
  objc_msgSend(v4, sel_setValue_, a2);

  uint64_t v7 = (void *)sub_1C254F430();
  objc_msgSend(v4, sel_setDateString_, v7);

  objc_msgSend(v4, sel_setInfoHidden_, 1);
  objc_msgSend(v4, sel_setMetricColors_, *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_defaultColors));
  objc_msgSend(v4, sel_setSelectedMetricColors_, *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_selectedColors));
  return v4;
}

uint64_t sub_1C23E4838(id *a1)
{
  return sub_1C2396580(a1) & 1;
}

unint64_t sub_1C23E4858()
{
  unint64_t result = qword_1EA2E39D0;
  if (!qword_1EA2E39D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E39D0);
  }
  return result;
}

uint64_t sub_1C23E4898(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = &v28[-v8];
  unint64_t v10 = *(void *)(*(void *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_dataSource)
                  + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets);
  if (v10)
  {
    MEMORY[0x1F4188790](v7);
    unint64_t v27 = a1;
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_1C228A418(sub_1C23E4E00, (uint64_t)&v28[-32], v10);
    if (v11 >> 62) {
      uint64_t v12 = sub_1C2550620();
    }
    else {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v13 = OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem;
  uint64_t v14 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem);
  if (v14)
  {
    uint64_t v15 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem);
    id v16 = v15;
  }
  else
  {
    id v16 = sub_1C23E46EC(0, 0);
    uint64_t v15 = 0;
    uint64_t v14 = *(void **)(a2 + v13);
  }
  *(void *)(a2 + v13) = v16;
  id v17 = v15;
  id v18 = v16;

  uint64_t v19 = sub_1C254CBD0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
  if (qword_1EA2DD648 != -1) {
    swift_once();
  }
  id v20 = (void *)qword_1EA2E0AB8;
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v21 + 16) = xmmword_1C255CD90;
  uint64_t v23 = MEMORY[0x1E4FBB5C8];
  *(void *)(v21 + 56) = v22;
  *(void *)(v21 + 64) = v23;
  *(void *)(v21 + 32) = v12;
  id v24 = v20;
  swift_bridgeObjectRetain();
  unint64_t v27 = 0xE000000000000000;
  sub_1C254C730();
  sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v9);
  uint64_t v25 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setValue_, v25);

  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a3 + 16))(a3, 1, 0);
}

void *sub_1C23E4C14()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedOverlayDisplayType;
  int v3 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedOverlayDisplayType);
  id v4 = v3;
  if (!v3)
  {
    id v4 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **(void **)(v1
                                                                                         + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_dataSource))
                                                   + 0x160))(*(void *)(v1
                                                                         + OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_verticalAxis));
    uint64_t v5 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v4;
    id v6 = v4;
  }
  id v7 = v3;
  return v4;
}

uint64_t method lookup function for MedicalRecordChartOverlayContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordChartOverlayContext);
}

uint64_t dispatch thunk of MedicalRecordChartOverlayContext.__allocating_init(title:dataSource:defaultColors:selectedColors:verticalAxis:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of MedicalRecordChartOverlayContext.contextItemForLastUpdate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of MedicalRecordChartOverlayContext.updateItem(for:overlayController:timeScope:resolution:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of MedicalRecordChartOverlayContext.sampleTypeForDateRangeUpdates()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of MedicalRecordChartOverlayContext.overlayDisplayType(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of MedicalRecordChartOverlayContext.resolution(for:traitResolution:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t sub_1C23E4E00(id *a1)
{
  return sub_1C23E4838(a1) & 1;
}

_UNKNOWN **sub_1C23E4E1C()
{
  return &off_1F1D92AA8;
}

_UNKNOWN **sub_1C23E4E28()
{
  return &off_1F1D92AB8;
}

id sub_1C23E4E34()
{
  uint64_t v1 = OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___brandView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___brandView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___brandView);
  }
  else
  {
    sub_1C23E4E98(v0);
    id v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C23E4E98(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordBrandView), sel_init);
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR___WDClinicalAccountAddedViewController_account);
  id v4 = objc_msgSend(*(id *)(*(void *)(a1 + OBJC_IVAR___WDClinicalAccountAddedViewController_onboardingSession)+ OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_clinicalSourcesDataProvider);
  objc_msgSend(v2, sel_setBrandable_dataProvider_, v3, v4);

  id v5 = v2;
  id v6 = (void *)sub_1C254F700();
  id v7 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v7)
  {
    sub_1C254F470();

    uint64_t v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setAccessibilityIdentifier_, v8);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C23E4FD4()
{
  uint64_t v1 = OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___standardConstraints;
  if (*(void *)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___standardConstraints])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___standardConstraints];
  }
  else
  {
    uint64_t v3 = v0;
    sub_1C21ACA3C();
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C255CD80;
    id v5 = sub_1C23E4E34();
    id v6 = objc_msgSend(v5, sel_centerXAnchor);

    id v7 = objc_msgSend(v3, sel_contentView);
    id v8 = objc_msgSend(v7, sel_centerXAnchor);

    id v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
    *(void *)(v4 + 32) = v9;
    id v10 = sub_1C23E4E34();
    id v11 = objc_msgSend(v10, sel_leadingAnchor);

    id v12 = objc_msgSend(v3, sel_contentView);
    id v13 = objc_msgSend(v12, sel_leadingAnchor);

    id v14 = objc_msgSend(v11, sel_constraintGreaterThanOrEqualToAnchor_, v13);
    *(void *)(v4 + 40) = v14;
    id v15 = objc_msgSend(v3, sel_contentView);
    id v16 = objc_msgSend(v15, sel_trailingAnchor);

    id v17 = sub_1C23E4E34();
    id v18 = objc_msgSend(v17, sel_trailingAnchor);

    id v19 = objc_msgSend(v16, sel_constraintGreaterThanOrEqualToAnchor_, v18);
    *(void *)(v4 + 48) = v19;
    sub_1C254F730();
    uint64_t v2 = v4;
    *(void *)&v3[v1] = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C23E5208()
{
  uint64_t v1 = OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___accessibilityConstraints;
  if (*(void *)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___accessibilityConstraints])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___accessibilityConstraints];
  }
  else
  {
    uint64_t v3 = v0;
    sub_1C21ACA3C();
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C255CD70;
    id v5 = sub_1C23E4E34();
    id v6 = objc_msgSend(v5, sel_leadingAnchor);

    id v7 = objc_msgSend(v3, sel_contentView);
    id v8 = objc_msgSend(v7, sel_leadingAnchor);

    id v9 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v8);
    *(void *)(v4 + 32) = v9;
    id v10 = sub_1C23E4E34();
    id v11 = objc_msgSend(v10, sel_trailingAnchor);

    id v12 = objc_msgSend(v3, sel_contentView);
    id v13 = objc_msgSend(v12, sel_trailingAnchor);

    id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
    *(void *)(v4 + 40) = v14;
    sub_1C254F730();
    uint64_t v2 = v4;
    *(void *)&v3[v1] = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C23E5494()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___WDClinicalAccountAddedViewController_dismissHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1C223E0BC(*v1);
  return v2;
}

uint64_t sub_1C23E5594(uint64_t a1, uint64_t a2)
{
  id v5 = (uint64_t *)(v2 + OBJC_IVAR___WDClinicalAccountAddedViewController_dismissHandler);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t *v5 = a1;
  v5[1] = a2;
  return sub_1C221794C(v6);
}

uint64_t sub_1C23E55F4@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR___WDClinicalAccountAddedViewController_dismissHandler);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    id v7 = sub_1C225FF10;
  }
  else
  {
    id v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1C223E0BC(v4);
}

uint64_t sub_1C23E5694(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C2373F8C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  id v7 = (uint64_t *)(*a2 + OBJC_IVAR___WDClinicalAccountAddedViewController_dismissHandler);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1C223E0BC(v3);
  return sub_1C221794C(v8);
}

uint64_t (*sub_1C23E575C())()
{
  return j__swift_endAccess;
}

void AccountAddedViewController.__allocating_init(onboardingSession:account:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  AccountAddedViewController.init(onboardingSession:account:)(a1, a2);
}

void AccountAddedViewController.init(onboardingSession:account:)(void *a1, void *a2)
{
  uint64_t v5 = OBJC_IVAR___WDClinicalAccountAddedViewController_iconProvider;
  uint64_t v6 = qword_1EBB6D898;
  id v7 = v2;
  if (v6 != -1) {
    swift_once();
  }
  *(void *)&v2[v5] = qword_1EBB6EB60;
  *(void *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController_primaryButton] = 0;
  *(void *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___brandView] = 0;
  *(void *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController_customConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___standardConstraints] = 0;
  *(void *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController____lazy_storage___accessibilityConstraints] = 0;
  v7[OBJC_IVAR___WDClinicalAccountAddedViewController_shouldPromptForDataCollection] = 0;
  uint64_t v8 = &v7[OBJC_IVAR___WDClinicalAccountAddedViewController_dismissHandler];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  *(void *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController_onboardingSession] = a1;
  *(void *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController_account] = a2;
  id v9 = objc_allocWithZone((Class)type metadata accessor for HealthRecordsNotifications());
  swift_retain();
  id v10 = a1;
  id v11 = a2;
  id v12 = objc_msgSend(v9, sel_init);
  *(void *)&v7[OBJC_IVAR___WDClinicalAccountAddedViewController_notificationsManager] = v12;

  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v13 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v15 = self;
  id v16 = (void *)sub_1C254F430();
  id v17 = objc_msgSend(v15, sel_modelSpecificLocalizedStringKeyForKey_, v16, 0xE000000000000000);

  if (v17)
  {
    sub_1C254F470();

    id v18 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    id v19 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    v20.receiver = v7;
    v20.super_class = (Class)type metadata accessor for AccountAddedViewController();
    objc_msgSendSuper2(&v20, sel_initWithTitle_detailText_symbolName_contentLayout_, v14, v19, 0, 2, 0xE000000000000000);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C23E5B78()
{
  sub_1C23E733C(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v30 - v2;
  uint64_t v4 = (objc_class *)type metadata accessor for AccountAddedViewController();
  v30.receiver = v0;
  v30.super_class = v4;
  objc_msgSendSuper2(&v30, sel_viewDidLoad);
  id v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v6 = v5;
  id v7 = objc_msgSend(self, sel_systemBackgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  objc_msgSend(v0, sel_setModalInPresentation_, objc_msgSend(*(id *)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController_account], sel_canEnableSharingToProvider));
  id v8 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v8, sel_setHidesBackButton_, 1);

  sub_1C23E733C(0, (unint64_t *)&qword_1EA2DE1B0, (uint64_t (*)(uint64_t))sub_1C21FE7D8, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CD90;
  uint64_t v10 = sub_1C254E8E0();
  uint64_t v11 = MEMORY[0x1E4FB1138];
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v11;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C23718B8();
  sub_1C254FB70();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_1EA2DD658 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1EA2E0AE8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v13 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v14 = (void *)sub_1C254F700();
  id v15 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v15) {
    goto LABEL_9;
  }
  sub_1C254F470();

  id v16 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v0, sel_hxui_addPrimaryFooterButtonWithTitle_accessibilityIdentifier_, v13, v16);

  uint64_t v18 = OBJC_IVAR___WDClinicalAccountAddedViewController_primaryButton;
  id v19 = *(void **)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController_primaryButton];
  *(void *)&v0[OBJC_IVAR___WDClinicalAccountAddedViewController_primaryButton] = v17;

  objc_super v20 = *(void **)&v0[v18];
  if (v20) {
    objc_msgSend(v20, sel_setEnabled_, 0);
  }
  id v21 = objc_msgSend(v0, sel_contentView);
  id v22 = sub_1C23E4E34();
  objc_msgSend(v21, sel_addSubview_, v22);

  id v23 = sub_1C23E4E34();
  id v24 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v23, sel_hk_alignVerticalConstraintsWithView_margin_, v24, 0.0);

  sub_1C23E6888();
  uint64_t v25 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v3, 1, 1, v25);
  sub_1C254F820();
  id v26 = v0;
  uint64_t v27 = sub_1C254F810();
  uint64_t v28 = (void *)swift_allocObject();
  uint64_t v29 = MEMORY[0x1E4FBCFD8];
  void v28[2] = v27;
  v28[3] = v29;
  v28[4] = v26;
  sub_1C24D0A0C((uint64_t)v3, (uint64_t)&unk_1EA2E2E08, (uint64_t)v28);
  swift_release();
}

void sub_1C23E6054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C875A200](v3);
  if (v4)
  {
    id v5 = (void *)v4;
    sub_1C23E6888();
  }
}

uint64_t sub_1C23E60A8()
{
  v0[2] = sub_1C254F820();
  v0[3] = sub_1C254F810();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C22415D0;
  return sub_1C23E69F4();
}

void sub_1C23E619C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = (void *)MEMORY[0x1C875A200](v3);
  if (v4)
  {
    id v5 = v4;
    if (a1) {
      objc_msgSend(v4, sel_presentViewController_animated_completion_, a1, 1, 0);
    }
  }
}

void sub_1C23E632C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR___WDClinicalAccountAddedViewController_account];
  unsigned int v5 = objc_msgSend(v4, sel_canEnableSharingToProvider);
  char v6 = v5;
  if (a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v2;
    objc_allocWithZone((Class)type metadata accessor for ImprovementDataCollectionOptInViewController());
    id v8 = v2;
    id v17 = ImprovementDataCollectionOptInViewController.init(modalInPresentation:userDidChooseCompletion:)(v6, (uint64_t)sub_1C23E7674, v7);
    id v9 = objc_msgSend(v8, sel_navigationController);
    if (!v9)
    {
LABEL_4:

      return;
    }
LABEL_3:
    uint64_t v10 = v9;
    objc_msgSend(v9, sel_pushViewController_animated_, v17, 1);

    goto LABEL_4;
  }
  if (v5 && objc_msgSend(v4, sel_hasClinicalSharingScopes))
  {
    uint64_t v11 = *(void **)&v2[OBJC_IVAR___WDClinicalAccountAddedViewController_onboardingSession];
    objc_allocWithZone((Class)type metadata accessor for ClinicalSharingOnboardingInformationalViewController());
    id v12 = v11;
    id v13 = v4;
    id v17 = (id)ClinicalSharingOnboardingInformationalViewController.init(onboardingSession:flowType:selectedAccount:delegate:)(v12, (char *)2, v4, 0);
    id v9 = objc_msgSend(v2, sel_navigationController);
    if (!v9) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v14 = &v2[OBJC_IVAR___WDClinicalAccountAddedViewController_dismissHandler];
  swift_beginAccess();
  id v15 = *(void (**)(uint64_t))v14;
  if (*(void *)v14)
  {
    uint64_t v16 = swift_retain();
    v15(v16);
    sub_1C221794C((uint64_t)v15);
  }
}

void sub_1C23E6504(uint64_t a1, char *a2)
{
  uint64_t v3 = *(void **)&a2[OBJC_IVAR___WDClinicalAccountAddedViewController_account];
  if ((objc_msgSend(v3, sel_canEnableSharingToProvider) & 1) != 0
    && objc_msgSend(v3, sel_hasClinicalSharingScopes))
  {
    uint64_t v4 = *(void **)&a2[OBJC_IVAR___WDClinicalAccountAddedViewController_onboardingSession];
    objc_allocWithZone((Class)type metadata accessor for ClinicalSharingOnboardingInformationalViewController());
    unsigned int v5 = v4;
    id v6 = v3;
    id v12 = (id)ClinicalSharingOnboardingInformationalViewController.init(onboardingSession:flowType:selectedAccount:delegate:)(v5, (char *)2, v3, 0);
    id v7 = objc_msgSend(a2, sel_navigationController);
    if (v7)
    {
      id v8 = v7;
      objc_msgSend(v7, sel_pushViewController_animated_, v12, 1);
    }
  }
  else
  {
    id v9 = &a2[OBJC_IVAR___WDClinicalAccountAddedViewController_dismissHandler];
    swift_beginAccess();
    uint64_t v10 = *(void (**)(uint64_t))v9;
    if (*(void *)v9)
    {
      uint64_t v11 = swift_retain();
      v10(v11);
      sub_1C221794C((uint64_t)v10);
    }
  }
}

void sub_1C23E6654()
{
  uint64_t v1 = OBJC_IVAR___WDClinicalAccountAddedViewController_primaryButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___WDClinicalAccountAddedViewController_primaryButton);
  if (v2) {
    objc_msgSend(v2, sel_setEnabled_, 1);
  }
  if ((*(unsigned char *)(v0 + OBJC_IVAR___WDClinicalAccountAddedViewController_shouldPromptForDataCollection) & 1) == 0)
  {
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR___WDClinicalAccountAddedViewController_account);
    if (!objc_msgSend(v3, sel_canEnableSharingToProvider)
      || (objc_msgSend(v3, sel_hasClinicalSharingScopes) & 1) == 0)
    {
      uint64_t v4 = *(void **)(v0 + v1);
      if (v4)
      {
        uint64_t v5 = qword_1EA2DD658;
        id v6 = v4;
        if (v5 != -1) {
          swift_once();
        }
        id v7 = (id)qword_1EA2E0AE8;
        swift_bridgeObjectRetain();
        sub_1C254C730();
        swift_bridgeObjectRelease();

        id v8 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        objc_msgSend(v6, sel_setTitle_forState_, v8, 0, 0xE000000000000000);

        id v9 = *(void **)(v0 + v1);
        if (v9)
        {
          id v10 = v9;
          uint64_t v11 = (void *)sub_1C254F700();
          id v12 = (id)HKUIJoinStringsForAutomationIdentifier();

          if (v12)
          {
            sub_1C254F470();

            id v13 = (id)sub_1C254F430();
            swift_bridgeObjectRelease();
            objc_msgSend(v10, sel_setAccessibilityIdentifier_, v13);
          }
          else
          {
            __break(1u);
          }
        }
      }
    }
  }
}

void sub_1C23E6888()
{
  uint64_t v1 = self;
  uint64_t v2 = OBJC_IVAR___WDClinicalAccountAddedViewController_customConstraints;
  sub_1C21F34D4();
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_deactivateConstraints_, v3);

  id v4 = objc_msgSend(v0, sel_traitCollection);
  id v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  LOBYTE(v4) = sub_1C254FD50();
  if (v4) {
    uint64_t v6 = sub_1C23E5208();
  }
  else {
    uint64_t v6 = sub_1C23E4FD4();
  }
  *(void *)&v0[v2] = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v7 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v7);

  id v8 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v8, sel_setNeedsLayout);
}

uint64_t sub_1C23E69F4()
{
  v1[5] = v0;
  v1[6] = swift_getObjectType();
  uint64_t v2 = sub_1C254E560();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  sub_1C254F820();
  v1[10] = sub_1C254F810();
  uint64_t v4 = sub_1C254F7D0();
  v1[11] = v4;
  v1[12] = v3;
  return MEMORY[0x1F4188298](sub_1C23E6AF4, v4, v3);
}

uint64_t sub_1C23E6AF4()
{
  v0[13] = objc_msgSend(*(id *)(*(void *)(v0[5] + OBJC_IVAR___WDClinicalAccountAddedViewController_onboardingSession)+ OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_healthRecordsStore);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C23E6BC0;
  return MEMORY[0x1F40E79E0]();
}

uint64_t sub_1C23E6BC0(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 104);
  *(unsigned char *)(*v1 + 120) = a1;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 96);
  uint64_t v5 = *(void *)(v2 + 88);
  return MEMORY[0x1F4188298](sub_1C23E6D08, v5, v4);
}

uint64_t sub_1C23E6D08()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(unsigned char **)(v0 + 40);
  char v2 = *(unsigned char *)(v0 + 120);
  swift_release();
  v1[OBJC_IVAR___WDClinicalAccountAddedViewController_shouldPromptForDataCollection] = v2;
  sub_1C254E510();
  uint64_t v3 = v1;
  uint64_t v4 = sub_1C254E550();
  os_log_type_t v5 = sub_1C254FA00();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v24 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 48);
    uint64_t v25 = *(void *)(v0 + 56);
    uint64_t v26 = *(void *)(v0 + 72);
    os_log_type_t type = v5;
    uint64_t v7 = *(void **)(v0 + 40);
    log = v4;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v8 = 136315394;
    *(void *)(v0 + 16) = v6;
    swift_getMetatypeMetadata();
    uint64_t v9 = sub_1C254F4F0();
    *(void *)(v0 + 24) = sub_1C21AD354(v9, v10, &v27);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    *(_WORD *)(v8 + 12) = 2080;
    id v11 = (id)HKStringFromBool();
    uint64_t v12 = sub_1C254F470();
    unint64_t v14 = v13;

    *(void *)(v0 + 32) = sub_1C21AD354(v12, v14, &v27);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, log, type, "%s: Fetched shouldPromptForImproveHealthRecordsDataSubmission, should prompt: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v22, -1, -1);
    MEMORY[0x1C875A0B0](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v17 = *(void *)(v0 + 56);
    uint64_t v18 = *(void **)(v0 + 40);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  sub_1C23E6654();
  swift_task_dealloc();
  id v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

id AccountAddedViewController.__allocating_init(title:detailText:symbolName:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v12 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    unint64_t v13 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    unint64_t v14 = 0;
    goto LABEL_6;
  }
  unint64_t v13 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  unint64_t v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
LABEL_6:
  id v15 = objc_msgSend(objc_allocWithZone(v8), sel_initWithTitle_detailText_symbolName_contentLayout_, v12, v13, v14, a7);

  return v15;
}

void AccountAddedViewController.init(title:detailText:symbolName:contentLayout:)()
{
}

id AccountAddedViewController.__allocating_init(title:detailText:icon:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v7 = v6;
  id v11 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (a4)
  {
    uint64_t v12 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  id v13 = objc_msgSend(objc_allocWithZone(v7), sel_initWithTitle_detailText_icon_contentLayout_, v11, v12, a5, a6);

  return v13;
}

void AccountAddedViewController.init(title:detailText:icon:contentLayout:)()
{
}

id AccountAddedViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountAddedViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AccountAddedViewController()
{
  return self;
}

void sub_1C23E733C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C23E73A0()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C23E73D8(uint64_t a1, uint64_t a2)
{
  sub_1C23E6054(a1, a2, v2);
}

uint64_t sub_1C23E73E0()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C23E7420()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C222399C;
  return sub_1C23E60A8();
}

uint64_t method lookup function for AccountAddedViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountAddedViewController);
}

uint64_t dispatch thunk of AccountAddedViewController.dismissHandler.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of AccountAddedViewController.dismissHandler.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of AccountAddedViewController.dismissHandler.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of AccountAddedViewController.__allocating_init(onboardingSession:account:)()
{
  return (*(uint64_t (**)(void))(v0 + 360))();
}

void sub_1C23E75BC(uint64_t a1)
{
  sub_1C23E619C(a1, v1);
}

uint64_t sub_1C23E75C4()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t block_destroy_helper_45()
{
  return swift_release();
}

uint64_t sub_1C23E7604()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C23E763C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C23E7674(uint64_t a1)
{
  sub_1C23E6504(a1, *(char **)(v1 + 16));
}

id AccountStateChange.clinicalAccountStore.getter()
{
  return *v0;
}

id AccountStateChange.account.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t AccountStateChange.changeType.getter()
{
  return *(void *)(v0 + 16);
}

double sub_1C23E7698@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C254EB70();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_1C23E7720(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void **)a1;
  long long v3 = *(void **)(a1 + 8);
  uint64_t v4 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C22B3C2C(v2, v3);
  id v5 = v4;
  return sub_1C254EB80();
}

uint64_t sub_1C23E77B0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C254EB70();
  swift_release();
  return swift_release();
}

uint64_t sub_1C23E7830()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return sub_1C254EB80();
}

void (*sub_1C23E78AC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1C254EB60();
  return sub_1C23B6204;
}

uint64_t sub_1C23E7938()
{
  return swift_endAccess();
}

uint64_t sub_1C23E79B8(uint64_t a1)
{
  sub_1C21A85D8(0, &qword_1EBB6F458, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v13 - v9;
  id v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  v11((char *)&v13 - v9, a1, v3, v8);
  ((void (*)(char *, char *, uint64_t))v11)(v6, v10, v3);
  swift_beginAccess();
  sub_1C21A85D8(0, &qword_1EBB6FA48, MEMORY[0x1E4F1AC70]);
  sub_1C254EB50();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

uint64_t sub_1C23E7B5C(uint64_t a1)
{
  sub_1C21A85D8(0, &qword_1EBB6F458, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  __n128 v5 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v8 - v6, a1, v3, v5);
  swift_beginAccess();
  sub_1C21A85D8(0, &qword_1EBB6FA48, MEMORY[0x1E4F1AC70]);
  sub_1C254EB50();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*sub_1C23E7CB4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_1C21A85D8(0, &qword_1EBB6F458, MEMORY[0x1E4F1AC60]);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener__latestChange;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_1C21A85D8(0, &qword_1EBB6FA48, MEMORY[0x1E4F1AC70]);
  v3[16] = v9;
  sub_1C254EB40();
  swift_endAccess();
  return sub_1C23B690C;
}

id AccountStateChangeListener.__allocating_init(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C21A85D8(0, &qword_1EBB6FA48, MEMORY[0x1E4F1AC70]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v18 - v9;
  id v11 = (char *)objc_allocWithZone(v3);
  uint64_t v12 = &v11[OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener__latestChange];
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  sub_1C21A8504();
  uint64_t v13 = v11;
  sub_1C254EB30();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v12, v10, v7);
  uint64_t v14 = OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_changePublisher;
  sub_1C21A842C();
  swift_allocObject();
  *(void *)&v13[v14] = sub_1C254EA50();
  id v15 = &v13[OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_handler];
  *(void *)id v15 = a1;
  *((void *)v15 + 1) = a2;
  swift_retain();

  v19.receiver = v13;
  v19.super_class = v3;
  id v16 = objc_msgSendSuper2(&v19, sel_init);
  swift_release();
  return v16;
}

void sub_1C23E7F9C(void *a1, id a2, uint64_t a3)
{
  uint64_t v7 = sub_1C254E560();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E520();
  id v11 = v3;
  id v12 = a1;
  id v13 = v11;
  id v14 = v12;
  id v15 = sub_1C254E550();
  os_log_type_t v16 = sub_1C254FA40();
  int v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v38 = a2;
    uint64_t v19 = v18;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v41 = v36;
    *(_DWORD *)uint64_t v19 = 136446722;
    HIDWORD(v35) = v17;
    uint64_t ObjectType = swift_getObjectType();
    sub_1C23E8588();
    uint64_t v37 = v7;
    uint64_t v20 = sub_1C254F510();
    uint64_t v39 = a3;
    uint64_t ObjectType = sub_1C21AD354(v20, v21, &v41);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    *(_WORD *)(v19 + 12) = 2082;
    uint64_t ObjectType = (uint64_t)v14;
    sub_1C23E85C4();
    id v22 = v14;
    uint64_t v23 = sub_1C254F510();
    uint64_t ObjectType = sub_1C21AD354(v23, v24, &v41);
    sub_1C2550120();
    a3 = v39;
    swift_bridgeObjectRelease();

    *(_WORD *)(v19 + 22) = 2082;
    uint64_t ObjectType = 0;
    unint64_t v43 = 0xE000000000000000;
    uint64_t v40 = a3;
    type metadata accessor for HKClinicalAccountStateChangeType(0);
    sub_1C25504F0();
    uint64_t ObjectType = sub_1C21AD354(ObjectType, v43, &v41);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v15, BYTE4(v35), "%{public}s: accountStateDidChange (store: %{public}s, change: %{public}s)", (uint8_t *)v19, 0x20u);
    uint64_t v25 = v36;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v25, -1, -1);
    uint64_t v26 = v19;
    a2 = v38;
    MEMORY[0x1C875A0B0](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v37);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t ObjectType = (uint64_t)v14;
  unint64_t v43 = (unint64_t)a2;
  uint64_t v44 = a3;
  uint64_t v27 = (char *)v13;
  id v28 = v14;
  id v29 = a2;
  id v30 = v28;
  id v31 = v29;
  sub_1C254EB80();
  uint64_t ObjectType = (uint64_t)v14;
  unint64_t v43 = (unint64_t)a2;
  uint64_t v44 = a3;
  id v32 = v30;
  id v33 = v31;
  sub_1C254EA40();

  uint64_t v34 = *(void (**)(uint64_t *))&v27[OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_handler];
  uint64_t ObjectType = (uint64_t)v32;
  unint64_t v43 = (unint64_t)v33;
  uint64_t v44 = a3;
  v34(&ObjectType);
}

id AccountStateChangeListener.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AccountStateChangeListener.init()()
{
}

id AccountStateChangeListener.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountStateChangeListener();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1C23E8588()
{
  unint64_t result = qword_1EA2E2E20;
  if (!qword_1EA2E2E20)
  {
    type metadata accessor for AccountStateChangeListener();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E2E20);
  }
  return result;
}

unint64_t sub_1C23E85C4()
{
  unint64_t result = qword_1EA2E2E28;
  if (!qword_1EA2E2E28)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E2E28);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AccountStateChange(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for AccountStateChange(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for AccountStateChange(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for AccountStateChange()
{
  return &type metadata for AccountStateChange;
}

uint64_t sub_1C23E8700()
{
  return type metadata accessor for AccountStateChangeListener();
}

void sub_1C23E8708()
{
  sub_1C21A85D8(319, &qword_1EBB6FA48, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AccountStateChangeListener(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountStateChangeListener);
}

uint64_t dispatch thunk of AccountStateChangeListener.latestChange.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AccountStateChangeListener.latestChange.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AccountStateChangeListener.latestChange.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AccountStateChangeListener.$latestChange.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AccountStateChangeListener.$latestChange.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AccountStateChangeListener.__allocating_init(handler:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of AccountStateChangeListener.accountStateDidChange(clinicalAccountStore:account:changeType:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t sub_1C23E8940(void *a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255CD90;
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  if (a1)
  {
    uint64_t v14 = 0x656C69666F72505BLL;
    unint64_t v15 = 0xE90000000000003ALL;
    id v7 = a1;
    id v8 = objc_msgSend(v7, sel_identifier);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();

    unint64_t v10 = v14;
    unint64_t v9 = v15;
  }
  else
  {
    unint64_t v9 = 0x80000001C2578680;
    unint64_t v10 = 0xD000000000000013;
  }
  uint64_t v14 = v10;
  unint64_t v15 = v9;
  sub_1C254F5A0();
  unint64_t v11 = v15;
  *(void *)(v6 + 32) = v14;
  *(void *)(v6 + 40) = v11;
  uint64_t v14 = v6;
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
  sub_1C226BF44();
  uint64_t v12 = sub_1C254F390();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t _s15HealthRecordsUI35AddAccountFeedItemIdentifierFactoryV011makeGeneralab10OnboardingH03forSSSo09HKProfileH0CSg_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255CD90;
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  if (a1)
  {
    uint64_t v14 = 0x656C69666F72505BLL;
    unint64_t v15 = 0xE90000000000003ALL;
    id v7 = a1;
    id v8 = objc_msgSend(v7, sel_identifier);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();

    unint64_t v10 = v14;
    unint64_t v9 = v15;
  }
  else
  {
    unint64_t v9 = 0x80000001C2578680;
    unint64_t v10 = 0xD000000000000013;
  }
  uint64_t v14 = v10;
  unint64_t v15 = v9;
  sub_1C254F5A0();
  unint64_t v11 = v15;
  *(void *)(v6 + 32) = v14;
  *(void *)(v6 + 40) = v11;
  uint64_t v14 = v6;
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
  sub_1C226BF44();
  uint64_t v12 = sub_1C254F390();
  swift_bridgeObjectRelease();
  return v12;
}

ValueMetadata *type metadata accessor for AddAccountFeedItemIdentifierFactory()
{
  return &type metadata for AddAccountFeedItemIdentifierFactory;
}

unint64_t static ExplainerTextFooterCell.reuseIdentifier.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_1C23E8EF8()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR___HRExplainerTextFooterCell_content);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1C23E8FD0(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + OBJC_IVAR___HRExplainerTextFooterCell_content);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR___HRExplainerTextFooterCell_label);
  if (v5[1])
  {
    swift_bridgeObjectRetain();
    id v7 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = 0;
  }
  objc_msgSend(v6, sel_setText_, v7);
}

void (*sub_1C23E9088(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HRExplainerTextFooterCell_content;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C23E90F4;
}

void sub_1C23E90F4(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    id v5 = *(void **)(v4 + OBJC_IVAR___HRExplainerTextFooterCell_label);
    if (*(void *)(v4 + v3[4] + 8))
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = 0;
    }
    objc_msgSend(v5, sel_setText_, v6);
  }
  free(v3);
}

id ExplainerTextFooterCell.__allocating_init(reuseIdentifier:)()
{
  id v1 = objc_allocWithZone(v0);
  uint64_t v2 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithStyle_reuseIdentifier_, 0, v2);

  id v4 = v3;
  sub_1C23E9308();

  return v4;
}

id ExplainerTextFooterCell.init(reuseIdentifier:)()
{
  id v1 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithStyle_reuseIdentifier_, 0, v1);

  id v3 = v2;
  sub_1C23E9308();

  return v3;
}

void sub_1C23E9308()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = self;
  id v3 = objc_msgSend(v2, sel_clearColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v3);

  id v4 = objc_msgSend(v2, sel_clearColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v4);

  id v5 = *(void **)&v0[OBJC_IVAR___HRExplainerTextFooterCell_label];
  id v6 = objc_msgSend(v2, sel_systemGrayColor);
  objc_msgSend(v5, sel_setTextColor_, v6);

  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v7 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v7, sel_addSubview_, v5);

  id v8 = objc_msgSend(v5, sel_leadingAnchor);
  id v9 = objc_msgSend(v0, sel_contentView);
  id v10 = objc_msgSend(v9, sel_layoutMarginsGuide);

  id v11 = objc_msgSend(v10, sel_leadingAnchor);
  id v12 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v11);

  objc_msgSend(v12, sel_setActive_, 1);
  id v13 = objc_msgSend(v5, sel_trailingAnchor);
  id v14 = objc_msgSend(v0, sel_contentView);
  id v15 = objc_msgSend(v14, sel_layoutMarginsGuide);

  id v16 = objc_msgSend(v15, sel_trailingAnchor);
  id v17 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v16);

  objc_msgSend(v17, sel_setActive_, 1);
  id v18 = objc_msgSend(v5, sel_topAnchor);
  id v19 = objc_msgSend(v0, sel_contentView);
  id v20 = objc_msgSend(v19, sel_layoutMarginsGuide);

  id v21 = objc_msgSend(v20, sel_topAnchor);
  id v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v21);

  objc_msgSend(v22, sel_setActive_, 1);
  id v23 = objc_msgSend(v5, sel_bottomAnchor);
  id v24 = objc_msgSend(v0, sel_contentView);
  id v25 = objc_msgSend(v24, sel_layoutMarginsGuide);

  id v26 = objc_msgSend(v25, sel_bottomAnchor);
  id v27 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v26);

  objc_msgSend(v27, sel_setActive_, 1);
}

id ExplainerTextFooterCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  if (a3)
  {
    id v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id ExplainerTextFooterCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR___HRExplainerTextFooterCell_label;
  id v7 = self;
  uint64_t v8 = *MEMORY[0x1E4FB28F0];
  id v9 = v3;
  id v10 = objc_msgSend(v7, sel_preferredFontForTextStyle_, v8);
  id v11 = objc_msgSend(self, sel_labelColor);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v12, sel_setFont_, v10);
  objc_msgSend(v12, sel_setNumberOfLines_, 0);
  objc_msgSend(v12, sel_setTextColor_, v11);

  *(void *)&v3[v6] = v12;
  id v13 = &v9[OBJC_IVAR___HRExplainerTextFooterCell_content];
  *(void *)id v13 = 0;
  *((void *)v13 + 1) = 0;

  if (a3)
  {
    id v14 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v14 = 0;
  }
  v17.receiver = v9;
  v17.super_class = (Class)type metadata accessor for ExplainerTextFooterCell();
  id v15 = objc_msgSendSuper2(&v17, sel_initWithStyle_reuseIdentifier_, a1, v14);

  return v15;
}

uint64_t type metadata accessor for ExplainerTextFooterCell()
{
  return self;
}

id ExplainerTextFooterCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ExplainerTextFooterCell.init(coder:)(void *a1)
{
  uint64_t v3 = OBJC_IVAR___HRExplainerTextFooterCell_label;
  id v4 = self;
  uint64_t v5 = *MEMORY[0x1E4FB28F0];
  uint64_t v6 = v1;
  id v7 = objc_msgSend(v4, sel_preferredFontForTextStyle_, v5);
  id v8 = objc_msgSend(self, sel_labelColor);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v9, sel_setFont_, v7);
  objc_msgSend(v9, sel_setNumberOfLines_, 0);
  objc_msgSend(v9, sel_setTextColor_, v8);

  *(void *)&v1[v3] = v9;
  id v10 = &v6[OBJC_IVAR___HRExplainerTextFooterCell_content];
  *(void *)id v10 = 0;
  *((void *)v10 + 1) = 0;

  v13.receiver = v6;
  v13.super_class = (Class)type metadata accessor for ExplainerTextFooterCell();
  id v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

id ExplainerTextFooterCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExplainerTextFooterCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C23E9B60@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___HRExplainerTextFooterCell_content);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

void sub_1C23E9BB8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1C23E8FD0(v1, v2);
}

uint64_t method lookup function for ExplainerTextFooterCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ExplainerTextFooterCell);
}

uint64_t dispatch thunk of ExplainerTextFooterCell.content.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ExplainerTextFooterCell.content.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ExplainerTextFooterCell.content.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

unint64_t DisplayCategory.Kind.hkDisplayCategory.getter()
{
  unint64_t result = *v0;
  uint64_t v2 = 16;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 21;
      goto LABEL_11;
    case 2:
      uint64_t v2 = 20;
      goto LABEL_11;
    case 3:
      uint64_t v2 = 17;
      goto LABEL_11;
    case 4:
      uint64_t v2 = 18;
      goto LABEL_11;
    case 5:
      uint64_t v2 = 22;
      goto LABEL_11;
    case 6:
      uint64_t v2 = 19;
      goto LABEL_11;
    case 7:
      goto LABEL_11;
    case 8:
      uint64_t v2 = -1;
      goto LABEL_11;
    case 9:
      uint64_t v2 = 27;
      goto LABEL_11;
    case 0xA:
      uint64_t v2 = 30;
LABEL_11:
      unint64_t result = (unint64_t)objc_msgSend(self, sel_categoryWithID_, v2);
      break;
    default:
      return result;
  }
  return result;
}

void *static DisplayCategory.Kind.allCases.getter()
{
  return &unk_1F1D8E218;
}

unint64_t DisplayCategory.Kind.systemImageName.getter()
{
  uint64_t v1 = 16;
  uint64_t v2 = *v0;
  switch(*v0)
  {
    case 1:
      uint64_t v1 = 21;
      goto LABEL_10;
    case 2:
      uint64_t v1 = 20;
      goto LABEL_10;
    case 3:
      uint64_t v1 = 17;
      goto LABEL_10;
    case 4:
      uint64_t v1 = 18;
      goto LABEL_10;
    case 5:
      uint64_t v1 = 22;
      goto LABEL_10;
    case 6:
      uint64_t v1 = 19;
      goto LABEL_10;
    case 7:
      goto LABEL_10;
    case 8:
      return 0xD000000000000010;
    case 9:
      uint64_t v1 = 27;
      goto LABEL_10;
    case 0xA:
      uint64_t v1 = 30;
LABEL_10:
      id v3 = objc_msgSend(self, sel_categoryWithID_, v1);
      if (v3)
      {
        uint64_t v4 = v3;
        id v5 = objc_msgSend(v3, sel_systemImageName);

        uint64_t v2 = sub_1C254F470();
      }
      else
      {
        uint64_t v2 = 0;
      }
      break;
    default:
      return v2;
  }
  return v2;
}

uint64_t DisplayCategory.Kind.rawValue.getter()
{
  return *v0;
}

uint64_t DisplayCategory.Kind.medicalRecordCategoryType.getter()
{
  return *v0;
}

uint64_t DisplayCategory.Kind.medicalTypes.getter()
{
  switch(*v0)
  {
    case 1:
      sub_1C23EAFA8(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1C255CD80;
      *(void *)(v1 + 32) = objc_msgSend(self, sel_medicationDispenseRecordType);
      *(void *)(v1 + 40) = objc_msgSend(self, sel_medicationOrderType);
      *(void *)(v1 + 48) = objc_msgSend(self, sel_medicationRecordType);
      goto LABEL_11;
    case 2:
    case 3:
      sub_1C23EAFA8(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1C255CEB0;
      id v2 = objc_msgSend(self, sel_diagnosticTestResultType);
      goto LABEL_10;
    case 4:
      sub_1C23EAFA8(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1C255CEB0;
      id v2 = objc_msgSend(self, sel_conditionRecordType);
      goto LABEL_10;
    case 5:
      sub_1C23EAFA8(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1C255CEB0;
      id v2 = objc_msgSend(self, sel_procedureRecordType);
      goto LABEL_10;
    case 6:
      sub_1C23EAFA8(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1C255CEB0;
      id v2 = objc_msgSend(self, sel_vaccinationRecordType);
      goto LABEL_10;
    case 7:
      sub_1C23EAFA8(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1C255CEB0;
      id v2 = objc_msgSend(self, sel_allergyRecordType);
      goto LABEL_10;
    case 8:
      sub_1C23EAFA8(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1C255CEB0;
      id v2 = objc_msgSend(self, sel_unknownRecordType);
      goto LABEL_10;
    case 0xA:
      sub_1C23EAFA8(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v1 = swift_allocObject();
      *(_OWORD *)(v1 + 16) = xmmword_1C255CEB0;
      id v2 = objc_msgSend(self, sel_clinicalNoteRecordType);
LABEL_10:
      *(void *)(v1 + 32) = v2;
LABEL_11:
      sub_1C254F730();
      return v1;
    default:
      sub_1C25505F0();
      __break(1u);
      JUMPOUT(0x1C23EA3FCLL);
  }
}

HealthRecordsUI::DisplayCategory::Kind_optional __swiftcall DisplayCategory.Kind.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 11;
  if ((unint64_t)rawValue < 0xB) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (HealthRecordsUI::DisplayCategory::Kind_optional)rawValue;
}

void DisplayCategory.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

id DisplayCategory.tintColor.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t DisplayCategory.imageName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DisplayCategory.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DisplayCategory.queryDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DisplayCategory.reachableQueryDescriptor.getter()
{
  return swift_bridgeObjectRetain();
}

void DisplayCategory.hash(into:)(uint64_t a1)
{
  id v3 = (void *)v1[1];
  uint64_t v4 = v1[3];
  unint64_t v5 = v1[6];
  unint64_t v6 = v1[7];
  id v7 = (void *)v1[8];
  sub_1C25509D0();
  id v8 = v3;
  sub_1C254FF80();

  sub_1C25509E0();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1C254F570();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C23EAC64(a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C23EAC64(a1, v6);
  swift_bridgeObjectRelease();
  id v9 = v7;
  sub_1C254FF80();
}

uint64_t DisplayCategory.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 32);
  v5[72] = *(unsigned char *)v0;
  uint64_t v6 = v1;
  long long v7 = *(_OWORD *)(v0 + 16);
  uint64_t v8 = v2;
  long long v3 = *(_OWORD *)(v0 + 56);
  long long v9 = *(_OWORD *)(v0 + 40);
  long long v10 = v3;
  sub_1C25509C0();
  DisplayCategory.hash(into:)((uint64_t)v5);
  return sub_1C2550A10();
}

uint64_t sub_1C23EA670()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 32);
  v5[72] = *(unsigned char *)v0;
  uint64_t v6 = v1;
  long long v7 = *(_OWORD *)(v0 + 16);
  uint64_t v8 = v2;
  long long v3 = *(_OWORD *)(v0 + 56);
  long long v9 = *(_OWORD *)(v0 + 40);
  long long v10 = v3;
  sub_1C25509C0();
  DisplayCategory.hash(into:)((uint64_t)v5);
  return sub_1C2550A10();
}

uint64_t sub_1C23EA6E4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 32);
  v5[72] = *(unsigned char *)v0;
  uint64_t v6 = v1;
  long long v7 = *(_OWORD *)(v0 + 16);
  uint64_t v8 = v2;
  long long v3 = *(_OWORD *)(v0 + 56);
  long long v9 = *(_OWORD *)(v0 + 40);
  long long v10 = v3;
  sub_1C25509C0();
  DisplayCategory.hash(into:)((uint64_t)v5);
  return sub_1C2550A10();
}

HealthRecordsUI::DisplayCategory::Kind_optional sub_1C23EA754(Swift::Int *a1)
{
  return DisplayCategory.Kind.init(rawValue:)(*a1);
}

void sub_1C23EA75C(void *a1@<X8>)
{
  *a1 = &unk_1F1D8E218;
}

uint64_t sub_1C23EA76C()
{
  return sub_1C254F6E0();
}

uint64_t sub_1C23EA7CC()
{
  return sub_1C254F6C0();
}

void *sub_1C23EA81C()
{
  unint64_t result = (void *)sub_1C25184D0((uint64_t)&unk_1F1D8E218, (uint64_t)&unk_1F1D8EB58);
  off_1EBB6F578 = result;
  return result;
}

uint64_t static DisplayCategory.Kind.regularKinds.getter()
{
  return sub_1C23EA8BC(&qword_1EBB6D880);
}

void sub_1C23EA884()
{
  qword_1EA2E2E40 = (uint64_t)&unk_1F1D8EB80;
}

uint64_t static DisplayCategory.Kind.chartableKinds.getter()
{
  return sub_1C23EA8BC(&qword_1EA2DD7C8);
}

uint64_t sub_1C23EA8BC(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

void *static DisplayCategory.Kind.kindsWithAttachments.getter()
{
  return &unk_1F1D8EBA8;
}

id HKMedicalType.displayCategoryKind.getter@<X0>(char *a1@<X8>)
{
  id result = objc_msgSend(v1, sel_code);
  char v4 = 1;
  switch((unint64_t)result)
  {
    case 0x7EuLL:
    case 0x7FuLL:
    case 0x80uLL:
      break;
    case 0x81uLL:
    case 0x82uLL:
      char v4 = 2;
      break;
    case 0x83uLL:
      char v4 = 6;
      break;
    case 0x84uLL:
      char v4 = 4;
      break;
    case 0x85uLL:
      char v4 = 7;
      break;
    case 0x86uLL:
      char v4 = 5;
      break;
    default:
      if (result == (id)267) {
        char v4 = 10;
      }
      else {
        char v4 = 0;
      }
      break;
  }
  *a1 = v4;
  return result;
}

id sub_1C23EA9D0@<X0>(char *a1@<X8>)
{
  return HKMedicalType.displayCategoryKind.getter(a1);
}

uint64_t sub_1C23EA9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB73C(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  long long v10 = (char *)&v22 - v9;
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v27 = a1;
  sub_1C25509D0();
  if (v11)
  {
    objc_super v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    unint64_t v15 = v12 + 40;
    uint64_t v16 = v12;
    objc_super v17 = (uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32);
    id v24 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    id v25 = v13;
    id v18 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v26 = v16;
    uint64_t v19 = *(void *)(v16 + 56);
    unint64_t v22 = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v23 = v19;
    while (1)
    {
      v25(v10, v14, v4);
      id v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v10, 0, 1, v4);
      uint64_t result = (*v17)(v10, 1, v4);
      if (result == 1) {
        break;
      }
      (*v24)(v7, v10, v4);
      sub_1C23EB4BC();
      sub_1C254F380();
      (*v18)(v7, v4);
      v14 += v23;
      if (!--v11) {
        return v20(v10, 1, 1, v4);
      }
    }
  }
  else
  {
    id v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v20(v10, 1, 1, v4);
  }
  return result;
}

void sub_1C23EAC64(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C2550620();
    swift_bridgeObjectRelease();
    sub_1C25509D0();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v3) {
      return;
    }
  }
  else
  {
    sub_1C25509D0();
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      MEMORY[0x1C87588E0](i, a2);
      sub_1C254FF80();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v5 = (void **)(a2 + 32);
    do
    {
      uint64_t v6 = *v5++;
      id v7 = v6;
      sub_1C254FF80();

      --v3;
    }
    while (v3);
  }
}

uint64_t _s15HealthRecordsUI15DisplayCategoryV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2) {
    return 0;
  }
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v13 = a1[6];
  uint64_t v14 = a1[5];
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  uint64_t v6 = a2[5];
  uint64_t v11 = a1[7];
  uint64_t v12 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v7 = a2[2];
  uint64_t v8 = a1[2];
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
  if ((sub_1C254FF70() & 1) == 0) {
    return 0;
  }
  if (v2)
  {
    if (!v4 || (v8 != v7 || v2 != v4) && (sub_1C2550870() & 1) == 0) {
      return 0;
    }
  }
  else if (v4)
  {
    return 0;
  }
  if (v3 == v5 && v14 == v6 || (sub_1C2550870())
    && (sub_1C22AB474(v13, v12) & 1) != 0
    && (sub_1C22AB474(v11, v10) & 1) != 0)
  {
    return sub_1C254FF70() & 1;
  }
  return 0;
}

unint64_t sub_1C23EAED4()
{
  unint64_t result = qword_1EBB6FBA8;
  if (!qword_1EBB6FBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6FBA8);
  }
  return result;
}

unint64_t sub_1C23EAF2C()
{
  unint64_t result = qword_1EA2E2E48;
  if (!qword_1EA2E2E48)
  {
    sub_1C23EAFA8(255, &qword_1EA2E2E50, (uint64_t)&type metadata for DisplayCategory.Kind, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2E48);
  }
  return result;
}

void sub_1C23EAFA8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C23EAFF8()
{
  unint64_t result = qword_1EBB6F588;
  if (!qword_1EBB6F588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F588);
  }
  return result;
}

uint64_t initializeWithCopy for DisplayCategory(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void **)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void **)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  id v8 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = v7;
  return a1;
}

uint64_t assignWithCopy for DisplayCategory(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a2 + 64);
  id v8 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for DisplayCategory(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for DisplayCategory(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisplayCategory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayCategory()
{
  return &type metadata for DisplayCategory;
}

uint64_t getEnumTagSinglePayload for DisplayCategory.Kind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DisplayCategory.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C23EB42CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

uint64_t dispatch thunk of HKMedicalTypeCategoryKind.displayCategoryKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unint64_t sub_1C23EB468()
{
  unint64_t result = qword_1EA2E2E58;
  if (!qword_1EA2E2E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2E58);
  }
  return result;
}

unint64_t sub_1C23EB4BC()
{
  unint64_t result = qword_1EBB6F4E8;
  if (!qword_1EBB6F4E8)
  {
    sub_1C254CB40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F4E8);
  }
  return result;
}

uint64_t ListConceptManagerConfiguration.isEnabled.getter()
{
  return (*v0 < 5uLL) & (0x13u >> *v0);
}

uint64_t ListConceptManagerConfiguration.listType.getter()
{
  return *(void *)v0;
}

uint64_t ListConceptManagerConfiguration.listType.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ListConceptManagerConfiguration.listType.modify())()
{
  return nullsub_1;
}

uint64_t ListConceptManagerProviding.listConceptManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t ListConceptManagerProviding.listConceptManagerConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t UIViewController.resolvedListConceptManagerConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C254E560();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unsigned int v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C254FB60();
  uint64_t v8 = v23;
  char v9 = v24;
  if (v24 == 1)
  {
    sub_1C254E520();
    id v10 = v1;
    uint64_t v11 = sub_1C254E550();
    os_log_type_t v12 = sub_1C254FA20();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v20 = v3;
      uint64_t v14 = (uint8_t *)v13;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v23 = v19;
      uint64_t v21 = v8;
      *(_DWORD *)uint64_t v14 = 136446210;
      v18[1] = v14 + 4;
      uint64_t v15 = sub_1C254FB50();
      uint64_t v22 = sub_1C21AD354(v15, v16, &v23);
      uint64_t v8 = v21;
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v11, v12, "resolvedListConceptManagerConfiguration requested, but none found in hierarchy: %{public}s", v14, 0xCu);
      uint64_t v17 = v19;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v17, -1, -1);
      MEMORY[0x1C875A0B0](v14, -1, -1);

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v20);
    }
    else
    {

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  *(void *)a1 = v8;
  *(unsigned char *)(a1 + 8) = v9;
  return result;
}

uint64_t UIViewController.availableListConceptManagerConfiguration.getter()
{
  return sub_1C254FB60();
}

uint64_t sub_1C23EB838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C21A9A38(a1, (uint64_t)v9);
  sub_1C23EC0C4();
  char v3 = swift_dynamicCast();
  if (v3)
  {
    uint64_t v4 = *((void *)&v11 + 1);
    uint64_t v5 = v12;
    __swift_project_boxed_opaque_existential_1Tm(&v10, *((uint64_t *)&v11 + 1));
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 16))(&v8, v4, v5);
    uint64_t v6 = v8;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v10);
  }
  else
  {
    uint64_t v12 = 0;
    long long v10 = 0u;
    long long v11 = 0u;
    uint64_t result = sub_1C23EC11C((uint64_t)&v10);
    uint64_t v6 = 0;
  }
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v3 ^ 1;
  return result;
}

uint64_t sub_1C23EB910@<X0>(uint64_t a1@<X8>)
{
  return UIViewController.resolvedListConceptManagerConfiguration.getter(a1);
}

void __swiftcall UIViewController.hrui_presentationCapableViewController()(Swift::tuple_viewController_UIViewController_shouldNotDismiss_Bool *__return_ptr retstr)
{
  id v2 = v1;
  id v3 = objc_msgSend(v2, sel_presentedViewController);

  if (v3)
  {
    char v4 = 0;
    uint64_t v5 = v2;
    do
    {
      unsigned __int8 v6 = objc_msgSend(v5, sel_isModalInPresentation);
      id v7 = objc_msgSend(v5, sel_presentedViewController);
      if (!v7)
      {
        __break(1u);
LABEL_18:
        __break(1u);
        return;
      }
      uint64_t v8 = v7;

      v4 |= v6;
      id v9 = objc_msgSend(v8, sel_presentedViewController);

      uint64_t v5 = v8;
    }
    while (v9);
    if (v4) {
      return;
    }
  }
  id v10 = objc_msgSend(v2, sel_presentingViewController);

  if (v10)
  {
    id v11 = v2;
    id v12 = objc_msgSend(v11, sel_presentingViewController);

    if (v12)
    {
      uint64_t v13 = v11;
      while ((objc_msgSend(v13, sel_isModalInPresentation) & 1) == 0)
      {
        id v14 = objc_msgSend(v13, sel_presentingViewController);
        if (!v14) {
          goto LABEL_18;
        }
        id v11 = v14;

        id v15 = objc_msgSend(v11, sel_presentingViewController);
        uint64_t v13 = v11;
        if (!v15) {
          goto LABEL_15;
        }
      }
      id v11 = v13;
    }
LABEL_15:
  }
}

Swift::Void __swiftcall UIViewController.hrui_presentIfPossible(_:animated:)(UIViewController *_, Swift::Bool animated)
{
  id v3 = v2;
  BOOL v4 = animated;
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = &v50[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1C254F230();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (uint64_t *)&v50[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C22023A4();
  *uint64_t v13 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCBF0], v10);
  char v14 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    UIViewController.hrui_presentationCapableViewController()(v15);
    uint64_t v17 = v16;
    if (v18)
    {
      uint64_t v54 = v7;
      BOOL v55 = v4;
      sub_1C254E510();
      id v19 = v3;
      uint64_t v20 = _;
      id v21 = v19;
      uint64_t v22 = v20;
      uint64_t v23 = sub_1C254E550();
      os_log_type_t v24 = sub_1C254FA20();
      int v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v52 = swift_slowAlloc();
        aBlock[0] = v52;
        *(_DWORD *)uint64_t v26 = 136315394;
        int v51 = v25;
        id v27 = v21;
        id v28 = objc_msgSend(v27, sel_description);
        uint64_t v29 = sub_1C254F470();
        uint64_t v53 = v17;
        uint64_t v30 = v29;
        unint64_t v32 = v31;

        uint64_t v56 = sub_1C21AD354(v30, v32, aBlock);
        sub_1C2550120();

        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2080;
        id v33 = v22;
        id v34 = [(UIViewController *)v33 description];
        uint64_t v35 = sub_1C254F470();
        unint64_t v37 = v36;

        uint64_t v38 = v35;
        uint64_t v17 = v53;
        uint64_t v56 = sub_1C21AD354(v38, v37, aBlock);
        sub_1C2550120();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C21A1000, v23, (os_log_type_t)v51, "%s was asked to present %s, however a modal is already being presented and the modal presentation should not be dismissed", (uint8_t *)v26, 0x16u);
        uint64_t v39 = v52;
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v39, -1, -1);
        MEMORY[0x1C875A0B0](v26, -1, -1);
      }
      else
      {
      }
      (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v9, v6);
      unsigned int v44 = objc_msgSend(self, sel_isAppleInternalInstall);
      BOOL v45 = v55;
      if (v44)
      {
        uint64_t v46 = self;
        id v47 = (void *)sub_1C254F430();
        id v48 = (void *)sub_1C254F430();
        id v49 = objc_msgSend(v46, sel_basicAlertControllerWithTitle_message_, v47, v48);

        objc_msgSend(v17, sel_presentViewController_animated_completion_, v49, v45, 0);
      }
    }
    else
    {
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v3;
      *(void *)(v40 + 24) = _;
      *(unsigned char *)(v40 + 32) = v4;
      aBlock[4] = (uint64_t)sub_1C23EC06C;
      aBlock[5] = v40;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1C224E544;
      aBlock[3] = (uint64_t)&block_descriptor_51;
      uint64_t v41 = _Block_copy(aBlock);
      id v42 = v3;
      unint64_t v43 = _;
      swift_release();
      objc_msgSend(v42, sel_dismissViewControllerAnimated_completion_, v4, v41);

      _Block_release(v41);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C23EC02C()
{
  return MEMORY[0x1F4186498](v0, 33, 7);
}

id sub_1C23EC06C()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_presentViewController_animated_completion_, *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), 0);
}

uint64_t block_destroy_helper_46()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for ListConceptManagerConfiguration()
{
  return &type metadata for ListConceptManagerConfiguration;
}

uint64_t dispatch thunk of ListConceptManagerProviding.providedListConceptManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ListConceptManagerProviding.providedListConceptManagerConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

unint64_t sub_1C23EC0C4()
{
  unint64_t result = qword_1EA2E2E60;
  if (!qword_1EA2E2E60)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E2E60);
  }
  return result;
}

uint64_t sub_1C23EC11C(uint64_t a1)
{
  sub_1C23EC178();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C23EC178()
{
  if (!qword_1EA2E2E68)
  {
    sub_1C23EC0C4();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2E68);
    }
  }
}

id sub_1C23EC1D0()
{
  uint64_t v1 = *(void **)(v0 + 64);
  if (v1)
  {
    id v2 = *(id *)(v0 + 64);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
    objc_msgSend(v3, sel_setDateStyle_, 2);
    objc_msgSend(v3, sel_setTimeStyle_, 1);
    BOOL v4 = *(void **)(v0 + 64);
    *(void *)(v0 + 64) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_1C23EC264()
{
  id v1 = objc_msgSend(v0, sel_meaningfulDateTitle);
  uint64_t v2 = sub_1C254F470();
  unint64_t v4 = v3;

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v6 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C2314F28(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C255CDA0;
    uint64_t v8 = MEMORY[0x1E4FBB1A0];
    *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v9 = sub_1C220D950();
    *(void *)(v7 + 64) = v9;
    *(void *)(v7 + 32) = v2;
    *(void *)(v7 + 40) = v4;
    id v10 = objc_msgSend(v0, sel_meaningfulDateString, 0xE000000000000000);
    uint64_t v11 = sub_1C254F470();
    uint64_t v13 = v12;

    *(void *)(v7 + 96) = v8;
    *(void *)(v7 + 104) = v9;
    *(void *)(v7 + 72) = v11;
    *(void *)(v7 + 80) = v13;
    uint64_t v14 = sub_1C254F4B0();
    swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v0, sel_meaningfulDateString);
    uint64_t v17 = sub_1C254F470();

    return v17;
  }
}

uint64_t sub_1C23EC488()
{
  v1[19] = v0;
  v1[20] = *v0;
  uint64_t v2 = sub_1C254CB40();
  v1[21] = v2;
  v1[22] = *(void *)(v2 - 8);
  v1[23] = swift_task_alloc();
  uint64_t v3 = sub_1C254E560();
  v1[24] = v3;
  v1[25] = *(void *)(v3 - 8);
  v1[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C23EC5CC, 0, 0);
}

uint64_t sub_1C23EC5CC()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = *(void **)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 16);
  v0[27] = v3;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1C23EC6D8;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C23ECE9C;
  v0[13] = &block_descriptor_11_0;
  v0[14] = v4;
  objc_msgSend(v2, sel_getAttachmentsForObject_completion_, v3, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C23EC6D8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 224) = v1;
  if (v1) {
    uint64_t v2 = sub_1C23ECD98;
  }
  else {
    uint64_t v2 = sub_1C23EC7E8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C23EC7E8()
{
  id v33 = v0;
  unint64_t v1 = v0[15];
  v0[29] = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[30] = v2;
    unint64_t v3 = sub_1C23F3F88();
    uint64_t v4 = type metadata accessor for AttachmentContext();
    *uint64_t v2 = v0;
    v2[1] = sub_1C23ECC24;
    uint64_t v5 = v0[19];
    return MEMORY[0x1F411DF28](&unk_1EA2E2F50, v5, v1, v3, v4);
  }
  swift_bridgeObjectRelease();
  sub_1C254E510();
  swift_retain_n();
  uint64_t v7 = sub_1C254E550();
  os_log_type_t v8 = sub_1C254FA40();
  if (os_log_type_enabled(v7, v8))
  {
    id v24 = (id)v0[27];
    uint64_t v29 = v0[25];
    uint64_t v30 = v0[24];
    uint64_t v31 = v0[26];
    os_log_type_t type = v8;
    uint64_t v9 = v0[23];
    uint64_t v10 = v0[20];
    uint64_t v25 = v0[21];
    uint64_t v26 = v0[22];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v32 = v27;
    *(_DWORD *)uint64_t v11 = 136446466;
    v0[16] = v10;
    swift_getMetatypeMetadata();
    uint64_t v12 = sub_1C254F4F0();
    v0[17] = sub_1C21AD354(v12, v13, &v32);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v11 + 12) = 2080;
    id v14 = objc_msgSend(v24, sel_UUID);
    sub_1C254CB20();

    sub_1C23F52C8((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v15 = sub_1C2550810();
    unint64_t v17 = v16;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v9, v25);
    v0[18] = sub_1C21AD354(v15, v17, &v32);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C21A1000, v7, type, "%{public}s: No attachments for record %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v27, -1, -1);
    MEMORY[0x1C875A0B0](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
  }
  else
  {
    uint64_t v19 = v0[25];
    uint64_t v18 = v0[26];
    uint64_t v20 = v0[24];
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v21 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v22 = MEMORY[0x1E4FBC860];
  return v21(v22);
}

uint64_t sub_1C23ECC24(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 248) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1C23ECE18, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1C23ECD98()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C23ECE18()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C23ECE9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    sub_1C23F3F88();
    **(void **)(*(void *)(v3 + 64) + 40) = sub_1C254F710();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1C23ECF74(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  v3[2] = a1;
  v3[3] = a3;
  uint64_t v5 = sub_1C254CB40();
  v3[4] = v5;
  v3[5] = *(void *)(v5 - 8);
  v3[6] = swift_task_alloc();
  uint64_t v6 = sub_1C254E340();
  v3[7] = v6;
  v3[8] = *(void *)(v6 - 8);
  v3[9] = swift_task_alloc();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *a2;
  v3[10] = v7;
  v3[11] = v8;
  return MEMORY[0x1F4188298](sub_1C23ED0A8, 0, 0);
}

uint64_t sub_1C23ED0A8()
{
  *(void *)(v0 + 96) = sub_1C254FB90();
  uint64_t v3 = (uint64_t (*)(void))((int)*MEMORY[0x1E4F29548] + MEMORY[0x1E4F29548]);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C23ED160;
  return v3();
}

uint64_t sub_1C23ED160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[14] = a1;
  v4[15] = a2;
  v4[16] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1C23ED7FC;
  }
  else {
    uint64_t v5 = sub_1C23ED278;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C23ED278()
{
  id v1 = objc_msgSend(*(id *)(v0 + 88), sel_contentType);
  sub_1C254E2D0();

  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C23ED338;
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 80);
  return sub_1C23F455C(v4, v3, v5);
}

uint64_t sub_1C23ED338(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(*(void *)v3 + 80);
  uint64_t v6 = *(void *)(*(void *)v3 + 64);
  uint64_t v7 = *(void *)(*(void *)v3 + 56);
  v4[18] = a1;
  v4[19] = a2;
  v4[20] = v2;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  if (v2) {
    uint64_t v8 = sub_1C23ED768;
  }
  else {
    uint64_t v8 = sub_1C23ED4B0;
  }
  return MEMORY[0x1F4188298](v8, 0, 0);
}

uint64_t sub_1C23ED4B0()
{
  id v1 = &selRef_name;
  id v2 = objc_msgSend(*(id *)(v0 + 88), sel_name);
  uint64_t v3 = sub_1C254F470();
  unint64_t v5 = v4;

  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    uint64_t v7 = (id *)(v0 + 88);
  }
  else
  {
    uint64_t v7 = (id *)(*(void *)(v0 + 24) + 16);
    id v1 = &selRef_preferredDisplayName;
  }
  unint64_t v8 = *(void *)(v0 + 152);
  uint64_t v9 = *(void **)(v0 + 88);
  id v10 = [*v7 *v1];
  uint64_t v11 = sub_1C254F470();
  uint64_t v13 = v12;

  id v14 = objc_msgSend(v9, sel_identifier);
  sub_1C254CB20();

  unint64_t v15 = v8 >> 60;
  uint64_t v45 = v11;
  if (v8 >> 60 == 15)
  {
    unint64_t v16 = (uint64_t *)(v0 + 120);
    unint64_t v17 = (uint64_t *)(v0 + 112);
    sub_1C2205E14(*(void *)(v0 + 112), *(void *)(v0 + 120));
  }
  else
  {
    unint64_t v16 = (uint64_t *)(v0 + 152);
    unint64_t v17 = (uint64_t *)(v0 + 144);
  }
  uint64_t v18 = *v16;
  uint64_t v19 = *v17;
  uint64_t v20 = *(void **)(v0 + 88);
  sub_1C23F51B0(*(void *)(v0 + 144), *(void *)(v0 + 152));
  uint64_t v21 = sub_1C23ED888(v20);
  uint64_t v43 = v22;
  uint64_t v44 = v21;
  uint64_t v23 = v19;
  uint64_t v24 = v18;
  uint64_t v25 = v13;
  if (v15 <= 0xE)
  {
    uint64_t v30 = *(void *)(v0 + 144);
    unint64_t v29 = *(void *)(v0 + 152);
    uint64_t v32 = *(void *)(v0 + 112);
    unint64_t v31 = *(void *)(v0 + 120);
    sub_1C254E2E0();
    sub_1C22071AC(v30, v29);
    sub_1C2205E6C(v32, v31);
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 112);
    unint64_t v26 = *(void *)(v0 + 120);
    id v28 = objc_msgSend(*(id *)(v0 + 88), sel_contentType);
    sub_1C254E2D0();
    sub_1C2205E6C(v27, v26);
  }
  swift_release();
  uint64_t v33 = *(void *)(v0 + 72);
  uint64_t v35 = *(void *)(v0 + 56);
  uint64_t v34 = *(void *)(v0 + 64);
  uint64_t v36 = *(void *)(v0 + 16);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 40) + 32))(v36, *(void *)(v0 + 48), *(void *)(v0 + 32));
  unint64_t v37 = (int *)type metadata accessor for AttachmentContext();
  uint64_t v38 = (uint64_t *)(v36 + v37[5]);
  *uint64_t v38 = v45;
  v38[1] = v25;
  uint64_t v39 = (void *)(v36 + v37[6]);
  *uint64_t v39 = v23;
  v39[1] = v24;
  uint64_t v40 = (uint64_t *)(v36 + v37[7]);
  uint64_t *v40 = v44;
  v40[1] = v43;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v36 + v37[8], v33, v35);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

uint64_t sub_1C23ED768()
{
  sub_1C2205E6C(v0[14], v0[15]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1C23ED7FC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C23ED888(void *a1)
{
  uint64_t v2 = v1;
  sub_1C23F3E78(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v36 - v5;
  uint64_t v7 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = MEMORY[0x1F4188790](v7).n128_u64[0];
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(a1, sel_metadata, v9);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = v12;
  uint64_t v14 = MEMORY[0x1E4FBB1A0];
  uint64_t v15 = sub_1C254F2D0();

  uint64_t v16 = sub_1C254F470();
  if (!*(void *)(v15 + 16) || (unint64_t v18 = sub_1C21A6470(v16, v17), (v19 & 1) == 0))
  {
    long long v38 = 0u;
    long long v39 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1C21A9A38(*(void *)(v15 + 56) + 32 * v18, (uint64_t)&v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v39 + 1))
  {
LABEL_10:
    sub_1C23F51C4((uint64_t)&v38, (uint64_t (*)(void))sub_1C224E400);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_11;
  }
  int v20 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, v20 ^ 1u, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_11:
    sub_1C22178C0((uint64_t)v6);
LABEL_12:
    uint64_t v34 = *(void *)(v2 + 24);
    swift_bridgeObjectRetain();
    return v34;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v21 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C254C730();
  uint64_t v36 = v23;
  uint64_t v37 = v22;
  swift_bridgeObjectRelease();

  id v24 = sub_1C23EC1D0();
  uint64_t v25 = (void *)sub_1C254CA50();
  id v26 = objc_msgSend(v24, sel_stringFromDate_, v25);

  uint64_t v27 = sub_1C254F470();
  uint64_t v29 = v28;

  id v30 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C2314F28(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C255CDA0;
  *(void *)(v31 + 56) = v14;
  unint64_t v32 = sub_1C220D950();
  uint64_t v33 = v36;
  *(void *)(v31 + 32) = v37;
  *(void *)(v31 + 40) = v33;
  *(void *)(v31 + 96) = v14;
  *(void *)(v31 + 104) = v32;
  *(void *)(v31 + 64) = v32;
  *(void *)(v31 + 72) = v27;
  *(void *)(v31 + 80) = v29;
  uint64_t v34 = sub_1C254F4B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return v34;
}

uint64_t sub_1C23EDD5C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1C23EDD7C, 0, 0);
}

uint64_t sub_1C23EDD7C()
{
  uint64_t v10 = v0;
  if (*(void *)(v0[2] + 16))
  {
    double v9 = (void *)v0[2];
    swift_bridgeObjectRetain();
    sub_1C23F0CB0(&v9);
    uint64_t v1 = v9;
    v0[4] = v9;
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[5] = v5;
    uint64_t v6 = type metadata accessor for AttachmentContext();
    uint64_t v7 = sub_1C254D9B0();
    void *v5 = v0;
    v5[1] = sub_1C23EDEF0;
    uint64_t v8 = v0[3];
    return MEMORY[0x1F411DF30](&unk_1EA2E2EE8, v8, v1, v6, v7);
  }
  else
  {
    uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v3 = MEMORY[0x1E4FBC860];
    return v2(v3);
  }
}

uint64_t sub_1C23EDEF0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1C23EE04C, 0, 0);
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1C23EE04C()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C23EE0B8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 96) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 104) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C23EE168;
  return sub_1C23EE46C(v2 + 56, a2);
}

uint64_t sub_1C23EE168()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C23EE454;
  }
  else {
    uint64_t v2 = sub_1C23EE27C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C23EE27C()
{
  uint64_t v1 = (long long *)(v0 + 7);
  uint64_t v2 = v0[12];
  if (v0[10])
  {
    sub_1C21F44EC(v1, (uint64_t)(v0 + 2));
    sub_1C2314F28(0, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1C255CD90;
    uint64_t v4 = v0[5];
    uint64_t v5 = v0[6];
    uint64_t v6 = __swift_project_boxed_opaque_existential_1Tm(v0 + 2, v4);
    *(void *)(v3 + 56) = v4;
    *(void *)(v3 + 64) = *(void *)(v5 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v3 + 32));
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(boxed_opaque_existential_1, v6, v4);
    sub_1C254D970();
    uint64_t v8 = sub_1C254D9B0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 0, 1, v8);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 2));
  }
  else
  {
    sub_1C23F3D88((uint64_t)v1);
    uint64_t v9 = sub_1C254D9B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  }
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1C23EE454()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C23EE46C(uint64_t a1, uint64_t a2)
{
  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = *v2;
  sub_1C254F4E0();
  v3[23] = swift_task_alloc();
  v3[24] = type metadata accessor for PDFAttachmentItem(0);
  v3[25] = swift_task_alloc();
  uint64_t v4 = sub_1C254E340();
  v3[26] = v4;
  v3[27] = *(void *)(v4 - 8);
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = type metadata accessor for AttachmentContext();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  uint64_t v5 = sub_1C254E560();
  v3[34] = v5;
  v3[35] = *(void *)(v5 - 8);
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C23EE694, 0, 0);
}

uint64_t sub_1C23EE694()
{
  char v112 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[33];
  uint64_t v3 = v1[32];
  uint64_t v4 = v1[20];
  uint64_t v5 = (uint64_t *)(v4 + *(int *)(v1[30] + 24));
  uint64_t v7 = *v5;
  unint64_t v6 = v5[1];
  sub_1C254E510();
  sub_1C2232978(v4, v2);
  sub_1C2232978(v4, v3);
  swift_retain();
  sub_1C2205E14(v7, v6);
  swift_retain();
  sub_1C2205E14(v7, v6);
  uint64_t v8 = sub_1C254E550();
  os_log_type_t v9 = sub_1C254FA40();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v109 = v1[39];
    uint64_t v106 = v1[35];
    uint64_t v107 = v1[34];
    uint64_t v10 = v1[30];
    uint64_t v102 = v1[33];
    uint64_t v11 = v1[22];
    uint64_t v103 = v1[32];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v105 = swift_slowAlloc();
    uint64_t v111 = v105;
    *(_DWORD *)uint64_t v12 = 136446978;
    v1[14] = v11;
    swift_getMetatypeMetadata();
    uint64_t v13 = sub_1C254F4F0();
    v1[15] = sub_1C21AD354(v13, v14, &v111);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v15 = (uint64_t *)(v102 + *(int *)(v10 + 20));
    os_log_type_t type = v9;
    uint64_t v17 = *v15;
    unint64_t v16 = v15[1];
    swift_bridgeObjectRetain();
    v1[16] = sub_1C21AD354(v17, v16, &v111);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    sub_1C23F51C4(v102, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
    *(_WORD *)(v12 + 22) = 2080;
    uint64_t v18 = sub_1C254E2A0();
    v1[17] = sub_1C21AD354(v18, v19, &v111);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    sub_1C23F51C4(v103, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
    *(_WORD *)(v12 + 32) = 2080;
    sub_1C2205E14(v7, v6);
    uint64_t v20 = sub_1C254C910();
    unint64_t v22 = v21;
    sub_1C2205E6C(v7, v6);
    v1[18] = sub_1C21AD354(v20, v22, &v111);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    sub_1C2205E6C(v7, v6);
    sub_1C2205E6C(v7, v6);
    _os_log_impl(&dword_1C21A1000, v8, type, "%{public}s: Creating data source item for attachment: %s, content type: %s, data: %s", (uint8_t *)v12, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v105, -1, -1);
    MEMORY[0x1C875A0B0](v12, -1, -1);

    uint64_t v23 = v109;
    uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
    v110(v23, v107);
  }
  else
  {
    uint64_t v24 = v1[39];
    uint64_t v25 = v1[34];
    uint64_t v26 = v1[35];
    uint64_t v28 = v1[32];
    uint64_t v27 = v1[33];
    swift_release_n();
    sub_1C23F51C4(v27, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
    sub_1C23F51C4(v28, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
    sub_1C2205E6C(v7, v6);
    sub_1C2205E6C(v7, v6);

    uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v110(v24, v25);
  }
  uint64_t v30 = v1[27];
  uint64_t v29 = v1[28];
  uint64_t v31 = v1[26];
  (*(void (**)(void, void, uint64_t))(v30 + 16))(v1[29], v1[20] + *(int *)(v1[30] + 32), v31);
  sub_1C254E2E0();
  sub_1C23F52C8(&qword_1EA2E2F08, MEMORY[0x1E4FBCEA8]);
  char v32 = sub_1C254F420();
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v33(v29, v31);
  uint64_t v34 = v1[29];
  if (v32)
  {
    v33(v1[29], v1[26]);
    id v35 = objc_allocWithZone(MEMORY[0x1E4F38DA0]);
    sub_1C2205E14(v7, v6);
    uint64_t v36 = (void *)sub_1C254C930();
    id v37 = objc_msgSend(v35, sel_initWithData_, v36);
    sub_1C2205E6C(v7, v6);

    if (v37)
    {
      uint64_t v38 = v1[31];
      uint64_t v40 = v1[24];
      long long v39 = (uint64_t *)v1[25];
      uint64_t v41 = v1[21];
      id v42 = (uint64_t *)v1[19];
      sub_1C2232978(v1[20], v38);
      MEMORY[0x1C875A200](v41 + 48);
      uint64_t v43 = *(void *)(v41 + 56);
      v42[3] = v40;
      v42[4] = sub_1C23F52C8(&qword_1EA2E2F28, (void (*)(uint64_t))type metadata accessor for PDFAttachmentItem);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v42);
      uint64_t v45 = (char *)v39 + *(int *)(v40 + 24);
      *((void *)v45 + 1) = 0;
      swift_unknownObjectWeakInit();
      sub_1C254D460();
      swift_allocObject();
      *long long v39 = sub_1C254D450();
      sub_1C23F3E10(v38, (uint64_t)v39 + *(int *)(v40 + 20), (uint64_t (*)(void))type metadata accessor for AttachmentContext);
      *((void *)v45 + 1) = v43;
      swift_unknownObjectWeakAssign();
      swift_unknownObjectRelease();
      sub_1C23F3E10((uint64_t)v39, (uint64_t)boxed_opaque_existential_1, type metadata accessor for PDFAttachmentItem);
LABEL_25:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v101 = (uint64_t (*)(void))v1[1];
      return v101();
    }
    sub_1C254E510();
    swift_retain_n();
    uint64_t v69 = sub_1C254E550();
    os_log_type_t v70 = sub_1C254FA20();
    BOOL v71 = os_log_type_enabled(v69, v70);
    uint64_t v72 = v1[38];
    uint64_t v73 = v1[34];
    if (v71)
    {
      uint64_t v74 = v1[22];
      uint64_t v108 = v1[34];
      unint64_t v75 = (uint8_t *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      uint64_t v111 = v76;
      *(_DWORD *)unint64_t v75 = 136446210;
      v1[12] = v74;
      swift_getMetatypeMetadata();
      uint64_t v77 = sub_1C254F4F0();
      v1[13] = sub_1C21AD354(v77, v78, &v111);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1C21A1000, v69, v70, "%{public}s: Could not create PDFAttachmentItem with PDF data", v75, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v76, -1, -1);
      unint64_t v79 = v75;
LABEL_22:
      MEMORY[0x1C875A0B0](v79, -1, -1);

      uint64_t v91 = v72;
      uint64_t v92 = v108;
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  uint64_t v46 = v1[28];
  uint64_t v47 = v1[26];
  sub_1C254E330();
  char v48 = sub_1C254F420();
  v33(v46, v47);
  v33(v34, v47);
  if (v48)
  {
    sub_1C254F4C0();
    uint64_t v49 = sub_1C254F490();
    if (v50)
    {
      uint64_t v51 = v1[31];
      uint64_t v53 = (uint64_t *)v1[19];
      uint64_t v52 = v1[20];
      v1[6] = v49;
      v1[7] = v50;
      v1[4] = 28252;
      v1[5] = 0xE200000000000000;
      v1[2] = 10;
      v1[3] = 0xE100000000000000;
      sub_1C2218914();
      uint64_t v54 = sub_1C2550170();
      uint64_t v56 = v55;
      swift_bridgeObjectRelease();
      sub_1C2232978(v52, v51);
      uint64_t v57 = type metadata accessor for TextAttachmentItem(0);
      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 16) = v54;
      *(void *)(v58 + 24) = v56;
      sub_1C23F3E10(v51, v58 + OBJC_IVAR____TtC15HealthRecordsUI18TextAttachmentItem_context, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
      v53[3] = v57;
      v53[4] = sub_1C23F52C8(&qword_1EA2E2F20, (void (*)(uint64_t))type metadata accessor for TextAttachmentItem);
      *uint64_t v53 = v58;
      goto LABEL_25;
    }
    sub_1C254E510();
    swift_retain_n();
    uint64_t v69 = sub_1C254E550();
    os_log_type_t v84 = sub_1C254FA20();
    BOOL v85 = os_log_type_enabled(v69, v84);
    uint64_t v72 = v1[37];
    uint64_t v73 = v1[34];
    if (v85)
    {
      uint64_t v86 = v1[22];
      unint64_t v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      uint64_t v111 = v88;
      *(_DWORD *)unint64_t v87 = 136446210;
      v1[9] = v86;
      swift_getMetatypeMetadata();
      uint64_t v89 = sub_1C254F4F0();
      v1[8] = sub_1C21AD354(v89, v90, &v111);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1C21A1000, v69, v84, "%{public}s: Could not create TextAttachmentItem with plain text data", v87, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v88, -1, -1);
      MEMORY[0x1C875A0B0](v87, -1, -1);

      uint64_t v91 = v72;
      uint64_t v92 = v73;
LABEL_24:
      v110(v91, v92);
      uint64_t v100 = v1[19];
      *(void *)(v100 + 32) = 0;
      *(_OWORD *)uint64_t v100 = 0u;
      *(_OWORD *)(v100 + 16) = 0u;
      goto LABEL_25;
    }
    goto LABEL_23;
  }
  uint64_t v59 = v1[28];
  uint64_t v60 = v1[26];
  sub_1C254E310();
  char v61 = sub_1C254E320();
  v33(v59, v60);
  if (v61)
  {
    id v62 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
    sub_1C2205E14(v7, v6);
    id v63 = (void *)sub_1C254C930();
    id v64 = objc_msgSend(v62, sel_initWithData_, v63);
    sub_1C2205E6C(v7, v6);

    if (v64)
    {
      uint64_t v65 = v1[31];
      uint64_t v66 = (uint64_t *)v1[19];
      sub_1C2232978(v1[20], v65);
      uint64_t v67 = type metadata accessor for ImageAttachmentItem(0);
      uint64_t v68 = swift_allocObject();
      *(void *)(v68 + 16) = v64;
      sub_1C23F3E10(v65, v68 + OBJC_IVAR____TtC15HealthRecordsUI19ImageAttachmentItem_context, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
      v66[3] = v67;
      v66[4] = sub_1C23F52C8(&qword_1EA2E2F18, (void (*)(uint64_t))type metadata accessor for ImageAttachmentItem);
      uint64_t *v66 = v68;
      goto LABEL_25;
    }
    sub_1C254E510();
    swift_retain_n();
    uint64_t v69 = sub_1C254E550();
    os_log_type_t v93 = sub_1C254FA20();
    BOOL v94 = os_log_type_enabled(v69, v93);
    uint64_t v72 = v1[36];
    uint64_t v73 = v1[34];
    if (v94)
    {
      uint64_t v95 = v1[22];
      uint64_t v108 = v1[34];
      uint64_t v96 = (uint8_t *)swift_slowAlloc();
      uint64_t v97 = swift_slowAlloc();
      uint64_t v111 = v97;
      *(_DWORD *)uint64_t v96 = 136446210;
      v1[11] = v95;
      swift_getMetatypeMetadata();
      uint64_t v98 = sub_1C254F4F0();
      v1[10] = sub_1C21AD354(v98, v99, &v111);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1C21A1000, v69, v93, "%{public}s: Could not create ImageAttachmentItem with image data", v96, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v97, -1, -1);
      unint64_t v79 = v96;
      goto LABEL_22;
    }
LABEL_23:
    swift_release_n();

    uint64_t v91 = v72;
    uint64_t v92 = v73;
    goto LABEL_24;
  }
  uint64_t v80 = (void *)swift_task_alloc();
  v1[40] = v80;
  *uint64_t v80 = v1;
  v80[1] = sub_1C23EF4DC;
  uint64_t v81 = v1[20];
  uint64_t v82 = v1[19];
  return sub_1C23EF7D0(v82, v81);
}

uint64_t sub_1C23EF4DC()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C23EF6E0;
  }
  else {
    uint64_t v2 = sub_1C23EF5F0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C23EF5F0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C23EF6E0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C23EF7D0(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = a2;
  v2[18] = type metadata accessor for AttachmentContext();
  v2[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C23EF864, 0, 0);
}

uint64_t sub_1C23EF864()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + 136) + *(int *)(*(void *)(v0 + 144) + 24));
  uint64_t v2 = *v1;
  *(void *)(v0 + 160) = *v1;
  unint64_t v3 = v1[1];
  *(void *)(v0 + 168) = v3;
  sub_1C2205E14(v2, v3);
  *(void *)(v0 + 176) = sub_1C254E2A0();
  *(void *)(v0 + 184) = v4;
  if (qword_1EA2DD7D0 != -1) {
    swift_once();
  }
  *(_OWORD *)(v0 + 192) = xmmword_1EA2E2E70;
  *(void *)(v0 + 208) = self;
  *(void *)(v0 + 216) = sub_1C254F820();
  *(void *)(v0 + 224) = sub_1C254F810();
  uint64_t v6 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C23EF97C, v6, v5);
}

uint64_t sub_1C23EF97C()
{
  uint64_t v1 = *(void **)(v0 + 208);
  swift_release();
  *(void *)(v0 + 232) = objc_msgSend(v1, sel_mainScreen);
  return MEMORY[0x1F4188298](sub_1C23EFA04, 0, 0);
}

uint64_t sub_1C23EFA04()
{
  *(void *)(v0 + 240) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C23EFA90, v2, v1);
}

uint64_t sub_1C23EFA90()
{
  uint64_t v1 = *(void **)(v0 + 232);
  swift_release();
  objc_msgSend(v1, sel_scale);
  *(void *)(v0 + 248) = v2;

  return MEMORY[0x1F4188298](sub_1C23EFB10, 0, 0);
}

uint64_t sub_1C23EFB10()
{
  double v1 = v0[31];
  double v3 = v0[24];
  double v2 = v0[25];
  uint64_t v5 = *((void *)v0 + 20);
  unint64_t v4 = *((void *)v0 + 21);
  id v6 = objc_allocWithZone(MEMORY[0x1E4F3A6C0]);
  uint64_t v7 = (void *)sub_1C254C930();
  uint64_t v8 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v6, sel_initWithData_contentType_size_scale_representationTypes_, v7, v8, -1, v3, v2, v1);
  *((void *)v0 + 32) = v9;
  sub_1C2205E6C(v5, v4);

  objc_msgSend(v9, sel_setIconVariant_, 1);
  id v10 = objc_msgSend(self, sel_sharedGenerator);
  *((void *)v0 + 33) = v10;
  *((void *)v0 + 2) = v0;
  *((void *)v0 + 7) = v0 + 15;
  *((void *)v0 + 3) = sub_1C23EFCF8;
  uint64_t v11 = swift_continuation_init();
  *((void *)v0 + 10) = MEMORY[0x1E4F143A8];
  *((void *)v0 + 11) = 0x40000000;
  *((void *)v0 + 12) = sub_1C23EFFFC;
  *((void *)v0 + 13) = &block_descriptor_2;
  *((void *)v0 + 14) = v11;
  objc_msgSend(v10, sel_generateBestRepresentationForRequest_completionHandler_, v9, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C23EFCF8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 272) = v1;
  if (v1) {
    double v2 = sub_1C23EFF70;
  }
  else {
    double v2 = sub_1C23EFE08;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C23EFE08()
{
  uint64_t v1 = *(void **)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v4 = *(uint64_t **)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v5 = *(void **)(v0 + 120);

  id v6 = objc_msgSend(v5, sel_UIImage);
  BOOL v7 = objc_msgSend(v5, sel_type) != 0;
  sub_1C2232978(v3, v2);
  uint64_t v8 = type metadata accessor for ThumbnailAttachmentItem(0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  *(unsigned char *)(v9 + 24) = v7;
  sub_1C23F3E10(v2, v9 + OBJC_IVAR____TtC15HealthRecordsUI23ThumbnailAttachmentItem_context, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
  v4[3] = v8;
  v4[4] = sub_1C23F52C8(&qword_1EA2E2F30, (void (*)(uint64_t))type metadata accessor for ThumbnailAttachmentItem);

  *uint64_t v4 = v9;
  swift_task_dealloc();
  id v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1C23EFF70()
{
  uint64_t v1 = (void *)v0[33];
  uint64_t v2 = (void *)v0[32];
  swift_willThrow();

  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C23EFFFC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = (void *)v5;
    return MEMORY[0x1F4188208](a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return MEMORY[0x1F4188208](a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  id v8 = a2;
  return swift_continuation_throwingResume();
}

uint64_t sub_1C23F00C8()
{
  swift_bridgeObjectRelease();
  sub_1C2201FD8((uint64_t)(v0 + 6));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicalAttachmentSectionProvider()
{
  return self;
}

uint64_t *sub_1C23F0144(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C254CB40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    id v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *id v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = *(uint64_t *)((char *)a2 + v9);
    unint64_t v15 = *(uint64_t *)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    sub_1C2205E14(v14, v15);
    *uint64_t v13 = v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v16);
    unint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    unint64_t v21 = (char *)a1 + v17;
    unint64_t v22 = (char *)a2 + v17;
    uint64_t v23 = sub_1C254E340();
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    v24(v21, v22, v23);
  }
  return a1;
}

uint64_t sub_1C23F02AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  sub_1C2205E6C(*(void *)(a1 + *(int *)(a2 + 24)), *(void *)(a1 + *(int *)(a2 + 24) + 8));
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 32);
  uint64_t v6 = sub_1C254E340();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_1C23F0384(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  id v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (uint64_t *)(a1 + v8);
  uint64_t v13 = *(void *)(a2 + v8);
  unint64_t v14 = *(void *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  sub_1C2205E14(v13, v14);
  *uint64_t v12 = v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a1 + v16;
  uint64_t v21 = a2 + v16;
  uint64_t v22 = sub_1C254E340();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  swift_bridgeObjectRetain();
  v23(v20, v21, v22);
  return a1;
}

uint64_t sub_1C23F049C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (uint64_t *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  sub_1C2205E14(*v12, v14);
  uint64_t v15 = *v11;
  unint64_t v16 = v11[1];
  *uint64_t v11 = v13;
  v11[1] = v14;
  sub_1C2205E6C(v15, v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1C254E340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

uint64_t sub_1C23F05DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C254E340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_1C23F06B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = *(void *)(a1 + v12);
  unint64_t v14 = *(void *)(a1 + v12 + 8);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  sub_1C2205E6C(v13, v14);
  uint64_t v15 = a3[7];
  unint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *unint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_1C254E340();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t sub_1C23F07B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C23F07CC);
}

uint64_t sub_1C23F07CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1C254E340();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 32);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1C23F08FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C23F0910);
}

uint64_t sub_1C23F0910(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C254CB40();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1C254E340();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for AttachmentContext()
{
  uint64_t result = qword_1EA2E2EC0;
  if (!qword_1EA2E2EC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C23F0A8C()
{
  uint64_t result = sub_1C254CB40();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C254E340();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C23F0B68()
{
  return sub_1C23F52C8(&qword_1EA2E2ED0, (void (*)(uint64_t))type metadata accessor for AttachmentContext);
}

BOOL sub_1C23F0BB8(uint64_t a1, uint64_t a2)
{
  return (sub_1C23F3B70(a2, a1) & 1) == 0;
}

BOOL sub_1C23F0BE4(uint64_t a1, uint64_t a2)
{
  return (sub_1C23F3B70(a1, a2) & 1) == 0;
}

uint64_t sub_1C23F0C04(uint64_t a1, uint64_t a2)
{
  return sub_1C23F3B70(a2, a1);
}

double sub_1C23F0C14()
{
  double result = 33.0;
  xmmword_1EA2E2E70 = xmmword_1C2569280;
  return result;
}

double sub_1C23F0C2C()
{
  qword_1EA2E2E80 = 0;
  *(void *)algn_1EA2E2E88 = 0;
  double result = 612.0;
  xmmword_1EA2E2E90 = xmmword_1C2569290;
  return result;
}

void sub_1C23F0C48()
{
  if (qword_1EA2DD7D8 != -1) {
    swift_once();
  }
  qword_1EA2E2EA0 = UIEdgeInsetsInsetRect_0(*(double *)&qword_1EA2E2E80);
  *(void *)algn_1EA2E2EA8 = v0;
  qword_1EA2E2EB0 = v1;
  unk_1EA2E2EB8 = v2;
}

void sub_1C23F0CB0(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for AttachmentContext() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1C23F3828(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1C23F0D58(v5);
  *a1 = v3;
}

void sub_1C23F0D58(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AttachmentContext();
  uint64_t v186 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v181 = (uint64_t)&v172 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v193 = (uint64_t)&v172 - v7;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v172 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v172 - v12;
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)&v172 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v182 = (uint64_t)&v172 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v172 - v20;
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v172 - v23;
  v197 = a1;
  uint64_t v25 = a1[1];
  uint64_t v26 = sub_1C2550800();
  if (v26 >= v25)
  {
    if (v25 < 0) {
      goto LABEL_164;
    }
    if (v25) {
      sub_1C23F1BF0(0, v25, 1, v197);
    }
    return;
  }
  uint64_t v175 = v26;
  if (v25 >= 0) {
    uint64_t v27 = v25;
  }
  else {
    uint64_t v27 = v25 + 1;
  }
  if (v25 < -1) {
    goto LABEL_172;
  }
  v180 = v16;
  v177 = v24;
  v178 = v21;
  if (v25 < 2)
  {
    char v32 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v185 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v186 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v186 + 80));
    uint64_t v174 = MEMORY[0x1E4FBC860];
    if (v25 != 1)
    {
      unint64_t v35 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_130:
      uint64_t v163 = v186;
      if (v35 >= 2)
      {
        uint64_t v164 = *v197;
        do
        {
          unint64_t v165 = v35 - 2;
          if (v35 < 2) {
            goto LABEL_159;
          }
          if (!v164) {
            goto LABEL_171;
          }
          v166 = v32;
          v167 = v32 + 32;
          uint64_t v168 = *(void *)&v32[16 * v165 + 32];
          uint64_t v169 = *(void *)&v32[16 * v35 + 24];
          sub_1C23F1FD4(v164 + *(void *)(v163 + 72) * v168, v164 + *(void *)(v163 + 72) * *(void *)&v167[16 * v35 - 16], v164 + *(void *)(v163 + 72) * v169, v185);
          if (v2) {
            break;
          }
          if (v169 < v168) {
            goto LABEL_160;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v166 = sub_1C23F321C((uint64_t)v166);
          }
          if (v165 >= *((void *)v166 + 2)) {
            goto LABEL_161;
          }
          v170 = &v166[16 * v165 + 32];
          *(void *)v170 = v168;
          *((void *)v170 + 1) = v169;
          unint64_t v171 = *((void *)v166 + 2);
          if (v35 > v171) {
            goto LABEL_162;
          }
          char v32 = v166;
          memmove(&v166[16 * v35 + 16], &v166[16 * v35 + 32], 16 * (v171 - v35));
          *((void *)v166 + 2) = v171 - 1;
          unint64_t v35 = v171 - 1;
        }
        while (v171 > 2);
      }
LABEL_141:
      swift_bridgeObjectRelease();
      *(void *)(v174 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v28 = v25;
    uint64_t v29 = v27 >> 1;
    uint64_t v30 = sub_1C254F780();
    *(void *)(v30 + 16) = v29;
    uint64_t v25 = v28;
    unint64_t v31 = (*(unsigned __int8 *)(v186 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v186 + 80);
    uint64_t v174 = v30;
    unint64_t v185 = v30 + v31;
  }
  uint64_t v33 = 0;
  char v32 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v34 = 0x1F8AAD000;
  v190 = v13;
  uint64_t v191 = v4;
  v184 = v10;
LABEL_15:
  uint64_t v36 = v33;
  uint64_t v37 = v33 + 1;
  uint64_t v195 = v25;
  if (v37 >= v25)
  {
    uint64_t v55 = v37;
  }
  else
  {
    unint64_t v38 = v34;
    uint64_t v39 = *v197;
    uint64_t v40 = *(void *)(v186 + 72);
    uint64_t v192 = v37;
    uint64_t v41 = v36;
    uint64_t v42 = (uint64_t)v177;
    sub_1C2232978(v39 + v40 * v37, (uint64_t)v177);
    uint64_t v183 = v41;
    uint64_t v179 = v39;
    uint64_t v196 = v40;
    uint64_t v43 = v39 + v40 * v41;
    uint64_t v44 = (uint64_t)v178;
    sub_1C2232978(v43, (uint64_t)v178);
    uint64_t v45 = self;
    uint64_t v194 = v42 + *(int *)(v4 + 32);
    uint64_t v46 = (void *)sub_1C254E2B0();
    uint64_t v47 = v4;
    unsigned int v48 = objc_msgSend(v45, (SEL)(v38 + 594), v46);

    uint64_t v188 = v44 + *(int *)(v47 + 32);
    uint64_t v49 = (void *)sub_1C254E2B0();
    LODWORD(v46) = objc_msgSend(v45, (SEL)(v38 + 594), v49);

    v189 = v45;
    if (v48 == v46)
    {
      uint64_t v4 = v191;
      uint64_t v50 = *(int *)(v191 + 20);
      uint64_t v51 = *(void *)(v42 + v50);
      uint64_t v52 = *(void *)(v42 + v50 + 8);
      uint64_t v53 = (void *)(v44 + v50);
      if (v51 == *v53 && v52 == v53[1]) {
        LODWORD(v194) = 0;
      }
      else {
        LODWORD(v194) = sub_1C2550870();
      }
      uint64_t v60 = v189;
      uint64_t v13 = v190;
      uint64_t v36 = v183;
    }
    else
    {
      uint64_t v56 = (void *)sub_1C254E2B0();
      signed int v57 = objc_msgSend(v45, (SEL)(v38 + 594), v56);

      uint64_t v58 = (void *)sub_1C254E2B0();
      signed int v59 = objc_msgSend(v45, (SEL)(v38 + 594), v58);

      LODWORD(v194) = v57 < v59;
      uint64_t v13 = v190;
      uint64_t v4 = v191;
      uint64_t v36 = v183;
      uint64_t v60 = v45;
    }
    sub_1C23F51C4((uint64_t)v178, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
    sub_1C23F51C4((uint64_t)v177, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
    uint64_t v55 = v36 + 2;
    if (v36 + 2 < v195)
    {
      v176 = v32;
      uint64_t v173 = v2;
      uint64_t v62 = v179;
      uint64_t v61 = (uint64_t)v180;
      uint64_t v187 = v196 * v55;
      uint64_t v188 = v196 * v192;
      uint64_t v63 = v182;
      while (1)
      {
        uint64_t v192 = v55;
        sub_1C2232978(v62 + v187, v63);
        sub_1C2232978(v62 + v188, v61);
        id v64 = (void *)sub_1C254E2B0();
        unsigned int v65 = objc_msgSend(v60, sel_sortOrderForType_, v64);

        uint64_t v66 = (void *)sub_1C254E2B0();
        unsigned int v67 = objc_msgSend(v60, sel_sortOrderForType_, v66);

        if (v65 == v67)
        {
          uint64_t v4 = v191;
          uint64_t v68 = *(int *)(v191 + 20);
          uint64_t v69 = *(void *)(v63 + v68);
          uint64_t v70 = *(void *)(v63 + v68 + 8);
          BOOL v71 = (void *)(v61 + v68);
          BOOL v72 = v69 == *v71 && v70 == v71[1];
          int v73 = v72 ? 0 : sub_1C2550870();
        }
        else
        {
          uint64_t v74 = (void *)sub_1C254E2B0();
          signed int v75 = objc_msgSend(v60, sel_sortOrderForType_, v74);

          uint64_t v76 = (void *)sub_1C254E2B0();
          signed int v77 = objc_msgSend(v60, sel_sortOrderForType_, v76);

          int v73 = v75 < v77;
          uint64_t v4 = v191;
        }
        uint64_t v13 = v190;
        uint64_t v61 = (uint64_t)v180;
        sub_1C23F51C4((uint64_t)v180, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
        uint64_t v63 = v182;
        sub_1C23F51C4(v182, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
        if ((v194 ^ v73)) {
          break;
        }
        uint64_t v55 = v192 + 1;
        v62 += v196;
        uint64_t v60 = v189;
        if (v195 == v192 + 1)
        {
          uint64_t v55 = v195;
          uint64_t v2 = v173;
          char v32 = v176;
          goto LABEL_40;
        }
      }
      uint64_t v2 = v173;
      char v32 = v176;
      uint64_t v55 = v192;
LABEL_40:
      uint64_t v36 = v183;
    }
    if ((v194 & 1) == 0) {
      goto LABEL_54;
    }
    if (v55 < v36) {
      goto LABEL_165;
    }
    if (v36 < v55)
    {
      v176 = v32;
      uint64_t v78 = 0;
      uint64_t v79 = v196 * (v55 - 1);
      uint64_t v80 = v55 * v196;
      uint64_t v81 = v36;
      uint64_t v82 = v36 * v196;
      do
      {
        if (v81 != v55 + v78 - 1)
        {
          uint64_t v84 = v179;
          if (!v179) {
            goto LABEL_170;
          }
          uint64_t v85 = v55;
          unint64_t v86 = v179 + v82;
          uint64_t v194 = v179 + v79;
          sub_1C23F3E10(v179 + v82, v181, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
          if (v82 < v79 || v86 >= v84 + v80)
          {
            uint64_t v83 = v194;
            swift_arrayInitWithTakeFrontToBack();
          }
          else
          {
            uint64_t v83 = v194;
            if (v82 != v79) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          sub_1C23F3E10(v181, v83, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
          uint64_t v55 = v85;
        }
        ++v81;
        --v78;
        v79 -= v196;
        v80 -= v196;
        v82 += v196;
      }
      while (v81 < v55 + v78);
      char v32 = v176;
      uint64_t v13 = v190;
      uint64_t v4 = v191;
      uint64_t v36 = v183;
      unint64_t v10 = v184;
    }
    else
    {
LABEL_54:
      unint64_t v10 = v184;
    }
  }
  if (v55 >= v195) {
    goto LABEL_82;
  }
  if (__OFSUB__(v55, v36)) {
    goto LABEL_163;
  }
  if (v55 - v36 >= v175) {
    goto LABEL_82;
  }
  if (__OFADD__(v36, v175)) {
    goto LABEL_166;
  }
  if (v36 + v175 >= v195) {
    uint64_t v87 = v195;
  }
  else {
    uint64_t v87 = v36 + v175;
  }
  if (v87 >= v36)
  {
    if (v55 == v87) {
      goto LABEL_82;
    }
    uint64_t v183 = v36;
    v176 = v32;
    uint64_t v173 = v2;
    uint64_t v88 = self;
    uint64_t v89 = *(void *)(v186 + 72);
    uint64_t v90 = v89 * (v55 - 1);
    uint64_t v187 = (uint64_t)v88;
    uint64_t v188 = v89;
    uint64_t v196 = v55 * v89;
    uint64_t v179 = v87;
LABEL_68:
    uint64_t v92 = 0;
    uint64_t v93 = v183;
    uint64_t v192 = v55;
    v189 = (void *)v90;
    while (1)
    {
      uint64_t v94 = *v197;
      uint64_t v195 = v196 + v92;
      sub_1C2232978(v196 + v92 + v94, (uint64_t)v13);
      uint64_t v194 = v90 + v92;
      sub_1C2232978(v90 + v92 + v94, (uint64_t)v10);
      uint64_t v95 = (void *)sub_1C254E2B0();
      unsigned int v96 = objc_msgSend(v88, sel_sortOrderForType_, v95);

      uint64_t v97 = (void *)sub_1C254E2B0();
      uint64_t v98 = (uint64_t)v10;
      unsigned int v99 = objc_msgSend(v88, sel_sortOrderForType_, v97);

      if (v96 == v99)
      {
        uint64_t v13 = v190;
        uint64_t v4 = v191;
        uint64_t v100 = *(int *)(v191 + 20);
        uint64_t v101 = *(void *)&v190[v100];
        uint64_t v102 = *(void *)&v190[v100 + 8];
        uint64_t v103 = (void *)(v98 + v100);
        BOOL v104 = v101 == *v103 && v102 == v103[1];
        unint64_t v10 = (char *)v98;
        if (v104)
        {
          sub_1C23F51C4(v98, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
          sub_1C23F51C4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
          uint64_t v91 = v192;
          uint64_t v88 = (void *)v187;
          uint64_t v90 = (uint64_t)v189;
LABEL_67:
          uint64_t v55 = v91 + 1;
          v90 += v188;
          v196 += v188;
          if (v55 != v179) {
            goto LABEL_68;
          }
          uint64_t v55 = v179;
          uint64_t v2 = v173;
          char v32 = v176;
          uint64_t v36 = v183;
LABEL_82:
          if (v55 < v36) {
            goto LABEL_158;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v32 = sub_1C23F277C(0, *((void *)v32 + 2) + 1, 1, v32);
          }
          unint64_t v113 = *((void *)v32 + 2);
          unint64_t v112 = *((void *)v32 + 3);
          unint64_t v35 = v113 + 1;
          uint64_t v192 = v55;
          if (v113 >= v112 >> 1) {
            char v32 = sub_1C23F277C((char *)(v112 > 1), v113 + 1, 1, v32);
          }
          *((void *)v32 + 2) = v35;
          char v114 = v32 + 32;
          uint64_t v115 = &v32[16 * v113 + 32];
          uint64_t v116 = v192;
          *(void *)uint64_t v115 = v36;
          *((void *)v115 + 1) = v116;
          if (v113)
          {
LABEL_88:
            unint64_t v117 = v35 - 1;
            if (v35 >= 4)
            {
              uint64_t v122 = &v114[16 * v35];
              uint64_t v123 = *((void *)v122 - 8);
              uint64_t v124 = *((void *)v122 - 7);
              BOOL v128 = __OFSUB__(v124, v123);
              uint64_t v125 = v124 - v123;
              if (v128) {
                goto LABEL_147;
              }
              uint64_t v127 = *((void *)v122 - 6);
              uint64_t v126 = *((void *)v122 - 5);
              BOOL v128 = __OFSUB__(v126, v127);
              uint64_t v120 = v126 - v127;
              char v121 = v128;
              if (v128) {
                goto LABEL_148;
              }
              unint64_t v129 = v35 - 2;
              v130 = &v114[16 * v35 - 32];
              uint64_t v132 = *(void *)v130;
              uint64_t v131 = *((void *)v130 + 1);
              BOOL v128 = __OFSUB__(v131, v132);
              uint64_t v133 = v131 - v132;
              if (v128) {
                goto LABEL_150;
              }
              BOOL v128 = __OFADD__(v120, v133);
              uint64_t v134 = v120 + v133;
              if (v128) {
                goto LABEL_153;
              }
              if (v134 >= v125)
              {
                uint64_t v152 = &v114[16 * v117];
                uint64_t v154 = *(void *)v152;
                uint64_t v153 = *((void *)v152 + 1);
                BOOL v128 = __OFSUB__(v153, v154);
                uint64_t v155 = v153 - v154;
                if (v128) {
                  goto LABEL_157;
                }
                BOOL v145 = v120 < v155;
              }
              else
              {
LABEL_101:
                if (v121) {
                  goto LABEL_149;
                }
                unint64_t v129 = v35 - 2;
                uint64_t v135 = &v114[16 * v35 - 32];
                uint64_t v137 = *(void *)v135;
                uint64_t v136 = *((void *)v135 + 1);
                BOOL v138 = __OFSUB__(v136, v137);
                uint64_t v139 = v136 - v137;
                char v140 = v138;
                if (v138) {
                  goto LABEL_152;
                }
                uint64_t v141 = &v114[16 * v117];
                uint64_t v143 = *(void *)v141;
                uint64_t v142 = *((void *)v141 + 1);
                BOOL v128 = __OFSUB__(v142, v143);
                uint64_t v144 = v142 - v143;
                if (v128) {
                  goto LABEL_155;
                }
                if (__OFADD__(v139, v144)) {
                  goto LABEL_156;
                }
                if (v139 + v144 < v120) {
                  goto LABEL_113;
                }
                BOOL v145 = v120 < v144;
              }
              if (v145) {
                unint64_t v117 = v129;
              }
            }
            else
            {
              if (v35 == 3)
              {
                uint64_t v119 = *((void *)v32 + 4);
                uint64_t v118 = *((void *)v32 + 5);
                BOOL v128 = __OFSUB__(v118, v119);
                uint64_t v120 = v118 - v119;
                char v121 = v128;
                goto LABEL_101;
              }
              uint64_t v146 = *((void *)v32 + 4);
              uint64_t v147 = *((void *)v32 + 5);
              BOOL v128 = __OFSUB__(v147, v146);
              uint64_t v139 = v147 - v146;
              char v140 = v128;
LABEL_113:
              if (v140) {
                goto LABEL_151;
              }
              uint64_t v148 = &v114[16 * v117];
              uint64_t v150 = *(void *)v148;
              uint64_t v149 = *((void *)v148 + 1);
              BOOL v128 = __OFSUB__(v149, v150);
              uint64_t v151 = v149 - v150;
              if (v128) {
                goto LABEL_154;
              }
              if (v151 < v139) {
                goto LABEL_14;
              }
            }
            unint64_t v156 = v117 - 1;
            if (v117 - 1 >= v35)
            {
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
              break;
            }
            if (!*v197) {
              goto LABEL_169;
            }
            uint64_t v157 = v32;
            uint64_t v158 = &v114[16 * v156];
            uint64_t v159 = *(void *)v158;
            uint64_t v160 = &v114[16 * v117];
            uint64_t v161 = *((void *)v160 + 1);
            sub_1C23F1FD4(*v197 + *(void *)(v186 + 72) * *(void *)v158, *v197 + *(void *)(v186 + 72) * *(void *)v160, *v197 + *(void *)(v186 + 72) * v161, v185);
            if (v2) {
              goto LABEL_141;
            }
            if (v161 < v159) {
              goto LABEL_144;
            }
            if (v117 > *((void *)v157 + 2)) {
              goto LABEL_145;
            }
            *(void *)uint64_t v158 = v159;
            *(void *)&v114[16 * v156 + 8] = v161;
            unint64_t v162 = *((void *)v157 + 2);
            if (v117 >= v162) {
              goto LABEL_146;
            }
            char v32 = v157;
            unint64_t v35 = v162 - 1;
            memmove(&v114[16 * v117], v160 + 16, 16 * (v162 - 1 - v117));
            *((void *)v157 + 2) = v162 - 1;
            BOOL v145 = v162 > 2;
            uint64_t v4 = v191;
            unint64_t v10 = v184;
            if (!v145) {
              goto LABEL_14;
            }
            goto LABEL_88;
          }
          unint64_t v35 = 1;
LABEL_14:
          uint64_t v25 = v197[1];
          uint64_t v33 = v192;
          uint64_t v13 = v190;
          unint64_t v34 = 0x1F8AAD000uLL;
          if (v192 >= v25) {
            goto LABEL_130;
          }
          goto LABEL_15;
        }
        char v105 = sub_1C2550870();
      }
      else
      {
        uint64_t v106 = (void *)sub_1C254E2B0();
        signed int v107 = objc_msgSend(v88, sel_sortOrderForType_, v106);

        uint64_t v108 = (void *)sub_1C254E2B0();
        signed int v109 = objc_msgSend(v88, sel_sortOrderForType_, v108);

        char v105 = v107 < v109;
        uint64_t v13 = v190;
        uint64_t v4 = v191;
        unint64_t v10 = (char *)v98;
      }
      uint64_t v90 = (uint64_t)v189;
      sub_1C23F51C4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
      sub_1C23F51C4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
      if ((v105 & 1) == 0)
      {
        uint64_t v91 = v192;
        uint64_t v88 = (void *)v187;
        goto LABEL_67;
      }
      uint64_t v110 = *v197;
      uint64_t v88 = (void *)v187;
      if (!*v197) {
        goto LABEL_168;
      }
      uint64_t v111 = v110 + v90 + v92;
      sub_1C23F3E10(v110 + v196 + v92, v193, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
      swift_arrayInitWithTakeFrontToBack();
      sub_1C23F3E10(v193, v111, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
      v92 -= v188;
      ++v93;
      uint64_t v91 = v192;
      if (v192 == v93) {
        goto LABEL_67;
      }
    }
  }
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  sub_1C25505E0();
  __break(1u);
}

void sub_1C23F1BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v53 = a4;
  uint64_t v41 = a1;
  uint64_t v6 = type metadata accessor for AttachmentContext();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v50 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v39 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v49 = a3;
  uint64_t v40 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = self;
    uint64_t v16 = *(void *)(v7 + 72);
    uint64_t v17 = v16 * (v49 - 1);
    uint64_t v45 = v14;
    uint64_t v46 = v16;
    uint64_t v18 = v16 * v49;
    uint64_t v19 = &selRef_writtenDate;
    uint64_t v42 = v15;
    uint64_t v43 = v11;
    uint64_t v44 = v6;
LABEL_6:
    uint64_t v20 = 0;
    uint64_t v54 = v41;
    uint64_t v47 = v18;
    uint64_t v48 = v17;
    while (1)
    {
      uint64_t v21 = *v53;
      uint64_t v52 = v18 + v20;
      sub_1C2232978(v18 + v20 + v21, (uint64_t)v14);
      uint64_t v51 = v17 + v20;
      sub_1C2232978(v17 + v20 + v21, (uint64_t)v11);
      uint64_t v22 = (void *)sub_1C254E2B0();
      uint64_t v23 = v15;
      unsigned int v24 = objc_msgSend(v15, v19[185], v22);

      uint64_t v25 = (void *)sub_1C254E2B0();
      unsigned int v26 = objc_msgSend(v23, v19[185], v25);

      if (v24 == v26)
      {
        uint64_t v14 = v45;
        uint64_t v27 = *(int *)(v44 + 20);
        uint64_t v28 = *(void *)&v45[v27];
        uint64_t v29 = *(void *)&v45[v27 + 8];
        uint64_t v30 = &v11[v27];
        if (v28 == *(void *)v30 && v29 == *((void *)v30 + 1))
        {
          uint64_t v11 = v43;
          sub_1C23F51C4((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
          sub_1C23F51C4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
          uint64_t v15 = v42;
          uint64_t v18 = v47;
          uint64_t v17 = v48;
          uint64_t v19 = &selRef_writtenDate;
LABEL_5:
          v17 += v46;
          v18 += v46;
          if (++v49 == v40) {
            return;
          }
          goto LABEL_6;
        }
        char v32 = sub_1C2550870();
        uint64_t v18 = v47;
        uint64_t v17 = v48;
        uint64_t v19 = &selRef_writtenDate;
      }
      else
      {
        uint64_t v33 = (void *)sub_1C254E2B0();
        signed int v34 = objc_msgSend(v23, v19[185], v33);

        unint64_t v35 = (void *)sub_1C254E2B0();
        signed int v36 = objc_msgSend(v23, v19[185], v35);

        char v32 = v34 < v36;
        uint64_t v14 = v45;
        uint64_t v18 = v47;
        uint64_t v17 = v48;
      }
      uint64_t v11 = v43;
      sub_1C23F51C4((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
      sub_1C23F51C4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
      uint64_t v15 = v42;
      if ((v32 & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v37 = *v53;
      if (!*v53) {
        break;
      }
      uint64_t v38 = v37 + v17 + v20;
      sub_1C23F3E10(v37 + v18 + v20, v50, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
      swift_arrayInitWithTakeFrontToBack();
      sub_1C23F3E10(v50, v38, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
      v20 -= v46;
      ++v54;
      uint64_t v19 = &selRef_writtenDate;
      if (v49 == v54) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C23F1FD4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v91 = type metadata accessor for AttachmentContext();
  MEMORY[0x1F4188790](v91);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v81 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v81 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v86 = (uint64_t)v81 - v18;
  uint64_t v20 = *(void *)(v19 + 72);
  if (!v20)
  {
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (a2 - a1 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_78;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_79;
  }
  uint64_t v22 = (uint64_t)(a2 - a1) / v20;
  unint64_t v94 = a1;
  unint64_t v93 = a4;
  uint64_t v23 = v21 / v20;
  v81[1] = v5;
  if (v22 >= v21 / v20)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      uint64_t v25 = v23 * v20;
      uint64_t v86 = v17;
      unint64_t v88 = (unint64_t)v12;
      if (a4 < a2 || a2 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v51 = a4 + v25;
      unint64_t v92 = a4 + v25;
      unint64_t v94 = a2;
      if (v25 >= 1 && a1 < a2)
      {
        id v83 = self;
        unint64_t v84 = a1;
        uint64_t v53 = -v20;
        unint64_t v85 = a4;
        uint64_t v82 = v53;
        do
        {
          unint64_t v89 = a3;
          uint64_t v54 = v51 + v53;
          unint64_t v55 = a2;
          unint64_t v56 = v88;
          sub_1C2232978(v54, v88);
          unint64_t v90 = v55;
          uint64_t v87 = v55 + v53;
          uint64_t v57 = v86;
          sub_1C2232978(v55 + v53, v86);
          uint64_t v58 = (void *)sub_1C254E2B0();
          id v59 = v83;
          LODWORD(v55) = objc_msgSend(v83, sel_sortOrderForType_, v58);

          uint64_t v60 = (void *)sub_1C254E2B0();
          unsigned int v61 = objc_msgSend(v59, sel_sortOrderForType_, v60);

          if (v55 == v61)
          {
            uint64_t v62 = *(int *)(v91 + 20);
            uint64_t v63 = *(void *)(v56 + v62);
            uint64_t v64 = *(void *)(v56 + v62 + 8);
            unsigned int v65 = (void *)(v57 + v62);
            if (v63 == *v65 && v64 == v65[1])
            {
              BOOL v68 = 0;
            }
            else
            {
              char v67 = sub_1C2550870();
              uint64_t v57 = v86;
              BOOL v68 = v67;
            }
          }
          else
          {
            uint64_t v69 = (void *)sub_1C254E2B0();
            signed int v70 = objc_msgSend(v59, sel_sortOrderForType_, v69);

            BOOL v71 = (void *)sub_1C254E2B0();
            signed int v72 = objc_msgSend(v59, sel_sortOrderForType_, v71);

            BOOL v68 = v70 < v72;
          }
          unint64_t v73 = v89;
          unint64_t v74 = v90;
          unint64_t v75 = v85;
          uint64_t v53 = v82;
          unint64_t v76 = v89 + v82;
          sub_1C23F51C4(v57, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
          sub_1C23F51C4(v88, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
          if (v68)
          {
            if (v73 < v74 || v76 >= v74)
            {
              unint64_t v78 = v87;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v77 = v84;
            }
            else
            {
              unint64_t v77 = v84;
              unint64_t v78 = v87;
              if (v73 != v74) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v94 += v53;
          }
          else
          {
            unint64_t v79 = v92;
            v92 += v53;
            if (v73 < v79 || v76 >= v79)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v78 = v74;
              unint64_t v77 = v84;
            }
            else
            {
              unint64_t v77 = v84;
              if (v73 != v79) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v78 = v74;
            }
          }
          unint64_t v51 = v92;
          if (v92 <= v75) {
            break;
          }
          a2 = v78;
          a3 = v73 + v53;
        }
        while (v78 > v77);
      }
LABEL_76:
      sub_1C23F30D8(&v94, &v93, (uint64_t *)&v92, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
      return 1;
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = v22 * v20;
    if (a4 < a1 || a1 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v88 = a4 + v24;
    unint64_t v92 = a4 + v24;
    BOOL v26 = v24 < 1 || a2 >= a3;
    uint64_t v27 = v86;
    if (!v26)
    {
      uint64_t v28 = self;
      uint64_t v87 = v20;
      unint64_t v89 = a3;
      while (1)
      {
        unint64_t v90 = a2;
        sub_1C2232978(a2, v27);
        uint64_t v29 = v15;
        sub_1C2232978(a4, (uint64_t)v15);
        uint64_t v30 = v91;
        unint64_t v31 = (void *)sub_1C254E2B0();
        unsigned int v32 = objc_msgSend(v28, sel_sortOrderForType_, v31);

        uint64_t v33 = (void *)sub_1C254E2B0();
        unsigned int v34 = objc_msgSend(v28, sel_sortOrderForType_, v33);

        if (v32 == v34)
        {
          uint64_t v35 = *(int *)(v30 + 20);
          uint64_t v36 = *(void *)(v27 + v35);
          uint64_t v37 = *(void *)(v27 + v35 + 8);
          uint64_t v38 = &v15[v35];
          if (v36 == *(void *)v38 && v37 == *((void *)v38 + 1))
          {
            sub_1C23F51C4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
            sub_1C23F51C4(v27, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
            unint64_t v41 = v89;
            unint64_t v47 = v90;
            uint64_t v42 = v87;
LABEL_36:
            unint64_t v48 = v94;
            unint64_t v50 = v93 + v42;
            if (v94 < v93 || v94 >= v50)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v94 != v93)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v93 = v50;
            unint64_t v49 = v47;
            goto LABEL_44;
          }
          char v40 = sub_1C2550870();
          unint64_t v41 = v89;
          uint64_t v42 = v87;
        }
        else
        {
          uint64_t v43 = (void *)sub_1C254E2B0();
          signed int v44 = objc_msgSend(v28, sel_sortOrderForType_, v43);

          uint64_t v45 = (void *)sub_1C254E2B0();
          signed int v46 = objc_msgSend(v28, sel_sortOrderForType_, v45);

          char v40 = v44 < v46;
          unint64_t v41 = v89;
          uint64_t v42 = v87;
          uint64_t v15 = v29;
        }
        unint64_t v47 = v90;
        sub_1C23F51C4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
        uint64_t v27 = v86;
        sub_1C23F51C4(v86, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
        if ((v40 & 1) == 0) {
          goto LABEL_36;
        }
        unint64_t v48 = v94;
        unint64_t v49 = v47 + v42;
        if (v94 < v47 || v94 >= v49)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v94 == v47)
        {
          unint64_t v48 = v47;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_44:
        unint64_t v94 = v48 + v42;
        a4 = v93;
        if (v93 < v88)
        {
          a2 = v49;
          if (v49 < v41) {
            continue;
          }
        }
        goto LABEL_76;
      }
    }
    goto LABEL_76;
  }
LABEL_80:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

char *sub_1C23F277C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C23F3E78(0, &qword_1EA2E2F38, (uint64_t (*)(uint64_t))sub_1C23D80C0, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C23F28A4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -72)
  {
    uint64_t result = (char *)sub_1C25506A0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 72;
    if (result != v3 || result >= &v3[72 * v6])
    {
      return (char *)memmove(result, v3, 72 * v6);
    }
  }
  return result;
}

char *sub_1C23F297C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1C25506A0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1C23F2A38(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1C25506A0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1C23F2AF4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -48)
  {
    uint64_t result = (char *)sub_1C25506A0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 48 * (v4 / 48);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1C23F2BC4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_1C25506A0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_1C23F2C94(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -80)
  {
    uint64_t result = (char *)sub_1C25506A0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 80;
    if (result != v3 || result >= &v3[80 * v6])
    {
      return (char *)memmove(result, v3, 80 * v6);
    }
  }
  return result;
}

char *sub_1C23F2D60(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -72)
  {
    uint64_t result = (char *)sub_1C25506A0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 72 * (v4 / 72);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_1C23F2E30(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -48)
  {
    uint64_t result = (char *)sub_1C25506A0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
    {
      return (char *)memmove(result, v3, 48 * v6);
    }
  }
  return result;
}

char *sub_1C23F2F00(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -56)
  {
    uint64_t result = (char *)sub_1C25506A0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 56;
    if (result != v3 || result >= &v3[56 * v6])
    {
      return (char *)memmove(result, v3, 56 * v6);
    }
  }
  return result;
}

uint64_t sub_1C23F2FD4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C23F30D8(a1, a2, a3, (uint64_t (*)(void))sub_1C22853B0);
}

uint64_t sub_1C23F2FEC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C23F30D8(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
}

char *sub_1C23F3004(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 31;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -32)
  {
    uint64_t result = (char *)sub_1C25506A0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
    {
      return (char *)memmove(result, v3, 32 * v7);
    }
  }
  return result;
}

uint64_t sub_1C23F30C0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_1C23F30D8(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
}

uint64_t sub_1C23F30D8(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_1C25506A0();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1C23F321C(uint64_t a1)
{
  return sub_1C23F277C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C23F3230@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1C2205E14(a2, a3);
      uint64_t v10 = (char *)sub_1C254C630();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1C254C650();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1C254C640();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1C23F3494);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1C2205E6C(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1C254C630();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1C254C650();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1C254C640();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1C23F34A4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_1C2205E14(a1, a2);
      char v5 = sub_1C23F3878((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_1C2205E6C(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_1C23F3878(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_1C2205E6C(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_1C23F3230((uint64_t)__s1, a3, a4, &v14);
      sub_1C2205E6C(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_1C23F36D4(uint64_t a1)
{
  return sub_1C22752C8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C23F36E8(uint64_t a1)
{
  return sub_1C22778A4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_1C23F36FC()
{
}

uint64_t sub_1C23F3710(void *a1)
{
  return sub_1C2277E14(0, a1[2], 0, a1);
}

uint64_t sub_1C23F3724(uint64_t a1)
{
  return sub_1C227817C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C23F3738(void *a1)
{
  return sub_1C227832C(0, a1[2], 0, a1);
}

uint64_t sub_1C23F374C(uint64_t a1)
{
  return sub_1C227596C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C23F3760(void *a1)
{
  return sub_1C2278350(0, a1[2], 0, a1);
}

uint64_t sub_1C23F3774(uint64_t a1)
{
  return sub_1C2276D48(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C23F3788(void *a1)
{
  return sub_1C2278550(0, a1[2], 0, a1);
}

uint64_t sub_1C23F379C(uint64_t a1)
{
  return sub_1C2275E80(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C23F37B0(void *a1)
{
  return sub_1C2278574(0, a1[2], 0, a1);
}

uint64_t sub_1C23F37C4(uint64_t a1)
{
  return sub_1C227637C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C23F37D8(void *a1)
{
  return sub_1C2278598(0, a1[2], 0, a1);
}

uint64_t sub_1C23F37EC(uint64_t a1)
{
  return sub_1C2276870(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C23F3800(void *a1)
{
  return sub_1C22785BC(0, a1[2], 0, a1);
}

uint64_t sub_1C23F3814(void *a1)
{
  return sub_1C22785F0(0, a1[2], 0, a1);
}

uint64_t sub_1C23F3828(void *a1)
{
  return sub_1C2278964(0, a1[2], 0, a1);
}

uint64_t sub_1C23F383C(uint64_t a1)
{
  return sub_1C227513C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C23F3850(void *a1)
{
  return sub_1C2278D1C(0, a1[2], 0, a1);
}

uint64_t sub_1C23F3864(void *a1)
{
  return sub_1C227560C(0, a1[2], 0, a1);
}

uint64_t sub_1C23F3878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1C254C630();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1C254C650();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1C254C640();
  sub_1C23F3230(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1C23F3930(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x1C23F3A6CLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_20;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v15 = 1;
            }
            else
            {
              sub_1C2205E14(a3, a4);
              char v15 = sub_1C23F34A4(a1, a2, a3, a4);
            }
          }
          else
          {
            char v15 = 0;
          }
          return v15 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_21;
        case 3uLL:
          char v15 = v8 == 0;
          return v15 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1C23F3A8C(uint64_t a1, uint64_t a2)
{
  if ((sub_1C254CB10() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for AttachmentContext();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (sub_1C2550870() & 1) == 0) {
    return 0;
  }
  if ((sub_1C23F3930(*(void *)(a1 + v4[6]), *(void *)(a1 + v4[6] + 8), *(void *)(a2 + v4[6]), *(void *)(a2 + v4[6] + 8)) & 1) == 0)return 0; {
  uint64_t v10 = v4[7];
  }
  uint64_t v11 = *(void *)(a1 + v10);
  uint64_t v12 = *(void *)(a1 + v10 + 8);
  uint64_t v13 = (void *)(a2 + v10);
  BOOL v14 = v11 == *v13 && v12 == v13[1];
  if (!v14 && (sub_1C2550870() & 1) == 0) {
    return 0;
  }
  uint64_t v15 = v4[8];
  return MEMORY[0x1F41878E8](a1 + v15, a2 + v15);
}

uint64_t sub_1C23F3B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = self;
  uint64_t v5 = type metadata accessor for AttachmentContext();
  uint64_t v6 = (void *)sub_1C254E2B0();
  unsigned int v7 = objc_msgSend(v4, sel_sortOrderForType_, v6);

  uint64_t v8 = (void *)sub_1C254E2B0();
  unsigned int v9 = objc_msgSend(v4, sel_sortOrderForType_, v8);

  if (v7 == v9)
  {
    uint64_t v10 = *(int *)(v5 + 20);
    uint64_t v11 = *(void *)(a1 + v10);
    uint64_t v12 = *(void *)(a1 + v10 + 8);
    uint64_t v13 = (void *)(a2 + v10);
    if (v11 == *v13 && v12 == v13[1])
    {
      return 0;
    }
    else
    {
      return sub_1C2550870();
    }
  }
  else
  {
    uint64_t v16 = (void *)sub_1C254E2B0();
    signed int v17 = objc_msgSend(v4, sel_sortOrderForType_, v16);

    uint64_t v18 = (void *)sub_1C254E2B0();
    signed int v19 = objc_msgSend(v4, sel_sortOrderForType_, v18);

    return v17 < v19;
  }
}

uint64_t sub_1C23F3CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1C2223E3C;
  return sub_1C23EE0B8(a1, a2);
}

uint64_t sub_1C23F3D88(uint64_t a1)
{
  sub_1C2314F28(0, &qword_1EA2E2EF8, &qword_1EA2E2F00, (uint64_t)&protocol descriptor for AttachmentItem, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C23F3E10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C23F3E78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C23F3EDC(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1C222399C;
  return sub_1C23ECF74(a1, a2, v2);
}

unint64_t sub_1C23F3F88()
{
  unint64_t result = qword_1EA2E2F58;
  if (!qword_1EA2E2F58)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1EA2E2F58);
  }
  return result;
}

id sub_1C23F3FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = (void *)sub_1C254C930();
  type metadata accessor for DocumentReadingOptionKey(0);
  sub_1C23F52C8(&qword_1EA2DDF68, type metadata accessor for DocumentReadingOptionKey);
  uint64_t v7 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  v12[0] = 0;
  id v8 = objc_msgSend(v4, sel_initWithData_options_documentAttributes_error_, v6, v7, a4, v12);

  if (v8)
  {
    id v9 = v12[0];
  }
  else
  {
    id v10 = v12[0];
    sub_1C254C820();

    swift_willThrow();
  }
  return v8;
}

unint64_t sub_1C23F410C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1C2205E14(a1, a2);
  uint64_t v8 = sub_1C221D288(a3);
  id v9 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  id v10 = sub_1C23F3FC8(a1, a2, v8, 0);
  sub_1C2205E6C(a1, a2);
  if (v3) {
    return v4;
  }
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F934C8]), sel_initWithAttributedText_, v10);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F934B8]), sel_init);
  objc_msgSend(v12, sel_addPrintFormatter_startingAtPageAtIndex_, v11, 0);
  if (qword_1EA2DD7D8 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)sub_1C254FE40();
  BOOL v14 = (void *)sub_1C254F430();
  objc_msgSend(v12, sel_setValue_forKey_, v13, v14);

  if (qword_1EA2DD7E0 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)sub_1C254FE40();
  uint64_t v16 = (void *)sub_1C254F430();
  objc_msgSend(v12, sel_setValue_forKey_, v15, v16);

  if ((uint64_t)objc_msgSend(v12, sel_numberOfPages) > 20)
  {

    uint64_t v4 = 0;
LABEL_13:

    return v4;
  }
  signed int v17 = (NSMutableData *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA58]), sel_init);
  v21.origin.x = 0.0;
  v21.origin.y = 0.0;
  v21.size.width = 0.0;
  v21.size.height = 0.0;
  UIGraphicsBeginPDFContextToData(v17, v21, 0);
  unint64_t result = (unint64_t)objc_msgSend(v12, sel_numberOfPages);
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v19 = result;
    if (result)
    {
      uint64_t v20 = 0;
      do
      {
        UIGraphicsBeginPDFPage();
        CGRect PDFContextBounds = UIGraphicsGetPDFContextBounds();
        objc_msgSend(v12, sel_drawPageAtIndex_inRect_, v20++, PDFContextBounds.origin.x, PDFContextBounds.origin.y, PDFContextBounds.size.width, PDFContextBounds.size.height);
      }
      while (v19 != v20);
    }
    UIGraphicsEndPDFContext();
    uint64_t v4 = MEMORY[0x1C8754E30](v17);

    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C23F43EC(uint64_t a1, unint64_t a2)
{
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
  sub_1C2205E14(a1, a2);
  uint64_t v5 = (void *)sub_1C254C930();
  id v6 = objc_msgSend(v4, sel_initWithData_, v5);
  sub_1C2205E6C(a1, a2);

  if (!v6) {
    return 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v6);
  uint64_t v8 = (NSMutableData *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA58]), sel_init);
  objc_msgSend(v7, sel_bounds);
  UIGraphicsBeginPDFContextToData(v8, v14, 0);
  UIGraphicsBeginPDFPage();
  id v9 = UIGraphicsGetCurrentContext();
  if (!v9)
  {

    return 0;
  }
  id v10 = v9;
  id v11 = objc_msgSend(v7, sel_layer);
  objc_msgSend(v11, sel_renderInContext_, v10);

  UIGraphicsEndPDFContext();
  uint64_t v12 = MEMORY[0x1C8754E30](v8);

  return v12;
}

uint64_t sub_1C23F455C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  uint64_t v4 = sub_1C254E340();
  v3[23] = v4;
  v3[24] = *(void *)(v4 - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C23F4630, 0, 0);
}

uint64_t sub_1C23F4630()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[24];
  (*(void (**)(void, void, uint64_t))(v3 + 16))(v0[26], v0[22], v2);
  sub_1C254E2E0();
  sub_1C23F52C8(&qword_1EA2E2F08, MEMORY[0x1E4FBCEA8]);
  char v4 = sub_1C254F420();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v1, v2);
  if (v4)
  {
    uint64_t v7 = v0[20];
    unint64_t v6 = v0[21];
    v5(v0[26], v0[23]);
    sub_1C2205E14(v7, v6);
    uint64_t v8 = v0[20];
    unint64_t v9 = v0[21];
LABEL_3:
    swift_task_dealloc();
    swift_task_dealloc();
    id v10 = (uint64_t (*)(uint64_t, unint64_t))v0[1];
    return v10(v8, v9);
  }
  uint64_t v12 = v0[25];
  uint64_t v13 = v0[23];
  sub_1C254E300();
  char v14 = sub_1C254F420();
  v5(v12, v13);
  uint64_t v15 = v0[23];
  if (v14)
  {
    v5(v0[26], v0[23]);
    sub_1C23F3E78(0, &qword_1EA2E2F68, (uint64_t (*)(uint64_t))sub_1C23F5224, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
    signed int v17 = (void *)*MEMORY[0x1E4FB06E0];
    uint64_t v18 = (void *)*MEMORY[0x1E4FB0708];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06E0];
    *(void *)(inited + 40) = v18;
    id v19 = v17;
    id v20 = v18;
    v0[27] = sub_1C2205A64(inited);
    sub_1C254F820();
    v0[28] = sub_1C254F810();
    uint64_t v21 = sub_1C254F7D0();
    uint64_t v23 = v22;
    char v24 = sub_1C23F4B98;
  }
  else
  {
    uint64_t v25 = v0[25];
    sub_1C254E330();
    char v26 = sub_1C254F420();
    v5(v25, v15);
    uint64_t v27 = v0[23];
    if (v26)
    {
      v5(v0[26], v0[23]);
      sub_1C23F3E78(0, &qword_1EA2E2F68, (uint64_t (*)(uint64_t))sub_1C23F5224, MEMORY[0x1E4FBBE00]);
      uint64_t v28 = swift_initStackObject();
      *(_OWORD *)(v28 + 16) = xmmword_1C255CD90;
      char v29 = (void *)*MEMORY[0x1E4FB06E0];
      char v30 = (void *)*MEMORY[0x1E4FB0740];
      *(void *)(v28 + 32) = *MEMORY[0x1E4FB06E0];
      *(void *)(v28 + 40) = v30;
      id v31 = v29;
      id v32 = v30;
      v0[32] = sub_1C2205A64(v28);
      sub_1C254F820();
      v0[33] = sub_1C254F810();
      uint64_t v21 = sub_1C254F7D0();
      uint64_t v23 = v33;
      char v24 = sub_1C23F4D4C;
    }
    else
    {
      uint64_t v35 = v0[25];
      uint64_t v34 = v0[26];
      sub_1C254E2F0();
      char v36 = sub_1C254F420();
      v5(v35, v27);
      v5(v34, v27);
      if (v36)
      {
        sub_1C23F3E78(0, &qword_1EA2E2F68, (uint64_t (*)(uint64_t))sub_1C23F5224, MEMORY[0x1E4FBBE00]);
        uint64_t v37 = swift_initStackObject();
        *(_OWORD *)(v37 + 16) = xmmword_1C255CD90;
        uint64_t v38 = (void *)*MEMORY[0x1E4FB06E0];
        uint64_t v39 = (void *)*MEMORY[0x1E4FB0750];
        *(void *)(v37 + 32) = *MEMORY[0x1E4FB06E0];
        *(void *)(v37 + 40) = v39;
        id v40 = v38;
        id v41 = v39;
        v0[37] = sub_1C2205A64(v37);
        sub_1C254F820();
        v0[38] = sub_1C254F810();
        uint64_t v21 = sub_1C254F7D0();
        uint64_t v23 = v42;
        char v24 = sub_1C23F4F00;
      }
      else
      {
        uint64_t v43 = v0[25];
        uint64_t v44 = v0[23];
        sub_1C254E310();
        char v45 = sub_1C254E320();
        v5(v43, v44);
        if ((v45 & 1) == 0)
        {
          uint64_t v8 = 0;
          unint64_t v9 = 0xF000000000000000;
          goto LABEL_3;
        }
        sub_1C254F820();
        v0[42] = sub_1C254F810();
        uint64_t v21 = sub_1C254F7D0();
        uint64_t v23 = v46;
        char v24 = sub_1C23F50B4;
      }
    }
  }
  return MEMORY[0x1F4188298](v24, v21, v23);
}

uint64_t sub_1C23F4B98()
{
  uint64_t v1 = v0[27];
  uint64_t v3 = v0[20];
  unint64_t v2 = v0[21];
  swift_release();
  unint64_t v4 = sub_1C23F410C(v3, v2, v1);
  v0[29] = 0;
  unint64_t v5 = v4;
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  v0[30] = v7;
  v0[31] = v5;
  return MEMORY[0x1F4188298](sub_1C23F4C4C, 0, 0);
}

uint64_t sub_1C23F4C4C()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[31];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_1C23F4CCC()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C23F4D4C()
{
  uint64_t v1 = v0[32];
  uint64_t v3 = v0[20];
  unint64_t v2 = v0[21];
  swift_release();
  unint64_t v4 = sub_1C23F410C(v3, v2, v1);
  v0[34] = 0;
  unint64_t v5 = v4;
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  v0[35] = v7;
  v0[36] = v5;
  return MEMORY[0x1F4188298](sub_1C23F4E00, 0, 0);
}

uint64_t sub_1C23F4E00()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[36];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_1C23F4E80()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C23F4F00()
{
  uint64_t v1 = v0[37];
  uint64_t v3 = v0[20];
  unint64_t v2 = v0[21];
  swift_release();
  unint64_t v4 = sub_1C23F410C(v3, v2, v1);
  v0[39] = 0;
  unint64_t v5 = v4;
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  v0[40] = v7;
  v0[41] = v5;
  return MEMORY[0x1F4188298](sub_1C23F4FB4, 0, 0);
}

uint64_t sub_1C23F4FB4()
{
  uint64_t v1 = v0[40];
  uint64_t v2 = v0[41];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_1C23F5034()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C23F50B4()
{
  uint64_t v1 = v0[20];
  unint64_t v2 = v0[21];
  swift_release();
  v0[43] = sub_1C23F43EC(v1, v2);
  v0[44] = v3;
  return MEMORY[0x1F4188298](sub_1C23F5130, 0, 0);
}

uint64_t sub_1C23F5130()
{
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[44];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_1C23F51B0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1C2205E14(a1, a2);
  }
  return a1;
}

uint64_t sub_1C23F51C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C23F5224()
{
  if (!qword_1EA2E2F70)
  {
    type metadata accessor for DocumentReadingOptionKey(255);
    type metadata accessor for DocumentType(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E2F70);
    }
  }
}

double UIEdgeInsetsInsetRect_0(double a1)
{
  return a1 + 36.0;
}

uint64_t sub_1C23F52C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C23F5314()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_dataSource];
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_pickerRange);
    uint64_t v3 = sub_1C252EF64(*(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear), v2);
    if (v4)
    {
      swift_retain();
    }
    else
    {
      uint64_t v5 = v3;
      uint64_t v6 = *(void **)(*(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_pickerView]
                    + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker);
      swift_retain();
      objc_msgSend(v6, sel_selectRow_inComponent_animated_, v5, 0, 1);
    }
    uint64_t v7 = sub_1C252EF64(*(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear), v2);
    if ((v8 & 1) == 0) {
      objc_msgSend(*(id *)(*(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_pickerView]+ OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_maxYearPicker), sel_selectRow_inComponent_animated_, v7, 0, 1);
    }
    id v9 = objc_msgSend(v0, sel_contentView);
    id v10 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_pickerView];
    objc_msgSend(v9, sel_addSubview_, v10);

    id v11 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v10, sel_hk_alignVerticalConstraintsWithView_margin_, v11, 0.0);

    id v12 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v10, sel_hk_alignHorizontalConstraintsWithView_margin_, v12, 40.0);
    swift_release();
  }
}

void sub_1C23F54F4()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_baseAccessibilityIdentifier + 8];
  if (v1)
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_baseAccessibilityIdentifier];
    sub_1C2201F2C();
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1C255CDA0;
    *(void *)(v3 + 32) = v2;
    *(void *)(v3 + 40) = v1;
    *(void *)(v3 + 48) = 0x654372656B636950;
    *(void *)(v3 + 56) = 0xEA00000000006C6CLL;
    swift_bridgeObjectRetain();
    char v4 = (void *)sub_1C254F700();
    id v5 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v0, sel_setAccessibilityIdentifier_, v5);
    uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_pickerView];
    id v7 = *(id *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker);
    swift_bridgeObjectRetain();
    char v8 = (void *)v3;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v8 = sub_1C226BFC0(0, *(void *)(v3 + 16) + 1, 1, (void *)v3);
    }
    unint64_t v10 = v8[2];
    unint64_t v9 = v8[3];
    if (v10 >= v9 >> 1) {
      char v8 = sub_1C226BFC0((void *)(v9 > 1), v10 + 1, 1, v8);
    }
    _OWORD v8[2] = v10 + 1;
    id v11 = (char *)&v8[2 * v10];
    strcpy(v11 + 32, "MinYearPicker");
    *((_WORD *)v11 + 23) = -4864;
    id v12 = (void *)sub_1C254F700();
    id v13 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v13);
    swift_bridgeObjectRelease();

    id v14 = *(id *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_maxYearPicker);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = (uint64_t)sub_1C226BFC0(0, *(void *)(v3 + 16) + 1, 1, (void *)v3);
    }
    unint64_t v16 = *(void *)(v3 + 16);
    unint64_t v15 = *(void *)(v3 + 24);
    if (v16 >= v15 >> 1) {
      uint64_t v3 = (uint64_t)sub_1C226BFC0((void *)(v15 > 1), v16 + 1, 1, (void *)v3);
    }
    *(void *)(v3 + 16) = v16 + 1;
    uint64_t v17 = v3 + 16 * v16;
    strcpy((char *)(v17 + 32), "MaxYearPicker");
    *(_WORD *)(v17 + 46) = -4864;
    uint64_t v18 = (void *)sub_1C254F700();
    id v19 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v14, sel_setAccessibilityIdentifier_, v19);
    swift_bridgeObjectRelease();
  }
}

char *sub_1C23F57CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_dataSource] = 0;
  uint64_t v6 = &v3[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_baseAccessibilityIdentifier];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  uint64_t v7 = OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_pickerView;
  type metadata accessor for YearRangePickerView();
  id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  unint64_t v9 = v3;
  *(void *)&v3[v7] = objc_msgSend(v8, sel_init);

  if (a3)
  {
    unint64_t v10 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v10 = 0;
  }
  v18.receiver = v9;
  v18.super_class = (Class)type metadata accessor for YearRangePickerCell();
  id v11 = objc_msgSendSuper2(&v18, sel_initWithStyle_reuseIdentifier_, a1, v10);

  id v12 = (char *)v11;
  objc_msgSend(v12, sel_setSelectionStyle_, 0);
  id v13 = *(char **)&v12[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_pickerView];
  id v14 = *(void **)&v13[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker];
  objc_msgSend(v14, sel_setDataSource_, v12);
  objc_msgSend(v14, sel_setDelegate_, v12);
  unint64_t v15 = *(void **)&v13[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_maxYearPicker];
  objc_msgSend(v15, sel_setDataSource_, v12);
  objc_msgSend(v15, sel_setDelegate_, v12);
  unint64_t v16 = v13;
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  return v12;
}

id sub_1C23F5BF4()
{
  return sub_1C23F5EE8(type metadata accessor for YearRangePickerCell);
}

uint64_t type metadata accessor for YearRangePickerCell()
{
  return self;
}

char *sub_1C23F5C90(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_maxYearPicker;
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB1A98]);
  id v11 = v4;
  id v12 = objc_msgSend(v10, sel_init);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v4[v9] = v12;
  uint64_t v13 = OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker;
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1A98]), sel_init);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v11[v13] = v14;
  uint64_t v15 = OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_stackView;
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
  objc_msgSend(v16, sel_setAxis_, 0);
  objc_msgSend(v16, sel_setAlignment_, 3);
  objc_msgSend(v16, sel_setDistribution_, 1);
  objc_msgSend(v16, sel_setSpacing_, 10.0);
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v11[v15] = v16;

  v23.receiver = v11;
  v23.super_class = (Class)type metadata accessor for YearRangePickerView();
  uint64_t v17 = (char *)objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  objc_super v18 = *(void **)&v17[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_stackView];
  uint64_t v19 = *(void *)&v17[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker];
  id v20 = v17;
  objc_msgSend(v18, sel_addArrangedSubview_, v19);
  objc_msgSend(v18, sel_addArrangedSubview_, *(void *)&v20[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_maxYearPicker]);
  objc_msgSend(v20, sel_addSubview_, v18);
  id v21 = v18;
  objc_msgSend(v21, sel_hk_alignConstraintsWithView_, v20);

  return v20;
}

id sub_1C23F5ED0()
{
  return sub_1C23F5EE8(type metadata accessor for YearRangePickerView);
}

id sub_1C23F5EE8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for YearRangePickerView()
{
  return self;
}

void sub_1C23F5FA0(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_dataSource);
  if (!v3) {
    return;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_pickerRange;
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_pickerRange);
  if (*(void *)(v5 + 16) <= a2)
  {
LABEL_25:
    __break(1u);
    return;
  }
  uint64_t v6 = *(void *)(v5 + 8 * a2 + 32);
  sub_1C224B3D4();
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_pickerView);
  id v8 = (id *)(v7 + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker);
  uint64_t v9 = *(void **)(v7 + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker);
  swift_retain();
  id v10 = v9;
  LOBYTE(v9) = sub_1C254FF70();

  if (v9)
  {
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear);
    if (v11 >= v6)
    {
      uint64_t v13 = &OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear;
      goto LABEL_17;
    }
    uint64_t v12 = sub_1C252EF64(*(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear), *(void *)(v3 + v4));
    uint64_t v13 = &OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear;
    if (v14) {
      goto LABEL_16;
    }
    uint64_t v15 = v12;
  }
  else
  {
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear);
    if (v6 >= v11)
    {
      uint64_t v13 = &OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear;
      goto LABEL_17;
    }
    uint64_t v16 = sub_1C252EF64(*(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear), *(void *)(v3 + v4));
    if (v17)
    {
      uint64_t v13 = &OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear;
      goto LABEL_16;
    }
    uint64_t v15 = v16;
    id v8 = (id *)(v7 + OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_maxYearPicker);
    uint64_t v13 = &OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear;
  }
  objc_msgSend(*v8, sel_selectRow_inComponent_animated_, v15, 0, 1);
LABEL_16:
  uint64_t v6 = v11;
LABEL_17:
  *(void *)(v3 + *v13) = v6;
  if (MEMORY[0x1C875A200](v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_delegate))
  {
    sub_1C2401504();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
}

void sub_1C23F61BC()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_maxYearPicker;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1A98]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v0[v1] = v2;
  uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_minYearPicker;
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1A98]), sel_init);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v0[v3] = v4;
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerView_stackView;
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
  objc_msgSend(v6, sel_setAxis_, 0);
  objc_msgSend(v6, sel_setAlignment_, 3);
  objc_msgSend(v6, sel_setDistribution_, 1);
  objc_msgSend(v6, sel_setSpacing_, 10.0);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v0[v5] = v6;

  sub_1C25505F0();
  __break(1u);
}

uint64_t sub_1C23F631C(void *a1)
{
  return sub_1C23F63A4(a1, (SEL *)&selRef_manifestations);
}

uint64_t sub_1C23F6328(void *a1)
{
  return sub_1C23F6860(a1, (SEL *)&selRef_severity);
}

uint64_t sub_1C23F6334(void *a1)
{
  return sub_1C23F6860(a1, (SEL *)&selRef_clinicalStatus);
}

uint64_t sub_1C23F6340(void *a1)
{
  return sub_1C23F6860(a1, (SEL *)&selRef_verificationStatus);
}

uint64_t sub_1C23F634C(void *a1)
{
  return sub_1C23F6860(a1, (SEL *)&selRef_criticality);
}

uint64_t sub_1C23F6358(void *a1)
{
  return sub_1C23F6860(a1, (SEL *)&selRef_allergyType);
}

uint64_t sub_1C23F6364(void *a1)
{
  return sub_1C23F6860(a1, (SEL *)&selRef_category);
}

uint64_t sub_1C23F6374(void *a1)
{
  return sub_1C23F63A4(a1, (SEL *)&selRef_categories);
}

uint64_t sub_1C23F6380(void *a1)
{
  return sub_1C23F65F4(a1, (SEL *)&selRef_interpretation);
}

uint64_t sub_1C23F638C(void *a1)
{
  return sub_1C23F6860(a1, (SEL *)&selRef_bodySite);
}

uint64_t sub_1C23F6398(void *a1)
{
  return sub_1C23F6860(a1, (SEL *)&selRef_method);
}

uint64_t sub_1C23F63A4(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  sub_1C23F6B5C();
  unint64_t v3 = sub_1C254F710();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_17:
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
LABEL_18:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v7;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x1C87588E0](v6, v3);
      }
      else {
        id v8 = *(id *)(v3 + 8 * v6 + 32);
      }
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v8, sel_localizedPreferredName);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = sub_1C254F470();
        uint64_t v14 = v13;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1C226BFC0(0, v7[2] + 1, 1, v7);
        }
        unint64_t v16 = v7[2];
        unint64_t v15 = v7[3];
        if (v16 >= v15 >> 1) {
          uint64_t v7 = sub_1C226BFC0((void *)(v15 > 1), v16 + 1, 1, v7);
        }
        long long v7[2] = v16 + 1;
        char v17 = &v7[2 * v16];
        _OWORD v17[4] = v12;
        v17[5] = v14;
      }
      else
      {
      }
      ++v6;
    }
    while (v4 != v6);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C23F6558(void *a1)
{
  return sub_1C23F65F4(a1, (SEL *)&selRef_bodySites);
}

uint64_t sub_1C23F6564(void *a1)
{
  return sub_1C23F65F4(a1, (SEL *)&selRef_reasonForUse);
}

uint64_t sub_1C23F6570(void *a1)
{
  return sub_1C23F65F4(a1, (SEL *)&selRef_reasonsNotTaken);
}

uint64_t sub_1C23F657C(void *a1)
{
  return sub_1C23F65F4(a1, (SEL *)&selRef_reason);
}

uint64_t sub_1C23F6588(void *a1)
{
  return sub_1C23F6860(a1, (SEL *)&selRef_reasonEnded);
}

uint64_t sub_1C23F6594(void *a1)
{
  return sub_1C23F6860(a1, (SEL *)&selRef_status);
}

uint64_t sub_1C23F65A0(void *a1)
{
  return sub_1C23F6860(a1, (SEL *)&selRef_outcome);
}

uint64_t sub_1C23F65AC(void *a1)
{
  return sub_1C23F65F4(a1, (SEL *)&selRef_complications);
}

uint64_t sub_1C23F65B8(void *a1)
{
  return sub_1C23F65F4(a1, (SEL *)&selRef_reasonsNotPerformed);
}

uint64_t sub_1C23F65C4(void *a1)
{
  return sub_1C23F65F4(a1, (SEL *)&selRef_followUps);
}

uint64_t sub_1C23F65D0(void *a1)
{
  return sub_1C23F6860(a1, (SEL *)&selRef_route);
}

uint64_t sub_1C23F65DC(void *a1)
{
  return sub_1C23F65F4(a1, (SEL *)&selRef_reasons);
}

uint64_t sub_1C23F65E8(void *a1)
{
  return sub_1C23F65F4(a1, (SEL *)&selRef_reasonsNotGiven);
}

uint64_t sub_1C23F65F4(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v3 = v2;
  sub_1C23F6B5C();
  unint64_t v4 = sub_1C254F710();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_4;
    }
LABEL_19:
    id v8 = (void *)MEMORY[0x1E4FBC860];
LABEL_20:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v8;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_19;
  }
LABEL_4:
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    id v8 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1C87588E0](v7, v4);
      }
      else {
        id v9 = *(id *)(v4 + 8 * v7 + 32);
      }
      id v10 = v9;
      id v11 = objc_msgSend(v9, sel_localizedPreferredName);
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = sub_1C254F470();
        uint64_t v15 = v14;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v8 = sub_1C226BFC0(0, v8[2] + 1, 1, v8);
        }
        unint64_t v17 = v8[2];
        unint64_t v16 = v8[3];
        if (v17 >= v16 >> 1) {
          id v8 = sub_1C226BFC0((void *)(v16 > 1), v17 + 1, 1, v8);
        }
        _OWORD v8[2] = v17 + 1;
        objc_super v18 = &v8[2 * v17];
        v18[4] = v13;
        v18[5] = v15;
      }
      else
      {
      }
      ++v7;
    }
    while (v5 != v7);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C23F67B8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_status);
  id v2 = objc_msgSend(v1, sel_localizedPreferredName);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1C254F470();
  unint64_t v5 = v4;

  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1C23F6854(void *a1)
{
  return sub_1C23F6860(a1, (SEL *)&selRef_relationship);
}

uint64_t sub_1C23F6860(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  id v4 = objc_msgSend(v2, sel_localizedPreferredName);

  if (!v4) {
    return 0;
  }
  uint64_t v5 = sub_1C254F470();
  unint64_t v7 = v6;

  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v5;
}

uint64_t _s15HealthRecordsUI21PreferredNameProviderPAAE14preferredNames3for5usingSaySSGSaySo9HKConceptCGSgyXK_So0K5StoreCtF_0(uint64_t (*a1)(void))
{
  unint64_t v1 = a1();
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v2 = v1;
  if (!(v1 >> 62))
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_4;
    }
LABEL_19:
    unint64_t v6 = (void *)MEMORY[0x1E4FBC860];
LABEL_20:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_19;
  }
LABEL_4:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    unint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1C87588E0](v5, v2);
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      uint64_t v8 = v7;
      id v9 = objc_msgSend(v7, sel_localizedPreferredName);
      if (v9)
      {
        id v10 = v9;
        uint64_t v11 = sub_1C254F470();
        uint64_t v13 = v12;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v6 = sub_1C226BFC0(0, v6[2] + 1, 1, v6);
        }
        unint64_t v15 = v6[2];
        unint64_t v14 = v6[3];
        if (v15 >= v14 >> 1) {
          unint64_t v6 = sub_1C226BFC0((void *)(v14 > 1), v15 + 1, 1, v6);
        }
        _OWORD v6[2] = v15 + 1;
        unint64_t v16 = &v6[2 * v15];
        void v16[4] = v11;
        void v16[5] = v13;
      }
      else
      {
      }
      ++v5;
    }
    while (v3 != v5);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t _s15HealthRecordsUI21PreferredNameProviderPAAE09preferredE03for5usingSSSo9HKConceptCSgyXK_So0J5StoreCtF_0(uint64_t (*a1)(void))
{
  unint64_t v1 = (void *)a1();
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_localizedPreferredName);

  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_1C254F470();
  unint64_t v6 = v5;

  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t dispatch thunk of PreferredNameProvider.preferredName(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of PreferredNameProvider.preferredNames(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

unint64_t sub_1C23F6B5C()
{
  unint64_t result = qword_1EA2DE378;
  if (!qword_1EA2DE378)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DE378);
  }
  return result;
}

uint64_t MedicalRecordTimelineAccountDetailsItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C23F6BCC()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  unint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*(id *)(v0 + 16), sel_identifier, v3);
  sub_1C254CB20();

  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v8[0] = 0x44746E756F636341;
  v8[1] = 0xEF2E736C69617465;
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v8[0];
}

uint64_t static MedicalRecordTimelineAccountDetailsItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
  uint64_t v4 = *(void **)(a1 + 16);
  unint64_t v5 = *(void **)(a2 + 16);
  id v6 = v4;
  id v7 = v5;
  LOBYTE(v5) = sub_1C254FF70();

  return v5 & 1;
}

uint64_t MedicalRecordTimelineAccountDetailsItem.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineAccountDetailsItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C23F6DF0()
{
  return sub_1C23F6BCC();
}

uint64_t sub_1C23F6F04(uint64_t a1, void *a2)
{
  sub_1C2227014(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountDetailsItemCell_item;
  swift_beginAccess();
  sub_1C2232E74((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C23F6F78();
  return sub_1C2227100((uint64_t)v5);
}

uint64_t sub_1C23F6F78()
{
  uint64_t v1 = sub_1C254E890();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountDetailsItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v5, (uint64_t)v14);
  if (!v15) {
    return sub_1C2227100((uint64_t)v14);
  }
  sub_1C22270A8();
  type metadata accessor for MedicalRecordTimelineAccountDetailsItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v7 = v13[1];
    MEMORY[0x1C87582A0]();
    if (objc_msgSend(*(id *)(v7 + 16), sel_isSourceType))
    {
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
    }
    else if (qword_1EBB6EF40 != -1)
    {
      swift_once();
    }
    id v8 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C254E860();
    uint64_t result = (uint64_t)objc_msgSend(self, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E4FB2950], *MEMORY[0x1E4FB09D8]);
    if (result)
    {
      id v9 = (void (*)(uint64_t *, void))sub_1C254E7A0();
      sub_1C254E770();
      v9(v14, 0);
      id v10 = objc_msgSend(self, sel_systemBlueColor);
      uint64_t v11 = (void (*)(uint64_t *, void))sub_1C254E7A0();
      sub_1C254E780();
      v11(v14, 0);
      uint64_t v15 = v1;
      uint64_t v16 = MEMORY[0x1E4FB0F88];
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
      (*(void (**)(uint64_t *, char *, uint64_t))(v2 + 16))(boxed_opaque_existential_1, v4, v1);
      MEMORY[0x1C8758230](v14);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1C23F7310@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountDetailsItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C23F7364(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountDetailsItemCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C23F6F78();
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C23F73D4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C23F7434;
}

uint64_t sub_1C23F7434(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C23F6F78();
  }
  return result;
}

void sub_1C23F7468(uint64_t a1, void *a2)
{
}

id MedicalRecordTimelineAccountDetailsItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountDetailsItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C23F74B4(uint64_t a1, void *a2)
{
}

void sub_1C23F74DC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountDetailsItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v4, (uint64_t)v19);
  if (v19[3])
  {
    sub_1C22270A8();
    type metadata accessor for MedicalRecordTimelineAccountDetailsItem();
    uint64_t v5 = swift_dynamicCast();
    if (v5)
    {
      if (qword_1EBB6D858 != -1) {
        uint64_t v5 = swift_once();
      }
      if (qword_1EBB6EF30 != -1) {
        uint64_t v5 = swift_once();
      }
      MEMORY[0x1F4188790](v5);
      sub_1C254CEE0();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
      sub_1C23F7AB8((unint64_t *)&qword_1EBB6F240, 255, MEMORY[0x1E4F66F68]);
      swift_retain();
      sub_1C254E1D0();
      swift_release();
      id v6 = (void *)v19[0];
      id v7 = objc_msgSend(self, sel_sharedBehavior);
      if (v7)
      {
        id v8 = v7;
        unsigned int v9 = objc_msgSend(v7, sel_isiPad);

        id v10 = *(void **)(v18 + 16);
        LOBYTE(v19[0]) = 0;
        id v11 = objc_allocWithZone((Class)type metadata accessor for ClinicalAccountDetailsViewController());
        if (v9)
        {
          id v12 = v10;
          id v13 = v6;
          unint64_t v14 = sub_1C242E68C(v12, v13, (char *)v19, 0, 0);
          sub_1C2430440();

          id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v14);
          objc_msgSend(a1, sel_presentViewController_animated_completion_, v15, 1, 0);
          swift_release();
        }
        else
        {
          id v16 = v6;
          unint64_t v17 = sub_1C242E68C(v10, v16, (char *)v19, 0, 0);
          objc_msgSend(a1, sel_showViewController_sender_, v17, v2);
          swift_release();
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v19);
  }
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountDetailsItemCell()
{
  return self;
}

uint64_t sub_1C23F7850(uint64_t a1, uint64_t a2)
{
  return sub_1C23F7AB8(&qword_1EA2E3080, a2, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountDetailsItem);
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountDetailsItem()
{
  return self;
}

uint64_t sub_1C23F78BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountDetailsItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineAccountDetailsItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineAccountDetailsItem);
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t method lookup function for MedicalRecordTimelineAccountDetailsItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineAccountDetailsItemCell);
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItemCell.didSelectCell(_:in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDetailsItemCell.deselectionBehavior.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t sub_1C23F7AB8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id SignedClinicalDataRecordFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store);
}

uint64_t SignedClinicalDataRecordFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context);
}

id SignedClinicalDataRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id SignedClinicalDataRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for SignedClinicalDataRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for SignedClinicalDataRecordFormatter()
{
  return self;
}

uint64_t sub_1C23F7BF8(void *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context) >= 2uLL)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C23FA410(a1);
  }
  return result;
}

uint64_t sub_1C23F7C5C(void *a1)
{
  v34[1] = swift_getObjectType();
  uint64_t v2 = sub_1C254E560();
  v34[4] = *(void *)(v2 - 8);
  v34[5] = v2;
  MEMORY[0x1F4188790](v2);
  v34[6] = (char *)v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C254E3D0();
  v34[2] = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  sub_1C23FAB28(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  objc_super v7 = (char *)v34 - v6;
  uint64_t v8 = sub_1C254C900();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E3C0();
  swift_allocObject();
  v34[7] = sub_1C254E3B0();
  uint64_t v35 = MEMORY[0x1E4FBC860];
  id v12 = objc_msgSend(a1, sel_mainRecord);
  if (!v12) {
    goto LABEL_4;
  }
  id v13 = v12;
  sub_1C254E350();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {

    sub_1C23FAA9C((uint64_t)v7);
LABEL_4:
    id v14 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v14, sel_setDisplayItemType_, 12);
    id v15 = (void *)sub_1C254F430();
    id v16 = objc_msgSend(self, sel__systemImageNamed_, v15);

    if (qword_1EA2DD680 != -1) {
      swift_once();
    }
    id v17 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C254C730();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();

    id v21 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v18, v20, 0, v16, 0);
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_setAttributedTitle_, v21);

    sub_1C254E360();
    id v32 = v14;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
    swift_release();

    return v35;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  id v22 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
  objc_msgSend(v22, sel_setDisplayItemType_, 12);
  objc_super v23 = (void *)sub_1C254F430();
  id v24 = objc_msgSend(self, sel__systemImageNamed_, v23);

  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v25 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1C254C730();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();

  id v29 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v26, v28, 0, v24, 0);
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setAttributedTitle_, v29);

  sub_1C254C840();
  char v30 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setContextString_, v30);

  id v31 = v22;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();

  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v35;
}

id SignedClinicalDataRecordFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SignedClinicalDataRecordFormatter.init()()
{
}

id SignedClinicalDataRecordFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignedClinicalDataRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C23F87D4()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store);
}

uint64_t sub_1C23F87E8()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context);
}

id sub_1C23F87FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (objc_class *)type metadata accessor for SignedClinicalDataRecordFormatter();
  objc_super v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1C23F8870(void *a1)
{
  if (*(void *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context) >= 2uLL)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C23FA410(a1);
  }
  return result;
}

id sub_1C23F88D8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_subject);
  id v2 = objc_msgSend(v1, sel_fullName);

  uint64_t v3 = sub_1C254F470();
  unint64_t v5 = v4;

  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    id v7 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v7, sel_setDisplayItemType_, 15);
    if (qword_1EA2DD680 != -1) {
      swift_once();
    }
    id v8 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    objc_super v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setTitle_, v9, 0xE000000000000000);

    uint64_t v10 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setSubtitle_, v10);

    objc_msgSend(v7, sel_setSeparatorStyle_, 0);
    objc_msgSend(v7, sel_setSeparatorHidden_, 0);
    objc_msgSend(v7, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v7;
}

id sub_1C23F8AF4(void *a1)
{
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C224F52C();
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(a1, sel_subject, 0xE000000000000000);
  id v7 = objc_msgSend(v6, sel_birthDate);

  id v8 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v9 = sub_1C254F470();
  uint64_t v11 = v10;

  id v12 = sub_1C23898E0(v3, v5, v7, v9, v11);
  swift_bridgeObjectRelease();
  return v12;
}

id sub_1C23F8C78(void *a1)
{
  id v1 = objc_msgSend(a1, sel_subject);
  id v2 = objc_msgSend(v1, sel_gender);

  if (v2)
  {
    uint64_t v3 = sub_1C254F470();
    unint64_t v5 = v4;

    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v6)
    {
      id v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EA2DD680 != -1) {
        swift_once();
      }
      id v7 = (id)qword_1EA2E0B60;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      id v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v8, 0xE000000000000000);

      uint64_t v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v9);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1C23F8E98(void *a1)
{
  id v1 = objc_msgSend(a1, sel_subject);
  id v2 = objc_msgSend(v1, sel_emailAddresses);

  if (v2)
  {
    uint64_t v3 = sub_1C254F710();

    uint64_t v12 = v3;
    sub_1C23FAB8C(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
    sub_1C226BF44();
    uint64_t v4 = sub_1C254F390();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    uint64_t v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v7)
    {
      id v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EA2DD680 != -1) {
        swift_once();
      }
      id v8 = (id)qword_1EA2E0B60;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      uint64_t v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v9, 0xE000000000000000, v12);

      uint64_t v10 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v10);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1C23F9114(void *a1)
{
  id v1 = objc_msgSend(a1, sel_subject);
  id v2 = objc_msgSend(v1, sel_phoneNumbers);

  if (v2)
  {
    uint64_t v3 = sub_1C254F710();

    uint64_t v12 = v3;
    sub_1C23FAB8C(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
    sub_1C226BF44();
    uint64_t v4 = sub_1C254F390();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    uint64_t v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v7)
    {
      id v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EA2DD680 != -1) {
        swift_once();
      }
      id v8 = (id)qword_1EA2E0B60;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      uint64_t v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v9, 0xE000000000000000, v12);

      uint64_t v10 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v10);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1C23F9390(void *a1)
{
  id v1 = objc_msgSend(a1, sel_subject);
  id v2 = objc_msgSend(v1, sel_addresses);

  if (v2)
  {
    uint64_t v3 = sub_1C254F710();

    uint64_t v12 = v3;
    sub_1C23FAB8C(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
    sub_1C226BF44();
    uint64_t v4 = sub_1C254F390();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    uint64_t v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v7)
    {
      id v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EA2DD680 != -1) {
        swift_once();
      }
      id v8 = (id)qword_1EA2E0B60;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      uint64_t v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v9, 0xE000000000000000, v12);

      uint64_t v10 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v10);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1C23F960C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_subject);
  id v2 = objc_msgSend(v1, sel_maritalStatus);

  if (v2)
  {
    uint64_t v3 = sub_1C254F470();
    unint64_t v5 = v4;

    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v6)
    {
      id v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EA2DD680 != -1) {
        swift_once();
      }
      id v7 = (id)qword_1EA2E0B60;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      id v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v8, 0xE000000000000000);

      uint64_t v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v9);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1C23F982C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_subject);
  id v2 = objc_msgSend(v1, sel_race);

  if (v2)
  {
    uint64_t v3 = sub_1C254F470();
    unint64_t v5 = v4;

    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v6)
    {
      id v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EA2DD680 != -1) {
        swift_once();
      }
      id v7 = (id)qword_1EA2E0B60;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      id v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v8, 0xE000000000000000);

      uint64_t v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v9);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1C23F9A4C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_subject);
  id v2 = objc_msgSend(v1, sel_ethnicity);

  if (v2)
  {
    uint64_t v3 = sub_1C254F470();
    unint64_t v5 = v4;

    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v6)
    {
      id v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EA2DD680 != -1) {
        swift_once();
      }
      id v7 = (id)qword_1EA2E0B60;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      id v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v8, 0xE000000000000000);

      uint64_t v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v9);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1C23F9C6C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_subject);
  id v2 = objc_msgSend(v1, sel_birthSex);

  if (v2)
  {
    uint64_t v3 = sub_1C254F470();
    unint64_t v5 = v4;

    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v6)
    {
      id v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EA2DD680 != -1) {
        swift_once();
      }
      id v7 = (id)qword_1EA2E0B60;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      id v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v8, 0xE000000000000000);

      uint64_t v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v9);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1C23F9E8C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_subject);
  id v2 = objc_msgSend(v1, sel_identifiers);

  if (!v2) {
    return 0;
  }
  sub_1C23FAB8C(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
  uint64_t v3 = sub_1C254F710();

  int64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (!v4)
  {
    swift_bridgeObjectRelease();
    int64_t v22 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (!v22) {
      goto LABEL_24;
    }
    goto LABEL_18;
  }
  uint64_t v41 = MEMORY[0x1E4FBC860];
  sub_1C2274AEC(0, v4, 0);
  uint64_t v6 = 0;
  int64_t v40 = v4;
  do
  {
    id v7 = *(void **)(v3 + 8 * v6 + 32);
    uint64_t v8 = v7[2];
    if (v8)
    {
      uint64_t v10 = v7[4];
      unint64_t v9 = v7[5];
      uint64_t v11 = (uint64_t)&v7[2 * v8 + 4];
      uint64_t v13 = *(void *)(v11 - 16);
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v14 = HIBYTE(v9) & 0xF;
      if ((v9 & 0x2000000000000000) == 0) {
        uint64_t v14 = v10 & 0xFFFFFFFFFFFFLL;
      }
      if (v14)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v15 = v3;
        uint64_t v16 = qword_1EA2DD680;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v16 != -1) {
          swift_once();
        }
        id v17 = (id)qword_1EA2E0B60;
        swift_bridgeObjectRetain();
        uint64_t v10 = sub_1C254C730();
        unint64_t v9 = v18;
        swift_bridgeObjectRelease();

        uint64_t v3 = v15;
        int64_t v4 = v40;
      }
      sub_1C23FAB8C(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBBE00]);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1C255CDA0;
      *(void *)(v19 + 32) = v10;
      *(void *)(v19 + 40) = v9;
      *(void *)(v19 + 48) = v13;
      *(void *)(v19 + 56) = v12;
      swift_bridgeObjectRelease();
      id v7 = (void *)v19;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    unint64_t v21 = *(void *)(v41 + 16);
    unint64_t v20 = *(void *)(v41 + 24);
    if (v21 >= v20 >> 1) {
      sub_1C2274AEC(v20 > 1, v21 + 1, 1);
    }
    ++v6;
    *(void *)(v41 + 16) = v21 + 1;
    *(void *)(v41 + 8 * v21 + 32) = v7;
  }
  while (v4 != v6);
  swift_bridgeObjectRelease();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  int64_t v22 = *(void *)(v41 + 16);
  if (v22)
  {
LABEL_18:
    sub_1C2274764(0, v22, 0);
    uint64_t v23 = v5;
    sub_1C226BF44();
    uint64_t v24 = 0;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1C254F390();
      uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      unint64_t v29 = *(void *)(v23 + 16);
      unint64_t v28 = *(void *)(v23 + 24);
      if (v29 >= v28 >> 1) {
        sub_1C2274764(v28 > 1, v29 + 1, 1);
      }
      ++v24;
      *(void *)(v23 + 16) = v29 + 1;
      uint64_t v30 = v23 + 16 * v29;
      *(void *)(v30 + 32) = v25;
      *(void *)(v30 + 40) = v27;
    }
    while (v22 != v24);
  }
LABEL_24:
  swift_bridgeObjectRelease();
  sub_1C226BF44();
  uint64_t v31 = sub_1C254F390();
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0) {
    uint64_t v34 = v31 & 0xFFFFFFFFFFFFLL;
  }
  if (!v34)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v35 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
  objc_msgSend(v35, sel_setDisplayItemType_, 15);
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v36 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v37 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setTitle_, v37, 0xE000000000000000);

  uint64_t v38 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setSubtitle_, v38);

  objc_msgSend(v35, sel_setSeparatorStyle_, 0);
  objc_msgSend(v35, sel_setSeparatorHidden_, 0);
  objc_msgSend(v35, sel_setExtraTopPadding_, 0);

  return v35;
}

uint64_t sub_1C23FA410(void *a1)
{
  sub_1C23FAB28(0, (unint64_t *)&qword_1EA2DF0E8, (uint64_t (*)(uint64_t))sub_1C224F494, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2569620;
  *(void *)(inited + 32) = sub_1C23F88D8(a1);
  *(void *)(inited + 40) = sub_1C23F8AF4(a1);
  *(void *)(inited + 48) = sub_1C23F8C78(a1);
  *(void *)(inited + 56) = sub_1C23F8E98(a1);
  *(void *)(inited + 64) = sub_1C23F9114(a1);
  *(void *)(inited + 72) = sub_1C23F9390(a1);
  *(void *)(inited + 80) = sub_1C23F960C(a1);
  *(void *)(inited + 88) = sub_1C23F982C(a1);
  *(void *)(inited + 96) = sub_1C23F9A4C(a1);
  *(void *)(inited + 104) = sub_1C23F9C6C(a1);
  *(void *)(inited + 112) = sub_1C23F9E8C(a1);
  sub_1C254F730();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  for (uint64_t i = 32; i != 120; i += 8)
  {
    int64_t v4 = *(void **)(inited + i);
    if (v4)
    {
      id v5 = v4;
      MEMORY[0x1C8757C00]();
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }
  }
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_1C23FA5BC(uint64_t a1)
{
  unint64_t result = sub_1C23FA5E4();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C23FA5E4()
{
  unint64_t result = qword_1EA2E3098;
  if (!qword_1EA2E3098)
  {
    type metadata accessor for SignedClinicalDataRecordFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3098);
  }
  return result;
}

uint64_t method lookup function for SignedClinicalDataRecordFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SignedClinicalDataRecordFormatter);
}

uint64_t dispatch thunk of SignedClinicalDataRecordFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SignedClinicalDataRecordFormatter.displayItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t sub_1C23FA698(uint64_t a1)
{
  id v2 = *(void **)(a1 + OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_qrImage);
  if (v2)
  {
    id v3 = objc_allocWithZone((Class)WDMedicalRecordDisplayItem);
    id v4 = v2;
    id v5 = objc_msgSend(v3, sel_init);
    objc_msgSend(v5, sel_setDisplayItemType_, 13);
    objc_msgSend(v5, sel_setRowHeight_, 198.0);
    objc_msgSend(v5, sel_setImage_, v4);
    objc_msgSend(v5, sel_setShowSelection_, 1);
  }
  else
  {
    id v5 = 0;
  }
  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_group);
  if ((unint64_t)HKSignedClinicalDataGroup.multiRecordStatusText()().value._object)
  {
    id v7 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v7, sel_setDisplayItemType_, 11);
    uint64_t v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setTitle_, v8);

    objc_msgSend(v7, sel_setShowDisclosureIndicator_, 1);
  }
  else
  {
    id v7 = 0;
  }
  id v9 = objc_msgSend(v6, sel_mainRecord);
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = objc_allocWithZone((Class)WDMedicalRecordDisplayItem);
    id v12 = v10;
    id v13 = objc_msgSend(v11, sel_init);
    objc_msgSend(v13, sel_setDisplayItemType_, 16);
    if (qword_1EA2DD680 != -1) {
      swift_once();
    }
    id v14 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v15 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setTitle_, v15, 0xE000000000000000);

    id v16 = sub_1C24EF3D8();
    objc_msgSend(v13, sel_setAttributedSubtitle_, v16);

    objc_msgSend(v13, sel_setShowDisclosureIndicator_, 1);
  }
  else
  {
    id v13 = 0;
  }
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    id v17 = v5;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  if (v7)
  {
    id v18 = v7;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  if (v13)
  {
    id v19 = v13;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }

  return v21;
}

uint64_t sub_1C23FAA9C(uint64_t a1)
{
  sub_1C23FAB28(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C23FAB28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C23FAB8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t ClinicalAccountsDisambiguator.__allocating_init(with:)(unint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_1C23FD220(a1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C23FAC28()
{
  if (*(void *)(v0 + 32))
  {
    uint64_t v1 = *(void *)(v0 + 32);
  }
  else
  {
    uint64_t v1 = sub_1C23FAC88(v0);
    *(void *)(v0 + 32) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C23FAC88(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  id v36 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    id v3 = (uint64_t *)(v1 + 56);
    while (1)
    {
      unint64_t v4 = (void *)*(v3 - 3);
      uint64_t v5 = *(v3 - 2);
      uint64_t v7 = *(v3 - 1);
      uint64_t v6 = *v3;
      swift_bridgeObjectRetain_n();
      id v8 = v4;
      uint64_t v9 = v36;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v35[0] = v9;
      unint64_t v12 = sub_1C21A6470(v5, v7);
      uint64_t v13 = v9[2];
      BOOL v14 = (v11 & 1) == 0;
      uint64_t v15 = v13 + v14;
      if (__OFADD__(v13, v14)) {
        break;
      }
      char v16 = v11;
      if (v9[3] >= v15)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C24B01E8();
          uint64_t v9 = (void *)v35[0];
        }
      }
      else
      {
        sub_1C227E3D4(v15, isUniquelyReferenced_nonNull_native);
        uint64_t v9 = (void *)v35[0];
        unint64_t v17 = sub_1C21A6470(v5, v7);
        if ((v16 & 1) != (v18 & 1)) {
          goto LABEL_24;
        }
        unint64_t v12 = v17;
      }
      id v36 = v9;
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        v9[(v12 >> 6) + 8] |= 1 << v12;
        id v19 = (uint64_t *)(v9[6] + 16 * v12);
        *id v19 = v5;
        v19[1] = v7;
        *(void *)(v9[7] + 8 * v12) = MEMORY[0x1E4FBC860];
        uint64_t v20 = v9[2];
        BOOL v21 = __OFADD__(v20, 1);
        uint64_t v22 = v20 + 1;
        if (v21) {
          goto LABEL_23;
        }
        v9[2] = v22;
        swift_bridgeObjectRetain();
      }
      uint64_t v34 = v2;
      uint64_t v23 = v6;
      uint64_t v24 = v9[7];
      uint64_t v25 = *(void **)(v24 + 8 * v12);
      char v26 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v24 + 8 * v12) = v25;
      if ((v26 & 1) == 0)
      {
        uint64_t v25 = sub_1C226DDC0(0, v25[2] + 1, 1, v25);
        *(void *)(v24 + 8 * v12) = v25;
      }
      unint64_t v28 = v25[2];
      unint64_t v27 = v25[3];
      if (v28 >= v27 >> 1)
      {
        uint64_t v25 = sub_1C226DDC0((void *)(v27 > 1), v28 + 1, 1, v25);
        *(void *)(v24 + 8 * v12) = v25;
      }
      uint64_t v25[2] = v28 + 1;
      unint64_t v29 = &v25[4 * v28];
      v29[4] = v8;
      v29[5] = v5;
      v29[6] = v7;
      v29[7] = v23;
      swift_bridgeObjectRelease();
      uint64_t v31 = sub_1C23FAF80(v35, v5, v7);
      if (*v30) {
        sub_1C23FB054(v30, (uint64_t (*)(uint64_t))sub_1C23C6FE0, sub_1C23FBD14);
      }
      ((void (*)(void *, void))v31)(v35, 0);
      v3 += 4;

      swift_bridgeObjectRelease_n();
      uint64_t v2 = v34 - 1;
      if (v34 == 1)
      {
        swift_bridgeObjectRelease();
        unint64_t v32 = v36;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    uint64_t result = sub_1C2550910();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v32 = (void *)MEMORY[0x1E4FBC868];
LABEL_21:
    swift_bridgeObjectRelease();
    return (uint64_t)v32;
  }
  return result;
}

void (*sub_1C23FAF80(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1C23FC9F0(v6, a2, a3);
  return sub_1C23FB000;
}

void sub_1C23FB000(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_1C23FB054(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t ClinicalAccountsDisambiguator.init(with:)(unint64_t a1)
{
  uint64_t v1 = sub_1C23FD220(a1);
  swift_bridgeObjectRelease();
  return v1;
}

id sub_1C23FB10C(void *a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v27 - v7;
  id v9 = a1;
  id v10 = sub_1C23FCFDC(v9);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v30 = v15;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C23FAC28();
  if (*(void *)(v16 + 16) && (unint64_t v17 = sub_1C21A6470(v12, v14), (v18 & 1) != 0))
  {
    id v19 = *(void **)(*(void *)(v16 + 56) + 8 * v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19[2])
    {
      uint64_t v20 = (void *)v19[4];
      uint64_t v21 = v19[6];
      uint64_t v28 = v19[7];
      id v22 = v20;
      uint64_t v29 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v23 = objc_msgSend(v22, sel_identifier);
      sub_1C254CB20();

      id v24 = objc_msgSend(v9, sel_identifier);
      sub_1C254CB20();

      sub_1C23FD77C((unint64_t *)&qword_1EA2DE1E8, MEMORY[0x1E4F27990]);
      LOBYTE(v24) = sub_1C254F420();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v3 + 8);
      v25(v5, v2);
      v25(v8, v2);
      swift_bridgeObjectRelease();

      if (v24)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        if (v30 < v28) {
          return v22;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void sub_1C23FB3C4()
{
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v0 = sub_1C23FAC28();
  uint64_t v1 = v0;
  int64_t v2 = 0;
  uint64_t v3 = v0 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v0 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v0 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    unint64_t v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v9 = v8 | (v2 << 6);
LABEL_22:
    uint64_t v13 = *(void *)(*(void *)(v1 + 56) + 8 * v9);
    if (*(void *)(v13 + 16))
    {
      id v14 = *(id *)(v13 + 32);
      uint64_t v15 = swift_bridgeObjectRetain();
      MEMORY[0x1C8757C00](v15);
      if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
      swift_bridgeObjectRelease();
    }
  }
  int64_t v10 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v10 >= v7) {
    goto LABEL_26;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v10);
  ++v2;
  if (v11) {
    goto LABEL_21;
  }
  int64_t v2 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_26;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v2);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v2 = v10 + 2;
  if (v10 + 2 >= v7) {
    goto LABEL_26;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v2);
  if (v11) {
    goto LABEL_21;
  }
  int64_t v2 = v10 + 3;
  if (v10 + 3 >= v7) {
    goto LABEL_26;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v2);
  if (v11)
  {
LABEL_21:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
    goto LABEL_22;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_26:
    swift_release();
    return;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    int64_t v2 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_26;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
}

uint64_t ClinicalAccountsDisambiguator.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ClinicalAccountsDisambiguator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C23FB628(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C2550800();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1C23FC3F8(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      unint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      unint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1C23FC4C8((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1C23F321C((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          unint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C254F780();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  unint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    id v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1C2550870();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      id v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1C2550870()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_1C23F277C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      unint64_t v11 = sub_1C23F277C((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          unint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            unint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        BOOL v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        unint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        unint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        unint64_t v88 = v42;
        unint64_t v89 = v44;
        unint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1C23FC4C8((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        unint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      unint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1C2550870() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1C25505E0();
  __break(1u);
  return result;
}

uint64_t sub_1C23FBD14(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C2550800();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v91 = 0;
      uint64_t v92 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v94 = *(void *)(v92 + 32 * i + 24);
        uint64_t v95 = v91;
        do
        {
          uint64_t v96 = v92 + v95;
          if (*(void *)(v92 + v95 + 24) >= v94) {
            break;
          }
          if (!v92) {
            goto LABEL_140;
          }
          uint64_t v97 = *(void *)(v96 + 32);
          uint64_t v98 = (void *)(v92 + v95);
          uint64_t v99 = *(void *)(v92 + v95 + 40);
          uint64_t v100 = *(void *)(v92 + v95 + 48);
          long long v101 = *(_OWORD *)(v96 + 16);
          *(_OWORD *)(v96 + 32) = *(_OWORD *)v96;
          *(_OWORD *)(v96 + 48) = v101;
          *uint64_t v98 = v97;
          v98[1] = v99;
          v98[2] = v100;
          *(void *)(v96 + 24) = v94;
          v95 -= 32;
        }
        while (v95 != -32);
        v91 += 32;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  uint64_t v110 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      unint64_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_102:
      uint64_t v102 = v12;
      uint64_t v112 = v9;
      if (v13 >= 2)
      {
        uint64_t v103 = *v110;
        do
        {
          unint64_t v104 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v103) {
            goto LABEL_144;
          }
          uint64_t v105 = v102;
          uint64_t v106 = *(void *)&v102[16 * v104 + 32];
          uint64_t v107 = *(void *)&v102[16 * v13 + 24];
          sub_1C23FC764((char *)(v103 + 32 * v106), (char *)(v103 + 32 * *(void *)&v102[16 * v13 + 16]), v103 + 32 * v107, __dst);
          if (v1) {
            break;
          }
          if (v107 < v106) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v105 = sub_1C23F321C((uint64_t)v105);
          }
          if (v104 >= *((void *)v105 + 2)) {
            goto LABEL_133;
          }
          uint64_t v108 = &v105[16 * v104 + 32];
          *(void *)uint64_t v108 = v106;
          *((void *)v108 + 1) = v107;
          unint64_t v109 = *((void *)v105 + 2);
          if (v13 > v109) {
            goto LABEL_134;
          }
          memmove(&v105[16 * v13 + 16], &v105[16 * v13 + 32], 16 * (v109 - v13));
          uint64_t v102 = v105;
          *((void *)v105 + 2) = v109 - 1;
          unint64_t v13 = v109 - 1;
        }
        while (v109 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v112 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v112 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1C254F780();
    *(void *)(v8 + 16) = v7;
    uint64_t v112 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v111 = *a1 + 88;
  unint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v113 = v6;
  uint64_t v114 = v3;
  uint64_t v115 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 32 * v10 + 24);
      uint64_t v16 = *(void *)(v11 + 32 * v14 + 24);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        unint64_t v17 = (uint64_t *)(v111 + 32 * v14);
        uint64_t v18 = v15;
        while (1)
        {
          uint64_t v20 = *v17;
          v17 += 4;
          uint64_t v19 = v20;
          if (v16 < v15 == v18 >= v20) {
            break;
          }
          ++v10;
          uint64_t v18 = v19;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v21 = 32 * v10;
          uint64_t v22 = 32 * v14;
          uint64_t v23 = v10;
          uint64_t v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = (_OWORD *)(v11 + v22);
              uint64_t v26 = v11 + v21;
              long long v27 = *(_OWORD *)(v11 + v22);
              uint64_t v28 = *(void *)(v11 + v22 + 16);
              uint64_t v29 = *(void *)(v11 + v22 + 24);
              long long v30 = *(_OWORD *)(v11 + v21 - 16);
              *uint64_t v25 = *(_OWORD *)(v11 + v21 - 32);
              v25[1] = v30;
              *(_OWORD *)(v26 - 32) = v27;
              *(void *)(v26 - 16) = v28;
              *(void *)(v26 - 8) = v29;
            }
            ++v24;
            v21 -= 32;
            v22 += 32;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v31 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v31 >= v3) {
      uint64_t v31 = v3;
    }
    if (v31 < v14) {
      break;
    }
    if (v10 != v31)
    {
      uint64_t v32 = (void *)(v11 + 32 * v10);
      do
      {
        uint64_t v33 = *(void *)(v11 + 32 * v10 + 24);
        uint64_t v34 = v32;
        uint64_t v35 = v14;
        do
        {
          if (*(v34 - 1) >= v33) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v36 = *v34;
          uint64_t v37 = v34[1];
          uint64_t v38 = v34[2];
          long long v39 = *((_OWORD *)v34 - 1);
          *(_OWORD *)uint64_t v34 = *((_OWORD *)v34 - 2);
          *((_OWORD *)v34 + 1) = v39;
          *(v34 - 3) = v37;
          *(v34 - 2) = v38;
          *(v34 - 1) = v33;
          *(v34 - 4) = v36;
          v34 -= 4;
          ++v35;
        }
        while (v10 != v35);
        ++v10;
        v32 += 4;
      }
      while (v10 != v31);
      uint64_t v10 = v31;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v12 = sub_1C23F277C(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v41 = *((void *)v12 + 2);
    unint64_t v40 = *((void *)v12 + 3);
    unint64_t v13 = v41 + 1;
    uint64_t v11 = v115;
    if (v41 >= v40 >> 1)
    {
      unint64_t v90 = sub_1C23F277C((char *)(v40 > 1), v41 + 1, 1, v12);
      uint64_t v11 = v115;
      unint64_t v12 = v90;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v42 = v12 + 32;
    uint64_t v43 = &v12[16 * v41 + 32];
    *(void *)uint64_t v43 = v14;
    *((void *)v43 + 1) = v10;
    if (v41)
    {
      while (1)
      {
        unint64_t v44 = v13 - 1;
        if (v13 >= 4)
        {
          unint64_t v49 = &v42[16 * v13];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_119;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_120;
          }
          unint64_t v56 = v13 - 2;
          uint64_t v57 = &v42[16 * v13 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_122;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_125;
          }
          if (v61 >= v52)
          {
            unint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_129;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v73 = *((void *)v12 + 4);
            uint64_t v74 = *((void *)v12 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_77;
          }
          uint64_t v46 = *((void *)v12 + 4);
          uint64_t v45 = *((void *)v12 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_121;
        }
        unint64_t v56 = v13 - 2;
        uint64_t v62 = &v42[16 * v13 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_124;
        }
        BOOL v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_127;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_128;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_83:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v67) {
          goto LABEL_123;
        }
        unint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_126;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        uint64_t v84 = v12;
        unint64_t v85 = &v42[16 * v83];
        uint64_t v86 = *(void *)v85;
        uint64_t v87 = &v42[16 * v44];
        uint64_t v88 = *((void *)v87 + 1);
        sub_1C23FC764((char *)(v11 + 32 * *(void *)v85), (char *)(v11 + 32 * *(void *)v87), v11 + 32 * v88, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v88 < v86) {
          goto LABEL_116;
        }
        if (v44 > *((void *)v84 + 2)) {
          goto LABEL_117;
        }
        *(void *)unint64_t v85 = v86;
        *(void *)&v42[16 * v83 + 8] = v88;
        unint64_t v89 = *((void *)v84 + 2);
        if (v44 >= v89) {
          goto LABEL_118;
        }
        unint64_t v12 = v84;
        unint64_t v13 = v89 - 1;
        memmove(&v42[16 * v44], v87 + 16, 16 * (v89 - 1 - v44));
        *((void *)v84 + 2) = v89 - 1;
        uint64_t v11 = v115;
        if (v89 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v113;
    uint64_t v3 = v114;
    if (v10 >= v114)
    {
      uint64_t v9 = v112;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_1C25505E0();
  __break(1u);
  return result;
}

uint64_t sub_1C23FC3F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_1C2550870(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C23FC4C8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  long long v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      unint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      long long v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        uint64_t v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1C2550870() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            uint64_t v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            long long v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1C2550870() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      long long v27 = v7;
    }
LABEL_50:
    sub_1C23F2A38((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C23FC764(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 31;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 5;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 31;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 5;
  uint64_t v28 = __src;
  long long v27 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst) {
        memmove(__dst, a2, 32 * v13);
      }
      uint64_t v19 = &v4[32 * v13];
      uint64_t v26 = v19;
      uint64_t v28 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        uint64_t v20 = (char *)(a3 - 32);
        do
        {
          uint64_t v21 = v20 + 32;
          if (*((void *)v6 - 1) >= *((void *)v19 - 1))
          {
            uint64_t v26 = v19 - 32;
            if (v21 < v19 || v20 >= v19 || v21 != v19)
            {
              long long v24 = *((_OWORD *)v19 - 1);
              *(_OWORD *)uint64_t v20 = *((_OWORD *)v19 - 2);
              *((_OWORD *)v20 + 1) = v24;
            }
            uint64_t v22 = v6;
            v19 -= 32;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v22 = v6 - 32;
            if (v21 != v6 || v20 >= v6)
            {
              long long v23 = *((_OWORD *)v6 - 1);
              *(_OWORD *)uint64_t v20 = *(_OWORD *)v22;
              *((_OWORD *)v20 + 1) = v23;
            }
            uint64_t v28 = v6 - 32;
            if (v22 <= v7) {
              break;
            }
          }
          v20 -= 32;
          uint64_t v6 = v22;
        }
        while (v19 > v4);
      }
LABEL_44:
      sub_1C23F3004((void **)&v28, &v27, &v26);
      return 1;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst) {
      memmove(__dst, __src, 32 * v10);
    }
    uint64_t v14 = &v4[32 * v10];
    uint64_t v26 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      BOOL v15 = v4;
      while (1)
      {
        if (*((void *)v15 + 3) >= *((void *)v6 + 3))
        {
          uint64_t v4 = v15 + 32;
          unint64_t v17 = v15;
          uint64_t v16 = v6;
          if (v7 == v15)
          {
            v15 += 32;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 32;
          }
        }
        else
        {
          uint64_t v16 = v6 + 32;
          unint64_t v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        long long v18 = *((_OWORD *)v17 + 1);
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v17;
        *((_OWORD *)v7 + 1) = v18;
LABEL_22:
        v7 += 32;
        if (v15 < v14)
        {
          uint64_t v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        long long v27 = v4;
        uint64_t v28 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

void (*sub_1C23FC9F0(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1C23FCCA8(v6);
  v6[10] = sub_1C23FCB10(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1C23FCA9C;
}

void sub_1C23FCA9C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_1C23FCB10(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v4;
  v10[1] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_1C21A6470(a2, a3);
  *((unsigned char *)v10 + 40) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      void v10[4] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *uint64_t v10 = v19;
        return sub_1C23FCC58;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1C24B01E8();
      goto LABEL_7;
    }
    sub_1C227E3D4(v16, a4 & 1);
    unint64_t v20 = sub_1C21A6470(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      unint64_t v13 = v20;
      void v10[4] = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(uint64_t **))sub_1C2550910();
  __break(1u);
  return result;
}

void sub_1C23FCC58(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_1C23FCCE4(*a1, *((unsigned char *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_1C23FCCA8(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1C23FCCD8;
}

uint64_t sub_1C23FCCD8(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_1C23FCCE4(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  if (*a1)
  {
    if (a2)
    {
      *(void *)(*(void *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_1C24F6DDC(a4, a5, a6, v8, (void *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1C24AD084(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C23FCD94(void *a1)
{
  id v1 = objc_msgSend(a1, sel_gateway);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  int64_t v2 = v1;
  uint64_t v21 = MEMORY[0x1E4FBC870];
  id v3 = objc_msgSend(v1, sel_externalID);
  uint64_t v4 = sub_1C254F470();
  uint64_t v6 = v5;

  sub_1C23696B8((uint64_t *)&v20, v4, v6);
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v2, sel_gatewayVersions);
  if (!v7) {
    goto LABEL_14;
  }
  uint64_t v8 = v7;
  sub_1C23FD7C4();
  unint64_t v9 = sub_1C254F710();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
LABEL_5:
      if (v10 < 1)
      {
        __break(1u);
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      uint64_t v11 = 0;
      do
      {
        if ((v9 & 0xC000000000000001) != 0) {
          id v12 = (id)MEMORY[0x1C87588E0](v11, v9);
        }
        else {
          id v12 = *(id *)(v9 + 8 * v11 + 32);
        }
        unint64_t v13 = v12;
        ++v11;
        id v14 = objc_msgSend(v12, sel_gatewayID);
        uint64_t v15 = sub_1C254F470();
        uint64_t v17 = v16;

        sub_1C23696B8((uint64_t *)&v20, v15, v17);
        swift_bridgeObjectRelease();
      }
      while (v10 != v11);
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v19 = sub_1C2290810(v21);
  swift_bridgeObjectRelease();
  unint64_t v20 = v19;
  swift_retain();
  sub_1C23FB054((uint64_t *)&v20, sub_1C23F383C, sub_1C23FB628);
  swift_release();

  return (uint64_t)v20;
}

id sub_1C23FCFDC(void *a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = a1;
  id v7 = (void *)sub_1C23FCD94(v6);
  if (!v7[2])
  {
    id v8 = objc_msgSend(v6, sel_identifier);
    sub_1C254CB20();

    uint64_t v9 = sub_1C254CAF0();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v7 = sub_1C226BFC0(0, v7[2] + 1, 1, v7);
    }
    unint64_t v13 = v7[2];
    unint64_t v12 = v7[3];
    if (v13 >= v12 >> 1) {
      id v7 = sub_1C226BFC0((void *)(v12 > 1), v13 + 1, 1, v7);
    }
    long long v7[2] = v13 + 1;
    id v14 = &v7[2 * v13];
    void v14[4] = v9;
    v14[5] = v11;
  }
  v18[1] = v7;
  sub_1C23FD724();
  sub_1C23FD77C((unint64_t *)&qword_1EBB6F970, (void (*)(uint64_t))sub_1C23FD724);
  sub_1C254F390();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v6, sel_gateway);
  if (v15)
  {
    uint64_t v16 = v15;
    objc_msgSend(v15, sel_minCompatibleAPIVersion);
  }
  return v6;
}

uint64_t sub_1C23FD220(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v33 = sub_1C254CB40();
  uint64_t v4 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v32 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 16) = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2550620();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v6)
  {
LABEL_22:
    *(void *)(v2 + 24) = v7;
    return v2;
  }
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C2274C10(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    uint64_t v7 = v37;
    unint64_t v34 = a1 & 0xC000000000000001;
    unint64_t v35 = a1;
    uint64_t v30 = v1;
    uint64_t v31 = (void (**)(char *, uint64_t))(v4 + 8);
    do
    {
      if (v34) {
        id v10 = (id)MEMORY[0x1C87588E0](v9, a1);
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      id v11 = v10;
      unint64_t v12 = (void *)sub_1C23FCD94(v11);
      if (!v12[2])
      {
        id v13 = objc_msgSend(v11, sel_identifier);
        id v14 = v32;
        sub_1C254CB20();

        uint64_t v15 = sub_1C254CAF0();
        uint64_t v17 = v16;
        (*v31)(v14, v33);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v12 = sub_1C226BFC0(0, v12[2] + 1, 1, v12);
        }
        unint64_t v19 = v12[2];
        unint64_t v18 = v12[3];
        if (v19 >= v18 >> 1) {
          unint64_t v12 = sub_1C226BFC0((void *)(v18 > 1), v19 + 1, 1, v12);
        }
        id v12[2] = v19 + 1;
        unint64_t v20 = &v12[2 * v19];
        v20[4] = v15;
        v20[5] = v17;
      }
      uint64_t v36 = v12;
      sub_1C23FD724();
      sub_1C23FD77C((unint64_t *)&qword_1EBB6F970, (void (*)(uint64_t))sub_1C23FD724);
      uint64_t v21 = sub_1C254F390();
      uint64_t v23 = v22;
      swift_bridgeObjectRelease();
      id v24 = objc_msgSend(v11, sel_gateway);
      if (v24)
      {
        uint64_t v25 = v24;
        id v26 = objc_msgSend(v24, sel_minCompatibleAPIVersion);
      }
      else
      {
        id v26 = 0;
      }

      uint64_t v37 = v7;
      unint64_t v28 = *(void *)(v7 + 16);
      unint64_t v27 = *(void *)(v7 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1C2274C10(v27 > 1, v28 + 1, 1);
        uint64_t v7 = v37;
      }
      ++v9;
      *(void *)(v7 + 16) = v28 + 1;
      uint64_t v29 = (void *)(v7 + 32 * v28);
      v29[4] = v11;
      v29[5] = v21;
      v29[6] = v23;
      v29[7] = v26;
      a1 = v35;
    }
    while (v6 != v9);
    uint64_t v2 = v30;
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ClinicalAccountsDisambiguator()
{
  return self;
}

uint64_t method lookup function for ClinicalAccountsDisambiguator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClinicalAccountsDisambiguator);
}

uint64_t dispatch thunk of ClinicalAccountsDisambiguator.__allocating_init(with:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of ClinicalAccountsDisambiguator.newestAccount(of:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ClinicalAccountsDisambiguator.nonStaleAccounts()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

void *initializeWithCopy for GatewayIdentifiedClinicalAccount(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  id v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GatewayIdentifiedClinicalAccount(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for GatewayIdentifiedClinicalAccount(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = a2[3];
  return a1;
}

ValueMetadata *type metadata accessor for GatewayIdentifiedClinicalAccount()
{
  return &type metadata for GatewayIdentifiedClinicalAccount;
}

void sub_1C23FD724()
{
  if (!qword_1EBB6F968)
  {
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F968);
    }
  }
}

uint64_t sub_1C23FD77C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C23FD7C4()
{
  unint64_t result = qword_1EA2E30A0;
  if (!qword_1EA2E30A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E30A0);
  }
  return result;
}

uint64_t sub_1C23FD804@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v5;
  char v6 = *(unsigned char *)(v3 + 32);
  *(unsigned char *)(a2 + 16) = v6;
  return sub_1C23FDA28(v4, v5, v6);
}

uint64_t sub_1C23FD858(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *a2;
  char v5 = *(unsigned char *)(a1 + 16);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v7 = *(void *)(v4 + 24);
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  char v8 = *(unsigned char *)(v4 + 32);
  *(unsigned char *)(v4 + 32) = v5;
  sub_1C23FDA28(v2, v3, v5);
  sub_1C23FDB50(v6, v7, v8);
  return sub_1C23FD8EC();
}

uint64_t sub_1C23FD8EC()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v1 + 32))
  {
    uint64_t v3 = *(void *)(v1 + 24);
    if (*(unsigned char *)(v1 + 32) == 1)
    {
      uint64_t v4 = swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v7 = v2 | v3;
      uint64_t v8 = v2 ^ 1 | v3;
      unint64_t v9 = 0x80000001C2583BB0;
      BOOL v10 = v8 == 0;
      if (v8) {
        unint64_t v11 = 0xD000000000000017;
      }
      else {
        unint64_t v11 = 0xD000000000000014;
      }
      if (!v10) {
        unint64_t v9 = 0x80000001C2583B90;
      }
      if (v7) {
        uint64_t v2 = v11;
      }
      else {
        uint64_t v2 = 25637;
      }
      if (v7) {
        uint64_t v4 = v9;
      }
      else {
        uint64_t v4 = 0xE200000000000000;
      }
    }
  }
  else
  {
    unsigned __int8 v13 = v2;
    unint64_t v5 = sub_1C23FE2FC(&v13);
    if (v6) {
      uint64_t v2 = v5;
    }
    else {
      uint64_t v2 = 25637;
    }
    if (v6) {
      uint64_t v4 = v6;
    }
    else {
      uint64_t v4 = 0xE200000000000000;
    }
  }
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v4;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C23FD9D8@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v5 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 16) = v5;
  return sub_1C23FDA28(v3, v4, v5);
}

uint64_t sub_1C23FDA28(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C23FDA40(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  char v5 = *((unsigned char *)a1 + 16);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  *(void *)(v2 + 16) = v3;
  *(void *)(v2 + 24) = v4;
  char v8 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v2 + 32) = v5;
  sub_1C23FDB50(v6, v7, v8);
  uint64_t v9 = *(void *)(v2 + 16);
  if (*(unsigned char *)(v2 + 32))
  {
    uint64_t v10 = *(void *)(v2 + 24);
    if (*(unsigned char *)(v2 + 32) == 1)
    {
      uint64_t v11 = swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v14 = v9 | v10;
      uint64_t v15 = v9 ^ 1 | v10;
      unint64_t v16 = 0x80000001C2583BB0;
      BOOL v17 = v15 == 0;
      if (v15) {
        unint64_t v18 = 0xD000000000000017;
      }
      else {
        unint64_t v18 = 0xD000000000000014;
      }
      if (!v17) {
        unint64_t v16 = 0x80000001C2583B90;
      }
      if (v14) {
        uint64_t v9 = v18;
      }
      else {
        uint64_t v9 = 25637;
      }
      if (v14) {
        uint64_t v11 = v16;
      }
      else {
        uint64_t v11 = 0xE200000000000000;
      }
    }
  }
  else
  {
    unsigned __int8 v20 = *(void *)(v2 + 16);
    unint64_t v12 = sub_1C23FE2FC(&v20);
    if (v13) {
      uint64_t v9 = v12;
    }
    else {
      uint64_t v9 = 25637;
    }
    if (v13) {
      uint64_t v11 = v13;
    }
    else {
      uint64_t v11 = 0xE200000000000000;
    }
  }
  *(void *)(v2 + 40) = v9;
  *(void *)(v2 + 48) = v11;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C23FDB50(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*sub_1C23FDB68(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C23FDBC0;
}

uint64_t sub_1C23FDBC0(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    uint64_t v6 = *(void *)(v5 + 16);
    if (*(unsigned char *)(v5 + 32))
    {
      uint64_t v7 = *(void *)(v5 + 24);
      if (*(unsigned char *)(v5 + 32) == 1)
      {
        uint64_t v8 = swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v11 = v6 | v7;
        uint64_t v12 = v6 ^ 1 | v7;
        unint64_t v13 = 0x80000001C2583BB0;
        BOOL v14 = v12 == 0;
        if (v12) {
          unint64_t v15 = 0xD000000000000017;
        }
        else {
          unint64_t v15 = 0xD000000000000014;
        }
        if (!v14) {
          unint64_t v13 = 0x80000001C2583B90;
        }
        if (v11) {
          uint64_t v6 = v15;
        }
        else {
          uint64_t v6 = 25637;
        }
        if (v11) {
          uint64_t v8 = v13;
        }
        else {
          uint64_t v8 = 0xE200000000000000;
        }
      }
    }
    else
    {
      unsigned __int8 v16 = *(void *)(v5 + 16);
      unint64_t v9 = sub_1C23FE2FC(&v16);
      if (v10) {
        uint64_t v6 = v9;
      }
      else {
        uint64_t v6 = 25637;
      }
      if (v10) {
        uint64_t v8 = v10;
      }
      else {
        uint64_t v8 = 0xE200000000000000;
      }
      uint64_t v5 = *(void *)(a1 + 24);
    }
    *(void *)(v5 + 40) = v6;
    *(void *)(v5 + 48) = v8;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t CountFormatter.__allocating_init(style:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v4 = *(void *)a1;
  unint64_t v3 = *(void *)(a1 + 8);
  int v5 = *(unsigned __int8 *)(a1 + 16);
  if (qword_1EA2DD648 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_1EA2E0AB8;
  uint64_t v6 = unk_1EA2E0AC0;
  uint64_t v8 = qword_1EA2E0AC8;
  *(void *)(v2 + 56) = qword_1EA2E0AB8;
  *(void *)(v2 + 64) = v6;
  *(void *)(v2 + 72) = v8;
  *(void *)(v2 + 16) = v4;
  *(void *)(v2 + 24) = v3;
  *(unsigned char *)(v2 + 32) = v5;
  if (v5)
  {
    if (v5 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v11 = v4 | v3;
      uint64_t v12 = v4 ^ 1 | v3;
      unint64_t v13 = 0x80000001C2583BB0;
      BOOL v14 = v12 == 0;
      if (v12) {
        unint64_t v15 = 0xD000000000000017;
      }
      else {
        unint64_t v15 = 0xD000000000000014;
      }
      if (!v14) {
        unint64_t v13 = 0x80000001C2583B90;
      }
      if (v11) {
        uint64_t v4 = v15;
      }
      else {
        uint64_t v4 = 25637;
      }
      if (v11) {
        unint64_t v3 = v13;
      }
      else {
        unint64_t v3 = 0xE200000000000000;
      }
    }
  }
  else
  {
    unsigned __int8 v18 = v4;
    unint64_t v9 = sub_1C23FE2FC(&v18);
    if (v10) {
      uint64_t v4 = v9;
    }
    else {
      uint64_t v4 = 25637;
    }
    if (v10) {
      unint64_t v3 = v10;
    }
    else {
      unint64_t v3 = 0xE200000000000000;
    }
  }
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = v3;
  id v16 = v7;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CountFormatter.init(style:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)a1;
  unint64_t v3 = *(void *)(a1 + 8);
  int v5 = *(unsigned __int8 *)(a1 + 16);
  if (qword_1EA2DD648 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_1EA2E0AB8;
  uint64_t v6 = unk_1EA2E0AC0;
  uint64_t v8 = qword_1EA2E0AC8;
  *(void *)(v2 + 56) = qword_1EA2E0AB8;
  *(void *)(v2 + 64) = v6;
  *(void *)(v2 + 72) = v8;
  *(void *)(v2 + 16) = v4;
  *(void *)(v2 + 24) = v3;
  *(unsigned char *)(v2 + 32) = v5;
  if (v5)
  {
    if (v5 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v11 = v4 | v3;
      uint64_t v12 = v4 ^ 1 | v3;
      unint64_t v13 = 0x80000001C2583BB0;
      BOOL v14 = v12 == 0;
      if (v12) {
        unint64_t v15 = 0xD000000000000017;
      }
      else {
        unint64_t v15 = 0xD000000000000014;
      }
      if (!v14) {
        unint64_t v13 = 0x80000001C2583B90;
      }
      if (v11) {
        uint64_t v4 = v15;
      }
      else {
        uint64_t v4 = 25637;
      }
      if (v11) {
        unint64_t v3 = v13;
      }
      else {
        unint64_t v3 = 0xE200000000000000;
      }
    }
  }
  else
  {
    unsigned __int8 v18 = v4;
    unint64_t v9 = sub_1C23FE2FC(&v18);
    if (v10) {
      uint64_t v4 = v9;
    }
    else {
      uint64_t v4 = 25637;
    }
    if (v10) {
      unint64_t v3 = v10;
    }
    else {
      unint64_t v3 = 0xE200000000000000;
    }
  }
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = v3;
  id v16 = v7;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C23FDF60(uint64_t a1)
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  int v5 = (char *)&v14 - v4;
  uint64_t v6 = *(void **)(v1 + 56);
  uint64_t v7 = sub_1C254CBD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = MEMORY[0x1E4FBB550];
  *(_OWORD *)(v8 + 16) = xmmword_1C255CD90;
  uint64_t v10 = MEMORY[0x1E4FBB5C8];
  *(void *)(v8 + 56) = v9;
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 32) = a1;
  id v11 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v12 = sub_1C254F4A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v5);
  swift_bridgeObjectRelease();

  return v12;
}

uint64_t CountFormatter.deinit()
{
  sub_1C23FDB50(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 56);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t CountFormatter.__deallocating_deinit()
{
  sub_1C23FDB50(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 56);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

Swift::String __swiftcall DisplayCategory.Kind.localizedCount(_:)(Swift::Int a1)
{
  uint64_t v3 = *v1;
  type metadata accessor for CountFormatter();
  uint64_t inited = swift_initStackObject();
  if (qword_1EA2DD648 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_1EA2E0AB8;
  uint64_t v5 = unk_1EA2E0AC0;
  uint64_t v7 = qword_1EA2E0AC8;
  *(void *)(inited + 56) = qword_1EA2E0AB8;
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 16) = v3;
  *(void *)(inited + 24) = 0;
  *(unsigned char *)(inited + 32) = 0;
  unsigned __int8 v19 = v3;
  unint64_t v8 = sub_1C23FE2FC(&v19);
  uint64_t v10 = 25637;
  if (v9)
  {
    uint64_t v10 = v8;
    unint64_t v11 = v9;
  }
  else
  {
    unint64_t v11 = 0xE200000000000000;
  }
  *(void *)(inited + 40) = v10;
  *(void *)(inited + 48) = v11;
  id v12 = v6;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C23FDF60(a1);
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v16 = v13;
  BOOL v17 = v15;
  result._object = v17;
  result._countAndFlagsBits = v16;
  return result;
}

unint64_t sub_1C23FE2FC(unsigned __int8 *a1)
{
  unint64_t v1 = *a1;
  unint64_t result = v1;
  switch(v1)
  {
    case 1uLL:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2uLL:
    case 4uLL:
    case 5uLL:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3uLL:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 6uLL:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 7uLL:
      unint64_t result = 0xD000000000000019;
      break;
    case 8uLL:
      unint64_t result = 0xD000000000000017;
      break;
    case 9uLL:
      unint64_t result = 0xD000000000000019;
      break;
    case 0xAuLL:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for CountFormatter()
{
  return self;
}

uint64_t method lookup function for CountFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CountFormatter);
}

uint64_t dispatch thunk of CountFormatter.style.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of CountFormatter.style.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of CountFormatter.style.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of CountFormatter.__allocating_init(style:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of CountFormatter.string(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t destroy for CountFormatter.Style(uint64_t a1)
{
  return sub_1C23FDB50(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s15HealthRecordsUI14CountFormatterC5StyleOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C23FDA28(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CountFormatter.Style(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C23FDA28(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C23FDB50(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CountFormatter.Style(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C23FDB50(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CountFormatter.Style(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CountFormatter.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C23FE6C0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C23FE6D8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CountFormatter.Style()
{
  return &type metadata for CountFormatter.Style;
}

Swift::Void __swiftcall UIAccessibilityIdentification.hrui_setAccessibilityIdentifier(_:)(Swift::OpaquePointer a1)
{
  uint64_t v2 = (void *)sub_1C254F700();
  id v3 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v3);
}

uint64_t sub_1C23FE770()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RecordItem()
{
  return self;
}

uint64_t sub_1C23FE7DC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C23FE810()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1Tm((void *)(*(void *)v0 + 16), v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1C23FE8AC(uint64_t a1, void *a2)
{
}

uint64_t sub_1C23FE8D4()
{
  return sub_1C254D910();
}

void sub_1C23FE930(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PresentationContext(0);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C21F4424(v2 + 16, (uint64_t)v14);
  sub_1C23FEA94();
  sub_1C23FEAEC();
  if (swift_dynamicCast())
  {
    uint64_t v7 = v13;
    char v8 = *(void **)(v2 + 56);
    uint64_t v9 = sub_1C254CB40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    objc_allocWithZone((Class)type metadata accessor for MedicalRecordDetailViewController(0));
    id v10 = v7;
    id v11 = v8;
    id v12 = sub_1C24CD370(v10, v11, (uint64_t)v6);

    objc_msgSend(a1, sel_showAdaptively_sender_, v12, v2);
  }
}

unint64_t sub_1C23FEA94()
{
  unint64_t result = qword_1EA2DF850;
  if (!qword_1EA2DF850)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DF850);
  }
  return result;
}

unint64_t sub_1C23FEAEC()
{
  unint64_t result = qword_1EA2DFB78;
  if (!qword_1EA2DFB78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DFB78);
  }
  return result;
}

id DiagnosticTestReportFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_store);
}

uint64_t DiagnosticTestReportFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context);
}

id DiagnosticTestReportFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id DiagnosticTestReportFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for DiagnosticTestReportFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for DiagnosticTestReportFormatter()
{
  return self;
}

uint64_t sub_1C23FEC24(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context);
  if (v2 == 1)
  {
    return sub_1C23FF038(a1);
  }
  else if (v2)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C23FECA8(a1);
  }
  return result;
}

uint64_t sub_1C23FECA8(void *a1)
{
  sub_1C224F4C8(0, (unint64_t *)&qword_1EA2DF0E8, (uint64_t (*)(uint64_t))sub_1C224F494, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2561290;
  *(void *)(inited + 32) = sub_1C253F708(a1);
  *(void *)(inited + 40) = sub_1C23FF418(a1);
  unint64_t v3 = sub_1C224F52C();
  id v4 = a1;
  id v5 = objc_msgSend(v4, sel_effectiveStartDate);
  id v6 = objc_msgSend(v4, sel_effectiveEndDate);

  id v7 = objc_msgSend(v4, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  *(void *)(inited + 48) = sub_1C2388848(v5, v6, sub_1C24A9184, 0, sub_1C24A9184, 0, v8, v10, v3);
  *(void *)(inited + 56) = sub_1C23FF638(v4);
  *(void *)(inited + 64) = sub_1C243F974(v4);
  sub_1C254F730();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  id v11 = *(void **)(inited + 32);
  if (v11)
  {
    id v12 = v11;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v13 = *(void **)(inited + 40);
  if (v13)
  {
    id v14 = v13;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  unint64_t v15 = *(void **)(inited + 48);
  if (v15)
  {
    id v16 = v15;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  BOOL v17 = *(void **)(inited + 56);
  if (v17)
  {
    id v18 = v17;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  unsigned __int8 v19 = *(void **)(inited + 64);
  if (v19)
  {
    id v20 = v19;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1C23FF038(void *a1)
{
  id v2 = sub_1C253F708(a1);
  unint64_t v3 = (void *)sub_1C243F974(a1);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    id v4 = v2;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  if (v3)
  {
    id v5 = v3;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }

  return v7;
}

id DiagnosticTestReportFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DiagnosticTestReportFormatter.init()()
{
}

id DiagnosticTestReportFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiagnosticTestReportFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C23FF230()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_store);
}

uint64_t sub_1C23FF244()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context);
}

id sub_1C23FF258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = (objc_class *)type metadata accessor for DiagnosticTestReportFormatter();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1C23FF2CC(void *a1)
{
  uint64_t v2 = *(void *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context);
  if (v2 == 1) {
    return sub_1C23FF038(a1);
  }
  if (!v2) {
    return sub_1C23FECA8(a1);
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

unint64_t sub_1C23FF33C(uint64_t a1)
{
  unint64_t result = sub_1C23FF364();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C23FF364()
{
  unint64_t result = qword_1EA2E30B8;
  if (!qword_1EA2E30B8)
  {
    type metadata accessor for DiagnosticTestReportFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E30B8);
  }
  return result;
}

uint64_t method lookup function for DiagnosticTestReportFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DiagnosticTestReportFormatter);
}

uint64_t dispatch thunk of DiagnosticTestReportFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of DiagnosticTestReportFormatter.displayItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

id sub_1C23FF418(void *a1)
{
  id v1 = objc_msgSend(a1, sel_primaryConcept);
  id v2 = objc_msgSend(v1, sel_localizedPreferredName);

  if (v2)
  {
    uint64_t v3 = sub_1C254F470();
    unint64_t v5 = v4;

    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v6)
    {
      id v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v7 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      uint64_t v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v8, 0xE000000000000000);

      objc_super v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v9);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1C23FF638(void *a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C224F52C();
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(a1, sel_issueDate, 0xE000000000000000);
  id v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  id v11 = sub_1C23898E0(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id CoverageIdentifierFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  id v6 = &v5[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_displayValue];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  id v7 = &v5[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_identifierTitle];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0xE000000000000000;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context] = a2;
  v9.receiver = v5;
  v9.super_class = v2;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1C23FF82C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = &v5[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_displayValue];
  *(void *)uint64_t v10 = a2;
  *((void *)v10 + 1) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v11 = &v5[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_identifierTitle];
  *(void *)id v11 = a4;
  *((void *)v11 + 1) = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v26) {
      goto LABEL_3;
    }
LABEL_12:
    unint64_t v27 = v5;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C24001B8(a1, (uint64_t)v27);

    swift_bridgeObjectRelease();
    return v24;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_12;
  }
LABEL_3:
  if (!a3) {
    goto LABEL_12;
  }
  uint64_t v12 = *((void *)v10 + 1);
  if (v12)
  {
    uint64_t v13 = *(void *)v10;
    swift_bridgeObjectRetain();
    id v14 = sub_1C226BFC0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v16 = v14[2];
    unint64_t v15 = v14[3];
    if (v16 >= v15 >> 1) {
      id v14 = sub_1C226BFC0((void *)(v15 > 1), v16 + 1, 1, v14);
    }
    void v14[2] = v16 + 1;
    BOOL v17 = &v14[2 * v16];
    _OWORD v17[4] = v13;
    v17[5] = v12;
  }
  else
  {
    id v14 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v18 = sub_1C224F52C();
  MEMORY[0x1F4188790](v18);
  void v29[2] = v5;
  uint64_t v19 = Array<A>.newlineJoined.getter((uint64_t)v14);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1C2389A3C(v19, v21, v18, sub_1C24003DC, v29);
  if (!v22) {
    goto LABEL_12;
  }
  uint64_t v23 = v22;
  sub_1C24003E0(0, &qword_1EA2DF640, (uint64_t (*)(uint64_t))sub_1C2270C24, MEMORY[0x1E4FBBE00]);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C255CD90;
  sub_1C21ACA3C();
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C255CEB0;
  *(void *)(v25 + 32) = v23;
  uint64_t v30 = v25;
  sub_1C254F730();
  *(void *)(v24 + 32) = v30;
  return v24;
}

uint64_t sub_1C23FFAD0(unint64_t a1)
{
  id v3 = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C2400444(a1, (uint64_t)v3);

  swift_bridgeObjectRelease();
  return v4;
}

id CoverageIdentifierFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_store);
}

uint64_t CoverageIdentifierFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context);
}

id CoverageIdentifierFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  id v3 = &v2[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_displayValue];
  *(void *)id v3 = 0;
  *((void *)v3 + 1) = 0;
  uint64_t v4 = &v2[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_identifierTitle];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0xE000000000000000;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context] = a2;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for CoverageIdentifierFormatter();
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t sub_1C23FFBC8(void *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context) >= 2uLL)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C2400110(a1);
  }
  return result;
}

id CoverageIdentifierFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void CoverageIdentifierFormatter.init()()
{
}

id CoverageIdentifierFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoverageIdentifierFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C23FFD58()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_store);
}

uint64_t sub_1C23FFD6C()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context);
}

id sub_1C23FFD80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  objc_super v6 = (objc_class *)type metadata accessor for CoverageIdentifierFormatter();
  id v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = &v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_displayValue];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  objc_super v9 = &v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_identifierTitle];
  *(void *)objc_super v9 = 0;
  *((void *)v9 + 1) = 0xE000000000000000;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context] = a2;
  v11.receiver = v7;
  v11.super_class = v6;
  id result = objc_msgSendSuper2(&v11, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1C23FFE18(void *a1)
{
  if (*(void *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context) < 2uLL) {
    return sub_1C2400110(a1);
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t sub_1C23FFE7C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_displayValue + 8);
  if (!v4)
  {
    objc_super v6 = (void *)MEMORY[0x1E4FBC860];
    if (!a1) {
      goto LABEL_23;
    }
LABEL_7:
    id v10 = objc_msgSend(a1, sel_type);
    if (!v10) {
      goto LABEL_23;
    }
    objc_super v11 = v10;
    id v12 = objc_msgSend(a1, sel_value);
    if (!v12)
    {
LABEL_22:

      goto LABEL_23;
    }
    uint64_t v13 = v12;
    sub_1C254F470();

    id v14 = v11;
    id v15 = objc_msgSend(v14, sel_localizedPreferredName);
    if (v15)
    {
      unint64_t v16 = v15;
      uint64_t v17 = sub_1C254F470();
      unint64_t v19 = v18;

      if ((v19 & 0x2000000000000000) != 0) {
        uint64_t v20 = HIBYTE(v19) & 0xF;
      }
      else {
        uint64_t v20 = v17 & 0xFFFFFFFFFFFFLL;
      }

      if (v20) {
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
    }
    uint64_t v17 = 0;
    unint64_t v19 = 0xE000000000000000;
LABEL_17:
    v30[4] = v17;
    void v30[5] = v19;
    sub_1C254F5A0();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    unint64_t v21 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      objc_super v6 = sub_1C226BFC0(0, v6[2] + 1, 1, v6);
    }
    unint64_t v23 = v6[2];
    unint64_t v22 = v6[3];
    if (v23 >= v22 >> 1) {
      objc_super v6 = sub_1C226BFC0((void *)(v22 > 1), v23 + 1, 1, v6);
    }
    _OWORD v6[2] = v23 + 1;
    uint64_t v24 = &v6[2 * v23];
    v24[4] = v17;
    v24[5] = v21;
    goto LABEL_22;
  }
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_displayValue);
  swift_bridgeObjectRetain();
  objc_super v6 = sub_1C226BFC0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v8 = v6[2];
  unint64_t v7 = v6[3];
  if (v8 >= v7 >> 1) {
    objc_super v6 = sub_1C226BFC0((void *)(v7 > 1), v8 + 1, 1, v6);
  }
  _OWORD v6[2] = v8 + 1;
  objc_super v9 = &v6[2 * v8];
  v9[4] = v5;
  v9[5] = v4;
  if (a1) {
    goto LABEL_7;
  }
LABEL_23:
  unint64_t v25 = sub_1C224F52C();
  MEMORY[0x1F4188790](v25);
  void v30[2] = v2;
  uint64_t v26 = Array<A>.newlineJoined.getter((uint64_t)v6);
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  return sub_1C2389A3C(v26, v28, v25, sub_1C24003DC, v30);
}

uint64_t sub_1C2400110(void *a1)
{
  uint64_t v1 = (void *)sub_1C23FFE7C(a1);
  uint64_t v2 = v1;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    id v4 = v1;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
    uint64_t v3 = v6;
  }

  return v3;
}

uint64_t sub_1C24001B8(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
    if (!v3) {
      return v4;
    }
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1C2274CD0(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v4 = v20;
    unint64_t v16 = v2 & 0xC000000000000001;
    unint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context);
    unint64_t v17 = v2;
    while (v3 != v5)
    {
      if (v16) {
        id v7 = (id)MEMORY[0x1C87588E0](v5, v2);
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      unint64_t v8 = v7;
      if (v6 > 1) {
        goto LABEL_22;
      }
      objc_super v9 = (void *)sub_1C23FFE7C(v7);
      id v10 = v9;
      uint64_t v11 = MEMORY[0x1E4FBC860];
      uint64_t v19 = MEMORY[0x1E4FBC860];
      if (v9)
      {
        id v12 = v9;
        MEMORY[0x1C8757C00]();
        if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();
        uint64_t v11 = v19;
      }

      unint64_t v14 = *(void *)(v20 + 16);
      unint64_t v13 = *(void *)(v20 + 24);
      if (v14 >= v13 >> 1) {
        sub_1C2274CD0(v13 > 1, v14 + 1, 1);
      }
      ++v5;
      *(void *)(v20 + 16) = v14 + 1;
      *(void *)(v20 + 8 * v14 + 32) = v11;
      unint64_t v2 = v17;
      if (v3 == v5) {
        return v4;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_22:
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

void sub_1C24003E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2400444(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
LABEL_17:
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C2550620();
  if (!v4) {
    goto LABEL_18;
  }
LABEL_3:
  unint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_context);
  for (uint64_t i = 4; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x1C87588E0](i - 4, a1);
    }
    else {
      id v8 = *(id *)(a1 + 8 * i);
    }
    uint64_t v9 = v8;
    uint64_t v10 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    if (v5 > 1) {
      break;
    }
    uint64_t v11 = (void *)sub_1C23FFE7C(v8);
    id v12 = v11;
    if (v11)
    {
      id v13 = v11;
      MEMORY[0x1C8757C00]();
      if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
      unint64_t v7 = v3;
      unint64_t v3 = MEMORY[0x1E4FBC860];
    }
    else
    {
      unint64_t v7 = v3;
    }

    sub_1C22723E8(v7);
    if (v10 == v4)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CoverageIdentifierFormatter()
{
  return self;
}

unint64_t sub_1C240065C(uint64_t a1)
{
  unint64_t result = sub_1C2400684();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C2400684()
{
  unint64_t result = qword_1EA2E30E0;
  if (!qword_1EA2E30E0)
  {
    type metadata accessor for CoverageIdentifierFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E30E0);
  }
  return result;
}

uint64_t method lookup function for CoverageIdentifierFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CoverageIdentifierFormatter);
}

uint64_t dispatch thunk of CoverageIdentifierFormatter.structuredItems(from:displayValue:identifierTitle:country:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of CoverageIdentifierFormatter.displayItems(from:country:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CoverageIdentifierFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1C24007A0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC15HealthRecordsUI27CoverageIdentifierFormatter_identifierTitle);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t *sub_1C24007E0@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_1C24007F8(void *a1@<X8>)
{
  *a1 = &unk_1F1D8EBD0;
}

id sub_1C24008AC()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for YearRangePickerViewController();
  objc_msgSendSuper2(&v10, sel_viewDidLoad);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v2 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v2, 0xE000000000000000);

  id result = objc_msgSend(v0, sel_tableView);
  if (result)
  {
    uint64_t v4 = result;
    sub_1C2401D34();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    unint64_t v6 = (void *)sub_1C254F430();
    objc_msgSend(v4, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v6);

    id result = objc_msgSend(v0, sel_tableView);
    if (result)
    {
      unint64_t v7 = result;
      type metadata accessor for YearRangePickerCell();
      uint64_t v8 = swift_getObjCClassFromMetadata();
      uint64_t v9 = (void *)sub_1C254F430();
      objc_msgSend(v7, sel_registerClass_forCellReuseIdentifier_, v8, v9);

      *(void *)(*(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_dataSource]
                + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_delegate
                + 8) = &off_1F1D99CA8;
      return (id)swift_unknownObjectWeakAssign();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

char *sub_1C2400B3C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1C254CD60();
  switch(v5)
  {
    case 2:
      uint64_t v8 = (void *)sub_1C254F430();
      uint64_t v9 = (void *)sub_1C254CD30();
      id v10 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v8, v9);

      type metadata accessor for YearRangePickerCell();
      uint64_t v11 = (char *)swift_dynamicCastClassUnconditional();
      *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_dataSource] = *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_dataSource);
      swift_retain_n();
      swift_release();
      sub_1C23F5314();
      swift_release();
      *(_OWORD *)&v11[OBJC_IVAR____TtC15HealthRecordsUI19YearRangePickerCell_baseAccessibilityIdentifier] = xmmword_1C255D0F0;
      swift_bridgeObjectRelease();
      sub_1C23F54F4();
      break;
    case 1:
      int v7 = 0;
      int v6 = 1;
LABEL_7:
      id v12 = (void *)sub_1C254F430();
      id v13 = (void *)sub_1C254CD30();
      uint64_t v11 = (char *)objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v12, v13);

      id v14 = objc_msgSend(v11, sel_textLabel);
      if (v14)
      {
        id v15 = v14;
        id v16 = objc_msgSend(self, sel_labelColor);
        objc_msgSend(v15, sel_setTextColor_, v16);
      }
      unint64_t v17 = (unsigned char *)OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_selectedRow;
      if (*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_selectedRow) == v6) {
        uint64_t v18 = 3;
      }
      else {
        uint64_t v18 = 0;
      }
      objc_msgSend(v11, sel_setAccessoryType_, v18);
      id v19 = objc_msgSend(v11, sel_textLabel);
      uint64_t v2 = v19;
      if (v7)
      {
        if (v19)
        {
          if (qword_1EBB6EF40 != -1) {
            swift_once();
          }
          id v20 = (id)qword_1EBB6FBC8;
          swift_bridgeObjectRetain();
          sub_1C254C730();
          swift_bridgeObjectRelease();

          unint64_t v21 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
          objc_msgSend(v2, sel_setText_, v21, 0xE000000000000000);
        }
        unint64_t v22 = (void *)sub_1C254F700();
        unint64_t v23 = (void *)HKUIJoinStringsForAutomationIdentifier();
LABEL_28:
        id v26 = v23;

        objc_msgSend(v11, sel_setAccessibilityIdentifier_, v26);
        return v11;
      }
LABEL_20:
      if (v2)
      {
        if (v17[v3] == 1)
        {
          swift_retain();
          sub_1C2401728();
          swift_release();
        }
        else
        {
          if (qword_1EBB6EF40 != -1) {
            swift_once();
          }
          id v24 = (id)qword_1EBB6FBC8;
          swift_bridgeObjectRetain();
          unint64_t v28 = 0xE000000000000000;
          sub_1C254C730();
          swift_bridgeObjectRelease();
        }
        unint64_t v25 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        objc_msgSend(v2, sel_setText_, v25);
      }
      objc_msgSend(v11, sel_setSeparatorInset_, 0.0, 0.0, 0.0, 1.79769313e308, v28);
      unint64_t v22 = (void *)sub_1C254F700();
      unint64_t v23 = (void *)HKUIJoinStringsForAutomationIdentifier();
      goto LABEL_28;
    case 0:
      int v6 = 0;
      int v7 = 1;
      goto LABEL_7;
    default:
      unint64_t v17 = (unsigned char *)sub_1C254F430();
      uint64_t v11 = (char *)(id)HKErrorTableViewCell();

      if (!v11)
      {
        __break(1u);
        goto LABEL_20;
      }
      break;
  }
  return v11;
}

id sub_1C2401160(void *a1)
{
  uint64_t v2 = v1;
  id result = (id)sub_1C254CD60();
  if (result == (id)1)
  {
    uint64_t v8 = (void *)sub_1C254CD30();
    objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v8, 1);

    *(unsigned char *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_selectedRow) = 1;
    uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_dataSource);
    uint64_t v10 = *(void *)(v9 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear);
    uint64_t v11 = *(void *)(v9 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear);
    if (MEMORY[0x1C875A200](v2 + OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_delegate))
    {
      sub_1C233D99C(v10, v11, 0, 1);
      goto LABEL_7;
    }
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v5 = (void *)sub_1C254CD30();
    objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v5, 1);

    *(unsigned char *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_selectedRow) = 0;
    uint64_t v6 = MEMORY[0x1C875A200](v2 + OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_delegate);
    if (v6)
    {
      uint64_t v7 = *(void *)(v6 + OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource);
      *(void *)(v7 + 16) = 0;
      *(void *)(v7 + 24) = 0;
      *(_WORD *)(v7 + 32) = 1;
      sub_1C233B114();
LABEL_7:
      swift_unknownObjectRelease();
    }
  }
  return objc_msgSend(a1, sel_reloadData);
}

id sub_1C2401504()
{
  id result = objc_msgSend(v0, sel_tableView);
  if (result)
  {
    uint64_t v2 = result;
    objc_msgSend(result, sel_reloadData);

    uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_dataSource];
    uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear);
    uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear);
    id result = (id)MEMORY[0x1C875A200](&v0[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_delegate]);
    if (result)
    {
      sub_1C233D99C(v4, v5, 0, v0[OBJC_IVAR____TtC15HealthRecordsUI29YearRangePickerViewController_selectedRow]);
      return (id)swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1C2401670()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for YearRangePickerViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for YearRangePickerViewController()
{
  return self;
}

uint64_t sub_1C2401728()
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v16 - v2;
  uint64_t v4 = sub_1C254CBD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C255CDA0;
  uint64_t v6 = sub_1C2391FCC(*(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear));
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1C220D950();
  *(void *)(v5 + 64) = v10;
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v8;
  uint64_t v11 = sub_1C2391FCC(*(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear));
  *(void *)(v5 + 96) = v9;
  *(void *)(v5 + 104) = v10;
  *(void *)(v5 + 72) = v11;
  *(void *)(v5 + 80) = v12;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v13 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v14 = sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v3);
  return v14;
}

uint64_t sub_1C2401994()
{
  sub_1C221810C(v0 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_configuration);
  swift_bridgeObjectRelease();
  sub_1C2201FD8(v0 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_delegate);
  return swift_deallocClassInstance();
}

uint64_t sub_1C2401A18()
{
  return type metadata accessor for YearRangePickerDataSource();
}

uint64_t type metadata accessor for YearRangePickerDataSource()
{
  uint64_t result = qword_1EA2E3108;
  if (!qword_1EA2E3108) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2401A6C()
{
  uint64_t result = _s13ConfigurationVMa();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for YearRangeRow(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2401BF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for YearRangeRow()
{
  return &type metadata for YearRangeRow;
}

unint64_t sub_1C2401C2C()
{
  unint64_t result = qword_1EA2E3118;
  if (!qword_1EA2E3118)
  {
    sub_1C2401C84();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3118);
  }
  return result;
}

void sub_1C2401C84()
{
  if (!qword_1EA2E3120)
  {
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3120);
    }
  }
}

unint64_t sub_1C2401CE0()
{
  unint64_t result = qword_1EA2E3128;
  if (!qword_1EA2E3128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3128);
  }
  return result;
}

unint64_t sub_1C2401D34()
{
  unint64_t result = qword_1EA2E13C8;
  if (!qword_1EA2E13C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E13C8);
  }
  return result;
}

uint64_t sub_1C2401D74(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1C2401D8C(a1, a2, a3);
}

uint64_t sub_1C2401D8C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + 24;
  swift_beginAccess();
  a1(v4);
  return swift_endAccess();
}

void sub_1C2401E04(void *a1, double a2)
{
  uint64_t v5 = sub_1C254F1C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v21 = a1;
  double v20 = a2;
  uint64_t v9 = *v2;
  unint64_t v17 = &v20;
  uint64_t v18 = &v21;
  unint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C24055AC(0, &qword_1EBB6EED8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255CD90;
  sub_1C254F1B0();
  uint64_t v19 = v11;
  sub_1C222CE4C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C24055AC(0, (unint64_t *)&qword_1EBB6FF30, v10, MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  id v13 = sub_1C2405FE8;
  uint64_t v14 = &v16;
  uint64_t v15 = v9;
  sub_1C254FC80();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C2402060(void *a1, double a2)
{
  uint64_t v5 = sub_1C254F1C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v21 = a1;
  double v20 = a2;
  uint64_t v9 = *v2;
  unint64_t v17 = &v20;
  uint64_t v18 = &v21;
  unint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C24055AC(0, &qword_1EBB6EED8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255CD90;
  sub_1C254F1B0();
  uint64_t v19 = v11;
  sub_1C222CE4C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C24055AC(0, (unint64_t *)&qword_1EBB6FF30, v10, MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  id v13 = sub_1C2405F88;
  uint64_t v14 = &v16;
  uint64_t v15 = v9;
  sub_1C254FC80();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C24022BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1C254F1C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23[0] = a2;
  v23[1] = a3;
  uint64_t v11 = *v3;
  double v20 = v23;
  uint64_t v21 = a1;
  uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C24055AC(0, &qword_1EBB6EED8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C255CD90;
  sub_1C254F1B0();
  uint64_t v22 = v13;
  sub_1C222CE4C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C24055AC(0, (unint64_t *)&qword_1EBB6FF30, v12, MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  char v16 = sub_1C2405F80;
  unint64_t v17 = &v19;
  uint64_t v18 = v11;
  sub_1C254FC80();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  swift_bridgeObjectRelease();
  return sub_1C222D460(a1, (uint64_t)&qword_1EA2DEB60, (uint64_t)sub_1C222D3E4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C24055AC);
}

void *sub_1C2402560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v20 = sub_1C254F1C0();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2405DB4(a1, (uint64_t)v30, (unint64_t *)&qword_1EBB6E820);
  v28[0] = a2;
  v28[1] = a3;
  void v28[2] = a4;
  char v29 = a5 & 1;
  uint64_t v14 = *v5;
  unint64_t v25 = v28;
  id v26 = v30;
  uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C24055AC(0, &qword_1EBB6EED8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C255CD90;
  sub_1C254F1B0();
  uint64_t v27 = v16;
  sub_1C222CE4C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C24055AC(0, (unint64_t *)&qword_1EBB6FF30, v15, MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  uint64_t v17 = v20;
  sub_1C2550200();
  uint64_t v21 = sub_1C2406E78;
  uint64_t v22 = &v24;
  uint64_t v23 = v14;
  sub_1C254FC80();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
  return sub_1C2224A88(v30[0], (uint64_t)v30[1], (uint64_t)v30[2], (uint64_t)v30[3], (uint64_t)v30[4]);
}

uint64_t sub_1C2402804(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C254F1C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *v2;
  uint64_t v18 = a2;
  uint64_t v19 = a1;
  unint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C24055AC(0, &qword_1EBB6EED8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255CD90;
  sub_1C254F1B0();
  uint64_t v20 = v11;
  sub_1C222CE4C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C24055AC(0, (unint64_t *)&qword_1EBB6FF30, v10, MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  uint64_t v14 = sub_1C2406D94;
  uint64_t v15 = &v17;
  uint64_t v16 = v9;
  sub_1C254FC80();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1C222D57C(a2, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  return sub_1C222D460(a1, (uint64_t)&qword_1EBB6E950, (uint64_t)&qword_1EBB6E948, (uint64_t)&type metadata for BrowseIcon, (uint64_t (*)(void))sub_1C222D4C0);
}

void sub_1C2402A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v19 = sub_1C254F1C0();
  uint64_t v11 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2405DB4(a1, (uint64_t)v29, &qword_1EA2DEB58);
  v27[0] = a2;
  v27[1] = a3;
  v27[2] = a4;
  char v28 = a5 & 1;
  uint64_t v14 = *v5;
  char v24 = v27;
  unint64_t v25 = v29;
  uint64_t v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C24055AC(0, &qword_1EBB6EED8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C255CD90;
  sub_1C254F1B0();
  uint64_t v26 = v16;
  sub_1C222CE4C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C24055AC(0, (unint64_t *)&qword_1EBB6FF30, v15, MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  uint64_t v17 = v19;
  sub_1C2550200();
  uint64_t v20 = sub_1C2405E20;
  uint64_t v21 = &v23;
  uint64_t v22 = v14;
  sub_1C254FC80();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v17);
}

uint64_t sub_1C2402D34(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C254F1C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *v2;
  uint64_t v19 = a2;
  uint64_t v20 = a1;
  unint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C24055AC(0, &qword_1EBB6EED8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255CD90;
  sub_1C254F1B0();
  uint64_t v21 = v11;
  sub_1C222CE4C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C24055AC(0, (unint64_t *)&qword_1EBB6FF30, v10, MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  uint64_t v15 = sub_1C2405D94;
  uint64_t v16 = &v18;
  uint64_t v17 = v9;
  sub_1C254FC80();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a2, v12);
  return sub_1C222D460(a1, (uint64_t)&unk_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
}

void *sub_1C2402FE8(uint64_t a1, double a2)
{
  if (!*(void *)(a1 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_1C2457390(a2);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void **)(*(void *)(a1 + 56) + 8 * v3);
  id v6 = v5;
  return v5;
}

double sub_1C2403030@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v6 = sub_1C21A6470(a2, a3), (v7 & 1) != 0))
  {
    sub_1C2406D9C(*(void *)(a1 + 56) + 72 * v6, a4, (uint64_t (*)(void))sub_1C222D3E4);
  }
  else
  {
    *(void *)(a4 + 64) = 0;
    double result = 0.0;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

double sub_1C24030A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v8 = sub_1C24576B4(a2, a3, a4, a5 & 1), (v9 & 1) != 0))
  {
    uint64_t v10 = *(void *)(a1 + 56) + 48 * v8;
    uint64_t v11 = *(void *)(v10 + 24);
    char v12 = *(unsigned char *)(v10 + 32);
    uint64_t v13 = *(void **)(v10 + 40);
    *(unsigned char *)a6 = *(unsigned char *)v10;
    *(_OWORD *)(a6 + 8) = *(_OWORD *)(v10 + 8);
    *(void *)(a6 + 24) = v11;
    *(unsigned char *)(a6 + 32) = v12;
    *(void *)(a6 + 40) = v13;
    id v14 = v13;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)(a6 + 16) = 0u;
    *(_OWORD *)(a6 + 32) = 0u;
    *(_OWORD *)a6 = 0u;
  }
  return result;
}

double sub_1C240314C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C2403174(a1, a2, (uint64_t (*)(uint64_t))sub_1C2457874, (unint64_t *)&qword_1EBB6E948, a3);
}

double sub_1C2403174@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  if (*(void *)(a1 + 16) && (uint64_t v8 = a3(a2), (v9 & 1) != 0))
  {
    sub_1C2405CBC(*(void *)(a1 + 56) + 72 * v8, a5, a4);
  }
  else
  {
    *(void *)(a5 + 64) = 0;
    double result = 0.0;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  return result;
}

double sub_1C24031F0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void *a6@<X8>)
{
  if (*(void *)(a1 + 16) && (unint64_t v8 = sub_1C24576B4(a2, a3, a4, a5 & 1), (v9 & 1) != 0))
  {
    uint64_t v10 = *(void *)(a1 + 56) + 48 * v8;
    uint64_t v11 = *(void **)v10;
    char v12 = *(void **)(v10 + 8);
    uint64_t v13 = *(void *)(v10 + 16);
    uint64_t v14 = *(void *)(v10 + 24);
    uint64_t v15 = *(void *)(v10 + 32);
    uint64_t v16 = *(void **)(v10 + 40);
    *a6 = *(void *)v10;
    a6[1] = v12;
    a6[2] = v13;
    a6[3] = v14;
    a6[4] = v15;
    a6[5] = v16;
    sub_1C2207BC8(v11, v12, v13, v14, v15, v16);
  }
  else
  {
    *(_OWORD *)a6 = 0u;
    *((_OWORD *)a6 + 1) = 0u;
    *(void *)&double result = 0x1FFFFFFFELL;
    *((_OWORD *)a6 + 2) = xmmword_1C2567C10;
  }
  return result;
}

unint64_t sub_1C240328C(uint64_t *a1, void *a2, void (*a3)(id, uint64_t, double), void (*a4)(void), void (*a5)(unint64_t, uint64_t), double a6)
{
  if (a2)
  {
    id v9 = a2;
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *a1;
    *a1 = 0x8000000000000000;
    a3(v9, isUniquelyReferenced_nonNull_native, a6);
    *a1 = v19;
  }
  else
  {
    unint64_t result = sub_1C2457390(a6);
    if ((v14 & 1) == 0) {
      return result;
    }
    unint64_t v15 = result;
    char v16 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *a1;
    uint64_t v20 = *a1;
    *a1 = 0x8000000000000000;
    if ((v16 & 1) == 0)
    {
      a4();
      uint64_t v17 = v20;
    }
    char v18 = *(void **)(*(void *)(v17 + 56) + 8 * v15);
    a5(v15, v17);
    *a1 = v17;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2403398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v5 - 8);
  char v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C2406D9C(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  sub_1C2406E04(a3, (uint64_t)v10, (uint64_t)&qword_1EBB6E950, (uint64_t)&qword_1EBB6E948, (uint64_t)&type metadata for BrowseIcon, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C222D4C0);
  return sub_1C222A4A8((uint64_t)v10, (uint64_t)v7);
}

uint64_t sub_1C240347C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C254CB40();
  MEMORY[0x1F4188790](v5);
  char v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, uint64_t))(v8 + 16))(v7, a2);
  sub_1C2406E04(a3, (uint64_t)v11, (uint64_t)&unk_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C222D4C0);
  return sub_1C222A780((uint64_t)v11, (uint64_t)v7);
}

uint64_t static AccountIconProvider.shared.getter()
{
  if (qword_1EBB6D898 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_1C24035E8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v5 = sub_1C254CB40();
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v20 = v5;
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v22 = v2;
  uint64_t v23 = v8;
  uint64_t v9 = *((void *)a1 + 1);
  uint64_t v10 = *((void *)a1 + 2);
  uint64_t v11 = *((void *)a1 + 3);
  uint64_t v12 = a1[32];
  uint64_t v13 = (void *)*((void *)a1 + 5);
  uint64_t v14 = *v2;
  uint64_t v21 = a2;
  v27[2] = a2;
  char v24 = sub_1C240701C;
  unint64_t v25 = v27;
  uint64_t v26 = v14;
  sub_1C222D4C0(0, &qword_1EA2DEB50, (unint64_t *)&qword_1EBB6E958);
  sub_1C254FC90();
  if ((void)v28)
  {
    v33[2] = v30;
    v33[3] = v31;
    uint64_t v34 = v32;
    v33[0] = v28;
    v33[1] = v29;
    *(void *)&long long v28 = v23;
    *((void *)&v28 + 1) = v9;
    *(void *)&long long v29 = v10;
    *((void *)&v29 + 1) = v11;
    *(void *)&long long v30 = v12;
    *((void *)&v30 + 1) = v13;
    id v15 = v13;
    sub_1C2402A98((uint64_t)&v28, v9, v10, v11, v12);
  }
  else
  {
    sub_1C222D460((uint64_t)&v28, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
    sub_1C23BB690((uint64_t *)v33);
    v35[0] = v23;
    v35[1] = v9;
    v35[2] = v10;
    v35[3] = v11;
    void v35[4] = v12;
    v35[5] = v13;
    id v16 = v13;
    sub_1C2402A98((uint64_t)v35, v9, v10, v11, v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v7, v21, v20);
    sub_1C2405CBC((uint64_t)v33, (uint64_t)&v28, (unint64_t *)&qword_1EBB6E958);
    sub_1C2402D34((uint64_t)&v28, (uint64_t)v7);
  }
  return sub_1C2405D28((uint64_t)v33);
}

uint64_t sub_1C2403850()
{
  if (qword_1EBB6D8A8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EBB6D888;
  id v1 = (id)qword_1EBB6D860;
  if (v0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1EBB6E970;
  type metadata accessor for AccountIconProvider();
  unint64_t v3 = (void *)swift_allocObject();
  swift_retain();
  uint64_t result = sub_1C23BAD28(v3 + 4);
  v3[2] = v2;
  v3[3] = v1;
  qword_1EBB6EB60 = (uint64_t)v3;
  return result;
}

void *AccountIconProvider.__allocating_init(brandImageManager:monogramProvider:)(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)swift_allocObject();
  sub_1C23BAD28(v4 + 4);
  v4[2] = a2;
  v4[3] = a1;
  return v4;
}

void *AccountIconProvider.init(brandImageManager:monogramProvider:)(uint64_t a1, uint64_t a2)
{
  sub_1C23BAD28(v2 + 4);
  v2[2] = a2;
  v2[3] = a1;
  return v2;
}

void sub_1C24039AC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  double v7 = *(double *)a3;
  int v8 = *(unsigned __int8 *)(a3 + 24);
  *(void *)&long long v22 = *(void *)(a3 + 16);
  *((void *)&v22 + 1) = *(void *)(a3 + 8);
  uint64_t v9 = v22 | *((void *)&v22 + 1) | *(void *)a3;
  double v10 = 36.0;
  double v11 = 45.0;
  BOOL v12 = v22 == 0 && *(void *)&v7 == 2;
  double v13 = 80.0;
  if (v12) {
    double v13 = 60.0;
  }
  if (*(void *)&v7 != 1 || v22 != 0) {
    double v11 = v13;
  }
  if (v9) {
    double v10 = v11;
  }
  if (v8 == 1) {
    double v15 = v10;
  }
  else {
    double v15 = *(double *)a3;
  }
  swift_beginAccess();
  swift_beginAccess();
  swift_retain();
  id v16 = sub_1C2538408(a1, a2, v15);
  swift_endAccess();
  swift_endAccess();
  swift_release();
  if (!v8)
  {
    double v19 = v7;
LABEL_23:
    uint64_t v17 = *((void *)&v22 + 1);
    uint64_t v18 = v22;
    goto LABEL_24;
  }
  if (!v9)
  {
    double v19 = 36.0;
    goto LABEL_23;
  }
  uint64_t v17 = *((void *)&v22 + 1);
  uint64_t v18 = v22;
  if (*(void *)&v7 == 1 && v22 == 0)
  {
    double v19 = 45.0;
  }
  else
  {
    BOOL v21 = v22 == 0 && *(void *)&v7 == 2;
    double v19 = 80.0;
    if (v21) {
      double v19 = 60.0;
    }
  }
LABEL_24:
  id v20 = objc_msgSend(v16, sel_scaledToTargetSize_, v19, v19, v22);

  *(unsigned char *)a4 = 1;
  *(double *)(a4 + 8) = v7;
  *(void *)(a4 + 16) = v17;
  *(void *)(a4 + 24) = v18;
  *(unsigned char *)(a4 + 32) = v8;
  *(void *)(a4 + 40) = v20;
}

void sub_1C2403B70(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  char v21 = *((unsigned char *)a2 + 24);
  swift_beginAccess();
  sub_1C2406D9C(v4 + 32, (uint64_t)&aBlock, (uint64_t (*)(void))sub_1C222CCAC);
  sub_1C222D4C0(0, &qword_1EA2DEB50, (unint64_t *)&qword_1EBB6E958);
  sub_1C254FC90();
  uint64_t v11 = sub_1C222D57C((uint64_t)&aBlock, (uint64_t (*)(void))sub_1C222CCAC);
  uint64_t v20 = v9;
  if (v28[0])
  {
    MEMORY[0x1F4188790](v11);
    MEMORY[0x1F4188790](v12);
    sub_1C22C67A8(0, &qword_1EA2DEB58);
    sub_1C254FC90();
    sub_1C222D460((uint64_t)v28, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
    if (v27)
    {
      uint64_t aBlock = v22 & 1;
      uint64_t v30 = v23;
      long long v31 = v24;
      uint64_t v32 = v25;
      uint64_t v33 = (void (*)(void *, void *))(v26 & 1);
      uint64_t v34 = (uint64_t)v27;
      char v35 = 0;
      id v13 = v27;
      a3(&aBlock);

      return;
    }
  }
  else
  {
    sub_1C222D460((uint64_t)v28, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
  }
  id v14 = objc_msgSend(*(id *)(v4 + 24), sel_healthRecordsStore);
  id v15 = objc_msgSend(v14, sel_healthStore);

  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67710]), sel_initWithHealthStore_, v15);
  uint64_t v17 = (void *)sub_1C254CB00();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a3;
  *(void *)(v18 + 24) = a4;
  *(void *)(v18 + 32) = v5;
  *(void *)(v18 + 40) = v8;
  *(void *)(v18 + 48) = v20;
  *(void *)(v18 + 56) = v10;
  *(unsigned char *)(v18 + 64) = v21;
  uint64_t v33 = sub_1C24054B8;
  uint64_t v34 = v18;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v30 = 1107296256;
  long long v31 = sub_1C23447F8;
  uint64_t v32 = &block_descriptor_52;
  double v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v16, sel_fetchAccountWithIdentifier_completion_, v17, v19);
  _Block_release(v19);
}

void sub_1C2403F60(void *a1, void *a2, void (*a3)(double *), uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, char a9)
{
  sub_1C2405F2C();
  uint64_t v16 = swift_allocError();
  uint64_t v17 = (void *)v16;
  if (a2)
  {
    id v18 = a2;

LABEL_3:
    char v21 = a2;
    long long v22 = 0u;
    long long v23 = 0u;
    uint64_t v24 = 0;
    char v25 = 1;
    a3((double *)&v21);
    sub_1C21A8180(a2);
    return;
  }
  if (!a1)
  {
    a2 = (void *)v16;
    goto LABEL_3;
  }
  id v19 = a1;

  char v21 = a6;
  *(void *)&long long v22 = a7;
  *((void *)&v22 + 1) = a8;
  LOBYTE(v23) = a9 & 1;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v20 = (void *)sub_1C254FC70();
  sub_1C24040A8(v19, (uint64_t)&v21, v20, a3, a4);
}

void sub_1C24040A8(void *a1, uint64_t a2, void *a3, void (*a4)(double *), uint64_t a5)
{
  uint64_t v11 = sub_1C254F1C0();
  uint64_t v79 = *(void *)(v11 - 8);
  uint64_t v80 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v76 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C254F200();
  uint64_t v77 = *(void *)(v13 - 8);
  uint64_t v78 = v13;
  MEMORY[0x1F4188790](v13);
  unint64_t v75 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C254CB40();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = *(double *)(a2 + 8);
  double v88 = *(double *)a2;
  double v89 = v19;
  uint64_t v91 = *(uint64_t (**)(uint64_t))(a2 + 16);
  int v90 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = a3;
  void v20[3] = a4;
  uint64_t v84 = a4;
  unint64_t v85 = a3;
  uint64_t v87 = v20;
  v20[4] = a5;
  id v82 = a3;
  swift_retain();
  uint64_t v86 = a5;
  swift_retain();
  id v81 = a1;
  id v21 = objc_msgSend(a1, sel_identifier);
  sub_1C254CB20();

  uint64_t v83 = v5;
  swift_beginAccess();
  sub_1C2406D9C(v5 + 32, (uint64_t)&v110, (uint64_t (*)(void))sub_1C222CCAC);
  v95[2] = v18;
  uint64_t v92 = sub_1C240701C;
  unint64_t v93 = v95;
  uint64_t v94 = v110;
  sub_1C222D4C0(0, &qword_1EA2DEB50, (unint64_t *)&qword_1EBB6E958);
  sub_1C254FC90();
  sub_1C222D57C((uint64_t)&v110, (uint64_t (*)(void))sub_1C222CCAC);
  uint64_t v22 = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v104 == 0.0)
  {
    sub_1C222D460((uint64_t)&v104, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
    long long v23 = v91;
    goto LABEL_6;
  }
  *(double *)uint64_t v96 = v88;
  *(double *)&v96[1] = v89;
  long long v23 = v91;
  v96[2] = v91;
  char v97 = v90;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  *(&v74 - 2) = (uint64_t)v96;
  MEMORY[0x1F4188790](v24);
  *(&v74 - 4) = (uint64_t)sub_1C24054C4;
  *(&v74 - 3) = v25;
  *(&v74 - 2) = v26;
  sub_1C22C67A8(0, &qword_1EA2DEB58);
  sub_1C254FC90();
  char v28 = v98;
  uint64_t v27 = v99;
  uint64_t v29 = v100;
  uint64_t v30 = v101;
  char v32 = v102;
  long long v31 = v103;
  sub_1C222D460((uint64_t)&v104, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
  if (!v31)
  {
LABEL_6:
    id v36 = v81;
    if (objc_msgSend(v81, sel_hasLogo))
    {
      id v37 = objc_msgSend(v36, sel_brand);
      if (v37)
      {
        id v38 = v37;
        id v39 = objc_msgSend(v38, sel_externalID);
        uint64_t v40 = sub_1C254F470();
        uint64_t v42 = v41;

        id v43 = objc_msgSend(v38, sel_batchID);
        uint64_t v44 = sub_1C254F470();
        uint64_t v46 = v45;

        uint64_t v47 = *(void **)(v83 + 24);
        uint64_t v110 = v40;
        uint64_t v111 = v42;
        uint64_t v112 = v44;
        uint64_t v113 = v46;
        char v48 = v90;
        unint64_t v85 = v42;
        if (v90)
        {
          double v50 = v88;
          double v49 = v89;
          unint64_t v51 = (unint64_t)v91 | *(void *)&v89;
          if ((unint64_t)v91 | *(void *)&v89 | *(void *)&v88)
          {
            double v52 = 3.0;
            if (*(void *)&v88 != 1 || v51)
            {
              if (v51) {
                BOOL v73 = 0;
              }
              else {
                BOOL v73 = *(void *)&v88 == 2;
              }
              double v53 = 80.0;
              if (v73) {
                double v53 = 60.0;
              }
            }
            else
            {
              double v53 = 45.0;
            }
          }
          else
          {
            double v52 = 2.0;
            double v53 = 36.0;
          }
        }
        else
        {
          double v50 = v88;
          double v49 = v89;
          double v53 = v88;
          double v52 = v89;
        }
        *(double *)&uint64_t v68 = v53 - v52;
        uint64_t v69 = swift_allocObject();
        *(double *)(v69 + 16) = v50;
        *(double *)(v69 + 24) = v49;
        *(void *)(v69 + 32) = v91;
        *(unsigned char *)(v69 + 40) = v48;
        *(void *)(v69 + 48) = v83;
        *(void *)(v69 + 56) = v36;
        uint64_t v70 = v87;
        *(void *)(v69 + 64) = sub_1C24054CC;
        *(void *)(v69 + 72) = v70;
        id v71 = v47;
        swift_retain();
        id v72 = v36;
        swift_retain();
        HRBrandImageManager.retrieveLogo(for:size:options:completion:)(&v110, v68, 0, 0, (uint64_t)sub_1C2405658, v69);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();

        swift_release();
        goto LABEL_20;
      }
    }
    id v54 = objc_msgSend(v36, sel_title);
    uint64_t v55 = sub_1C254F470();
    uint64_t v57 = v56;

    double v104 = v88;
    uint64_t v105 = *(void *)&v89;
    uint64_t v106 = v23;
    LOBYTE(v107) = v90;
    sub_1C24039AC(v55, v57, (uint64_t)&v104, (uint64_t)&v110);
    swift_bridgeObjectRelease();
    long long v31 = v115;
    uint64_t v110 = v110;
    uint64_t v114 = v114;
    char v116 = 0;
    if (v85)
    {
      uint64_t v58 = swift_allocObject();
      uint64_t v59 = v86;
      *(void *)(v58 + 16) = v84;
      *(void *)(v58 + 24) = v59;
      sub_1C24054D8((uint64_t)&v110, v58 + 32);
      uint64_t v108 = sub_1C24055A8;
      uint64_t v109 = v58;
      double v104 = MEMORY[0x1E4F143A8];
      uint64_t v105 = 1107296256;
      char v35 = &block_descriptor_11_1;
      goto LABEL_15;
    }
LABEL_16:
    sub_1C24054D8((uint64_t)&v110, (uint64_t)&v104);
    id v67 = v31;
    v84(&v104);
    swift_release();
    swift_release();

    return;
  }
  uint64_t v110 = v28 & 1;
  uint64_t v111 = v27;
  uint64_t v112 = v29;
  uint64_t v113 = v30;
  uint64_t v114 = v32 & 1;
  uint64_t v115 = v31;
  char v116 = 0;
  if (!v85) {
    goto LABEL_16;
  }
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = v86;
  *(void *)(v33 + 16) = v84;
  *(void *)(v33 + 24) = v34;
  sub_1C24054D8((uint64_t)&v110, v33 + 32);
  uint64_t v108 = sub_1C24055A8;
  uint64_t v109 = v33;
  double v104 = MEMORY[0x1E4F143A8];
  uint64_t v105 = 1107296256;
  char v35 = &block_descriptor_23_0;
LABEL_15:
  uint64_t v106 = sub_1C224E544;
  uint64_t v107 = v35;
  uint64_t v60 = _Block_copy(&v104);
  id v61 = v31;
  id v62 = v82;
  swift_retain();
  id v63 = v61;
  uint64_t v64 = v75;
  sub_1C254F1E0();
  uint64_t v98 = MEMORY[0x1E4FBC860];
  sub_1C222CE4C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C24055AC(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  BOOL v65 = v76;
  uint64_t v66 = v80;
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v64, v65, v60);
  _Block_release(v60);

  (*(void (**)(char *, uint64_t))(v79 + 8))(v65, v66);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v64, v78);
  swift_release();

  swift_release();
LABEL_20:
  swift_release();
}

uint64_t sub_1C2404A90(uint64_t a1, void *a2, uint64_t (*a3)(void *), uint64_t a4)
{
  uint64_t v8 = sub_1C254F1C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C254F200();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24054D8(a1, (uint64_t)v22);
  if (a2)
  {
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a3;
    *(void *)(v16 + 24) = a4;
    sub_1C24054D8((uint64_t)v22, v16 + 32);
    aBlock[4] = sub_1C24055A8;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_57;
    uint64_t v17 = _Block_copy(aBlock);
    id v18 = a2;
    swift_retain();
    sub_1C2405EF0((uint64_t)v22);
    sub_1C254F1E0();
    v20[1] = MEMORY[0x1E4FBC860];
    sub_1C222CE4C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    sub_1C24055AC(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C21FFDEC();
    sub_1C2550200();
    MEMORY[0x1C87581B0](0, v15, v11, v17);
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return swift_release();
  }
  else
  {
    sub_1C24054D8((uint64_t)v22, (uint64_t)aBlock);
    return a3(aBlock);
  }
}

void sub_1C2404DAC(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, void *a8, void (*a9)(uint64_t *), uint64_t a10)
{
  id v52 = a8;
  uint64_t v53 = a7;
  LODWORD(v51) = a6;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v48 = a3;
  uint64_t v12 = a9;
  uint64_t v13 = sub_1C254E560();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C254CB40();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v54 = (uint64_t)a1;
    id v27 = a1;
    sub_1C2206F9C();
    swift_willThrowTypedImpl();
    sub_1C254E4F0();
    id v28 = a1;
    id v29 = a1;
    uint64_t v30 = sub_1C254E550();
    os_log_type_t v31 = sub_1C254FA20();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v46 = a10;
      uint64_t v32 = swift_slowAlloc();
      uint64_t v47 = a9;
      uint64_t v33 = (uint8_t *)v32;
      uint64_t v45 = swift_slowAlloc();
      uint64_t v60 = v45;
      *(_DWORD *)uint64_t v33 = 136446210;
      uint64_t v44 = v33 + 4;
      uint64_t v54 = (uint64_t)a1;
      id v34 = a1;
      sub_1C25508F0();
      id v35 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v36 = sub_1C254F510();
      uint64_t v54 = sub_1C21AD354(v36, v37, &v60);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      sub_1C21A8180(a1);
      sub_1C21A8180(a1);
      _os_log_impl(&dword_1C21A1000, v30, v31, "Unable to load image: %{public}s", v33, 0xCu);
      uint64_t v38 = v45;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v38, -1, -1);
      id v39 = v33;
      uint64_t v12 = v47;
      MEMORY[0x1C875A0B0](v39, -1, -1);

      sub_1C21A8180(a1);
    }
    else
    {
      sub_1C21A8180(a1);
      sub_1C21A8180(a1);
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_8;
  }
  if (!a1)
  {
LABEL_8:
    id v40 = objc_msgSend(v52, sel_title);
    uint64_t v41 = sub_1C254F470();
    uint64_t v43 = v42;

    uint64_t v60 = v48;
    uint64_t v61 = v49;
    uint64_t v62 = v50;
    char v63 = v51 & 1;
    sub_1C24039AC(v41, v43, (uint64_t)&v60, (uint64_t)&v54);
    swift_bridgeObjectRelease();
    uint64_t v54 = v54;
    uint64_t v57 = v57;
    char v59 = 0;
    id v26 = v58;
    v12(&v54);

    goto LABEL_9;
  }
  uint64_t v60 = v48;
  uint64_t v61 = v49;
  uint64_t v62 = v50;
  char v63 = v51 & 1;
  sub_1C2405CB0(a1);
  AccountIcon.init(logo:size:)(a1, (uint64_t)&v60, (uint64_t)&v54);
  uint64_t v51 = v54;
  uint64_t v46 = a10;
  uint64_t v47 = a9;
  long long v21 = v55;
  uint64_t v22 = v56;
  uint64_t v23 = v57;
  id v24 = v58;
  id v25 = objc_msgSend(v52, sel_identifier);
  sub_1C254CB20();

  swift_beginAccess();
  sub_1C24035E8((unsigned __int8 *)&v54, (uint64_t)v20);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  swift_endAccess();
  uint64_t v54 = v51;
  long long v55 = v21;
  uint64_t v56 = v22;
  uint64_t v57 = v23;
  id v58 = v24;
  char v59 = 0;
  id v26 = v24;
  v47(&v54);

  sub_1C21A8180(a1);
LABEL_9:
}

uint64_t AccountIconProvider.deinit()
{
  swift_release();

  sub_1C222D57C(v0 + 32, (uint64_t (*)(void))sub_1C222CCAC);
  return v0;
}

uint64_t AccountIconProvider.__deallocating_deinit()
{
  swift_release();

  sub_1C222D57C(v0 + 32, (uint64_t (*)(void))sub_1C222CCAC);
  return swift_deallocClassInstance();
}

uint64_t sub_1C2405378(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_1C2406E04(a3, (uint64_t)v6, (uint64_t)&qword_1EA2DEB60, (uint64_t)sub_1C222D3E4, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C24055AC);
  swift_bridgeObjectRetain();
  return sub_1C222A1E0((uint64_t)v6, v3, v4);
}

double sub_1C2405418@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C24030A8(*a1, *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24), a3);
}

double sub_1C2405430@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C2403174(*a1, a2, (uint64_t (*)(uint64_t))sub_1C24573D8, (unint64_t *)&qword_1EBB6E958, a3);
}

double sub_1C2405470@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2403174(*a1, *(void *)(v2 + 16), (uint64_t (*)(uint64_t))sub_1C24573D8, (unint64_t *)&qword_1EBB6E958, a2);
}

uint64_t block_destroy_helper_47()
{
  return swift_release();
}

uint64_t sub_1C24054CC(uint64_t a1)
{
  return sub_1C2404A90(a1, *(void **)(v1 + 16), *(uint64_t (**)(void *))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C24054D8(uint64_t a1, uint64_t a2)
{
  sub_1C240553C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C240553C()
{
  if (!qword_1EA2E3130)
  {
    sub_1C2206F9C();
    unint64_t v0 = sub_1C2550A30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3130);
    }
  }
}

void sub_1C24055AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2405610()
{
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

void sub_1C2405658(void *a1, char a2)
{
  sub_1C2404DAC(a1, a2 & 1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(void *)(v2 + 48), *(void **)(v2 + 56), *(void (**)(uint64_t *))(v2 + 64), *(void *)(v2 + 72));
}

uint64_t sub_1C2405698()
{
  uint64_t v1 = *(uint64_t (**)(unsigned char *))(v0 + 16);
  sub_1C24054D8(v0 + 32, (uint64_t)v3);
  return v1(v3);
}

uint64_t type metadata accessor for AccountIconProvider()
{
  return self;
}

uint64_t method lookup function for AccountIconProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountIconProvider);
}

uint64_t dispatch thunk of AccountIconProvider.__allocating_init(brandImageManager:monogramProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of AccountIconProvider.placeholder(forTitle:size:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of AccountIconProvider.fetchIcon(forAccount:size:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of AccountIconProvider.fetchIcon(for:size:queue:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t sub_1C24057A0(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t *a4, uint64_t a5, void (*a6)(unsigned char *), uint64_t (*a7)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  uint64_t v11 = a2[2];
  uint64_t v12 = *((unsigned __int8 *)a2 + 24);
  sub_1C2405DB4(a3, (uint64_t)v14, a4);
  a6(v14);
  return a7(v14, v9, v10, v11, v12);
}

void sub_1C2405834(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v9 = swift_allocObject();
  uint64_t v22 = a4;
  *(void *)(v9 + 16) = a4;
  *(void *)(v9 + 24) = a5;
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v12 = a2[2];
  char v24 = *((unsigned char *)a2 + 24);
  swift_beginAccess();
  sub_1C2406D9C(a3 + 32, (uint64_t)&aBlock, (uint64_t (*)(void))sub_1C222CCAC);
  sub_1C222D4C0(0, &qword_1EA2DEB50, (unint64_t *)&qword_1EBB6E958);
  swift_retain();
  sub_1C254FC90();
  uint64_t v13 = sub_1C222D57C((uint64_t)&aBlock, (uint64_t (*)(void))sub_1C222CCAC);
  uint64_t v23 = v11;
  if (v31[0])
  {
    uint64_t v14 = MEMORY[0x1F4188790](v13);
    MEMORY[0x1F4188790](v14);
    sub_1C22C67A8(0, &qword_1EA2DEB58);
    sub_1C254FC90();
    sub_1C222D460((uint64_t)v31, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
    if (v30)
    {
      uint64_t aBlock = v25;
      uint64_t v33 = v26;
      id v34 = v27;
      id v35 = v28;
      uint64_t v36 = v29;
      uint64_t v37 = (uint64_t)v30;
      id v15 = v30;
      v22(&aBlock);
      swift_release();

      return;
    }
  }
  else
  {
    sub_1C222D460((uint64_t)v31, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
  }
  id v16 = objc_msgSend(*(id *)(a3 + 24), sel_healthRecordsStore, a4);
  id v17 = objc_msgSend(v16, sel_healthStore);

  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67710]), sel_initWithHealthStore_, v17);
  uint64_t v19 = (void *)sub_1C254CB00();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1C2405CA4;
  *(void *)(v20 + 24) = v9;
  *(void *)(v20 + 32) = a3;
  *(void *)(v20 + 40) = v10;
  *(void *)(v20 + 48) = v23;
  *(void *)(v20 + 56) = v12;
  *(unsigned char *)(v20 + 64) = v24;
  uint64_t v36 = sub_1C24054B8;
  uint64_t v37 = v20;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v33 = 1107296256;
  id v34 = sub_1C23447F8;
  id v35 = &block_descriptor_46;
  long long v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v18, sel_fetchAccountWithIdentifier_completion_, v19, v21);
  _Block_release(v21);
  swift_release();
}

uint64_t sub_1C2405C6C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C2405CA4(uint64_t a1)
{
  sub_1C24C2144(a1, *(void (**)(void *))(v1 + 16));
}

id sub_1C2405CB0(id a1)
{
  return a1;
}

uint64_t sub_1C2405CBC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1C222D518(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2405D28(uint64_t a1)
{
  sub_1C222D518(0, (unint64_t *)&qword_1EBB6E958);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2405D94(uint64_t a1)
{
  return sub_1C240347C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C2405D9C()
{
  return sub_1C2406ECC();
}

uint64_t sub_1C2405DB4(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1C22C67A8(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2405E20(uint64_t a1)
{
  return sub_1C24057A0(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), &qword_1EA2DEB58, (uint64_t)&type metadata for AccountIcon, (void (*)(unsigned char *))sub_1C2405E74, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C222A8FC);
}

uint64_t sub_1C2405E74(uint64_t a1)
{
  id v2 = *(id *)(a1 + 40);
  return a1;
}

uint64_t objectdestroy_7Tm()
{
  swift_release();
  sub_1C22CB1E0(*(id *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));
  return MEMORY[0x1F4186498](v0, 81, 7);
}

uint64_t sub_1C2405EF0(uint64_t a1)
{
  return a1;
}

unint64_t sub_1C2405F2C()
{
  unint64_t result = qword_1EBB6F560;
  if (!qword_1EBB6F560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F560);
  }
  return result;
}

uint64_t sub_1C2405F80(uint64_t a1)
{
  return sub_1C2405378(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C2405F88(uint64_t *a1)
{
  return sub_1C240328C(a1, **(void ***)(v1 + 24), (void (*)(id, uint64_t, double))sub_1C2365194, (void (*)(void))sub_1C24AD9CC, (void (*)(unint64_t, uint64_t))sub_1C24ABFE4, **(double **)(v1 + 16));
}

unint64_t sub_1C2405FE8(uint64_t *a1)
{
  return sub_1C240328C(a1, **(void ***)(v1 + 24), (void (*)(id, uint64_t, double))sub_1C2365008, (void (*)(void))sub_1C24AD7AC, (void (*)(unint64_t, uint64_t))sub_1C24ABFE4, **(double **)(v1 + 16));
}

void sub_1C2406048(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a4;
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v19 = a2[2];
  char v18 = *((unsigned char *)a2 + 24);
  swift_beginAccess();
  sub_1C2406D9C(a3 + 32, (uint64_t)&aBlock, (uint64_t (*)(void))sub_1C222CCAC);
  sub_1C222D4C0(0, &qword_1EA2DEB50, (unint64_t *)&qword_1EBB6E958);
  a4;
  sub_1C254FC90();
  uint64_t v10 = sub_1C222D57C((uint64_t)&aBlock, (uint64_t (*)(void))sub_1C222CCAC);
  if (!v26[0])
  {
    sub_1C222D460((uint64_t)v26, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
    goto LABEL_5;
  }
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  MEMORY[0x1F4188790](v11);
  sub_1C22C67A8(0, &qword_1EA2DEB58);
  sub_1C254FC90();
  sub_1C222D460((uint64_t)v26, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
  if (!v25)
  {
LABEL_5:
    id v13 = objc_msgSend(*(id *)(a3 + 24), sel_healthRecordsStore);
    id v14 = objc_msgSend(v13, sel_healthStore);

    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67710]), sel_initWithHealthStore_, v14);
    id v12 = (id)sub_1C254CB00();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_1C2406FB8;
    *(void *)(v16 + 24) = v7;
    *(void *)(v16 + 32) = a3;
    *(void *)(v16 + 40) = v8;
    *(void *)(v16 + 48) = v9;
    *(void *)(v16 + 56) = v19;
    *(unsigned char *)(v16 + 64) = v18;
    os_log_type_t v31 = sub_1C24054B8;
    uint64_t v32 = v16;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v28 = 1107296256;
    id v29 = sub_1C23447F8;
    uint64_t v30 = &block_descriptor_101_1;
    id v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v15, sel_fetchAccountWithIdentifier_completion_, v12, v17);
    _Block_release(v17);
    swift_release();

    goto LABEL_6;
  }
  uint64_t aBlock = v20 & 1;
  uint64_t v28 = v21;
  id v29 = v22;
  uint64_t v30 = v23;
  os_log_type_t v31 = (void (*)(void *, void *))(v24 & 1);
  uint64_t v32 = (uint64_t)v25;
  char v33 = 0;
  id v12 = v25;
  sub_1C22C9070((uint64_t)&aBlock);
  swift_release();

LABEL_6:
}

void sub_1C240647C(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = a4;
  v11[3] = a5;
  uint64_t v26 = a5;
  void v11[4] = a6;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C23BE950;
  *(void *)(v12 + 24) = v11;
  uint64_t v14 = *a2;
  uint64_t v13 = a2[1];
  uint64_t v28 = a3;
  uint64_t v29 = a2[2];
  char v30 = *((unsigned char *)a2 + 24);
  swift_beginAccess();
  sub_1C2406D9C(a3 + 32, (uint64_t)&aBlock, (uint64_t (*)(void))sub_1C222CCAC);
  sub_1C222D4C0(0, &qword_1EA2DEB50, (unint64_t *)&qword_1EBB6E958);
  id v15 = a4;
  swift_retain();
  swift_retain();
  sub_1C254FC90();
  uint64_t v16 = sub_1C222D57C((uint64_t)&aBlock, (uint64_t (*)(void))sub_1C222CCAC);
  uint64_t v27 = v14;
  if (v37[0])
  {
    MEMORY[0x1F4188790](v16);
    MEMORY[0x1F4188790](v17);
    sub_1C22C67A8(0, &qword_1EA2DEB58);
    sub_1C254FC90();
    uint64_t v18 = v13;
    sub_1C222D460((uint64_t)v37, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
    if (v36)
    {
      uint64_t aBlock = v31 & 1;
      uint64_t v39 = v32;
      id v40 = v33;
      uint64_t v41 = v34;
      uint64_t v42 = (void (*)(void *, void *))(v35 & 1);
      uint64_t v43 = (uint64_t)v36;
      char v44 = 0;
      id v19 = v15;
      swift_retain();
      sub_1C23BEA70((uint64_t)&aBlock, a4, v26, a6);
      swift_release();
      swift_release();

      swift_release();
      return;
    }
  }
  else
  {
    sub_1C222D460((uint64_t)v37, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
    uint64_t v18 = v13;
  }
  id v20 = objc_msgSend(*(id *)(a3 + 24), sel_healthRecordsStore);
  id v21 = objc_msgSend(v20, sel_healthStore);

  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67710]), sel_initWithHealthStore_, v21);
  uint64_t v23 = (void *)sub_1C254CB00();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_1C240693C;
  *(void *)(v24 + 24) = v12;
  *(void *)(v24 + 32) = v28;
  *(void *)(v24 + 40) = v27;
  *(void *)(v24 + 48) = v18;
  *(void *)(v24 + 56) = v29;
  *(unsigned char *)(v24 + 64) = v30;
  uint64_t v42 = sub_1C24054B8;
  uint64_t v43 = v24;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v39 = 1107296256;
  id v40 = sub_1C23447F8;
  uint64_t v41 = &block_descriptor_72;
  uint64_t v25 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v22, sel_fetchAccountWithIdentifier_completion_, v23, v25);
  _Block_release(v25);
  swift_release();
  swift_release();
}

void sub_1C240693C(uint64_t a1)
{
  sub_1C23BD5C8(a1, *(void (**)(void *))(v1 + 16));
}

void sub_1C2406948(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v9 = swift_allocObject();
  id v22 = a4;
  *(void *)(v9 + 16) = a4;
  *(void *)(v9 + 24) = a5;
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v12 = a2[2];
  char v24 = *((unsigned char *)a2 + 24);
  swift_beginAccess();
  sub_1C2406D9C(a3 + 32, (uint64_t)&aBlock, (uint64_t (*)(void))sub_1C222CCAC);
  sub_1C222D4C0(0, &qword_1EA2DEB50, (unint64_t *)&qword_1EBB6E958);
  swift_retain();
  sub_1C254FC90();
  uint64_t v13 = sub_1C222D57C((uint64_t)&aBlock, (uint64_t (*)(void))sub_1C222CCAC);
  uint64_t v23 = v11;
  if (v31[0])
  {
    MEMORY[0x1F4188790](v13);
    MEMORY[0x1F4188790](v14);
    sub_1C22C67A8(0, &qword_1EA2DEB58);
    sub_1C254FC90();
    sub_1C222D460((uint64_t)v31, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
    if (v30)
    {
      uint64_t aBlock = v25 & 1;
      uint64_t v33 = v26;
      id v34 = v27;
      char v35 = v28;
      unint64_t v36 = v29 & 1 | 0x8000000000000000;
      uint64_t v37 = (uint64_t)v30;
      char v38 = 0;
      id v15 = v30;
      v22(&aBlock);
      swift_release();

      return;
    }
  }
  else
  {
    sub_1C222D460((uint64_t)v31, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
  }
  id v16 = objc_msgSend(*(id *)(a3 + 24), sel_healthRecordsStore, a4);
  id v17 = objc_msgSend(v16, sel_healthStore);

  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67710]), sel_initWithHealthStore_, v17);
  id v19 = (void *)sub_1C254CB00();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1C2407078;
  *(void *)(v20 + 24) = v9;
  *(void *)(v20 + 32) = a3;
  *(void *)(v20 + 40) = v10;
  *(void *)(v20 + 48) = v23;
  *(void *)(v20 + 56) = v12;
  *(unsigned char *)(v20 + 64) = v24;
  unint64_t v36 = (unint64_t)sub_1C24054B8;
  uint64_t v37 = v20;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v33 = 1107296256;
  id v34 = sub_1C23447F8;
  char v35 = &block_descriptor_87;
  id v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v18, sel_fetchAccountWithIdentifier_completion_, v19, v21);
  _Block_release(v21);
  swift_release();
}

uint64_t sub_1C2406D94(uint64_t a1)
{
  return sub_1C2403398(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C2406D9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2406E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_1C2406E78(uint64_t a1)
{
  return sub_1C24057A0(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), (unint64_t *)&qword_1EBB6E820, (uint64_t)&type metadata for BrowseIcon, (void (*)(unsigned char *))sub_1C2406F48, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C222A5EC);
}

uint64_t sub_1C2406ECC()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32) + 24;
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

uint64_t sub_1C2406F48(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C2406F80()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2406FB8(uint64_t a1)
{
}

uint64_t objectdestroyTm_9()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 65, 7);
}

double sub_1C2407004@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C24030A8(*a1, **(void **)(v2 + 16), *(void *)(*(void *)(v2 + 16) + 8), *(void *)(*(void *)(v2 + 16) + 16), *(unsigned char *)(*(void *)(v2 + 16) + 24), a2);
}

uint64_t sub_1C2407060()
{
  return sub_1C222CD70();
}

uint64_t type metadata accessor for DownloadDetailsDataSource()
{
  uint64_t result = qword_1EA2E3160;
  if (!qword_1EA2E3160) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C24070C8()
{
  return swift_initClassMetadata2();
}

void sub_1C2407140(uint64_t a1)
{
  id v1 = *(id *)(a1 + qword_1EA2E3138);
  sub_1C2407804(v1);
}

uint64_t sub_1C2407194(void *a1, uint64_t a2)
{
  *(void *)(v2 + qword_1EA2E3150) = 0;
  *(void *)(v2 + qword_1EA2E3158) = 0;
  *(void *)(v2 + qword_1EA2E3138) = a1;
  *(void *)(v2 + qword_1EA2E3140) = a2;
  *(void *)(v2 + qword_1EA2E3148) = 0;
  *(void *)(swift_allocObject() + 16) = a1;
  id v4 = a1;
  swift_retain();
  swift_retain();
  uint64_t v5 = sub_1C254DF10();
  swift_retain();
  sub_1C2407804(v4);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = (objc_class *)type metadata accessor for IngestionStateChangeListener();
  id v8 = objc_allocWithZone(v7);
  uint64_t v16 = 0;
  char v17 = 1;
  sub_1C2229B08();
  swift_allocObject();
  uint64_t v9 = (char *)v8;
  *(void *)&v9[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_changePublisher] = sub_1C254EAA0();
  uint64_t v10 = (uint64_t (**)(uint64_t))&v9[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_handler];
  *uint64_t v10 = sub_1C2408AC0;
  v10[1] = (uint64_t (*)(uint64_t))v6;
  swift_retain();

  v15.receiver = v9;
  v15.super_class = v7;
  id v11 = objc_msgSendSuper2(&v15, sel_init);
  swift_release();
  uint64_t v12 = *(void **)(v5 + qword_1EA2E3150);
  *(void *)(v5 + qword_1EA2E3150) = v11;

  uint64_t v13 = sub_1C2407FF0();
  swift_release();
  swift_release();

  swift_release();
  *(void *)(v5 + qword_1EA2E3158) = v13;
  swift_release();
  return v5;
}

uint64_t sub_1C24073AC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_1C254DB50();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v13 - v9;
  if (objc_msgSend(a3, sel_state) == (id)5)
  {
    sub_1C254DA90();
    sub_1C254DA80();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    sub_1C254DA90();
  }
  uint64_t v11 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v11;
}

uint64_t sub_1C24074F8(uint64_t a1)
{
  uint64_t v2 = sub_1C254F1C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254F200();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = *(void *)(result + qword_1EA2E3148);
    *(void *)(result + qword_1EA2E3148) = a1;
    if (v12 != a1)
    {
      sub_1C22023A4();
      uint64_t v13 = sub_1C254FC70();
      aBlock[4] = sub_1C2408AC8;
      aBlock[5] = v11;
      uint64_t v16 = (void *)v13;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C224E544;
      aBlock[3] = &block_descriptor_53;
      uint64_t v14 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      sub_1C254F1E0();
      aBlock[0] = MEMORY[0x1E4FBC860];
      sub_1C24089B0((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
      sub_1C2408AD8(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
      sub_1C21FFDEC();
      sub_1C2550200();
      objc_super v15 = v16;
      MEMORY[0x1C87581B0](0, v9, v5, v14);
      _Block_release(v14);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2407804(void *a1)
{
  uint64_t v68 = sub_1C254F230();
  uint64_t v3 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  id v71 = (uint64_t *)((char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void **)(v1 + qword_1EA2E3138);
  uint64_t v73 = v1;
  *(void *)(v1 + qword_1EA2E3138) = a1;
  id v6 = a1;

  uint64_t v7 = sub_1C254F470();
  uint64_t v9 = v8;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  uint64_t v67 = v3;
  id v10 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C254C730();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();

  id v66 = v6;
  id v14 = objc_msgSend(v6, sel_displayableLastDownloadDate);
  uint64_t v15 = sub_1C254F470();
  uint64_t v17 = v16;

  sub_1C2201F2C();
  uint64_t v18 = swift_allocObject();
  long long v72 = xmmword_1C255CDA0;
  *(_OWORD *)(v18 + 16) = xmmword_1C255CDA0;
  uint64_t v69 = v7;
  uint64_t v70 = v9;
  *(void *)(v18 + 32) = v7;
  *(void *)(v18 + 40) = v9;
  strcpy((char *)(v18 + 48), "LastDownloaded");
  *(unsigned char *)(v18 + 63) = -18;
  swift_bridgeObjectRetain();
  id v19 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v20 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v20)
  {
    uint64_t v21 = sub_1C254F470();
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v23 = 0;
  }
  uint64_t v24 = type metadata accessor for TitleSubtitleDetailItem(0);
  char v25 = (void *)swift_allocObject();
  sub_1C254CB30();
  uint64_t v25[2] = v11;
  v25[3] = v13;
  v25[4] = v15;
  v25[5] = v17;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  v25[6] = 0;
  v25[7] = v26;
  v25[8] = v21;
  v25[9] = v23;
  if (*(void *)(v73 + qword_1EA2E3148) == 3)
  {
    id v27 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    id v66 = (id)sub_1C254C730();
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();

    id v30 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1C254C730();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();

    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = v72;
    uint64_t v35 = v70;
    *(void *)(v34 + 32) = v69;
    *(void *)(v34 + 40) = v35;
    *(void *)(v34 + 48) = 0x737574617453;
    *(void *)(v34 + 56) = 0xE600000000000000;
    unint64_t v36 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v37 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v37)
    {
      uint64_t v38 = sub_1C254F470();
      uint64_t v40 = v39;
    }
    else
    {
      uint64_t v38 = 0;
      uint64_t v40 = 0;
    }
    uint64_t v56 = v68;
    uint64_t v57 = type metadata accessor for TitleSubtitleDetailItemWithSpinner(0);
    id v58 = (void *)swift_allocObject();
    sub_1C254CB30();
    v58[2] = v66;
    v58[3] = v29;
    v58[4] = v31;
    v58[5] = v33;
    v58[6] = v38;
    v58[7] = v40;
    uint64_t v75 = v57;
    uint64_t v76 = sub_1C24089B0(&qword_1EA2DFD48, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItemWithSpinner);
    *(void *)&long long v74 = v58;
    sub_1C21F44EC(&v74, (uint64_t)v77);
    uint64_t v59 = v67;
  }
  else
  {
    id v41 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1C254C730();
    uint64_t v44 = v43;
    swift_bridgeObjectRelease();

    id v45 = objc_msgSend(v66, sel_displayableStatus);
    uint64_t v46 = sub_1C254F470();
    uint64_t v48 = v47;

    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = v72;
    uint64_t v50 = v70;
    *(void *)(v49 + 32) = v69;
    *(void *)(v49 + 40) = v50;
    *(void *)(v49 + 48) = 0x737574617453;
    *(void *)(v49 + 56) = 0xE600000000000000;
    uint64_t v51 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v52 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v52)
    {
      uint64_t v53 = sub_1C254F470();
      uint64_t v55 = v54;
    }
    else
    {
      uint64_t v53 = 0;
      uint64_t v55 = 0;
    }
    uint64_t v59 = v67;
    uint64_t v60 = (void *)swift_allocObject();
    sub_1C254CB30();
    v60[2] = v42;
    v60[3] = v44;
    v60[4] = v46;
    v60[5] = v48;
    v60[6] = 0;
    v60[7] = MEMORY[0x1E4FBC860];
    v60[8] = v53;
    v60[9] = v55;
    uint64_t v75 = v24;
    uint64_t v76 = sub_1C24089B0(&qword_1EA2DF188, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItem);
    *(void *)&long long v74 = v60;
    sub_1C21F44EC(&v74, (uint64_t)v77);
    uint64_t v56 = v68;
  }
  sub_1C22023A4();
  uint64_t v61 = sub_1C254FC70();
  uint64_t v62 = v71;
  *id v71 = v61;
  (*(void (**)(uint64_t *, void, uint64_t))(v59 + 104))(v62, *MEMORY[0x1E4FBCBF0], v56);
  char v63 = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v59 + 8))(v62, v56);
  if (v63)
  {
    sub_1C2408AD8(0, &qword_1EA2DF5D0, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBBE00]);
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = v72;
    *(void *)(v65 + 56) = v24;
    *(void *)(v65 + 64) = sub_1C24089B0(&qword_1EA2DF188, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItem);
    *(void *)(v65 + 32) = v25;
    sub_1C21F4424((uint64_t)v77, v65 + 72);
    swift_retain();
    sub_1C254DA30();
    swift_release();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v77);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2407FF0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = *(void **)((char *)v0 + qword_1EA2E3150);
  if (v6)
  {
    uint64_t v7 = *(void **)(*(uint64_t *)((char *)v0 + qword_1EA2E3140) + 16);
    id v8 = v6;
    id v9 = objc_msgSend(v7, sel_healthStore);
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67730]), sel_initWithHealthStore_, v9);

    objc_msgSend(v10, sel_addIngestionStateListener_, v8);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = v8;
    type metadata accessor for CancellationToken();
    uint64_t result = swift_allocObject();
    *(unsigned char *)(result + 16) = 0;
    *(void *)(result + 24) = sub_1C2408A38;
    *(void *)(result + 32) = v11;
  }
  else
  {
    sub_1C254E510();
    uint64_t v13 = sub_1C254E550();
    os_log_type_t v14 = sub_1C254FA10();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v19 = v16;
      uint64_t v20 = v1;
      *(_DWORD *)uint64_t v15 = 136446210;
      swift_getMetatypeMetadata();
      uint64_t v17 = sub_1C254F4F0();
      uint64_t v20 = sub_1C21AD354(v17, v18, &v19);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v13, v14, "[%{public}s]: ingestionStateChangeListener is nil", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v16, -1, -1);
      MEMORY[0x1C875A0B0](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0;
  }
  return result;
}

uint64_t sub_1C24082C4()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1C2408324()
{
  uint64_t v1 = *(void *)(v0 + qword_1EA2E3158);
  if (v1)
  {
    swift_beginAccess();
    if ((*(unsigned char *)(v1 + 16) & 1) == 0)
    {
      *(unsigned char *)(v1 + 16) = 1;
      swift_beginAccess();
      uint64_t v2 = *(void (**)(uint64_t))(v1 + 24);
      swift_retain();
      uint64_t v3 = swift_retain();
      v2(v3);
      swift_release();
      swift_release();
    }
  }
  uint64_t v4 = sub_1C254DF40();

  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1C240841C()
{
  sub_1C2408324();
  return swift_deallocClassInstance();
}

void sub_1C240844C()
{
}

void sub_1C2408468()
{
}

void sub_1C2408484()
{
}

uint64_t sub_1C24084B0()
{
  return type metadata accessor for DownloadDetailsDataSource();
}

uint64_t sub_1C24084B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_1C254CB40();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C254E890();
  MEMORY[0x1F4188790](v11 - 8);
  if (sub_1C254F470() == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v14 = sub_1C2550870();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_13:
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v18 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C254E820();
    uint64_t v19 = sub_1C254D2A0();
    swift_allocObject();
    uint64_t v20 = sub_1C254D280();
    a3[3] = v19;
    uint64_t result = sub_1C24089B0((unint64_t *)&qword_1EBB6E7D8, MEMORY[0x1E4F66208]);
    a3[4] = result;
    *a3 = v20;
    return result;
  }
  if (sub_1C254F470() == a1 && v15 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v17 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      goto LABEL_21;
    }
  }
  if (objc_msgSend(*(id *)(v3 + qword_1EA2E3138), sel_state) != (id)5)
  {
LABEL_21:
    a3[3] = sub_1C254D3D0();
    a3[4] = sub_1C24089B0(&qword_1EA2DE998, MEMORY[0x1E4F66330]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    return sub_1C254D3C0();
  }
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v22 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  v23[0] = 0x74497265746F6F46;
  v23[1] = 0xEB000000005F6D65;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  a3[3] = sub_1C254DEA0();
  a3[4] = sub_1C24089B0(&qword_1EA2DE9A0, MEMORY[0x1E4F665E8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1C254DE90();
}

uint64_t sub_1C240898C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C24084B8(a1, a2, a3);
}

uint64_t sub_1C24089B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C24089F8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1C2408A38()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_removeIngestionStateListener_, *(void *)(v0 + 24));
}

uint64_t sub_1C2408A48()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2408A80(uint64_t a1, uint64_t a2)
{
  return sub_1C24073AC(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1C2408A88()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2408AC0(uint64_t a1)
{
  return sub_1C24074F8(a1);
}

void sub_1C2408AC8()
{
  sub_1C2407140(v0);
}

uint64_t block_destroy_helper_48()
{
  return swift_release();
}

void sub_1C2408AD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

Swift::String_optional __swiftcall HKSignedClinicalDataGroup.multiRecordStatusText()()
{
  id v1 = objc_msgSend(v0, sel_medicalRecords);
  if (!v1)
  {
    uint64_t v7 = 0;
    goto LABEL_10;
  }
  sub_1C21AB51C(0, &qword_1EBB6F978);
  unint64_t v2 = sub_1C254F710();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v3 >= 2) {
      goto LABEL_4;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
    id v1 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3 < 2) {
    goto LABEL_9;
  }
LABEL_4:
  if (qword_1EA2DD670 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EA2E0B30;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C2269E20();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C255CD90;
  swift_bridgeObjectRelease();
  uint64_t v6 = MEMORY[0x1E4FBB5C8];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v5 + 64) = v6;
  *(void *)(v5 + 32) = v3;
  uint64_t v7 = sub_1C254F440();
  id v1 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v9 = v7;
  id v10 = v1;
  result.value._object = v10;
  result.value._countAndFlagsBits = v9;
  return result;
}

uint64_t sub_1C2408D34(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C23F5310();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C24099FC(v6);
  return sub_1C2550470();
}

uint64_t HKSignedClinicalDataGroup.deletionConfirmationMessage(whenDeleting:)(void *a1)
{
  id v4 = objc_msgSend(v1, sel_medicalRecords);
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1C21AB51C(0, &qword_1EBB6F978);
    unint64_t v6 = sub_1C254F710();

    id v7 = a1;
    uint64_t v8 = sub_1C240AC20(v6);
    swift_bridgeObjectRelease();

    if (v8 < 0 || (v8 & 0x4000000000000000) != 0)
    {
      unint64_t v66 = swift_bridgeObjectRetain();
      uint64_t v9 = (uint64_t)sub_1C228F9D8(v66);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    uint64_t v70 = v9;
    sub_1C2408D34(&v70);
    swift_bridgeObjectRelease();
    uint64_t v10 = v70;
    if (v70 < 0 || (v70 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1C2550620();
      swift_release();
    }
    else
    {
      uint64_t v11 = *(void *)(v70 + 16);
    }
    if (!v11)
    {
      swift_release();
      uint64_t v2 = (void *)MEMORY[0x1E4FBC860];
      goto LABEL_21;
    }
    uint64_t v70 = MEMORY[0x1E4FBC860];
    sub_1C2274764(0, v11 & ~(v11 >> 63), 0);
    if ((v11 & 0x8000000000000000) == 0)
    {
      uint64_t v12 = 0;
      uint64_t v2 = (void *)v70;
      unint64_t v67 = v10 & 0xC000000000000001;
      uint64_t v68 = v11;
      uint64_t v69 = v10;
      do
      {
        if (v67) {
          id v13 = (id)MEMORY[0x1C87588E0](v12, v10);
        }
        else {
          id v13 = *(id *)(v10 + 8 * v12 + 32);
        }
        char v14 = v13;
        id v15 = objc_msgSend(v13, sel_meaningfulDateDisplayStringWithPreferredForm_showTime_, 1, 0);
        uint64_t v16 = sub_1C254F470();
        uint64_t v18 = v17;

        if (qword_1EA2DD680 != -1) {
          swift_once();
        }
        id v19 = (id)qword_1EA2E0B60;
        swift_bridgeObjectRetain();
        sub_1C254C730();
        swift_bridgeObjectRelease();

        sub_1C2269E20();
        uint64_t v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_1C255CDA0;
        id v21 = objc_msgSend(v14, sel_preferredDisplayName, 0xE000000000000000);
        uint64_t v22 = sub_1C254F470();
        uint64_t v24 = v23;

        uint64_t v25 = MEMORY[0x1E4FBB1A0];
        *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v26 = sub_1C220D950();
        *(void *)(v20 + 32) = v22;
        *(void *)(v20 + 40) = v24;
        *(void *)(v20 + 96) = v25;
        *(void *)(v20 + 104) = v26;
        *(void *)(v20 + 64) = v26;
        *(void *)(v20 + 72) = v16;
        *(void *)(v20 + 80) = v18;
        uint64_t v27 = sub_1C254F440();
        uint64_t v29 = v28;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v70 = (uint64_t)v2;
        unint64_t v31 = v2[2];
        unint64_t v30 = v2[3];
        if (v31 >= v30 >> 1)
        {
          sub_1C2274764(v30 > 1, v31 + 1, 1);
          uint64_t v2 = (void *)v70;
        }
        ++v12;
        v2[2] = v31 + 1;
        uint64_t v32 = &v2[2 * v31];
        v32[4] = v27;
        v32[5] = v29;
        uint64_t v10 = v69;
      }
      while (v68 != v12);
      swift_release();
LABEL_21:
      uint64_t v33 = v2[2];
      switch(v33)
      {
        case 0:
          swift_bridgeObjectRelease();
          return 0;
        case 1:
          if (qword_1EA2DD680 == -1) {
            goto LABEL_34;
          }
          goto LABEL_50;
        case 2:
          if (qword_1EA2DD680 == -1) {
            goto LABEL_25;
          }
          goto LABEL_46;
        case 3:
          if (qword_1EA2DD680 == -1) {
            goto LABEL_29;
          }
          goto LABEL_48;
        default:
          if (qword_1EA2DD680 == -1) {
            goto LABEL_38;
          }
          goto LABEL_52;
      }
    }
    __break(1u);
LABEL_46:
    swift_once();
LABEL_25:
    id v35 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C2269E20();
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C255CDA0;
    uint64_t v37 = MEMORY[0x1E4FBB1A0];
    *(void *)(v36 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v38 = sub_1C220D950();
    *(void *)(v36 + 64) = v38;
    if (v2[2])
    {
      unint64_t v39 = v38;
      uint64_t v40 = v2[5];
      *(void *)(v36 + 32) = v2[4];
      *(void *)(v36 + 40) = v40;
      *(void *)(v36 + 96) = v37;
      *(void *)(v36 + 104) = v39;
      if (v2[2] >= 2uLL)
      {
        uint64_t v42 = v2[6];
        uint64_t v41 = v2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v36 + 72) = v42;
        *(void *)(v36 + 80) = v41;
LABEL_36:
        uint64_t v34 = sub_1C254F440();
        swift_bridgeObjectRelease();
LABEL_41:
        swift_bridgeObjectRelease();
        return v34;
      }
    }
    else
    {
      __break(1u);
LABEL_48:
      swift_once();
LABEL_29:
      id v43 = (id)qword_1EA2E0B60;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      sub_1C2269E20();
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_1C255D0E0;
      uint64_t v45 = MEMORY[0x1E4FBB1A0];
      *(void *)(v44 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = sub_1C220D950();
      *(void *)(v44 + 64) = v46;
      if (v2[2])
      {
        unint64_t v47 = v46;
        uint64_t v48 = v2[5];
        *(void *)(v44 + 32) = v2[4];
        *(void *)(v44 + 40) = v48;
        *(void *)(v44 + 96) = v45;
        *(void *)(v44 + 104) = v47;
        if (v2[2] >= 2uLL)
        {
          uint64_t v49 = v2[7];
          *(void *)(v44 + 72) = v2[6];
          *(void *)(v44 + 80) = v49;
          *(void *)(v44 + 136) = v45;
          *(void *)(v44 + 144) = v47;
          if (v2[2] >= 3uLL)
          {
            uint64_t v51 = v2[8];
            uint64_t v50 = v2[9];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)(v44 + 112) = v51;
            *(void *)(v44 + 120) = v50;
            goto LABEL_36;
          }
LABEL_57:
          __break(1u);
          swift_release();
          __break(1u);
          JUMPOUT(0x1C24096BCLL);
        }
        goto LABEL_55;
      }
      __break(1u);
LABEL_50:
      swift_once();
LABEL_34:
      id v52 = (id)qword_1EA2E0B60;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      sub_1C2269E20();
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1C255CD90;
      *(void *)(v33 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v33 + 64) = sub_1C220D950();
      if (v2[2])
      {
        uint64_t v54 = v2[4];
        uint64_t v53 = v2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v33 + 32) = v54;
        *(void *)(v33 + 40) = v53;
        goto LABEL_36;
      }
      __break(1u);
LABEL_52:
      swift_once();
LABEL_38:
      id v55 = (id)qword_1EA2E0B60;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      id v56 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v33 - 2, 0xE000000000000000);
      sub_1C2269E20();
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_1C255D0E0;
      uint64_t v58 = MEMORY[0x1E4FBB1A0];
      *(void *)(v57 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v59 = sub_1C220D950();
      *(void *)(v57 + 64) = v59;
      if (v2[2])
      {
        unint64_t v60 = v59;
        uint64_t v61 = v2[5];
        *(void *)(v57 + 32) = v2[4];
        *(void *)(v57 + 40) = v61;
        *(void *)(v57 + 96) = v58;
        *(void *)(v57 + 104) = v60;
        if (v2[2] >= 2uLL)
        {
          uint64_t v63 = v2[6];
          uint64_t v62 = v2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v57 + 72) = v63;
          *(void *)(v57 + 80) = v62;
          *(void *)(v57 + 136) = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
          *(void *)(v57 + 144) = sub_1C23959C0();
          *(void *)(v57 + 112) = v56;
          id v64 = v56;
          uint64_t v34 = sub_1C254F440();
          swift_bridgeObjectRelease();

          goto LABEL_41;
        }
        goto LABEL_56;
      }
      __break(1u);
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  return 0;
}

id sub_1C24096CC(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  HKSignedClinicalDataGroup.deletionConfirmationMessage(whenDeleting:)(v4);
  uint64_t v7 = v6;

  if (v7)
  {
    uint64_t v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  return v8;
}

Swift::Bool __swiftcall HKSignedClinicalDataGroup.passExistsInWallet()()
{
  id v1 = v0;
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v2).n128_u64[0];
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(v1, sel_mainRecord, v4);
  if (v7)
  {
    uint64_t v8 = v7;
    sub_1C254E3C0();
    swift_allocObject();
    sub_1C254E3B0();
    sub_1C254E370();
    uint64_t v10 = v9;

    swift_release();
    if (v10)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  else
  {
    sub_1C254E510();
    id v12 = v1;
    id v13 = sub_1C254E550();
    os_log_type_t v14 = sub_1C254FA20();
    int v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v16 = swift_slowAlloc();
      int v25 = v15;
      uint64_t v17 = (uint8_t *)v16;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v28 = v26;
      *(_DWORD *)uint64_t v17 = 136446210;
      v24[1] = v17 + 4;
      id v18 = v12;
      id v19 = objc_msgSend(v18, sel_description);
      uint64_t v20 = sub_1C254F470();
      unint64_t v22 = v21;

      uint64_t v27 = sub_1C21AD354(v20, v22, &v28);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v13, (os_log_type_t)v25, "%{public}s: no mainRecord on SCD group, cannot determine existing pass in Wallet", v17, 0xCu);
      uint64_t v23 = v26;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v23, -1, -1);
      MEMORY[0x1C875A0B0](v17, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return 0;
}

void sub_1C24099FC(uint64_t *a1)
{
  uint64_t v138 = sub_1C254CAD0();
  uint64_t v2 = *(void *)(v138 - 8);
  MEMORY[0x1F4188790](v138);
  uint64_t v137 = (char *)&v123 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v136 = (char *)&v123 - v5;
  uint64_t v6 = a1[1];
  uint64_t v7 = sub_1C2550800();
  if (v7 >= v6)
  {
    if (v6 < 0) {
      goto LABEL_133;
    }
    if (v6) {
      sub_1C240A43C(0, v6, 1, a1);
    }
    return;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_141;
  }
  uint64_t v128 = v7;
  uint64_t v124 = a1;
  if (v6 < 2)
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v141 = MEMORY[0x1E4FBC860];
    uint64_t v133 = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      unint64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_100:
      uint64_t v114 = v134;
      if (v14 >= 2)
      {
        uint64_t v115 = *v124;
        do
        {
          unint64_t v116 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_128;
          }
          if (!v115) {
            goto LABEL_140;
          }
          unint64_t v117 = v11;
          uint64_t v118 = v11 + 32;
          uint64_t v119 = *(void *)&v11[16 * v116 + 32];
          uint64_t v120 = *(void *)&v11[16 * v14 + 24];
          sub_1C240A6A8((void **)(v115 + 8 * v119), (id *)(v115 + 8 * *(void *)&v118[16 * v14 - 16]), (id *)(v115 + 8 * v120), v133);
          if (v114) {
            break;
          }
          if (v120 < v119) {
            goto LABEL_129;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v117 = sub_1C23F321C((uint64_t)v117);
          }
          if (v116 >= *((void *)v117 + 2)) {
            goto LABEL_130;
          }
          char v121 = &v117[16 * v116 + 32];
          *(void *)char v121 = v119;
          *((void *)v121 + 1) = v120;
          unint64_t v122 = *((void *)v117 + 2);
          if (v14 > v122) {
            goto LABEL_131;
          }
          uint64_t v11 = v117;
          memmove(&v117[16 * v14 + 16], &v117[16 * v14 + 32], 16 * (v122 - v14));
          *((void *)v117 + 2) = v122 - 1;
          unint64_t v14 = v122 - 1;
        }
        while (v122 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C254F730();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1C21AB51C(0, &qword_1EBB6F978);
    uint64_t v10 = sub_1C254F780();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    uint64_t v133 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v141 = v10;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v135 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v125 = v13 - 8;
  uint64_t v126 = v13 + 16;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  v130 = (void *)v6;
  uint64_t v139 = v13;
  while (1)
  {
    uint64_t v15 = v12++;
    uint64_t v131 = v15;
    if (v12 < v6)
    {
      uint64_t v16 = *(void **)(v13 + 8 * v15);
      id v17 = *(id *)(v13 + 8 * v12);
      id v129 = v17;
      id v18 = v16;
      id v19 = objc_msgSend(v17, sel_sortDate);
      id v20 = objc_msgSend(v19, sel_date);

      unint64_t v21 = v136;
      sub_1C254CA80();

      id v22 = objc_msgSend(v18, sel_sortDate);
      uint64_t v15 = v131;
      id v23 = objc_msgSend(v22, sel_date);

      uint64_t v24 = v137;
      sub_1C254CA80();

      uint64_t v6 = (uint64_t)v130;
      LODWORD(v140) = sub_1C254CA60();
      int v25 = (char *)*v135;
      uint64_t v26 = v24;
      uint64_t v27 = v138;
      (*v135)(v26, v138);
      uint64_t v132 = v25;
      ((void (*)(char *, uint64_t))v25)(v21, v27);

      uint64_t v12 = v15 + 2;
      if (v15 + 2 < v6)
      {
        uint64_t v127 = v11;
        uint64_t v28 = (id *)(v126 + 8 * v15);
        while (1)
        {
          uint64_t v29 = *(v28 - 1);
          id v30 = *v28;
          id v31 = v29;
          id v32 = objc_msgSend(v30, sel_sortDate);
          id v33 = objc_msgSend(v32, sel_date);

          uint64_t v34 = v136;
          sub_1C254CA80();

          id v35 = objc_msgSend(v31, sel_sortDate);
          id v36 = objc_msgSend(v35, sel_date);

          uint64_t v37 = v137;
          sub_1C254CA80();

          LODWORD(v35) = sub_1C254CA60();
          unint64_t v38 = v37;
          uint64_t v39 = v138;
          uint64_t v40 = (void (*)(char *, uint64_t))v132;
          ((void (*)(char *, uint64_t))v132)(v38, v138);
          v40(v34, v39);

          if ((v140 ^ v35)) {
            break;
          }
          ++v12;
          ++v28;
          uint64_t v6 = (uint64_t)v130;
          if (v130 == (void *)v12)
          {
            uint64_t v12 = (uint64_t)v130;
            uint64_t v11 = v127;
            goto LABEL_22;
          }
        }
        uint64_t v11 = v127;
        uint64_t v6 = (uint64_t)v130;
LABEL_22:
        uint64_t v15 = v131;
      }
      uint64_t v13 = v139;
      if (v140)
      {
        if (v12 < v15) {
          goto LABEL_134;
        }
        if (v15 < v12)
        {
          uint64_t v41 = (uint64_t *)(v125 + 8 * v12);
          uint64_t v42 = v12;
          uint64_t v43 = v15;
          uint64_t v44 = (uint64_t *)(v139 + 8 * v15);
          do
          {
            if (v43 != --v42)
            {
              if (!v13) {
                goto LABEL_139;
              }
              uint64_t v45 = *v44;
              *uint64_t v44 = *v41;
              *uint64_t v41 = v45;
            }
            ++v43;
            --v41;
            ++v44;
          }
          while (v43 < v42);
        }
      }
    }
    if (v12 < v6)
    {
      if (__OFSUB__(v12, v15)) {
        goto LABEL_132;
      }
      if (v12 - v15 < v128) {
        break;
      }
    }
LABEL_50:
    if (v12 < v15) {
      goto LABEL_127;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C23F277C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v63 = *((void *)v11 + 2);
    unint64_t v62 = *((void *)v11 + 3);
    unint64_t v14 = v63 + 1;
    uint64_t v13 = v139;
    if (v63 >= v62 >> 1)
    {
      uint64_t v113 = sub_1C23F277C((char *)(v62 > 1), v63 + 1, 1, v11);
      uint64_t v13 = v139;
      uint64_t v11 = v113;
    }
    *((void *)v11 + 2) = v14;
    id v64 = v11 + 32;
    uint64_t v65 = &v11[16 * v63 + 32];
    *(void *)uint64_t v65 = v15;
    *((void *)v65 + 1) = v12;
    if (v63)
    {
      while (1)
      {
        unint64_t v66 = v14 - 1;
        if (v14 >= 4)
        {
          id v71 = &v64[16 * v14];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_116;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_117;
          }
          unint64_t v78 = v14 - 2;
          uint64_t v79 = &v64[16 * v14 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_119;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_122;
          }
          if (v83 >= v74)
          {
            uint64_t v101 = &v64[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_126;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_87;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v95 = *((void *)v11 + 4);
            uint64_t v96 = *((void *)v11 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_81;
          }
          uint64_t v68 = *((void *)v11 + 4);
          uint64_t v67 = *((void *)v11 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_118;
        }
        unint64_t v78 = v14 - 2;
        uint64_t v84 = &v64[16 * v14 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_121;
        }
        int v90 = &v64[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_124;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_125;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_87:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v89) {
          goto LABEL_120;
        }
        char v97 = &v64[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_123;
        }
        if (v100 < v88) {
          goto LABEL_14;
        }
LABEL_89:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v14)
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        if (!v13) {
          goto LABEL_138;
        }
        uint64_t v106 = v11;
        uint64_t v107 = &v64[16 * v105];
        uint64_t v108 = *(void *)v107;
        uint64_t v109 = &v64[16 * v66];
        uint64_t v110 = *((void *)v109 + 1);
        uint64_t v111 = v134;
        sub_1C240A6A8((void **)(v13 + 8 * *(void *)v107), (id *)(v13 + 8 * *(void *)v109), (id *)(v13 + 8 * v110), v133);
        uint64_t v134 = v111;
        if (v111) {
          goto LABEL_111;
        }
        if (v110 < v108) {
          goto LABEL_113;
        }
        if (v66 > *((void *)v106 + 2)) {
          goto LABEL_114;
        }
        *(void *)uint64_t v107 = v108;
        *(void *)&v64[16 * v105 + 8] = v110;
        unint64_t v112 = *((void *)v106 + 2);
        if (v66 >= v112) {
          goto LABEL_115;
        }
        uint64_t v11 = v106;
        unint64_t v14 = v112 - 1;
        memmove(&v64[16 * v66], v109 + 16, 16 * (v112 - 1 - v66));
        *((void *)v106 + 2) = v112 - 1;
        uint64_t v13 = v139;
        if (v112 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_14:
    uint64_t v6 = (uint64_t)v130;
    if (v12 >= (uint64_t)v130) {
      goto LABEL_100;
    }
  }
  if (__OFADD__(v15, v128)) {
    goto LABEL_135;
  }
  if (v15 + v128 >= v6) {
    id v46 = (id)v6;
  }
  else {
    id v46 = (id)(v15 + v128);
  }
  if ((uint64_t)v46 >= v15)
  {
    if ((id)v12 != v46)
    {
      uint64_t v127 = v11;
      unint64_t v47 = (char *)(v125 + 8 * v12);
      id v129 = v46;
      do
      {
        uint64_t v48 = *(void **)(v13 + 8 * v12);
        uint64_t v132 = v47;
        while (1)
        {
          uint64_t v49 = *(void **)v47;
          id v50 = v48;
          id v140 = v50;
          id v51 = v49;
          id v52 = objc_msgSend(v50, sel_sortDate);
          id v53 = objc_msgSend(v52, sel_date);

          uint64_t v54 = v136;
          sub_1C254CA80();

          id v55 = objc_msgSend(v51, sel_sortDate);
          id v56 = objc_msgSend(v55, sel_date);

          uint64_t v57 = v137;
          sub_1C254CA80();

          LOBYTE(v55) = sub_1C254CA60();
          uint64_t v58 = *v135;
          unint64_t v59 = v57;
          uint64_t v60 = v138;
          (*v135)(v59, v138);
          v58(v54, v60);

          if ((v55 & 1) == 0) {
            break;
          }
          uint64_t v13 = v139;
          if (!v139) {
            goto LABEL_137;
          }
          uint64_t v61 = *(void *)v47;
          uint64_t v48 = (void *)*((void *)v47 + 1);
          *(void *)unint64_t v47 = v48;
          *((void *)v47 + 1) = v61;
          v47 -= 8;
          if (v12 == ++v15) {
            goto LABEL_43;
          }
        }
        uint64_t v13 = v139;
LABEL_43:
        ++v12;
        uint64_t v15 = v131;
        unint64_t v47 = v132 + 8;
      }
      while ((id)v12 != v129);
      uint64_t v12 = (uint64_t)v129;
      uint64_t v11 = v127;
    }
    goto LABEL_50;
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  sub_1C25505E0();
  __break(1u);
}

void sub_1C240A43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v31 = a1;
  uint64_t v36 = sub_1C254CAD0();
  MEMORY[0x1F4188790](v36);
  id v35 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v34 = (char *)&v29 - v10;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v11 = *a4;
    id v33 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v37 = v11;
    uint64_t v12 = v11 + 8 * a3 - 8;
LABEL_5:
    uint64_t v13 = *(void **)(v37 + 8 * a3);
    uint64_t v14 = v31;
    uint64_t v32 = v12;
    uint64_t v38 = a3;
    while (1)
    {
      uint64_t v15 = *(void **)v12;
      id v16 = v13;
      id v17 = v15;
      id v18 = objc_msgSend(v16, sel_sortDate);
      id v19 = objc_msgSend(v18, sel_date);

      id v20 = v34;
      sub_1C254CA80();

      id v21 = objc_msgSend(v17, sel_sortDate);
      id v22 = objc_msgSend(v21, sel_date);

      id v23 = v35;
      sub_1C254CA80();

      LOBYTE(v21) = sub_1C254CA60();
      uint64_t v24 = *v33;
      int v25 = v23;
      uint64_t v26 = v36;
      (*v33)(v25, v36);
      v24(v20, v26);
      uint64_t v27 = v38;

      if ((v21 & 1) == 0)
      {
LABEL_4:
        a3 = v27 + 1;
        uint64_t v12 = v32 + 8;
        if (a3 == v30) {
          return;
        }
        goto LABEL_5;
      }
      if (!v37) {
        break;
      }
      uint64_t v28 = *(void **)v12;
      uint64_t v13 = *(void **)(v12 + 8);
      *(void *)uint64_t v12 = v13;
      *(void *)(v12 + 8) = v28;
      v12 -= 8;
      if (v27 == ++v14) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C240A6A8(void **a1, id *a2, id *a3, void **a4)
{
  uint64_t v62 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v61 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v59 = a3;
  uint64_t v60 = (char *)&v53 - v11;
  uint64_t v12 = (char *)a2 - (char *)a1;
  uint64_t v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0) {
    uint64_t v13 = (char *)a2 - (char *)a1;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v15 = (char *)a3 - (char *)a2;
  uint64_t v16 = v15 / 8;
  unint64_t v63 = a1;
  unint64_t v66 = a1;
  uint64_t v65 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7) {
      goto LABEL_43;
    }
    if (a4 != a2 || &a2[v16] <= a4) {
      memmove(a4, a2, 8 * v16);
    }
    id v33 = &a4[v16];
    id v64 = v33;
    unint64_t v66 = a2;
    if (v15 < 8 || v63 >= a2) {
      goto LABEL_42;
    }
    uint64_t v54 = (void (**)(char *, uint64_t))(v8 + 8);
    id v55 = a4;
    uint64_t v34 = v59 - 1;
    id v35 = a2;
    while (1)
    {
      uint64_t v58 = v33;
      unint64_t v59 = v34 + 1;
      uint64_t v38 = *--v33;
      uint64_t v37 = v38;
      uint64_t v39 = *--v35;
      uint64_t v40 = v37;
      uint64_t v57 = (void (**)(char *, uint64_t))v40;
      id v41 = v39;
      id v56 = v41;
      id v42 = objc_msgSend(v40, sel_sortDate);
      id v43 = objc_msgSend(v42, sel_date);

      uint64_t v44 = v60;
      sub_1C254CA80();

      id v45 = objc_msgSend(v41, sel_sortDate);
      id v46 = objc_msgSend(v45, sel_date);

      unint64_t v47 = v61;
      sub_1C254CA80();

      LOBYTE(v45) = sub_1C254CA60();
      uint64_t v48 = *v54;
      uint64_t v49 = v47;
      uint64_t v50 = v62;
      (*v54)(v49, v62);
      v48(v44, v50);

      if (v45) {
        break;
      }
      id v64 = v33;
      if (v59 < v58 || v34 >= v58)
      {
        *uint64_t v34 = *v33;
        id v35 = a2;
        goto LABEL_30;
      }
      unint64_t v51 = (unint64_t)v55;
      uint64_t v36 = v63;
      if (v59 != v58) {
        *uint64_t v34 = *v33;
      }
      id v35 = a2;
      if ((unint64_t)v33 <= v51) {
        goto LABEL_42;
      }
LABEL_31:
      --v34;
      a2 = v35;
      if (v35 <= v36) {
        goto LABEL_42;
      }
    }
    id v33 = v58;
    if (v59 != a2 || v34 >= a2) {
      *uint64_t v34 = *v35;
    }
    unint64_t v66 = v35;
LABEL_30:
    uint64_t v36 = v63;
    if (v33 <= v55) {
      goto LABEL_42;
    }
    goto LABEL_31;
  }
  if (v12 >= -7)
  {
    id v17 = v63;
    if (a4 != v63 || &v63[v14] <= a4) {
      memmove(a4, v63, 8 * v14);
    }
    uint64_t v58 = &a4[v14];
    id v64 = v58;
    if (v12 >= 8 && a2 < v59)
    {
      uint64_t v57 = (void (**)(char *, uint64_t))(v8 + 8);
      do
      {
        unint64_t v63 = v17;
        id v18 = *a4;
        id v19 = *a2;
        id v20 = v18;
        id v21 = a4;
        id v22 = objc_msgSend(v19, sel_sortDate);
        id v23 = objc_msgSend(v22, sel_date);

        uint64_t v24 = v60;
        sub_1C254CA80();

        id v25 = objc_msgSend(v20, sel_sortDate);
        id v26 = objc_msgSend(v25, sel_date);

        uint64_t v27 = v61;
        sub_1C254CA80();

        LOBYTE(v25) = sub_1C254CA60();
        uint64_t v28 = *v57;
        uint64_t v29 = v27;
        uint64_t v30 = v62;
        (*v57)(v29, v62);
        v28(v24, v30);

        if (v25)
        {
          unint64_t v31 = (unint64_t)(a2 + 1);
          uint64_t v32 = v63;
          a4 = v21;
          if (v63 < a2 || (unint64_t)v63 >= v31 || v63 != a2) {
            *unint64_t v63 = *a2;
          }
        }
        else
        {
          uint64_t v32 = v63;
          if (v63 != v21) {
            *unint64_t v63 = *v21;
          }
          a4 = v21 + 1;
          uint64_t v65 = v21 + 1;
          unint64_t v31 = (unint64_t)a2;
        }
        id v17 = v32 + 1;
        unint64_t v66 = v17;
        if (a4 >= v58) {
          break;
        }
        a2 = (id *)v31;
      }
      while (v31 < (unint64_t)v59);
    }
LABEL_42:
    sub_1C23F2978(&v66, &v65, &v64);
    return 1;
  }
LABEL_43:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C240AC20(unint64_t a1)
{
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x1C87588E0](v3, a1);
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        sub_1C21AB51C(0, &qword_1EBB6F978);
        if (sub_1C254FF70())
        {
        }
        else
        {
          sub_1C2550460();
          sub_1C25504A0();
          uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
          sub_1C25504B0();
          sub_1C2550470();
        }
        ++v3;
        if (v7 == v2) {
          return v9;
        }
      }
      if (v3 < *(void *)(v4 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = sub_1C2550620();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C240ADD0()
{
  return sub_1C240BEA0();
}

uint64_t sub_1C240ADFC(uint64_t a1)
{
  return sub_1C240BF8C(a1, &OBJC_IVAR___HRUITableViewSectionConfiguration_sections);
}

uint64_t (*sub_1C240AE08())()
{
  return j_j__swift_endAccess;
}

id TableViewSectionConfiguration.init()()
{
  *(void *)&v0[OBJC_IVAR___HRUITableViewSectionConfiguration_sections] = MEMORY[0x1E4FBC860];
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TableViewSectionConfiguration();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for TableViewSectionConfiguration()
{
  return self;
}

uint64_t sub_1C240AF24(void *a1)
{
  return sub_1C240C3B4(a1, &OBJC_IVAR___HRUITableViewSectionConfiguration_sections);
}

id sub_1C240AF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_1C2201F2C();
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C255CD90;
    *(void *)(v8 + 32) = a3;
    *(void *)(v8 + 40) = a4;
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  id v9 = sub_1C240B0C8(a1, a2, v8);
  swift_bridgeObjectRelease();
  return v9;
}

id sub_1C240B0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (objc_class *)type metadata accessor for TableViewSection();
  unint64_t v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = &v7[OBJC_IVAR___HRUITableViewSection_identifier];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  id v9 = &v7[OBJC_IVAR___HRUITableViewSection_headerString];
  *(void *)id v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = &v7[OBJC_IVAR___HRUITableViewSection_footerString];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  *(void *)&v7[OBJC_IVAR___HRUITableViewSection_rows] = MEMORY[0x1E4FBC860];
  *(void *)&v7[OBJC_IVAR___HRUITableViewSection_estimatedNumRows] = 0;
  swift_beginAccess();
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29.receiver = v7;
  v29.super_class = v6;
  uint64_t v11 = (char *)objc_msgSendSuper2(&v29, sel_init);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(a3 + 16);
  if (v13)
  {
    id v26 = v11;
    uint64_t v14 = &v11[OBJC_IVAR___HRUITableViewSection_rows];
    uint64_t v15 = (objc_class *)type metadata accessor for TableViewRow();
    swift_bridgeObjectRetain();
    uint64_t v16 = (uint64_t *)(a3 + 40);
    do
    {
      uint64_t v18 = *(v16 - 1);
      uint64_t v17 = *v16;
      id v19 = (char *)objc_allocWithZone(v15);
      id v20 = &v19[OBJC_IVAR___HRUITableViewRow_reuseIdentifier];
      *(void *)id v20 = v18;
      *((void *)v20 + 1) = v17;
      v28.receiver = v19;
      v28.super_class = v15;
      swift_bridgeObjectRetain_n();
      id v21 = objc_msgSendSuper2(&v28, sel_init);
      swift_beginAccess();
      id v22 = v21;
      MEMORY[0x1C8757C00]();
      if (*(void *)((*(void *)v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v14 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
        sub_1C254F760();
      v16 += 2;
      sub_1C254F790();
      sub_1C254F730();
      swift_endAccess();
      swift_bridgeObjectRelease();

      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    uint64_t v12 = v26;
  }
  id v23 = (void *)(v27 + OBJC_IVAR___HRUITableViewSectionConfiguration_sections);
  swift_beginAccess();
  id v24 = v12;
  MEMORY[0x1C8757C00]();
  if (*(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  swift_endAccess();
  return v24;
}

id TableViewSection.__allocating_init(identifier:)(uint64_t a1, uint64_t a2)
{
  id v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR___HRUITableViewSection_identifier];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  unint64_t v7 = &v5[OBJC_IVAR___HRUITableViewSection_headerString];
  *(void *)unint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  uint64_t v8 = &v5[OBJC_IVAR___HRUITableViewSection_footerString];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  *(void *)&v5[OBJC_IVAR___HRUITableViewSection_rows] = MEMORY[0x1E4FBC860];
  *(void *)&v5[OBJC_IVAR___HRUITableViewSection_estimatedNumRows] = 0;
  swift_beginAccess();
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  swift_bridgeObjectRelease();
  v10.receiver = v5;
  v10.super_class = v2;
  return objc_msgSendSuper2(&v10, sel_init);
}

id TableViewRow.__allocating_init(reuseIdentifier:)(uint64_t a1, uint64_t a2)
{
  id v5 = (char *)objc_allocWithZone(v2);
  uint64_t v6 = &v5[OBJC_IVAR___HRUITableViewRow_reuseIdentifier];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t sub_1C240B4FC()
{
  id v1 = (void *)(v0 + OBJC_IVAR___HRUITableViewSectionConfiguration_sections);
  swift_beginAccess();
  *id v1 = MEMORY[0x1E4FBC860];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C240B5AC(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR___HRUITableViewSectionConfiguration_sections);
  swift_beginAccess();
  if (!((unint64_t)*v3 >> 62))
  {
    if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1) {
      goto LABEL_3;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (v9 <= a1) {
    return 0;
  }
LABEL_3:
  uint64_t v4 = *v3;
  if ((*v3 & 0xC000000000000001) == 0)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
    {
      id v5 = (char *)*(id *)(v4 + 8 * a1 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  id v5 = (char *)MEMORY[0x1C87588E0](a1, v4);
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v6 = &v5[OBJC_IVAR___HRUITableViewSection_rows];
  swift_beginAccess();
  unint64_t v7 = *(void *)v6;
  swift_bridgeObjectRetain();

  if (v7 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C2550620();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_9:
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1C240B760(void *a1)
{
  unint64_t v3 = (unint64_t *)(v1 + OBJC_IVAR___HRUITableViewSectionConfiguration_sections);
  swift_beginAccess();
  if (*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((uint64_t)objc_msgSend(a1, sel_section) >= v4) {
    return 0;
  }
  unint64_t v5 = (unint64_t)objc_msgSend(a1, sel_section);
  unint64_t v6 = v5;
  unint64_t v7 = *v3;
  if ((*v3 & 0xC000000000000001) == 0)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v5 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      unint64_t v3 = (unint64_t *)*(id *)(v7 + 8 * v5 + 32);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = (unint64_t *)MEMORY[0x1C87588E0](v6, v7);
  swift_bridgeObjectRelease();
LABEL_8:
  unint64_t v7 = (unint64_t)v3 + OBJC_IVAR___HRUITableViewSection_rows;
  swift_beginAccess();
  if (!(*(void *)v7 >> 62))
  {
    uint64_t v8 = *(void *)((*(void *)v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_10;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C2550620();
  swift_bridgeObjectRelease();
LABEL_10:
  if ((uint64_t)objc_msgSend(a1, sel_row) >= v8)
  {

    return 0;
  }
  unint64_t result = (unint64_t)objc_msgSend(a1, sel_row);
  unint64_t v10 = result;
  uint64_t v11 = *(void *)v7;
  if ((*(void *)v7 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v12 = (id)MEMORY[0x1C87588E0](v10, v11);

    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(v11 + 8 * result + 32);

    return (unint64_t)v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C240BA40()
{
  uint64_t v1 = v0;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  uint64_t v6 = 60;
  unint64_t v7 = 0xE100000000000000;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TableViewSectionConfiguration();
  id v2 = objc_msgSendSuper2(&v5, sel_description);
  sub_1C254F470();

  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  unint64_t v3 = &v1[OBJC_IVAR___HRUITableViewSectionConfiguration_sections];
  swift_beginAccess();
  if (*(void *)v3 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  return v6;
}

id TableViewSectionConfiguration.__deallocating_deinit()
{
  return sub_1C240CA1C(type metadata accessor for TableViewSectionConfiguration);
}

uint64_t sub_1C240BBDC()
{
  return sub_1C223A124(&OBJC_IVAR___HRUITableViewSection_identifier);
}

uint64_t sub_1C240BBF4(uint64_t a1, uint64_t a2)
{
  return sub_1C2239780(a1, a2, &OBJC_IVAR___HRUITableViewSection_identifier);
}

uint64_t (*sub_1C240BC00())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C240BC68()
{
  return sub_1C223A124(&OBJC_IVAR___HRUITableViewSection_headerString);
}

uint64_t sub_1C240BC80(uint64_t a1, uint64_t a2)
{
  return sub_1C2239780(a1, a2, &OBJC_IVAR___HRUITableViewSection_headerString);
}

uint64_t (*sub_1C240BC8C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C240BCF4()
{
  return sub_1C223A124(&OBJC_IVAR___HRUITableViewSection_footerString);
}

uint64_t sub_1C240BD0C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v6 = sub_1C254F470();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  *uint64_t v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C240BD88(uint64_t a1, uint64_t a2)
{
  return sub_1C2239780(a1, a2, &OBJC_IVAR___HRUITableViewSection_footerString);
}

uint64_t (*sub_1C240BD94())()
{
  return j_j__swift_endAccess;
}

id sub_1C240BE10(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = swift_beginAccess();
  a4(v5);
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C240BE94()
{
  return sub_1C240BEA0();
}

uint64_t sub_1C240BEA0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C240BF08(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void *a5)
{
  a4();
  uint64_t v7 = sub_1C254F710();
  uint64_t v8 = (uint64_t *)(a1 + *a5);
  swift_beginAccess();
  *uint64_t v8 = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C240BF80(uint64_t a1)
{
  return sub_1C240BF8C(a1, &OBJC_IVAR___HRUITableViewSection_rows);
}

uint64_t sub_1C240BF8C(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  *uint64_t v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C240BFDC(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void *)(*a2 + *a5);
  swift_beginAccess();
  *uint64_t v6 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C240C044())()
{
  return j_j__swift_endAccess;
}

void *sub_1C240C0EC()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___HRUITableViewSection_estimatedNumRows);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1C240C19C(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___HRUITableViewSection_estimatedNumRows);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

void sub_1C240C1F0(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void **)(*a2 + OBJC_IVAR___HRUITableViewSection_estimatedNumRows);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = v2;
  id v5 = v2;
}

uint64_t (*sub_1C240C254())()
{
  return j_j__swift_endAccess;
}

id TableViewSection.init(identifier:)(uint64_t a1, uint64_t a2)
{
  id v5 = &v2[OBJC_IVAR___HRUITableViewSection_identifier];
  *(void *)id v5 = 0;
  *((void *)v5 + 1) = 0;
  uint64_t v6 = &v2[OBJC_IVAR___HRUITableViewSection_headerString];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  uint64_t v7 = &v2[OBJC_IVAR___HRUITableViewSection_footerString];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  *(void *)&v2[OBJC_IVAR___HRUITableViewSection_rows] = MEMORY[0x1E4FBC860];
  *(void *)&v2[OBJC_IVAR___HRUITableViewSection_estimatedNumRows] = 0;
  swift_beginAccess();
  *(void *)id v5 = a1;
  *((void *)v5 + 1) = a2;
  swift_bridgeObjectRelease();
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for TableViewSection();
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1C240C3A8(void *a1)
{
  return sub_1C240C3B4(a1, &OBJC_IVAR___HRUITableViewSection_rows);
}

uint64_t sub_1C240C3B4(void *a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  id v5 = a1;
  MEMORY[0x1C8757C00]();
  if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  return swift_endAccess();
}

uint64_t type metadata accessor for TableViewSection()
{
  return self;
}

uint64_t type metadata accessor for TableViewRow()
{
  return self;
}

void sub_1C240C4A4(char *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6 = &a1[*a4];
  swift_beginAccess();
  id v7 = a3;
  uint64_t v8 = a1;
  MEMORY[0x1C8757C00]();
  if (*(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8)
                                                                              + 0x18) >> 1)
    sub_1C254F760();
  sub_1C254F790();
  sub_1C254F730();
  swift_endAccess();
}

uint64_t sub_1C240C558(uint64_t a1, uint64_t a2)
{
  id v5 = (objc_class *)type metadata accessor for TableViewRow();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  id v7 = &v6[OBJC_IVAR___HRUITableViewRow_reuseIdentifier];
  *(void *)id v7 = a1;
  *((void *)v7 + 1) = a2;
  v11.receiver = v6;
  v11.super_class = v5;
  swift_bridgeObjectRetain();
  objc_msgSendSuper2(&v11, sel_init);
  uint64_t v8 = (void *)(v2 + OBJC_IVAR___HRUITableViewSection_rows);
  uint64_t v9 = swift_beginAccess();
  MEMORY[0x1C8757C00](v9);
  if (*(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  return swift_endAccess();
}

void TableViewSection.init()()
{
}

id TableViewSection.__deallocating_deinit()
{
  return sub_1C240CA1C(type metadata accessor for TableViewSection);
}

uint64_t TableViewRow.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___HRUITableViewRow_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id TableViewRow.init(reuseIdentifier:)(uint64_t a1, uint64_t a2)
{
  id v3 = &v2[OBJC_IVAR___HRUITableViewRow_reuseIdentifier];
  *(void *)id v3 = a1;
  *((void *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for TableViewRow();
  return objc_msgSendSuper2(&v5, sel_init);
}

id TableViewRow.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void TableViewRow.init()()
{
}

id TableViewRow.__deallocating_deinit()
{
  return sub_1C240CA1C(type metadata accessor for TableViewRow);
}

id sub_1C240CA1C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1C240CA54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR___HRUITableViewSectionConfiguration_sections, a2);
}

uint64_t sub_1C240CA60(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C240BFDC(a1, a2, a3, a4, &OBJC_IVAR___HRUITableViewSectionConfiguration_sections);
}

uint64_t sub_1C240CA80@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR___HRUITableViewSection_identifier, a2);
}

uint64_t sub_1C240CA8C(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2239700(a1, a2, a3, a4, &OBJC_IVAR___HRUITableViewSection_identifier);
}

uint64_t sub_1C240CAAC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR___HRUITableViewSection_headerString, a2);
}

uint64_t sub_1C240CAB8(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2239700(a1, a2, a3, a4, &OBJC_IVAR___HRUITableViewSection_headerString);
}

uint64_t sub_1C240CAD8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR___HRUITableViewSection_footerString, a2);
}

uint64_t sub_1C240CAE4(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2239700(a1, a2, a3, a4, &OBJC_IVAR___HRUITableViewSection_footerString);
}

uint64_t sub_1C240CB04@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR___HRUITableViewSection_rows, a2);
}

uint64_t keypath_getTm_0@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  uint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C240CB64(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C240BFDC(a1, a2, a3, a4, &OBJC_IVAR___HRUITableViewSection_rows);
}

id sub_1C240CB84@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  objc_super v3 = (void **)(*a1 + OBJC_IVAR___HRUITableViewSection_estimatedNumRows);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for TableViewSectionConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TableViewSectionConfiguration);
}

uint64_t dispatch thunk of TableViewSectionConfiguration.sections.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.sections.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.sections.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.add(section:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.addSection(identifier:firstRowReuseIdentifier:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.addSection(identifier:rowReuseIdentifiers:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.removeAllSections()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.numberOfRows(in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TableViewSectionConfiguration.row(at:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t method lookup function for TableViewSection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TableViewSection);
}

uint64_t dispatch thunk of TableViewSection.identifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of TableViewSection.identifier.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of TableViewSection.identifier.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TableViewSection.headerString.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TableViewSection.headerString.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of TableViewSection.headerString.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of TableViewSection.footerString.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of TableViewSection.footerString.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of TableViewSection.footerString.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of TableViewSection.rows.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of TableViewSection.rows.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of TableViewSection.rows.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of TableViewSection.estimatedNumRows.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of TableViewSection.estimatedNumRows.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of TableViewSection.estimatedNumRows.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of TableViewSection.__allocating_init(identifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of TableViewSection.add(row:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of TableViewSection.addRow(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t method lookup function for TableViewRow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TableViewRow);
}

uint64_t dispatch thunk of TableViewRow.__allocating_init(reuseIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

id ContentStatusCell.spinner.getter()
{
  return *(id *)(v0 + OBJC_IVAR___HRContentStatusCell_spinner);
}

id ContentStatusCell.titleLabel.getter()
{
  return *(id *)(v0 + OBJC_IVAR___HRContentStatusCell_titleLabel);
}

id ContentStatusCell.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id ContentStatusCell.init()()
{
  uint64_t v1 = OBJC_IVAR___HRContentStatusCell_spinner;
  id v2 = objc_allocWithZone(MEMORY[0x1E4FB1400]);
  objc_super v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_initWithActivityIndicatorStyle_, 100);
  uint64_t v4 = OBJC_IVAR___HRContentStatusCell_titleLabel;
  objc_super v5 = self;
  id v6 = objc_msgSend(v5, sel_labelColor);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v7, sel_setFont_, 0);
  objc_msgSend(v7, sel_setNumberOfLines_, 1);
  objc_msgSend(v7, sel_setTextColor_, v6);

  *(void *)&v3[v4] = v7;
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for ContentStatusCell();
  id v8 = objc_msgSendSuper2(&v13, sel_initWithStyle_reuseIdentifier_, 0, 0);
  id v9 = objc_msgSend(v5, sel_systemGroupedBackgroundColor);
  objc_msgSend(v8, sel_setBackgroundColor_, v9);

  id v10 = objc_msgSend(v8, sel_contentView);
  id v11 = objc_msgSend(v5, sel_systemGroupedBackgroundColor);
  objc_msgSend(v10, sel_setBackgroundColor_, v11);

  sub_1C240D46C();
  return v8;
}

uint64_t type metadata accessor for ContentStatusCell()
{
  return self;
}

void sub_1C240D46C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___HRContentStatusCell_spinner];
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v1, sel_setHidesWhenStopped_, 1);
  objc_msgSend(v1, sel_setAlpha_, 0.4);
  id v2 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v2, sel_addSubview_, v1);

  objc_super v3 = *(void **)&v0[OBJC_IVAR___HRContentStatusCell_titleLabel];
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v3, sel_setAlpha_, 0.4);
  id v4 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  objc_msgSend(v4, sel_addSubview_, v3);

  id v5 = objc_msgSend(v1, sel_topAnchor);
  id v6 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v7 = objc_msgSend(v6, sel_topAnchor);

  id v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v7, 16.0);
  objc_msgSend(v8, sel_setActive_, 1);

  id v9 = objc_msgSend(v1, sel_centerXAnchor);
  id v10 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v11 = objc_msgSend(v10, sel_centerXAnchor);

  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
  objc_msgSend(v12, sel_setActive_, 1);

  id v13 = objc_msgSend(v3, sel_topAnchor);
  id v14 = objc_msgSend(v1, sel_bottomAnchor);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, 8.0);

  objc_msgSend(v15, sel_setActive_, 1);
  id v16 = objc_msgSend(v3, sel_centerXAnchor);
  id v17 = objc_msgSend(v0, sel_contentView);
  id v18 = objc_msgSend(v17, sel_centerXAnchor);

  id v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  objc_msgSend(v19, sel_setActive_, 1);

  id v20 = objc_msgSend(v3, sel_bottomAnchor);
  id v21 = objc_msgSend(v0, sel_contentView);
  id v22 = objc_msgSend(v21, sel_bottomAnchor);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v22, -16.0);
  objc_msgSend(v23, sel_setActive_, 1);
}

id ContentStatusCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  if (a3)
  {
    id v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

void ContentStatusCell.init(style:reuseIdentifier:)()
{
}

id ContentStatusCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContentStatusCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for ContentStatusCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ContentStatusCell);
}

void sub_1C240D9AC()
{
  uint64_t v1 = OBJC_IVAR___HRContentStatusCell_spinner;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
  uint64_t v2 = OBJC_IVAR___HRContentStatusCell_titleLabel;
  id v3 = objc_msgSend(self, sel_labelColor);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v4, sel_setFont_, 0);
  objc_msgSend(v4, sel_setNumberOfLines_, 1);
  objc_msgSend(v4, sel_setTextColor_, v3);

  *(void *)&v0[v2] = v4;
  sub_1C25505F0();
  __break(1u);
}

uint64_t sub_1C240DAD8()
{
  return sub_1C223A124(&OBJC_IVAR___HRSideBySideLabelCell_title);
}

void sub_1C240DAFC(uint64_t a1, uint64_t a2)
{
}

void (*sub_1C240DB10(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HRSideBySideLabelCell_title;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C240DB7C;
}

void sub_1C240DB7C(void **a1, char a2)
{
}

uint64_t sub_1C240DB94()
{
  return sub_1C223A124(&OBJC_IVAR___HRSideBySideLabelCell_detail);
}

void sub_1C240DBB8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (a3)
  {
    uint64_t v6 = sub_1C254F470();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  id v9 = a1;
  a4(v6, v8);
}

void sub_1C240DC40(uint64_t a1, uint64_t a2)
{
}

void sub_1C240DC54(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = (void *)(v4 + *a3);
  swift_beginAccess();
  *uint64_t v8 = a1;
  v8[1] = a2;
  swift_bridgeObjectRelease();
  id v9 = *(void **)(v4 + *a4);
  if (v8[1])
  {
    swift_bridgeObjectRetain();
    id v10 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v10 = 0;
  }
  objc_msgSend(v9, sel_setText_, v10);
}

void (*sub_1C240DD10(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HRSideBySideLabelCell_detail;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C240DD7C;
}

void sub_1C240DD7C(void **a1, char a2)
{
}

void sub_1C240DD88(void **a1, char a2, void *a3)
{
  id v5 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v5[3];
    uint64_t v7 = *(void **)(v6 + *a3);
    if (*(void *)(v6 + v5[4] + 8))
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = 0;
    }
    objc_msgSend(v7, sel_setText_, v8);
  }
  free(v5);
}

id SideBySideLabelCell.__allocating_init(reuseIdentifier:)()
{
  id v1 = objc_allocWithZone(v0);
  uint64_t v2 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithStyle_reuseIdentifier_, 0, v2);

  id v4 = v3;
  sub_1C240DF9C();

  return v4;
}

id SideBySideLabelCell.init(reuseIdentifier:)()
{
  id v1 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithStyle_reuseIdentifier_, 0, v1);

  id v3 = v2;
  sub_1C240DF9C();

  return v3;
}

id sub_1C240DF9C()
{
  id v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR___HRSideBySideLabelCell_titleLabel];
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v3 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v3, sel_addSubview_, v2);

  id v4 = *(void **)&v1[OBJC_IVAR___HRSideBySideLabelCell_detailLabel];
  id v5 = objc_msgSend(self, sel_systemGrayColor);
  objc_msgSend(v4, sel_setTextColor_, v5);

  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v6 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v6, sel_addSubview_, v4);

  uint64_t v7 = *(void **)&v1[OBJC_IVAR___HRSideBySideLabelCell_chevronView];
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v8 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v8, sel_addSubview_, v7);

  id v9 = objc_msgSend(v2, sel_leadingAnchor);
  id v10 = objc_msgSend(v1, sel_pillBackgroundView);
  id v11 = objc_msgSend(v10, sel_leadingAnchor);

  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, 16.0);
  objc_msgSend(v12, sel_setActive_, 1);

  id v13 = objc_msgSend(v4, sel_leadingAnchor);
  id v14 = objc_msgSend(v2, sel_trailingAnchor);
  id v15 = objc_msgSend(v13, sel_constraintGreaterThanOrEqualToAnchor_constant_, v14, 8.0);

  objc_msgSend(v15, sel_setActive_, 1);
  id v16 = objc_msgSend(v7, sel_leadingAnchor);
  id v17 = objc_msgSend(v4, sel_trailingAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, 8.0);

  objc_msgSend(v18, sel_setActive_, 1);
  id v19 = objc_msgSend(v7, sel_trailingAnchor);
  id v20 = objc_msgSend(v1, sel_pillBackgroundView);
  id v21 = objc_msgSend(v20, sel_trailingAnchor);

  id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, -16.0);
  objc_msgSend(v22, sel_setActive_, 1);

  id v23 = objc_msgSend(v2, sel_firstBaselineAnchor);
  id v24 = objc_msgSend(v1, sel_pillBackgroundView);
  id v25 = objc_msgSend(v24, sel_topAnchor);

  id v26 = self;
  uint64_t v27 = *MEMORY[0x1E4FB28C8];
  id v28 = objc_msgSend(v26, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v28, sel__scaledValueForValue_, 28.0);
  double v30 = v29;

  id v31 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, v30);
  objc_msgSend(v31, sel_setActive_, 1);

  id v32 = objc_msgSend(v2, sel_lastBaselineAnchor);
  id v33 = objc_msgSend(v1, sel_pillBackgroundView);
  id v34 = objc_msgSend(v33, sel_bottomAnchor);

  id v35 = objc_msgSend(v26, sel_preferredFontForTextStyle_, v27);
  objc_msgSend(v35, sel__scaledValueForValue_, 18.0);
  double v37 = v36;

  id v38 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, -v37);
  objc_msgSend(v38, sel_setActive_, 1);

  id v39 = objc_msgSend(v4, sel_lastBaselineAnchor);
  id v40 = objc_msgSend(v2, sel_lastBaselineAnchor);
  id v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v40);

  objc_msgSend(v41, sel_setActive_, 1);
  id v42 = objc_msgSend(v7, sel_lastBaselineAnchor);
  id v43 = objc_msgSend(v2, sel_lastBaselineAnchor);
  id v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

  objc_msgSend(v44, sel_setActive_, 1);
  LODWORD(v45) = 1148846080;
  objc_msgSend(v4, sel_setContentHuggingPriority_forAxis_, 0, v45);
  LODWORD(v46) = 1148846080;
  return objc_msgSend(v7, sel_setContentHuggingPriority_forAxis_, 0, v46);
}

id SideBySideLabelCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  if (a3)
  {
    id v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id SideBySideLabelCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR___HRSideBySideLabelCell_titleLabel;
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  id v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_init);
  uint64_t v9 = OBJC_IVAR___HRSideBySideLabelCell_detailLabel;
  *(void *)&v8[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v10 = OBJC_IVAR___HRSideBySideLabelCell_chevronView;
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  objc_msgSend(v11, sel_setContentMode_, 4);
  sub_1C2335510();
  id v12 = (void *)sub_1C254FEF0();
  objc_msgSend(v11, sel_setImage_, v12);

  id v13 = objc_msgSend(self, sel_tertiaryLabelColor);
  objc_msgSend(v11, sel_setTintColor_, v13);

  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v14) = 1148846080;
  objc_msgSend(v11, sel_setContentHuggingPriority_forAxis_, 0, v14);
  LODWORD(v15) = 1148846080;
  objc_msgSend(v11, sel_setContentCompressionResistancePriority_forAxis_, 0, v15);
  *(void *)&v8[v10] = v11;
  id v16 = &v8[OBJC_IVAR___HRSideBySideLabelCell_title];
  *(void *)id v16 = 0;
  *((void *)v16 + 1) = 0;
  id v17 = &v8[OBJC_IVAR___HRSideBySideLabelCell_detail];
  *(void *)id v17 = 0;
  *((void *)v17 + 1) = 0;

  if (a3)
  {
    id v18 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v18 = 0;
  }
  v21.receiver = v8;
  v21.super_class = (Class)type metadata accessor for SideBySideLabelCell();
  id v19 = objc_msgSendSuper2(&v21, sel_initWithStyle_reuseIdentifier_, a1, v18);

  return v19;
}

uint64_t type metadata accessor for SideBySideLabelCell()
{
  return self;
}

id SideBySideLabelCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id SideBySideLabelCell.init(coder:)(void *a1)
{
  uint64_t v3 = OBJC_IVAR___HRSideBySideLabelCell_titleLabel;
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  id v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  uint64_t v6 = OBJC_IVAR___HRSideBySideLabelCell_detailLabel;
  *(void *)&v5[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v7 = OBJC_IVAR___HRSideBySideLabelCell_chevronView;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  objc_msgSend(v8, sel_setContentMode_, 4);
  sub_1C2335510();
  uint64_t v9 = (void *)sub_1C254FEF0();
  objc_msgSend(v8, sel_setImage_, v9);

  id v10 = objc_msgSend(self, sel_tertiaryLabelColor);
  objc_msgSend(v8, sel_setTintColor_, v10);

  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v11) = 1148846080;
  objc_msgSend(v8, sel_setContentHuggingPriority_forAxis_, 0, v11);
  LODWORD(v12) = 1148846080;
  objc_msgSend(v8, sel_setContentCompressionResistancePriority_forAxis_, 0, v12);
  *(void *)&v5[v7] = v8;
  id v13 = &v5[OBJC_IVAR___HRSideBySideLabelCell_title];
  *(void *)id v13 = 0;
  *((void *)v13 + 1) = 0;
  double v14 = &v5[OBJC_IVAR___HRSideBySideLabelCell_detail];
  *(void *)double v14 = 0;
  *((void *)v14 + 1) = 0;

  v17.receiver = v5;
  v17.super_class = (Class)type metadata accessor for SideBySideLabelCell();
  id v15 = objc_msgSendSuper2(&v17, sel_initWithCoder_, a1);

  return v15;
}

id SideBySideLabelCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SideBySideLabelCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C240EBB8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR___HRSideBySideLabelCell_title, a2);
}

uint64_t sub_1C240EBC4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_2(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C240DAFC);
}

uint64_t sub_1C240EBDC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR___HRSideBySideLabelCell_detail, a2);
}

uint64_t sub_1C240EBE8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_2(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C240DC40);
}

uint64_t keypath_setTm_2(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t method lookup function for SideBySideLabelCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SideBySideLabelCell);
}

uint64_t dispatch thunk of SideBySideLabelCell.title.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of SideBySideLabelCell.title.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of SideBySideLabelCell.title.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of SideBySideLabelCell.detail.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SideBySideLabelCell.detail.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of SideBySideLabelCell.detail.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t type metadata accessor for InternalDetailsDataSource(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E31E0);
}

uint64_t sub_1C240EE3C()
{
  return swift_initClassMetadata2();
}

void sub_1C240EE7C()
{
}

void sub_1C240EE98()
{
}

void sub_1C240EEB4()
{
}

uint64_t sub_1C240EEE0()
{
  sub_1C254D3B0();
  return swift_deallocClassInstance();
}

uint64_t sub_1C240EF10()
{
  return type metadata accessor for InternalDetailsDataSource(0);
}

uint64_t sub_1C240EF18()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DA90();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C240EFEC()
{
  return sub_1C254E160();
}

uint64_t sub_1C240F048@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C254E890();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C254E820();
  uint64_t v3 = sub_1C254D2A0();
  swift_allocObject();
  uint64_t v4 = sub_1C254D280();
  a1[3] = v3;
  uint64_t result = sub_1C2410BEC((unint64_t *)&qword_1EBB6E7D8, MEMORY[0x1E4F66208]);
  a1[4] = result;
  *a1 = v4;
  return result;
}

void sub_1C240F168()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI33InternalGatewayVersionsDetailItem_gateway);
}

uint64_t sub_1C240F1A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI23TitleSubtitleDetailItem_uuid;
  uint64_t v2 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return v0;
}

uint64_t sub_1C240F258()
{
  sub_1C240F1A8();
  return swift_deallocClassInstance();
}

uint64_t sub_1C240F2B0()
{
  return type metadata accessor for InternalGatewayVersionsDetailItem(0);
}

uint64_t type metadata accessor for InternalGatewayVersionsDetailItem(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E3200);
}

uint64_t sub_1C240F2D8()
{
  return swift_updateClassMetadata2();
}

void sub_1C240F32C(uint64_t a1, void *a2)
{
}

uint64_t sub_1C240F354()
{
  return sub_1C2410BEC(&qword_1EA2E3210, (void (*)(uint64_t))type metadata accessor for InternalDetailsDataSource);
}

void sub_1C240F39C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC15HealthRecordsUI33InternalGatewayVersionsDetailItem_gateway);
  id v5 = objc_msgSend(v4, sel_gatewayVersions);
  if (v5)
  {
    uint64_t v6 = v5;
    sub_1C23FD7C4();
    unint64_t v7 = sub_1C254F710();

    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1C2550620();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v8)
    {
      uint64_t v9 = *(void **)(*(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI33InternalGatewayVersionsDetailItem_manager)
                    + 16);
      sub_1C2410D24();
      objc_allocWithZone(v10);
      id v11 = v9;
      id v12 = v4;
      id v13 = a1;
      id v14 = v11;
      id v15 = v12;
      id v16 = v13;
      objc_super v17 = (void *)sub_1C254EEB0();
      objc_msgSend(v16, sel_showViewController_sender_, v17, v2);
    }
  }
}

uint64_t sub_1C240F4F8(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C2410CC0(0, &qword_1EA2DE9F0, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v54 - v7;
  uint64_t v9 = sub_1C254E600();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v59 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C254E5A0();
  uint64_t v58 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)((char *)v3 + OBJC_IVAR____TtC15HealthRecordsUI33InternalGatewayVersionsDetailItem_gateway) = a1;
  *(void *)((char *)v3 + OBJC_IVAR____TtC15HealthRecordsUI33InternalGatewayVersionsDetailItem_manager) = a2;
  id v14 = a1;
  swift_retain();
  id v15 = objc_msgSend(v14, sel_gatewayVersions);
  if (v15)
  {
    id v16 = v15;
    sub_1C23FD7C4();
    unint64_t v17 = sub_1C254F710();

    if (!(v17 >> 62))
    {
LABEL_3:
      uint64_t v62 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    unint64_t v17 = MEMORY[0x1E4FBC860];
    if (!(MEMORY[0x1E4FBC860] >> 62)) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v62 = sub_1C2550620();
  swift_bridgeObjectRelease();
LABEL_4:
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v14, sel_gatewayVersions);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (v18)
  {
    id v20 = v18;
    sub_1C23FD7C4();
    unint64_t v21 = sub_1C254F710();

    if (!(v21 >> 62)) {
      goto LABEL_6;
    }
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1C2550620();
    swift_bridgeObjectRelease();
    uint64_t v60 = v12;
    uint64_t v61 = v3;
    if (v22) {
      goto LABEL_7;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x1E4FBC860];
    goto LABEL_21;
  }
  unint64_t v21 = MEMORY[0x1E4FBC860];
  if (MEMORY[0x1E4FBC860] >> 62) {
    goto LABEL_19;
  }
LABEL_6:
  uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v60 = v12;
  uint64_t v61 = v3;
  if (!v22) {
    goto LABEL_20;
  }
LABEL_7:
  uint64_t v66 = v19;
  uint64_t result = sub_1C2274764(0, v22 & ~(v22 >> 63), 0);
  if (v22 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v54 = v8;
  uint64_t v55 = v10;
  uint64_t v56 = v9;
  uint64_t v24 = 0;
  uint64_t v25 = v66;
  do
  {
    if ((v21 & 0xC000000000000001) != 0) {
      id v26 = (id)MEMORY[0x1C87588E0](v24, v21);
    }
    else {
      id v26 = *(id *)(v21 + 8 * v24 + 32);
    }
    uint64_t v27 = v26;
    id v28 = objc_msgSend(v26, sel_FHIRVersion, v54, v55, v56);
    id v29 = objc_msgSend(v28, sel_FHIRRelease);

    uint64_t v30 = sub_1C254F470();
    uint64_t v32 = v31;

    uint64_t v66 = v25;
    unint64_t v34 = *(void *)(v25 + 16);
    unint64_t v33 = *(void *)(v25 + 24);
    if (v34 >= v33 >> 1)
    {
      sub_1C2274764(v33 > 1, v34 + 1, 1);
      uint64_t v25 = v66;
    }
    ++v24;
    *(void *)(v25 + 16) = v34 + 1;
    unint64_t v35 = v25 + 16 * v34;
    *(void *)(v35 + 32) = v30;
    *(void *)(v35 + 40) = v32;
  }
  while (v22 != v24);
  swift_bridgeObjectRelease();
  uint64_t v10 = v55;
  uint64_t v9 = v56;
  uint64_t v8 = v54;
LABEL_21:
  uint64_t v36 = v62;
  uint64_t v64 = v62;
  uint64_t v66 = sub_1C2550810();
  uint64_t v67 = v37;
  sub_1C254F5A0();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  if (*(void *)(v25 + 16))
  {
    uint64_t v64 = 10272;
    unint64_t v65 = 0xE200000000000000;
    uint64_t v63 = v25;
    sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
    sub_1C226BF44();
    sub_1C254F390();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    sub_1C254F5A0();
  }
  swift_bridgeObjectRelease();
  id v38 = v61;
  if (v36 < 1)
  {
    uint64_t v39 = MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1C2410CC0(0, &qword_1EA2DE9D8, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
    sub_1C254E620();
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1C255CD90;
    id v41 = v57;
    uint64_t v40 = v58;
    uint64_t v42 = v60;
    (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, *MEMORY[0x1E4FB0E18], v60);
    uint64_t v43 = sub_1C254E5B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v8, 1, 1, v43);
    id v44 = v59;
    sub_1C254E5F0();
    sub_1C254E5C0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v44, v9);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  }
  uint64_t v45 = v66;
  uint64_t v46 = v67;
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBBE00]);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1C255CDA0;
  *(void *)(v47 + 32) = sub_1C254F470();
  *(void *)(v47 + 40) = v48;
  *(void *)(v47 + 48) = 0xD000000000000010;
  *(void *)(v47 + 56) = 0x80000001C25847D0;
  uint64_t v49 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v50 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v50)
  {
    uint64_t v51 = sub_1C254F470();
    uint64_t v53 = v52;
  }
  else
  {
    uint64_t v51 = 0;
    uint64_t v53 = 0;
  }
  sub_1C254CB30();
  v38[2] = 0xD000000000000010;
  v38[3] = 0x80000001C25847D0;
  v38[4] = v45;
  void v38[5] = v46;
  v38[6] = 0;
  void v38[7] = v39;
  v38[8] = v51;
  v38[9] = v53;
  return (uint64_t)v38;
}

uint64_t sub_1C240FCC0(void *a1, uint64_t a2)
{
  uint64_t v120 = a2;
  uint64_t v124 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v124 - 8);
  MEMORY[0x1F4188790](v124);
  id v5 = (char *)v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2410CC0(0, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  char v121 = (char *)v112 - v7;
  uint64_t v8 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  uint64_t v123 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C254CBD0();
  unint64_t v122 = *(void **)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = (void *)MEMORY[0x1E4FBC860];
  id v14 = a1;
  id v15 = objc_msgSend(a1, sel_provenance);
  id v16 = objc_msgSend(v15, sel_type);

  if (!v16)
  {
    unint64_t v116 = v10;
    *(void *)&long long v117 = v11;
    uint64_t v115 = v8;
    uint64_t v118 = v5;
    uint64_t v119 = v3;
    unint64_t v17 = objc_msgSend(v14, sel_gateway);
    if (v17)
    {
      id v18 = v17;
      uint64_t v114 = v14;
      sub_1C254CBC0();
      id v19 = objc_msgSend(v18, sel_country);
      sub_1C254F470();

      uint64_t v20 = sub_1C254CB70();
      uint64_t v22 = v21;
      swift_bridgeObjectRelease();
      ((void (*)(char *, void))v122[1])(v13, v117);
      uint64_t v23 = MEMORY[0x1E4FBB1A0];
      unint64_t v122 = v18;
      if (v22)
      {
        sub_1C2410CC0(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
        uint64_t v24 = swift_allocObject();
        long long v117 = xmmword_1C255CDA0;
        *(_OWORD *)(v24 + 16) = xmmword_1C255CDA0;
        *(void *)(v24 + 56) = v23;
        unint64_t v25 = sub_1C220D950();
        *(void *)(v24 + 64) = v25;
        *(void *)(v24 + 32) = v20;
        *(void *)(v24 + 40) = v22;
        id v26 = objc_msgSend(v18, (SEL)&selRef_setCornerContentsMasksEdges_);
        uint64_t v27 = sub_1C254F470();
        uint64_t v29 = v28;

        *(void *)(v24 + 96) = v23;
        *(void *)(v24 + 104) = v25;
        *(void *)(v24 + 72) = v27;
        *(void *)(v24 + 80) = v29;
        uint64_t v30 = sub_1C254F4B0();
        uint64_t v32 = v31;
        sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBBE00]);
        uint64_t v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = v117;
        *(void *)(v33 + 32) = sub_1C254F470();
        *(void *)(v33 + 40) = v34;
        *(void *)(v33 + 48) = 0x2079617765746147;
        *(void *)(v33 + 56) = 0xEF7972746E756F43;
        unint64_t v35 = (void *)sub_1C254F700();
        swift_bridgeObjectRelease();
        id v36 = (id)HKUIJoinStringsForAutomationIdentifier();

        uint64_t v37 = v32;
        if (v36)
        {
          uint64_t v38 = sub_1C254F470();
          uint64_t v40 = v39;
        }
        else
        {
          uint64_t v38 = 0;
          uint64_t v40 = 0;
        }
        uint64_t v41 = type metadata accessor for TitleSubtitleDetailItem(0);
        uint64_t v42 = (void *)swift_allocObject();
        sub_1C254CB30();
        v42[2] = 0x2079617765746147;
        v42[3] = 0xEF7972746E756F43;
        v42[4] = v30;
        v42[5] = v37;
        v42[6] = 0;
        v42[7] = MEMORY[0x1E4FBC860];
        v42[8] = v38;
        v42[9] = v40;
        uint64_t v43 = v128;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v43 = sub_1C226CD5C(0, v43[2] + 1, 1, v43);
        }
        unint64_t v45 = v43[2];
        unint64_t v44 = v43[3];
        if (v45 >= v44 >> 1) {
          uint64_t v43 = sub_1C226CD5C((void *)(v44 > 1), v45 + 1, 1, v43);
        }
        uint64_t v126 = v41;
        uint64_t v127 = sub_1C2410BEC(&qword_1EA2DF188, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItem);
        *(void *)&long long v125 = v42;
        v43[2] = v45 + 1;
        sub_1C21F44EC(&v125, (uint64_t)&v43[5 * v45 + 4]);
        swift_release();
        uint64_t v128 = v43;
        id v18 = v122;
      }
      id v46 = objc_msgSend(v18, sel_FHIRVersion);
      sub_1C2410CC0(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
      uint64_t v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_1C255D0E0;
      id v48 = objc_msgSend(v46, sel_FHIRRelease);
      uint64_t v49 = sub_1C254F470();
      uint64_t v51 = v50;

      *(void *)(v47 + 56) = v23;
      unint64_t v52 = sub_1C220D950();
      *(void *)(v47 + 64) = v52;
      *(void *)(v47 + 32) = v49;
      *(void *)(v47 + 40) = v51;
      *(void *)&long long v117 = v46;
      id v53 = objc_msgSend(v46, sel_stringRepresentation);
      uint64_t v54 = sub_1C254F470();
      uint64_t v56 = v55;

      *(void *)(v47 + 96) = v23;
      *(void *)(v47 + 104) = v52;
      *(void *)(v47 + 72) = v54;
      *(void *)(v47 + 80) = v56;
      id v57 = objc_msgSend(v18, sel_minCompatibleAPIVersion);
      uint64_t v58 = MEMORY[0x1E4FBB5C8];
      *(void *)(v47 + 136) = MEMORY[0x1E4FBB550];
      *(void *)(v47 + 144) = v58;
      *(void *)(v47 + 112) = v57;
      uint64_t v59 = sub_1C254F4B0();
      uint64_t v61 = v60;
      sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBBE00]);
      v112[0] = v62;
      uint64_t v63 = swift_allocObject();
      long long v113 = xmmword_1C255CDA0;
      *(_OWORD *)(v63 + 16) = xmmword_1C255CDA0;
      v112[1] = @"UIA.Health.HealthRecords";
      *(void *)(v63 + 32) = sub_1C254F470();
      *(void *)(v63 + 40) = v64;
      *(void *)(v63 + 48) = 0xD000000000000013;
      *(void *)(v63 + 56) = 0x80000001C2584770;
      unint64_t v65 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v66 = (id)HKUIJoinStringsForAutomationIdentifier();

      if (v66)
      {
        uint64_t v67 = sub_1C254F470();
        uint64_t v69 = v68;
      }
      else
      {
        uint64_t v67 = 0;
        uint64_t v69 = 0;
      }
      uint64_t v70 = type metadata accessor for TitleSubtitleDetailItem(0);
      id v71 = (void *)swift_allocObject();
      sub_1C254CB30();
      v71[2] = 0xD000000000000013;
      v71[3] = 0x80000001C2584770;
      v71[4] = v59;
      v71[5] = v61;
      v71[6] = 0;
      v71[7] = MEMORY[0x1E4FBC860];
      v71[8] = v67;
      v71[9] = v69;
      uint64_t v126 = v70;
      uint64_t v72 = sub_1C2410BEC(&qword_1EA2DF188, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItem);
      uint64_t v127 = v72;
      *(void *)&long long v125 = v71;
      uint64_t v73 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v73 = sub_1C226CD5C(0, v73[2] + 1, 1, v73);
        uint64_t v128 = v73;
      }
      uint64_t v74 = v114;
      uint64_t v75 = v115;
      uint64_t v76 = v120;
      id v77 = v121;
      unint64_t v79 = v73[2];
      unint64_t v78 = v73[3];
      if (v79 >= v78 >> 1) {
        uint64_t v128 = sub_1C226CD5C((void *)(v78 > 1), v79 + 1, 1, v73);
      }
      uint64_t v80 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v125, v70);
      MEMORY[0x1F4188790](v80);
      uint64_t v82 = (char *)v112 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v83 + 16))(v82);
      uint64_t v120 = v72;
      sub_1C2507304(v79, (uint64_t)v82, (uint64_t *)&v128, v70, v72);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v125);
      uint64_t v84 = v128;
      uint64_t v85 = type metadata accessor for InternalGatewayVersionsDetailItem(0);
      swift_allocObject();
      uint64_t v86 = v122;
      swift_retain();
      uint64_t v87 = sub_1C240F4F8(v86, v76);
      char v121 = (char *)v86;

      swift_release();
      unint64_t v89 = v84[2];
      unint64_t v88 = v84[3];
      unint64_t v122 = v84;
      if (v89 >= v88 >> 1) {
        unint64_t v122 = sub_1C226CD5C((void *)(v88 > 1), v89 + 1, 1, v122);
      }
      uint64_t v126 = v85;
      uint64_t v127 = sub_1C2410BEC(&qword_1EA2E3218, (void (*)(uint64_t))type metadata accessor for InternalGatewayVersionsDetailItem);
      *(void *)&long long v125 = v87;
      int v90 = v122;
      v122[2] = v89 + 1;
      sub_1C21F44EC(&v125, (uint64_t)&v90[5 * v89 + 4]);
      uint64_t v128 = v90;
      sub_1C22AD574(v74, 0, 0, 0, (uint64_t)v77);
      if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v123 + 48))(v77, 1, v75) == 1)
      {

        sub_1C2410C34((uint64_t)v77);
        id v5 = v118;
        uint64_t v3 = v119;
        goto LABEL_40;
      }
      uint64_t v91 = (uint64_t)v116;
      sub_1C2223DC4((uint64_t)v77, (uint64_t)v116);
      switch(*(void *)(v91 + *(int *)(v75 + 20)))
      {
        case 0:
          unint64_t v92 = 0xE500000000000000;
          unint64_t v93 = 0x6E69676F6CLL;
          break;
        case 1:
          unint64_t v92 = 0x80000001C2579C20;
          unint64_t v93 = 0xD000000000000013;
          break;
        case 2:
          unint64_t v92 = 0xED00006564617267;
          unint64_t v93 = 0x70752065706F6373;
          break;
        case 3:
          unint64_t v93 = 0xD00000000000001FLL;
          unint64_t v92 = 0x80000001C2579C00;
          break;
        default:
          unint64_t v93 = 0x2079617765746167;
          unint64_t v92 = 0xEF65646172677075;
          break;
      }
      uint64_t v94 = MEMORY[0x1E4FBC860];
      uint64_t v95 = v122;
      uint64_t v96 = swift_allocObject();
      *(_OWORD *)(v96 + 16) = v113;
      *(void *)(v96 + 32) = sub_1C254F470();
      *(void *)(v96 + 40) = v97;
      *(void *)(v96 + 48) = 0xD000000000000016;
      *(void *)(v96 + 56) = 0x80000001C25847B0;
      uint64_t v98 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v99 = (id)HKUIJoinStringsForAutomationIdentifier();

      if (v99)
      {
        uint64_t v100 = sub_1C254F470();
        uint64_t v102 = v101;
      }
      else
      {
        uint64_t v100 = 0;
        uint64_t v102 = 0;
      }
      uint64_t v103 = (void *)swift_allocObject();
      sub_1C254CB30();
      v103[2] = 0xD000000000000016;
      v103[3] = 0x80000001C25847B0;
      v103[4] = v93;
      v103[5] = v92;
      v103[6] = 0;
      v103[7] = v94;
      v103[8] = v100;
      v103[9] = v102;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v95 = sub_1C226CD5C(0, v95[2] + 1, 1, v95);
      }
      uint64_t v105 = (uint64_t)v116;
      uint64_t v104 = (void *)v117;
      id v106 = v121;
      unint64_t v108 = v95[2];
      unint64_t v107 = v95[3];
      if (v108 >= v107 >> 1) {
        uint64_t v95 = sub_1C226CD5C((void *)(v107 > 1), v108 + 1, 1, v95);
      }
      uint64_t v126 = v70;
      uint64_t v127 = v120;
      *(void *)&long long v125 = v103;
      v95[2] = v108 + 1;
      sub_1C21F44EC(&v125, (uint64_t)&v95[5 * v108 + 4]);

      uint64_t v128 = v95;
      sub_1C2223718(v105);
    }
    id v5 = v118;
    uint64_t v3 = v119;
  }
LABEL_40:
  sub_1C2410CC0(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
  sub_1C254CB30();
  sub_1C254CAF0();
  uint64_t v109 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v110 = v124;
  v109(v5, v124);
  sub_1C254D990();
  *(void *)&long long v125 = 0x3C53447961727241;
  *((void *)&v125 + 1) = 0xE800000000000000;
  sub_1C254CB30();
  sub_1C254CAF0();
  v109(v5, v110);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  return sub_1C254D390();
}

uint64_t sub_1C2410BEC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2410C34(uint64_t a1)
{
  sub_1C2410CC0(0, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C2410CC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2410D24()
{
  if (!qword_1EA2E3220)
  {
    sub_1C2410D80();
    unint64_t v0 = sub_1C254EEC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3220);
    }
  }
}

unint64_t sub_1C2410D80()
{
  unint64_t result = qword_1EA2E3228;
  if (!qword_1EA2E3228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3228);
  }
  return result;
}

id MedicalRecordChartSeries.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

__n128 HKGraphSeriesDataPointPathRangeMake@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  long long v3 = a1[1];
  *a3 = *a1;
  a3[1] = v3;
  __n128 result = *(__n128 *)a2;
  long long v5 = *(_OWORD *)(a2 + 16);
  a3[2] = *(_OWORD *)a2;
  a3[3] = v5;
  return result;
}

double HKGraphSeriesDataBlockPathMake@<D0>(uint64_t a1@<X8>)
{
  double result = NAN;
  *(_OWORD *)a1 = xmmword_1C2569DB0;
  *(void *)(a1 + 16) = 0;
  return result;
}

__n128 HKGraphSeriesDataPointPathMake@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  a2[1].n128_u64[1] = 0x7FFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t MedicalRecordChartCoordinate.__allocating_init(sortedPointValues:blockCoordinateInfo:)(uint64_t a1, uint64_t a2)
{
  return sub_1C2411C08(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2412920);
}

void sub_1C2410FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, uint64_t a8, uint64_t a9, char *a10, CGContext *a11)
{
  uint64_t v56 = sub_1C254CDA0();
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v20 = (char *)v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1C254E560();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (type metadata accessor for MedicalRecordChartCoordinate(), (uint64_t v25 = swift_dynamicCastClass()) != 0))
  {
    v54[1] = a1;
    uint64_t v26 = *(void *)(v25 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
    if (*(void *)(v26 + 16))
    {
      double v27 = *(double *)(v26 + 32);
      if (v27 < a6 || v27 > a7) {
        return;
      }
    }
    else if (a6 > 0.0 || a7 < 0.0)
    {
      return;
    }
    swift_unknownObjectRetain();
    objc_msgSend(a10, sel_selectedPathRange);
    uint64_t v57 = a2;
    uint64_t v58 = a3;
    uint64_t v59 = a4;
    uint64_t v60 = a5;
    int v36 = HKGraphSeriesDataPointPathInRangeInclusive();
    uint64_t v37 = &OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_selectedStrokeStyle;
    if (!v36) {
      uint64_t v37 = &OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_unselectedStrokeStyle;
    }
    uint64_t v38 = *(void **)&a10[*v37];
    if (v38)
    {
      objc_msgSend(v38, sel_lineWidth);
      double v40 = v39 * 0.5;
    }
    else
    {
      double v40 = 1.0;
    }
    CGContextSaveGState(a11);
    objc_msgSend(v38, sel_applyToContext_, a11);
    if (!v38 || (id v41 = objc_msgSend(v38, sel_strokeColor)) == 0) {
      id v41 = objc_msgSend(self, sel_yellowColor);
    }
    uint64_t v42 = (CGColor *)objc_msgSend(v41, sel_CGColor);

    CGContextSetFillColorWithColor(a11, v42);
    uint64_t v43 = *(void *)(v26 + 16);
    if (v43)
    {
      double v44 = *(double *)(v26 + 40);
      swift_bridgeObjectRetain();
      sub_1C254F9B0();
      v54[0] = 0xC00921FB54442D18;
      sub_1C254F9C0();
      if (v43 != 1)
      {
        uint64_t v45 = 1;
        while (1)
        {
          uint64_t v46 = v26 + 32 + 16 * v45;
          double v47 = *(double *)(v46 + 8);
          uint64_t v48 = v45 + 1;
          if (v47 - v40 - (v40 + v44) <= 1.0) {
            break;
          }
          double v49 = *(double *)(v46 + 8);
LABEL_31:
          sub_1C254F9C0();
          CGContextClosePath(a11);
          sub_1C254F9B0();
          sub_1C254F9C0();
          uint64_t v45 = v48;
          double v44 = v49;
          if (v48 == v43) {
            goto LABEL_32;
          }
        }
        uint64_t v50 = (double *)(v26 + 56 + 16 * v45);
        while (1)
        {
          sub_1C254F9D0();
          if (v43 == v48) {
            break;
          }
          double v49 = *v50;
          ++v48;
          double v51 = *v50 - v40 - (v40 + v47);
          v50 += 2;
          double v47 = v49;
          if (v51 > 1.0) {
            goto LABEL_31;
          }
        }
      }
LABEL_32:
      swift_bridgeObjectRelease();
      sub_1C254F9C0();
      CGContextClosePath(a11);
    }
    uint64_t v52 = v55;
    uint64_t v53 = v56;
    (*(void (**)(char *, void, uint64_t))(v55 + 104))(v20, *MEMORY[0x1E4F1DA40], v56);
    sub_1C254F9E0();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v20, v53);
    CGContextRestoreGState(a11);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1C254E4F0();
    swift_unknownObjectRetain_n();
    uint64_t v29 = sub_1C254E550();
    os_log_type_t v30 = sub_1C254FA20();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = a1;
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(void *)&long long v61 = v33;
      *(_DWORD *)uint64_t v32 = 136446210;
      uint64_t v56 = (uint64_t)(v32 + 4);
      uint64_t v57 = v31;
      sub_1C2413910(0, &qword_1EA2E32B8, &qword_1EA2E32B0, (uint64_t)&protocolRef_HKGraphSeriesBlockCoordinate, MEMORY[0x1E4FBB718]);
      swift_unknownObjectRetain();
      uint64_t v34 = sub_1C254F4F0();
      uint64_t v57 = sub_1C21AD354(v34, v35, (uint64_t *)&v61);
      sub_1C2550120();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v33, -1, -1);
      MEMORY[0x1C875A0B0](v32, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
}

uint64_t sub_1C241167C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *a3;
  uint64_t v9 = a3[1];
  uint64_t v10 = a3[2];
  uint64_t v11 = a3[3];
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v12(a2, v8, v9, v10, v11, a4, a5);
  swift_release();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

id MedicalRecordChartSeries.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_selectedStrokeStyle] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_unselectedStrokeStyle] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordChartSeries();
  return objc_msgSendSuper2(&v2, sel_init);
}

id MedicalRecordChartSeries.__deallocating_deinit()
{
  return sub_1C2411FC4(type metadata accessor for MedicalRecordChartSeries);
}

uint64_t MedicalRecordChartCoordinate.pointValuesAscending.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MedicalRecordChartCoordinate.blockCoordinateInfo.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t MedicalRecordChartCoordinate.init(sortedPointValues:blockCoordinateInfo:)(uint64_t a1, uint64_t a2)
{
  return sub_1C2411C08(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C241286C);
}

uint64_t sub_1C2411C08(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = a3(a1, a2, v3, ObjectType);
  swift_unknownObjectRelease();
  return v8;
}

uint64_t sub_1C2411C68(uint64_t result)
{
  id v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  for (unint64_t i = v2 + 1; ; --i)
  {
    if (v3 == i - 2) {
      goto LABEL_5;
    }
    unint64_t v6 = v1[2];
    if (v3 >= v6) {
      break;
    }
    if (i - 2 >= v6) {
      goto LABEL_12;
    }
    long long v7 = *(_OWORD *)&v1[2 * i];
    long long v8 = *(_OWORD *)&v1[2 * v3 + 4];
    __n128 result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      __n128 result = (uint64_t)sub_1C23C6FF4(v1);
      id v1 = (void *)result;
    }
    *(_OWORD *)&v1[2 * v3 + 4] = v7;
    *(_OWORD *)&v1[2 * i] = v8;
LABEL_5:
    if (v4 == ++v3) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

double sub_1C2411D30()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
  if (*(void *)(v1 + 16)) {
    return *(double *)(v1 + 32);
  }
  else {
    return 0.0;
  }
}

double sub_1C2411D54()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
  if (*(void *)(v1 + 16)) {
    return *(double *)(v1 + 32);
  }
  else {
    return 0.0;
  }
}

double sub_1C2411D7C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2) {
    return *(double *)(v1 + 16 * v2 + 16);
  }
  else {
    return 0.0;
  }
}

double sub_1C2411DA8(double a1, double a2)
{
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4)
  {
    double v5 = 0.0;
    double v6 = 0.0;
    if (a2 >= 0.0 && a2 <= 0.0) {
      return vabdd_f64(0.0, a1);
    }
    return sqrt((a2 - v5) * (a2 - v5) + (a1 - v6) * (a1 - v6));
  }
  double v5 = *(double *)(v3 + 40);
  if (v5 > a2)
  {
    double v6 = *(double *)(v3 + 32);
    return sqrt((a2 - v5) * (a2 - v5) + (a1 - v6) * (a1 - v6));
  }
  uint64_t v8 = v4 - 1;
  uint64_t v9 = (double *)(v3 + 32);
  double v5 = v9[2 * v8 + 1];
  if (v5 < a2)
  {
    double v6 = v9[2 * v8];
    return sqrt((a2 - v5) * (a2 - v5) + (a1 - v6) * (a1 - v6));
  }
  return vabdd_f64(*v9, a1);
}

double CGPoint.distance(to:)(double a1, double a2, double a3, double a4)
{
  return sqrt((a1 - a3) * (a1 - a3) + (a2 - a4) * (a2 - a4));
}

double sub_1C2411E9C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2) {
    return *(double *)(v1 + 16 * v2 + 16);
  }
  else {
    return 0.0;
  }
}

void MedicalRecordChartCoordinate.init()()
{
}

id MedicalRecordChartCoordinate.__deallocating_deinit()
{
  return sub_1C2411FC4(type metadata accessor for MedicalRecordChartCoordinate);
}

id sub_1C2411FC4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

double CGFloat.pow2()(double a1)
{
  return a1 * a1;
}

uint64_t sub_1C2412050(uint64_t a1, void *a2, double a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1C2274FF0(0, v3, 0);
    uint64_t v4 = v16;
    uint64_t v8 = a1 + 32;
    do
    {
      uint64_t v9 = (void *)sub_1C254F860();
      objc_msgSend(a2, sel_coordinateForValue_, v9);
      uint64_t v11 = v10;

      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_1C2274FF0(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v16 + 16) = v13 + 1;
      uint64_t v14 = v16 + 16 * v13;
      *(double *)(v14 + 32) = a3;
      *(void *)(v14 + 40) = v11;
      v8 += 8;
      --v3;
    }
    while (v3);
  }
  return v4;
}

void sub_1C2412154(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v64 = a3;
  uint64_t v65 = a4;
  uint64_t v63 = a2;
  id v71 = (void *)sub_1C254E560();
  uint64_t v10 = *(v71 - 1);
  MEMORY[0x1F4188790](v71);
  unint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_1C254CAD0();
  unint64_t v13 = *(uint8_t **)(v66 - 8);
  *(void *)&double v14 = MEMORY[0x1F4188790](v66).n128_u64[0];
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(a1, sel_chartPoints, v14);
  if (v17)
  {
    id v18 = v17;
    sub_1C2413978(0, (unint64_t *)&qword_1EA2E32D0);
    unint64_t v19 = sub_1C254F710();

    unint64_t v6 = sub_1C21EF87C(v19);
    swift_bridgeObjectRelease();
    if (v6)
    {
      id v20 = objc_msgSend(a5, sel_transform);
      id v71 = objc_msgSend(a6, sel_transform);
      uint64_t v73 = MEMORY[0x1E4FBC860];
      if (!(v6 >> 62))
      {
        uint64_t v21 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v22 = v66;
        if (!v21) {
          goto LABEL_27;
        }
LABEL_5:
        if (v21 < 1)
        {
          __break(1u);
          goto LABEL_31;
        }
        uint64_t v23 = 0;
        uint64_t v67 = (void (**)(char *, uint64_t))(v13 + 8);
        unint64_t v68 = v6 & 0xC000000000000001;
        uint64_t v69 = v21;
        unint64_t v70 = v6;
        do
        {
          if (v68) {
            uint64_t v24 = (char *)MEMORY[0x1C87588E0](v23, v6);
          }
          else {
            uint64_t v24 = (char *)*(id *)(v6 + 8 * v23 + 32);
          }
          uint64_t v25 = v24;
          id v26 = objc_msgSend(*(id *)&v24[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_chartableSet], sel_date, v63, v64, v65);
          sub_1C254CA80();

          double v27 = (void *)sub_1C254CA50();
          (*v67)(v16, v22);
          objc_msgSend(v20, sel_coordinateForValue_, v27);
          double v29 = v28;

          os_log_type_t v30 = v71;
          uint64_t v31 = swift_bridgeObjectRetain();
          uint64_t v32 = sub_1C2412050(v31, v30, v29);
          swift_bridgeObjectRelease();

          uint64_t v33 = *(void **)&v25[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_blockCoordinateInfo];
          uint64_t v34 = (objc_class *)type metadata accessor for MedicalRecordChartCoordinate();
          unint64_t v35 = (char *)objc_allocWithZone(v34);
          int v36 = v35;
          uint64_t v37 = *(void *)(v32 + 16);
          if (v37 && *(double *)(v32 + 16 * v37 + 24) < *(double *)(v32 + 40))
          {
            id v38 = v33;
            id v39 = v20;
            double v40 = v36;
            *(void *)&v40[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending] = sub_1C2411C68(v32);
            id v20 = v39;
            uint64_t v22 = v66;
          }
          else
          {
            *(void *)&v35[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending] = v32;
            id v41 = v33;
            uint64_t v42 = v36;
          }
          *(void *)&v36[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_blockCoordinateInfo] = v33;
          swift_unknownObjectRetain();

          v72.receiver = v36;
          v72.super_class = v34;
          id v43 = objc_msgSendSuper2(&v72, sel_init);

          id v44 = v43;
          MEMORY[0x1C8757C00]();
          if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C254F760();
          }
          ++v23;
          sub_1C254F790();
          sub_1C254F730();

          unint64_t v6 = v70;
        }
        while (v69 != v23);
LABEL_27:
        swift_bridgeObjectRelease();
        sub_1C2413978(0, &qword_1EA2E32B0);
        swift_bridgeObjectRetain();
        uint64_t v60 = (void *)sub_1C254F700();
        swift_bridgeObjectRelease();
        long long v61 = self;
        unint64_t v74 = v63;
        uint64_t v75 = v64;
        uint64_t v76 = v65;
        id v62 = objc_msgSend(v61, sel_coordinateListWithCoordinates_blockPath_, v60, &v74);

        if (v62)
        {

          swift_bridgeObjectRelease();
          return;
        }
LABEL_31:
        __break(1u);
        return;
      }
LABEL_26:
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1C2550620();
      swift_bridgeObjectRelease();
      uint64_t v22 = v66;
      if (!v21) {
        goto LABEL_27;
      }
      goto LABEL_5;
    }
  }
  sub_1C254E4F0();
  id v45 = a1;
  uint64_t v46 = sub_1C254E550();
  os_log_type_t v47 = sub_1C254FA20();
  if (os_log_type_enabled(v46, v47))
  {
    unint64_t v13 = (uint8_t *)swift_slowAlloc();
    unint64_t v6 = swift_slowAlloc();
    unint64_t v74 = v6;
    *(_DWORD *)unint64_t v13 = 136446210;
    id v48 = objc_msgSend(v45, sel_chartPoints);
    if (v48)
    {
      double v49 = v48;
      sub_1C2413978(0, (unint64_t *)&qword_1EA2E32D0);
      uint64_t v50 = sub_1C254F710();
    }
    else
    {
      uint64_t v50 = 0;
    }
    uint64_t v73 = v50;
    sub_1C241388C();
    uint64_t v51 = sub_1C254F4F0();
    uint64_t v16 = (char *)v52;
    uint64_t v73 = sub_1C21AD354(v51, v52, (uint64_t *)&v74);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v6, -1, -1);
    MEMORY[0x1C875A0B0](v13, -1, -1);
  }
  else
  {
  }
  uint64_t v53 = *(void (**)(char *, void *))(v10 + 8);
  id v20 = (id)(v10 + 8);
  v53(v12, v71);
  uint64_t v55 = v64;
  uint64_t v54 = v65;
  uint64_t v56 = v63;
  sub_1C2413978(0, &qword_1EA2E32B0);
  uint64_t v57 = (void *)sub_1C254F700();
  uint64_t v58 = self;
  unint64_t v74 = v56;
  uint64_t v75 = v55;
  uint64_t v76 = v54;
  id v59 = objc_msgSend(v58, sel_coordinateListWithCoordinates_blockPath_, v57, &v74);

  if (!v59)
  {
    __break(1u);
    goto LABEL_26;
  }
}

id sub_1C241286C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6 && *(double *)(a1 + 16 * v6 + 24) < *(double *)(a1 + 40))
  {
    long long v7 = a3;
    *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending] = sub_1C2411C68(a1);
  }
  else
  {
    *(void *)&a3[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending] = a1;
    uint64_t v8 = a3;
  }
  *(void *)&a3[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_blockCoordinateInfo] = a2;
  swift_unknownObjectRetain();

  v10.receiver = a3;
  v10.super_class = (Class)type metadata accessor for MedicalRecordChartCoordinate();
  return objc_msgSendSuper2(&v10, sel_init);
}

id sub_1C2412920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (char *)objc_allocWithZone((Class)type metadata accessor for MedicalRecordChartCoordinate());
  return sub_1C241286C(a1, a2, v4);
}

uint64_t sub_1C2412978()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C24129B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1C2410FF0(a1, a2, a3, a4, a5, *(double *)(v7 + 16), *(double *)(v7 + 24), a6, a7, *(char **)(v7 + 32), *(CGContext **)(v7 + 40));
}

uint64_t block_destroy_helper_49()
{
  return swift_release();
}

BOOL sub_1C24129EC(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v10 = sub_1C254E560();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MedicalRecordChartCoordinate();
  uint64_t v14 = swift_dynamicCastClass();
  if (!v14)
  {
    sub_1C254E4F0();
    swift_unknownObjectRetain_n();
    id v20 = sub_1C254E550();
    os_log_type_t v21 = sub_1C254FA20();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v30 = a1;
      uint64_t v31 = v23;
      *(_DWORD *)uint64_t v22 = 136446210;
      v29[1] = v22 + 4;
      sub_1C2413978(0, &qword_1EA2E32B0);
      swift_unknownObjectRetain();
      uint64_t v24 = sub_1C254F4F0();
      uint64_t v30 = sub_1C21AD354(v24, v25, &v31);
      sub_1C2550120();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v23, -1, -1);
      MEMORY[0x1C875A0B0](v22, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 0;
  }
  uint64_t v15 = *(double **)(v14 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
  uint64_t v16 = *((void *)v15 + 2);
  if (!v16) {
    return 0;
  }
  CGFloat v17 = v15[4];
  CGFloat v18 = v15[5];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v33.origin.x = a2;
  v33.origin.y = a3;
  v33.size.width = a4;
  v33.size.height = a5;
  v32.x = v17;
  v32.y = v18;
  BOOL result = CGRectContainsPoint(v33, v32);
  if (result)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return 1;
  }
  if (v16 == 1)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return 0;
  }
  id v26 = v15 + 7;
  uint64_t v27 = 1;
  while (1)
  {
    uint64_t v28 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    v34.origin.x = a2;
    v34.origin.y = a3;
    v34.size.width = a4;
    v34.size.height = a5;
    BOOL result = CGRectContainsPoint(v34, *(CGPoint *)(v26 - 1));
    if (result) {
      goto LABEL_4;
    }
    v26 += 2;
    ++v27;
    if (v28 == v16) {
      goto LABEL_12;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2412D14(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MedicalRecordChartCoordinate();
  if (swift_dynamicCastClass())
  {
    swift_unknownObjectRetain();
    sub_1C2411DA8(a2, a3);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1C254E4F0();
    swift_unknownObjectRetain_n();
    uint64_t v11 = sub_1C254E550();
    os_log_type_t v12 = sub_1C254FA20();
    if (os_log_type_enabled(v11, v12))
    {
      unint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v18 = a1;
      uint64_t v19 = v14;
      *(_DWORD *)unint64_t v13 = 136446210;
      v17[1] = v13 + 4;
      sub_1C2413978(0, &qword_1EA2E32B0);
      swift_unknownObjectRetain();
      uint64_t v15 = sub_1C254F4F0();
      uint64_t v18 = sub_1C21AD354(v15, v16, &v19);
      sub_1C2550120();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v14, -1, -1);
      MEMORY[0x1C875A0B0](v13, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1C2412F9C(uint64_t a1)
{
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  double v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MedicalRecordChartCoordinate();
  uint64_t result = swift_dynamicCastClass();
  if (!result)
  {
    sub_1C254E4F0();
    swift_unknownObjectRetain_n();
    uint64_t v7 = sub_1C254E550();
    os_log_type_t v8 = sub_1C254FA20();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v14 = a1;
      uint64_t v15 = v10;
      *(_DWORD *)uint64_t v9 = 136446210;
      v13[1] = v9 + 4;
      sub_1C2413978(0, &qword_1EA2E32B0);
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1C254F4F0();
      uint64_t v14 = sub_1C21AD354(v11, v12, &v15);
      sub_1C2550120();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v10, -1, -1);
      MEMORY[0x1C875A0B0](v9, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

uint64_t sub_1C2413218(uint64_t a1, double a2)
{
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MedicalRecordChartCoordinate();
  uint64_t v8 = swift_dynamicCastClass();
  if (v8)
  {
    uint64_t v9 = *(void *)(v8 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
    if (*(void *)(v9 + 16)) {
      double v10 = *(double *)(v9 + 32);
    }
    else {
      double v10 = 0.0;
    }
    swift_unknownObjectRetain();
    sub_1C2411DA8(v10, a2);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1C254E4F0();
    swift_unknownObjectRetain_n();
    uint64_t v11 = sub_1C254E550();
    os_log_type_t v12 = sub_1C254FA20();
    if (os_log_type_enabled(v11, v12))
    {
      unint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v19 = a1;
      uint64_t v20 = v14;
      *(_DWORD *)unint64_t v13 = 136446210;
      v18[1] = v13 + 4;
      sub_1C2413978(0, &qword_1EA2E32B0);
      swift_unknownObjectRetain();
      uint64_t v15 = sub_1C254F4F0();
      uint64_t v19 = sub_1C21AD354(v15, v16, &v20);
      sub_1C2550120();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v14, -1, -1);
      MEMORY[0x1C875A0B0](v13, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t type metadata accessor for MedicalRecordChartSeries()
{
  return self;
}

id sub_1C24134E0(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_pointValuesAscending);
  int64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    long long v15 = a1[1];
    long long v16 = *a1;
    long long v14 = a1[2];
    uint64_t v18 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C2274FF0(0, v4, 0);
    uint64_t v5 = v18;
    uint64_t v6 = v3 + 40;
    do
    {
      CGPoint v19 = *(CGPoint *)(v6 - 8);
      *(_OWORD *)&v17.a = v16;
      *(_OWORD *)&v17.c = v15;
      *(_OWORD *)&v17.tx = v14;
      CGPoint v7 = CGPointApplyAffineTransform(v19, &v17);
      uint64_t v18 = v5;
      unint64_t v9 = *(void *)(v5 + 16);
      unint64_t v8 = *(void *)(v5 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1C2274FF0(v8 > 1, v9 + 1, 1);
        uint64_t v5 = v18;
      }
      *(void *)(v5 + 16) = v9 + 1;
      *(CGPoint *)(v5 + 16 * v9 + 32) = v7;
      v6 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartCoordinate_blockCoordinateInfo);
  swift_getObjectType();
  uint64_t v11 = (objc_class *)type metadata accessor for MedicalRecordChartCoordinate();
  swift_unknownObjectRetain();
  id v12 = sub_1C241286C(v5, v10, (char *)objc_allocWithZone(v11));
  swift_unknownObjectRelease();
  return v12;
}

uint64_t type metadata accessor for MedicalRecordChartCoordinate()
{
  return self;
}

uint64_t method lookup function for MedicalRecordChartSeries(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordChartSeries);
}

uint64_t method lookup function for MedicalRecordChartCoordinate(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordChartCoordinate);
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.__allocating_init(sortedPointValues:blockCoordinateInfo:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.xValue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.minPoint.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.maxPoint.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.distance(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.startXValue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.endXValue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.userInfo.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MedicalRecordChartCoordinate.copy(with:roundToViewScale:)(_OWORD *a1)
{
  uint64_t v2 = *(uint64_t (**)(_OWORD *))((*MEMORY[0x1E4FBC8C8] & *v1) + 0xA0);
  long long v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  uint64_t v5[2] = a1[2];
  return v2(v5);
}

void sub_1C241388C()
{
  if (!qword_1EA2E32C0)
  {
    sub_1C2413910(255, &qword_1EA2E32C8, (unint64_t *)&qword_1EA2E32D0, (uint64_t)&protocolRef_HKChartPoint, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E32C0);
    }
  }
}

void sub_1C2413910(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C2413978(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2413978(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id ContentStatusView.__allocating_init(title:subtitle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  return ContentStatusView.init(title:subtitle:)(a1, a2, a3, a4);
}

uint64_t sub_1C2413A4C()
{
  return sub_1C223A124(&OBJC_IVAR___HRContentStatusView_title);
}

id sub_1C2413A70(uint64_t a1, uint64_t a2)
{
  return sub_1C2413BC8(a1, a2, &OBJC_IVAR___HRContentStatusView_title, &OBJC_IVAR___HRContentStatusView_titleLabel);
}

void (*sub_1C2413A84(void *a1))(void **a1, char a2)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HRContentStatusView_title;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C2413AF0;
}

void sub_1C2413AF0(void **a1, char a2)
{
}

uint64_t sub_1C2413B08()
{
  return sub_1C223A124(&OBJC_IVAR___HRContentStatusView_subtitle);
}

void sub_1C2413B2C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (a3)
  {
    uint64_t v6 = sub_1C254F470();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  id v9 = a1;
  a4(v6, v8);
}

id sub_1C2413BB4(uint64_t a1, uint64_t a2)
{
  return sub_1C2413BC8(a1, a2, &OBJC_IVAR___HRContentStatusView_subtitle, &OBJC_IVAR___HRContentStatusView_subtitleLabel);
}

id sub_1C2413BC8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = &v4[*a3];
  swift_beginAccess();
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  swift_bridgeObjectRelease();
  id v9 = *(void **)&v4[*a4];
  if (*((void *)v8 + 1))
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  objc_msgSend(v9, sel_setText_, v10);

  return objc_msgSend(v4, sel_setNeedsLayout);
}

void (*sub_1C2413C94(void *a1))(void **a1, char a2)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HRContentStatusView_subtitle;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C2413D00;
}

void sub_1C2413D00(void **a1, char a2)
{
}

void sub_1C2413D0C(void **a1, char a2, void *a3)
{
  uint64_t v5 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = (char *)v5[3];
    uint64_t v7 = *(void **)&v6[*a3];
    if (*(void *)&v6[v5[4] + 8])
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      uint64_t v6 = (char *)v5[3];
    }
    else
    {
      uint64_t v8 = 0;
    }
    objc_msgSend(v7, sel_setText_, v8);

    objc_msgSend(v6, sel_setNeedsLayout);
  }
  free(v5);
}

id ContentStatusView.init(title:subtitle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = OBJC_IVAR___HRContentStatusView_titleLabel;
  uint64_t v6 = self;
  uint64_t v7 = v4;
  id v8 = objc_msgSend(v6, sel_labelColor);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v9, sel_setFont_, 0);
  objc_msgSend(v9, sel_setNumberOfLines_, 0);
  objc_msgSend(v9, sel_setTextColor_, v8);

  *(void *)&v4[v5] = v9;
  uint64_t v10 = OBJC_IVAR___HRContentStatusView_subtitleLabel;
  id v11 = objc_msgSend(v6, sel_labelColor);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v12, sel_setFont_, 0);
  objc_msgSend(v12, sel_setNumberOfLines_, 0);
  objc_msgSend(v12, sel_setTextColor_, v11);

  *(void *)&v7[v10] = v12;
  uint64_t v13 = OBJC_IVAR___HRContentStatusView_spinnerView;
  *(void *)&v7[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
  long long v14 = &v7[OBJC_IVAR___HRContentStatusView_title];
  *(void *)long long v14 = 0;
  *((void *)v14 + 1) = 0;
  long long v15 = &v7[OBJC_IVAR___HRContentStatusView_subtitle];
  *(void *)long long v15 = 0;
  *((void *)v15 + 1) = 0;
  swift_beginAccess();
  *(void *)long long v14 = a1;
  *((void *)v14 + 1) = a2;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)long long v15 = a3;
  *((void *)v15 + 1) = a4;

  swift_bridgeObjectRelease();
  v22.receiver = v7;
  v22.super_class = (Class)type metadata accessor for ContentStatusView();
  id v16 = objc_msgSendSuper2(&v22, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1C2414594();

  return v16;
}

uint64_t type metadata accessor for ContentStatusView()
{
  return self;
}

id ContentStatusView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ContentStatusView.init(coder:)(void *a1)
{
  uint64_t v2 = OBJC_IVAR___HRContentStatusView_titleLabel;
  id v3 = self;
  uint64_t v4 = v1;
  id v5 = objc_msgSend(v3, sel_labelColor);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v6, sel_setFont_, 0);
  objc_msgSend(v6, sel_setNumberOfLines_, 0);
  objc_msgSend(v6, sel_setTextColor_, v5);

  *(void *)&v1[v2] = v6;
  uint64_t v7 = OBJC_IVAR___HRContentStatusView_subtitleLabel;
  id v8 = objc_msgSend(v3, sel_labelColor);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v9, sel_setFont_, 0);
  objc_msgSend(v9, sel_setNumberOfLines_, 0);
  objc_msgSend(v9, sel_setTextColor_, v8);

  *(void *)&v4[v7] = v9;
  uint64_t v10 = OBJC_IVAR___HRContentStatusView_spinnerView;
  *(void *)&v4[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
  id v11 = &v4[OBJC_IVAR___HRContentStatusView_title];
  *(void *)id v11 = 0;
  *((void *)v11 + 1) = 0;
  id v12 = &v4[OBJC_IVAR___HRContentStatusView_subtitle];
  *(void *)id v12 = 0;
  *((void *)v12 + 1) = 0;

  v18.receiver = v4;
  v18.super_class = (Class)type metadata accessor for ContentStatusView();
  id v13 = objc_msgSendSuper2(&v18, sel_initWithCoder_, a1);
  id v14 = v13;
  if (v13)
  {
    id v15 = v13;
    sub_1C2414594();
  }
  return v14;
}

id ContentStatusView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id ContentStatusView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR___HRContentStatusView_titleLabel;
  uint64_t v10 = self;
  id v11 = v4;
  id v12 = objc_msgSend(v10, sel_labelColor);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v13, sel_setFont_, 0);
  objc_msgSend(v13, sel_setNumberOfLines_, 0);
  objc_msgSend(v13, sel_setTextColor_, v12);

  *(void *)&v4[v9] = v13;
  uint64_t v14 = OBJC_IVAR___HRContentStatusView_subtitleLabel;
  id v15 = objc_msgSend(v10, sel_labelColor);
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v16, sel_setFont_, 0);
  objc_msgSend(v16, sel_setNumberOfLines_, 0);
  objc_msgSend(v16, sel_setTextColor_, v15);

  *(void *)&v11[v14] = v16;
  uint64_t v17 = OBJC_IVAR___HRContentStatusView_spinnerView;
  *(void *)&v11[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
  objc_super v18 = &v11[OBJC_IVAR___HRContentStatusView_title];
  *(void *)objc_super v18 = 0;
  *((void *)v18 + 1) = 0;
  CGPoint v19 = &v11[OBJC_IVAR___HRContentStatusView_subtitle];
  *(void *)CGPoint v19 = 0;
  *((void *)v19 + 1) = 0;

  v22.receiver = v11;
  v22.super_class = (Class)type metadata accessor for ContentStatusView();
  id v20 = objc_msgSendSuper2(&v22, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C2414594();

  return v20;
}

uint64_t sub_1C2414594()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___HRContentStatusView_titleLabel];
  uint64_t v2 = &v0[OBJC_IVAR___HRContentStatusView_title];
  swift_beginAccess();
  if (*((void *)v2 + 1))
  {
    swift_bridgeObjectRetain();
    id v3 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = 0;
  }
  objc_msgSend(v1, sel_setText_, v3);

  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_labelColor);
  objc_msgSend(v1, sel_setTextColor_, v5);

  objc_msgSend(v1, sel_setAlpha_, 0.4);
  objc_msgSend(v0, sel_addSubview_, v1);
  id v6 = *(void **)&v0[OBJC_IVAR___HRContentStatusView_subtitleLabel];
  uint64_t v7 = &v0[OBJC_IVAR___HRContentStatusView_subtitle];
  swift_beginAccess();
  if (*((void *)v7 + 1))
  {
    swift_bridgeObjectRetain();
    id v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v8 = 0;
  }
  objc_msgSend(v6, sel_setText_, v8);

  id v9 = objc_msgSend(v4, sel_labelColor);
  objc_msgSend(v6, sel_setTextColor_, v9);

  objc_msgSend(v6, sel_setAlpha_, 0.4);
  objc_msgSend(v0, sel_addSubview_, v6);
  uint64_t v10 = *(void **)&v0[OBJC_IVAR___HRContentStatusView_spinnerView];
  objc_msgSend(v10, sel_setHidesWhenStopped_, 1);
  objc_msgSend(v0, sel_addSubview_, v10);
  sub_1C2414C50();
  sub_1C23172CC();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255CD90;
  uint64_t v12 = sub_1C254E8E0();
  uint64_t v13 = MEMORY[0x1E4FB1138];
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v13;
  MEMORY[0x1C87583B0](v11, sel_traitCollectionDidChangeWithTraitEnvironment_previousTraitCollection_);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_1C2414810()
{
  return sub_1C2414834((SEL *)&selRef_startAnimating);
}

id sub_1C2414828()
{
  return sub_1C2414834((SEL *)&selRef_stopAnimating);
}

id sub_1C2414834(SEL *a1)
{
  [*(id *)&v1[OBJC_IVAR___HRContentStatusView_spinnerView] *a1];
  return objc_msgSend(v1, sel_setNeedsLayout);
}

void sub_1C2414888(char *a1, uint64_t a2, SEL *a3)
{
  uint64_t v4 = *(void **)&a1[OBJC_IVAR___HRContentStatusView_spinnerView];
  id v5 = a1;
  [v4 *a3];
  objc_msgSend(v5, sel_setNeedsLayout);
}

id sub_1C2414974()
{
  uint64_t v1 = v0;
  v31.receiver = v0;
  v31.super_class = (Class)type metadata accessor for ContentStatusView();
  objc_msgSendSuper2(&v31, sel_layoutSubviews);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___HRContentStatusView_titleLabel];
  objc_msgSend(v2, sel_sizeToFit);
  id v3 = *(void **)&v1[OBJC_IVAR___HRContentStatusView_spinnerView];
  objc_msgSend(v3, sel_sizeToFit);
  objc_msgSend(v1, sel_bounds);
  double v4 = CGRectGetWidth(v32) + -32.0;
  objc_msgSend(v1, sel_bounds);
  double Height = CGRectGetHeight(v33);
  objc_msgSend(v2, sel_frame);
  double v6 = (Height - CGRectGetHeight(v34)) * 0.5;
  objc_msgSend(v2, sel_frame);
  CGFloat x = v35.origin.x;
  double v8 = v35.size.height;
  double Width = CGRectGetWidth(v35);
  if (v4 >= Width) {
    double v10 = Width;
  }
  else {
    double v10 = v4;
  }
  objc_msgSend(v1, sel_bounds);
  double v11 = CGRectGetWidth(v36);
  v37.origin.CGFloat x = x;
  v37.origin.y = v6;
  v37.size.width = v10;
  v37.size.height = v8;
  CGFloat v30 = (v11 - CGRectGetWidth(v37)) * 0.5;
  uint64_t v12 = *(void **)&v1[OBJC_IVAR___HRContentStatusView_subtitleLabel];
  objc_msgSend(v12, sel_sizeThatFits_, v4, 1.79769313e308);
  double v14 = v13;
  double v16 = v15;
  objc_msgSend(v12, sel_frame);
  CGFloat v18 = v17;
  v38.origin.CGFloat x = v30;
  v38.origin.y = v6;
  v38.size.width = v10;
  v38.size.height = v8;
  CGFloat v19 = CGRectGetMaxY(v38) + 8.0;
  objc_msgSend(v1, sel_bounds);
  double v20 = CGRectGetWidth(v39);
  v40.origin.CGFloat x = v18;
  v40.origin.y = v19;
  v40.size.width = v14;
  v40.size.height = v16;
  double v27 = (v20 - CGRectGetWidth(v40)) * 0.5;
  objc_msgSend(v3, sel_frame);
  double v28 = v22;
  double v29 = v21;
  objc_msgSend(v3, sel_frame);
  double v23 = v6 + -8.0 - CGRectGetHeight(v41);
  objc_msgSend(v1, sel_bounds);
  double v24 = CGRectGetWidth(v42);
  objc_msgSend(v3, sel_frame);
  double v25 = (v24 - CGRectGetWidth(v43)) * 0.5;
  objc_msgSend(v2, sel_setFrame_, v30, v6, v10, v8);
  objc_msgSend(v12, sel_setFrame_, v27, v19, v14, v16);
  return objc_msgSend(v3, sel_setFrame_, v25, v23, v29, v28);
}

void sub_1C2414C50()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, *MEMORY[0x1E4FB2988]);
  objc_msgSend(v1, sel_scaledValueForValue_, 27.0);
  double v3 = v2;

  double v4 = *(void **)(v0 + OBJC_IVAR___HRContentStatusView_titleLabel);
  id v5 = self;
  id v6 = objc_msgSend(v5, sel_systemFontOfSize_, v3);
  objc_msgSend(v4, sel_setFont_, v6);

  uint64_t v7 = *(void **)(v0 + OBJC_IVAR___HRContentStatusView_subtitleLabel);
  id v8 = objc_msgSend(v5, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v7, sel_setFont_, v8);
}

id ContentStatusView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContentStatusView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2414DAC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR___HRContentStatusView_title, a2);
}

uint64_t sub_1C2414DB8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_3(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C2413A70);
}

uint64_t sub_1C2414DD0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR___HRContentStatusView_subtitle, a2);
}

uint64_t sub_1C2414DDC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_3(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C2413BB4);
}

uint64_t keypath_setTm_3(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t method lookup function for ContentStatusView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ContentStatusView);
}

uint64_t dispatch thunk of ContentStatusView.title.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ContentStatusView.title.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ContentStatusView.title.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ContentStatusView.subtitle.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ContentStatusView.subtitle.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ContentStatusView.subtitle.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ContentStatusView.__allocating_init(title:subtitle:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of ContentStatusView.startAnimating()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ContentStatusView.stopAnimating()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

id sub_1C241508C(void *a1)
{
  if (a1) {
    id v2 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  }
  else {
    id v2 = 0;
  }
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (!v2)
  {

LABEL_12:
    sub_1C2414C50();
    return objc_msgSend(v1, sel_setNeedsLayout);
  }
  uint64_t v5 = sub_1C254F470();
  uint64_t v7 = v6;
  if (v5 == sub_1C254F470() && v7 == v8)
  {

    return (id)swift_bridgeObjectRelease_n();
  }
  char v10 = sub_1C2550870();

  swift_bridgeObjectRelease();
  id result = (id)swift_bridgeObjectRelease();
  if ((v10 & 1) == 0) {
    goto LABEL_12;
  }
  return result;
}

id sub_1C24151C4(void *a1)
{
  id v2 = v1;
  unint64_t v25 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  sub_1C2415E30(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255CDA0;
  sub_1C254D110();
  uint64_t v5 = sub_1C254D0F0();
  uint64_t v7 = v6;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1C220D950();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  *(void *)(v4 + 96) = v8;
  *(void *)(v4 + 104) = v9;
  *(void *)(v4 + 64) = v9;
  *(void *)(v4 + 72) = 0xD000000000000024;
  *(void *)(v4 + 80) = 0x80000001C257B820;
  char v10 = (void *)sub_1C254F9A0();
  sub_1C21ACA3C();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255CEB0;
  *(void *)(v11 + 32) = v10;
  uint64_t v24 = v11;
  sub_1C254F730();
  id v12 = v10;
  double v13 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v13);

  *(void *)&v2[qword_1EA2DF3F0] = v14;
  *(void *)&v2[qword_1EA2DF3F8] = MEMORY[0x1E4FBC860];
  *(void *)&v2[qword_1EA2DF3E8] = a1;
  id v15 = objc_allocWithZone(MEMORY[0x1E4FB15C0]);
  id v16 = v14;
  id v17 = a1;
  id v18 = objc_msgSend(v15, sel_init);
  v23.receiver = v2;
  v23.super_class = (Class)type metadata accessor for FeedItemListViewController();
  id v19 = objc_msgSendSuper2(&v23, sel_initWithCollectionViewLayout_, v18);

  id v20 = v19;
  double v21 = (void *)sub_1C254F430();
  objc_msgSend(v20, sel_setTitle_, v21);

  return v20;
}

void sub_1C241545C(void *a1)
{
  v4.receiver = a1;
  v4.super_class = (Class)type metadata accessor for InternalSharedItemsViewController();
  id v1 = v4.receiver;
  objc_msgSendSuper2(&v4, sel_viewDidLoad);
  id v2 = objc_msgSend(v1, sel_collectionView, v4.receiver, v4.super_class);
  if (v2)
  {
    id v3 = v2;
    sub_1C254DFE0();
    sub_1C254FAF0();
  }
  else
  {
    __break(1u);
  }
}

id sub_1C24154F0(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for InternalSharedItemsViewController();
  return objc_msgSendSuper2(&v5, sel_viewDidAppear_, a3);
}

uint64_t sub_1C241553C@<X0>(void *a1@<X8>)
{
  id v3 = *(void **)(v1 + qword_1EA2DF3E8);
  id v4 = *(id *)(v1 + qword_1EA2DF3F0);
  id v5 = objc_msgSend(v3, sel_healthStore);
  id v6 = objc_msgSend(v5, sel_profileIdentifier);

  sub_1C254FB30();
  id v7 = objc_msgSend(v3, sel_healthStore);
  uint64_t v8 = type metadata accessor for InternalSharedItemsDataSourceProvider();
  unint64_t v9 = (void *)swift_allocObject();
  v9[10] = MEMORY[0x1E4FBC870];
  void v9[2] = v4;
  sub_1C21F44EC(&v12, (uint64_t)(v9 + 3));
  v9[8] = v6;
  v9[9] = v7;
  a1[3] = v8;
  uint64_t result = sub_1C2415DE8(&qword_1EA2E3310, v10, (void (*)(uint64_t))type metadata accessor for InternalSharedItemsDataSourceProvider);
  a1[4] = result;
  *a1 = v9;
  return result;
}

void *InternalSharedItemsDataSourceProvider.__allocating_init(predicate:sourceProfile:store:healthStore:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[10] = MEMORY[0x1E4FBC870];
  void v8[2] = a1;
  sub_1C21F44EC(a3, (uint64_t)(v8 + 3));
  v8[8] = a2;
  v8[9] = a4;
  return v8;
}

id sub_1C24156E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalSharedItemsViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id InternalSharedItemsDataSourceProvider.predicate.getter()
{
  return *(id *)(v0 + 16);
}

void *InternalSharedItemsDataSourceProvider.init(predicate:sourceProfile:store:healthStore:)(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4)
{
  v4[2] = a1;
  v4[10] = MEMORY[0x1E4FBC870];
  sub_1C21F44EC(a3, (uint64_t)(v4 + 3));
  v4[8] = a2;
  v4[9] = a4;
  return v4;
}

uint64_t sub_1C2415778()
{
  sub_1C2415E30(0, (unint64_t *)&qword_1EA2DEA38, (unint64_t *)&qword_1EA2DEA40);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255CD90;
  *(void *)(v0 + 32) = sub_1C24157E0();
  *(void *)(v0 + 40) = v1;
  return v0;
}

uint64_t sub_1C24157E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254D7E0();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C254D110();
  id v3 = (void *)MEMORY[0x1C87555F0]();
  sub_1C21ACA3C();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255CEB0;
  id v5 = *(void **)(v0 + 16);
  *(void *)(v4 + 32) = v5;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  id v6 = v5;
  id v7 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v7);

  objc_msgSend(v3, sel_setPredicate_, v8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CEB0;
  id v10 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v11 = (void *)sub_1C254F430();
  id v12 = objc_msgSend(v10, sel_initWithKey_ascending_selector_, v11, 1, sel_localizedStandardCompare_);

  *(void *)(v9 + 32) = v12;
  v18[0] = v9;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  double v13 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSortDescriptors_, v13);

  swift_beginAccess();
  sub_1C21F4424(v1 + 24, (uint64_t)v18);
  __swift_project_boxed_opaque_existential_1Tm(v18, v18[3]);
  id v14 = v3;
  id v15 = (void *)sub_1C254CE10();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v14, v15, 0, 0);

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
  sub_1C22259FC();
  sub_1C254D7A0();
  uint64_t v16 = sub_1C254D540();

  sub_1C2415DE8((unint64_t *)&qword_1EA2DEA78, 255, (void (*)(uint64_t))sub_1C22259FC);
  return v16;
}

id *InternalSharedItemsDataSourceProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 3));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t InternalSharedItemsDataSourceProvider.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 3));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2415BB4()
{
  sub_1C2415E30(0, (unint64_t *)&qword_1EA2DEA38, (unint64_t *)&qword_1EA2DEA40);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255CD90;
  *(void *)(v0 + 32) = sub_1C24157E0();
  *(void *)(v0 + 40) = v1;
  return v0;
}

uint64_t sub_1C2415C20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 24;
  swift_beginAccess();
  return sub_1C21F4424(v3, a2);
}

uint64_t type metadata accessor for InternalSharedItemsViewController()
{
  uint64_t result = qword_1EA2E3300;
  if (!qword_1EA2E3300) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2415CC0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C2415D00()
{
  return type metadata accessor for InternalSharedItemsViewController();
}

uint64_t type metadata accessor for InternalSharedItemsDataSourceProvider()
{
  return self;
}

uint64_t method lookup function for InternalSharedItemsDataSourceProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InternalSharedItemsDataSourceProvider);
}

uint64_t dispatch thunk of InternalSharedItemsDataSourceProvider.store.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of InternalSharedItemsDataSourceProvider.store.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of InternalSharedItemsDataSourceProvider.store.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of InternalSharedItemsDataSourceProvider.__allocating_init(predicate:sourceProfile:store:healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of InternalSharedItemsDataSourceProvider.selectedDataSources(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t sub_1C2415DE8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2415E30(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C2270AE4(255, a3);
    unint64_t v4 = sub_1C2550820();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id HealthRecordsNotifications.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

unint64_t static HealthRecordsNotifications.Domains.notificationContentState.getter()
{
  return 0xD00000000000002CLL;
}

unint64_t static HealthRecordsNotifications.Domains.notificationGeneration(profileIdentifier:)()
{
  return 0xD000000000000022;
}

id HealthRecordsNotifications.init()()
{
  id v1 = v0;
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1C2550620()) {
    unint64_t v2 = sub_1C2418588(MEMORY[0x1E4FBC860]);
  }
  else {
    unint64_t v2 = MEMORY[0x1E4FBC870];
  }
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI26HealthRecordsNotifications_cancellables] = v2;
  sub_1C254CE60();
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI26HealthRecordsNotifications_notificationManager] = sub_1C254CE50();

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for HealthRecordsNotifications();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for HealthRecordsNotifications()
{
  return self;
}

uint64_t sub_1C24160D4(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  sub_1C2419060(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  objc_super v4 = (char *)&v16 - v3;
  sub_1C2418838();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C254CE30();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v20 = (id)sub_1C254FC70();
  uint64_t v10 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_1C2418938();
  sub_1C2418A34(&qword_1EA2E3340, (void (*)(uint64_t))sub_1C2418938);
  sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
  sub_1C254EC70();
  sub_1C2258214((uint64_t)v4);

  swift_release();
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v12 = (void *)swift_allocObject();
  uint64_t v13 = v17;
  uint64_t v14 = v18;
  id v12[2] = v11;
  v12[3] = v13;
  v12[4] = v14;
  sub_1C2418A34(&qword_1EA2E3348, (void (*)(uint64_t))sub_1C2418838);
  swift_retain();
  sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  sub_1C254E9F0();
  swift_endAccess();
  return swift_release();
}

void sub_1C2416444(id *a1, uint64_t a2, void (*a3)(id), uint64_t a4)
{
  uint64_t v7 = a2 + 16;
  id v8 = objc_msgSend(*a1, sel_authorizationStatus);
  if (v8 == (id)1)
  {
    swift_beginAccess();
    uint64_t v12 = MEMORY[0x1C875A200](v7);
    if (v12)
    {
      uint64_t v13 = (void *)v12;
      id v14 = sub_1C2418B10();
    }
    else
    {
      id v14 = 0;
    }
    a3(v14);
  }
  else if (v8)
  {
    a3(0);
  }
  else
  {
    swift_beginAccess();
    uint64_t v9 = MEMORY[0x1C875A200](v7);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      swift_retain();

      uint64_t v11 = (void *)swift_allocObject();
      void v11[2] = a3;
      v11[3] = a4;
      void v11[4] = a2;
      swift_retain();
      swift_retain();
      sub_1C254CE40();
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_1C24165A0(int a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v41 = a3;
  int v42 = a1;
  uint64_t v8 = sub_1C254F1C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C254F200();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v44 = v12;
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C254E560();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v39 = v9;
    uint64_t v40 = v8;
    id v19 = a2;
    sub_1C254E510();
    id v20 = a2;
    id v21 = a2;
    double v22 = sub_1C254E550();
    os_log_type_t v23 = sub_1C254FA20();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v38 = a5;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v36 = v15;
      unint64_t v25 = (uint8_t *)v24;
      uint64_t v35 = swift_slowAlloc();
      uint64_t v45 = (uint64_t)a2;
      aBlock[0] = v35;
      uint64_t v37 = a4;
      *(_DWORD *)unint64_t v25 = 136446210;
      CGRect v34 = v25 + 4;
      id v26 = a2;
      sub_1C2206F9C();
      uint64_t v27 = sub_1C254F4F0();
      uint64_t v45 = sub_1C21AD354(v27, v28, aBlock);
      a4 = v37;
      sub_1C2550120();
      a5 = v38;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v22, v23, "Failed to request notification authorization for new health records alert: %{public}s", v25, 0xCu);
      uint64_t v29 = v35;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v29, -1, -1);
      MEMORY[0x1C875A0B0](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v36);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
    uint64_t v9 = v39;
    uint64_t v8 = v40;
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  CGFloat v30 = (void *)sub_1C254FC70();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v41;
  *(void *)(v31 + 24) = a4;
  *(unsigned char *)(v31 + 32) = v42 & 1;
  *(void *)(v31 + 40) = a5;
  aBlock[4] = (uint64_t)sub_1C2419048;
  aBlock[5] = v31;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C224E544;
  aBlock[3] = (uint64_t)&block_descriptor_54;
  CGRect v32 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C2418A34((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C2419060(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v14, v11, v32);
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v14, v44);
}

void sub_1C2416AE0(void (*a1)(id), uint64_t a2, char a3, uint64_t a4)
{
  if ((a3 & 1) != 0 || (v5 = a4 + 16, swift_beginAccess(), (uint64_t v6 = MEMORY[0x1C875A200](v5)) == 0))
  {
    id v8 = 0;
  }
  else
  {
    uint64_t v7 = (void *)v6;
    id v8 = sub_1C2418B10();
  }
  a1(v8);
}

void sub_1C2416BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v18[1] = a3;
  uint64_t v3 = sub_1C254E070();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254E080();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C254E0A0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F666B8], v7);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F666A8], v3);
  sub_1C254E090();
  sub_1C2418A34(&qword_1EA2E2A00, MEMORY[0x1E4F666C0]);
  sub_1C254D140();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6DD78);
  uint64_t v15 = (void *)sub_1C254FA70();
  uint64_t v16 = (void *)sub_1C254F7C0();
  uint64_t v17 = (void *)sub_1C254F430();
  objc_msgSend(v15, sel_setValue_forKey_, v16, v17);
}

uint64_t sub_1C2416F10()
{
  uint64_t v17 = sub_1C254D130();
  uint64_t v0 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C254E070();
  uint64_t v3 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254E080();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254E0A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F666B8], v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F66690], v16);
  sub_1C254E090();
  sub_1C2418A34(&qword_1EA2E2A00, MEMORY[0x1E4F666C0]);
  sub_1C254D140();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v14 = v17;
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x1E4F65E98], v17);
  sub_1C254D120();
  return (*(uint64_t (**)(char *, uint64_t))(v0 + 8))(v2, v14);
}

id HealthRecordsNotifications.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthRecordsNotifications();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C2417308(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1C2283C6C();
      uint64_t v3 = sub_1C2550370();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v43 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v41 = v1;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = MEMORY[0x1C87588E0](v8, v1);
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        uint64_t v12 = sub_1C254FF60();
        uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)(v7 + 8 * v15) = v17 | v16;
        *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
        uint64_t v23 = *(void *)(v3 + 16);
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        *(void *)(v3 + 16) = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
      id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
      char v19 = sub_1C254FF70();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_1C254FF70();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v41;
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      unint64_t v1 = v41;
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = v1 + 32;
  uint64_t v42 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_1C254FF60();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_1C254FF70();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_1C254FF70();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_38;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_1C2417660(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return;
  }
  sub_1C2419198();
  uint64_t v3 = sub_1C2550370();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v111 = v1;
  uint64_t v112 = a1 + 32;
  uint64_t v125 = v3 + 56;
  uint64_t v126 = v3;
  while (1)
  {
    uint64_t v6 = (unsigned __int8 *)(v112 + 72 * v4);
    int v7 = *v6;
    uint64_t v8 = (void *)*((void *)v6 + 1);
    uint64_t v9 = *((void *)v6 + 2);
    uint64_t v10 = *((void *)v6 + 3);
    uint64_t v123 = *((void *)v6 + 4);
    long long v120 = *(_OWORD *)(v6 + 56);
    long long v121 = *(_OWORD *)(v6 + 40);
    sub_1C25509C0();
    int v130 = v7;
    sub_1C25509D0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = *((id *)&v120 + 1);
    id v12 = v8;
    sub_1C254FF80();
    id v129 = v12;

    uint64_t v127 = v11;
    sub_1C25509E0();
    if (v10)
    {
      swift_bridgeObjectRetain();
      sub_1C254F570();
      swift_bridgeObjectRelease();
    }
    uint64_t v124 = v10;
    swift_bridgeObjectRetain();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    if (*((void *)&v121 + 1) >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v25 = sub_1C2550620();
      swift_bridgeObjectRelease();
      uint64_t v119 = v25;
      sub_1C25509D0();
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_1C2550620();
      swift_bridgeObjectRelease();
      uint64_t v117 = *((void *)&v121 + 1);
      if (!v14) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((*((void *)&v121 + 1) & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v119 = v13;
      sub_1C25509D0();
      uint64_t v14 = *(void *)((*((void *)&v121 + 1) & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v117 = *((void *)&v121 + 1);
      if (!v14) {
        goto LABEL_14;
      }
    }
    if (v14 < 1) {
      goto LABEL_144;
    }
    if ((*((void *)&v121 + 1) & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v14; ++i)
      {
        MEMORY[0x1C87588E0](i, *((void *)&v121 + 1));
        sub_1C254FF80();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v16 = 0;
      do
      {
        uint64_t v17 = *(void **)(*((void *)&v121 + 1) + 8 * v16++ + 32);
        id v18 = v17;
        sub_1C254FF80();
      }
      while (v14 != v16);
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v115 = v4;
    uint64_t v122 = v9;
    if ((unint64_t)v120 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v26 = sub_1C2550620();
      swift_bridgeObjectRelease();
      uint64_t v116 = v26;
      sub_1C25509D0();
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (!v20) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v116 = v19;
      sub_1C25509D0();
      uint64_t v20 = *(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v20) {
        goto LABEL_27;
      }
    }
    if (v20 < 1) {
      goto LABEL_145;
    }
    if ((v120 & 0xC000000000000001) != 0)
    {
      for (uint64_t j = 0; j != v20; ++j)
      {
        MEMORY[0x1C87588E0](j, v120);
        sub_1C254FF80();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v22 = 0;
      do
      {
        uint64_t v23 = *(void **)(v120 + 8 * v22++ + 32);
        id v24 = v23;
        sub_1C254FF80();
      }
      while (v20 != v22);
    }
LABEL_27:
    swift_bridgeObjectRelease();
    id v27 = v127;
    sub_1C254FF80();

    uint64_t v28 = sub_1C2550A10();
    uint64_t v29 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)(v5 + 8 * (v30 >> 6));
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      uint64_t v34 = ~v29;
      uint64_t v35 = v117 & 0xFFFFFFFFFFFFFF8;
      uint64_t v36 = (v117 & 0xFFFFFFFFFFFFFF8) + 32;
      if (v117 < 0) {
        uint64_t v35 = v117;
      }
      if (*((void *)&v121 + 1) >> 62) {
        uint64_t v36 = v35;
      }
      uint64_t v113 = v36;
      unint64_t v114 = v117 & 0xC000000000000001;
      uint64_t v37 = v120 & 0xFFFFFFFFFFFFFF8;
      uint64_t v38 = (v120 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v107 = v27;
      if ((uint64_t)v120 < 0) {
        uint64_t v37 = v120;
      }
      if ((unint64_t)v120 >> 62) {
        uint64_t v38 = v37;
      }
      uint64_t v106 = v38;
      unint64_t v108 = v120 & 0xC000000000000001;
      uint64_t v128 = v34;
      do
      {
        uint64_t v39 = (void *)(*(void *)(v3 + 48) + 72 * v30);
        if (*(unsigned __int8 *)v39 != v130) {
          goto LABEL_40;
        }
        unint64_t v41 = (void *)v39[1];
        uint64_t v40 = v39[2];
        uint64_t v43 = v39[3];
        uint64_t v42 = v39[4];
        uint64_t v44 = v39[5];
        uint64_t v45 = v39[6];
        uint64_t v47 = v39[7];
        uint64_t v46 = (void *)v39[8];
        sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v48 = v46;
        id v49 = v41;
        if ((sub_1C254FF70() & 1) == 0)
        {
LABEL_38:

LABEL_39:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          uint64_t v5 = v125;
          uint64_t v3 = v126;
          uint64_t v34 = v128;
          goto LABEL_40;
        }
        if (v43)
        {
          if (!v124) {
            goto LABEL_38;
          }
          BOOL v50 = v40 == v122 && v43 == v124;
          if (!v50 && (sub_1C2550870() & 1) == 0) {
            goto LABEL_38;
          }
        }
        else if (v124)
        {
          goto LABEL_38;
        }
        BOOL v51 = v42 == v123 && v44 == (void)v121;
        if (!v51 && (sub_1C2550870() & 1) == 0) {
          goto LABEL_38;
        }
        uint64_t v118 = v48;
        if ((unint64_t)v45 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v52 = sub_1C2550620();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v52 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v52 != v119)
        {
LABEL_131:

          goto LABEL_39;
        }
        if (!v119) {
          goto LABEL_72;
        }
        uint64_t v53 = v45 & 0xFFFFFFFFFFFFFF8;
        uint64_t v54 = (v45 & 0xFFFFFFFFFFFFFF8) + 32;
        if (v45 < 0) {
          uint64_t v53 = v45;
        }
        if ((unint64_t)v45 >> 62) {
          uint64_t v54 = v53;
        }
        if (v54 == v113) {
          goto LABEL_72;
        }
        if (v119 < 0) {
          goto LABEL_146;
        }
        unint64_t v109 = v45 & 0xC000000000000001;
        if ((v45 & 0xC000000000000001) != 0)
        {
          id v55 = (id)MEMORY[0x1C87588E0](0, v45);
          if (v114) {
            goto LABEL_135;
          }
        }
        else
        {
          if (!*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_147;
          }
          id v55 = *(id *)(v45 + 32);
          if (v114)
          {
LABEL_135:
            id v56 = (id)MEMORY[0x1C87588E0](0, v117);
            goto LABEL_70;
          }
        }
        if (!*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_148;
        }
        id v56 = *(id *)(v117 + 32);
LABEL_70:
        uint64_t v57 = v56;
        sub_1C21AB51C(0, &qword_1EBB6EF58);
        char v58 = sub_1C254FF70();
        id v59 = v55;
        char v60 = v58;

        if ((v60 & 1) == 0) {
          goto LABEL_38;
        }
        if (v119 != 1)
        {
          if (v109)
          {
            id v72 = (id)MEMORY[0x1C87588E0](1, v45);
            if (v114) {
              goto LABEL_94;
            }
LABEL_97:
            if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
              goto LABEL_157;
            }
            id v73 = *(id *)(v117 + 40);
          }
          else
          {
            if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
              goto LABEL_156;
            }
            id v72 = *(id *)(v45 + 40);
            if (!v114) {
              goto LABEL_97;
            }
LABEL_94:
            id v73 = (id)MEMORY[0x1C87588E0](1, v117);
          }
          unint64_t v74 = v73;
          char v75 = sub_1C254FF70();
          uint64_t v76 = v72;
          char v77 = v75;

          if ((v77 & 1) == 0) {
            goto LABEL_38;
          }
          uint64_t v78 = 6;
          while (2 - v119 + v78 != 6)
          {
            unint64_t v84 = v78 - 4;
            if (v109)
            {
              id v85 = (id)MEMORY[0x1C87588E0](v78 - 4, v45);
            }
            else
            {
              if (v84 >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_149;
              }
              id v85 = *(id *)(v45 + 8 * v78);
            }
            id v86 = v85;
            if (v114)
            {
              id v79 = (id)MEMORY[0x1C87588E0](v78 - 4, v117);
            }
            else
            {
              if (v84 >= *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_150;
              }
              id v79 = *(id *)(v117 + 8 * v78);
            }
            uint64_t v80 = v79;
            char v81 = sub_1C254FF70();
            uint64_t v82 = v86;
            char v83 = v81;

            ++v78;
            if ((v83 & 1) == 0) {
              goto LABEL_131;
            }
          }
        }
LABEL_72:
        if ((unint64_t)v47 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v61 = sub_1C2550620();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v61 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v61 != v116) {
          goto LABEL_131;
        }
        if (v116)
        {
          uint64_t v62 = v47 & 0xFFFFFFFFFFFFFF8;
          uint64_t v63 = (v47 & 0xFFFFFFFFFFFFFF8) + 32;
          if (v47 < 0) {
            uint64_t v62 = v47;
          }
          if ((unint64_t)v47 >> 62) {
            uint64_t v63 = v62;
          }
          if (v63 != v106)
          {
            if (v116 < 0) {
              goto LABEL_151;
            }
            unint64_t v110 = v47 & 0xC000000000000001;
            if ((v47 & 0xC000000000000001) != 0)
            {
              id v64 = (id)MEMORY[0x1C87588E0](0, v47);
            }
            else
            {
              if (!*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_152;
              }
              id v64 = *(id *)(v47 + 32);
            }
            id v65 = v64;
            id v48 = v118;
            if (v108)
            {
              id v66 = (id)MEMORY[0x1C87588E0](0, v120);
            }
            else
            {
              if (!*(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_153;
              }
              id v66 = *(id *)(v120 + 32);
            }
            uint64_t v67 = v66;
            sub_1C21AB51C(0, &qword_1EBB6EF58);
            char v68 = sub_1C254FF70();
            uint64_t v69 = v65;
            char v70 = v68;

            if ((v70 & 1) == 0) {
              goto LABEL_38;
            }
            if (v116 != 1)
            {
              if (v110)
              {
                id v87 = (id)MEMORY[0x1C87588E0](1, v47);
              }
              else
              {
                if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
                  goto LABEL_158;
                }
                id v87 = *(id *)(v47 + 40);
              }
              id v88 = v87;
              if (v108)
              {
                id v89 = (id)MEMORY[0x1C87588E0](1, v120);
                id v48 = v118;
              }
              else
              {
                id v48 = v118;
                if (*(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
                  goto LABEL_159;
                }
                id v89 = *(id *)(v120 + 40);
              }
              char v90 = sub_1C254FF70();
              uint64_t v91 = v88;
              char v92 = v90;

              if ((v92 & 1) == 0) {
                goto LABEL_38;
              }
              uint64_t v93 = 6;
              while (2 - v116 + v93 != 6)
              {
                unint64_t v99 = v93 - 4;
                if (v110)
                {
                  id v100 = (id)MEMORY[0x1C87588E0](v93 - 4, v47);
                }
                else
                {
                  if (v99 >= *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_154;
                  }
                  id v100 = *(id *)(v47 + 8 * v93);
                }
                id v101 = v100;
                if (v108)
                {
                  id v94 = (id)MEMORY[0x1C87588E0](v93 - 4, v120);
                }
                else
                {
                  if (v99 >= *(void *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_155;
                  }
                  id v94 = *(id *)(v120 + 8 * v93);
                }
                uint64_t v95 = v94;
                char v96 = sub_1C254FF70();
                uint64_t v97 = v101;
                char v98 = v96;

                ++v93;
                if ((v98 & 1) == 0) {
                  goto LABEL_131;
                }
              }
            }
          }
        }
        char v71 = sub_1C254FF70();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v5 = v125;
        uint64_t v3 = v126;
        uint64_t v34 = v128;
        if (v71)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          goto LABEL_140;
        }
LABEL_40:
        unint64_t v30 = (v30 + 1) & v34;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = *(void *)(v5 + 8 * (v30 >> 6));
        uint64_t v33 = 1 << v30;
      }
      while ((v32 & (1 << v30)) != 0);
    }
    *(void *)(v5 + 8 * v31) = v33 | v32;
    uint64_t v102 = *(void *)(v3 + 48) + 72 * v30;
    *(unsigned char *)uint64_t v102 = v130;
    *(void *)(v102 + 8) = v129;
    *(void *)(v102 + 16) = v122;
    *(void *)(v102 + 24) = v124;
    *(void *)(v102 + 32) = v123;
    *(_OWORD *)(v102 + 40) = v121;
    *(_OWORD *)(v102 + 56) = v120;
    uint64_t v103 = *(void *)(v3 + 16);
    BOOL v104 = __OFADD__(v103, 1);
    uint64_t v105 = v103 + 1;
    if (v104) {
      break;
    }
    *(void *)(v3 + 16) = v105;
LABEL_140:
    uint64_t v4 = v115 + 1;
    if (v115 + 1 == v111) {
      return;
    }
  }
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
}

uint64_t sub_1C2418274(uint64_t a1)
{
  uint64_t v2 = sub_1C254CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1C2285C24();
    uint64_t v9 = sub_1C2550370();
    uint64_t v10 = 0;
    id v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    unint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1C2418A34(&qword_1EA2DF9E8, MEMORY[0x1E4F27C88]);
      uint64_t v16 = sub_1C254F370();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1C2418A34((unint64_t *)&unk_1EA2E1B40, MEMORY[0x1E4F27C88]);
          char v23 = sub_1C254F420();
          id v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

unint64_t sub_1C2418588(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2550620();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1C2419104();
      uint64_t result = sub_1C2550370();
      unint64_t v3 = result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C2550620();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  unint64_t v8 = v3 + 56;
  unint64_t v22 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v21 = v1;
  while (v22)
  {
    uint64_t result = MEMORY[0x1C87588E0](v7, v1);
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_26;
    }
LABEL_18:
    sub_1C254EA10();
    sub_1C2418A34(&qword_1EA2E2388, MEMORY[0x1E4F1AB18]);
    uint64_t result = sub_1C254F370();
    uint64_t v11 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_1C2418A34(&qword_1EA2E3358, MEMORY[0x1E4F1AB18]);
      do
      {
        uint64_t result = sub_1C254F420();
        if (result)
        {
          uint64_t result = swift_release();
          unint64_t v1 = v21;
          goto LABEL_11;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)(v8 + 8 * (v12 >> 6));
        uint64_t v15 = 1 << v12;
      }
      while ((v14 & (1 << v12)) != 0);
      unint64_t v1 = v21;
    }
    *(void *)(v8 + 8 * v13) = v15 | v14;
    *(void *)(*(void *)(v3 + 48) + 8 * v12) = v9;
    uint64_t v17 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v17, 1);
    uint64_t v18 = v17 + 1;
    if (v10) {
      goto LABEL_27;
    }
    *(void *)(v3 + 16) = v18;
LABEL_11:
    if (v7 == v5) {
      return v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void sub_1C2418838()
{
  if (!qword_1EA2E3328)
  {
    sub_1C2418938();
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    sub_1C2418A34(&qword_1EA2E3340, (void (*)(uint64_t))sub_1C2418938);
    sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
    unint64_t v0 = sub_1C254E9B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3328);
    }
  }
}

void sub_1C2418938()
{
  if (!qword_1EA2E3330)
  {
    sub_1C21AB51C(255, &qword_1EA2E3338);
    unint64_t v0 = sub_1C254EAE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3330);
    }
  }
}

uint64_t sub_1C24189B0()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C24189E8()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C2418A28(id *a1)
{
  sub_1C2416444(a1, *(void *)(v1 + 16), *(void (**)(id))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C2418A34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for HealthRecordsNotifications(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthRecordsNotifications);
}

uint64_t dispatch thunk of HealthRecordsNotifications.notificationAlertIfNecessary(completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

ValueMetadata *type metadata accessor for HealthRecordsNotifications.Domains()
{
  return &type metadata for HealthRecordsNotifications.Domains;
}

uint64_t sub_1C2418AD8()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C2418B10()
{
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6DD78);
  uint64_t v0 = (void *)sub_1C254FA70();
  uint64_t v1 = (void *)sub_1C254F430();
  unsigned __int8 v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  id v3 = 0;
  if ((v2 & 1) == 0)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    id v5 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    unint64_t v7 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v3 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v6, v7, 1, 0xE000000000000000);

    id v8 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = 0xD000000000000018;
    *(void *)(v9 + 24) = 0x80000001C2584DB0;
    BOOL v10 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    char v23 = sub_1C24190FC;
    uint64_t v24 = v9;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v20 = 1107296256;
    unint64_t v21 = sub_1C224DAAC;
    unint64_t v22 = &block_descriptor_23_1;
    uint64_t v11 = _Block_copy(&aBlock);
    swift_release();
    unint64_t v12 = self;
    id v13 = objc_msgSend(v12, sel_actionWithTitle_style_handler_, v10, 1, v11, 0xE000000000000000);
    _Block_release(v11);

    objc_msgSend(v3, sel_addAction_, v13);
    id v14 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v15 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    char v23 = sub_1C2416F10;
    uint64_t v24 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v20 = 1107296256;
    unint64_t v21 = sub_1C224DAAC;
    unint64_t v22 = &block_descriptor_26_1;
    uint64_t v16 = _Block_copy(&aBlock);
    swift_release();
    id v17 = objc_msgSend(v12, sel_actionWithTitle_style_handler_, v15, 0, v16, 0xE000000000000000);
    _Block_release(v16);

    objc_msgSend(v3, sel_addAction_, v17);
  }
  return v3;
}

uint64_t sub_1C2418FBC()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2418FFC(int a1, void *a2)
{
  return sub_1C24165A0(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1C2419008()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C2419048()
{
  sub_1C2416AE0(*(void (**)(id))(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t block_destroy_helper_50()
{
  return swift_release();
}

void sub_1C2419060(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C24190C4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C24190FC(uint64_t a1)
{
  sub_1C2416BF0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C2419104()
{
  if (!qword_1EA2E3350)
  {
    sub_1C254EA10();
    sub_1C2418A34(&qword_1EA2E2388, MEMORY[0x1E4F1AB18]);
    unint64_t v0 = sub_1C2550380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3350);
    }
  }
}

void sub_1C2419198()
{
  if (!qword_1EA2DF888)
  {
    sub_1C220732C();
    unint64_t v0 = sub_1C2550380();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF888);
    }
  }
}

int64_t sub_1C2419204(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_1C2419250()
{
  if (objc_msgSend(v0, sel_controllerMode) == (id)3) {
    return 0;
  }
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartabilityResult];
  unint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_seriesDataSources);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v4 > 1) {
      return 1;
    }
  }
  else if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    return 1;
  }
  if (!*(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource)) {
    return 0;
  }
  return *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource) != 0;
}

uint64_t sub_1C2419514()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C241B3A4(0, &qword_1EA2E33C0, MEMORY[0x1E4F27CA0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)&v43 - v4;
  sub_1C241B3A4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], v2);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v10 = MEMORY[0x1F4188790](v9).n128_u64[0];
  unint64_t v12 = (char *)&v43 - v11;
  objc_msgSend(*(id *)(*(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartabilityResult]+ OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_configuration), sel_chartControllerClass, v10);
  swift_getObjCClassMetadata();
  sub_1C21AB51C(0, &qword_1EA2E33C8);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_isSubclassOfClass_, ObjCClassFromMetadata)
    && (uint64_t v14 = swift_dynamicCastMetatype()) != 0)
  {
    uint64_t v15 = v14;
    int v16 = v1[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartType];
    sub_1C241B3A4(0, &qword_1EA2E33D0, (uint64_t (*)(uint64_t))sub_1C241B550, MEMORY[0x1E4FBBE00]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C255CD90;
    unint64_t v18 = *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_displayTypes];
    uint64_t v46 = v15;
    int v45 = v16;
    uint64_t v43 = v5;
    if (v18 >> 62)
    {
      sub_1C21AB51C(0, (unint64_t *)&unk_1EA2E33E0);
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1C2550610();
      swift_bridgeObjectRelease();
      unint64_t v18 = v42;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1C25508A0();
      sub_1C21AB51C(0, (unint64_t *)&unk_1EA2E33E0);
    }
    *(void *)(v17 + 32) = v18;
    id v19 = objc_msgSend(v1, sel_applicationItems, v43);
    id v44 = objc_msgSend(v19, sel_healthStore);

    id v20 = objc_msgSend(v1, sel_applicationItems);
    id v21 = objc_msgSend(v20, sel_unitController);

    id v22 = objc_msgSend(v1, sel_applicationItems);
    id v23 = objc_msgSend(v22, sel_dateCache);

    id v24 = objc_msgSend(v1, sel_applicationItems);
    id v25 = objc_msgSend(v24, sel_chartDataCacheController);

    id v26 = objc_msgSend(v1, sel_applicationItems);
    id v27 = objc_msgSend(v26, sel_timeScopeController);

    id v28 = objc_msgSend(v1, sel_applicationItems);
    id v29 = objc_msgSend(v28, sel_sampleDateRangeController);

    id v30 = objc_msgSend(v1, sel_displayDate);
    if (v30)
    {
      unint64_t v31 = v30;
      sub_1C254CA80();

      uint64_t v32 = sub_1C254CAD0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v8, 0, 1, v32);
    }
    else
    {
      uint64_t v32 = sub_1C254CAD0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v8, 1, 1, v32);
    }
    sub_1C22AE66C((uint64_t)v8, (uint64_t)v12);
    sub_1C254CAD0();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v12, 1, v32) == 1)
    {
      sub_1C241B488((uint64_t)v12, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
      long long v47 = 0u;
      long long v48 = 0u;
    }
    else
    {
      *((void *)&v48 + 1) = v32;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v47);
      (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 32))(boxed_opaque_existential_1, v12, v32);
    }
    uint64_t v35 = v44;
    if (v45) {
      uint64_t v36 = 173312;
    }
    else {
      uint64_t v36 = 1280;
    }
    uint64_t v37 = sub_1C254CCC0();
    uint64_t v38 = (uint64_t)v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v43, 1, 1, v37);
    id v39 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v40 = sub_1C241A168(v17, 0, 0, v35, v21, v23, v25, v27, v29, &v47, v38, v36, 0);
    objc_msgSend(v40, sel_addChartViewObserver_, v40);
    return (uint64_t)v40;
  }
  else
  {
    uint64_t result = sub_1C25505F0();
    __break(1u);
  }
  return result;
}

id sub_1C2419C70(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C241B3A4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  double v10 = &v18[-v9 - 8];
  sub_1C21F4424(v3 + OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartDefining, (uint64_t)v18);
  uint64_t v11 = *(void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartabilityResult);
  HIBYTE(v17) = *(unsigned char *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartType);
  sub_1C241B408(a2, (uint64_t)v10, (unint64_t *)&qword_1EBB6F550, v7);
  id v12 = objc_allocWithZone((Class)type metadata accessor for ChartOverlayViewController());
  id v13 = v11;
  id v14 = a3;
  id v15 = sub_1C241A864((uint64_t)v18, v13, (unsigned char *)&v17 + 7, a1, (uint64_t)v14, (uint64_t)v10);

  return v15;
}

id sub_1C241A0B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChartOverlayViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ChartOverlayViewController()
{
  return self;
}

id sub_1C241A168(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  id v39 = a6;
  id v40 = a7;
  unint64_t v41 = a8;
  id v42 = a5;
  sub_1C241B550();
  uint64_t v36 = sub_1C254F700();
  swift_bridgeObjectRelease();
  if (a3)
  {
    sub_1C21AB51C(0, (unint64_t *)&unk_1EA2E3400);
    uint64_t v37 = sub_1C254F700();
    swift_bridgeObjectRelease();
    uint64_t v16 = a10[3];
    if (v16)
    {
LABEL_3:
      uint64_t v17 = __swift_project_boxed_opaque_existential_1Tm(a10, v16);
      uint64_t v18 = *(void *)(v16 - 8);
      __n128 v19 = MEMORY[0x1F4188790](v17);
      id v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v18 + 16))(v21, v19);
      uint64_t v22 = sub_1C2550860();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a10);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v16 = a10[3];
    if (v16) {
      goto LABEL_3;
    }
  }
  uint64_t v22 = 0;
LABEL_6:
  uint64_t v23 = sub_1C254CCC0();
  uint64_t v24 = *(void *)(v23 - 8);
  id v25 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(a11, 1, v23) != 1)
  {
    id v25 = (void *)sub_1C254CC30();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a11, v23);
  }
  if (a13)
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
    sub_1C21AB51C(0, (unint64_t *)&unk_1EA2E33F0);
    sub_1C21A9630();
    id v26 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v26 = 0;
  }
  uint64_t v34 = v22;
  id v27 = v41;
  id v28 = v40;
  id v30 = (void *)v37;
  id v29 = v38;
  unint64_t v31 = (void *)v36;
  id v38 = a9;
  uint64_t v32 = v39;
  id v35 = objc_msgSend(v29, sel_initWithStackedDisplayTypes_primaryDisplayTypeStackIndex_stackedDisplayTypeHeights_healthStore_unitPreferenceController_dateCache_chartDataCacheController_selectedTimeScopeController_sampleTypeDateRangeController_initialXValue_currentCalendarOverride_options_timeScopeRanges_, v36, a2, v37, a4, v42, v39, v40, v41, a9, v34, v25, a12, v26);

  swift_unknownObjectRelease();
  return v35;
}

uint64_t sub_1C241A4BC(uint64_t result, uint64_t a2, unint64_t a3, void *a4, void *a5)
{
  int64_t v25 = a3 >> 1;
  uint64_t v5 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2)) {
    goto LABEL_16;
  }
  uint64_t v6 = result;
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2550490();
    if (v5 < 0)
    {
LABEL_17:
      __break(1u);
      return result;
    }
    uint64_t v23 = v5;
    uint64_t v8 = 0;
    uint64_t v9 = (void **)(v6 + 24 * a2 + 16);
    while (!__OFADD__(v8, 1))
    {
      if (a2 + v8 >= v25 || v8 >= v5) {
        goto LABEL_15;
      }
      uint64_t v27 = v8 + 1;
      uint64_t v16 = (uint64_t)*(v9 - 2);
      uint64_t v15 = (uint64_t)*(v9 - 1);
      uint64_t v17 = (char *)*v9;
      uint64_t v18 = (objc_class *)type metadata accessor for MedicalRecordChartOverlayContext();
      __n128 v19 = (char *)objc_allocWithZone(v18);
      *(void *)&v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedItem] = 0;
      *(void *)&v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedOverlayDisplayType] = 0;
      *(void *)&v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_cachedDataSource] = 0;
      uint64_t v20 = &v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_title];
      *(void *)uint64_t v20 = v16;
      *((void *)v20 + 1) = v15;
      *(void *)&v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_dataSource] = v17;
      *(void *)&v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_defaultColors] = a4;
      id v21 = (void **)&v17[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors];
      swift_beginAccess();
      uint64_t v22 = *v21;
      if (v22) {
        id v10 = v22;
      }
      else {
        id v10 = a4;
      }
      *(void *)&v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_selectedColors] = v10;
      *(void *)&v19[OBJC_IVAR____TtC15HealthRecordsUI32MedicalRecordChartOverlayContext_verticalAxis] = a5;
      v28.receiver = v19;
      v28.super_class = v18;
      swift_bridgeObjectRetain();
      uint64_t v11 = v17;
      id v12 = a4;
      id v13 = a5;
      id v14 = v22;
      objc_msgSendSuper2(&v28, sel_init);
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      uint64_t result = sub_1C2550470();
      ++v8;
      v9 += 3;
      uint64_t v5 = v23;
      if (v27 == v23) {
        return v29;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_1C241A6D0(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C2550620();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C2550620();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C2550620();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    _s11SizedRecordCMa();
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = v10 + 1;
      sub_1C25503C0();
      uint64_t v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C2550630();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

id sub_1C241A864(uint64_t a1, char *a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a5;
  uint64_t v31 = a4;
  uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C241B3A4(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  id v14 = (char *)&v29 - v13;
  LOBYTE(a3) = *a3;
  sub_1C21F4424(a1, (uint64_t)&v6[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartDefining]);
  v6[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartType] = (_BYTE)a3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartabilityResult] = a2;
  sub_1C21ACA3C();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C255CEB0;
  uint64_t v16 = *(void **)&a2[OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_masterDataSource];
  uint64_t v17 = self;
  uint64_t v18 = v6;
  __n128 v19 = a2;
  uint64_t v20 = v16;
  id v21 = objc_msgSend(v17, sel_standardNumericYAxisWithConfigurationOverrides_, 0);
  uint64_t v22 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v20) + 0x160))();

  *(void *)(v15 + 32) = v22;
  uint64_t v33 = v15;
  sub_1C254F730();
  *(void *)&v18[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_displayTypes] = v33;

  sub_1C241B408(a6, (uint64_t)v14, (unint64_t *)&qword_1EBB6F550, v11);
  uint64_t v23 = sub_1C254CAD0();
  uint64_t v24 = *(void *)(v23 - 8);
  int64_t v25 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v23) != 1)
  {
    int64_t v25 = (void *)sub_1C254CA50();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v23);
  }
  id v26 = (objc_class *)type metadata accessor for ChartOverlayViewController();
  v32.receiver = v18;
  v32.super_class = v26;
  id v27 = objc_msgSendSuper2(&v32, sel_initWithDisplayDate_applicationItems_factorDisplayTypes_mode_, v25, v30, 0, v31);

  sub_1C241B488(a6, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v27;
}

uint64_t sub_1C241AB4C()
{
  uint64_t v1 = v0;
  unint64_t v2 = &v0[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartDefining];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartDefining + 24];
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartDefining + 32];
  __swift_project_boxed_opaque_existential_1Tm(&v0[OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartDefining], v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    uint64_t v9 = *((void *)v2 + 3);
    uint64_t v10 = *((void *)v2 + 4);
    __swift_project_boxed_opaque_existential_1Tm(v2, v9);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  }
  else
  {
    id v12 = objc_msgSend(v1, sel_title);
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v11 = sub_1C254F470();
    }
    else
    {
      return 0;
    }
  }
  return v11;
}

uint64_t sub_1C241AC5C(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!a1) {
    return v2;
  }
  id v68 = objc_msgSend(self, sel_standardNumericYAxisWithConfigurationOverrides_, 0);
  sub_1C21AB51C(0, (unint64_t *)&unk_1EA2E3390);
  if (a1 == 1)
  {
    id v67 = static HKUIMetricColors.chartFilterDefaultForSingle()();
    uint64_t v4 = 1;
  }
  else
  {
    id v67 = static HKUIMetricColors.chartFilterDefaultForMultiple()();
    uint64_t v4 = 0x7FFFFFFFFFFFFFFFLL;
  }
  int64_t v66 = v4;
  sub_1C241B3A4(0, &qword_1EA2DF4E8, (uint64_t (*)(uint64_t))sub_1C226FD98, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
  if (qword_1EA2DD660 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EA2E0B00;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C254C730();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();

  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI26ChartOverlayViewController_chartabilityResult);
  uint64_t v11 = *(void **)(v10 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_outOfRangeDataSource);
  *(void *)(inited + 48) = v11;
  id v12 = (void *)qword_1EA2E0B00;
  id v13 = v11;
  id v14 = v12;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C254C730();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();

  *(void *)(inited + 56) = v15;
  *(void *)(inited + 64) = v17;
  uint64_t v18 = *(void **)(v10 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_noRangeDataSource);
  *(void *)(inited + 72) = v18;
  unint64_t v19 = *(void *)(v10 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordChartabilityResult_seriesDataSources);
  if (!(v19 >> 62))
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v21 = v18;
    swift_bridgeObjectRetain();
    if (v20) {
      goto LABEL_9;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    uint64_t v31 = MEMORY[0x1E4FBC860];
LABEL_25:
    v69[0] = inited;
    sub_1C2272C1C(v31);
    uint64_t v36 = v69[0];
    uint64_t v37 = *(void *)(v69[0] + 16);
    if (v37)
    {
      swift_bridgeObjectRetain();
      id v38 = (void **)(v36 + 48);
      id v39 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        unint64_t v41 = *v38;
        if (*v38)
        {
          uint64_t v43 = (uint64_t)*(v38 - 2);
          uint64_t v42 = (uint64_t)*(v38 - 1);
          swift_bridgeObjectRetain();
          id v44 = v41;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v39 = sub_1C226E02C(0, v39[2] + 1, 1, v39);
          }
          unint64_t v46 = v39[2];
          unint64_t v45 = v39[3];
          if (v46 >= v45 >> 1) {
            id v39 = sub_1C226E02C((void *)(v45 > 1), v46 + 1, 1, v39);
          }
          v39[2] = v46 + 1;
          id v40 = &v39[3 * v46];
          v40[4] = v43;
          v40[5] = v42;
          v40[6] = v44;
        }
        v38 += 3;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease();
    }
    else
    {
      id v39 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    sub_1C2419204(v66, (uint64_t)v39);
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    unint64_t v52 = v51;
    id v53 = v67;
    id v54 = v68;
    unint64_t v55 = sub_1C241A4BC(v48, v50, v52, v53, v54);

    if (v55 >> 62)
    {
      sub_1C241B4F8();
      sub_1C2550610();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1C25508A0();
      sub_1C241B4F8();
    }
    swift_bridgeObjectRelease();
    id v56 = objc_allocWithZone(MEMORY[0x1E4F67BB8]);
    sub_1C241B4F8();
    uint64_t v57 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v58 = objc_msgSend(v56, sel_initWithSectionTitle_overlayContextItems_, 0, v57, 0xE000000000000000);

    sub_1C21ACA3C();
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_1C255CEB0;
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_1C255CEB0;
    *(void *)(v60 + 32) = v58;
    v69[0] = v60;
    sub_1C254F730();
    id v61 = objc_allocWithZone(MEMORY[0x1E4F67BC0]);
    sub_1C21AB51C(0, &qword_1EA2E33B8);
    id v62 = v58;
    uint64_t v63 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v64 = objc_msgSend(v61, sel_initWithContainerTitle_overlayContextSections_, 0, v63);

    *(void *)(v59 + 32) = v64;
    v69[0] = v59;
    sub_1C254F730();
    uint64_t v2 = v69[0];

    swift_unknownObjectRelease();
    return v2;
  }
  id v35 = v18;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C2550620();
  if (!v20) {
    goto LABEL_24;
  }
LABEL_9:
  uint64_t v72 = v2;
  uint64_t result = sub_1C227502C(0, v20 & ~(v20 >> 63), 0);
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t v65 = inited;
    uint64_t v23 = 0;
    uint64_t v24 = v20;
    do
    {
      if ((v19 & 0xC000000000000001) != 0) {
        id v25 = (id)MEMORY[0x1C87588E0](v23, v19);
      }
      else {
        id v25 = *(id *)(v19 + 8 * v23 + 32);
      }
      id v26 = v25;
      sub_1C241B408((uint64_t)v25 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartDefining, (uint64_t)v69, (unint64_t *)&qword_1EA2E20E0, (uint64_t (*)(uint64_t))sub_1C2399058);
      uint64_t v27 = v70;
      if (v70)
      {
        uint64_t v28 = v71;
        __swift_project_boxed_opaque_existential_1Tm(v69, v70);
        uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
        unint64_t v30 = v29;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v69);
      }
      else
      {
        sub_1C241B488((uint64_t)v69, (unint64_t *)&qword_1EA2E20E0, (uint64_t (*)(uint64_t))sub_1C2399058);
        unint64_t v30 = 0xE000000000000000;
      }
      uint64_t v31 = v72;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C227502C(0, *(void *)(v31 + 16) + 1, 1);
        uint64_t v31 = v72;
      }
      unint64_t v33 = *(void *)(v31 + 16);
      unint64_t v32 = *(void *)(v31 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1C227502C(v32 > 1, v33 + 1, 1);
        uint64_t v31 = v72;
      }
      ++v23;
      *(void *)(v31 + 16) = v33 + 1;
      uint64_t v34 = (void *)(v31 + 24 * v33);
      v34[4] = v27;
      v34[5] = v30;
      v34[6] = v26;
    }
    while (v24 != v23);
    swift_bridgeObjectRelease();
    uint64_t inited = v65;
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

void sub_1C241B3A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C241B408(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C241B3A4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C241B488(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C241B3A4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C241B4F8()
{
  unint64_t result = qword_1EA2E33B0;
  if (!qword_1EA2E33B0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E33B0);
  }
  return result;
}

void sub_1C241B550()
{
  if (!qword_1EA2E33D8)
  {
    sub_1C21AB51C(255, (unint64_t *)&unk_1EA2E33E0);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E33D8);
    }
  }
}

void *sub_1C241B5B8(uint64_t a1)
{
  unint64_t result = (void *)sub_1C24BBB28();
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (void *)(1 << *(unsigned char *)(a1 + 32))) {
    return 0;
  }
  else {
    return sub_1C241E1F8(&v5, (uint64_t)result, v3, 0, a1);
  }
}

uint64_t sub_1C241B648(uint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = sub_1C2550240();
    uint64_t v5 = v4;
    uint64_t v6 = sub_1C25502F0();
    char v8 = MEMORY[0x1C8758780](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      sub_1C220012C(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_1C248629C(v3, v5, v2 != 0, a1);
    uint64_t v9 = v13;
    sub_1C220012C(v3, v5, v2 != 0);
    return v9;
  }
  uint64_t result = sub_1C2486520(a1);
  if ((v12 & 1) == 0)
  {
    uint64_t v5 = v11;
    if (*(_DWORD *)(a1 + 36) == v11)
    {
      uint64_t v3 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1C241B758(char a1)
{
  uint64_t v3 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover) == 1)
  {
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_providedHealthStore);
    if (v6)
    {
      id v7 = v6;
LABEL_6:
      type metadata accessor for OnboardingTileAppearanceManager();
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 16) = v7;
      id v16 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
      id v17 = v7;
      uint64_t v18 = (void *)sub_1C254F430();
      id v19 = objc_msgSend(v16, sel_initWithCategory_domainName_healthStore_, 0, v18, v17);

      *(void *)(inited + 24) = v19;
      swift_storeEnumTagMultiPayload();
      sub_1C221B650(a1 & 1, (uint64_t)v5);
      swift_release();
      swift_release();
      sub_1C22ECE6C((uint64_t)v5);
      return;
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = v1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context;
    swift_beginAccess();
    sub_1C241BA94(v8, (uint64_t)v21);
    uint64_t v9 = v22;
    if (v22)
    {
      uint64_t v10 = __swift_project_boxed_opaque_existential_1Tm(v21, v22);
      uint64_t v11 = *(void *)(v9 - 8);
      __n128 v12 = MEMORY[0x1F4188790](v10);
      id v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(unsigned char *, __n128))(v11 + 16))(v14, v12);
      id v7 = (id)sub_1C254DDB0();
      (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v14, v9);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_1C241B9D8(uint64_t a1, void *a2)
{
  sub_1C241BA94(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context;
  swift_beginAccess();
  sub_1C241BBDC((uint64_t)v5, v3);
  return swift_endAccess();
}

uint64_t sub_1C241BA40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context;
  swift_beginAccess();
  return sub_1C241BA94(v3, a1);
}

uint64_t sub_1C241BA94(uint64_t a1, uint64_t a2)
{
  sub_1C241EAF8(0, &qword_1EBB6D9D0, (uint64_t (*)(uint64_t))sub_1C241BB28, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C241BB28()
{
  unint64_t result = qword_1EBB6D978;
  if (!qword_1EBB6D978)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB6D978);
  }
  return result;
}

uint64_t sub_1C241BB80(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context;
  swift_beginAccess();
  sub_1C241BBDC(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1C241BBDC(uint64_t a1, uint64_t a2)
{
  sub_1C241EAF8(0, &qword_1EBB6D9D0, (uint64_t (*)(uint64_t))sub_1C241BB28, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1C241BC70())()
{
  return j_j__swift_endAccess;
}

id sub_1C241BD60(char a1, void *a2)
{
  uint64_t v5 = &v2[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((void *)v5 + 4) = 0;
  uint64_t v6 = v2;
  id v7 = (void *)sub_1C254F700();
  id v8 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v8)
  {
    uint64_t v9 = sub_1C254F470();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  __n128 v12 = (uint64_t *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier];
  *__n128 v12 = v9;
  v12[1] = v11;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_minimumTappableDismissWidth] = 0x4042000000000000;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_minimumTappableDismissHeight] = 0x4042000000000000;
  uint64_t v13 = &v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_headerType];
  uint64_t v14 = *MEMORY[0x1E4F66308];
  uint64_t v15 = sub_1C254D380();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___tipsView] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___accessoryLabel] = 0;
  uint64_t v16 = OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_accessoryColor;
  *(void *)&v6[v16] = objc_msgSend(self, sel_tertiaryLabelColor);
  v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover] = a1 & 1;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_providedHealthStore] = a2;
  id v17 = a2;

  v22.receiver = v6;
  v22.super_class = (Class)type metadata accessor for LabsOnboardingViewController();
  id v18 = objc_msgSendSuper2(&v22, sel_initWithNibName_bundle_, 0, 0);
  id v19 = v18;
  if (a1)
  {
    id v20 = v18;
    objc_msgSend(v20, sel_setModalPresentationStyle_, 7);
  }
  return v19;
}

id LabsOnboardingViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t LabsOnboardingViewController.isPresentingInPopover.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover);
}

void *LabsOnboardingViewController.providedHealthStore.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_providedHealthStore);
  id v2 = v1;
  return v1;
}

uint64_t sub_1C241C000(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C241C06C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C241C0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C241C124())()
{
  return j_j__swift_endAccess;
}

uint64_t LabsOnboardingViewController.headerType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_headerType;
  uint64_t v4 = sub_1C254D380();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

id sub_1C241C1F4()
{
  return sub_1C241C800(&OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___tipsView, (uint64_t (*)(uint64_t))sub_1C241C214);
}

char *sub_1C241C214(uint64_t a1)
{
  uint64_t v2 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TipsView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C254C730();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();

  id v7 = (uint64_t *)&v2[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_titleText];
  swift_beginAccess();
  uint64_t *v7 = v4;
  v7[1] = v6;
  swift_bridgeObjectRelease();
  id v8 = sub_1C22A5A20();
  if (v7[1])
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  objc_msgSend(v8, sel_setText_, v9, 0xE000000000000000);

  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  objc_msgSend(v10, sel_setParagraphSpacing_, 11.0);
  id v11 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C241EAF8(0, (unint64_t *)&qword_1EA2E4460, (uint64_t (*)(uint64_t))sub_1C21F0FE8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
  uint64_t v13 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v14 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  id v15 = v13;
  *(void *)(inited + 40) = sub_1C254FE50();
  uint64_t v16 = (void *)*MEMORY[0x1E4FB0738];
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = v16;
  *(void *)(inited + 104) = sub_1C21AB51C(0, &qword_1EA2E0A50);
  *(void *)(inited + 80) = v10;
  id v17 = v16;
  id v18 = v10;
  sub_1C2203C38(inited);
  id v19 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  id v20 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C241E6DC((unint64_t *)&qword_1EA2E4470, type metadata accessor for Key);
  id v21 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v19, sel_initWithString_attributes_, v20, v21, 0xE000000000000000);

  uint64_t v23 = (id *)&v2[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_attributedSubtitleText];
  swift_beginAccess();
  id v24 = *v23;
  *uint64_t v23 = v22;
  id v25 = v22;

  id v26 = sub_1C22A5B8C();
  id v27 = *v23;
  objc_msgSend(v26, sel_setAttributedText_, v27);

  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
  uint64_t v28 = (void *)sub_1C254FEF0();
  unint64_t v29 = (id *)&v2[OBJC_IVAR____TtC15HealthRecordsUI8TipsView_image];
  swift_beginAccess();
  id v30 = *v29;
  *unint64_t v29 = v28;
  id v31 = v28;

  id v32 = sub_1C22A5CF0();
  id v33 = *v29;
  objc_msgSend(v32, sel_setImage_, v33);

  uint64_t v34 = self;
  id v35 = v2;
  id v36 = objc_msgSend(v34, sel_systemYellowColor);
  objc_msgSend(v35, sel_setTintColor_, v36);

  uint64_t v37 = (uint64_t *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier);
  swift_beginAccess();
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  swift_bridgeObjectRetain();
  sub_1C22A66B0(v39, v38);

  swift_bridgeObjectRelease();
  return v35;
}

id sub_1C241C7E0()
{
  return sub_1C241C800(&OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___accessoryLabel, (uint64_t (*)(uint64_t))sub_1C241C864);
}

id sub_1C241C800(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C241C864(char *a1)
{
  sub_1C254D400();
  id v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  id v3 = (id)*MEMORY[0x1E4FB28F0];
  sub_1C254D3F0();
  sub_1C254D3E0();
  objc_msgSend(v2, sel_setTextColor_, *(void *)&a1[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_accessoryColor]);
  objc_msgSend(v2, sel_setTextAlignment_, 1);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_setAdjustsFontSizeToFitWidth_, 1);
  LODWORD(v4) = 1148846080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);
  LODWORD(v5) = 1148846080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 1, v5);
  LODWORD(v6) = 1148846080;
  objc_msgSend(v2, sel_setContentHuggingPriority_forAxis_, 0, v6);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  id v7 = v2;
  id v8 = (void *)sub_1C254FE50();
  objc_msgSend(v7, sel_setFont_, v8);

  id v9 = v7;
  id v10 = (void *)sub_1C254F700();
  id v11 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v11);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
  __n128 v12 = (void *)sub_1C254FE50();
  uint64_t v13 = (void *)MEMORY[0x1C8758420]();

  if (v13)
  {
    id v14 = v9;
    id v15 = v13;
    uint64_t v16 = (void *)sub_1C254FE50();
    id v17 = objc_msgSend(a1, sel_traitCollection);
    objc_msgSend(v17, sel_displayScale);
    double v19 = v18;

    id v20 = objc_msgSend(self, sel_tertiaryLabelColor);
    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28B18]), sel_initWithImage_font_displayScale_tintColor_adjustsImageSizeForAccessibilityContentSizeCategory_, v15, v16, v20, 1, v19);

    objc_msgSend(v14, sel_setAttributedText_, v21);
  }
  return v9;
}

void sub_1C241CB84()
{
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for LabsOnboardingViewController();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  sub_1C241CD0C();
  int v1 = v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover];
  double v2 = -22.0;
  if (v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover]) {
    double v2 = 24.0;
  }
  sub_1C241CE60(v0, v2);
  id v3 = self;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  double v4 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v4);

  if (v1)
  {
    id v5 = objc_msgSend(v0, sel_view);
    if (v5)
    {
      double v6 = v5;
      objc_msgSend(v5, sel_systemLayoutSizeFittingSize_, *MEMORY[0x1E4FB2C68], *(double *)(MEMORY[0x1E4FB2C68] + 8));
      double v8 = v7;
      double v10 = v9;

      objc_msgSend(v0, sel_setPreferredContentSize_, v8, v10);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1C241CD0C()
{
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  double v2 = v1;
  id v3 = sub_1C241C1F4();
  objc_msgSend(v2, sel_addSubview_, v3);

  if (*((unsigned char *)v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover) != 1) {
    return;
  }
  id v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v5 = v4;
  id v6 = sub_1C241C7E0();
  objc_msgSend(v5, sel_addSubview_, v6);
}

void sub_1C241CE04()
{
  sub_1C241B758(1);
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover) == 1)
  {
    objc_msgSend(v0, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

id sub_1C241CE60(void *a1, double a2)
{
  uint64_t v38 = MEMORY[0x1E4FBC860];
  id v4 = sub_1C241C1F4();
  id v5 = objc_msgSend(v4, sel_leadingAnchor);

  id result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  double v7 = result;
  id v8 = objc_msgSend(result, sel_leadingAnchor);

  id v9 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v8);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v10 = sub_1C241C1F4();
  id v11 = objc_msgSend(v10, sel_trailingAnchor);

  id result = objc_msgSend(a1, sel_view);
  if (!result) {
    goto LABEL_25;
  }
  __n128 v12 = result;
  id v13 = objc_msgSend(result, sel_trailingAnchor);

  id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v15 = sub_1C241C1F4();
  id v16 = objc_msgSend(v15, sel_topAnchor);

  id result = objc_msgSend(a1, sel_view);
  if (!result) {
    goto LABEL_26;
  }
  id v17 = result;
  id v18 = objc_msgSend(result, sel_topAnchor);

  id v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v18, a2);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v20 = sub_1C241C1F4();
  id v21 = objc_msgSend(v20, sel_bottomAnchor);

  id result = objc_msgSend(a1, sel_view);
  if (!result) {
    goto LABEL_27;
  }
  id v22 = result;
  id v23 = objc_msgSend(result, sel_bottomAnchor);

  id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v23);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  if (*((unsigned char *)a1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover) != 1) {
    return (id)v38;
  }
  id result = objc_msgSend(a1, sel_view);
  if (!result) {
    goto LABEL_28;
  }
  id v25 = result;
  id v26 = objc_msgSend(result, sel_widthAnchor);

  id v27 = objc_msgSend(v26, sel_constraintEqualToConstant_, 375.0);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v28 = sub_1C241C7E0();
  id v29 = objc_msgSend(v28, sel_topAnchor);

  id v30 = sub_1C241C1F4();
  id v31 = objc_msgSend(v30, sel_topAnchor);

  id v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, 4.0);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v33 = sub_1C241C7E0();
  id v34 = objc_msgSend(v33, sel_trailingAnchor);

  id result = objc_msgSend(a1, sel_view);
  if (result)
  {
    id v35 = result;
    id v36 = objc_msgSend(result, sel_trailingAnchor);

    id v37 = objc_msgSend(v34, sel_constraintEqualToAnchor_constant_, v36, -13.0);
    MEMORY[0x1C8757C00]();
    if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
    return (id)v38;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_1C241D484(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  if (*((unsigned char *)v2 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover) != 1)
  {
    sub_1C21AB51C(0, &qword_1EA2E3430);
    sub_1C241E62C();
    __n128 v12 = (void *)sub_1C254F8E0();
    v15.receiver = v3;
    v15.super_class = (Class)type metadata accessor for LabsOnboardingViewController();
    objc_msgSendSuper2(&v15, sel_touchesBegan_withEvent_, v12, a2);
LABEL_11:

    return;
  }
  uint64_t v5 = swift_bridgeObjectRetain();
  id v6 = (void *)sub_1C241B648(v5);
  swift_bridgeObjectRelease();
  if (!v6)
  {
LABEL_10:
    sub_1C21AB51C(0, &qword_1EA2E3430);
    sub_1C241E62C();
    __n128 v12 = (void *)sub_1C254F8E0();
    v14.receiver = v3;
    v14.super_class = (Class)type metadata accessor for LabsOnboardingViewController();
    objc_msgSendSuper2(&v14, sel_touchesBegan_withEvent_, v12, a2);
    goto LABEL_11;
  }
  id v7 = objc_msgSend(v2, sel_view);
  if (!v7)
  {
    __break(1u);
    return;
  }
  id v8 = v7;
  id v9 = sub_1C241C7E0();
  char v10 = MEMORY[0x1C87583A0](v6, v9, 36.0, 36.0);

  if ((v10 & 1) == 0)
  {

    goto LABEL_10;
  }
  id v11 = sub_1C241C7E0();
  id v13 = objc_msgSend(self, sel_quaternaryLabelColor);
  objc_msgSend(v11, sel_setTextColor_, v13);
}

void sub_1C241D69C(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  sub_1C21AB51C(0, &qword_1EA2E3430);
  sub_1C241E62C();
  uint64_t v5 = (void *)sub_1C254F8E0();
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for LabsOnboardingViewController();
  objc_msgSendSuper2(&v13, sel_touchesEnded_withEvent_, v5, a2);

  if (v3[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover] == 1)
  {
    id v6 = sub_1C241C7E0();
    objc_msgSend(v6, sel_setTextColor_, *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_accessoryColor]);

    uint64_t v7 = swift_bridgeObjectRetain();
    id v8 = (void *)sub_1C241B648(v7);
    swift_bridgeObjectRelease();
    if (v8)
    {
      id v9 = objc_msgSend(v3, sel_view);
      if (v9)
      {
        char v10 = v9;
        id v11 = sub_1C241C7E0();
        char v12 = MEMORY[0x1C87583A0](v8, v11, 36.0, 36.0);

        if (v12)
        {
          sub_1C241B758(1);
          objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_1C241D82C(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, void *))
{
  sub_1C21AB51C(0, &qword_1EA2E3430);
  sub_1C241E62C();
  uint64_t v8 = sub_1C254F8F0();
  id v9 = a4;
  id v10 = a1;
  a5(v8, a4);

  return swift_bridgeObjectRelease();
}

id LabsOnboardingViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LabsOnboardingViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*sub_1C241DB04())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C241DB70()
{
  id v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C241DBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(*v2 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C241DC30())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C241DCA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_headerType;
  uint64_t v4 = sub_1C254D380();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1C241DD20()
{
  id v1 = objc_msgSend(*v0, sel_title);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C254F470();

  return v3;
}

uint64_t LabsOnboardingViewController.identifier.getter()
{
  type metadata accessor for OnboardingViewIdentifier();
  return swift_storeEnumTagMultiPayload();
}

id LabsOnboardingViewController.healthStore.getter()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover) != 1)
  {
    uint64_t v2 = v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context;
    swift_beginAccess();
    id result = (id)sub_1C241BA94(v2, (uint64_t)v11);
    uint64_t v3 = v12;
    if (v12)
    {
      uint64_t v4 = __swift_project_boxed_opaque_existential_1Tm(v11, v12);
      uint64_t v5 = *(void *)(v3 - 8);
      __n128 v6 = MEMORY[0x1F4188790](v4);
      uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
      (*(void (**)(unsigned char *, __n128))(v5 + 16))(v8, v6);
      uint64_t v9 = sub_1C254DDB0();
      (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v3);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      return (id)v9;
    }
    goto LABEL_9;
  }
  id result = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_providedHealthStore);
  if (!result)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  return result;
}

uint64_t sub_1C241DF64()
{
  type metadata accessor for OnboardingViewIdentifier();
  return swift_storeEnumTagMultiPayload();
}

id sub_1C241DFA8()
{
  return LabsOnboardingViewController.healthStore.getter();
}

void sub_1C241DFCC(void *a1, uint64_t a2, int a3, char a4, uint64_t a5)
{
  unint64_t v6 = a2;
  if ((a5 & 0xC000000000000001) != 0)
  {
    if (a4)
    {
      sub_1C2550590();
      sub_1C21AB51C(0, &qword_1EBB6FF78);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v13;
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_18;
  }
  if (a4)
  {
LABEL_10:
    if (sub_1C2550550() == *(_DWORD *)(a5 + 36))
    {
      sub_1C2550560();
      sub_1C21AB51C(0, &qword_1EBB6FF78);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      unint64_t v6 = sub_1C245733C((uint64_t)v13);
      char v9 = v8;

      if (v9) {
        goto LABEL_12;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  id v10 = *(void **)(*(void *)(a5 + 48) + 8 * v6);
  id v11 = *(void **)(*(void *)(a5 + 56) + 8 * v6);
  *a1 = v11;
  v10;
  id v12 = v11;
}

void *sub_1C241E1F8(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    unint64_t v6 = (void *)(*(void *)(a5 + 56) + 16 * a2);
    uint64_t v7 = v6[1];
    *id result = *v6;
    result[1] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (void *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

id sub_1C241E294(char a1, void *a2)
{
  uint64_t v5 = &v2[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context];
  *(_OWORD *)uint64_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((void *)v5 + 4) = 0;
  unint64_t v6 = v2;
  uint64_t v7 = (void *)sub_1C254F700();
  id v8 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v8)
  {
    uint64_t v9 = sub_1C254F470();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  id v12 = (uint64_t *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier];
  *id v12 = v9;
  v12[1] = v11;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_minimumTappableDismissWidth] = 0x4042000000000000;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_minimumTappableDismissHeight] = 0x4042000000000000;
  objc_super v13 = &v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_headerType];
  uint64_t v14 = *MEMORY[0x1E4F66308];
  uint64_t v15 = sub_1C254D380();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___tipsView] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___accessoryLabel] = 0;
  uint64_t v16 = OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_accessoryColor;
  *(void *)&v6[v16] = objc_msgSend(self, sel_tertiaryLabelColor);
  v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_isPresentingInPopover] = a1 & 1;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_providedHealthStore] = a2;
  id v17 = a2;

  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for LabsOnboardingViewController();
  return objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
}

void _s15HealthRecordsUI28LabsOnboardingViewControllerC5coderACSgSo7NSCoderC_tcfc_0()
{
  id v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context];
  *(_OWORD *)id v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  uint64_t v2 = (void *)sub_1C254F700();
  id v3 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v3)
  {
    uint64_t v4 = sub_1C254F470();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  uint64_t v7 = (uint64_t *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier];
  uint64_t *v7 = v4;
  v7[1] = v6;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_minimumTappableDismissWidth] = 0x4042000000000000;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_minimumTappableDismissHeight] = 0x4042000000000000;
  id v8 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_headerType];
  uint64_t v9 = *MEMORY[0x1E4F66308];
  uint64_t v10 = sub_1C254D380();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___tipsView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController____lazy_storage___accessoryLabel] = 0;
  uint64_t v11 = OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_accessoryColor;
  *(void *)&v0[v11] = objc_msgSend(self, sel_tertiaryLabelColor);

  sub_1C25505F0();
  __break(1u);
}

uint64_t type metadata accessor for LabsOnboardingViewController()
{
  uint64_t result = qword_1EA2E3478;
  if (!qword_1EA2E3478) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C241E62C()
{
  unint64_t result = qword_1EA2E3438;
  if (!qword_1EA2E3438)
  {
    sub_1C21AB51C(255, &qword_1EA2E3430);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3438);
  }
  return result;
}

uint64_t sub_1C241E694()
{
  return sub_1C241E6DC(&qword_1EA2E3448, (void (*)(uint64_t))type metadata accessor for LabsOnboardingViewController);
}

uint64_t sub_1C241E6DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C241E724()
{
  return sub_1C241E6DC(&qword_1EA2E3450, (void (*)(uint64_t))type metadata accessor for LabsOnboardingViewController);
}

uint64_t sub_1C241E76C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_context;
  swift_beginAccess();
  return sub_1C241BA94(v3, a2);
}

uint64_t sub_1C241E7C8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI28LabsOnboardingViewController_baseIdentifier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C241E824()
{
  return type metadata accessor for LabsOnboardingViewController();
}

uint64_t sub_1C241E82C()
{
  uint64_t result = sub_1C254D380();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for LabsOnboardingViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LabsOnboardingViewController);
}

uint64_t dispatch thunk of LabsOnboardingViewController.context.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.context.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.context.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.baseIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.baseIdentifier.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.baseIdentifier.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.showsSeparator.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.hidesAccessory.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of LabsOnboardingViewController.didTapDismiss()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

void sub_1C241EAF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C241EB5C(uint64_t a1)
{
  sub_1C241EAF8(0, &qword_1EBB6D9D0, (uint64_t (*)(uint64_t))sub_1C241BB28, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C241EBE8(unint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1 >> 61)
  {
    case 1uLL:
LABEL_8:
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v23 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      id v24 = (void *)sub_1C254F430();
      id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v24, v23);

      unint64_t v13 = 0xD000000000000039;
      unint64_t v11 = 0xD00000000000003FLL;
      unint64_t v14 = 0x80000001C25852E0;
      uint64_t v15 = "SCD_IMPORT_DETAIL_HEALTH_ALREADY_PRESENT_WALLET_TEMP_INELIGIBLE";
      break;
    case 2uLL:
    case 3uLL:
LABEL_2:
      sub_1C254E510();
      unint64_t v8 = sub_1C254E550();
      os_log_type_t v9 = sub_1C254FA30();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl(&dword_1C21A1000, v8, v9, "SignedClinicalDataRecordAddedViewController is being shown despite nothing having been added to Health and Wallet", v10, 2u);
        MEMORY[0x1C875A0B0](v10, -1, -1);
      }
      unint64_t v11 = 0xD00000000000001BLL;

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      id v12 = 0;
      unint64_t v13 = 0xD000000000000018;
      unint64_t v14 = 0x80000001C257E240;
      uint64_t v15 = "SCD_IMPORTER_FAILED_TO_SAVE";
      break;
    case 4uLL:
      switch(__ROR8__(a1, 3) ^ 0x1000000000000000)
      {
        case 1:
          uint64_t v30 = swift_getObjCClassFromMetadata();
          id v31 = objc_msgSend(self, sel_bundleForClass_, v30);
          id v32 = (void *)sub_1C254F430();
          id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v32, v31);

          unint64_t v13 = 0xD00000000000002ALL;
          unint64_t v11 = 0xD00000000000002BLL;
          unint64_t v14 = 0x80000001C25855B0;
          uint64_t v15 = "SCD_IMPORT_DETAIL_HEALTH_ADDED_WALLET_ADDED";
          break;
        case 2:
        case 7:
          uint64_t v16 = swift_getObjCClassFromMetadata();
          id v17 = objc_msgSend(self, sel_bundleForClass_, v16);
          id v18 = (void *)sub_1C254F430();
          id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v18, v17);

          unint64_t v13 = 0xD00000000000002ELL;
          unint64_t v11 = 0xD00000000000002FLL;
          unint64_t v14 = 0x80000001C2585440;
          uint64_t v15 = "SCD_IMPORT_DETAIL_HEALTH_WALLET_ALREADY_PRESENT";
          break;
        case 3:
          goto LABEL_7;
        case 4:
          uint64_t v41 = swift_getObjCClassFromMetadata();
          id v42 = objc_msgSend(self, sel_bundleForClass_, v41);
          uint64_t v43 = (void *)sub_1C254F430();
          id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v43, v42);

          unint64_t v13 = 0xD00000000000002CLL;
          unint64_t v11 = 0xD000000000000035;
          unint64_t v14 = 0x80000001C2585500;
          uint64_t v15 = "SCD_IMPORT_DETAIL_HEALTH_ADDED_WALLET_PERM_INELIGIBLE";
          break;
        case 5:
          unint64_t v13 = 0xD00000000000001BLL;
          id v33 = (id)HKHealthUIFrameworkBundle();
          id v34 = (void *)sub_1C254F430();
          id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v34, v33);

          unint64_t v11 = 0xD00000000000001CLL;
          unint64_t v14 = 0x80000001C25854A0;
          uint64_t v15 = "SCD_RECORD_DUPLICATES_DETAIL";
          break;
        case 6:
          uint64_t v35 = swift_getObjCClassFromMetadata();
          id v36 = objc_msgSend(self, sel_bundleForClass_, v35);
          id v37 = (void *)sub_1C254F430();
          id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v37, v36);

          unint64_t v13 = 0xD000000000000034;
          unint64_t v11 = 0xD000000000000035;
          unint64_t v14 = 0x80000001C25853C0;
          uint64_t v15 = "SCD_IMPORT_DETAIL_HEALTH_ALREADY_PRESENT_WALLET_ADDED";
          break;
        case 8:
          goto LABEL_8;
        case 9:
          uint64_t v38 = swift_getObjCClassFromMetadata();
          id v39 = objc_msgSend(self, sel_bundleForClass_, v38);
          id v40 = (void *)sub_1C254F430();
          id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v40, v39);

          unint64_t v13 = 0xD000000000000039;
          unint64_t v11 = 0xD00000000000003FLL;
          unint64_t v14 = 0x80000001C25852E0;
          uint64_t v15 = "SCD_IMPORT_DETAIL_HEALTH_ALREADY_PRESENT_WALLET_PERM_INELIGIBLE";
          break;
        case 0xALL:
        case 0xDLL:
          goto LABEL_2;
        case 0xBLL:
        case 0xCLL:
          uint64_t v25 = swift_getObjCClassFromMetadata();
          id v26 = objc_msgSend(self, sel_bundleForClass_, v25);
          id v27 = (void *)sub_1C254F430();
          id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v27, v26);

          unint64_t v13 = 0xD00000000000001DLL;
          unint64_t v11 = 0xD00000000000001ELL;
          unint64_t v14 = 0x80000001C25852A0;
          uint64_t v15 = "SCD_IMPORT_DETAIL_WALLET_ADDED";
          break;
        default:
          id v28 = (id)HKHealthUIFrameworkBundle();
          id v29 = (void *)sub_1C254F430();
          id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v29, v28);

          unint64_t v13 = 0xD000000000000016;
          unint64_t v11 = 0xD000000000000017;
          unint64_t v14 = 0x80000001C2585610;
          uint64_t v15 = "SCD_RECORD_ADDED_DETAIL";
          break;
      }
      break;
    default:
LABEL_7:
      uint64_t v19 = swift_getObjCClassFromMetadata();
      id v20 = objc_msgSend(self, sel_bundleForClass_, v19);
      id v21 = (void *)sub_1C254F430();
      id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v21, v20);

      unint64_t v13 = 0xD00000000000002CLL;
      unint64_t v11 = 0xD000000000000035;
      unint64_t v14 = 0x80000001C2585500;
      uint64_t v15 = "SCD_IMPORT_DETAIL_HEALTH_ADDED_WALLET_TEMP_INELIGIBLE";
      break;
  }
  *a2 = v13;
  a2[1] = v14;
  a2[2] = v11;
  a2[3] = (unint64_t)(v15 - 32) | 0x8000000000000000;
  a2[4] = (unint64_t)v12;
}

id sub_1C241F4E0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_getObjectType();
  unint64_t v8 = &v4[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataRecordAddedViewController_appLaunchURL];
  *(void *)unint64_t v8 = a2;
  *((void *)v8 + 1) = a3;
  swift_bridgeObjectRelease();
  sub_1C241EBE8(a1, v17);
  uint64_t v15 = (void *)v17[4];
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  id v10 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  unint64_t v11 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v12 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for SignedClinicalDataRecordAddedViewController();
  id v13 = objc_msgSendSuper2(&v16, sel_initWithTitle_detailText_icon_contentLayout_, v11, v12, v15, 2, 0xE000000000000000);
  sub_1C23DCC68(a1);

  return v13;
}

void sub_1C241F6E8()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for SignedClinicalDataRecordAddedViewController();
  objc_msgSendSuper2(&v8, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_headerView);
  objc_msgSend(v1, sel_setAllowFullWidthIcon_, 1);

  id v2 = objc_msgSend(v0, sel_headerView);
  LODWORD(v3) = 1036831949;
  objc_msgSend(v2, sel_setTitleHyphenationFactor_, v3);

  id v4 = objc_msgSend(self, sel_boldButton);
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setTitle_forState_, v6, 0, 0xE000000000000000);

  objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_doneButtonTapped, 64);
  id v7 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v7, sel_addButton_, v4);
}

void sub_1C241F92C()
{
  id v1 = v0;
  sub_1C23C2FB8();
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C254C900();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  objc_super v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254F230();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C22023A4();
  *id v12 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4FBCBF0], v9);
  char v13 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v14 = objc_msgSend(v1, sel_presentingViewController);
  if (v14)
  {
    uint64_t v15 = v14;
    objc_msgSend(v14, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
  if (*(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataRecordAddedViewController_appLaunchURL + 8])
  {
    swift_bridgeObjectRetain();
    sub_1C254C8F0();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1C23FAA9C((uint64_t)v4);
      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    id v16 = objc_msgSend(self, sel_defaultWorkspace);
    if (v16)
    {
      id v17 = v16;
      id v18 = (void *)sub_1C254C870();
      objc_msgSend(v17, sel_openURL_configuration_completionHandler_, v18, 0, 0);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
LABEL_11:
    __break(1u);
  }
}

id sub_1C241FCF0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignedClinicalDataRecordAddedViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SignedClinicalDataRecordAddedViewController()
{
  return self;
}

uint64_t type metadata accessor for DeleteRecordDataSource()
{
  uint64_t result = qword_1EA2E34B0;
  if (!qword_1EA2E34B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C241FDA8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C241FE0C()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DAE0();
  id v4 = self;
  id v5 = objc_msgSend(v4, sel_absoluteDimension_, 15.0);
  sub_1C254DAD0();
  id v6 = objc_msgSend(v4, sel_absoluteDimension_, 0.0);
  sub_1C254DAB0();
  uint64_t v7 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

uint64_t sub_1C241FF30()
{
  uint64_t v1 = sub_1C254F230();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t result = MEMORY[0x1F4188790](v1);
  id v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(unsigned char *)(v0 + qword_1EA2E34A8) == 1)
  {
    id v6 = *(void **)(v0 + qword_1EA2E34A0);
    if (v6)
    {
      uint64_t v7 = *(void **)(v0 + qword_1EA2E3490);
      objc_super v8 = *(void **)(v0 + qword_1EA2E3498);
      uint64_t v9 = type metadata accessor for DeleteRecordItem();
      uint64_t v10 = (void *)swift_allocObject();
      v10[6] = 0;
      swift_unknownObjectWeakInit();
      v10[2] = v7;
      v10[3] = v6;
      void v10[4] = v8;
      sub_1C22023A4();
      id v11 = v6;
      id v12 = v7;
      id v13 = v8;
      uint64_t *v5 = sub_1C254FC70();
      (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v5, *MEMORY[0x1E4FBCBF0], v1);
      char v14 = sub_1C254F260();
      uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v5, v1);
      if (v14)
      {
        sub_1C2421CE8(0, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
        uint64_t v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_1C255CD90;
        *(void *)(v15 + 56) = v9;
        *(void *)(v15 + 64) = sub_1C2421CA0(&qword_1EA2E34D0, v16, (void (*)(uint64_t))type metadata accessor for DeleteRecordItem);
        *(void *)(v15 + 32) = v10;
        swift_retain();
        sub_1C254DA30();

        swift_release();
        return swift_bridgeObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

void sub_1C2420194()
{
}

void sub_1C24201B0()
{
}

void sub_1C24201CC()
{
}

void sub_1C24201F8()
{
  uint64_t v1 = *(void **)(v0 + qword_1EA2E34A0);
}

uint64_t sub_1C2420248()
{
  uint64_t v0 = sub_1C254DF40();

  return swift_deallocClassInstance();
}

uint64_t sub_1C24202B8()
{
  return type metadata accessor for DeleteRecordDataSource();
}

uint64_t sub_1C24202C0()
{
  return sub_1C2550AA0();
}

uint64_t sub_1C24202F0()
{
  sub_1C2201FD8((uint64_t)(v0 + 5));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DeleteRecordItem()
{
  return self;
}

uint64_t sub_1C2420364()
{
  type metadata accessor for DeleteRecordCell();
  sub_1C2421CA0(&qword_1EA2E34C8, v0, (void (*)(uint64_t))type metadata accessor for DeleteRecordCell);
  return sub_1C254D330();
}

uint64_t sub_1C24203C8()
{
  return sub_1C24202C0();
}

void sub_1C24203EC(void *a1)
{
  swift_getObjectType();
  uint64_t v3 = swift_conformsToProtocol2();
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v3) {
    id v5 = a1;
  }
  else {
    id v5 = 0;
  }
  if (v5) {
    id v6 = a1;
  }
  else {
    uint64_t v4 = 0;
  }
  *(void *)(v1 + 48) = v4;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  id v7 = objc_msgSend(self, sel_sharedBehavior);
  if (v7)
  {
    objc_super v8 = v7;
    unsigned int v9 = objc_msgSend(v7, sel_isiPad);

    if (qword_1EA2DD680 != -1) {
      swift_once();
    }
    id v10 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C2420838();
    uint64_t v12 = v11;
    id v13 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    unsigned int v26 = v9;
    if (v12)
    {
      char v14 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v14 = 0;
    }
    id v15 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v13, v14, 0, 0xE000000000000000);

    id v16 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    id v17 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v1;
    *(void *)(v18 + 24) = a1;
    id v19 = a1;
    swift_retain();
    id v20 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1C2421B88;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224DAAC;
    aBlock[3] = &block_descriptor_55;
    id v21 = _Block_copy(aBlock);
    swift_release();
    id v22 = self;
    id v23 = objc_msgSend(v22, sel_actionWithTitle_style_handler_, v20, 2, v21, 0xE000000000000000);
    _Block_release(v21);

    objc_msgSend(v15, sel_addAction_, v23);
    id v24 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v25 = objc_msgSend(v22, sel_actionWithTitle_style_handler_, v24, v26 ^ 1, 0);

    objc_msgSend(v15, sel_addAction_, v25);
    objc_msgSend(v19, sel_presentViewController_animated_completion_, v15, 1, 0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C2420838()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), sel_deletionConfirmationMessageWhenDeletingRecord_, *(void *)(v0 + 16));
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1C254F470();
    uint64_t v4 = v3;
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (HKSignedClinicalDataGroup.passExistsInWallet()())
  {
    if (qword_1EA2DD680 != -1) {
      swift_once();
    }
    id v5 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();

    if (!v4) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v7 = 0;
    if (!v4) {
      goto LABEL_14;
    }
  }
  uint64_t v8 = sub_1C254F530();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_14:
    if (!v7) {
      return 0;
    }
    uint64_t v17 = sub_1C254F530();
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      return v17;
    }
    else {
      return 0;
    }
  }
  if (v7)
  {
    uint64_t v11 = sub_1C254F530();
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      sub_1C2421CE8(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C255CDA0;
      uint64_t v15 = MEMORY[0x1E4FBB1A0];
      *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v16 = sub_1C220D950();
      *(void *)(v14 + 32) = v8;
      *(void *)(v14 + 40) = v10;
      *(void *)(v14 + 96) = v15;
      *(void *)(v14 + 104) = v16;
      *(void *)(v14 + 64) = v16;
      *(void *)(v14 + 72) = v11;
      *(void *)(v14 + 80) = v13;
      return sub_1C254F4B0();
    }
  }
  return v8;
}

uint64_t sub_1C2420A88(uint64_t a1, uint64_t a2, void *a3)
{
  if (MEMORY[0x1C875A200](a2 + 40))
  {
    if (qword_1EA2DD680 != -1) {
      swift_once();
    }
    id v5 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C254C730();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();

    sub_1C24CC0D0(v6, v8);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  swift_retain();
  id v10 = a3;
  sub_1C2421278((uint64_t)sub_1C2421BDC, v9);
  return swift_release();
}

uint64_t sub_1C2420BF4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1C254F1C0();
  uint64_t v19 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C254F200();
  uint64_t v9 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22023A4();
  uint64_t v12 = (void *)sub_1C254FC70();
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a2;
  v13[3] = a1;
  v13[4] = a3;
  aBlock[4] = sub_1C2421C94;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_24_0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  id v15 = a1;
  id v16 = a3;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C2421CA0((unint64_t *)&qword_1EBB6FF10, 255, MEMORY[0x1E4FBCB00]);
  sub_1C221B1A0();
  sub_1C2421CA0((unint64_t *)&qword_1EBB6FF40, 255, (void (*)(uint64_t))sub_1C221B1A0);
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

uint64_t sub_1C2420EF4(uint64_t a1, void *a2, void *a3)
{
  uint64_t result = MEMORY[0x1C875A200](a1 + 40);
  if (result)
  {
    uint64_t v7 = (char *)result;
    id v8 = a3;
    swift_retain();
    sub_1C24CD4B8(a2, v7, v8, a1);
    swift_release();

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1C2420F88(void *a1, void *a2, uint64_t a3)
{
  if (a1)
  {
    id v5 = a1;
    if (qword_1EA2DD680 != -1) {
      swift_once();
    }
    id v6 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    id v7 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    id v8 = self;
    uint64_t v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    uint64_t v10 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    uint64_t v11 = (void *)sub_1C254C810();
    id v12 = objc_msgSend(v8, sel_basicAlertControllerWithTitle_message_internalError_, v9, v10, v11, 0xE000000000000000);

    objc_msgSend(a2, sel_presentViewController_animated_completion_, v12, 1, 0);
  }
  else
  {
    id v14 = objc_msgSend(self, sel_defaultCenter);
    if (qword_1EA2DD780 != -1) {
      swift_once();
    }
    objc_msgSend(v14, sel_postNotificationName_object_, qword_1EA2E2898, a3);

    if (MEMORY[0x1C875A200](a3 + 40))
    {
      sub_1C24CBF48();
      swift_unknownObjectRelease();
    }
  }
}

void sub_1C2421278(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = MEMORY[0x1F4188790](v6).n128_u64[0];
  uint64_t v10 = (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend((id)v2[3], sel_mainRecord, v8);
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = (void *)v2[4];
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a1;
    *(void *)(v14 + 24) = a2;
    aBlock[4] = sub_1C2421C1C;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C22AE944;
    aBlock[3] = &block_descriptor_18_2;
    id v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v13, sel_deleteSignedClinicalDataRecord_completion_, v12, v15);
    _Block_release(v15);
  }
  else
  {
    sub_1C254E510();
    id v16 = sub_1C254E550();
    os_log_type_t v17 = sub_1C254FA20();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v24 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      aBlock[0] = v5;
      swift_getMetatypeMetadata();
      uint64_t v20 = sub_1C254F4F0();
      aBlock[0] = sub_1C21AD354(v20, v21, &v24);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v16, v17, "%s: No main record on SCD group, cannot delete record", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v19, -1, -1);
      MEMORY[0x1C875A0B0](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
}

void sub_1C2421568(uint64_t a1, void *a2)
{
}

uint64_t sub_1C2421590()
{
  id v1 = v0;
  uint64_t v2 = sub_1C254E890();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  uint64_t v6 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI16DeleteRecordCell_item;
  swift_beginAccess();
  sub_1C2227014(v6, (uint64_t)v18);
  if (!v19) {
    return sub_1C2227100((uint64_t)v18);
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for DeleteRecordItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v8 = swift_release();
    MEMORY[0x1C87582A0](v8);
    if (qword_1EA2DD680 != -1) {
      swift_once();
    }
    id v9 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C254E860();
    id v10 = objc_msgSend(self, sel_systemRedColor);
    id v11 = (void (*)(uint64_t *, void))sub_1C254E7A0();
    sub_1C254E780();
    v11(v18, 0);
    uint64_t v19 = v2;
    uint64_t v20 = MEMORY[0x1E4FB0F88];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v18);
    (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(boxed_opaque_existential_1, v5, v2);
    MEMORY[0x1C8758230](v18);
    sub_1C2201F2C();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C255CDA0;
    *(void *)(v13 + 32) = sub_1C254F470();
    *(void *)(v13 + 40) = v14;
    strcpy((char *)(v13 + 48), "DeleteButton");
    *(unsigned char *)(v13 + 61) = 0;
    *(_WORD *)(v13 + 62) = -5120;
    id v15 = (void *)sub_1C254F700();
    id v16 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v1, sel_setAccessibilityIdentifier_, v16);
    swift_bridgeObjectRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

id sub_1C24219C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeleteRecordCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DeleteRecordCell()
{
  return self;
}

uint64_t sub_1C2421A2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI16DeleteRecordCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C2421A80(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI16DeleteRecordCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C2421590();
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C2421AF0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2421B50;
}

uint64_t sub_1C2421B50(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2421590();
  }
  return result;
}

uint64_t sub_1C2421B88(uint64_t a1)
{
  return sub_1C2420A88(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t block_destroy_helper_51()
{
  return swift_release();
}

uint64_t objectdestroyTm_10()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2421BDC(void *a1)
{
  return sub_1C2420BF4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1C2421BE4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2421C1C(char a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = a2;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 16))(v3);
}

uint64_t sub_1C2421C4C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2421C94()
{
  return sub_1C2420EF4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1C2421CA0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2421CE8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C21FFE74(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C2421D60()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_configurationWithPointSize_weight_scale_, 7, 2, 18.0);
  id v2 = objc_msgSend(v0, sel_configurationPreferringMulticolor);
  id v3 = objc_msgSend(v1, sel_configurationByApplyingConfiguration_, v2);

  qword_1EA303C88 = (uint64_t)v3;
}

id sub_1C2421E04()
{
  id result = objc_msgSend(self, sel_configurationWithPointSize_weight_scale_, 6, -1, 10.0);
  qword_1EA303C90 = (uint64_t)result;
  return result;
}

uint64_t sub_1C2421E4C(void *a1)
{
  return sub_1C2421E60(a1, &OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store, &OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context);
}

uint64_t sub_1C2421E60(void *a1, void *a2, void *a3)
{
  id v7 = objc_msgSend(a1, sel_dosages);
  if (!v7) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v8 = v7;
  sub_1C21AB51C(0, &qword_1EA2DFC10);
  uint64_t v9 = sub_1C254F710();

  uint64_t v10 = *(void **)(v3 + *a2);
  uint64_t v11 = *(void *)(v3 + *a3);
  id v12 = (objc_class *)type metadata accessor for MedicationDosageFormatter();
  uint64_t v13 = (char *)objc_allocWithZone(v12);
  *(void *)&v13[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store] = v10;
  *(void *)&v13[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context] = v11;
  v23.receiver = v13;
  v23.super_class = v12;
  id v14 = v10;
  id v15 = objc_msgSendSuper2(&v23, sel_init);

  if (v9 < 0 || (v9 & 0x4000000000000000) != 0)
  {
    unint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v16 = (uint64_t)sub_1C228FB74(v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  unint64_t v22 = v16;
  sub_1C23199C8((uint64_t *)&v22);
  unint64_t v17 = v22;
  id v18 = v15;
  uint64_t v19 = sub_1C2342934(v17);
  swift_bridgeObjectRelease();
  swift_release();

  return v19;
}

id sub_1C2421FF4()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter);
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context);
    uint64_t v6 = (objc_class *)type metadata accessor for MedicationDosageFormatter();
    id v7 = (char *)objc_allocWithZone(v6);
    *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store] = v4;
    *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context] = v5;
    v13.receiver = v7;
    v13.super_class = v6;
    id v8 = v4;
    id v9 = objc_msgSendSuper2(&v13, sel_init);
    uint64_t v10 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v9;
    id v3 = v9;

    id v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_1C24220C4(void *a1)
{
  id v2 = objc_msgSend(a1, sel_dosages);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  id v3 = v2;
  sub_1C21AB51C(0, &qword_1EA2DFC10);
  uint64_t v4 = sub_1C254F710();

  id v5 = sub_1C2421FF4();
  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    unint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t)sub_1C228FB74(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  unint64_t v12 = v6;
  sub_1C23199C8((uint64_t *)&v12);
  unint64_t v7 = v12;
  id v8 = v5;
  uint64_t v9 = sub_1C231AF3C(v7);
  swift_bridgeObjectRelease();
  swift_release();

  return v9;
}

id MedicationRecordFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store);
}

uint64_t MedicationRecordFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context);
}

id MedicationRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  id v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id MedicationRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MedicationRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

unint64_t sub_1C24222E8(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context);
  if (v2 == 1)
  {
    return sub_1C2422920(a1);
  }
  else if (v2)
  {
    unint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C242236C(a1);
  }
  return result;
}

uint64_t sub_1C242236C(void *a1)
{
  sub_1C22EE4B0();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255E6B0;
  *(void *)(inited + 32) = sub_1C2422FEC(a1);
  *(void *)(inited + 40) = sub_1C253F748(a1);
  uint64_t v3 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  id v4 = a1;
  id v5 = objc_msgSend(v4, sel_effectiveStartDate);
  id v6 = objc_msgSend(v4, sel_effectiveEndDate);

  id v7 = objc_msgSend(v4, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  *(void *)(inited + 48) = sub_1C2388D90(v5, v6, sub_1C24A9188, 0, sub_1C24A925C, 0, (void (*)(id))sub_1C24A9330, 0, v8, v10);
  *(void *)(inited + 56) = sub_1C2512640(v4);
  *(void *)(inited + 64) = sub_1C2423238(v4);
  *(void *)(inited + 72) = sub_1C24233B0(v4);
  id v11 = v4;
  uint64_t v12 = sub_1C23F6564(v11);

  uint64_t v13 = Array<A>.newlineJoined.getter(v12);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  *(void *)(inited + 80) = sub_1C2387580(v13, v15, v3);
  unsigned int v16 = objc_msgSend(v11, sel_notTaken);
  id v17 = 0;
  if (v16)
  {
    id v18 = v11;
    uint64_t v19 = sub_1C23F6570(v18);

    uint64_t v20 = Array<A>.newlineJoined.getter(v19);
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    id v17 = sub_1C2387584(v20, v22);
  }
  *(void *)(inited + 88) = v17;
  *(void *)(inited + 96) = sub_1C243F974(v11);
  sub_1C254F730();
  uint64_t v42 = MEMORY[0x1E4FBC860];
  objc_super v23 = *(void **)(inited + 32);
  if (v23)
  {
    id v24 = v23;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v25 = *(void **)(inited + 40);
  if (v25)
  {
    id v26 = v25;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v27 = *(void **)(inited + 48);
  if (v27)
  {
    id v28 = v27;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v29 = *(void **)(inited + 56);
  if (v29)
  {
    id v30 = v29;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v31 = *(void **)(inited + 64);
  if (v31)
  {
    id v32 = v31;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v33 = *(void **)(inited + 72);
  if (v33)
  {
    id v34 = v33;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v35 = *(void **)(inited + 80);
  if (v35)
  {
    id v36 = v35;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v37 = *(void **)(inited + 88);
  if (v37)
  {
    id v38 = v37;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v39 = *(void **)(inited + 96);
  if (v39)
  {
    id v40 = v39;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  swift_bridgeObjectRelease();
  return v42;
}

unint64_t sub_1C2422920(void *a1)
{
  unint64_t v27 = MEMORY[0x1E4FBC860];
  unint64_t v2 = sub_1C2421E60(a1, &OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store, &OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context);
  sub_1C22723E8(v2);
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  BOOL v4 = v3 != 0;
  id v5 = sub_1C24233B0(a1);
  if (v5)
  {
    id v6 = v5;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    if (v3) {
      return v27;
    }
    BOOL v4 = 1;
  }
  uint64_t v7 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  id v8 = a1;
  uint64_t v9 = sub_1C23F6564(v8);

  uint64_t v10 = Array<A>.newlineJoined.getter(v9);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_1C2387580(v10, v12, v7);
  if (!v13)
  {
LABEL_13:
    id v15 = sub_1C2422FEC(v8);
    if (!v15) {
      goto LABEL_22;
    }
    id v16 = v15;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
    if (objc_msgSend(v8, sel_notTaken))
    {
      id v17 = v8;
      uint64_t v18 = sub_1C23F6570(v17);

      uint64_t v19 = Array<A>.newlineJoined.getter(v18);
      unint64_t v21 = v20;
      swift_bridgeObjectRelease();
      id v22 = sub_1C2387584(v19, v21);
      if (v22)
      {
        id v23 = v22;
        MEMORY[0x1C8757C00]();
        if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();
      }
    }

    if (!v4)
    {
LABEL_22:
      id v24 = (void *)sub_1C243F974(v8);
      if (v24)
      {
        id v25 = v24;
        MEMORY[0x1C8757C00]();
        if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();
      }
    }
    return v27;
  }
  id v14 = v13;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();

  if (!v4)
  {
    BOOL v4 = 1;
    goto LABEL_13;
  }
  return v27;
}

id MedicationRecordFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MedicationRecordFormatter.init()()
{
}

id MedicationRecordFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C2422D9C()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store);
}

uint64_t sub_1C2422DB0()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context);
}

id sub_1C2422DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = (objc_class *)type metadata accessor for MedicationRecordFormatter();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

unint64_t sub_1C2422E44(void *a1)
{
  uint64_t v2 = *(void *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context);
  if (v2 == 1) {
    return sub_1C2422920(a1);
  }
  if (!v2) {
    return sub_1C242236C(a1);
  }
  unint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MedicationRecordFormatter()
{
  return self;
}

unint64_t sub_1C2422ED8(uint64_t a1)
{
  unint64_t result = sub_1C2422F00();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C2422F00()
{
  unint64_t result = qword_1EA2E34F0;
  if (!qword_1EA2E34F0)
  {
    type metadata accessor for MedicationRecordFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E34F0);
  }
  return result;
}

uint64_t method lookup function for MedicationRecordFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationRecordFormatter);
}

uint64_t dispatch thunk of MedicationRecordFormatter.structuredItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicationRecordFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of MedicationRecordFormatter.displayItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

id sub_1C2422FEC(void *a1)
{
  if (!objc_msgSend(a1, sel_notTaken)) {
    return 0;
  }
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init, 0xE000000000000000);
  objc_msgSend(v6, sel_setDisplayItemType_, 15);
  id v7 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v8 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

  objc_super v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSubtitle_, v9);

  objc_msgSend(v6, sel_setSeparatorStyle_, 0);
  objc_msgSend(v6, sel_setSeparatorHidden_, 0);
  objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  return v6;
}

id sub_1C2423238(void *a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(a1, sel_assertionDate, 0xE000000000000000);
  id v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  id v11 = sub_1C23898E0(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1C24233B0(void *a1)
{
  id v1 = objc_msgSend(a1, sel_asserter);
  if (v1)
  {
    uint64_t v2 = sub_1C254F470();
    unint64_t v4 = v3;

    uint64_t v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5)
    {
      id v1 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v1, sel_setDisplayItemType_, 15);
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v6 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      id v7 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v7, 0xE000000000000000);

      uint64_t v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setSubtitle_, v8);

      objc_msgSend(v1, sel_setSeparatorStyle_, 0);
      objc_msgSend(v1, sel_setSeparatorHidden_, 0);
      objc_msgSend(v1, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v1;
}

id RecordRangeView.__allocating_init(style:)(char *a1)
{
  id v3 = objc_allocWithZone(v1);
  return RecordRangeView.init(style:)(a1);
}

void sub_1C24235E8()
{
  qword_1EA303C98 = 0x4059000000000000;
}

void sub_1C24235F8()
{
  qword_1EA303CA0 = 0x4020000000000000;
}

void sub_1C2423608()
{
  qword_1EA303CA8 = 0x4018000000000000;
}

uint64_t static RecordRangeView.Style.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  char v3 = v2 == 2;
  int v4 = *a2;
  if (v4 != 2) {
    char v3 = 0;
  }
  if (v2 != 2 && v4 != 2) {
    char v3 = ((v2 & 1) == 0) ^ v4;
  }
  return v3 & 1;
}

uint64_t sub_1C2423650(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  char v3 = v2 == 2;
  int v4 = *a2;
  if (v4 != 2) {
    char v3 = 0;
  }
  if (v2 != 2 && v4 != 2) {
    char v3 = ((v2 & 1) == 0) ^ v4;
  }
  return v3 & 1;
}

double sub_1C2423688()
{
  return sub_1C24236D0(&qword_1EA2DD800, (double *)&qword_1EA303C98);
}

double sub_1C24236AC()
{
  return sub_1C24236D0(&qword_1EA2DD808, (double *)&qword_1EA303CA0);
}

double sub_1C24236D0(void *a1, double *a2)
{
  id v5 = objc_msgSend(v2, sel_traitCollection);
  id v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  double v7 = sub_1C2437CD8();
  if (*a1 != -1) {
    swift_once();
  }
  return v7 * *a2;
}

void sub_1C242377C()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext);
  if (v1 != 3)
  {
    id v2 = sub_1C2424990();
    id v3 = objc_msgSend(v2, sel_arrangedSubviews);

    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
    unint64_t v4 = sub_1C254F710();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C2550620();
      if (!v5) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v5) {
        goto LABEL_11;
      }
    }
    if (v5 < 1)
    {
      __break(1u);
      return;
    }
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1C87588E0](i, v4);
      }
      else {
        id v7 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      objc_msgSend(v7, sel_removeFromSuperview);
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
    if (v1)
    {
      if (v1 != 1)
      {
        id v28 = sub_1C2424990();
        id v29 = (objc_class *)type metadata accessor for RangePillView();
        id v30 = objc_allocWithZone(v29);
        id v31 = &v30[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
        *id v31 = 0;
        v31[1] = 0;
        uint64_t v32 = MEMORY[0x1E4FBC860];
        *(void *)&v30[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = MEMORY[0x1E4FBC860];
        *(void *)&v30[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
        *(void *)&v30[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
        v30[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 1;
        v46.receiver = v30;
        v46.super_class = v29;
        id v33 = objc_msgSendSuper2(&v46, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
        sub_1C2370A8C();
        objc_msgSend(v28, sel_addArrangedSubview_, v33);

        id v34 = sub_1C2424990();
        uint64_t v35 = objc_allocWithZone(v29);
        id v36 = &v35[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
        *id v36 = 0;
        v36[1] = 0;
        *(void *)&v35[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = v32;
        *(void *)&v35[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
        *(void *)&v35[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
        v35[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 0;
        v45.receiver = v35;
        v45.super_class = v29;
        id v37 = objc_msgSendSuper2(&v45, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
        sub_1C2370A8C();
        objc_msgSend(v34, sel_addArrangedSubview_, v37);

        id v15 = sub_1C2424990();
        id v38 = objc_allocWithZone(v29);
        id v39 = &v38[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
        *id v39 = 0;
        v39[1] = 0;
        *(void *)&v38[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = v32;
        *(void *)&v38[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
        *(void *)&v38[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
        v38[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 1;
        v44.receiver = v38;
        v44.super_class = v29;
        id v27 = objc_msgSendSuper2(&v44, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
        sub_1C2370A8C();
        objc_msgSend(v15, sel_addArrangedSubview_, v27);
        goto LABEL_17;
      }
      id v9 = sub_1C2424990();
      uint64_t v10 = (objc_class *)type metadata accessor for RangePillView();
      id v11 = objc_allocWithZone(v10);
      uint64_t v12 = &v11[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
      *uint64_t v12 = 0;
      v12[1] = 0;
      uint64_t v13 = MEMORY[0x1E4FBC860];
      *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = MEMORY[0x1E4FBC860];
      *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
      *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
      v11[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 1;
      v43.receiver = v11;
      v43.super_class = v10;
      id v14 = objc_msgSendSuper2(&v43, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
      sub_1C2370A8C();
      objc_msgSend(v9, sel_addArrangedSubview_, v14);

      id v15 = sub_1C2424990();
      id v16 = objc_allocWithZone(v10);
      id v17 = &v16[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
      *id v17 = 0;
      v17[1] = 0;
      *(void *)&v16[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = v13;
      *(void *)&v16[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
      *(void *)&v16[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
      v16[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 2;
      v42.receiver = v16;
      v42.super_class = v10;
      id v18 = objc_msgSendSuper2(&v42, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0, v40.receiver, v40.super_class);
    }
    else
    {
      id v19 = sub_1C2424990();
      unint64_t v20 = (objc_class *)type metadata accessor for RangePillView();
      unint64_t v21 = objc_allocWithZone(v20);
      id v22 = &v21[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
      *id v22 = 0;
      v22[1] = 0;
      uint64_t v23 = MEMORY[0x1E4FBC860];
      *(void *)&v21[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = MEMORY[0x1E4FBC860];
      *(void *)&v21[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
      *(void *)&v21[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
      v21[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 2;
      v41.receiver = v21;
      v41.super_class = v20;
      id v24 = objc_msgSendSuper2(&v41, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
      sub_1C2370A8C();
      objc_msgSend(v19, sel_addArrangedSubview_, v24);

      id v15 = sub_1C2424990();
      id v25 = objc_allocWithZone(v20);
      id v26 = &v25[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
      *id v26 = 0;
      v26[1] = 0;
      *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = v23;
      *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
      *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
      v25[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 1;
      id v18 = objc_msgSendSuper2(&v40, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0, v25, v20);
    }
    id v27 = v18;
    sub_1C2370A8C();
    objc_msgSend(v15, sel_addArrangedSubview_, v27);
LABEL_17:

    sub_1C2425A6C();
  }
}

id sub_1C2423CFC()
{
  id v0 = sub_1C2424990();
  id v1 = objc_msgSend(v0, sel_topAnchor);

  return v1;
}

void sub_1C2423D40()
{
  uint64_t v2 = v0[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state];
  if (v2 == 4) {
    return;
  }
  unint64_t v3 = sub_1C2424450();
  if (!v3) {
    return;
  }
  unint64_t v4 = (void *)v3;
  uint64_t v40 = v2;
  id v5 = sub_1C2424990();
  id v6 = objc_msgSend(v5, sel_arrangedSubviews);

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
  unint64_t v7 = sub_1C254F710();

  objc_super v41 = v0;
  objc_super v42 = v4;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C2550620();
    if (!v8) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v8) {
      goto LABEL_12;
    }
  }
  uint64_t v9 = self;
  if (v8 >= 1)
  {
    uint64_t v10 = (void *)v9;
    uint64_t v11 = 0;
    unint64_t v43 = v7 & 0xC000000000000001;
    unint64_t v12 = v7;
    do
    {
      if (v43) {
        id v13 = (id)MEMORY[0x1C87588E0](v11, v7);
      }
      else {
        id v13 = *(id *)(v7 + 8 * v11 + 32);
      }
      id v14 = v13;
      ++v11;
      id v15 = objc_msgSend(v10, sel_systemGray5Color);
      id v16 = objc_msgSend(v10, sel_systemGray4Color);
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v16;
      *(void *)(v17 + 24) = v15;
      id v18 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      aBlock[4] = sub_1C221B3F8;
      aBlock[5] = v17;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C23B0A44;
      aBlock[3] = &block_descriptor_56;
      id v19 = _Block_copy(aBlock);
      id v20 = v16;
      id v21 = v15;
      id v22 = objc_msgSend(v18, sel_initWithDynamicProvider_, v19);
      _Block_release(v19);

      swift_release();
      objc_msgSend(v14, sel_setBackgroundColor_, v22);

      unint64_t v7 = v12;
    }
    while (v8 != v11);
LABEL_12:
    swift_bridgeObjectRelease_n();
    id v0 = v41;
    id v1 = v42;
    switch(v40)
    {
      case 1:
        id v27 = sub_1C221B408();
        objc_msgSend(v42, sel_setBackgroundColor_, v27);

        id v28 = sub_1C2424A84();
        if (qword_1EBB6EF40 != -1) {
          swift_once();
        }
        id v29 = (id)qword_1EBB6FBC8;
        swift_bridgeObjectRetain();
        sub_1C254C730();
        swift_bridgeObjectRelease();

        id v30 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        objc_msgSend(v28, sel_setText_, v30, 0xE000000000000000);

        goto LABEL_22;
      case 2:
        id v31 = objc_msgSend(self, sel_systemYellowColor);
        objc_msgSend(v42, sel_setBackgroundColor_, v31);

        id v32 = sub_1C2424A84();
        if (qword_1EBB6EF40 != -1) {
          swift_once();
        }
        id v33 = (id)qword_1EBB6FBC8;
        swift_bridgeObjectRetain();
        sub_1C254C730();
        swift_bridgeObjectRelease();

        id v34 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        objc_msgSend(v32, sel_setText_, v34, 0xE000000000000000);

        id v26 = sub_1C2424A84();
        objc_msgSend(v26, sel_setTextAlignment_, 2);
        goto LABEL_23;
      case 3:
        id v35 = sub_1C2424A84();
        id v36 = (void *)sub_1C254F430();
        objc_msgSend(v35, sel_setText_, v36);

LABEL_22:
        id v26 = sub_1C2424A84();
        objc_msgSend(v26, sel_setTextAlignment_, 1);
        break;
      default:
        id v23 = objc_msgSend(self, sel_systemYellowColor);
        objc_msgSend(v42, sel_setBackgroundColor_, v23);

        unint64_t v7 = (unint64_t)sub_1C2424A84();
        if (qword_1EBB6EF40 == -1) {
          goto LABEL_14;
        }
        goto LABEL_29;
    }
    goto LABEL_23;
  }
  __break(1u);
LABEL_29:
  swift_once();
LABEL_14:
  id v24 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v25 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend((id)v7, sel_setText_, v25, 0xE000000000000000);

  id v26 = sub_1C2424A84();
  objc_msgSend(v26, sel_setTextAlignment_, 0);
LABEL_23:

  id v37 = objc_msgSend(v0, sel_traitCollection);
  id v38 = objc_msgSend(v37, sel_preferredContentSizeCategory);

  LOBYTE(v37) = sub_1C254FD50();
  if (v37 & 1) != 0 && (v0[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_style])
  {
    id v39 = sub_1C2424A84();
    objc_msgSend(v39, sel_setTextAlignment_, 4);
  }
}

unint64_t sub_1C2424450()
{
  LODWORD(v1) = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext);
  if (v1 == 3) {
    return 0;
  }
  unint64_t v2 = 0;
  switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state))
  {
    case 0:
      unint64_t v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext);
      if (!*(unsigned char *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext)) {
        return v2;
      }
      if (v1 != 1)
      {
        id v12 = sub_1C2424990();
        id v13 = objc_msgSend(v12, sel_arrangedSubviews);

        sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
        uint64_t v6 = sub_1C254F710();

        if ((v6 & 0xC000000000000001) != 0) {
          goto LABEL_34;
        }
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_25;
        }
        __break(1u);
        goto LABEL_23;
      }
      id v4 = sub_1C2424990();
      id v5 = objc_msgSend(v4, sel_arrangedSubviews);

      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
      uint64_t v6 = sub_1C254F710();

      if ((v6 & 0xC000000000000001) != 0) {
        goto LABEL_34;
      }
      unint64_t v1 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v1) {
        goto LABEL_25;
      }
      __break(1u);
LABEL_10:
      if (!v1)
      {
LABEL_23:
        id v14 = sub_1C2424990();
        id v15 = objc_msgSend(v14, sel_arrangedSubviews);

        sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
        uint64_t v6 = sub_1C254F710();

        if ((v6 & 0xC000000000000001) == 0)
        {
          if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
LABEL_25:
          uint64_t v11 = *(void **)(v6 + 32);
          goto LABEL_32;
        }
LABEL_34:
        uint64_t v21 = 0;
        goto LABEL_37;
      }
      if (v1 != 1)
      {
        id v16 = sub_1C2424990();
        id v17 = objc_msgSend(v16, sel_arrangedSubviews);

        sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
        uint64_t v6 = sub_1C254F710();

        if ((v6 & 0xC000000000000001) != 0) {
          goto LABEL_35;
        }
        if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL) {
          goto LABEL_31;
        }
        __break(1u);
        goto LABEL_29;
      }
      id v7 = sub_1C2424990();
      id v8 = objc_msgSend(v7, sel_arrangedSubviews);

      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
      uint64_t v6 = sub_1C254F710();

      if ((v6 & 0xC000000000000001) != 0) {
        goto LABEL_35;
      }
      unint64_t v1 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v1 >= 2) {
        goto LABEL_31;
      }
      __break(1u);
LABEL_15:
      if (!v1)
      {
LABEL_29:
        id v18 = sub_1C2424990();
        id v19 = objc_msgSend(v18, sel_arrangedSubviews);

        sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
        uint64_t v6 = sub_1C254F710();

        if ((v6 & 0xC000000000000001) == 0)
        {
          if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
          {
LABEL_40:
            __break(1u);
            JUMPOUT(0x1C2424820);
          }
LABEL_31:
          uint64_t v11 = *(void **)(v6 + 40);
          goto LABEL_32;
        }
LABEL_35:
        uint64_t v21 = 1;
        goto LABEL_37;
      }
      if (v1 != 1)
      {
        id v9 = sub_1C2424990();
        id v10 = objc_msgSend(v9, sel_arrangedSubviews);

        sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
        uint64_t v6 = sub_1C254F710();

        if ((v6 & 0xC000000000000001) == 0)
        {
          if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
          {
            uint64_t v11 = *(void **)(v6 + 48);
LABEL_32:
            id v20 = v11;
LABEL_33:
            unint64_t v2 = (unint64_t)v20;
            swift_bridgeObjectRelease();
            return v2;
          }
          __break(1u);
          goto LABEL_39;
        }
        uint64_t v21 = 2;
LABEL_37:
        id v20 = (id)MEMORY[0x1C87588E0](v21, v6);
        goto LABEL_33;
      }
      return 0;
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_15;
    case 3:
      return v2;
    default:
      return 0;
  }
}

void sub_1C2424830()
{
  if (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext) - 1 >= 2)
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext)) {
      return;
    }
    id v5 = sub_1C2424990();
    id v6 = objc_msgSend(v5, sel_arrangedSubviews);

    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
    uint64_t v3 = sub_1C254F710();

    if ((v3 & 0xC000000000000001) == 0)
    {
      if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      id v4 = *(void **)(v3 + 32);
      goto LABEL_9;
    }
    goto LABEL_15;
  }
  id v1 = sub_1C2424990();
  id v2 = objc_msgSend(v1, sel_arrangedSubviews);

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
  uint64_t v3 = sub_1C254F710();

  if ((v3 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      id v4 = *(void **)(v3 + 40);
LABEL_9:
      id v7 = v4;
      goto LABEL_10;
    }
    __break(1u);
LABEL_15:
    uint64_t v9 = 0;
    goto LABEL_16;
  }
  uint64_t v9 = 1;
LABEL_16:
  id v7 = (id)MEMORY[0x1C87588E0](v9, v3);
LABEL_10:
  id v8 = v7;
  swift_bridgeObjectRelease();
  type metadata accessor for RangePillView();
  if (!swift_dynamicCastClass()) {
}
  }

id sub_1C2424990()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___pillsStackView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___pillsStackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___pillsStackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setAxis_, 0);
    objc_msgSend(v4, sel_setAlignment_, 1);
    objc_msgSend(v4, sel_setSpacing_, 2.0);
    LODWORD(v5) = 1148846080;
    objc_msgSend(v4, sel_setContentHuggingPriority_forAxis_, 0, v5);
    objc_msgSend(v4, sel_setSemanticContentAttribute_, 3);
    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C2424A84()
{
  return sub_1C2424BF0(&OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___rangeLabel, (uint64_t (*)(void))sub_1C2424AA4);
}

id sub_1C2424AA4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setLineBreakMode_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  LODWORD(v1) = 1045220557;
  objc_msgSend(v0, sel__setHyphenationFactor_, v1);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  id v2 = (void *)sub_1C254FE50();
  objc_msgSend(v0, sel_setFont_, v2);

  return v0;
}

id sub_1C2424BB0()
{
  return sub_1C2424BF0(&OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___lowBookend, (uint64_t (*)(void))sub_1C24268FC);
}

id sub_1C2424BD0()
{
  return sub_1C2424BF0(&OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___highBookend, (uint64_t (*)(void))sub_1C24268FC);
}

id sub_1C2424BF0(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

void RecordRangeView.style.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_style);
}

id RecordRangeView.init(style:)(char *a1)
{
  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext] = 3;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_activeConstraints] = MEMORY[0x1E4FBC860];
  char v2 = *a1;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotConstraint] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;
  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state] = 4;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___pillsStackView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___rangeLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___lowBookend] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___highBookend] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_style] = v2;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for RecordRangeView();
  id v4 = objc_msgSendSuper2(&v6, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1C2425254();

  return v4;
}

uint64_t type metadata accessor for RecordRangeView()
{
  return self;
}

id sub_1C2424D80(void *a1)
{
  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext] = 3;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_activeConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotConstraint] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;
  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state] = 4;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___pillsStackView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___rangeLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___lowBookend] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView____lazy_storage___highBookend] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_style] = 1;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for RecordRangeView();
  id v4 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);
  id v5 = v4;
  if (v4)
  {
    id v6 = v4;
    sub_1C2425254();
  }
  return v5;
}

void sub_1C2424EA8(void *a1)
{
  if (!a1)
  {
    objc_msgSend(v1, sel_setHidden_, 1);
    v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext] = 2;
    sub_1C242377C();
    v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state] = 3;
    sub_1C2423D40();
    id v17 = &v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier];
    *(void *)id v17 = 0;
    v17[8] = 1;
    id v18 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotConstraint];
    *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotConstraint] = 0;
    goto LABEL_14;
  }
  id v28 = a1;
  __int16 v3 = sub_1C2426A14(a1);
  objc_msgSend(v1, sel_setHidden_, v3 == 3);
  if (HIBYTE(v3) == 2)
  {
    id v4 = objc_msgSend(v28, sel_value);
    if (!v4) {
      goto LABEL_11;
    }
    id v5 = v4;
    objc_msgSend(v4, sel_doubleValue);
    double v7 = v6;

    id v8 = objc_msgSend(v28, sel_rangeLow);
    if (!v8) {
      goto LABEL_11;
    }
    uint64_t v9 = v8;
    objc_msgSend(v8, sel_doubleValue);
    double v11 = v10;

    id v12 = objc_msgSend(v28, sel_rangeHigh);
    if (!v12) {
      goto LABEL_11;
    }
    id v13 = v12;
    objc_msgSend(v12, sel_doubleValue);
    double v15 = v14;

    if (v11 >= v15) {
      goto LABEL_11;
    }
    uint64_t v16 = OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier;
    *(double *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier] = (v7 - v11) / (v15 - v11);
  }
  else
  {
    uint64_t v16 = OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier;
    *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier] = 0x3FE0000000000000;
  }
  v1[v16 + 8] = 0;
LABEL_11:
  id v19 = sub_1C2424BB0();
  id v20 = objc_msgSend(v28, sel_rangeLowString);
  objc_msgSend(v19, sel_setText_, v20);

  id v21 = sub_1C2424BD0();
  id v22 = objc_msgSend(v28, sel_rangeHighString);
  objc_msgSend(v21, sel_setText_, v22);

  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_rangeContext] = HIBYTE(v3);
  sub_1C242377C();
  v1[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state] = v3;
  sub_1C2423D40();
  sub_1C2424830();
  if (v23)
  {
    id v24 = v23;
    uint64_t v25 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v26 = (void (**)())&v24[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
    uint64_t v27 = *(void *)&v24[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
    *id v26 = sub_1C2426C40;
    v26[1] = (void (*)())v25;
    swift_retain();
    sub_1C221794C(v27);

    swift_release();
  }
  id v18 = v28;
LABEL_14:
}

void sub_1C2425194(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C875A200](v1);
  if (v2)
  {
    __int16 v3 = (void *)v2;
    sub_1C24254C4();
  }
}

void sub_1C24251E8(id a1)
{
  if (a1) {
    a1 = objc_msgSend(self, sel_referenceRangeViewDataFromInspectableValueInRange_, a1);
  }
  id v1 = a1;
  sub_1C2424EA8(a1);
}

uint64_t sub_1C2425254()
{
  objc_msgSend(v0, sel_setSemanticContentAttribute_, 3);
  id v1 = sub_1C2424A84();
  objc_msgSend(v0, sel_addSubview_, v1);

  id v2 = sub_1C2424990();
  objc_msgSend(v0, sel_addSubview_, v2);

  int v3 = v0[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_style];
  if (v3 == 2)
  {
    id v4 = sub_1C2424BB0();
    objc_msgSend(v0, sel_addSubview_, v4);

    id v5 = sub_1C2424BD0();
    objc_msgSend(v0, sel_addSubview_, v5);
  }
  else
  {
    BOOL v6 = (v3 & 1) == 0;
    id v5 = sub_1C2424A84();
    objc_msgSend(v5, sel_setHidden_, v6);
  }

  sub_1C23172CC();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C255CD90;
  uint64_t v8 = sub_1C254E8E0();
  uint64_t v9 = MEMORY[0x1E4FB1138];
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v9;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C23718B8();
  sub_1C254FEB0();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1C24253E0(void *a1, id a2, uint64_t a3)
{
  id v5 = objc_msgSend(a2, sel_preferredContentSizeCategory);
  double v6 = sub_1C2437CD8();

  id v7 = objc_msgSend(a1, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

  double v9 = sub_1C2437CD8();
  if (v6 != v9)
  {
    swift_beginAccess();
    uint64_t v10 = MEMORY[0x1C875A200](a3 + 16);
    if (v10)
    {
      double v11 = (void *)v10;
      sub_1C2425A6C();
    }
  }
}

void sub_1C24254C4()
{
  id v1 = sub_1C2424990();
  id v2 = objc_msgSend(v1, sel_arrangedSubviews);

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
  unint64_t v3 = sub_1C254F710();

  unint64_t v21 = MEMORY[0x1E4FBC860];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    id v19 = v0;
    if (v4) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v8 = MEMORY[0x1E4FBC860];
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  id v19 = v0;
  if (!v4) {
    goto LABEL_16;
  }
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_35;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)MEMORY[0x1C87588E0](i, v3);
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    id v7 = v6;
    type metadata accessor for RangePillView();
    if (swift_dynamicCastClass())
    {
      MEMORY[0x1C8757C00]();
      if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v8 = v21;
LABEL_17:
  swift_bridgeObjectRelease();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C2550620();
    if (!v9) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v9) {
      goto LABEL_26;
    }
  }
  uint64_t v10 = self;
  if (v9 < 1)
  {
LABEL_35:
    __break(1u);
    return;
  }
  double v11 = (void *)v10;
  uint64_t v12 = 0;
  do
  {
    if ((v8 & 0xC000000000000001) != 0) {
      id v13 = (id)MEMORY[0x1C87588E0](v12, v8);
    }
    else {
      id v13 = *(id *)(v8 + 8 * v12 + 32);
    }
    double v14 = v13;
    ++v12;
    id v15 = sub_1C23707BC();
    id v16 = sub_1C2370644();
    objc_msgSend(v15, sel_setHidden_, 1);
    objc_msgSend(v16, sel_setHidden_, 1);

    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
    swift_bridgeObjectRetain();
    id v17 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_deactivateConstraints_, v17);
  }
  while (v9 != v12);
LABEL_26:
  swift_bridgeObjectRelease_n();
  sub_1C2424830();
  if (v18)
  {
    if ((v19[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_dotMultiplier + 8] & 1) == 0
      && v19[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_state] == 1)
    {
      id v20 = v18;
      sub_1C2370F40();
      id v18 = v20;
    }
  }
}

uint64_t sub_1C242584C()
{
  id v1 = v0;
  id v2 = sub_1C2424990();
  id v3 = objc_msgSend(v2, sel_arrangedSubviews);

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
  unint64_t v4 = sub_1C254F710();

  unint64_t v15 = MEMORY[0x1E4FBC860];
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_17:
    swift_bridgeObjectRelease();
    id v11 = v1;
    uint64_t v12 = sub_1C2427260(v10, v11);

    id v13 = v11;
    unint64_t v14 = sub_1C2427414(v10, v13);
    swift_bridgeObjectRelease();

    sub_1C227227C(v14);
    return v12;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x1C87588E0](i, v4);
      }
      else {
        id v8 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      type metadata accessor for RangePillView();
      if (swift_dynamicCastClass())
      {
        MEMORY[0x1C8757C00]();
        if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v10 = v15;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void sub_1C2425A6C()
{
  id v1 = v0;
  id v2 = self;
  uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_activeConstraints;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  unint64_t v4 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  if (v0[OBJC_IVAR____TtC15HealthRecordsUI15RecordRangeView_style] != 2)
  {
    uint64_t v112 = v2;
    sub_1C21ACA3C();
    uint64_t v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = xmmword_1C255EBD0;
    id v74 = sub_1C2424A84();
    id v75 = objc_msgSend(v74, sel_topAnchor);

    id v76 = objc_msgSend(v1, sel_topAnchor);
    id v77 = objc_msgSend(v75, sel_constraintEqualToAnchor_, v76);

    *(void *)(v73 + 32) = v77;
    id v78 = sub_1C2424A84();
    id v79 = objc_msgSend(v78, sel_leadingAnchor);

    id v80 = sub_1C2424990();
    id v81 = objc_msgSend(v80, sel_leadingAnchor);

    id v82 = objc_msgSend(v79, sel_constraintEqualToAnchor_, v81);
    *(void *)(v73 + 40) = v82;
    id v83 = sub_1C2424A84();
    id v84 = objc_msgSend(v83, sel_trailingAnchor);

    id v85 = sub_1C2424990();
    id v86 = objc_msgSend(v85, sel_trailingAnchor);

    id v87 = objc_msgSend(v84, sel_constraintEqualToAnchor_, v86);
    *(void *)(v73 + 48) = v87;
    id v88 = sub_1C2424990();
    id v89 = objc_msgSend(v88, sel_topAnchor);

    id v90 = sub_1C2424A84();
    id v91 = objc_msgSend(v90, sel_bottomAnchor);

    id v92 = objc_msgSend(v89, sel_constraintEqualToAnchor_constant_, v91, 1.0);
    *(void *)(v73 + 56) = v92;
    id v93 = sub_1C2424990();
    id v94 = objc_msgSend(v93, sel_bottomAnchor);

    id v95 = objc_msgSend(v1, sel_bottomAnchor);
    id v96 = objc_msgSend(v94, sel_constraintEqualToAnchor_, v95);

    *(void *)(v73 + 64) = v96;
    id v97 = sub_1C2424990();
    id v98 = objc_msgSend(v97, sel_leadingAnchor);

    id v99 = objc_msgSend(v1, sel_leadingAnchor);
    id v100 = objc_msgSend(v98, sel_constraintEqualToAnchor_, v99);

    *(void *)(v73 + 72) = v100;
    id v101 = sub_1C2424990();
    id v102 = objc_msgSend(v101, sel_trailingAnchor);

    id v103 = objc_msgSend(v1, sel_trailingAnchor);
    id v104 = objc_msgSend(v102, sel_constraintLessThanOrEqualToAnchor_, v103);

    *(void *)(v73 + 80) = v104;
    uint64_t v114 = v73;
    sub_1C254F730();
LABEL_21:
    unint64_t v37 = v114;
    goto LABEL_22;
  }
  id v5 = sub_1C2424990();
  id v6 = objc_msgSend(v5, sel_arrangedSubviews);

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
  unint64_t v7 = sub_1C254F710();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v8)
  {
    uint64_t v112 = v2;
    sub_1C21ACA3C();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C25645D0;
    id v10 = sub_1C2424A84();
    id v11 = objc_msgSend(v10, sel_topAnchor);

    id v12 = objc_msgSend(v1, sel_topAnchor);
    id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

    *(void *)(v9 + 32) = v13;
    id v14 = sub_1C2424A84();
    id v15 = objc_msgSend(v14, sel_leadingAnchor);

    id v16 = sub_1C2424990();
    id v17 = objc_msgSend(v16, sel_leadingAnchor);

    id v18 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v17);
    *(void *)(v9 + 40) = v18;
    id v19 = sub_1C2424A84();
    id v20 = objc_msgSend(v19, sel_trailingAnchor);

    id v21 = sub_1C2424990();
    id v22 = objc_msgSend(v21, sel_trailingAnchor);

    id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
    *(void *)(v9 + 48) = v23;
    id v24 = sub_1C2424990();
    id v25 = objc_msgSend(v24, sel_topAnchor);

    id v26 = sub_1C2424A84();
    id v27 = objc_msgSend(v26, sel_bottomAnchor);

    id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, 1.0);
    *(void *)(v9 + 56) = v28;
    id v29 = sub_1C2424990();
    id v30 = objc_msgSend(v29, sel_leadingAnchor);

    id v31 = objc_msgSend(v1, sel_leadingAnchor);
    id v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

    *(void *)(v9 + 64) = v32;
    id v33 = sub_1C2424990();
    id v34 = objc_msgSend(v33, sel_trailingAnchor);

    id v35 = objc_msgSend(v1, sel_trailingAnchor);
    id v36 = objc_msgSend(v34, sel_constraintLessThanOrEqualToAnchor_, v35);

    *(void *)(v9 + 72) = v36;
    uint64_t v114 = v9;
    sub_1C254F730();
    unint64_t v37 = v9;
    sub_1C2424830();
    if (!v38)
    {
LABEL_22:
      unint64_t v105 = sub_1C242584C();
      sub_1C227227C(v105);
      *(void *)&v1[v3] = v37;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      id v113 = (id)sub_1C254F700();
      swift_bridgeObjectRelease();
      objc_msgSend(v112, sel_activateConstraints_, v113);

      return;
    }
    id v39 = v38;
    id v40 = sub_1C2424BB0();
    id v41 = objc_msgSend(v40, sel_topAnchor);

    id v42 = sub_1C2424990();
    id v43 = objc_msgSend(v42, sel_bottomAnchor);

    id v109 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, 1.0);
    id v44 = sub_1C2424BB0();
    id v45 = objc_msgSend(v44, sel_leadingAnchor);

    id v46 = objc_msgSend(v39, sel_leadingAnchor);
    id v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v46);

    id v48 = sub_1C2424BB0();
    id v49 = objc_msgSend(v48, sel_bottomAnchor);

    id v50 = objc_msgSend(v1, sel_bottomAnchor);
    id v108 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v50);

    id v51 = sub_1C2424BD0();
    id v111 = v39;
    id v52 = objc_msgSend(v51, sel_firstBaselineAnchor);

    id v53 = sub_1C2424BB0();
    id v54 = objc_msgSend(v53, sel_firstBaselineAnchor);

    unint64_t v55 = (char **)objc_msgSend(v52, sel_constraintEqualToAnchor_, v54);
    id v56 = sub_1C2424BD0();
    uint64_t v57 = &selRef_setUnsupportedSearchResults_;
    id v58 = objc_msgSend(v56, sel_trailingAnchor);

    id v59 = objc_msgSend(v111, sel_trailingAnchor);
    id v107 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v59);

    id v60 = sub_1C2424BD0();
    id v61 = objc_msgSend(v60, sel_bottomAnchor);

    id v62 = objc_msgSend(v1, sel_bottomAnchor);
    id v63 = objc_msgSend(v61, sel_constraintEqualToAnchor_, v62);

    if (v37 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v106 = sub_1C2550620();
      swift_bridgeObjectRelease();
      uint64_t v65 = v106 + 6;
      if (!__OFADD__(v106, 6))
      {
LABEL_8:
        uint64_t v57 = v55;
        sub_1C25041B0(v65, 1);
        sub_1C254F730();
        unint64_t v55 = (char **)v109;
        MEMORY[0x1C8757C00](v55, v66);
        if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_9:
          unint64_t v110 = v55;
          sub_1C254F790();
          sub_1C254F730();
          id v67 = v47;
          MEMORY[0x1C8757C00]();
          if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C254F760();
          }
          id v68 = v63;
          sub_1C254F790();
          sub_1C254F730();
          id v69 = v108;
          MEMORY[0x1C8757C00]();
          if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C254F760();
          }
          sub_1C254F790();
          sub_1C254F730();
          uint64_t v70 = v57;
          MEMORY[0x1C8757C00]();
          if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C254F760();
          }
          sub_1C254F790();
          sub_1C254F730();
          id v71 = v107;
          MEMORY[0x1C8757C00]();
          if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C254F760();
          }
          sub_1C254F790();
          sub_1C254F730();
          id v72 = v68;
          MEMORY[0x1C8757C00]();
          if (*(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C254F760();
          }
          sub_1C254F790();
          sub_1C254F730();

          goto LABEL_21;
        }
LABEL_30:
        sub_1C254F760();
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v64 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v65 = v64 + 6;
      if (!__OFADD__(v64, 6)) {
        goto LABEL_8;
      }
    }
    __break(1u);
    goto LABEL_30;
  }
}

id RecordRangeView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

void RecordRangeView.init(frame:)()
{
}

id RecordRangeView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecordRangeView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C24268FC()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  id v1 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  objc_super v2 = (void *)sub_1C254FE50();
  objc_msgSend(v0, sel_setFont_, v2);

  return v0;
}

uint64_t sub_1C2426A14(void *a1)
{
  id v2 = objc_msgSend(a1, sel_rangeLow);

  if (v2)
  {
    if (!a1) {
      goto LABEL_24;
    }
  }
  else
  {
    id v3 = objc_msgSend(a1, sel_rangeHigh);

    if (v3) {
      BOOL v4 = a1 == 0;
    }
    else {
      BOOL v4 = 1;
    }
    if (v4) {
      goto LABEL_24;
    }
  }
  id v5 = objc_msgSend(a1, sel_rangeLow);
  if (v5)
  {
    id v6 = v5;
    objc_msgSend(v5, sel_doubleValue);
    double v8 = v7;
  }
  else
  {
    double v8 = -1.79769313e308;
  }
  id v9 = objc_msgSend(a1, sel_rangeHigh);
  if (v9)
  {
    id v10 = v9;
    objc_msgSend(v9, sel_doubleValue);
    double v12 = v11;

    if (v8 > v12) {
      goto LABEL_24;
    }
  }
  else
  {
    double v12 = 1.79769313e308;
    if (v8 > 1.79769313e308)
    {
LABEL_24:
      int v19 = 2;
      int v20 = 3;
      return v20 | (v19 << 8);
    }
  }
  id v13 = objc_msgSend(a1, sel_value);
  if (!v13) {
    goto LABEL_24;
  }
  id v14 = v13;
  objc_msgSend(v13, sel_doubleValue);
  double v16 = v15;

  id v17 = objc_msgSend(a1, sel_rangeLow);
  if (v17)
  {
    id v18 = objc_msgSend(a1, sel_rangeHigh);

    if (v18) {
      int v19 = 2;
    }
    else {
      int v19 = 1;
    }
    if (v8 <= v12) {
      goto LABEL_21;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int v19 = 0;
  if (v8 > v12) {
    goto LABEL_29;
  }
LABEL_21:
  if (v8 <= v16 && v16 <= v12)
  {
    int v20 = 1;
    return v20 | (v19 << 8);
  }
  if (v16 < v8)
  {
    int v20 = 0;
    return v20 | (v19 << 8);
  }
LABEL_30:
  if (v12 >= v16) {
    int v20 = 3;
  }
  else {
    int v20 = 2;
  }
  return v20 | (v19 << 8);
}

uint64_t sub_1C2426C08()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2426C40()
{
  sub_1C2425194(v0);
}

uint64_t method lookup function for RecordRangeView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecordRangeView);
}

uint64_t dispatch thunk of RecordRangeView.widthForContentSizeCategory.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of RecordRangeView.heightForContentSizeCategory.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of RecordRangeView.topPillsAnchor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of RecordRangeView.__allocating_init(style:)()
{
  return (*(uint64_t (**)(void))(v0 + 416))();
}

uint64_t dispatch thunk of RecordRangeView.update(data:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of RecordRangeView.update(valueInRange:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

ValueMetadata *type metadata accessor for RecordRangeView.Constants()
{
  return &type metadata for RecordRangeView.Constants;
}

uint64_t getEnumTagSinglePayload for RecordRangeView.Style(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C2426E54);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for RecordRangeView.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C2426F3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1C2426F64(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_1C2426F80(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordRangeView.Style()
{
  return &type metadata for RecordRangeView.Style;
}

unsigned char *storeEnumTagSinglePayload for RecordRangeView.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2427074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordRangeView.State()
{
  return &type metadata for RecordRangeView.State;
}

unsigned char *storeEnumTagSinglePayload for RecordRangeView.InRangeContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2427178);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordRangeView.InRangeContext()
{
  return &type metadata for RecordRangeView.InRangeContext;
}

unint64_t sub_1C24271B4()
{
  unint64_t result = qword_1EA2E3558;
  if (!qword_1EA2E3558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3558);
  }
  return result;
}

unint64_t sub_1C242720C()
{
  unint64_t result = qword_1EA2E3560;
  if (!qword_1EA2E3560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3560);
  }
  return result;
}

uint64_t sub_1C2427260(unint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v5) {
      break;
    }
    uint64_t v15 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2550490();
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    unint64_t v13 = v3;
    uint64_t v7 = 0;
    unint64_t v3 = a1 & 0xC000000000000001;
    while (v5 != v7)
    {
      if (v3) {
        BOOL v8 = (char *)MEMORY[0x1C87588E0](v7, a1);
      }
      else {
        BOOL v8 = (char *)*(id *)(a1 + 8 * v7 + 32);
      }
      unsigned int v9 = v8;
      ++v7;
      id v10 = objc_msgSend(v8, sel_widthAnchor, v13);
      id v11 = objc_msgSend(a2, sel_widthAnchor);
      id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_multiplier_constant_, v11, dbl_1C256A5D0[v9[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style]], -2.0);

      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      if (v5 == v7) {
        return v15;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2427414(unint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v6) {
      break;
    }
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2550490();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    unint64_t v16 = v3;
    uint64_t v8 = 0;
    unint64_t v3 = a1 & 0xC000000000000001;
    while (v6 != v8)
    {
      if (v3) {
        id v9 = (id)MEMORY[0x1C87588E0](v8, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 32);
      }
      id v10 = v9;
      id v11 = objc_msgSend(v9, sel_heightAnchor, v16);
      id v12 = objc_msgSend(a2, sel_traitCollection);
      id v13 = objc_msgSend(v12, sel_preferredContentSizeCategory);

      double v14 = sub_1C2437CD8();
      if (qword_1EA2DD808 != -1) {
        swift_once();
      }
      ++v8;
      id v15 = objc_msgSend(v11, sel_constraintEqualToConstant_, v14 * *(double *)&qword_1EA303CA0);

      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      if (v6 == v8) {
        return v17;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2427614()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t block_destroy_helper_52()
{
  return swift_release();
}

void sub_1C242765C(void *a1, void *a2)
{
  sub_1C24253E0(a1, a2, v2);
}

void sub_1C2427664(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  id v15 = objc_msgSend(a1, sel_displayItemType);
  id v16 = objc_msgSend(a1, sel_medicalRecord);
  if (!v16)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v17 = v16;
  HKMedicalRecord.categoryKind.getter(&v61);

  char v18 = v61;
  id v19 = objc_msgSend(a1, sel_medicalRecord);
  if (!v19)
  {
LABEL_37:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_38;
  }
  id v20 = v19;
  if (!a3)
  {
    id v30 = v19;
    id v31 = objc_msgSend(a1, sel_title);
    if (v31)
    {
      id v32 = v31;
      a2 = sub_1C254F470();
      a3 = v33;

      id v20 = v30;
      if (a6) {
        goto LABEL_5;
      }
      goto LABEL_8;
    }
LABEL_38:
    swift_release();
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_39;
  }
  if (a6)
  {
LABEL_5:
    id v21 = v15;
    uint64_t v22 = a8;
    swift_bridgeObjectRelease();

    uint64_t v23 = 0;
    uint64_t v24 = 0;
    id v25 = 0;
    id v26 = 0;
    uint64_t v27 = 0;
    id v28 = 0;
    uint64_t v29 = 0;
    a5 = 0;
LABEL_35:
    *(void *)a9 = v21;
    *(unsigned char *)(a9 + 8) = v18;
    *(void *)(a9 + 16) = v20;
    *(void *)(a9 + 24) = a2;
    *(void *)(a9 + 32) = a3;
    *(void *)(a9 + 40) = v24;
    *(void *)(a9 + 48) = v23;
    *(void *)(a9 + 56) = v25;
    *(void *)(a9 + 64) = v29;
    *(void *)(a9 + 72) = a5;
    *(void *)(a9 + 80) = v27;
    *(void *)(a9 + 88) = v28;
    *(void *)(a9 + 96) = v26;
    *(unsigned char *)(a9 + 104) = 0;
    *(void *)(a9 + 112) = v22;
    return;
  }
LABEL_8:
  id v34 = objc_msgSend(a1, sel_subtitle);
  if (v34)
  {
    id v35 = v34;
    uint64_t v55 = sub_1C254F470();
    uint64_t v56 = v36;
  }
  else
  {
    uint64_t v55 = 0;
    uint64_t v56 = 0;
  }
  id v57 = objc_msgSend(a1, sel_attributedSubtitle);
  if ((a7 & 1) == 0)
  {
    uint64_t v39 = a8;
    if (!a5)
    {
      id v40 = objc_msgSend(a1, sel_valueString);
      if (v40)
      {
        id v41 = v40;
        a4 = sub_1C254F470();
        a5 = v42;
      }
      else
      {
        a4 = 0;
        a5 = 0xE000000000000000;
      }
    }
    id v46 = v20;
    id v21 = v15;
    uint64_t v22 = v39;
    id v47 = objc_msgSend(a1, sel_unitString);
    if (v47)
    {
      id v48 = v47;
      uint64_t v27 = sub_1C254F470();
      id v28 = v49;
    }
    else
    {
      uint64_t v27 = 0;
      id v28 = 0;
    }
    id v20 = v46;
    goto LABEL_34;
  }
  id v37 = objc_msgSend(a1, sel_chartValueWithRange);
  if (v37)
  {
    id v38 = v37;
    id v28 = objc_msgSend(self, sel_referenceRangeViewDataFromInspectableValueInRange_, v37);

    if (a5)
    {
      id v21 = v15;
      if (v28)
      {
        id v54 = v20;
        uint64_t v22 = a8;
        goto LABEL_30;
      }
      uint64_t v22 = a8;
      uint64_t v27 = 0;
    }
    else
    {
      if (v28)
      {
        id v54 = v20;
        id v21 = v15;
        id v43 = objc_msgSend(v28, sel_valueString);
        if (v43)
        {
          id v44 = v43;
          uint64_t v22 = a8;
          a4 = sub_1C254F470();
          a5 = v45;
        }
        else
        {
          uint64_t v22 = a8;
          a4 = 0;
          a5 = 0;
        }
LABEL_30:
        id v50 = v28;
        id v51 = objc_msgSend(v50, sel_unitString);
        if (v51)
        {
          id v52 = v51;
          uint64_t v27 = sub_1C254F470();
          id v28 = v53;
        }
        else
        {

          uint64_t v27 = 0;
          id v28 = 0;
        }
        id v20 = v54;
        goto LABEL_34;
      }
      id v21 = v15;
      uint64_t v22 = a8;
      uint64_t v27 = 0;
      a4 = 0;
      a5 = 0;
    }
LABEL_34:
    id v26 = objc_msgSend(a1, sel_chartValueWithRange, v54);

    id v25 = v57;
    uint64_t v29 = a4;
    uint64_t v24 = v55;
    uint64_t v23 = v56;
    goto LABEL_35;
  }
LABEL_39:
  swift_release();
  swift_bridgeObjectRelease();
  __break(1u);
}

uint64_t sub_1C2427A6C()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2427ADC()
{
  return sub_1C254FF80();
}

uint64_t sub_1C2427B2C()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2427B9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v2).n128_u64[0];
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  id v7 = objc_msgSend(*(id *)(v1 + 32), sel_UUID, v4);
  sub_1C254CB20();

  uint64_t v8 = sub_1C254CAF0();
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  swift_bridgeObjectRelease();
  uint64_t v13 = v8;
  unint64_t v14 = v10;
  sub_1C254F5A0();
  v12[1] = *(void *)(v1 + 16);
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1C2427D5C()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = (void *)v0[9];
  uint64_t v3 = (void *)v0[14];
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicalRecordTimelineItem()
{
  return self;
}

uint64_t sub_1C2427E20()
{
  return sub_1C2427B9C();
}

id sub_1C2427E44()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v1 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  id v2 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB2950], 1024);
  objc_msgSend(v0, sel_setFont_, v2);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v0;
}

char *sub_1C2427F30(double a1, double a2, double a3, double a4)
{
  sub_1C242B5EC(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)&v33 - v10;
  uint64_t v12 = sub_1C254E690();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_titleView;
  id v17 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemTitleView());
  char v18 = v4;
  *(void *)&v4[v16] = objc_msgSend(v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v19 = OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_valueView;
  *(void *)&v18[v19] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v20 = OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel;
  *(void *)&v18[v20] = sub_1C2427E44();
  id v21 = &v18[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_item];
  *((void *)v21 + 4) = 0;
  *(_OWORD *)id v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  uint64_t v22 = &v18[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_sectionContext];
  uint64_t v23 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);

  uint64_t v24 = (objc_class *)type metadata accessor for MedicalRecordTimelineItemCell();
  v33.receiver = v18;
  v33.super_class = v24;
  id v25 = (char *)objc_msgSendSuper2(&v33, sel_initWithFrame_, a1, a2, a3, a4);
  id v26 = objc_msgSend(v25, sel_contentView);
  objc_msgSend(v26, sel_addSubview_, *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_titleView]);

  id v27 = objc_msgSend(v25, sel_contentView);
  objc_msgSend(v27, sel_addSubview_, *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_valueView]);

  id v28 = objc_msgSend(v25, sel_contentView);
  objc_msgSend(v28, sel_addSubview_, *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel]);

  sub_1C254CDB0();
  id v29 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C254FE70();

  id v30 = objc_msgSend(self, sel_currentTraitCollection);
  sub_1C254E660();
  sub_1C254E6D0();
  sub_1C24FCA3C((uint64_t)v15);
  sub_1C254E6C0();
  uint64_t v31 = sub_1C254E710();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v11, 0, 1, v31);
  MEMORY[0x1C8758250](v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1C2428778();

  return v25;
}

id sub_1C2428310(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_titleView;
  id v4 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemTitleView());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_valueView;
  *(void *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v7 = OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel;
  *(void *)&v5[v7] = sub_1C2427E44();
  uint64_t v8 = &v5[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_item];
  *((void *)v8 + 4) = 0;
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  uint64_t v9 = &v5[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_sectionContext];
  uint64_t v10 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for MedicalRecordTimelineItemCell();
  id v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

void sub_1C2428488()
{
  id v1 = v0;
  sub_1C242B5EC(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v16 - v3;
  uint64_t v5 = sub_1C254E690();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (objc_class *)type metadata accessor for MedicalRecordTimelineItemCell();
  v16.receiver = v0;
  v16.super_class = v9;
  objc_msgSendSuper2(&v16, sel_awakeFromNib);
  id v10 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v10, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_titleView]);

  id v11 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v11, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_valueView]);

  id v12 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v12, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel]);

  sub_1C254CDB0();
  id v13 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C254FE70();

  id v14 = objc_msgSend(self, sel_currentTraitCollection);
  sub_1C254E660();
  sub_1C254E6D0();
  sub_1C24FCA3C((uint64_t)v8);
  sub_1C254E6C0();
  uint64_t v15 = sub_1C254E710();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 0, 1, v15);
  MEMORY[0x1C8758250](v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1C2428778();
}

void sub_1C2428778()
{
  id v1 = v0;
  sub_1C21ACA3C();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C2565090;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_titleView];
  id v4 = objc_msgSend(v3, sel_leadingAnchor);
  id v5 = objc_msgSend(v1, sel_contentView);
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(void *)(v2 + 32) = v7;
  id v8 = objc_msgSend(v3, sel_trailingAnchor);
  id v9 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v10 = objc_msgSend(v9, sel_trailingAnchor);

  id v11 = objc_msgSend(v8, (SEL)&selRef_characterAtIndex_ + 6, v10);
  *(void *)(v2 + 40) = v11;
  id v12 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_valueView];
  id v13 = objc_msgSend(v12, sel_leadingAnchor);
  id v14 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v15 = objc_msgSend(v14, sel_leadingAnchor);

  id v16 = objc_msgSend(v13, (SEL)&selRef_characterAtIndex_ + 6, v15);
  *(void *)(v2 + 48) = v16;
  id v17 = objc_msgSend(v12, sel_trailingAnchor);
  id v18 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v19 = objc_msgSend(v18, sel_trailingAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, -16.0);
  *(void *)(v2 + 56) = v20;
  id v21 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel];
  id v22 = objc_msgSend(v21, sel_leadingAnchor);
  id v23 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v24 = objc_msgSend(v23, sel_leadingAnchor);

  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, 16.0);
  *(void *)(v2 + 64) = v25;
  id v26 = objc_msgSend(v21, sel_trailingAnchor);
  id v27 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v28 = objc_msgSend(v27, sel_trailingAnchor);

  id v29 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v28, -16.0);
  *(void *)(v2 + 72) = v29;
  id v30 = objc_msgSend(v21, sel_topAnchor);
  id v31 = objc_msgSend(v12, sel_bottomAnchor);
  id v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_constant_, v31, -8.0);

  *(void *)(v2 + 80) = v32;
  id v33 = objc_msgSend(v21, sel_bottomAnchor);
  id v34 = objc_msgSend(v1, sel_contentView);
  id v35 = objc_msgSend(v34, sel_bottomAnchor);

  id v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_constant_, v35, -8.0);
  *(void *)(v2 + 88) = v36;
  sub_1C254F730();
  id v37 = objc_msgSend(v3, sel_topAnchor);
  id v38 = objc_msgSend(v1, sel_contentView);
  id v39 = objc_msgSend(v38, sel_topAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  LODWORD(v41) = 1148846080;
  objc_msgSend(v40, sel_setPriority_, v41);
  objc_msgSend(v40, sel_setActive_, 1);
  id v42 = objc_msgSend(v12, sel_topAnchor);
  id v43 = objc_msgSend(v3, sel_bottomAnchor);
  id v44 = objc_msgSend(v42, sel_constraintGreaterThanOrEqualToAnchor_constant_, v43, 7.0);

  LODWORD(v45) = 1140129792;
  objc_msgSend(v44, sel_setPriority_, v45);
  objc_msgSend(v44, sel_setActive_, 1);
  id v46 = objc_msgSend(v1, sel_contentView);
  id v47 = objc_msgSend(v46, sel_heightAnchor);

  id v48 = objc_msgSend(v47, sel_constraintGreaterThanOrEqualToConstant_, 115.0);
  LODWORD(v49) = 1148846080;
  objc_msgSend(v48, sel_setPriority_, v49);
  objc_msgSend(v48, sel_setActive_, 1);
  id v50 = objc_msgSend(v1, sel_contentView);
  id v51 = objc_msgSend(v50, sel_heightAnchor);

  id v52 = objc_msgSend(v51, sel_constraintEqualToConstant_, 115.0);
  LODWORD(v53) = 1132068864;
  objc_msgSend(v52, sel_setPriority_, v53);
  objc_msgSend(v52, sel_setActive_, 1);
  id v54 = self;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  id v55 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v54, sel_activateConstraints_, v55);
}

uint64_t sub_1C2428E68()
{
  id v1 = v0;
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = v1;
  uint64_t v10 = (uint64_t)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_item];
  swift_beginAccess();
  sub_1C2227014(v10, (uint64_t)&v125);
  if (!v128)
  {
    sub_1C229B07C((uint64_t)&v125, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
LABEL_7:
    sub_1C254E510();
    id v20 = v9;
    id v21 = sub_1C254E550();
    os_log_type_t v22 = sub_1C254FA20();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v124 = v2;
      id v24 = (uint8_t *)v23;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v139 = v25;
      *(_DWORD *)id v24 = 136446210;
      sub_1C2227014(v10, (uint64_t)&v125);
      sub_1C225EBC8(0, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
      uint64_t v26 = sub_1C254F510();
      uint64_t v125 = sub_1C21AD354(v26, v27, &v139);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v21, v22, "Incorrect view model for MedicalRecordTimelineItem: %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v25, -1, -1);
      MEMORY[0x1C875A0B0](v24, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v124);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for MedicalRecordTimelineItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v11 = v139;
  *id v8 = *(unsigned char *)(v139 + 24);
  swift_storeEnumTagMultiPayload();
  id v12 = BrowseCategory.tintColorForTemplateImage.getter();
  uint64_t v14 = *(void *)(v11 + 40);
  uint64_t v13 = *(void *)(v11 + 48);
  id v114 = v12;
  id v15 = v12;
  swift_bridgeObjectRetain();
  BrowseCategory.systemImageName.getter();
  if (v16
    && (id v17 = (void *)sub_1C254F430(),
        swift_bridgeObjectRelease(),
        id v18 = objc_msgSend(self, sel_systemImageNamed_, v17),
        v17,
        v18))
  {
    id v19 = objc_msgSend(v18, sel_imageWithRenderingMode_, 1);
  }
  else
  {
    id v19 = 0;
  }
  id v29 = *(void **)(v11 + 112);
  uint64_t v122 = v14;
  if (v29)
  {
    id v30 = v29;
    if (objc_msgSend(v30, sel_hasRenderableContent))
    {
      id v31 = objc_msgSend(self, sel_referenceRangeViewDataFromInspectableValueInRange_, v30);

      id v29 = v31;
    }
    else
    {

      id v29 = 0;
    }
  }
  uint64_t v32 = *(void *)(v11 + 88);
  uint64_t v121 = *(void *)(v11 + 80);
  uint64_t v34 = *(void *)(v11 + 96);
  uint64_t v33 = *(void *)(v11 + 104);
  LODWORD(v123) = *(unsigned __int8 *)(v11 + 120);
  id v98 = v8;
  uint64_t v115 = (void *)v11;
  id v120 = v29;
  id v35 = v29;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  id v36 = v15;
  if (v33)
  {
    swift_bridgeObjectRetain();
    id v37 = v19;
    uint64_t v34 = sub_1C254F530();
    uint64_t v39 = v38;
    swift_bridgeObjectRelease();
  }
  else
  {
    id v37 = v19;
    uint64_t v39 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v40 = v37;
  id v41 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

  uint64_t v42 = *(void *)&v9[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_titleView];
  uint64_t v128 = &type metadata for UserDomainConceptFeedItemViewData;
  id v129 = &protocol witness table for UserDomainConceptFeedItemViewData;
  uint64_t v43 = swift_allocObject();
  uint64_t v125 = v43;
  *(void *)(v43 + 16) = v122;
  *(void *)(v43 + 24) = v13;
  *(void *)(v43 + 32) = 0;
  *(void *)(v43 + 40) = 0;
  id v111 = v19;
  *(void *)(v43 + 48) = v19;
  id v44 = v114;
  id v45 = v120;
  *(void *)(v43 + 56) = v114;
  *(void *)(v43 + 64) = v45;
  *(void *)(v43 + 72) = v121;
  *(void *)(v43 + 80) = v32;
  uint64_t v110 = v34;
  *(void *)(v43 + 88) = v34;
  *(void *)(v43 + 96) = v39;
  *(void *)(v43 + 104) = 0;
  *(unsigned char *)(v43 + 112) = 1;
  *(_WORD *)(v43 + 113) = 0;
  *(unsigned char *)(v43 + 115) = 0;
  int v46 = v123;
  *(unsigned char *)(v43 + 116) = v123;
  uint64_t v124 = v32;
  uint64_t v47 = v13;
  uint64_t v48 = v42 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v107 = v40;
  id v108 = v41;
  id v109 = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C225F0B8((uint64_t)&v125, v48, (unint64_t *)&qword_1EA2DEE88, &qword_1EA2DEE90);
  swift_endAccess();
  sub_1C223A4E8();
  sub_1C229B07C((uint64_t)&v125, (unint64_t *)&qword_1EA2DEE88, &qword_1EA2DEE90);
  uint64_t v49 = *(void *)&v9[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_valueView];
  uint64_t v112 = v49;
  if (v46) {
    uint64_t v50 = 0x100000001;
  }
  else {
    uint64_t v50 = 1;
  }
  uint64_t v51 = v49 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  swift_beginAccess();
  uint64_t v119 = *(void *)v51;
  uint64_t v104 = *(void *)(v51 + 8);
  uint64_t v103 = *(void *)(v51 + 16);
  id v52 = *(void **)(v51 + 32);
  uint64_t v102 = *(void *)(v51 + 24);
  id v53 = v44;
  id v113 = v9;
  id v54 = *(void **)(v51 + 40);
  uint64_t v118 = *(void **)(v51 + 48);
  uint64_t v123 = *(void *)(v51 + 56);
  uint64_t v55 = *(void *)(v51 + 72);
  uint64_t v101 = *(void *)(v51 + 64);
  uint64_t v116 = v55;
  uint64_t v106 = *(unsigned int *)(v51 + 96);
  uint64_t v56 = *(void *)(v51 + 80);
  uint64_t v57 = *(void *)(v51 + 88);
  uint64_t v105 = *(unsigned __int8 *)(v51 + 100);
  uint64_t v117 = v106 | (v105 << 32);
  *(void *)uint64_t v51 = v122;
  *(void *)(v51 + 8) = v47;
  *(void *)(v51 + 16) = 0;
  *(void *)(v51 + 24) = 0;
  *(void *)(v51 + 32) = v111;
  *(void *)(v51 + 40) = v53;
  uint64_t v58 = v121;
  *(void *)(v51 + 48) = v120;
  *(void *)(v51 + 56) = v58;
  uint64_t v59 = v110;
  *(void *)(v51 + 64) = v124;
  *(void *)(v51 + 72) = v59;
  *(void *)(v51 + 80) = v39;
  *(void *)(v51 + 88) = 0;
  *(_DWORD *)(v51 + 96) = v50;
  *(unsigned char *)(v51 + 100) = BYTE4(v50);
  uint64_t v121 = v47;
  swift_bridgeObjectRetain();
  id v120 = v107;
  id v114 = v108;
  id v111 = v109;
  swift_bridgeObjectRetain();
  uint64_t v122 = v39;
  swift_bridgeObjectRetain();
  uint64_t v100 = v57;
  uint64_t v99 = v56;
  uint64_t v60 = v101;
  uint64_t v61 = v119;
  uint64_t v62 = v104;
  uint64_t v63 = v103;
  uint64_t v64 = v102;
  uint64_t v65 = v52;
  uint64_t v66 = v52;
  id v67 = v118;
  sub_1C22AC0E8(v119, v104, v103, v102, v66, v54, v118);
  id v68 = v67;
  id v69 = v67;
  uint64_t v70 = v123;
  sub_1C22AC064(v61, v62, v63, v64, v65, v54, v69);
  uint64_t v125 = v61;
  uint64_t v126 = v62;
  uint64_t v127 = v63;
  uint64_t v128 = (ValueMetadata *)v64;
  id v129 = (_UNKNOWN **)v65;
  int v130 = v54;
  uint64_t v131 = v68;
  uint64_t v132 = v70;
  uint64_t v133 = v60;
  uint64_t v134 = v116;
  uint64_t v135 = v99;
  uint64_t v136 = v100;
  char v138 = v105;
  int v137 = v106;
  sub_1C2315E54((uint64_t)&v125);
  sub_1C22AC064(v119, v62, v63, v64, v65, v54, v118);
  id v71 = v115;
  id v72 = *(void **)&v113[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel];
  if (v115[9])
  {
    objc_msgSend(*(id *)&v113[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel], sel_setAttributedText_);
    if (!v71[8]) {
      goto LABEL_30;
    }
  }
  else
  {
    if (v115[8])
    {
      swift_bridgeObjectRetain();
      uint64_t v73 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v73 = 0;
    }
    objc_msgSend(v72, sel_setText_, v73);

    if (!v71[8]) {
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  sub_1C254F530();
  uint64_t v75 = v74;
  swift_bridgeObjectRelease();
  if (v75)
  {
    swift_bridgeObjectRelease();
    uint64_t v76 = 0;
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v76 = 1;
LABEL_31:
  objc_msgSend(v72, sel_setHidden_, v76);
  id v77 = (void *)v71[4];
  self;
  uint64_t v78 = swift_dynamicCastObjCClass();
  if (v78 && (unint64_t v79 = v71[8]) != 0)
  {
    id v80 = (void *)v78;
    uint64_t v81 = v71[7];
    id v82 = v77;
    swift_bridgeObjectRetain();
    id v83 = objc_msgSend(v80, sel_authors);
    if (v83)
    {
      id v84 = v83;
      sub_1C254F710();
    }
    id v86 = self;
    id v87 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v88 = objc_msgSend(v86, sel_localizedStringByJoiningStrings_, v87);

    uint64_t v89 = sub_1C254F470();
    unint64_t v91 = v90;

    uint64_t v92 = HIBYTE(v79) & 0xF;
    if ((v79 & 0x2000000000000000) == 0) {
      uint64_t v92 = v81 & 0xFFFFFFFFFFFFLL;
    }
    if (!v92) {
      goto LABEL_43;
    }
    uint64_t v93 = HIBYTE(v91) & 0xF;
    if ((v91 & 0x2000000000000000) == 0) {
      uint64_t v93 = v89 & 0xFFFFFFFFFFFFLL;
    }
    if (v93)
    {
      uint64_t v125 = v81;
      uint64_t v126 = v79;
      sub_1C254F5A0();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      id v94 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v72, sel_setText_, v94);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      id v95 = v114;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
LABEL_43:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      id v96 = v114;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    id v85 = v114;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return sub_1C242B58C((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
}

uint64_t sub_1C2429CA0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254CD90();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C242B5EC(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = sub_1C254D370();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v2 + OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_sectionContext;
  swift_beginAccess();
  sub_1C225F20C(a1, v15);
  swift_endAccess();
  sub_1C230C848(v15, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1C225F194((uint64_t)v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_1C254D360();
    sub_1C242A1BC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return sub_1C225F194(a1);
}

void (*sub_1C2429F1C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1C254CD90();
  v3[4] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[5] = v5;
  v3[6] = malloc(*(void *)(v5 + 64));
  sub_1C242B5EC(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  v3[7] = malloc(*(void *)(*(void *)(v6 - 8) + 64));
  uint64_t v7 = sub_1C254D370();
  v3[8] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[9] = v8;
  uint64_t v9 = malloc(*(void *)(v8 + 64));
  uint64_t v10 = OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_sectionContext;
  v3[10] = v9;
  v3[11] = v10;
  swift_beginAccess();
  return sub_1C242A07C;
}

void sub_1C242A07C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = *(void *)(v3 + 64);
    uint64_t v5 = *(void *)(v3 + 72);
    uint64_t v6 = *(void *)(v3 + 56);
    sub_1C230C848(*(void *)(v3 + 24) + *(void *)(v3 + 88), v6);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
    {
      sub_1C225F194(*(void *)(v3 + 56));
    }
    else
    {
      uint64_t v8 = *(void *)(v3 + 72);
      uint64_t v7 = *(void *)(v3 + 80);
      uint64_t v9 = *(void *)(v3 + 64);
      uint64_t v11 = *(void *)(v3 + 40);
      uint64_t v10 = *(void *)(v3 + 48);
      uint64_t v12 = *(void *)(v3 + 32);
      (*(void (**)(uint64_t, void, uint64_t))(v8 + 32))(v7, *(void *)(v3 + 56), v9);
      sub_1C254D360();
      sub_1C242A1BC();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    }
  }
  uint64_t v14 = *(void **)(v3 + 48);
  uint64_t v13 = *(void **)(v3 + 56);
  free(*(void **)(v3 + 80));
  free(v13);
  free(v14);
  free((void *)v3);
}

void sub_1C242A1BC()
{
  uint64_t v1 = v0;
  sub_1C25503A0();
  uint64_t v2 = sub_1C254F470();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  sub_1C254CD80();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  sub_1C254CD70();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_1C254F430();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v5);

  swift_bridgeObjectRetain();
  sub_1C223A178(v2, v4);
  swift_bridgeObjectRetain();
  sub_1C2316BE4(v2, v4);
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_subtitleLabel];
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7);
}

id sub_1C242A3B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C242A480()
{
  return type metadata accessor for MedicalRecordTimelineItemCell();
}

uint64_t type metadata accessor for MedicalRecordTimelineItemCell()
{
  uint64_t result = qword_1EA2E35B8;
  if (!qword_1EA2E35B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C242A4D4()
{
  sub_1C242B5EC(319, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t destroy for MedicalRecordTimelineViewData(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for MedicalRecordTimelineViewData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v9;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  id v10 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v9;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MedicalRecordTimelineViewData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 56);
  uint64_t v8 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v8;
  id v9 = v8;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v10 = *(void **)(a1 + 96);
  id v11 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v11;
  id v12 = v11;

  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for MedicalRecordTimelineViewData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  long long v6 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);

  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicalRecordTimelineViewData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicalRecordTimelineViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicalRecordTimelineViewData()
{
  return &type metadata for MedicalRecordTimelineViewData;
}

unint64_t sub_1C242A988()
{
  unint64_t result = qword_1EA2E35C8;
  if (!qword_1EA2E35C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E35C8);
  }
  return result;
}

uint64_t sub_1C242A9DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C242AA30(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_item;
  swift_beginAccess();
  sub_1C225F0B8(a1, v3, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
  swift_endAccess();
  sub_1C2428E68();
  return sub_1C229B07C(a1, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
}

uint64_t (*sub_1C242AAD8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C242AB38;
}

uint64_t sub_1C242AB38(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2428E68();
  }
  return result;
}

void sub_1C242AB6C(uint64_t a1, void *a2)
{
}

uint64_t sub_1C242AB94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_sectionContext;
  swift_beginAccess();
  return sub_1C230C848(v3, a1);
}

void (*sub_1C242ABEC(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C2429F1C(v2);
  return sub_1C2231658;
}

uint64_t sub_1C242AC44(uint64_t a1, uint64_t a2)
{
  return sub_1C242B4E0(&qword_1EA2E35D0, a2, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItem);
}

uint64_t sub_1C242AC8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 117, 7);
}

uint64_t sub_1C242ACF4(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8)) {
    return 0;
  }
  long long v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
  id v6 = v5;
  id v7 = v4;
  char v8 = sub_1C254FF70();

  return v8 & 1;
}

void sub_1C242AD8C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PresentationContext(0);
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v47 - v12;
  uint64_t v14 = v1 + OBJC_IVAR____TtC15HealthRecordsUI29MedicalRecordTimelineItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v14, (uint64_t)&v58);
  if (v61)
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    type metadata accessor for MedicalRecordTimelineItem();
    if (swift_dynamicCast())
    {
      uint64_t v15 = v65;
      uint64_t v16 = sub_1C254EA80();
      int v57 = 0;
      LODWORD(v53) = v58;
      id v52 = v59;
      uint64_t v17 = v61;
      id v55 = v60;
      if (!v60 && v61)
      {
        int v18 = v62;
        uint64_t v16 = sub_1C2267FD8((uint64_t)objc_msgSend(*(id *)(v15 + 32), sel_recordCategoryType), (uint64_t)&unk_1F1D8E1F0);
        int v57 = v16 & (v18 ^ 1);
      }
      if (qword_1EBB6D858 != -1) {
        uint64_t v16 = swift_once();
      }
      id v50 = a1;
      uint64_t v54 = v15;
      uint64_t v49 = v5;
      uint64_t v48 = v4;
      uint64_t v56 = v17;
      if (qword_1EBB6EF30 != -1) {
        uint64_t v16 = swift_once();
      }
      uint64_t v65 = *(void *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_lock);
      MEMORY[0x1F4188790](v16);
      *(&v47 - 2) = v19;
      sub_1C254CEE0();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
      sub_1C242B4E0((unint64_t *)&qword_1EBB6F240, 255, MEMORY[0x1E4F66F68]);
      swift_retain();
      sub_1C254E1D0();
      swift_release();
      id v20 = v58;
      id v21 = *(void **)(v54 + 32);
      uint64_t v51 = v58;
      if (v57)
      {
        id v22 = sub_1C2452890(v21, v58);
      }
      else
      {
        uint64_t v23 = sub_1C254CB40();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v13, 1, 1, v23);
        sub_1C242B528((uint64_t)v13, (uint64_t)v10);
        id v24 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordDetailViewController(0));
        id v25 = v21;
        uint64_t v26 = v20;
        id v22 = sub_1C24CD370(v25, v26, (uint64_t)v10);

        id v27 = objc_msgSend(v22, sel_navigationItem);
        objc_msgSend(v27, sel_setLargeTitleDisplayMode_, 2);

        sub_1C242B58C((uint64_t)v13, type metadata accessor for PresentationContext);
      }

      id v28 = v56;
      uint64_t v29 = 11;
      if (v55) {
        uint64_t v29 = 19;
      }
      if (v56) {
        uint64_t v29 = 12;
      }
      if (v53) {
        uint64_t v29 = 10;
      }
      uint64_t v53 = v29;
      if (qword_1EBB6D840 != -1) {
        swift_once();
      }
      if (v28)
      {
        sub_1C21AA50C(v28, (uint64_t)&v58);
        char v30 = (char)v58;
        uint64_t v31 = v2;
        uint64_t v32 = v7;
        id v33 = v22;
        uint64_t v34 = v59;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        id v22 = v33;
        id v7 = v32;
        uint64_t v2 = v31;
        swift_bridgeObjectRelease();
      }
      else
      {
        char v30 = 11;
      }
      LOBYTE(v58) = v30;
      sub_1C23CD65C(1, v53, 0, (char *)&v58, 0);
      if (v57)
      {
        id v35 = objc_msgSend(v50, sel_navigationController);
        id v36 = v56;
        if (v35)
        {
          id v37 = v35;
          objc_msgSend(v35, sel_pushViewController_animated_, v22, 1);
        }
        swift_release();
      }
      else
      {
        uint64_t v64 = &unk_1F1E381C8;
        uint64_t v38 = swift_dynamicCastObjCProtocolConditional();
        uint64_t v39 = v56;
        if (v38)
        {
          uint64_t v40 = v38;
          id v41 = v22;
          objc_msgSend(v50, sel_showAdaptively_sender_animated_, v40, v2, 1);

          swift_release();
        }
        else
        {
          sub_1C254E510();
          uint64_t v42 = sub_1C254E550();
          os_log_type_t v43 = sub_1C254FA30();
          if (os_log_type_enabled(v42, v43))
          {
            id v44 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v44 = 0;
            _os_log_impl(&dword_1C21A1000, v42, v43, "Could not make AdaptiveModalPresentedViewController from factor makeDetailViewController(for:using:)", v44, 2u);
            MEMORY[0x1C875A0B0](v44, -1, -1);

            swift_release();
            id v22 = v51;
          }
          else
          {
            swift_release();

            uint64_t v42 = v51;
          }
          uint64_t v45 = v48;
          id v46 = v52;

          (*(void (**)(char *, uint64_t))(v49 + 8))(v7, v45);
        }
      }
    }
  }
  else
  {
    sub_1C229B07C((uint64_t)&v58, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
  }
}

uint64_t sub_1C242B4E0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C242B528(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PresentationContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C242B58C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C242B5EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t UDCAlphabeticalItem.__allocating_init(viewData:healthStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier);
  type metadata accessor for AlphabeticalUDCCell();
  sub_1C242C3A4(&qword_1EA2E0928, (void (*)(uint64_t))type metadata accessor for AlphabeticalUDCCell);
  uint64_t *v5 = sub_1C254D330();
  v5[1] = v6;
  sub_1C22EA32C(a1, v4 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
  *(void *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_healthStore) = a2;
  *(void *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_listConfiguration) = 1;
  return v4;
}

uint64_t UDCAlphabeticalItem.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C225F054(v1 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, a1);
}

id UDCAlphabeticalItem.healthStore.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_healthStore);
}

uint64_t UDCAlphabeticalItem.init(viewData:healthStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier);
  type metadata accessor for AlphabeticalUDCCell();
  sub_1C242C3A4(&qword_1EA2E0928, (void (*)(uint64_t))type metadata accessor for AlphabeticalUDCCell);
  uint64_t *v5 = sub_1C254D330();
  v5[1] = v6;
  sub_1C22EA32C(a1, v2 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_healthStore) = a2;
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_listConfiguration) = 1;
  return v2;
}

uint64_t UDCAlphabeticalItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C242B840()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier + 8);
  id v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData
                                                             + 8), sel_UUID, v3));
  sub_1C254CB20();

  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v10[0] = v7;
  v10[1] = v6;
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v10[0];
}

id sub_1C242B988()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData + 8);
}

uint64_t UDCAlphabeticalItem.deinit()
{
  sub_1C22EA0E4(v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UDCAlphabeticalItem.__deallocating_deinit()
{
  sub_1C22EA0E4(v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C242BA70()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C242BAB0()
{
  return sub_1C242B840();
}

uint64_t sub_1C242BAD4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C225F054(*v1 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, a1);
}

id sub_1C242BAEC()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_healthStore);
}

uint64_t sub_1C242BB00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  type metadata accessor for UDCAlphabeticalItem();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = (uint64_t *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_reuseIdentifier);
  type metadata accessor for AlphabeticalUDCCell();
  sub_1C242C3A4(&qword_1EA2E0928, (void (*)(uint64_t))type metadata accessor for AlphabeticalUDCCell);
  uint64_t *v7 = sub_1C254D330();
  v7[1] = v8;
  uint64_t result = sub_1C22EA32C(a1, v6 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
  *(void *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_healthStore) = a2;
  *(void *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_listConfiguration) = 1;
  *a3 = v6;
  return result;
}

uint64_t static UDCAlphabeticalItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return _s15HealthRecordsUI25UserDomainConceptViewDataV2eeoiySbAC_ACtFZ_0((void *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData), (void *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData));
}

uint64_t UDCAlphabeticalItem.hash(into:)()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData
                                                             + 8), sel_UUID, v3));
  sub_1C254CB20();

  sub_1C242C3A4((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
  sub_1C254F380();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t UDCAlphabeticalItem.hashValue.getter()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C25509C0();
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData
                                                             + 8), sel_UUID));
  sub_1C254CB20();

  sub_1C242C3A4((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
  sub_1C254F380();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_1C2550A10();
}

uint64_t sub_1C242BE80()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_1C25509C0();
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                             + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData
                                                             + 8), sel_UUID));
  sub_1C254CB20();

  sub_1C242C3A4((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
  sub_1C254F380();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_1C2550A10();
}

uint64_t sub_1C242BFD0()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData
                                                             + 8), sel_UUID, v3));
  sub_1C254CB20();

  sub_1C242C3A4((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
  sub_1C254F380();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
}

uint64_t sub_1C242C114()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C25509C0();
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData
                                                             + 8), sel_UUID));
  sub_1C254CB20();

  sub_1C242C3A4((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
  sub_1C254F380();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_1C2550A10();
}

uint64_t sub_1C242C270(void *a1, void *a2)
{
  return static UserDomainConceptViewData.== infix(_:_:)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, *a2 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
}

uint64_t sub_1C242C28C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C242C3A4(&qword_1EA2DFB90, (void (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
  uint64_t result = sub_1C242C3A4(&qword_1EA2E3638, (void (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for UDCAlphabeticalItem()
{
  uint64_t result = qword_1EA2E3648;
  if (!qword_1EA2E3648) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C242C35C()
{
  return sub_1C242C3A4(&qword_1EA2E3640, (void (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
}

uint64_t sub_1C242C3A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C242C3EC()
{
  return type metadata accessor for UDCAlphabeticalItem();
}

uint64_t sub_1C242C3F4()
{
  uint64_t result = type metadata accessor for UserDomainConceptViewData();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for UDCAlphabeticalItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UDCAlphabeticalItem);
}

uint64_t dispatch thunk of UDCAlphabeticalItem.__allocating_init(viewData:healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of UDCAlphabeticalItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of UDCAlphabeticalItem.concept.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

unint64_t static HeaderWithRightAlignedButton.defaultReuseIdentifier.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1C242C538()
{
  return sub_1C223A124(&OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText);
}

void sub_1C242C544(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  id v6 = *(void **)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel);
  if (v5[1])
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = 0;
  }
  objc_msgSend(v6, sel_setText_, v7);
}

void (*sub_1C242C5FC(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C242C668;
}

void sub_1C242C668(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    id v5 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel);
    if (*(void *)(v4 + v3[4] + 8))
    {
      swift_bridgeObjectRetain();
      id v6 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v6 = 0;
    }
    objc_msgSend(v5, sel_setText_, v6);
  }
  free(v3);
}

uint64_t sub_1C242C714(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254FFC0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C242C7B8()
{
  return sub_1C223A124(&OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText);
}

uint64_t sub_1C242C7C4(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254FFC0();
  return swift_bridgeObjectRelease();
}

void (*sub_1C242C854(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C242C8C0;
}

void sub_1C242C8C0(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    sub_1C254FFC0();
    swift_bridgeObjectRelease();
  }
  free(v3);
}

void sub_1C242C944(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C242C9BC();
}

void sub_1C242C9BC()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier];
  swift_beginAccess();
  uint64_t v2 = *((void *)v1 + 1);
  if (v2)
  {
    uint64_t v3 = *(void *)v1;
    sub_1C22259B4(0, (unint64_t *)&qword_1EBB6FA60);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C255CDA0;
    *(void *)(v4 + 32) = v3;
    *(void *)(v4 + 40) = v2;
    *(void *)(v4 + 48) = 0x6956726564616548;
    *(void *)(v4 + 56) = 0xEA00000000007765;
    swift_bridgeObjectRetain();
    id v5 = (void *)sub_1C254F700();
    id v6 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v0, sel_setAccessibilityIdentifier_, v6);
    uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel];
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)v4;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1C226BFC0(0, *(void *)(v4 + 16) + 1, 1, (void *)v4);
    }
    unint64_t v10 = v8[2];
    unint64_t v9 = v8[3];
    if (v10 >= v9 >> 1) {
      uint64_t v8 = sub_1C226BFC0((void *)(v9 > 1), v10 + 1, 1, v8);
    }
    void v8[2] = v10 + 1;
    uint64_t v11 = &v8[2 * v10];
    void v11[4] = 0x6554636974617453;
    v11[5] = 0xEA00000000007478;
    uint64_t v12 = (void *)sub_1C254F700();
    id v13 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v13);
    swift_bridgeObjectRelease();

    uint64_t v14 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_button];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = (uint64_t)sub_1C226BFC0(0, *(void *)(v4 + 16) + 1, 1, (void *)v4);
    }
    unint64_t v16 = *(void *)(v4 + 16);
    unint64_t v15 = *(void *)(v4 + 24);
    if (v16 >= v15 >> 1) {
      uint64_t v4 = (uint64_t)sub_1C226BFC0((void *)(v15 > 1), v16 + 1, 1, (void *)v4);
    }
    *(void *)(v4 + 16) = v16 + 1;
    uint64_t v17 = v4 + 16 * v16;
    *(void *)(v17 + 32) = 0x6E6F74747542;
    *(void *)(v17 + 40) = 0xE600000000000000;
    int v18 = (void *)sub_1C254F700();
    id v19 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v14, sel_setAccessibilityIdentifier_, v19);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C242CC5C()
{
  return sub_1C223A124(&OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier);
}

void sub_1C242CC68(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  sub_1C242C9BC();
}

void (*sub_1C242CCCC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C242CD2C;
}

void sub_1C242CD2C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C242C9BC();
  }
}

uint64_t sub_1C242CD60()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate;
  swift_beginAccess();
  return MEMORY[0x1C875A200](v1);
}

uint64_t sub_1C242CDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1C242CE1C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C875A200](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1C242CEA4;
}

void sub_1C242CEA4(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id HeaderWithRightAlignedButton.__allocating_init(reuseIdentifier:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = objc_msgSend(objc_allocWithZone(v2), sel_initWithReuseIdentifier_, v3);

  return v4;
}

char *HeaderWithRightAlignedButton.init(reuseIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel;
  uint64_t v5 = self;
  uint64_t v6 = v2;
  id v7 = objc_msgSend(v5, sel_labelColor);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v8, sel_setFont_, 0);
  objc_msgSend(v8, sel_setNumberOfLines_, 0);
  objc_msgSend(v8, sel_setTextColor_, v7);

  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v2[v4] = v8;
  uint64_t v9 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_button;
  id v10 = objc_msgSend(self, sel_buttonWithType_, 1);
  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v6[v9] = v10;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_customConstraints] = MEMORY[0x1E4FBC860];
  uint64_t v11 = &v6[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  uint64_t v12 = &v6[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  id v13 = &v6[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier];
  *(void *)id v13 = 0;
  *((void *)v13 + 1) = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  if (a2)
  {
    uint64_t v14 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
  }
  v24.receiver = v6;
  v24.super_class = (Class)type metadata accessor for HeaderWithRightAlignedButton();
  unint64_t v15 = (char *)objc_msgSendSuper2(&v24, sel_initWithReuseIdentifier_, v14);

  unint64_t v16 = *(void **)&v15[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_button];
  uint64_t v17 = v15;
  objc_msgSend(v16, sel_addTarget_action_forControlEvents_, v17, sel_buttonTapped_, 64);
  LODWORD(v18) = 1148846080;
  objc_msgSend(v16, sel_setContentHuggingPriority_forAxis_, 0, v18);
  objc_msgSend(v17, sel_addSubview_, *(void *)&v17[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel]);
  objc_msgSend(v17, sel_addSubview_, v16);
  sub_1C242D370();
  sub_1C242D5A0();
  sub_1C23172CC();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C255CD90;
  uint64_t v20 = sub_1C254E8E0();
  uint64_t v21 = MEMORY[0x1E4FB1138];
  *(void *)(v19 + 32) = v20;
  *(void *)(v19 + 40) = v21;
  id v22 = v17;
  MEMORY[0x1C87583B0](v19, sel_traitCollectionDidChangeWithTraitEnvironment_previousTraitCollection_);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v22;
}

uint64_t type metadata accessor for HeaderWithRightAlignedButton()
{
  return self;
}

uint64_t sub_1C242D370()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254E790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254E890();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E810();
  id v10 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel];
  sub_1C254E7B0();
  uint64_t v11 = (void *)sub_1C254E760();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(v10, sel_setFont_, v11);

  id v12 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_button], sel_titleLabel);
  if (v12)
  {
    id v13 = v12;
    id v14 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
    objc_msgSend(v13, sel_setFont_, v14);
  }
  sub_1C254E800();
  objc_msgSend(v1, sel_setDirectionalLayoutMargins_);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id sub_1C242D5A0()
{
  uint64_t v1 = self;
  uint64_t v2 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_customConstraints;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_deactivateConstraints_, v3);

  id v4 = objc_msgSend(v0, sel_traitCollection);
  id v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  LOBYTE(v4) = sub_1C254FD50();
  if (v4) {
    uint64_t v6 = sub_1C242D6F4();
  }
  else {
    uint64_t v6 = sub_1C242DA90();
  }
  *(void *)&v0[v2] = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v7);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_1C242D6F4()
{
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C255EBD0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel];
  id v3 = objc_msgSend(v2, sel_topAnchor);
  id v4 = objc_msgSend(v0, sel_layoutMarginsGuide);
  id v5 = objc_msgSend(v4, sel_topAnchor);

  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v5);
  *(void *)(v1 + 32) = v6;
  id v7 = objc_msgSend(v2, sel_leadingAnchor);
  id v8 = objc_msgSend(v0, sel_layoutMarginsGuide);
  id v9 = objc_msgSend(v8, (SEL)&selRef_minusOrderedSet_ + 2);

  id v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);
  *(void *)(v1 + 40) = v10;
  id v11 = objc_msgSend(v2, sel_trailingAnchor);
  id v12 = objc_msgSend(v0, sel_layoutMarginsGuide);
  id v13 = objc_msgSend(v12, sel_trailingAnchor);

  id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  *(void *)(v1 + 48) = v14;
  unint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_button];
  id v16 = objc_msgSend(v15, sel_topAnchor);
  id v17 = objc_msgSend(v2, sel_bottomAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, 8.0);

  *(void *)(v1 + 56) = v18;
  id v19 = objc_msgSend(v15, sel_leadingAnchor);
  id v20 = objc_msgSend(v2, sel_leadingAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(void *)(v1 + 64) = v21;
  id v22 = objc_msgSend(v15, sel_trailingAnchor);
  id v23 = objc_msgSend(v2, sel_trailingAnchor);
  id v24 = objc_msgSend(v22, sel_constraintLessThanOrEqualToAnchor_, v23);

  *(void *)(v1 + 72) = v24;
  id v25 = objc_msgSend(v0, sel_layoutMarginsGuide);
  id v26 = objc_msgSend(v25, sel_bottomAnchor);

  id v27 = objc_msgSend(v15, sel_bottomAnchor);
  id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

  *(void *)(v1 + 80) = v28;
  sub_1C254F730();
  return v1;
}

uint64_t sub_1C242DA90()
{
  uint64_t v1 = v0;
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C25645D0;
  id v3 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel];
  id v4 = objc_msgSend(v3, sel_topAnchor);
  id v5 = objc_msgSend(v1, sel_layoutMarginsGuide);
  id v6 = objc_msgSend(v5, sel_topAnchor);

  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(void *)(v2 + 32) = v7;
  id v8 = objc_msgSend(v3, sel_leadingAnchor);
  id v9 = objc_msgSend(v1, sel_layoutMarginsGuide);
  id v10 = objc_msgSend(v9, sel_leadingAnchor);

  id v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v10);
  *(void *)(v2 + 40) = v11;
  id v12 = objc_msgSend(v1, sel_layoutMarginsGuide);
  id v13 = objc_msgSend(v12, sel_bottomAnchor);

  id v14 = objc_msgSend(v3, sel_bottomAnchor);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v14);

  *(void *)(v2 + 48) = v15;
  id v16 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_button];
  id v17 = objc_msgSend(v16, sel_leadingAnchor);
  id v18 = objc_msgSend(v3, sel_trailingAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, 8.0);

  *(void *)(v2 + 56) = v19;
  id v20 = objc_msgSend(v16, sel_trailingAnchor);
  id v21 = objc_msgSend(v1, sel_layoutMarginsGuide);
  id v22 = objc_msgSend(v21, sel_trailingAnchor);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(void *)(v2 + 64) = v23;
  id v24 = objc_msgSend(v16, sel_lastBaselineAnchor);
  id v25 = objc_msgSend(v3, sel_lastBaselineAnchor);
  id v26 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v25);

  *(void *)(v2 + 72) = v26;
  sub_1C254F730();
  return v2;
}

id HeaderWithRightAlignedButton.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeaderWithRightAlignedButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C242DEBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText, a2);
}

void sub_1C242DEC8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1C242C544(v1, v2);
}

uint64_t sub_1C242DF08@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText, a2);
}

uint64_t sub_1C242DF18@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier, a2);
}

uint64_t sub_1C242DF28@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C875A200](v3);
  uint64_t v5 = *(void *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1C242DF84(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate;
  swift_beginAccess();
  *(void *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for HeaderWithRightAlignedButton(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HeaderWithRightAlignedButton);
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.headerText.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.headerText.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.headerText.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.buttonText.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.buttonText.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.buttonText.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.baseAccessibilityIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.baseAccessibilityIdentifier.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.baseAccessibilityIdentifier.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.delegate.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.delegate.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButton.delegate.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of HeaderWithRightAlignedButtonDelegate.didTapHeaderButton()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void sub_1C242E32C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel;
  id v2 = objc_msgSend(self, sel_labelColor);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v3, sel_setFont_, 0);
  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  objc_msgSend(v3, sel_setTextColor_, v2);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v0[v1] = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_button;
  id v5 = objc_msgSend(self, sel_buttonWithType_, 1);
  objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v0[v4] = v5;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_customConstraints] = MEMORY[0x1E4FBC860];
  id v6 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  id v7 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  id v8 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier];
  *(void *)id v8 = 0;
  *((void *)v8 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  sub_1C25505F0();
  __break(1u);
}

void sub_1C242E4D8(void *a1)
{
  id v2 = v1;
  id v4 = objc_msgSend(v2, sel_traitCollection);
  id v5 = v4;
  if (a1)
  {
    if (v4)
    {
      sub_1C21AB51C(0, &qword_1EBB6FF98);
      id v6 = a1;
      char v7 = sub_1C254FF70();

      if (v7) {
        return;
      }
    }
  }
  else
  {
    if (!v4) {
      return;
    }
  }
  sub_1C242D370();
  sub_1C242D5A0();
}

uint64_t type metadata accessor for ClinicalAccountDetailsViewController()
{
  uint64_t result = qword_1EA2E3708;
  if (!qword_1EA2E3708) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C242E5FC()
{
  return swift_initClassMetadata2();
}

char *sub_1C242E68C(void *a1, void *a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v54 = a5;
  uint64_t v53 = a4;
  uint64_t v70 = MEMORY[0x1E4F28088];
  id v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  uint64_t v57 = MEMORY[0x1E4FBB718];
  sub_1C2433334(0, &qword_1EA2E3760, MEMORY[0x1E4F28088], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v64 = (char *)&v51 - v11;
  uint64_t v12 = sub_1C25500F0();
  uint64_t v68 = *(void *)(v12 - 8);
  uint64_t v69 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v58 = MEMORY[0x1E4FBCC28];
  uint64_t v59 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2433334(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], v9);
  MEMORY[0x1F4188790](v14 - 8);
  id v16 = (char *)&v51 - v15;
  unsigned __int8 v62 = sub_1C2434258;
  uint64_t v61 = sub_1C2434340;
  sub_1C243417C(0, &qword_1EA2E3768, (void (*)(uint64_t))sub_1C2434258, (void (*)(void))sub_1C2434340);
  uint64_t v63 = v17;
  uint64_t v65 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  id v52 = (char *)&v51 - v18;
  sub_1C2434374();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v66 = v19;
  uint64_t v67 = v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v60 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v22 = *a3;
  *(void *)&v5[qword_1EA2E3690] = 0;
  *(void *)&v5[qword_1EA2E3698] = 0;
  *(void *)&v5[qword_1EA2E36D8] = 0;
  *(void *)&v5[qword_1EA2E36E0] = 0;
  *(void *)&v5[qword_1EA2E36E8] = 0;
  *(void *)&v5[qword_1EA2E36F0] = 0;
  v5[qword_1EA2E36F8] = 0;
  *(void *)&v5[qword_1EA2E3700] = 0;
  id v73 = a1;
  uint64_t v74 = 0;
  sub_1C2434258();
  swift_allocObject();
  id v23 = v5;
  id v24 = a1;
  *(void *)&v23[qword_1EA2E36A0] = sub_1C254EAA0();
  *(void *)&v23[qword_1EA2E36A8] = a2;
  id v25 = a2;
  id v26 = objc_msgSend(v25, sel_clinicalAccountStore);
  *(void *)&v23[qword_1EA2E36B0] = v26;
  type metadata accessor for ClinicalAccountManager();
  id v27 = (void *)swift_allocObject();
  uint64_t v28 = MEMORY[0x1E4FBC870];
  void v27[5] = 0;
  v27[6] = 0;
  v27[4] = v28;
  v27[2] = v25;
  id v56 = v25;
  void v27[3] = objc_msgSend(v56, sel_clinicalAccountStore);
  *(void *)&v23[qword_1EA2E36B8] = v27;
  type metadata accessor for ClinicalAccountDetailsDataSourceProvider();
  swift_allocObject();
  id v29 = v24;
  id v55 = v29;
  swift_retain();
  uint64_t v30 = sub_1C232986C(v29, (uint64_t)v27);

  swift_release();
  *(void *)&v23[qword_1EA2E36C0] = v30;
  v23[qword_1EA2E36C8] = v22;
  uint64_t v31 = &v23[qword_1EA2E36D0];
  uint64_t v32 = v54;
  *uint64_t v31 = v53;
  v31[1] = v32;

  id v33 = (objc_class *)type metadata accessor for ClinicalAccountDetailsViewController();
  v72.receiver = v23;
  v72.super_class = v33;
  uint64_t v34 = (char *)objc_msgSendSuper2(&v72, sel_initWithCollectionViewLayout_, 0);
  uint64_t v35 = *(void *)&v34[qword_1EA2E36C0];
  uint64_t v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v37 = *(void *)(v35 + 88);
  *(void *)(v35 + 88) = sub_1C243449C;
  *(void *)(v35 + 96) = v36;
  uint64_t v38 = v34;
  sub_1C221794C(v37);
  id v73 = *(id *)&v38[qword_1EA2E36A0];
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  swift_retain();
  id v71 = (id)sub_1C254FC70();
  uint64_t v39 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v16, 1, 1, v39);
  sub_1C2434340();
  sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
  sub_1C254EC70();
  uint64_t v40 = v57;
  sub_1C2433A14((uint64_t)v16, (uint64_t)&qword_1EBB6F4A0, v58, v57, (uint64_t (*)(void))sub_1C2433334);

  swift_release();
  id v41 = v59;
  sub_1C25500E0();
  id v73 = objc_msgSend(self, sel_mainRunLoop);
  uint64_t v42 = sub_1C25500D0();
  uint64_t v43 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v64, 1, 1, v42);
  sub_1C21AB51C(0, &qword_1EA2E3790);
  sub_1C2433AB4(&qword_1EA2E3798, &qword_1EA2E3768, (void (*)(uint64_t))v62, (void (*)(void))v61);
  sub_1C22000E8(&qword_1EA2E37A0, &qword_1EA2E3790);
  id v44 = v60;
  uint64_t v45 = v41;
  uint64_t v46 = v63;
  uint64_t v47 = v52;
  sub_1C254EC80();
  sub_1C2433A14(v43, (uint64_t)&qword_1EA2E3760, v70, v40, (uint64_t (*)(void))sub_1C2433334);

  (*(void (**)(char *, uint64_t))(v68 + 8))(v45, v69);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v47, v46);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C24339CC(&qword_1EA2E37A8, (void (*)(uint64_t))sub_1C2434374);
  uint64_t v48 = v66;
  uint64_t v49 = sub_1C254ECC0();

  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v44, v48);
  *(void *)&v38[qword_1EA2E36E0] = v49;
  swift_release();
  return v38;
}

uint64_t sub_1C242EF00(uint64_t a1, uint64_t a2)
{
  sub_1C2433334(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v22 - v5;
  sub_1C243461C(0, &qword_1EA2E37B0, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC60]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v22 - v10;
  sub_1C24344AC();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C875A200](a2 + 16);
  if (result)
  {
    uint64_t v19 = (char *)result;
    if (a1)
    {
      swift_retain();
      sub_1C254D560();
      uint64_t v23 = v14;
      swift_release();
      swift_beginAccess();
      sub_1C243461C(0, (unint64_t *)&qword_1EBB6F020, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC70]);
      sub_1C254EB40();
      swift_endAccess();
      swift_release();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
      id v24 = (id)sub_1C254FC70();
      uint64_t v20 = sub_1C254FC20();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
      sub_1C24345A0();
      sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
      sub_1C254EC70();
      sub_1C2433A14((uint64_t)v6, (uint64_t)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2433334);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      swift_allocObject();
      swift_beginAccess();
      uint64_t v21 = (void *)MEMORY[0x1C875A200](v17);
      swift_unknownObjectWeakInit();

      sub_1C24339CC(&qword_1EA2E37C8, (void (*)(uint64_t))sub_1C24344AC);
      a1 = sub_1C254ECC0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v13);
    }
    *(void *)&v19[qword_1EA2E36D8] = a1;

    return swift_release();
  }
  return result;
}

void sub_1C242F3A0(char *a1, uint64_t a2)
{
  char v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C875A200](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    sub_1C24305CC(v2);
  }
}

void sub_1C242F3FC(void **a1, uint64_t a2)
{
  char v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = (char *)MEMORY[0x1C875A200](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    if (*(void *)&v4[qword_1EA2E3690])
    {
    }
    else
    {
      id v6 = *(void **)&v4[qword_1EA2E36E8];
      if (v6)
      {
        id v7 = v6;
        objc_msgSend(v7, sel_setHidden_, objc_msgSend(v2, sel_isSharingToProvider) ^ 1);
      }
      swift_retain();
      sub_1C2328410(v2);

      swift_release();
    }
  }
}

void sub_1C242F4D4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1C243347C();
}

id sub_1C242F4FC()
{
  uint64_t v1 = *(void *)&v0[qword_1EA2E36C0];
  uint64_t v10 = type metadata accessor for ClinicalAccountDetailsDataSourceProvider();
  uint64_t v11 = sub_1C24339CC(&qword_1EA2E3738, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsDataSourceProvider);
  uint64_t v9 = v1;
  swift_retain();
  sub_1C254E0F0();
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for ClinicalAccountDetailsViewController();
  objc_msgSendSuper2(&v8, sel_viewDidLoad);
  id result = objc_msgSend(v0, sel_collectionView);
  if (result)
  {
    id v3 = result;
    int v4 = v0[qword_1EA2E36C8];
    uint64_t v5 = self;
    id v6 = &selRef_systemBackgroundColor;
    if (!v4) {
      id v6 = &selRef_systemGroupedBackgroundColor;
    }
    id v7 = [v5 *v6];
    objc_msgSend(v3, sel_setBackgroundColor_, v7);

    return (id)sub_1C242F630();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C242F630()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  sub_1C2433334(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  int v4 = (char *)&v20 - v3;
  sub_1C243417C(0, (unint64_t *)&qword_1EA2DE3C0, (void (*)(uint64_t))sub_1C21A842C, (void (*)(void))sub_1C2200190);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v20 - v6;
  if (qword_1EBB6EF30 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1EBB6FB90;
  id v9 = objc_msgSend(*(id *)(v0 + qword_1EA2E36A8), sel_healthStore);
  id v10 = objc_msgSend(v9, sel_profileIdentifier);

  id v24 = *(id *)(v8 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v11);
  *(&v20 - 2) = v8;
  *(&v20 - 1) = (uint64_t)v10;
  sub_1C254CEE0();
  type metadata accessor for AccountStateProvider();
  sub_1C24339CC((unint64_t *)&qword_1EBB6F240, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();

  swift_release();
  uint64_t v12 = *(void *)(v25 + 24);
  swift_retain();
  swift_release();
  uint64_t v25 = v12;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v24 = (id)sub_1C254FC70();
  uint64_t v13 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  sub_1C21A842C();
  sub_1C2200190();
  sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
  sub_1C254EC70();
  sub_1C2433A14((uint64_t)v4, (uint64_t)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2433334);

  swift_release();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = ObjectType;
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v16;
  sub_1C2433AB4((unint64_t *)&unk_1EA2DE3D8, (unint64_t *)&qword_1EA2DE3C0, (void (*)(uint64_t))sub_1C21A842C, (void (*)(void))sub_1C2200190);
  uint64_t v17 = v22;
  uint64_t v18 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v17);
  *(void *)(v1 + qword_1EA2E3700) = v18;
  return swift_release();
}

void sub_1C242FB10(void *a1)
{
  id v1 = a1;
  sub_1C242F4FC();
}

id sub_1C242FB58(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for ClinicalAccountDetailsViewController();
  id result = objc_msgSendSuper2(&v4, sel_viewDidAppear_, a1 & 1);
  if (*(void *)(*(void *)&v1[qword_1EA2E36C0] + 80))
  {
    swift_retain();
    sub_1C254D560();
    swift_release();
    sub_1C22B58A4(1);
    return (id)swift_release();
  }
  return result;
}

void sub_1C242FBF0(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1C242FB58(a3);
}

void sub_1C242FC44(char a1)
{
  uint64_t v2 = v1;
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for ClinicalAccountDetailsViewController();
  objc_msgSendSuper2(&v9, sel_viewWillDisappear_, a1 & 1);
  uint64_t v4 = *(void *)&v1[qword_1EA2E36D0 + 8];
  if (v4)
  {
    uint64_t v5 = *(void *)&v1[qword_1EA2E36D0];
    if ((objc_msgSend(v2, sel_isMovingFromParentViewController) & 1) != 0
      || (objc_msgSend(v2, sel_isBeingDismissed) & 1) != 0
      || (id v6 = objc_msgSend(v2, sel_navigationController)) != 0
      && (v7 = v6, unsigned int v8 = objc_msgSend(v6, sel_isBeingDismissed), v7, v8))
    {
      type metadata accessor for HealthRecordsViewRouter();
      static HealthRecordsViewRouter.navigateBack(to:)(v5, v4);
    }
  }
}

void sub_1C242FD28(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1C242FC44(a3);
}

void sub_1C242FD7C()
{
  id v1 = v0;
  sub_1C254E100();
  uint64_t v2 = (void (*)(void))sub_1C254E110();
  v2();
  id v3 = objc_msgSend(v0, sel_collectionView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_18;
  }
  id v4 = v3;
  type metadata accessor for TextItemCell();
  sub_1C24339CC(&qword_1EA2DE790, (void (*)(uint64_t))type metadata accessor for TextItemCell);
  sub_1C254FAD0();

  id v5 = objc_msgSend(v1, sel_collectionView);
  if (!v5)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v6 = v5;
  type metadata accessor for AccountActionCell();
  sub_1C24339CC(&qword_1EA2E3740, (void (*)(uint64_t))type metadata accessor for AccountActionCell);
  sub_1C254FAD0();

  id v7 = objc_msgSend(v1, sel_collectionView);
  if (!v7)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unsigned int v8 = v7;
  type metadata accessor for AccountUpgradeCell();
  sub_1C24339CC(&qword_1EA2DE9C0, (void (*)(uint64_t))type metadata accessor for AccountUpgradeCell);
  sub_1C254FAD0();

  id v9 = objc_msgSend(v1, sel_collectionView);
  if (!v9)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v10 = v9;
  type metadata accessor for TitleSubtitleDetailCell();
  sub_1C24339CC(&qword_1EA2E02E0, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailCell);
  sub_1C254FAD0();

  id v11 = objc_msgSend(v1, sel_collectionView);
  if (!v11)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v11;
  type metadata accessor for TitleSubtitleDetailSpinnerCell();
  sub_1C24339CC(&qword_1EA2E02E8, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailSpinnerCell);
  sub_1C254FAD0();

  id v13 = objc_msgSend(v1, sel_collectionView);
  if (!v13)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v14 = v13;
  type metadata accessor for AccountSourceCell();
  sub_1C24339CC(&qword_1EA2E3748, (void (*)(uint64_t))type metadata accessor for AccountSourceCell);
  sub_1C254FAD0();

  id v15 = objc_msgSend(v1, sel_collectionView);
  if (!v15)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v16 = v15;
  type metadata accessor for TopAlignedIconListCell();
  sub_1C24339CC((unint64_t *)&qword_1EA2E3750, (void (*)(uint64_t))type metadata accessor for TopAlignedIconListCell);
  sub_1C254FAD0();

  id v17 = objc_msgSend(v1, sel_collectionView);
  if (!v17)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v18 = v17;
  type metadata accessor for UploadNewDataCell();
  sub_1C24339CC(&qword_1EA2E3758, (void (*)(uint64_t))type metadata accessor for UploadNewDataCell);
  sub_1C254FAD0();

  id v19 = objc_msgSend(v1, sel_collectionView);
  if (!v19)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v20 = v19;
  sub_1C254DE80();
  sub_1C254FAE0();

  id v21 = objc_msgSend(v1, sel_collectionView);
  if (!v21)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v22 = v21;
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  sub_1C24339CC((unint64_t *)&qword_1EA2DE6E8, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell);
  sub_1C254FAD0();

  id v23 = objc_msgSend(v1, sel_collectionView);
  if (!v23)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v24 = v23;
  sub_1C254DBB0();
  sub_1C254FAF0();

  id v25 = objc_msgSend(v1, sel_collectionView);
  if (!v25)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v26 = v25;
  sub_1C254DFE0();
  sub_1C254FAF0();

  id v27 = objc_msgSend(v1, sel_collectionView);
  if (!v27)
  {
LABEL_29:
    __break(1u);
    return;
  }
  sub_1C254D510();
  sub_1C254FAD0();
}

id sub_1C24302F0()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v0, sel_didTapDone_);
  sub_1C243461C(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255D0E0;
  *(void *)(v2 + 32) = sub_1C254F470();
  *(void *)(v2 + 40) = v3;
  *(void *)(v2 + 48) = 0x746E756F636341;
  *(void *)(v2 + 56) = 0xE700000000000000;
  *(void *)(v2 + 64) = 1701736260;
  *(void *)(v2 + 72) = 0xE400000000000000;
  id v4 = v1;
  id v5 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v6 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v4, sel_setAccessibilityIdentifier_, v6);
  id v7 = *(void **)(v0 + qword_1EA2E36F0);
  *(void *)(v0 + qword_1EA2E36F0) = v4;
  id v8 = v4;

  return v8;
}

void sub_1C2430440()
{
  id v1 = v0;
  v0[qword_1EA2E36F8] = 1;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_didTapCancel_);
  uint64_t v3 = qword_1EA2E36E8;
  id v4 = *(void **)&v0[qword_1EA2E36E8];
  *(void *)&v0[qword_1EA2E36E8] = v2;

  id v5 = *(void **)&v0[v3];
  if (v5)
  {
    objc_msgSend(v5, sel_setEnabled_, 0);
    id v6 = *(void **)&v0[v3];
    if (v6)
    {
      id v7 = v6;
      swift_retain();
      sub_1C254EA80();
      swift_release();
      unsigned int v8 = objc_msgSend(v13, sel_isSharingToProvider);

      objc_msgSend(v7, sel_setHidden_, v8 ^ 1);
    }
  }
  id v9 = objc_msgSend(v0, sel_navigationItem);
  id v10 = *(id *)&v1[v3];
  objc_msgSend(v9, sel_setLeftBarButtonItem_, v10);

  id v11 = objc_msgSend(v1, sel_navigationItem);
  id v12 = sub_1C24302F0();
  objc_msgSend(v11, sel_setRightBarButtonItem_, v12);
}

void sub_1C24305CC(char a1)
{
  if (v1[qword_1EA2E36F8] == 1)
  {
    uint64_t v3 = qword_1EA2E36E8;
    objc_msgSend(*(id *)&v1[qword_1EA2E36E8], sel_setEnabled_, a1 & 1);
    id v4 = *(void **)&v1[v3];
    if (v4)
    {
      id v5 = v4;
      swift_retain();
      sub_1C254EA80();
      swift_release();
      unsigned int v6 = objc_msgSend(v15, sel_isSharingToProvider);

      objc_msgSend(v5, sel_setHidden_, v6 ^ 1);
    }
  }
  else
  {
    id v7 = objc_msgSend(v1, sel_navigationItem);
    unsigned int v8 = v7;
    if (a1)
    {
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v9 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      id v10 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setBackButtonTitle_, v10, 0xE000000000000000);

      id v14 = objc_msgSend(v1, sel_navigationItem);
      id v11 = *(void **)&v1[qword_1EA2E36F0];
      if (v11)
      {
        id v12 = *(id *)&v1[qword_1EA2E36F0];
      }
      else
      {
        id v12 = sub_1C24302F0();
        id v11 = 0;
      }
      id v13 = v11;
      objc_msgSend(v14, sel_setRightBarButtonItem_, v12);
    }
    else
    {
      objc_msgSend(v7, sel_setBackButtonTitle_, 0);

      id v14 = objc_msgSend(v1, sel_navigationItem);
      objc_msgSend(v14, sel_setRightBarButtonItem_, 0);
    }
  }
}

uint64_t sub_1C243085C(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    sub_1C25501E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v10, 0, sizeof(v10));
    id v5 = a1;
  }
  memset(v9, 0, sizeof(v9));
  sub_1C2430A30();
  uint64_t v6 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v7 = MEMORY[0x1E4FBB718];
  sub_1C2433A14((uint64_t)v9, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C243461C);

  return sub_1C2433A14((uint64_t)v10, (uint64_t)&qword_1EBB6EF00, v6, v7, (uint64_t (*)(void))sub_1C243461C);
}

uint64_t sub_1C2430944()
{
  if (*(void *)(*(void *)(v0 + qword_1EA2E36C0) + 80))
  {
    swift_retain();
    sub_1C254D560();
    swift_release();
    sub_1C22B8050();
    swift_release();
  }
  memset(v2, 0, sizeof(v2));
  sub_1C2430A30();
  return sub_1C2433A14((uint64_t)v2, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C243461C);
}

uint64_t sub_1C2430A18(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2430CBC(a1, a2, a3, (void (*)(id))sub_1C2430944);
}

void sub_1C2430A30()
{
  id v1 = objc_msgSend(v0, sel_navigationController);
  if (!v1) {
    return;
  }
  id v22 = v1;
  id v2 = objc_msgSend(v1, sel_viewControllers);
  sub_1C21AB51C(0, &qword_1EA2DE3F0);
  unint64_t v3 = sub_1C254F710();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v4 == 1)
  {
    id v5 = objc_msgSend(v22, sel_topViewController);
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = v0;
      char v8 = sub_1C254FF70();

      if (v8)
      {
        objc_msgSend(v7, sel_dismissViewControllerAnimated_completion_, 1, 0);
LABEL_17:
        id v14 = v22;
        goto LABEL_18;
      }
    }
  }
  id v9 = objc_msgSend(v22, sel_topViewController);
  if (!v9
    || (id v10 = v9,
        id v11 = v0,
        char v12 = sub_1C254FF70(),
        v11,
        v11,
        v10,
        (v12 & 1) == 0))
  {
    id v15 = objc_msgSend(v0, sel_presentingViewController);
    if (v15)
    {
      uint64_t v16 = v15;
      id v17 = objc_msgSend(v15, sel_presentedViewController);
      if (v17)
      {
        uint64_t v18 = v17;
        id v19 = v0;
        id v20 = v18;
        char v21 = sub_1C254FF70();

        if (v21) {
          objc_msgSend(v19, sel_dismissViewControllerAnimated_completion_, 1, 0);
        }
      }
    }
    goto LABEL_17;
  }
  id v13 = objc_msgSend(v22, sel_popViewControllerAnimated_, 1);

  id v14 = v13;
LABEL_18:
}

uint64_t sub_1C2430CA4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2430CBC(a1, a2, a3, (void (*)(id))sub_1C2430A30);
}

uint64_t sub_1C2430CBC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    sub_1C25501E0();
    id v7 = (id)swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  a4(v7);

  return sub_1C2433A14((uint64_t)v9, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C243461C);
}

id sub_1C2430D74(uint64_t a1, uint64_t a2, SEL *a3)
{
  sub_1C2433334(0, &qword_1EA2E0DB0, MEMORY[0x1E4FB0F00], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v29 - v6;
  uint64_t v8 = sub_1C254E690();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v29 - v13;
  MEMORY[0x1F4188790](v15);
  id v17 = (char *)&v29 - v16;
  swift_beginAccess();
  uint64_t v18 = (void *)MEMORY[0x1C875A200](a2 + 16);
  if (v18)
  {
    id v19 = v18;
    id v20 = objc_msgSend(v18, sel__bridgedConfigurationState);

    sub_1C254E680();
    char v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v21(v7, v14, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      v21(v17, v7, v8);
      char v22 = sub_1C254E640();
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v17, v8);
      if (v22)
      {
        id v23 = *(void (**)(char *, uint64_t))(v9 + 8);
        v23(v11, v8);
      }
      else
      {
        char v26 = sub_1C254E650();
        id v23 = *(void (**)(char *, uint64_t))(v9 + 8);
        v23(v11, v8);
        if ((v26 & 1) == 0)
        {
          id v27 = [self *a3];
          goto LABEL_12;
        }
      }
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
      id v27 = (id)sub_1C254FED0();
LABEL_12:
      id v28 = v27;
      v23(v17, v8);
      return v28;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  sub_1C2433A14((uint64_t)v7, (uint64_t)&qword_1EA2E0DB0, MEMORY[0x1E4FB0F00], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2433334);
  id v24 = objc_msgSend(self, sel_clearColor);
  return v24;
}

uint64_t sub_1C2431154(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = sub_1C254CD90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CD40();
  id v11 = a3;
  id v12 = a4;
  id v13 = a1;
  sub_1C243353C();

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1C2431268(void *a1)
{
  id v2 = (void *)sub_1C254CD30();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  unint64_t v3 = (void *)sub_1C254CD30();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_1C254E0D0();
    sub_1C254DCE0();
    sub_1C254D6D0();
    swift_release();
    sub_1C21F4424((uint64_t)v11, (uint64_t)v8);
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    sub_1C21FFE74(0, &qword_1EA2DE778);
    if (swift_dynamicCast())
    {
      uint64_t v5 = v6;
LABEL_6:
      sub_1C21F44EC(v5, (uint64_t)v10);
      __swift_project_boxed_opaque_existential_1Tm(v10, v10[3]);
      sub_1C254D8A0();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
      return;
    }
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1C220EF90((uint64_t)v6);
    *(void *)&v6[0] = v4;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE788);
    id v4 = v4;
    if (swift_dynamicCast())
    {
      uint64_t v5 = v8;
      goto LABEL_6;
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    sub_1C220EF90((uint64_t)v8);
  }
}

uint64_t sub_1C2431464(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C254CD90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CD40();
  id v9 = a3;
  id v10 = a1;
  sub_1C2431268(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C2431560(void *a1)
{
  sub_1C254E0D0();
  sub_1C254DCE0();
  sub_1C254D6D0();
  swift_release();
  id v2 = (void *)sub_1C254CD30();
  id v3 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v2);

  sub_1C21F44EC(&v11, (uint64_t)&v8);
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  sub_1C21FFE74(0, &qword_1EA2DE778);
  if (swift_dynamicCast())
  {

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
    return 1;
  }
  else
  {
    if (v3 && (v7[0] = v3, sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE788), swift_dynamicCast()))
    {
      uint64_t v5 = *((void *)&v9 + 1);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v10 = 0;
      long long v8 = 0u;
      long long v9 = 0u;
    }
    BOOL v4 = v5 != 0;
    sub_1C220EF90((uint64_t)&v8);
  }
  return v4;
}

uint64_t sub_1C24316D0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C254CD90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CD40();
  id v9 = a3;
  id v10 = a1;
  LOBYTE(a1) = sub_1C2431560(v9);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a1 & 1;
}

void sub_1C24317D4()
{
}

void sub_1C2431804(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C2431838()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

id sub_1C243192C()
{
  return sub_1C24332B8(0, type metadata accessor for ClinicalAccountDetailsViewController);
}

uint64_t sub_1C2431948(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1C2431A48()
{
  return type metadata accessor for ClinicalAccountDetailsViewController();
}

void sub_1C2431A50(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v56 = v6;
  uint64_t v57 = v7;
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v48 - v11;
  uint64_t v13 = sub_1C254E560();
  uint64_t v55 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void **)a1;
  id v17 = *(void **)(a1 + 8);
  uint64_t v18 = *(void **)(a1 + 16);
  swift_beginAccess();
  uint64_t v19 = MEMORY[0x1C875A200](a2 + 16);
  if (v19)
  {
    id v20 = (void *)v19;
    if (v16)
    {
      uint64_t v54 = v18;
      id v21 = v16;
      id v22 = v17;
      sub_1C254E510();
      id v23 = v21;
      id v24 = v22;
      id v25 = v23;
      id v52 = v24;
      char v26 = sub_1C254E550();
      os_log_type_t v27 = sub_1C254FA40();
      int v28 = v27;
      BOOL v29 = os_log_type_enabled(v26, v27);
      uint64_t v53 = v17;
      if (v29)
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v51 = swift_slowAlloc();
        uint64_t v58 = v51;
        id v59 = a3;
        *(_DWORD *)uint64_t v30 = 136446466;
        uint64_t v49 = v30 + 4;
        swift_getMetatypeMetadata();
        os_log_t v50 = v26;
        uint64_t v31 = sub_1C254F4F0();
        id v59 = (id)sub_1C21AD354(v31, v32, &v58);
        sub_1C2550120();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2050;
        id v33 = v16;
        LODWORD(v49) = v28;
        uint64_t v34 = v16;
        uint64_t v35 = v53;
        uint64_t v36 = v54;
        sub_1C220022C(v33, v53);
        id v59 = v36;
        sub_1C2550120();
        uint64_t v37 = v35;
        uint64_t v16 = v34;
        sub_1C220022C(v34, v37);
        char v26 = v50;
        _os_log_impl(&dword_1C21A1000, v50, (os_log_type_t)v49, "[%{public}s]: account state did change (changeType: %{public}ld)", (uint8_t *)v30, 0x16u);
        uint64_t v38 = v51;
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v38, -1, -1);
        MEMORY[0x1C875A0B0](v30, -1, -1);
      }
      else
      {
        sub_1C220022C(v16, v17);
        sub_1C220022C(v16, v17);
      }

      (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v13);
      uint64_t v39 = v56;
      id v40 = objc_msgSend(v52, sel_identifier);
      sub_1C254CB20();

      swift_retain();
      sub_1C254EA80();
      swift_release();
      id v41 = v59;
      id v42 = objc_msgSend(v59, sel_identifier);

      sub_1C254CB20();
      LOBYTE(v41) = sub_1C254CB10();
      uint64_t v43 = *(void (**)(char *, uint64_t))(v57 + 8);
      v43(v9, v39);
      v43(v12, v39);
      if ((v41 & 1) == 0)
      {

        sub_1C220022C(v16, v53);
        return;
      }
      id v44 = v53;
      if (v54 == (void *)3)
      {
        uint64_t v45 = v20;
        sub_1C2433B04(0, v45, v45);

        sub_1C220022C(v16, v44);
        return;
      }
      id v46 = v52;
      id v59 = v52;
      uint64_t v60 = v54;
      swift_retain();
      id v47 = v46;
      sub_1C254EA70();
      swift_release();
      sub_1C220022C(v16, v44);
    }
  }
}

void sub_1C2431F20()
{
  unint64_t v1 = (unint64_t)v0;
  sub_1C2433334(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  *(void *)&double v3 = MEMORY[0x1F4188790](v2 - 8).n128_u64[0];
  uint64_t ObjCClassFromMetadata = (char *)&v40 - v4;
  id v6 = objc_msgSend(v0, sel_navigationController, v3);
  if (!v6) {
    return;
  }
  id v41 = v6;
  id v7 = objc_msgSend(self, sel_mainBundle);
  id v8 = objc_msgSend(v7, sel_bundleIdentifier);

  if (!v8)
  {
    sub_1C254F470();
    goto LABEL_11;
  }
  uint64_t v9 = sub_1C254F470();
  uint64_t v11 = v10;

  uint64_t v12 = sub_1C254F470();
  if (!v11)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v9 == v12 && v11 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v15 = sub_1C2550870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
LABEL_12:
    memset(v42, 0, sizeof(v42));
    sub_1C2430A30();

    sub_1C2433A14((uint64_t)v42, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C243461C);
    return;
  }
LABEL_15:
  uint64_t v16 = &selRef_setActionTitle_;
  id v17 = objc_msgSend(v41, sel_viewControllers);
  sub_1C21AB51C(0, &qword_1EA2DE3F0);
  unint64_t v18 = sub_1C254F710();

  if (v18 >> 62) {
    goto LABEL_40;
  }
  uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    if (v19 == 1) {
      break;
    }
    id v26 = objc_msgSend(v41, sel_topViewController);
    if (!v26
      || (os_log_type_t v27 = v26,
          id v28 = (id)v1,
          char v29 = sub_1C254FF70(),
          v28,
          v28,
          v27,
          (v29 & 1) == 0))
    {
      id v38 = objc_msgSend((id)v1, sel_presentingViewController);

      if (v38) {
        objc_msgSend((id)v1, sel_dismissViewControllerAnimated_completion_, 1, 0);
      }
      goto LABEL_36;
    }
    id v30 = [v41 v16[161]];
    unint64_t v1 = sub_1C254F710();

    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (!v31)
      {
LABEL_31:
        swift_bridgeObjectRelease();
        id v37 = objc_msgSend(v41, sel_popViewControllerAnimated_, 1);
LABEL_35:

        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v31 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v31) {
        goto LABEL_31;
      }
    }
    type metadata accessor for MedicalRecordTimelineViewController();
    uint64_t ObjCClassFromMetadata = (char *)swift_getObjCClassFromMetadata();
    uint64_t v16 = (char **)(v1 & 0xC000000000000001);
    uint64_t v32 = 4;
    while (1)
    {
      id v33 = v16 ? (id)MEMORY[0x1C87588E0](v32 - 4, v1) : *(id *)(v1 + 8 * v32);
      uint64_t v34 = v33;
      uint64_t v35 = v32 - 3;
      if (__OFADD__(v32 - 4, 1)) {
        break;
      }
      unsigned __int8 v36 = objc_msgSend(v33, sel_isKindOfClass_, ObjCClassFromMetadata);

      if (v36)
      {
        swift_bridgeObjectRelease();
        id v37 = objc_msgSend(v41, sel_popToRootViewControllerAnimated_, 1);
        goto LABEL_35;
      }
      ++v32;
      if (v35 == v31) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v41, sel_dismissViewControllerAnimated_completion_, 1, 0);
  id v20 = objc_msgSend((id)v1, sel_traitCollection);
  id v21 = objc_msgSend(v20, sel_horizontalSizeClass);

  if (v21 == (id)2)
  {
    uint64_t v22 = sub_1C254F840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(ObjCClassFromMetadata, 1, 1, v22);
    sub_1C254F820();
    uint64_t v23 = sub_1C254F810();
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = MEMORY[0x1E4FBCFD8];
    *(void *)(v24 + 16) = v23;
    *(void *)(v24 + 24) = v25;
    sub_1C24D0A0C((uint64_t)ObjCClassFromMetadata, (uint64_t)&unk_1EA2E3728, v24);

    swift_release();
    return;
  }
LABEL_36:
  id v39 = v41;
}

void sub_1C24324A8(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = (uint64_t)v3;
  id v47 = a1;
  uint64_t v48 = a3;
  id v46 = a2;
  uint64_t v5 = sub_1C254F1C0();
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  MEMORY[0x1F4188790](v5);
  id v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254F200();
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C254F220();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t v17 = sub_1C254F230();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  id v20 = (uint64_t *)((char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *id v20 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FBCBF0], v17);
  char v21 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v18 + 8))(v20, v17);
  if (v21)
  {
    uint64_t v22 = qword_1EA2E3690;
    uint64_t v23 = *(void **)&v3[qword_1EA2E3690];
    if (v23)
    {
      if (!*(void *)&v3[qword_1EA2E3698]) {
        goto LABEL_8;
      }
      objc_msgSend(*(id *)&v3[qword_1EA2E3698], sel_timeIntervalSinceNow);
      double v25 = v24;
      if (v24 > 0.01)
      {
        uint64_t v39 = sub_1C254FC70();
        sub_1C254F210();
        MEMORY[0x1C8757760](v13, fmin(v25, 1.0));
        uint64_t v26 = v41;
        uint64_t v40 = *(void *)(v40 + 8);
        ((void (*)(char *, uint64_t))v40)(v13, v41);
        os_log_type_t v27 = (void *)swift_allocObject();
        id v28 = v46;
        char v29 = v47;
        v27[2] = v3;
        void v27[3] = v29;
        uint64_t v30 = v48;
        v27[4] = v28;
        void v27[5] = v30;
        aBlock[4] = sub_1C2433328;
        aBlock[5] = v27;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1C224E544;
        aBlock[3] = &block_descriptor_57;
        uint64_t v31 = _Block_copy(aBlock);
        uint64_t v32 = v3;
        id v33 = v29;
        swift_retain();
        swift_release();
        sub_1C254F1E0();
        aBlock[0] = MEMORY[0x1E4FBC860];
        sub_1C24339CC((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
        sub_1C2433334(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
        sub_1C21FFDEC();
        uint64_t v34 = v45;
        sub_1C2550200();
        uint64_t v35 = (void *)v39;
        MEMORY[0x1C8758120](v16, v10, v7, v31);
        _Block_release(v31);

        (*(void (**)(char *, uint64_t))(v44 + 8))(v7, v34);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v43);
        ((void (*)(char *, uint64_t))v40)(v16, v26);
LABEL_10:
        sub_1C2432EA0(v4);
        return;
      }
      uint64_t v23 = *(void **)&v3[v22];
      if (!v23)
      {
        unsigned __int8 v36 = 0;
      }
      else
      {
LABEL_8:
        objc_msgSend(v23, sel_removeFromSuperview);
        unsigned __int8 v36 = *(void **)&v3[v22];
      }
      id v37 = v47;
      id v38 = (void (*)(void *))v46;
      *(void *)&v3[v22] = 0;

      v38(v37);
      goto LABEL_10;
    }
    v46(v47);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1C2432A18()
{
  v0[2] = sub_1C254F820();
  v0[3] = sub_1C254F810();
  type metadata accessor for HealthRecordsViewRouter();
  unint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1C22415D0;
  return sub_1C24C5E98(0xD000000000000018, 0x80000001C2585E50);
}

void sub_1C2432AE0()
{
  if (*(void *)(*(void *)(v0 + qword_1EA2E36C0) + 80))
  {
    swift_retain();
    uint64_t v1 = sub_1C254D560();
    swift_release();
    uint64_t v2 = (void *)(v1 + qword_1EA2E0060);
    swift_beginAccess();
    uint64_t v3 = MEMORY[0x1E4FBC860];
    *uint64_t v2 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v1 + qword_1EA2E0070);
    swift_beginAccess();
    uint64_t v5 = *(void *)(v4 + 16);
    *(void *)(v4 + 16) = v3;
    swift_retain();
    sub_1C24F27D4(v5);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_1C2432BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C254F230();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *uint64_t v9 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  char v10 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9C8]), sel_initWithTimeIntervalSinceNow_, 1.0);
  uint64_t v12 = *(void **)&v3[qword_1EA2E3698];
  *(void *)&v3[qword_1EA2E3698] = v11;

  uint64_t v13 = qword_1EA2E3690;
  uint64_t v14 = *(void **)&v3[qword_1EA2E3690];
  if (v14) {
    objc_msgSend(v14, sel_removeFromSuperview);
  }
  id v15 = objc_allocWithZone((Class)type metadata accessor for HRProgressHUD());
  swift_unknownObjectWeakInit();
  uint64_t v16 = sub_1C2285DF8(0, 0);
  uint64_t v17 = *(void **)&v3[v13];
  *(void *)&v3[v13] = v16;

  uint64_t v18 = *(void **)&v3[v13];
  if (v18)
  {
    uint64_t v19 = v18;
    id v20 = objc_msgSend(v3, sel_view);
    if (v20)
    {
      char v21 = v20;
      objc_msgSend(v19, sel_setAutoresizingMask_, 45);
      uint64_t v22 = &v19[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_text];
      *(void *)uint64_t v22 = a1;
      *((void *)v22 + 1) = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void **)&v19[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressMessageLabel];
      if (*((void *)v22 + 1))
      {
        swift_bridgeObjectRetain();
        double v24 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
      }
      else
      {
        double v24 = 0;
      }
      objc_msgSend(v23, sel_setText_, v24);

      objc_msgSend(v19, sel_setNeedsLayout);
      objc_msgSend(v21, sel_addSubview_, v19);
      objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC15HealthRecordsUI11ProgressHUD_progressIndicator], sel_startAnimating);

      return;
    }
LABEL_12:
    __break(1u);
  }
}

void sub_1C2432EA0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + qword_1EA2E36E8);
  if (v1)
  {
    id v2 = v1;
    swift_retain();
    sub_1C254EA80();
    swift_release();
    unsigned int v3 = objc_msgSend(v4, sel_isSharingToProvider);

    objc_msgSend(v2, sel_setHidden_, v3 ^ 1);
  }
  swift_retain();
  sub_1C254EA80();
  swift_release();
  sub_1C2328410(v4);
}

void sub_1C2432F98(void *a1)
{
  id v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for HRProgressHUD();
  objc_msgSendSuper2(&v10, sel_willMoveToSuperview_, a1);
  id v4 = objc_msgSend(v2, sel_superview);
  uint64_t v5 = v4;
  if (a1)
  {
    if (v4)
    {
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
      id v6 = a1;
      char v7 = sub_1C254FF70();

      if (v7) {
        return;
      }
    }
  }
  else
  {
    if (!v4) {
      return;
    }
  }
  uint64_t v8 = (void *)MEMORY[0x1C875A200](&v2[OBJC_IVAR____TtC15HealthRecordsUI13HRProgressHUD_interactionDisabledWindow]);
  if (v8)
  {
    uint64_t v9 = v8;
    objc_msgSend(v8, sel_setUserInteractionEnabled_, 1);
  }
  swift_unknownObjectWeakAssign();
}

id sub_1C2433110()
{
  id v1 = objc_msgSend(v0, sel_superview);

  if (v1)
  {
    id v2 = objc_msgSend(v0, sel_superview);
    id v3 = objc_msgSend(v2, sel_window);

    id v4 = &v0[OBJC_IVAR____TtC15HealthRecordsUI13HRProgressHUD_interactionDisabledWindow];
    swift_unknownObjectWeakAssign();

    uint64_t v5 = (void *)MEMORY[0x1C875A200](v4);
    if (v5)
    {
      id v6 = v5;
      objc_msgSend(v5, sel_setUserInteractionEnabled_, 0);
    }
  }
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for HRProgressHUD();
  return objc_msgSendSuper2(&v8, sel_didMoveToSuperview);
}

uint64_t sub_1C2433290()
{
  return swift_unknownObjectWeakDestroy();
}

id sub_1C24332A0(uint64_t a1)
{
  return sub_1C24332B8(a1, type metadata accessor for HRProgressHUD);
}

id sub_1C24332B8(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t type metadata accessor for HRProgressHUD()
{
  return self;
}

uint64_t block_destroy_helper_53()
{
  return swift_release();
}

void sub_1C2433334(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2433398()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C24333D0()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = sub_1C222399C;
  return sub_1C2432A18();
}

void sub_1C243347C()
{
  *(void *)&v0[qword_1EA2E3690] = 0;
  *(void *)&v0[qword_1EA2E3698] = 0;
  *(void *)&v0[qword_1EA2E36D8] = 0;
  *(void *)&v0[qword_1EA2E36E0] = 0;
  *(void *)&v0[qword_1EA2E36E8] = 0;
  *(void *)&v0[qword_1EA2E36F0] = 0;
  v0[qword_1EA2E36F8] = 0;
  *(void *)&v0[qword_1EA2E3700] = 0;

  sub_1C25505F0();
  __break(1u);
}

uint64_t sub_1C243353C()
{
  uint64_t v1 = v0;
  id v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2433334(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v17 - v4;
  sub_1C2433334(0, &qword_1EA2E3730, MEMORY[0x1E4FB1040], v2);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_1C254E710();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  if (swift_dynamicCastClass() || (sub_1C254D4E0(), (uint64_t result = swift_dynamicCastClass()) != 0))
  {
    sub_1C254E700();
    id v14 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
    sub_1C254E6C0();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1C254E8D0();
    uint64_t v15 = sub_1C254E8C0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 0, 1, v15);
    sub_1C254E6E0();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v5, v12, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    MEMORY[0x1C8758250](v5);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  if (*(unsigned char *)(v1 + qword_1EA2E36C8) == 1)
  {
    type metadata accessor for AccountSourceCell();
    uint64_t result = swift_dynamicCastClass();
    if (!result)
    {
      sub_1C254E700();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_1C254E8D0();
      uint64_t v16 = sub_1C254E8C0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 0, 1, v16);
      sub_1C254E6E0();
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v5, v12, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
      MEMORY[0x1C8758250](v5);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  return result;
}

uint64_t sub_1C243394C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C2433984(uint64_t a1)
{
  return sub_1C2430D74(a1, v1, (SEL *)&selRef_systemGroupedBackgroundColor);
}

id sub_1C24339A8(uint64_t a1)
{
  return sub_1C2430D74(a1, v1, (SEL *)&selRef_secondarySystemGroupedBackgroundColor);
}

uint64_t sub_1C24339CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2433A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C2433A74()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C2433AAC(uint64_t a1)
{
  sub_1C2431A50(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1C2433AB4(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C243417C(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2433B04(void *a1, char *a2, void *a3)
{
  uint64_t v35 = a1;
  uint64_t v5 = sub_1C254F1C0();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v39 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1C254F200();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  id v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1C254F220();
  uint64_t v36 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = sub_1C254F230();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  a3;
  *uint64_t v16 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCBF0], v13);
  char v18 = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if (v18)
  {
    uint64_t v20 = qword_1EA2E3690;
    char v21 = *(void **)&a2[qword_1EA2E3690];
    if (v21)
    {
      if (!*(void *)&a2[qword_1EA2E3698]) {
        goto LABEL_7;
      }
      objc_msgSend(*(id *)&a2[qword_1EA2E3698], sel_timeIntervalSinceNow);
      double v23 = v22;
      if (v22 > 0.01)
      {
        uint64_t v34 = sub_1C254FC70();
        sub_1C254F210();
        MEMORY[0x1C8757760](v9, fmin(v23, 1.0));
        uint64_t v36 = *(void *)(v36 + 8);
        ((void (*)(char *, uint64_t))v36)(v9, v43);
        double v24 = (void *)swift_allocObject();
        uint64_t v25 = v35;
        void v24[2] = a2;
        v24[3] = v25;
        v24[4] = sub_1C24340E0;
        v24[5] = v17;
        aBlock[4] = sub_1C2433328;
        aBlock[5] = v24;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1C224E544;
        aBlock[3] = &block_descriptor_38_1;
        uint64_t v26 = _Block_copy(aBlock);
        os_log_type_t v27 = a2;
        id v28 = v25;
        swift_retain();
        swift_release();
        char v29 = v37;
        sub_1C254F1E0();
        aBlock[0] = MEMORY[0x1E4FBC860];
        sub_1C24339CC((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
        sub_1C2433334(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
        sub_1C21FFDEC();
        uint64_t v30 = v39;
        uint64_t v31 = v42;
        sub_1C2550200();
        uint64_t v32 = (void *)v34;
        MEMORY[0x1C8758120](v12, v29, v30, v26);
        _Block_release(v26);

        (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v31);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v40);
        ((void (*)(char *, uint64_t))v36)(v12, v43);
LABEL_10:
        sub_1C2432EA0((uint64_t)a2);
        return swift_release();
      }
      char v21 = *(void **)&a2[v20];
      if (!v21)
      {
        id v33 = 0;
      }
      else
      {
LABEL_7:
        objc_msgSend(v21, sel_removeFromSuperview);
        id v33 = *(void **)&a2[v20];
      }
      *(void *)&a2[v20] = 0;
    }
    sub_1C2431F20();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C24340A8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C24340E0()
{
}

uint64_t objectdestroyTm_11()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C2434150()
{
  sub_1C24324A8(*(void **)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

void sub_1C243417C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    a4();
    sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
    unint64_t v6 = sub_1C254E9B0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C2434258()
{
  if (!qword_1EA2E3770)
  {
    sub_1C24342C0();
    unint64_t v0 = sub_1C254EA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3770);
    }
  }
}

void sub_1C24342C0()
{
  if (!qword_1EA2E3778)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EA2E1530);
    type metadata accessor for HKClinicalAccountStateChangeType(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E3778);
    }
  }
}

uint64_t sub_1C2434340()
{
  return sub_1C24339CC(&qword_1EA2E3780, (void (*)(uint64_t))sub_1C2434258);
}

void sub_1C2434374()
{
  if (!qword_1EA2E3788)
  {
    sub_1C243417C(255, &qword_1EA2E3768, (void (*)(uint64_t))sub_1C2434258, (void (*)(void))sub_1C2434340);
    sub_1C21AB51C(255, &qword_1EA2E3790);
    sub_1C2433AB4(&qword_1EA2E3798, &qword_1EA2E3768, (void (*)(uint64_t))sub_1C2434258, (void (*)(void))sub_1C2434340);
    sub_1C22000E8(&qword_1EA2E37A0, &qword_1EA2E3790);
    unint64_t v0 = sub_1C254E960();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E3788);
    }
  }
}

uint64_t sub_1C243449C(uint64_t a1)
{
  return sub_1C242EF00(a1, v1);
}

void sub_1C24344A4(void **a1)
{
  sub_1C242F3FC(a1, v1);
}

void sub_1C24344AC()
{
  if (!qword_1EA2E37B8)
  {
    sub_1C243461C(255, &qword_1EA2E37B0, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC60]);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    sub_1C24345A0();
    sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
    unint64_t v0 = sub_1C254E9B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E37B8);
    }
  }
}

unint64_t sub_1C24345A0()
{
  unint64_t result = qword_1EA2E37C0;
  if (!qword_1EA2E37C0)
  {
    sub_1C243461C(255, &qword_1EA2E37B0, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC60]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E37C0);
  }
  return result;
}

void sub_1C243461C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C2434668(char *a1)
{
  sub_1C242F3A0(a1, v1);
}

id WeakNotificationObserver.__allocating_init(forName:object:scheduler:center:block:)(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = *(void *)(a3 + 24);
  uint64_t v14 = *(void *)(a3 + 32);
  uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1(a3, v13);
  id v16 = sub_1C2434EEC(a1, a2, v15, a4, a5, a6, v6, v13, v14);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  return v16;
}

id WeakNotificationObserver.init(forName:object:scheduler:center:block:)(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = *(void *)(a3 + 24);
  uint64_t v15 = *(void *)(a3 + 32);
  uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1(a3, v14);
  __n128 v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v20 + 16))(v19, v17);
  id v21 = sub_1C2434C94(a1, a2, (uint64_t)v19, a4, a5, a6, v7, v14, v15);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  return v21;
}

id WeakNotificationObserver.__deallocating_deinit()
{
  uint64_t v1 = (void *)MEMORY[0x1C875A200](&v0[OBJC_IVAR____TtC15HealthRecordsUI24WeakNotificationObserver_center]);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_removeObserver_, v0);
  }
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for WeakNotificationObserver();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_1C24349B0()
{
  uint64_t v1 = (void *)MEMORY[0x1C875A200](v0 + OBJC_IVAR____TtC15HealthRecordsUI24WeakNotificationObserver_center);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_removeObserver_, v0);
  }
}

id WeakNotificationObserver.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void WeakNotificationObserver.init()()
{
}

id sub_1C2434C94(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char *a7, uint64_t a8, uint64_t a9)
{
  v36[3] = a8;
  _OWORD v36[4] = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v36);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(boxed_opaque_existential_1, a3, a8);
  swift_unknownObjectWeakInit();
  sub_1C21F4424((uint64_t)v36, (uint64_t)&a7[OBJC_IVAR____TtC15HealthRecordsUI24WeakNotificationObserver_scheduler]);
  uint64_t v18 = &a7[OBJC_IVAR____TtC15HealthRecordsUI24WeakNotificationObserver_block];
  *(void *)uint64_t v18 = a5;
  *((void *)v18 + 1) = a6;
  swift_unknownObjectWeakAssign();
  v35.receiver = a7;
  v35.super_class = (Class)type metadata accessor for WeakNotificationObserver();
  swift_retain();
  id v19 = objc_msgSendSuper2(&v35, sel_init);
  sub_1C224E4C4(a2, (uint64_t)v33);
  uint64_t v20 = v34;
  if (v34)
  {
    id v21 = __swift_project_boxed_opaque_existential_1Tm(v33, v34);
    uint64_t v22 = *(void *)(v20 - 8);
    __n128 v23 = MEMORY[0x1F4188790](v21);
    uint64_t v25 = (char *)&v33[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v22 + 16))(v25, v23);
    id v26 = v19;
    id v27 = a1;
    uint64_t v28 = sub_1C2550860();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v20);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
  }
  else
  {
    id v29 = v19;
    id v30 = a1;
    uint64_t v28 = 0;
  }
  objc_msgSend(a4, sel_addObserver_selector_name_object_, v19, sel_didReceiveWithNotification_, a1, v28);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v36);
  sub_1C224E3A4(a2);
  return v19;
}

id sub_1C2434EEC(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v21 = a6;
  uint64_t v15 = *(void *)(a8 - 8);
  MEMORY[0x1F4188790](a1);
  __n128 v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (char *)objc_allocWithZone((Class)type metadata accessor for WeakNotificationObserver());
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a3, a8);
  return sub_1C2434C94(a1, a2, (uint64_t)v17, a4, a5, v21, v18, a8, a9);
}

uint64_t type metadata accessor for WeakNotificationObserver()
{
  return self;
}

uint64_t method lookup function for WeakNotificationObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WeakNotificationObserver);
}

uint64_t dispatch thunk of WeakNotificationObserver.__allocating_init(forName:object:scheduler:center:block:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of WeakNotificationObserver.invalidate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t sub_1C2435094()
{
  uint64_t v1 = sub_1C254C580();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C2435160()
{
  uint64_t v1 = *(void *)(sub_1C254C580() - 8);
  return (*(uint64_t (**)(unint64_t))(v0 + 16))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

id static UIAlertController.basicAlertController(title:message:)()
{
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v1 = (void *)sub_1C254F430();
  uint64_t v2 = (void *)sub_1C254F430();
  id v3 = objc_msgSend(ObjCClassFromMetadata, sel_basicAlertControllerWithTitle_message_internalError_, v1, v2, 0);

  return v3;
}

id sub_1C2435264(void *a1)
{
  sub_1C254F470();
  sub_1C254F470();
  uint64_t v2 = (void *)sub_1C254F430();
  id v3 = (void *)sub_1C254F430();
  id v4 = objc_msgSend(a1, sel_basicAlertControllerWithTitle_message_internalError_, v2, v3, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v4;
}

id sub_1C2435330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a3)
  {
    uint64_t v6 = sub_1C254F470();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v9 = sub_1C254F470();
  uint64_t v11 = v10;
  id v12 = a5;
  id v13 = _sSo17UIAlertControllerC15HealthRecordsUIE010basicAlertB05title7message13internalErrorABSSSg_SSs0K0_pSgtFZ_0(v6, v8, v9, v11, a5);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v13;
}

id _sSo17UIAlertControllerC15HealthRecordsUIE010basicAlertB05title7message13internalErrorABSSSg_SSs0K0_pSgtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (!a5)
  {
    swift_bridgeObjectRetain();
    if (a2) {
      goto LABEL_7;
    }
LABEL_9:
    id v12 = 0;
    goto LABEL_10;
  }
  uint64_t v7 = self;
  swift_bridgeObjectRetain();
  id v8 = a5;
  id result = objc_msgSend(v7, sel_sharedBehavior);
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v10 = result;
  unsigned int v11 = objc_msgSend(result, sel_isAppleInternalInstall);

  if (!v11)
  {

    if (a2) {
      goto LABEL_7;
    }
    goto LABEL_9;
  }
  sub_1C254F5A0();
  swift_getErrorValue();
  sub_1C2550940();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();

  if (!a2) {
    goto LABEL_9;
  }
LABEL_7:
  swift_bridgeObjectRetain();
  id v12 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
LABEL_10:
  id v13 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v12, v13, 1);

  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v15 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v16 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v16, 0, 0, 0xE000000000000000);

  objc_msgSend(v14, sel_addAction_, v17);
  return v14;
}

Swift::Int __swiftcall SettingsViewController.numberOfSections(in:)(UITableView *in)
{
  unint64_t v1 = swift_bridgeObjectRetain();
  int64_t v2 = sub_1C22E6C84(v1);
  swift_bridgeObjectRelease();
  Swift::Int v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRelease();
  return v3;
}

Swift::Int __swiftcall SettingsViewController.tableView(_:numberOfRowsInSection:)(UITableView *_, Swift::Int numberOfRowsInSection)
{
  return sub_1C2437570(numberOfRowsInSection);
}

Swift::String_optional __swiftcall SettingsViewController.tableView(_:titleForHeaderInSection:)(UITableView *_, Swift::Int titleForHeaderInSection)
{
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts;
  unint64_t v6 = swift_bridgeObjectRetain();
  int64_t v7 = sub_1C22E6C84(v6);
  swift_bridgeObjectRelease();
  if (titleForHeaderInSection < 0 || *(void *)(v7 + 16) <= titleForHeaderInSection)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    id v9 = 0;
    goto LABEL_10;
  }
  int v8 = *(unsigned __int8 *)(v7 + titleForHeaderInSection + 32);
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v2, sel_tableView_numberOfRowsInSection_, _, titleForHeaderInSection);
  if (!v9)
  {
LABEL_10:
    unsigned int v11 = 0;
    goto LABEL_13;
  }
  if (!v8)
  {
    unint64_t v10 = *(void *)&v2[v5];
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_7;
      }
    }
    else if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_7;
    }
    goto LABEL_9;
  }
LABEL_7:
  id v9 = (id)sub_1C22E684C(v8);
LABEL_13:
  result.value._object = v11;
  result.value._countAndFlagsBits = (uint64_t)v9;
  return result;
}

Swift::String_optional __swiftcall SettingsViewController.tableView(_:titleForFooterInSection:)(UITableView *_, Swift::Int titleForFooterInSection)
{
  uint64_t v2 = sub_1C2437834(titleForFooterInSection);
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

void SettingsViewController.tableView(_:cellForRowAt:)(id a1, id a2)
{
  Swift::Int v3 = v2;
  unint64_t v6 = swift_bridgeObjectRetain();
  int64_t v7 = sub_1C22E6C84(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_1C254CD80();
  if (v8 < 0 || v8 >= *(void *)(v7 + 16))
  {
    swift_bridgeObjectRelease();
    unint64_t v10 = (void *)sub_1C254F430();
    id v11 = (id)HKErrorTableViewCell();

    if (!v11)
    {
      __break(1u);
LABEL_52:
      __break(1u);
      JUMPOUT(0x1C24362F8);
    }
  }
  else
  {
    uint64_t v9 = *(unsigned __int8 *)(v7 + v8 + 32);
    swift_bridgeObjectRelease();
    switch(v9)
    {
      case 1:
        uint64_t v12 = (void *)sub_1C254F430();
        id v13 = (void *)sub_1C254CD30();
        id v14 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v12, v13);

        id v15 = objc_msgSend(v14, sel_textLabel);
        if (v15)
        {
          uint64_t v16 = v15;
          if (qword_1EBB6EF40 != -1) {
            swift_once();
          }
          id v17 = (id)qword_1EBB6FBC8;
          swift_bridgeObjectRetain();
          sub_1C254C730();
          swift_bridgeObjectRelease();

          uint64_t v18 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
          objc_msgSend(v16, sel_setText_, v18, 0xE000000000000000);
        }
        id v19 = objc_msgSend(v14, sel_textLabel);
        if (v19)
        {
          uint64_t v20 = v19;
          id v21 = objc_msgSend(self, sel_systemBlueColor);
          objc_msgSend(v20, sel_setTextColor_, v21);
        }
        id v22 = objc_msgSend(v14, sel_textLabel);
        if (v22)
        {
          __n128 v23 = v22;
          objc_msgSend(v22, sel_setTextAlignment_, 1);
        }
        id v24 = objc_msgSend(v14, sel_textLabel);
        if (v24)
        {
          uint64_t v25 = v24;
          objc_msgSend(v24, sel_setNumberOfLines_, 0);
        }
        objc_msgSend(v14, sel_setAccessoryType_, 0);
        a1 = v14;
        Swift::Int v3 = (char *)sub_1C254F700();
        a2 = (id)HKUIJoinStringsForAutomationIdentifier();

        if (a2) {
          goto LABEL_47;
        }
        __break(1u);
LABEL_21:
        unint64_t v26 = *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_appSourceModels];
        swift_bridgeObjectRetain();
        uint64_t v27 = (uint64_t)a2;
        unint64_t v28 = v26;
        char v29 = 1;
LABEL_23:
        sub_1C2436ADC(v27, v28, v29);
        swift_bridgeObjectRelease();
        return;
      case 2:
        goto LABEL_21;
      case 3:
        unint64_t v30 = *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_researchStudySourceModels];
        swift_bridgeObjectRetain();
        uint64_t v27 = (uint64_t)a2;
        unint64_t v28 = v30;
        char v29 = 0;
        goto LABEL_23;
      case 4:
        uint64_t v31 = (void *)sub_1C254F430();
        uint64_t v32 = (void *)sub_1C254CD30();
        id v33 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v31, v32);

        id v34 = objc_msgSend(v33, sel_textLabel);
        if (v34)
        {
          objc_super v35 = v34;
          if (qword_1EBB6EF40 != -1) {
            swift_once();
          }
          id v36 = (id)qword_1EBB6FBC8;
          swift_bridgeObjectRetain();
          sub_1C254C730();
          swift_bridgeObjectRelease();

          id v37 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
          objc_msgSend(v35, sel_setText_, v37, 0xE000000000000000);
        }
        id v38 = objc_msgSend(v33, sel_textLabel);
        if (v38)
        {
          uint64_t v39 = v38;
          id v40 = objc_msgSend(self, sel_labelColor);
          objc_msgSend(v39, sel_setTextColor_, v40);
        }
        id v41 = objc_msgSend(v33, sel_textLabel);
        if (v41)
        {
          uint64_t v42 = v41;
          objc_msgSend(v41, sel_setTextAlignment_, 4);
        }
        objc_msgSend(v33, sel_setAccessoryType_, 1);
        a1 = v33;
        uint64_t v43 = (void *)sub_1C254F700();
        a2 = (id)HKUIJoinStringsForAutomationIdentifier();

        if (a2) {
          goto LABEL_47;
        }
        __break(1u);
LABEL_34:
        uint64_t v44 = (void *)sub_1C254F430();
        uint64_t v45 = (void *)sub_1C254CD30();
        id v46 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v44, v45);

        id v47 = objc_msgSend(v46, sel_textLabel);
        if (v47)
        {
          uint64_t v48 = v47;
          if (qword_1EBB6EF40 != -1) {
            swift_once();
          }
          id v49 = (id)qword_1EBB6FBC8;
          swift_bridgeObjectRetain();
          sub_1C254C730();
          swift_bridgeObjectRelease();

          os_log_t v50 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
          objc_msgSend(v48, sel_setText_, v50, 0xE000000000000000);
        }
        id v51 = objc_msgSend(v46, sel_textLabel);
        if (v51)
        {
          id v52 = v51;
          id v53 = objc_msgSend(self, sel_systemBlueColor);
          objc_msgSend(v52, sel_setTextColor_, v53);
        }
        id v54 = objc_msgSend(v46, sel_textLabel);
        if (v54)
        {
          uint64_t v55 = v54;
          objc_msgSend(v54, sel_setTextAlignment_, 1);
        }
        id v56 = objc_msgSend(v46, sel_textLabel);
        if (v56)
        {
          uint64_t v57 = v56;
          objc_msgSend(v56, sel_setNumberOfLines_, 0);
        }
        id v58 = objc_msgSend(v46, sel_textLabel);
        if (v58)
        {
          id v59 = v58;
          objc_msgSend(v58, sel_setLineBreakMode_, 0);
        }
        objc_msgSend(v46, sel_setAccessoryType_, 0);
        a1 = v46;
        uint64_t v60 = (void *)sub_1C254F700();
        a2 = (id)HKUIJoinStringsForAutomationIdentifier();

        if (!a2) {
          goto LABEL_52;
        }
LABEL_47:
        sub_1C254F470();

        uint64_t v61 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        objc_msgSend(a1, sel_setAccessibilityIdentifier_, v61);

        break;
      case 5:
        goto LABEL_34;
      case 6:
        sub_1C24378C0(a1);
        return;
      default:
        sub_1C2436314();
        return;
    }
  }
}

void sub_1C2436314()
{
  unint64_t v1 = v0;
  if (v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts] == 1)
  {
    id v2 = objc_msgSend(v0, sel_tableView);
    if (v2)
    {
      Swift::Int v3 = v2;
      id v4 = (void *)sub_1C254F430();
      uint64_t v5 = (void *)sub_1C254CD30();
      objc_msgSend(v3, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v4, v5);

      return;
    }
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts;
  unint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts];
  if (!(v7 >> 62))
  {
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
LABEL_22:
    id v29 = objc_msgSend(v1, sel_tableView);
    if (!v29)
    {
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    unint64_t v30 = v29;
    uint64_t v31 = (void *)sub_1C254F430();
    id v32 = objc_msgSend(v30, sel_dequeueReusableCellWithIdentifier_, v31);

    if (v32)
    {
      type metadata accessor for OnboardingTableViewCell(0);
      if (swift_dynamicCastClass()) {
        return;
      }
    }
    id v33 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile];
    id v34 = (objc_class *)type metadata accessor for OnboardingTableViewCell(0);
    objc_super v35 = (char *)objc_allocWithZone(v34);
    *(void *)&v35[qword_1EA2E4D78] = v33;
    id v36 = &v35[qword_1EA2E4D80];
    *(void *)id v36 = 0;
    *((void *)v36 + 1) = 0;
    id v37 = v33;
    id v38 = (void *)sub_1C254F430();
    v63.receiver = v35;
    v63.super_class = v34;
    id v39 = objc_msgSendSuper2(&v63, sel_initWithStyle_reuseIdentifier_, 0, v38);

    id v40 = v39;
    sub_1C251B5C0();

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v28) {
    goto LABEL_22;
  }
LABEL_6:
  uint64_t v8 = sub_1C254CD60();
  uint64_t v9 = v8;
  unint64_t v10 = *(void *)&v1[v6];
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v9 != v41)
    {
LABEL_28:
      id v42 = objc_msgSend(v1, sel_tableView);
      if (!v42)
      {
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      uint64_t v43 = v42;
      id v44 = (id)sub_1C254F430();
      uint64_t v45 = (void *)sub_1C254CD30();
      id v46 = objc_msgSend(v43, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v44, v45);

      type metadata accessor for AccountTableViewCell();
      uint64_t v47 = swift_dynamicCastClass();
      if (!v47)
      {

        id v51 = (void *)sub_1C254F430();
        id v52 = (id)HKErrorTableViewCell();

        if (v52) {
          return;
        }
        __break(1u);
        goto LABEL_38;
      }
      id v15 = (id)v47;
      unint64_t v48 = sub_1C254CD60();
      unint64_t v49 = v48;
      uint64_t v17 = *(void *)&v1[v6];
      if ((v17 & 0xC000000000000001) == 0)
      {
        if ((v48 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v48 < *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v44 = *(id *)(v17 + 8 * v48 + 32);
          goto LABEL_34;
        }
        __break(1u);
        goto LABEL_45;
      }
      swift_bridgeObjectRetain();
      id v44 = (id)MEMORY[0x1C87588E0](v49, v17);
      swift_bridgeObjectRelease();
LABEL_34:
      if (*(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accountsDisambiguator])
      {
        swift_retain();
        id v50 = sub_1C23FB10C(v44);
        swift_release();
LABEL_39:
        id v53 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_profile], sel_clinicalSourcesDataProvider);
        strcpy((char *)v65, "AccountCell.");
        BYTE5(v65[1]) = 0;
        HIWORD(v65[1]) = -5120;
        uint64_t v64 = sub_1C254CD60();
        sub_1C2550810();
        sub_1C254F5A0();
        swift_bridgeObjectRelease();
        uint64_t v55 = v65[0];
        uint64_t v54 = v65[1];
        sub_1C2201F2C();
        uint64_t v56 = swift_allocObject();
        *(_OWORD *)(v56 + 16) = xmmword_1C255CDA0;
        *(void *)(v56 + 32) = 0xD000000000000015;
        *(void *)(v56 + 40) = 0x80000001C2573FB0;
        *(void *)(v56 + 48) = v55;
        *(void *)(v56 + 56) = v54;
        swift_bridgeObjectRetain();
        uint64_t v57 = (void *)sub_1C254F700();
        swift_bridgeObjectRelease();
        id v58 = (id)HKUIJoinStringsForAutomationIdentifier();

        if (!v58)
        {
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        uint64_t v59 = sub_1C254F470();
        uint64_t v61 = v60;
        swift_bridgeObjectRelease();

        sub_1C23DD224(v44, v50, (uint64_t)v53, v59, v61, 0);
        swift_bridgeObjectRelease();

        return;
      }
LABEL_38:
      id v50 = 0;
      goto LABEL_39;
    }
  }
  else if (v8 != *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_28;
  }
  if ((sub_1C22AE9BC() & 1) == 0) {
    goto LABEL_28;
  }
  id v11 = objc_msgSend(v1, sel_tableView);
  if (!v11)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    return;
  }
  uint64_t v12 = v11;
  id v13 = (void *)sub_1C254F430();
  id v14 = (void *)sub_1C254CD30();
  id v15 = objc_msgSend(v12, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v13, v14);

  type metadata accessor for AddAccountTableViewCell();
  uint64_t v16 = swift_dynamicCastClass();
  if (v16)
  {
    uint64_t v17 = v16;
    unint64_t v18 = *(void *)&v1[v6];
    if (!(v18 >> 62))
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v20 = v15;
      goto LABEL_13;
    }
LABEL_45:
    id v62 = v15;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C2550620();
    swift_bridgeObjectRelease();
LABEL_13:
    *(unsigned char *)(v17 + OBJC_IVAR____TtC15HealthRecordsUI23AddAccountTableViewCell_alignWithAccountTitle) = v19 != 0;
    id v21 = objc_msgSend((id)v17, sel_imageView);
    id v22 = v21;
    if (v19)
    {
      if (!v21) {
        goto LABEL_19;
      }
      id v23 = objc_msgSend(self, sel_hk_transparentInterfaceImageWithSize_, 36.0, 36.0);
      objc_msgSend(v22, sel_setImage_, v23);

      id v22 = v23;
    }
    else
    {
      if (!v21) {
        goto LABEL_19;
      }
      objc_msgSend(v21, sel_setImage_, 0);
    }

LABEL_19:
    id v24 = v15;
    uint64_t v25 = (void *)sub_1C254F700();
    id v26 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v26)
    {
      sub_1C254F470();

      uint64_t v27 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend((id)v17, sel_setAccessibilityIdentifier_, v27);

      return;
    }
    goto LABEL_51;
  }
}

void sub_1C2436ADC(uint64_t a1, unint64_t a2, char a3)
{
  if (objc_msgSend(self, sel_isMainThread))
  {
    if (*(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken])
    {
      id v6 = objc_msgSend(v3, sel_tableView);
      if (v6)
      {
        unint64_t v7 = v6;
        uint64_t v8 = (void *)sub_1C254F430();
        uint64_t v9 = (void *)sub_1C254CD30();
        objc_msgSend(v7, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v8, v9);

        return;
      }
      goto LABEL_29;
    }
    if (!(a2 >> 62))
    {
      uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_7;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C2550620();
  swift_bridgeObjectRelease();
LABEL_7:
  id v11 = objc_msgSend(v3, sel_tableView);
  uint64_t v12 = v11;
  if (v10)
  {
    if (!v11)
    {
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    id v13 = (void *)sub_1C254F430();
    id v14 = (void *)sub_1C254CD30();
    id v15 = objc_msgSend(v12, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v13, v14);

    type metadata accessor for SourceTableViewCell();
    uint64_t v16 = swift_dynamicCastClass();
    if (v16)
    {
      uint64_t v17 = (char *)v16;
      unint64_t v18 = sub_1C254CD60();
      if ((a2 & 0xC000000000000001) == 0)
      {
        if ((v18 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v18 < *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v19 = *(id *)(a2 + 8 * v18 + 32);
          goto LABEL_14;
        }
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      id v19 = (id)MEMORY[0x1C87588E0](v18, a2);
LABEL_14:
      id v20 = *(void **)&v17[OBJC_IVAR___HRSourceTableViewCell_sourceModel];
      *(void *)&v17[OBJC_IVAR___HRSourceTableViewCell_sourceModel] = v19;
      id v21 = v19;
      sub_1C24A8374(v20);

      id v22 = v15;
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      sub_1C254F5A0();
      sub_1C254CD60();
      sub_1C2550810();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      sub_1C2201F2C();
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1C255CDA0;
      *(void *)(v23 + 32) = 0xD000000000000015;
      *(void *)(v23 + 40) = 0x80000001C2573FB0;
      *(void *)(v23 + 48) = 0;
      *(void *)(v23 + 56) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      id v24 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v25 = (id)HKUIJoinStringsForAutomationIdentifier();

      if (v25)
      {
        sub_1C254F470();
        swift_bridgeObjectRelease();

        id v26 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_setAccessibilityIdentifier_, v26);

        return;
      }
      goto LABEL_31;
    }

    id v36 = (void *)sub_1C254F430();
    id v37 = (id)HKErrorTableViewCell();

    if (!v37) {
LABEL_33:
    }
      __break(1u);
  }
  else
  {
    if (!v11)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v27 = (void *)sub_1C254F430();
    uint64_t v28 = (void *)sub_1C254CD30();
    id v29 = objc_msgSend(v12, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v27, v28);

    id v30 = objc_msgSend(v29, sel_textLabel);
    if (v30)
    {
      uint64_t v31 = v30;
      sub_1C22F9FFC(0x5F535050415F4F4ELL, 0xEF574F48535F4F54, a3 & 1, MEMORY[0x1E4FBC860]);
      id v32 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v31, sel_setText_, v32);
    }
    id v33 = objc_msgSend(v29, sel_textLabel);
    if (v33)
    {
      id v34 = v33;
      id v35 = objc_msgSend(self, sel_secondaryLabelColor);
      objc_msgSend(v34, sel_setTextColor_, v35);
    }
    objc_msgSend(v29, sel_setAccessoryType_, 0);
  }
}

char *SettingsViewController.tableView(_:willDisplay:forRowAt:)(uint64_t a1, void *a2)
{
  sub_1C254D4D0();
  if (swift_dynamicCastClass())
  {
    id v4 = a2;
    id v5 = v2;
    sub_1C254D4B0();
  }
  type metadata accessor for LoadingTableViewCell();
  Swift::String_optional result = (char *)swift_dynamicCastClass();
  if (result)
  {
    unint64_t v7 = *(void **)&result[OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_spinner];
    return (char *)objc_msgSend(v7, sel_startAnimating);
  }
  return result;
}

char *SettingsViewController.tableView(_:didEndDisplaying:forRowAt:)(uint64_t a1, void *a2)
{
  sub_1C254D4D0();
  if (swift_dynamicCastClass())
  {
    id v3 = a2;
    sub_1C254D4B0();
  }
  type metadata accessor for LoadingTableViewCell();
  Swift::String_optional result = (char *)swift_dynamicCastClass();
  if (result)
  {
    id v5 = *(void **)&result[OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_spinner];
    return (char *)objc_msgSend(v5, sel_stopAnimating);
  }
  return result;
}

uint64_t sub_1C2437570(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_accounts;
  unint64_t v4 = swift_bridgeObjectRetain();
  int64_t v5 = sub_1C22E6C84(v4);
  swift_bridgeObjectRelease();
  if (a1 < 0 || *(void *)(v5 + 16) <= a1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    uint64_t v6 = *(unsigned __int8 *)(v5 + a1 + 32);
    swift_bridgeObjectRelease();
    unint64_t v7 = (unint64_t)sub_1C22AE9BC() & 1;
    uint64_t result = 1;
    switch(v6)
    {
      case 1:
      case 4:
      case 5:
        return result;
      case 2:
        if (!objc_msgSend(self, sel_isMainThread)) {
          goto LABEL_27;
        }
        if (*(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken)) {
          goto LABEL_30;
        }
        uint64_t v9 = &OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_appSourceModels;
        goto LABEL_14;
      case 3:
        if (!objc_msgSend(self, sel_isMainThread)) {
          goto LABEL_28;
        }
        if (*(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_sourceLoadingToken)) {
          goto LABEL_30;
        }
        uint64_t v9 = &OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_researchStudySourceModels;
LABEL_14:
        unint64_t v7 = *v9;
        unint64_t v10 = *(void *)(v1 + *v9);
        if (v10 >> 62) {
          goto LABEL_29;
        }
        if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_16;
        }
        goto LABEL_30;
      case 6:
        if (objc_msgSend(self, sel_isAppleInternalInstall)) {
          return 4;
        }
        else {
          return 0;
        }
      default:
        if (*(unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI22SettingsViewController_isLoadingAccounts)) {
          return v7;
        }
        unint64_t v12 = *(void *)(v1 + v3);
        if (v12 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v15 = sub_1C2550620();
          swift_bridgeObjectRelease();
          uint64_t result = v7;
          if (!v15) {
            return result;
          }
        }
        else
        {
          uint64_t result = v7;
          if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            return result;
          }
        }
        unint64_t v13 = *(void *)(v1 + v3);
        if (v13 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v1 = sub_1C2550620();
          swift_bridgeObjectRelease();
          uint64_t result = v1 + v7;
          if (!__OFADD__(v1, v7)) {
            return result;
          }
        }
        else
        {
          uint64_t v1 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t result = v1 + v7;
          if (!__OFADD__(v1, v7)) {
            return result;
          }
        }
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_1C2550620();
        swift_bridgeObjectRelease();
        if (v14)
        {
LABEL_16:
          unint64_t v11 = *(void *)(v1 + v7);
          if (v11 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v16 = sub_1C2550620();
            swift_bridgeObjectRelease();
            uint64_t result = v16;
          }
          else
          {
            uint64_t result = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
        }
        else
        {
LABEL_30:
          uint64_t result = 1;
        }
        break;
    }
  }
  return result;
}

uint64_t sub_1C2437834(uint64_t a1)
{
  unint64_t v2 = swift_bridgeObjectRetain();
  int64_t v3 = sub_1C22E6C84(v2);
  swift_bridgeObjectRelease();
  if (a1 < 0 || *(void *)(v3 + 16) <= a1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    char v4 = *(unsigned char *)(v3 + a1 + 32);
    swift_bridgeObjectRelease();
    return sub_1C22E6AA0(v4);
  }
}

id sub_1C24378C0(id a1)
{
  unint64_t v2 = sub_1C254CD60();
  if (sub_1C22E6E88(v2) == 4)
  {
    int64_t v3 = (void *)sub_1C254F430();
    a1 = (id)HKErrorTableViewCell();

    if (a1) {
      return a1;
    }
    __break(1u);
  }
  char v4 = (void *)sub_1C254F430();
  int64_t v5 = (void *)sub_1C254CD30();
  a1 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v4, v5);

  id v6 = objc_msgSend(a1, sel_textLabel);
  if (v6)
  {
    unint64_t v7 = v6;
    id v8 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v7, sel_setTextColor_, v8);
  }
  id v9 = objc_msgSend(a1, sel_textLabel);
  if (v9)
  {
    unint64_t v10 = v9;
    objc_msgSend(v9, sel_setTextAlignment_, 4);
  }
  objc_msgSend(a1, sel_setAccessibilityIdentifier_, 0);
  switch(v11)
  {
    case 1:
      id v16 = objc_msgSend(a1, (SEL)&selRef_whitespaceCharacterSet);
      if (!v16) {
        goto LABEL_23;
      }
      unint64_t v13 = v16;
      if (!objc_msgSend(self, sel_isAppleInternalInstall)) {
        goto LABEL_24;
      }
      goto LABEL_22;
    case 2:
      id v15 = objc_msgSend(a1, (SEL)&selRef_whitespaceCharacterSet);
      if (!v15) {
        goto LABEL_23;
      }
      unint64_t v13 = v15;
      if (objc_msgSend(self, sel_isAppleInternalInstall)) {
        goto LABEL_22;
      }
      goto LABEL_24;
    case 3:
      id v17 = objc_msgSend(a1, (SEL)&selRef_whitespaceCharacterSet);
      if (!v17)
      {
LABEL_23:
        uint64_t v18 = 1;
        goto LABEL_30;
      }
      unint64_t v13 = v17;
      if (objc_msgSend(self, sel_isAppleInternalInstall)) {
LABEL_22:
      }
        uint64_t v14 = (void *)sub_1C254F430();
      else {
LABEL_24:
      }
        uint64_t v14 = 0;
      objc_msgSend(v13, sel_setText_, v14);
      uint64_t v18 = 1;
      goto LABEL_29;
    default:
      id v12 = objc_msgSend(a1, sel_textLabel);
      if (v12)
      {
        unint64_t v13 = v12;
        if (objc_msgSend(self, sel_isAppleInternalInstall))
        {
          uint64_t v20 = 0x3A65646F4D204955;
          unint64_t v21 = 0xE900000000000020;
          if (qword_1EA2DD970 != -1) {
            swift_once();
          }
          sub_1C254F5A0();
          swift_bridgeObjectRelease();
          uint64_t v14 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v14 = 0;
        }
        objc_msgSend(v13, sel_setText_, v14, v20, v21);
        uint64_t v18 = 0;
LABEL_29:
      }
      else
      {
        uint64_t v18 = 0;
      }
LABEL_30:
      objc_msgSend(a1, sel_setAccessoryType_, v18);
      break;
  }
  return a1;
}

double sub_1C2437CD8()
{
  uint64_t v0 = sub_1C254F470();
  uint64_t v2 = v1;
  if (v0 == sub_1C254F470() && v2 == v3)
  {
    double v6 = 0.82;
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v6;
  }
  char v5 = sub_1C2550870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    uint64_t v8 = sub_1C254F470();
    uint64_t v10 = v9;
    if (v8 == sub_1C254F470() && v10 == v11)
    {
      double v6 = 0.88;
    }
    else
    {
      char v13 = sub_1C2550870();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13) {
        return 0.88;
      }
      uint64_t v14 = sub_1C254F470();
      uint64_t v16 = v15;
      if (v14 == sub_1C254F470() && v16 == v17)
      {
        double v6 = 0.94;
      }
      else
      {
        char v18 = sub_1C2550870();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18) {
          return 0.94;
        }
        uint64_t v19 = sub_1C254F470();
        uint64_t v21 = v20;
        if (v19 != sub_1C254F470() || (double v6 = 1.0, v21 != v22))
        {
          char v23 = sub_1C2550870();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          double v6 = 1.0;
          if (v23) {
            return v6;
          }
          uint64_t v24 = sub_1C254F470();
          uint64_t v26 = v25;
          if (v24 == sub_1C254F470() && v26 == v27)
          {
            double v6 = 1.12;
          }
          else
          {
            char v28 = sub_1C2550870();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v28) {
              return 1.12;
            }
            uint64_t v29 = sub_1C254F470();
            uint64_t v31 = v30;
            if (v29 == sub_1C254F470() && v31 == v32)
            {
              double v6 = 1.24;
            }
            else
            {
              char v33 = sub_1C2550870();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v33) {
                return 1.24;
              }
              uint64_t v34 = sub_1C254F470();
              uint64_t v36 = v35;
              if (v34 == sub_1C254F470() && v36 == v37)
              {
                double v6 = 1.35;
              }
              else
              {
                char v38 = sub_1C2550870();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v38) {
                  return 1.35;
                }
                uint64_t v39 = sub_1C254F470();
                uint64_t v41 = v40;
                if (v39 == sub_1C254F470() && v41 == v42)
                {
                  double v6 = 1.62;
                }
                else
                {
                  char v43 = sub_1C2550870();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (v43) {
                    return 1.62;
                  }
                  uint64_t v44 = sub_1C254F470();
                  uint64_t v46 = v45;
                  if (v44 == sub_1C254F470() && v46 == v47)
                  {
                    double v6 = 1.95;
                  }
                  else
                  {
                    char v48 = sub_1C2550870();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v48) {
                      return 1.95;
                    }
                    uint64_t v49 = sub_1C254F470();
                    uint64_t v51 = v50;
                    if (v49 == sub_1C254F470() && v51 == v52)
                    {
                      double v6 = 2.34;
                    }
                    else
                    {
                      char v53 = sub_1C2550870();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if (v53) {
                        return 2.34;
                      }
                      uint64_t v54 = sub_1C254F470();
                      uint64_t v56 = v55;
                      if (v54 == sub_1C254F470() && v56 == v57)
                      {
                        double v6 = 2.74;
                      }
                      else
                      {
                        char v58 = sub_1C2550870();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if (v58) {
                          return 2.74;
                        }
                        uint64_t v59 = sub_1C254F470();
                        uint64_t v61 = v60;
                        if (v59 != sub_1C254F470() || v61 != v62) {
                          sub_1C2550870();
                        }
                        double v6 = 3.15;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    goto LABEL_8;
  }
  return 0.82;
}

uint64_t destroy for DisplayItemSectionState(uint64_t a1)
{
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DisplayItemSectionState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  char v4 = *(void **)(a2 + 40);
  char v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_retain();
  id v7 = v4;
  id v8 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DisplayItemSectionState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  char v4 = *(void **)(a1 + 40);
  char v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  id v6 = v5;

  id v7 = *(void **)(a1 + 48);
  id v8 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v8;
  id v9 = v8;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DisplayItemSectionState(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);

  char v5 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DisplayItemSectionState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DisplayItemSectionState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayItemSectionState()
{
  return &type metadata for DisplayItemSectionState;
}

uint64_t sub_1C243854C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v36 = a1;
  uint64_t v9 = sub_1C254CB40();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a3, sel_titleForGroupAtIndex_, a2);
  uint64_t v37 = v10;
  if (v13)
  {
    id v14 = v13;
    uint64_t v34 = sub_1C254F470();
    uint64_t v16 = v15;
  }
  else
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v14 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1C254C730();
    uint64_t v16 = v17;
    swift_bridgeObjectRelease();
    uint64_t v10 = v37;
  }

  int v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a5, 1, v9);
  uint64_t v35 = v9;
  if (v18 == 1 && (id v19 = objc_msgSend(a3, sel_subtitleForGroupAtIndex_, a2)) != 0)
  {
    uint64_t v20 = v19;
    uint64_t v21 = sub_1C254F470();
    unint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    unint64_t v23 = 0xE000000000000000;
  }
  id v24 = objc_msgSend(a3, sel_sourceForGroupAtIndex_, a2);
  uint64_t v25 = type metadata accessor for MedicalRecordTimelineHeaderItem(0);
  uint64_t v26 = swift_allocObject();
  swift_bridgeObjectRetain_n();
  id v33 = v24;
  sub_1C254CB30();
  uint64_t v27 = (uint64_t *)(v26 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_reuseIdentifier);
  type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
  sub_1C243B5B4(&qword_1EA2E0A58, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineHeaderItemCell);
  *uint64_t v27 = sub_1C254D330();
  v27[1] = v28;
  uint64_t v29 = v34;
  *(void *)(v26 + 16) = v34;
  *(void *)(v26 + 24) = v16;
  *(void *)(v26 + 32) = v21;
  *(void *)(v26 + 40) = v23;
  *(unsigned char *)(v26 + 48) = a4 == 0;
  *(void *)(v26 + 56) = v24;
  *(unsigned char *)(v26 + 64) = 0;
  *(void *)(v26 + 72) = v29;
  *(void *)(v26 + 80) = v16;
  *(void *)(v26 + 88) = 0x6C74695465746144;
  *(void *)(v26 + 96) = 0xE900000000000065;
  *(_OWORD *)(v26 + 104) = xmmword_1C256AAF0;
  sub_1C243B55C(0, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1C255CD90;
  *(void *)(v30 + 56) = v25;
  *(void *)(v30 + 64) = sub_1C243B5B4(&qword_1EA2E0A80, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineHeaderItem);
  *(void *)(v30 + 32) = v26;
  swift_retain();
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v35);
  sub_1C254D990();

  swift_release();
  return v29;
}

uint64_t sub_1C2438968()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254D9B0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v8);
  id v13 = (char *)&v18 - v12;
  if (*(void *)(*(void *)(v0 + 64) + 16))
  {
    sub_1C243AE04();
    id v19 = v10;
    swift_bridgeObjectRetain();
    sub_1C254CB30();
    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    id v14 = v19;
    sub_1C254D990();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v14, v13, v6);
    unint64_t v15 = *(void *)(v0 + 56);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v15 = sub_1C226D014(0, *(void *)(v15 + 16) + 1, 1, v15);
    }
    unint64_t v17 = *(void *)(v15 + 16);
    unint64_t v16 = *(void *)(v15 + 24);
    if (v17 >= v16 >> 1) {
      unint64_t v15 = sub_1C226D014(v16 > 1, v17 + 1, 1, v15);
    }
    *(void *)(v15 + 16) = v17 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v17, v14, v6);
    *(void *)(v1 + 56) = v15;
    swift_bridgeObjectRelease();
    *(void *)(v1 + 64) = MEMORY[0x1E4FBC860];
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  return result;
}

id sub_1C2438C20@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v27 = a6;
  uint64_t v26 = sub_1C254CB40();
  uint64_t v10 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a3, sel_sourceForGroupAtIndex_, a1);
  id result = objc_msgSend(a2, sel_title);
  if (result)
  {
    unint64_t v15 = result;
    uint64_t v16 = sub_1C254F470();
    uint64_t v18 = v17;

    uint64_t v19 = type metadata accessor for MedicalRecordTimelineHeaderItem(0);
    uint64_t v20 = swift_allocObject();
    id v24 = v13;
    swift_bridgeObjectRetain();
    sub_1C254CB30();
    uint64_t v21 = (uint64_t *)(v20 + OBJC_IVAR____TtC15HealthRecordsUI31MedicalRecordTimelineHeaderItem_reuseIdentifier);
    type metadata accessor for MedicalRecordTimelineHeaderItemCell(0);
    sub_1C243B5B4(&qword_1EA2E0A58, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineHeaderItemCell);
    *uint64_t v21 = sub_1C254D330();
    v21[1] = v22;
    *(void *)(v20 + 16) = v16;
    *(void *)(v20 + 24) = v18;
    *(unsigned char *)(v20 + 48) = 0;
    *(void *)(v20 + 32) = 0;
    *(void *)(v20 + 40) = 0;
    *(void *)(v20 + 56) = v13;
    *(unsigned char *)(v20 + 64) = 1;
    *(void *)(v20 + 72) = v25;
    *(void *)(v20 + 80) = a5;
    strcpy((char *)(v20 + 88), "CategoryTitle");
    *(_WORD *)(v20 + 102) = -4864;
    sub_1C243B55C(0, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90);
    *(void *)(v20 + 104) = 0;
    *(void *)(v20 + 112) = 0;
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1C255CD90;
    *(void *)(v23 + 56) = v19;
    *(void *)(v23 + 64) = sub_1C243B5B4(&qword_1EA2E0A80, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineHeaderItem);
    *(void *)(v23 + 32) = v20;
    swift_retain();
    sub_1C254CB30();
    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
    sub_1C254D990();

    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C2438F14(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C254CD90();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v4 + 32) != 1)
  {
    uint64_t v16 = *(void **)(v4 + 40);
    if (v16 && (id v17 = objc_msgSend(v16, sel_title)) != 0)
    {
      uint64_t v18 = v17;
      uint64_t v19 = sub_1C254F470();
      uint64_t v21 = v20;
    }
    else
    {
      uint64_t v19 = 0;
      uint64_t v21 = 0xE000000000000000;
    }
    id v22 = objc_msgSend(a1, sel_title);
    uint64_t v100 = (uint64_t *)a3;
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = sub_1C254F470();
      unint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      unint64_t v26 = 0xE000000000000000;
    }
    uint64_t v32 = *(void *)(v4 + 24);
    id v33 = a1;
    swift_retain();
    sub_1C2427664(v33, v19, v21, v24, v26, 0, 0, v32, (uint64_t)&v101);
    id v99 = v101;
    LODWORD(v98) = v102;
    uint64_t v34 = v103;
    uint64_t v35 = v105;
    id v96 = v106;
    uint64_t v97 = (uint64_t)v104;
    uint64_t v36 = v108;
    uint64_t v87 = v107;
    uint64_t v37 = v110;
    uint64_t v95 = v109;
    uint64_t v38 = v112;
    id v94 = v111;
    id v90 = v113;
    LODWORD(v93) = v114;
    uint64_t v39 = v115;
    uint64_t v92 = type metadata accessor for MedicalRecordTimelineItem();
    uint64_t v40 = swift_allocObject();
    type metadata accessor for MedicalRecordTimelineItemCell();
    sub_1C243B5B4(&qword_1EA2E0D10, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItemCell);
    id v88 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v91 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v41 = v90;
    id v89 = v90;
    swift_retain();
    uint64_t v42 = sub_1C254D330();
    *(void *)(v40 + 144) = v43;
    *(void *)(v40 + 16) = v99;
    *(unsigned char *)(v40 + 24) = v98;
    id v44 = v88;
    uint64_t v45 = v97;
    *(void *)(v40 + 32) = v88;
    *(void *)(v40 + 40) = v45;
    uint64_t v46 = v96;
    *(void *)(v40 + 48) = v35;
    *(void *)(v40 + 56) = v46;
    *(void *)(v40 + 64) = v87;
    *(void *)(v40 + 72) = v36;
    *(void *)(v40 + 80) = v95;
    *(void *)(v40 + 88) = v37;
    *(void *)(v40 + 96) = v94;
    *(void *)(v40 + 104) = v38;
    *(void *)(v40 + 112) = v41;
    *(unsigned char *)(v40 + 120) = v93;
    *(void *)(v40 + 128) = v39;
    *(void *)(v40 + 136) = v42;
    uint64_t v47 = v100;
    v100[3] = v92;
    v47[4] = sub_1C243B5B4(&qword_1EA2E0D60, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItem);
    swift_release();

    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t v12 = *(void **)(v4 + 48);
  id v13 = a1;

  *(void *)(v4 + 48) = a1;
  if (__OFADD__(*(void *)v4, 1))
  {
    __break(1u);
    return;
  }
  if (*(void *)v4 + 1 >= *(void *)(v4 + 8))
  {
    id v27 = objc_msgSend(v13, sel_title);
    uint64_t v100 = (uint64_t *)a3;
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v29 = sub_1C254F470();
      unint64_t v31 = v30;
    }
    else
    {
      uint64_t v29 = 0;
      unint64_t v31 = 0xE000000000000000;
    }
    uint64_t v48 = *(void *)(v4 + 24);
    id v49 = v13;
    swift_retain();
    sub_1C2427664(v49, 0, 0, v29, v31, 0, 0, v48, (uint64_t)&v101);
    id v99 = v101;
    LODWORD(v98) = v102;
    uint64_t v50 = v103;
    uint64_t v51 = v105;
    id v96 = v106;
    uint64_t v97 = (uint64_t)v104;
    uint64_t v52 = v108;
    uint64_t v87 = v107;
    uint64_t v53 = v110;
    uint64_t v95 = v109;
    uint64_t v54 = v112;
    id v94 = v111;
    id v90 = v113;
    LODWORD(v93) = v114;
    uint64_t v55 = v115;
    uint64_t v92 = type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem();
    uint64_t v40 = swift_allocObject();
    type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
    sub_1C243B5B4(&qword_1EA2E0D18, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell);
    id v88 = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v91 = v52;
    uint64_t v56 = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v57 = v90;
    id v89 = v90;
    swift_retain();
    uint64_t v58 = sub_1C254D330();
    *(void *)(v40 + 144) = v59;
    *(void *)(v40 + 16) = v99;
    *(unsigned char *)(v40 + 24) = v98;
    id v44 = v88;
    uint64_t v60 = v97;
    *(void *)(v40 + 32) = v88;
    *(void *)(v40 + 40) = v60;
    uint64_t v61 = v96;
    *(void *)(v40 + 48) = v51;
    *(void *)(v40 + 56) = v61;
    *(void *)(v40 + 64) = v87;
    *(void *)(v40 + 72) = v52;
    *(void *)(v40 + 80) = v95;
    *(void *)(v40 + 88) = v56;
    *(void *)(v40 + 96) = v94;
    *(void *)(v40 + 104) = v54;
    *(void *)(v40 + 112) = v57;
    *(unsigned char *)(v40 + 120) = v93;
    *(void *)(v40 + 128) = v55;
    *(void *)(v40 + 136) = v58;
    uint64_t v47 = v100;
    v100[3] = v92;
    v47[4] = sub_1C243B5B4(&qword_1EA2E37E8, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem);
    swift_release();

    swift_bridgeObjectRelease();
LABEL_21:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    *uint64_t v47 = v40;
    return;
  }
  MEMORY[0x1C8755260]();
  id v14 = (void *)sub_1C254CD30();
  id v15 = objc_msgSend(a2, sel_displayItemForIndexPath_, v14);

  if (!v15)
  {
LABEL_8:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return;
  }
  if (objc_msgSend(v15, sel_displayItemType) == (id)15 || objc_msgSend(v15, sel_displayItemType) == (id)6)
  {

    goto LABEL_8;
  }
  id v62 = objc_msgSend(v13, sel_title);
  uint64_t v100 = (uint64_t *)a3;
  if (v62)
  {
    objc_super v63 = v62;
    uint64_t v64 = sub_1C254F470();
    unint64_t v66 = v65;
  }
  else
  {
    uint64_t v64 = 0;
    unint64_t v66 = 0xE000000000000000;
  }
  uint64_t v67 = *(void *)(v4 + 24);
  id v68 = v13;
  swift_retain();
  sub_1C2427664(v68, 0, 0, v64, v66, 0, 0, v67, (uint64_t)&v101);
  id v96 = v101;
  LODWORD(v95) = v102;
  id v99 = v103;
  id v94 = v104;
  uint64_t v97 = (uint64_t)v105;
  uint64_t v93 = (uint64_t)v106;
  uint64_t v84 = v107;
  uint64_t v69 = v108;
  id v82 = v108;
  uint64_t v92 = v109;
  uint64_t v98 = v110;
  uint64_t v70 = v112;
  id v91 = v111;
  id v86 = v113;
  LODWORD(v90) = v114;
  uint64_t v87 = v115;
  id v89 = (id)type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem();
  uint64_t v71 = swift_allocObject();
  type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
  uint64_t v83 = sub_1C243B5B4(&qword_1EA2E0D18, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell);
  id v99 = v99;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v88 = v69;
  uint64_t v72 = v98;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v73 = v86;
  id v85 = v86;
  uint64_t v74 = v87;
  swift_retain();
  uint64_t v75 = sub_1C254D330();
  *(void *)(v71 + 144) = v76;
  *(void *)(v71 + 16) = v96;
  *(unsigned char *)(v71 + 24) = v95;
  id v77 = v94;
  *(void *)(v71 + 32) = v99;
  *(void *)(v71 + 40) = v77;
  uint64_t v78 = v93;
  *(void *)(v71 + 48) = v97;
  *(void *)(v71 + 56) = v78;
  unint64_t v79 = v82;
  *(void *)(v71 + 64) = v84;
  *(void *)(v71 + 72) = v79;
  *(void *)(v71 + 80) = v92;
  *(void *)(v71 + 88) = v72;
  *(void *)(v71 + 96) = v91;
  *(void *)(v71 + 104) = v70;
  *(void *)(v71 + 112) = v73;
  *(unsigned char *)(v71 + 120) = (_BYTE)v90;
  *(void *)(v71 + 128) = v74;
  *(void *)(v71 + 136) = v75;
  id v80 = v100;
  v100[3] = (uint64_t)v89;
  v80[4] = sub_1C243B5B4(&qword_1EA2E37E8, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *id v80 = v71;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_1C24398FC(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v95 = a2;
  sub_1C22CFDE4();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v2 + 24);
  int v8 = *(unsigned __int8 *)(v2 + 32);
  uint64_t v9 = *(void **)(v2 + 40);
  uint64_t v10 = *(void **)(v2 + 48);
  id v11 = objc_msgSend(a1, sel_chartValueWithRange);
  if (!v11)
  {
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v12 = v11;
  id v13 = objc_msgSend(self, sel_referenceRangeViewDataFromInspectableValueInRange_, v11);

  id v94 = v13;
  if (!v8)
  {
    if (v9)
    {
      id v37 = objc_msgSend(v9, sel_title);
      if (v37)
      {
        uint64_t v38 = v37;
        uint64_t v9 = (void *)sub_1C254F470();
        uint64_t v40 = v39;

LABEL_19:
        swift_retain();
        sub_1C2427664(a1, (uint64_t)v9, v40, 0, 0, 0, 1, v7, (uint64_t)&v96);
        uint64_t v93 = v96;
        LODWORD(v92) = v97;
        uint64_t v43 = v98;
        uint64_t v44 = v100;
        uint64_t v90 = v101;
        unint64_t v91 = v99;
        uint64_t v45 = v102;
        uint64_t v46 = v103;
        uint64_t v47 = v105;
        uint64_t v89 = v104;
        uint64_t v48 = v107;
        id v88 = v106;
        id v84 = v108;
        LODWORD(v87) = v109;
        uint64_t v49 = v110;
        uint64_t v86 = type metadata accessor for MedicalRecordTimelineItem();
        uint64_t v50 = swift_allocObject();
        type metadata accessor for MedicalRecordTimelineItemCell();
        uint64_t v82 = sub_1C243B5B4(&qword_1EA2E0D10, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItemCell);
        id v51 = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v85 = v46;
        uint64_t v52 = v47;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v53 = v84;
        id v83 = v84;
        swift_retain();
        uint64_t v54 = sub_1C254D330();
        *(void *)(v50 + 144) = v55;
        *(void *)(v50 + 16) = v93;
        *(unsigned char *)(v50 + 24) = v92;
        unint64_t v56 = v91;
        *(void *)(v50 + 32) = v51;
        *(void *)(v50 + 40) = v56;
        uint64_t v57 = v90;
        *(void *)(v50 + 48) = v44;
        *(void *)(v50 + 56) = v57;
        *(void *)(v50 + 64) = v45;
        *(void *)(v50 + 72) = v46;
        *(void *)(v50 + 80) = v89;
        *(void *)(v50 + 88) = v52;
        *(void *)(v50 + 96) = v88;
        *(void *)(v50 + 104) = v48;
        *(void *)(v50 + 112) = v53;
        *(unsigned char *)(v50 + 120) = v87;
        *(void *)(v50 + 128) = v49;
        *(void *)(v50 + 136) = v54;
        uint64_t v58 = v95;
        v95[3] = v86;
        v58[4] = sub_1C243B5B4(&qword_1EA2E0D60, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItem);

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_35:
        uint64_t *v58 = v50;
        return;
      }
      uint64_t v9 = 0;
    }
    uint64_t v40 = 0xE000000000000000;
    goto LABEL_19;
  }
  id v14 = &selRef_setUnsupportedSearchResults_;
  id v15 = objc_msgSend(a1, sel_title);
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v92 = sub_1C254F470();
    uint64_t v93 = v17;

    if (v13) {
      goto LABEL_5;
    }
LABEL_16:
    uint64_t v90 = 0;
    unint64_t v91 = 0xE000000000000000;
    goto LABEL_25;
  }
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v41 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v92 = sub_1C254C730();
  uint64_t v93 = v42;
  swift_bridgeObjectRelease();

  if (!v13) {
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v89 = v7;
  id v18 = v13;
  id v19 = objc_msgSend(v18, sel_valueString);
  if (!v19)
  {
LABEL_21:

    id v59 = v18;
    id v60 = objc_msgSend(v59, sel_valueString);
    if (v60)
    {
      uint64_t v61 = v60;
      uint64_t v90 = sub_1C254F470();
      unint64_t v91 = v62;
    }
    else
    {

      uint64_t v90 = 0;
      unint64_t v91 = 0xE000000000000000;
    }
    uint64_t v7 = v89;
    goto LABEL_25;
  }
  uint64_t v20 = v19;
  uint64_t v21 = sub_1C254F470();
  uint64_t v23 = v22;

  id v24 = v18;
  id v25 = objc_msgSend(v24, sel_unitString);
  if (!v25)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  unint64_t v26 = v25;
  unint64_t v91 = v21;
  uint64_t v90 = sub_1C254F470();
  uint64_t v28 = v27;

  uint64_t v29 = sub_1C254CBD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v6, 1, 1, v29);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  unint64_t v30 = (void *)qword_1EBB6FBC8;
  sub_1C243B55C(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C255CDA0;
  uint64_t v32 = MEMORY[0x1E4FBB1A0];
  *(void *)(v31 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v33 = sub_1C220D950();
  *(void *)(v31 + 32) = v91;
  *(void *)(v31 + 40) = v23;
  *(void *)(v31 + 96) = v32;
  *(void *)(v31 + 104) = v33;
  uint64_t v34 = v90;
  *(void *)(v31 + 64) = v33;
  *(void *)(v31 + 72) = v34;
  *(void *)(v31 + 80) = v28;
  id v35 = v30;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v90 = sub_1C254F4A0();
  unint64_t v91 = v36;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v6);
  uint64_t v7 = v89;
  id v14 = &selRef_setUnsupportedSearchResults_;
LABEL_25:
  id v63 = objc_msgSend(a1, sel_medicalRecord);
  if (v63)
  {
    uint64_t v64 = v63;
    if (v10)
    {
      id v65 = [v10 v14[136]];
      if (v65)
      {
        unint64_t v66 = v65;
        uint64_t v67 = sub_1C254F470();
        unint64_t v69 = v68;
      }
      else
      {
        uint64_t v67 = 0;
        unint64_t v69 = 0xE000000000000000;
      }
      id v71 = objc_msgSend(v10, sel_subtitle);
      uint64_t v86 = v67;
      if (v71)
      {
        uint64_t v72 = v71;
        uint64_t v87 = sub_1C254F470();
        unint64_t v70 = v73;
      }
      else
      {
        uint64_t v87 = 0;
        unint64_t v70 = 0xE000000000000000;
      }
    }
    else
    {
      uint64_t v87 = 0;
      uint64_t v86 = 0;
      unint64_t v70 = 0xE000000000000000;
      unint64_t v69 = 0xE000000000000000;
    }
    id v74 = objc_msgSend(v10, sel_attributedSubtitle);
    uint64_t v89 = type metadata accessor for MedicalRecordTimelineChartValueItem();
    uint64_t v50 = swift_allocObject();
    type metadata accessor for MedicalRecordTimelineChartValueItemCell();
    sub_1C243B5B4(&qword_1EA2E0D28, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItemCell);
    swift_retain_n();
    id v75 = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v88 = v74;
    uint64_t v76 = v93;
    swift_bridgeObjectRetain();
    unint64_t v77 = v69;
    unint64_t v78 = v91;
    swift_bridgeObjectRetain();
    *(void *)(v50 + 104) = sub_1C254D330();
    *(void *)(v50 + 112) = v79;
    uint64_t v80 = v86;
    *(void *)(v50 + 16) = v75;
    *(void *)(v50 + 24) = v80;
    uint64_t v81 = v87;
    *(void *)(v50 + 32) = v77;
    *(void *)(v50 + 40) = v81;
    *(void *)(v50 + 48) = v70;
    *(void *)(v50 + 56) = v74;
    *(void *)(v50 + 64) = v92;
    *(void *)(v50 + 72) = v76;
    *(void *)(v50 + 80) = v90;
    *(void *)(v50 + 88) = v78;
    *(void *)(v50 + 96) = v7;
    uint64_t v58 = v95;
    v95[3] = v89;
    v58[4] = sub_1C243B5B4(&qword_1EA2E37F0, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItem);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_35;
  }
LABEL_37:
  __break(1u);
}

id sub_1C243A1FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(a1, sel_title);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v9 = result;
  uint64_t v10 = sub_1C254F470();
  uint64_t v12 = v11;

  id result = objc_msgSend(a1, sel_subtitle);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v13 = result;
  v22[0] = v4;
  v22[1] = a2;
  uint64_t v14 = sub_1C254F470();
  uint64_t v16 = v15;

  id result = objc_msgSend(a1, sel_medicalRecord);
  if (result)
  {
    id v17 = result;
    uint64_t v18 = type metadata accessor for MedicalRecordTimelinePanelHeaderItem();
    id v19 = (void *)swift_allocObject();
    type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell();
    sub_1C243B5B4(&qword_1EA2E0D08, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelinePanelHeaderItemCell);
    v19[7] = sub_1C254D330();
    v19[8] = v20;
    void v19[2] = v10;
    v19[3] = v12;
    void v19[4] = v14;
    void v19[5] = v16;
    v19[6] = v17;
    sub_1C243B55C(0, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C255CD90;
    *(void *)(v21 + 56) = v18;
    *(void *)(v21 + 64) = sub_1C243B5B4(&qword_1EA2E37F8, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelinePanelHeaderItem);
    *(void *)(v21 + 32) = v19;
    swift_retain();
    sub_1C254CB30();
    sub_1C254CAF0();
    (*(void (**)(char *, void))(v5 + 8))(v7, v22[0]);
    sub_1C254D990();
    return (id)swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1C243A4A0(id a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 24);
  if (*(unsigned char *)(v2 + 32) != 1)
  {
    id v14 = objc_msgSend(a1, sel_title);
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = sub_1C254F470();
      unint64_t v18 = v17;
    }
    else
    {
      uint64_t v16 = 0;
      unint64_t v18 = 0xE000000000000000;
    }
    swift_retain();
    sub_1C2427664(a1, 0, 0, v16, v18, 0, 0, v4, (uint64_t)&v67);
    uint64_t v62 = v67;
    char v60 = v68;
    id v19 = v69;
    uint64_t v46 = v71;
    uint64_t v57 = v72;
    uint64_t v58 = v70;
    uint64_t v20 = v73;
    uint64_t v21 = v76;
    uint64_t v22 = v78;
    uint64_t v53 = v77;
    uint64_t v55 = v75;
    uint64_t v48 = v74;
    uint64_t v49 = v79;
    char v51 = v80;
    uint64_t v23 = v81;
    uint64_t v50 = type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem();
    uint64_t v24 = swift_allocObject();
    type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
    sub_1C243B5B4(&qword_1EA2E0D18, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell);
    id v25 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v64 = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v47 = v49;
    swift_retain();
    uint64_t v26 = sub_1C254D330();
    uint64_t v27 = v21;
    id v28 = v25;
    *(void *)(v24 + 144) = v29;
    *(void *)(v24 + 16) = v62;
    *(unsigned char *)(v24 + 24) = v60;
    *(void *)(v24 + 32) = v25;
    *(void *)(v24 + 40) = v58;
    *(void *)(v24 + 48) = v46;
    *(void *)(v24 + 56) = v57;
    *(void *)(v24 + 64) = v20;
    *(void *)(v24 + 72) = v48;
    *(void *)(v24 + 80) = v55;
    *(void *)(v24 + 88) = v27;
    *(void *)(v24 + 96) = v53;
    *(void *)(v24 + 104) = v22;
    *(void *)(v24 + 112) = v49;
    *(unsigned char *)(v24 + 120) = v51;
    *(void *)(v24 + 128) = v23;
    *(void *)(v24 + 136) = v26;
    unint64_t v30 = a2;
    a2[3] = v50;
    a2[4] = sub_1C243B5B4(&qword_1EA2E37E8, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem);
    swift_release();

    goto LABEL_21;
  }
  uint64_t v5 = *(void **)(v2 + 48);
  id v6 = objc_msgSend(a1, sel_medicalRecord);
  if (v6)
  {
    uint64_t v7 = v6;
    if (v5)
    {
      id v8 = v6;
      id v9 = objc_msgSend(v5, sel_title);
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = sub_1C254F470();
        unint64_t v13 = v12;
      }
      else
      {
        uint64_t v11 = 0;
        unint64_t v13 = 0xE000000000000000;
      }
      id v32 = objc_msgSend(v5, sel_subtitle);
      if (v32)
      {
        unint64_t v33 = v32;
        uint64_t v63 = sub_1C254F470();
        unint64_t v66 = v34;
      }
      else
      {
        uint64_t v63 = 0;
        unint64_t v66 = 0xE000000000000000;
      }
      unint64_t v31 = v13;
      uint64_t v7 = v8;
    }
    else
    {
      uint64_t v63 = 0;
      uint64_t v11 = 0;
      unint64_t v66 = 0xE000000000000000;
      unint64_t v31 = 0xE000000000000000;
    }
    id v35 = objc_msgSend(v5, sel_attributedSubtitle);
    id v36 = objc_msgSend(a1, sel_title);
    if (v36)
    {
      id v37 = v36;
      uint64_t v38 = sub_1C254F470();
      uint64_t v61 = v39;

      id v40 = objc_msgSend(a1, sel_subtitle);
      uint64_t v59 = v11;
      if (v40)
      {
        id v41 = v40;
        uint64_t v42 = v4;
        uint64_t v52 = sub_1C254F470();
        uint64_t v54 = v43;
      }
      else
      {
        uint64_t v42 = v4;
        uint64_t v52 = 0;
        uint64_t v54 = 0;
      }
      uint64_t v56 = type metadata accessor for MedicalRecordTimelineChartValueItem();
      uint64_t v24 = swift_allocObject();
      type metadata accessor for MedicalRecordTimelineChartValueItemCell();
      sub_1C243B5B4(&qword_1EA2E0D28, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItemCell);
      uint64_t v44 = v42;
      swift_retain_n();
      id v28 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v64 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      *(void *)(v24 + 104) = sub_1C254D330();
      *(void *)(v24 + 112) = v45;
      *(void *)(v24 + 16) = v28;
      *(void *)(v24 + 24) = v59;
      *(void *)(v24 + 32) = v31;
      *(void *)(v24 + 40) = v63;
      *(void *)(v24 + 48) = v66;
      *(void *)(v24 + 56) = v35;
      *(void *)(v24 + 64) = v38;
      *(void *)(v24 + 72) = v61;
      *(void *)(v24 + 80) = v52;
      *(void *)(v24 + 88) = v54;
      *(void *)(v24 + 96) = v44;
      unint64_t v30 = a2;
      a2[3] = v56;
      a2[4] = sub_1C243B5B4(&qword_1EA2E37F0, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItem);
      swift_release();
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      *unint64_t v30 = v24;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C243A9E0(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1C254CD90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__OFADD__(*v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v3[3];
    if (*v3 + 1 < v3[1])
    {
      MEMORY[0x1C8755260]();
      unint64_t v12 = (void *)sub_1C254CD30();
      id v13 = objc_msgSend(a2, sel_displayItemForIndexPath_, v12);

      if (v13)
      {
        if (objc_msgSend(v13, sel_displayItemType) == (id)4 || objc_msgSend(v13, sel_displayItemType) == (id)5)
        {
          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

LABEL_7:
          *(void *)(a3 + 32) = 0;
          *(_OWORD *)a3 = 0u;
          *(_OWORD *)(a3 + 16) = 0u;
          return;
        }
        id v30 = objc_msgSend(v13, sel_displayItemType);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        if (v30 == (id)6) {
          goto LABEL_7;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
    id v14 = a1;
    swift_retain();
    sub_1C2427664(v14, 0, 0, 0, 0, 1, 0, v11, (uint64_t)&v45);
    uint64_t v43 = v45;
    int v42 = v46;
    uint64_t v15 = v47;
    uint64_t v16 = v49;
    uint64_t v40 = v50;
    uint64_t v41 = v48;
    unint64_t v17 = v52;
    uint64_t v31 = v51;
    uint64_t v18 = v54;
    uint64_t v39 = v53;
    uint64_t v19 = v56;
    uint64_t v38 = v55;
    id v34 = v57;
    int v37 = v58;
    uint64_t v44 = (uint64_t *)a3;
    uint64_t v20 = v59;
    uint64_t v36 = type metadata accessor for MedicalRecordTimelineItem();
    uint64_t v21 = swift_allocObject();
    type metadata accessor for MedicalRecordTimelineItemCell();
    sub_1C243B5B4(&qword_1EA2E0D10, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItemCell);
    id v32 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v35 = v17;
    uint64_t v22 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v23 = v34;
    id v33 = v34;
    swift_retain();
    uint64_t v24 = sub_1C254D330();
    *(void *)(v21 + 144) = v25;
    *(void *)(v21 + 16) = v43;
    *(unsigned char *)(v21 + 24) = v42;
    uint64_t v26 = v32;
    uint64_t v27 = v41;
    *(void *)(v21 + 32) = v32;
    *(void *)(v21 + 40) = v27;
    uint64_t v28 = v40;
    *(void *)(v21 + 48) = v16;
    *(void *)(v21 + 56) = v28;
    *(void *)(v21 + 64) = v31;
    *(void *)(v21 + 72) = v17;
    *(void *)(v21 + 80) = v39;
    *(void *)(v21 + 88) = v22;
    *(void *)(v21 + 96) = v38;
    *(void *)(v21 + 104) = v19;
    *(void *)(v21 + 112) = v23;
    *(unsigned char *)(v21 + 120) = v37;
    *(void *)(v21 + 128) = v20;
    *(void *)(v21 + 136) = v24;
    uint64_t v29 = v44;
    v44[3] = v36;
    v29[4] = sub_1C243B5B4(&qword_1EA2E0D60, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineItem);
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    *uint64_t v29 = v21;
  }
}

uint64_t sub_1C243AE04()
{
  uint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t result = *(void *)(v1 + 64);
  unint64_t v4 = *(void *)(result + 16);
  if (!v4) {
    goto LABEL_34;
  }
  uint64_t v5 = *(void *)(v1 + 64);
  if (v4 > *(void *)(v5 + 16))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  char v6 = 0;
  uint64_t v7 = 40 * v4 - 8;
  uint64_t v8 = (unint64_t *)&qword_1EA2DED90;
  uint64_t v24 = v1;
  while (1)
  {
    sub_1C21F4424(v5 + v7, (uint64_t)v29);
    sub_1C21F4424((uint64_t)v29, (uint64_t)&v26);
    sub_1C21FFE74(0, v8);
    uint64_t v9 = type metadata accessor for MedicalRecordTimelineChartValueItem();
    uint64_t result = swift_dynamicCast();
    uint64_t v10 = result ? v25[0] : 0;
    uint64_t v11 = v4 - 1;
    if (v4 == 1) {
      break;
    }
    uint64_t v12 = *(void *)(v1 + 64);
    if ((int64_t)(v4 - 2) >= *(void *)(v12 + 16)) {
      goto LABEL_36;
    }
    sub_1C21F4424(v12 + v7 - 40, (uint64_t)&v26);
    if (swift_dynamicCast()) {
      uint64_t v13 = v25[0];
    }
    else {
      uint64_t v13 = 0;
    }
    if (v10)
    {
      if (!v13)
      {
        if (v6)
        {
          uint64_t v21 = swift_retain();
          sub_1C243B294(v21, v1, (uint64_t *)&v26);
          sub_1C21F4424((uint64_t)&v26, (uint64_t)v25);
          sub_1C24F3920(0, 0, (uint64_t)v25);
          swift_release_n();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
        }
        else
        {
          sub_1C21F4424((uint64_t)v29, (uint64_t)&v26);
          sub_1C24F3920(0, 0, (uint64_t)&v26);
          swift_release();
        }
        uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
        char v6 = 0;
        goto LABEL_5;
      }
      char v14 = v6;
      uint64_t v15 = v8;
      sub_1C224B3D4();
      uint64_t v16 = *(void **)(v10 + 16);
      unint64_t v17 = *(void **)(v13 + 16);
      swift_retain();
      swift_retain();
      id v18 = v16;
      id v19 = v17;
      char v20 = sub_1C254FF70();

      if (v20)
      {
        swift_release_n();
        swift_release_n();
        uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
        char v6 = 1;
        uint64_t v8 = v15;
LABEL_25:
        uint64_t v1 = v24;
        goto LABEL_5;
      }
      uint64_t v8 = v15;
      if ((v14 & 1) == 0)
      {
        uint64_t v27 = v9;
        uint64_t v28 = sub_1C243B5B4(&qword_1EA2E37F0, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItem);
        *(void *)&long long v26 = v10;
        sub_1C21F44EC(&v26, (uint64_t)v25);
        swift_retain();
        sub_1C24F3920(0, 0, (uint64_t)v25);
        swift_release_n();
        swift_release_n();
        uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
        char v6 = 0;
        goto LABEL_25;
      }
      uint64_t v1 = v24;
      sub_1C243B294(v10, v24, (uint64_t *)&v26);
      sub_1C21F4424((uint64_t)&v26, (uint64_t)v25);
      sub_1C24F3920(0, 0, (uint64_t)v25);
      swift_release_n();
      swift_release_n();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
      char v6 = 0;
    }
    else
    {
      sub_1C21F4424((uint64_t)v29, (uint64_t)&v26);
      sub_1C24F3920(0, 0, (uint64_t)&v26);
      swift_release();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
    }
LABEL_5:
    uint64_t v5 = *(void *)(v1 + 64);
    v7 -= 40;
    unint64_t v4 = v11;
    if (v11 > *(void *)(v5 + 16)) {
      goto LABEL_35;
    }
  }
  if (v10)
  {
    if (v6)
    {
      uint64_t v22 = swift_retain();
      sub_1C243B294(v22, v1, (uint64_t *)&v26);
      sub_1C21F4424((uint64_t)&v26, (uint64_t)v25);
      sub_1C24F3920(0, 0, (uint64_t)v25);
      swift_release_n();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
      goto LABEL_33;
    }
    uint64_t v27 = v9;
    uint64_t v28 = sub_1C243B5B4(&qword_1EA2E37F0, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItem);
    *(void *)&long long v26 = v10;
    sub_1C21F44EC(&v26, (uint64_t)v25);
    id v23 = (long long *)v25;
  }
  else
  {
    sub_1C21F4424((uint64_t)v29, (uint64_t)&v26);
    id v23 = &v26;
  }
  sub_1C24F3920(0, 0, (uint64_t)v23);
LABEL_33:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
  uint64_t v2 = v30;
LABEL_34:
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = v2;
  return result;
}

void sub_1C243B294(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = self;
  char v6 = (void *)sub_1C254F430();
  uint64_t v7 = (void *)sub_1C254F430();
  id v8 = objc_msgSend(v5, sel_detailSubtitleItemWithTitle_subtitle_, v6, v7);

  if (v8)
  {
    objc_msgSend(v8, sel_setMedicalRecord_, *(void *)(a1 + 16));
    uint64_t v9 = *(void *)(a2 + 24);
    id v32 = v8;
    swift_retain();
    sub_1C2427664(v32, 0, 0, 0, 0, 0, 0, v9, (uint64_t)&v34);
    uint64_t v31 = v34;
    char v30 = v35;
    uint64_t v10 = v36;
    uint64_t v11 = v38;
    uint64_t v28 = v39;
    uint64_t v29 = v37;
    uint64_t v12 = v40;
    uint64_t v13 = v41;
    uint64_t v14 = v43;
    uint64_t v15 = v45;
    uint64_t v26 = v44;
    uint64_t v27 = v42;
    uint64_t v16 = v46;
    char v25 = v47;
    uint64_t v22 = v48;
    uint64_t v24 = type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem();
    uint64_t v17 = swift_allocObject();
    type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell();
    sub_1C243B5B4(&qword_1EA2E0D18, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItemCell);
    id v18 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v23 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v21 = v16;
    swift_retain();
    uint64_t v19 = sub_1C254D330();
    *(void *)(v17 + 144) = v20;
    *(void *)(v17 + 16) = v31;
    *(unsigned char *)(v17 + 24) = v30;
    *(void *)(v17 + 32) = v18;
    *(void *)(v17 + 40) = v29;
    *(void *)(v17 + 48) = v11;
    *(void *)(v17 + 56) = v28;
    *(void *)(v17 + 64) = v12;
    *(void *)(v17 + 72) = v13;
    *(void *)(v17 + 80) = v27;
    *(void *)(v17 + 88) = v14;
    *(void *)(v17 + 96) = v26;
    *(void *)(v17 + 104) = v15;
    *(void *)(v17 + 112) = v16;
    *(unsigned char *)(v17 + 120) = v25;
    *(void *)(v17 + 128) = v22;
    *(void *)(v17 + 136) = v19;
    a3[3] = v24;
    a3[4] = sub_1C243B5B4(&qword_1EA2E37E8, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineTitleWithSubtitleItem);

    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    *a3 = v17;
  }
  else
  {
    __break(1u);
  }
}

void sub_1C243B55C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C21FFE74(255, a3);
    unint64_t v4 = sub_1C2550820();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C243B5B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t HKMedicalUserDomainConcept.localizedOntologyPreferredName.getter()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_preferredLocalizations);

  uint64_t v2 = sub_1C254F710();
  uint64_t countAndFlagsBits = HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v2)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

Swift::String __swiftcall HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)(Swift::OpaquePointer given)
{
  id v2 = objc_msgSend(v1, sel_ontologyPreferredName);
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = sub_1C254F470();
    char v6 = v5;
  }
  else
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v3 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C254C730();
    char v6 = v7;
    swift_bridgeObjectRelease();
  }

  id v8 = objc_msgSend(v1, sel_preferredNameByLocaleIdentifier);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_1C254F2D0();

    uint64_t v11 = swift_bridgeObjectRetain();
    sub_1C228FE98(v11);
    swift_bridgeObjectRelease();
    uint64_t v12 = self;
    uint64_t v13 = (void *)sub_1C254F700();
    swift_release();
    uint64_t v14 = (void *)sub_1C254F700();
    id v15 = objc_msgSend(v12, sel_preferredLocalizationsFromArray_forPreferences_, v13, v14);

    uint64_t v16 = (void *)sub_1C254F710();
    if (v16[2])
    {
      uint64_t v18 = v16[4];
      uint64_t v17 = v16[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(void *)(v10 + 16))
      {
        unint64_t v19 = sub_1C21A6470(v18, v17);
        if (v20)
        {
          id v21 = (uint64_t *)(*(void *)(v10 + 56) + 16 * v19);
          uint64_t v4 = *v21;
          uint64_t v22 = (void *)v21[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          char v6 = v22;
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = v4;
  uint64_t v24 = v6;
  result._object = v24;
  result._uint64_t countAndFlagsBits = v23;
  return result;
}

uint64_t MedicalRecordTimelinePanelItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C243B928()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*(id *)(v0 + 16), sel_UUID, v3);
  sub_1C254CB20();

  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v8[0] = 0x2E6C656E6150;
  v8[1] = 0xE600000000000000;
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v8[0];
}

uint64_t static MedicalRecordTimelinePanelItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a2 + 16);
  id v6 = v4;
  id v7 = v5;
  LOBYTE(v5) = sub_1C254FF70();

  return v5 & 1;
}

uint64_t MedicalRecordTimelinePanelItem.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelinePanelItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C243BB3C()
{
  return sub_1C243B928();
}

id sub_1C243BB60(double a1, double a2, double a3, double a4)
{
  sub_1C230C7E4(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = sub_1C254E690();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = &v4[OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_item];
  *(_OWORD *)uint64_t v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((void *)v16 + 4) = 0;
  uint64_t v17 = &v4[OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_sectionContext];
  uint64_t v18 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  unint64_t v19 = (objc_class *)type metadata accessor for MedicalRecordTimelinePanelItemCell();
  v27.receiver = v4;
  v27.super_class = v19;
  id v20 = objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C254CDB0();
  id v21 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C254FE70();

  uint64_t v22 = self;
  id v23 = v20;
  id v24 = objc_msgSend(v22, sel_currentTraitCollection);
  sub_1C254E660();
  sub_1C254E6D0();
  sub_1C24FCA3C((uint64_t)v15);
  sub_1C254E6C0();
  uint64_t v25 = sub_1C254E710();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 0, 1, v25);
  MEMORY[0x1C8758250](v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

  return v23;
}

id sub_1C243BE4C(void *a1)
{
  sub_1C230C7E4(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v23 - v4;
  uint64_t v6 = sub_1C254E690();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &v1[OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_item];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  uint64_t v11 = &v1[OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_sectionContext];
  uint64_t v12 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (objc_class *)type metadata accessor for MedicalRecordTimelinePanelItemCell();
  v23.receiver = v1;
  v23.super_class = v13;
  id v14 = objc_msgSendSuper2(&v23, sel_initWithCoder_, a1);
  id v15 = v14;
  if (v14)
  {
    id v16 = v14;
    sub_1C254CDB0();
    id v17 = (id)*MEMORY[0x1E4F39EA8];
    sub_1C254FE70();

    uint64_t v18 = self;
    id v19 = v16;
    id v20 = objc_msgSend(v18, sel_currentTraitCollection);
    sub_1C254E660();
    sub_1C254E6D0();
    sub_1C24FCA3C((uint64_t)v9);
    sub_1C254E6C0();
    uint64_t v21 = sub_1C254E710();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v5, 0, 1, v21);
    MEMORY[0x1C8758250](v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v15;
}

uint64_t sub_1C243C138(uint64_t a1, void *a2)
{
  sub_1C2227014(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_item;
  swift_beginAccess();
  sub_1C2232E74((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C243C1AC();
  return sub_1C2227100((uint64_t)v5);
}

id sub_1C243C1AC()
{
  sub_1C230C7E4(0, &qword_1EA2DE9F0, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v25 = (char *)&v22 - v2;
  uint64_t v3 = sub_1C254E600();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C254E5A0();
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254E890();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v0;
  MEMORY[0x1C87582A0](v11);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v14 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C254E860();
  id result = objc_msgSend(self, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E4FB28C8], *MEMORY[0x1E4FB09D8]);
  if (result)
  {
    id v16 = (void (*)(uint64_t *, void))sub_1C254E7A0();
    sub_1C254E770();
    v16(v29, 0);
    id v17 = objc_msgSend(self, sel_labelColor);
    objc_super v23 = v13;
    uint64_t v18 = (void (*)(uint64_t *, void))sub_1C254E7A0();
    sub_1C254E780();
    v18(v29, 0);
    v29[3] = v9;
    v29[4] = MEMORY[0x1E4FB0F88];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 16))(boxed_opaque_existential_1, v13, v9);
    MEMORY[0x1C8758230](v29);
    sub_1C230C7E4(0, &qword_1EA2DE9D8, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
    sub_1C254E620();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
    uint64_t v20 = v24;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FB0E18], v24);
    uint64_t v21 = sub_1C254E5B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v25, 1, 1, v21);
    sub_1C254E5F0();
    sub_1C254E5C0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
    sub_1C254FD80();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v23, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C243C740@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C243C794(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C243C1AC();
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C243C804(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C243C864;
}

uint64_t sub_1C243C864(uint64_t a1, char a2)
{
  return sub_1C243CF34(a1, a2, (uint64_t (*)(uint64_t))sub_1C243C1AC);
}

void sub_1C243C968(uint64_t a1, void *a2)
{
}

uint64_t sub_1C243C970(uint64_t a1, void *a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66300];
  sub_1C230C7E4(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1C230C848(a1, (uint64_t)&v10 - v6);
  uint64_t v8 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_sectionContext;
  swift_beginAccess();
  sub_1C225F20C((uint64_t)v7, v8);
  swift_endAccess();
  sub_1C243CA7C();
  return sub_1C230C8DC((uint64_t)v7, &qword_1EA2DF2E0, v4);
}

uint64_t sub_1C243CA7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CD90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C230C7E4(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = sub_1C254D370();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_sectionContext;
  swift_beginAccess();
  sub_1C230C848(v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_1C230C8DC((uint64_t)v8, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_1C254D360();
  uint64_t v20 = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_1C25503A0();
  uint64_t v15 = sub_1C254F470();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v20 = v15;
  unint64_t v21 = v17;
  sub_1C254F5A0();
  uint64_t v19 = sub_1C254CD80();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v18 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v18);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1C243CDDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_sectionContext;
  swift_beginAccess();
  return sub_1C230C848(v3, a1);
}

uint64_t sub_1C243CE30(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_sectionContext;
  swift_beginAccess();
  sub_1C225F20C(a1, v3);
  swift_endAccess();
  sub_1C243CA7C();
  return sub_1C230C8DC(a1, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
}

uint64_t (*sub_1C243CEBC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C243CF1C;
}

uint64_t sub_1C243CF1C(uint64_t a1, char a2)
{
  return sub_1C243CF34(a1, a2, (uint64_t (*)(uint64_t))sub_1C243CA7C);
}

uint64_t sub_1C243CF34(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

id MedicalRecordTimelinePanelItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelinePanelItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C243D00C(uint64_t a1, void *a2)
{
}

void sub_1C243D034(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v3, (uint64_t)v8);
  if (v8[3])
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    type metadata accessor for MedicalRecordTimelinePanelItem();
    uint64_t v4 = swift_dynamicCast();
    if (v4)
    {
      if (qword_1EBB6EF30 != -1) {
        uint64_t v4 = swift_once();
      }
      MEMORY[0x1F4188790](v4);
      sub_1C254CEE0();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
      sub_1C243D6E8((unint64_t *)&qword_1EBB6F240, 255, MEMORY[0x1E4F66F68]);
      swift_retain();
      sub_1C254E1D0();
      swift_release();
      uint64_t v5 = (void *)v8[0];
      if (qword_1EBB6D858 != -1) {
        swift_once();
      }
      id v6 = *(id *)(v7 + 16);
      sub_1C2452E50(v6, a1, v5);
      swift_release();
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v8);
  }
}

uint64_t type metadata accessor for MedicalRecordTimelinePanelItemCell()
{
  uint64_t result = qword_1EA2E3810;
  if (!qword_1EA2E3810) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C243D2B4(uint64_t a1, uint64_t a2)
{
  return sub_1C243D6E8(&qword_1EA2E3808, a2, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelinePanelItem);
}

uint64_t type metadata accessor for MedicalRecordTimelinePanelItem()
{
  return self;
}

uint64_t sub_1C243D320@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a2);
}

uint64_t sub_1C243D37C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelinePanelItemCell_sectionContext;
  swift_beginAccess();
  return sub_1C230C848(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelinePanelItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelinePanelItem);
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t sub_1C243D45C()
{
  return type metadata accessor for MedicalRecordTimelinePanelItemCell();
}

void sub_1C243D464()
{
  sub_1C230C7E4(319, &qword_1EA2DF2E0, MEMORY[0x1E4F66300], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedicalRecordTimelinePanelItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelinePanelItemCell);
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.didSelectCell(_:in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.deselectionBehavior.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.sectionContext.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.sectionContext.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicalRecordTimelinePanelItemCell.sectionContext.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t sub_1C243D6E8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id MedicalRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR___HRMedicalRecordFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR___HRMedicalRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_1C243D798(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  objc_super v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    id v10 = a1;
    uint64_t v11 = sub_1C243DC88(v9);
LABEL_3:
    uint64_t v12 = v11;

    return v12;
  }
  self;
  uint64_t v14 = swift_dynamicCastObjCClass();
  if (v14)
  {
    uint64_t v15 = (void *)v14;
    unint64_t v16 = *(void **)&v1[OBJC_IVAR___HRMedicalRecordFormatter_store];
    uint64_t v17 = *(void *)&v1[OBJC_IVAR___HRMedicalRecordFormatter_context];
    uint64_t v18 = (objc_class *)type metadata accessor for CoverageRecordFormatter();
    uint64_t v19 = (char *)objc_allocWithZone(v18);
    *(void *)&v19[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter] = 0;
    *(void *)&v19[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter] = 0;
    *(void *)&v19[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store] = v16;
    *(void *)&v19[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context] = v17;
    v50.receiver = v19;
    v50.super_class = v18;
    id v20 = a1;
    id v21 = v16;
    id v22 = objc_msgSendSuper2(&v50, sel_init);
    uint64_t v23 = sub_1C22ED124(v15);
  }
  else
  {
    self;
    uint64_t v24 = swift_dynamicCastObjCClass();
    if (v24)
    {
      uint64_t v25 = (void *)v24;
      id v10 = a1;
      uint64_t v11 = sub_1C243DEB0(v25);
      goto LABEL_3;
    }
    self;
    uint64_t v26 = swift_dynamicCastObjCClass();
    if (v26)
    {
      uint64_t v27 = (void *)v26;
      id v10 = a1;
      uint64_t v11 = sub_1C243E068(v27);
      goto LABEL_3;
    }
    self;
    uint64_t v28 = swift_dynamicCastObjCClass();
    if (v28)
    {
      uint64_t v29 = (void *)v28;
      id v10 = a1;
      uint64_t v11 = sub_1C243E220(v29);
      goto LABEL_3;
    }
    sub_1C254E510();
    id v30 = a1;
    uint64_t v31 = v1;
    id v32 = v30;
    id v33 = v31;
    uint64_t v34 = sub_1C254E550();
    os_log_type_t v35 = sub_1C254FA40();
    int v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v37 = swift_slowAlloc();
      int v48 = v36;
      uint64_t v38 = v37;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v51 = ObjectType;
      uint64_t v52 = v49;
      *(_DWORD *)uint64_t v38 = 136315394;
      swift_getMetatypeMetadata();
      uint64_t v39 = sub_1C254F4F0();
      uint64_t v51 = sub_1C21AD354(v39, v40, &v52);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      v47[1] = v38 + 14;
      id v41 = objc_msgSend(v32, sel_sampleType);
      id v42 = objc_msgSend(v41, sel_identifier);

      uint64_t v43 = sub_1C254F470();
      unint64_t v45 = v44;

      uint64_t v51 = sub_1C21AD354(v43, v45, &v52);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v34, (os_log_type_t)v48, "%s: not generating structured items for sampleType %s", (uint8_t *)v38, 0x16u);
      uint64_t v46 = v49;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v46, -1, -1);
      MEMORY[0x1C875A0B0](v38, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return MEMORY[0x1E4FBC860];
  }
  return v23;
}

uint64_t sub_1C243DC88(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for AllergyRecordFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context] = v4;
  v16.receiver = v6;
  v16.super_class = v5;
  id v7 = v3;
  id v8 = objc_msgSendSuper2(&v16, sel_init);
  id v9 = objc_msgSend(a1, sel_reactions);
  if (v9)
  {
    id v10 = v9;
    sub_1C21AB51C(0, &qword_1EA2E0E30);
    unint64_t v11 = sub_1C254F710();

    id v12 = sub_1C230FE80();
    id v13 = v12;
    uint64_t v14 = sub_1C2310F50(v11, (uint64_t)v13);

    swift_bridgeObjectRelease();
    id v8 = v13;
  }
  else
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
  }

  return v14;
}

uint64_t sub_1C243DDEC(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for CoverageRecordFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context] = v4;
  v11.receiver = v6;
  v11.super_class = v5;
  id v7 = v3;
  id v8 = objc_msgSendSuper2(&v11, sel_init);
  uint64_t v9 = sub_1C22ED124(a1);

  return v9;
}

uint64_t sub_1C243DEB0(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for MedicationRecordFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context] = v4;
  v20.receiver = v6;
  v20.super_class = v5;
  id v7 = v3;
  id v8 = objc_msgSendSuper2(&v20, sel_init);
  id v9 = objc_msgSend(a1, sel_dosages);
  if (v9)
  {
    id v10 = v9;
    sub_1C21AB51C(0, &qword_1EA2DFC10);
    uint64_t v11 = sub_1C254F710();

    id v12 = sub_1C2421FF4();
    if (v11 < 0 || (v11 & 0x4000000000000000) != 0)
    {
      unint64_t v18 = swift_bridgeObjectRetain();
      uint64_t v13 = (uint64_t)sub_1C228FB74(v18);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    unint64_t v19 = v13;
    sub_1C23199C8((uint64_t *)&v19);
    unint64_t v14 = v19;
    id v15 = v12;
    uint64_t v16 = sub_1C231AF3C(v14);

    swift_bridgeObjectRelease();
    swift_release();

    id v8 = v15;
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }

  return v16;
}

uint64_t sub_1C243E068(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for MedicationOrderFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context] = v4;
  v20.receiver = v6;
  v20.super_class = v5;
  id v7 = v3;
  id v8 = objc_msgSendSuper2(&v20, sel_init);
  id v9 = objc_msgSend(a1, sel_dosages);
  if (v9)
  {
    id v10 = v9;
    sub_1C21AB51C(0, &qword_1EA2DFC10);
    uint64_t v11 = sub_1C254F710();

    id v12 = sub_1C2318D24();
    if (v11 < 0 || (v11 & 0x4000000000000000) != 0)
    {
      unint64_t v18 = swift_bridgeObjectRetain();
      uint64_t v13 = (uint64_t)sub_1C228FB74(v18);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    unint64_t v19 = v13;
    sub_1C23199C8((uint64_t *)&v19);
    unint64_t v14 = v19;
    id v15 = v12;
    uint64_t v16 = sub_1C231AF3C(v14);

    swift_bridgeObjectRelease();
    swift_release();

    id v8 = v15;
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }

  return v16;
}

uint64_t sub_1C243E220(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for MedicationDispenseFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v6[OBJC_IVAR___HRMedicationDispenseFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR___HRMedicationDispenseFormatter_context] = v4;
  v20.receiver = v6;
  v20.super_class = v5;
  id v7 = v3;
  id v8 = objc_msgSendSuper2(&v20, sel_init);
  id v9 = objc_msgSend(a1, sel_dosages);
  if (v9)
  {
    id v10 = v9;
    sub_1C21AB51C(0, &qword_1EA2DFC10);
    uint64_t v11 = sub_1C254F710();

    id v12 = sub_1C2511D64();
    if (v11 < 0 || (v11 & 0x4000000000000000) != 0)
    {
      unint64_t v18 = swift_bridgeObjectRetain();
      uint64_t v13 = (uint64_t)sub_1C228FB74(v18);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    unint64_t v19 = v13;
    sub_1C23199C8((uint64_t *)&v19);
    unint64_t v14 = v19;
    id v15 = v12;
    uint64_t v16 = sub_1C231AF3C(v14);

    swift_bridgeObjectRelease();
    swift_release();

    id v8 = v15;
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }

  return v16;
}

uint64_t sub_1C243E3D8(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for AllergyRecordFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter____lazy_storage___reactionFormatter] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  id v7 = v3;
  id v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_context];
  if (v9 == 1)
  {
    uint64_t v10 = sub_1C2310344(a1);
LABEL_5:
    uint64_t v11 = v10;

    return v11;
  }
  if (!v9)
  {
    uint64_t v10 = sub_1C231019C(a1);
    goto LABEL_5;
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t sub_1C243E4DC(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for ClinicalNoteRecordFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  id v7 = v3;
  id v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_context];
  if (v9 == 1)
  {
    uint64_t v10 = sub_1C24CEDE4(a1);
LABEL_5:
    uint64_t v11 = v10;

    return v11;
  }
  if (!v9)
  {
    uint64_t v10 = sub_1C24CE474(a1);
    goto LABEL_5;
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t sub_1C243E5D4(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for ConditionRecordFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  id v7 = v3;
  id v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI24ConditionRecordFormatter_context];
  if (v9 == 1)
  {
    unint64_t v10 = sub_1C2286BB0(a1);
LABEL_5:
    unint64_t v11 = v10;

    return v11;
  }
  if (!v9)
  {
    unint64_t v10 = sub_1C2286978(a1);
    goto LABEL_5;
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t sub_1C243E6CC(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for CoverageRecordFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___classificationFormatter] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter____lazy_storage___identifierFormatter] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  id v7 = v3;
  id v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_context];
  if (v9 == 1)
  {
    uint64_t v10 = sub_1C22EE2F8((uint64_t)a1);
LABEL_5:
    uint64_t v11 = v10;

    return v11;
  }
  if (!v9)
  {
    uint64_t v10 = sub_1C22ED70C(a1);
    goto LABEL_5;
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t sub_1C243E7DC(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for DiagnosticTestReportFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  id v7 = v3;
  id v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_context];
  if (v9 == 1)
  {
    uint64_t v10 = sub_1C23FF038(a1);
LABEL_5:
    uint64_t v11 = v10;

    return v11;
  }
  if (!v9)
  {
    uint64_t v10 = sub_1C23FECA8(a1);
    goto LABEL_5;
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t sub_1C243E8D4(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for DiagnosticTestResultFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context] = v4;
  v12.receiver = v6;
  v12.super_class = v5;
  id v7 = v3;
  id v8 = (char *)objc_msgSendSuper2(&v12, sel_init);
  if (*(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context] >= 2uLL)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_1C224EC04(a1);

    return v10;
  }
  return result;
}

uint64_t sub_1C243E9BC(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for MedicationRecordFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  id v7 = v3;
  id v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_context];
  if (v9 == 1)
  {
    unint64_t v10 = sub_1C2422920(a1);
LABEL_5:
    unint64_t v11 = v10;

    return v11;
  }
  if (!v9)
  {
    unint64_t v10 = sub_1C242236C(a1);
    goto LABEL_5;
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t sub_1C243EAC0(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for MedicationOrderFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  id v7 = v3;
  id v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context];
  if (v9 == 1)
  {
    unint64_t v10 = sub_1C231956C(a1);
LABEL_5:
    unint64_t v11 = v10;

    return v11;
  }
  if (!v9)
  {
    unint64_t v10 = sub_1C231909C(a1);
    goto LABEL_5;
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t sub_1C243EBC4(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for MedicationDispenseFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v6[OBJC_IVAR___HRMedicationDispenseFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR___HRMedicationDispenseFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  id v7 = v3;
  id v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR___HRMedicationDispenseFormatter_context];
  if (v9 == 1)
  {
    unint64_t v10 = sub_1C2512EF4(a1);
LABEL_5:
    unint64_t v11 = v10;

    return v11;
  }
  if (!v9)
  {
    unint64_t v10 = sub_1C2512068(a1);
    goto LABEL_5;
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t sub_1C243ECC8(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for ProcedureRecordFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  id v7 = v3;
  id v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_context];
  if (v9 == 1)
  {
    unint64_t v10 = sub_1C253FEFC(a1);
LABEL_5:
    unint64_t v11 = v10;

    return v11;
  }
  if (!v9)
  {
    unint64_t v10 = sub_1C253FB70(a1);
    goto LABEL_5;
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t sub_1C243EDC0(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for VaccinationRecordFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context] = v4;
  v13.receiver = v6;
  v13.super_class = v5;
  id v7 = v3;
  id v8 = (char *)objc_msgSendSuper2(&v13, sel_init);
  uint64_t v9 = *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context];
  if (v9 == 1)
  {
    unint64_t v10 = sub_1C23A1E78(a1);
LABEL_5:
    unint64_t v11 = v10;

    return v11;
  }
  if (!v9)
  {
    unint64_t v10 = sub_1C23A1C08(a1);
    goto LABEL_5;
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

id MedicalRecordFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR___HRMedicalRecordFormatter_store);
}

uint64_t MedicalRecordFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR___HRMedicalRecordFormatter_context);
}

id MedicalRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR___HRMedicalRecordFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR___HRMedicalRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MedicalRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1C243EF88(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    id v10 = a1;
    uint64_t v11 = sub_1C243E3D8(v9);
  }
  else
  {
    self;
    uint64_t v12 = swift_dynamicCastObjCClass();
    if (v12)
    {
      objc_super v13 = (void *)v12;
      id v10 = a1;
      uint64_t v11 = sub_1C243E4DC(v13);
    }
    else
    {
      self;
      uint64_t v14 = swift_dynamicCastObjCClass();
      if (v14)
      {
        id v15 = (void *)v14;
        id v10 = a1;
        uint64_t v11 = sub_1C243E7DC(v15);
      }
      else
      {
        self;
        uint64_t v16 = swift_dynamicCastObjCClass();
        if (v16)
        {
          uint64_t v17 = (void *)v16;
          id v10 = a1;
          uint64_t v11 = sub_1C243E8D4(v17);
        }
        else
        {
          self;
          uint64_t v18 = swift_dynamicCastObjCClass();
          if (v18)
          {
            unint64_t v19 = (void *)v18;
            id v10 = a1;
            uint64_t v11 = sub_1C243E5D4(v19);
          }
          else
          {
            self;
            uint64_t v20 = swift_dynamicCastObjCClass();
            if (v20)
            {
              id v21 = (void *)v20;
              id v10 = a1;
              uint64_t v11 = sub_1C243E9BC(v21);
            }
            else
            {
              self;
              uint64_t v22 = swift_dynamicCastObjCClass();
              if (v22)
              {
                uint64_t v23 = (void *)v22;
                id v10 = a1;
                uint64_t v11 = sub_1C243EAC0(v23);
              }
              else
              {
                self;
                uint64_t v24 = swift_dynamicCastObjCClass();
                if (v24)
                {
                  uint64_t v25 = (void *)v24;
                  id v10 = a1;
                  uint64_t v11 = sub_1C243EBC4(v25);
                }
                else
                {
                  self;
                  uint64_t v26 = swift_dynamicCastObjCClass();
                  if (v26)
                  {
                    uint64_t v27 = (void *)v26;
                    id v10 = a1;
                    uint64_t v11 = sub_1C243ECC8(v27);
                  }
                  else
                  {
                    self;
                    uint64_t v28 = swift_dynamicCastObjCClass();
                    if (v28)
                    {
                      uint64_t v29 = (void *)v28;
                      id v10 = a1;
                      uint64_t v11 = sub_1C243EDC0(v29);
                    }
                    else
                    {
                      self;
                      uint64_t v30 = swift_dynamicCastObjCClass();
                      if (v30)
                      {
                        uint64_t v31 = (void *)v30;
                        id v10 = a1;
                        uint64_t v11 = sub_1C243E6CC(v31);
                      }
                      else
                      {
                        sub_1C254E510();
                        id v32 = a1;
                        id v33 = v1;
                        id v34 = v32;
                        id v35 = v33;
                        int v36 = sub_1C254E550();
                        os_log_type_t v37 = sub_1C254FA20();
                        int v52 = v37;
                        if (os_log_type_enabled(v36, v37))
                        {
                          uint64_t v38 = swift_slowAlloc();
                          uint64_t v51 = swift_slowAlloc();
                          uint64_t v53 = ObjectType;
                          uint64_t v54 = v51;
                          *(_DWORD *)uint64_t v38 = 136315394;
                          swift_getMetatypeMetadata();
                          uint64_t v39 = sub_1C254F4F0();
                          uint64_t v53 = sub_1C21AD354(v39, v40, &v54);
                          sub_1C2550120();

                          swift_bridgeObjectRelease();
                          *(_WORD *)(v38 + 12) = 2080;
                          v50[1] = v38 + 14;
                          id v41 = objc_msgSend(v34, sel_sampleType);
                          id v42 = objc_msgSend(v41, sel_identifier);

                          uint64_t v43 = sub_1C254F470();
                          unint64_t v45 = v44;

                          uint64_t v53 = sub_1C21AD354(v43, v45, &v54);
                          sub_1C2550120();

                          swift_bridgeObjectRelease();
                          _os_log_impl(&dword_1C21A1000, v36, (os_log_type_t)v52, "%s: missing display item formatter for sampleType identifier:%s", (uint8_t *)v38, 0x16u);
                          uint64_t v46 = v51;
                          swift_arrayDestroy();
                          MEMORY[0x1C875A0B0](v46, -1, -1);
                          MEMORY[0x1C875A0B0](v38, -1, -1);
                        }
                        else
                        {
                        }
                        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
                        id v47 = sub_1C243F99C(v34);
                        id v10 = v47;
                        uint64_t v11 = MEMORY[0x1E4FBC860];
                        uint64_t v54 = MEMORY[0x1E4FBC860];
                        if (v47)
                        {
                          id v48 = v47;
                          MEMORY[0x1C8757C00]();
                          if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
                            sub_1C254F760();
                          sub_1C254F790();
                          sub_1C254F730();
                          uint64_t v11 = v54;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  return v11;
}

uint64_t sub_1C243F5FC(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for SignedClinicalDataRecordFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context] = v4;
  v15.receiver = v6;
  v15.super_class = v5;
  id v7 = v3;
  uint64_t v8 = (char *)objc_msgSendSuper2(&v15, sel_init);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  id v9 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_group), sel_mainRecord);
  if (!v9) {
    goto LABEL_4;
  }
  if (*(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context] < 2uLL)
  {
    id v10 = v9;
    unint64_t v11 = sub_1C23FA410(v9);
    sub_1C22723E8(v11);

LABEL_4:
    unint64_t v12 = sub_1C23FA698(a1);
    sub_1C22723E8(v12);

    return v14;
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t sub_1C243F730(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_store);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordFormatter_context);
  uint64_t v5 = (objc_class *)type metadata accessor for SignedClinicalDataRecordFormatter();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context] = v4;
  v11.receiver = v6;
  v11.super_class = v5;
  id v7 = v3;
  id v8 = objc_msgSendSuper2(&v11, sel_init);
  uint64_t v9 = sub_1C23F7C5C(a1);

  return v9;
}

id MedicalRecordFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MedicalRecordFormatter.init()()
{
}

id MedicalRecordFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C243F8B4()
{
  return *(id *)(*v0 + OBJC_IVAR___HRMedicalRecordFormatter_store);
}

uint64_t sub_1C243F8C8()
{
  return *(void *)(*v0 + OBJC_IVAR___HRMedicalRecordFormatter_context);
}

id sub_1C243F8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (objc_class *)type metadata accessor for MedicalRecordFormatter();
  id v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR___HRMedicalRecordFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR___HRMedicalRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1C243F950(void *a1)
{
  return sub_1C243EF88(a1);
}

uint64_t type metadata accessor for MedicalRecordFormatter()
{
  return self;
}

id sub_1C243F99C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_note);
  id v2 = v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_stripRTFOrHTML);

    uint64_t v4 = sub_1C254F470();
    unint64_t v6 = v5;

    uint64_t v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v7)
    {
      id v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v8 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      objc_super v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v9, 0xE000000000000000);

      id v10 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v10);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

unint64_t sub_1C243FBC0(uint64_t a1)
{
  unint64_t result = sub_1C243FBE8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C243FBE8()
{
  unint64_t result = qword_1EA2E3830;
  if (!qword_1EA2E3830)
  {
    type metadata accessor for MedicalRecordFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3830);
  }
  return result;
}

uint64_t method lookup function for MedicalRecordFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordFormatter);
}

uint64_t dispatch thunk of MedicalRecordFormatter.structuredItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalRecordFormatter.displayItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of MedicalRecordFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of MedicalRecordFormatter.attachmentItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of MedicalRecordFormatter.attachmentItemsTitle(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of MedicalRecordFormatter.signedClinicalDataWalletIntegrationDisplayItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

void *ConceptsDataSource.init(arrangedSections:isHidden:)(uint64_t a1, int a2)
{
  int v15 = a2;
  uint64_t v14 = a1;
  sub_1C2440364(0, &qword_1EA2E3838, MEMORY[0x1E4F663C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v8 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  objc_super v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[3] = 0;
  v2[4] = 0;
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v16, "MutableArray<");
  HIWORD(v16[1]) = -4864;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  sub_1C254DA40();
  swift_allocObject();
  sub_1C254D9F0();
  unint64_t v12 = (unsigned int *)MEMORY[0x1E4F663B0];
  if ((v15 & 1) == 0) {
    unint64_t v12 = (unsigned int *)MEMORY[0x1E4F663B8];
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *v12, v4);
  sub_1C2440364(0, (unint64_t *)&qword_1EA2E0D78, MEMORY[0x1E4F663D0]);
  swift_allocObject();
  _OWORD v2[2] = sub_1C254D5D0();
  return v2;
}

void sub_1C2440364(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C254DA40();
    unint64_t v7 = a3(a1, v6, MEMORY[0x1E4F66470]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t ConceptsDataSource.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C24403F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + 32))
  {
    uint64_t v6 = *(void *)(v1 + 24);
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
    sub_1C254CB30();
    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    v9[1] = v1;
    sub_1C25504F0();
    uint64_t v6 = v10;
    unint64_t v7 = v11;
    *(void *)(v1 + 24) = v10;
    *(void *)(v1 + 32) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_1C2440564(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C2440574(uint64_t *a1))(void *a1)
{
  a1[2] = v1;
  *a1 = sub_1C24403F4();
  a1[1] = v3;
  return sub_1C24405BC;
}

uint64_t sub_1C24405BC(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v1 = a1[2];
  *(void *)(v1 + 24) = *a1;
  *(void *)(v1 + 32) = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C24405D0()
{
  sub_1C2440364(0, &qword_1EA2E3838, MEMORY[0x1E4F663C0]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v11 - v6;
  sub_1C254D5A0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F663B0], v1);
  sub_1C254DA40();
  char v8 = sub_1C254D580();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v4, v1);
  v9(v7, v1);
  return v8 & 1;
}

uint64_t sub_1C244073C(char a1)
{
  uint64_t v39 = *v1;
  uint64_t v3 = sub_1C254E560();
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x1F4188790](v3);
  unint64_t v44 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, void))MEMORY[0x1E4F663C0];
  sub_1C2440364(0, &qword_1EA2E3838, MEMORY[0x1E4F663C0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v43 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  objc_super v13 = (char *)&v35 - v12;
  MEMORY[0x1F4188790](v11);
  int v15 = (char *)&v35 - v14;
  uint64_t v16 = (unsigned int *)MEMORY[0x1E4F663B0];
  if ((a1 & 1) == 0) {
    uint64_t v16 = (unsigned int *)MEMORY[0x1E4F663B8];
  }
  (*(void (**)(char *, void, uint64_t))(v8 + 104))((char *)&v35 - v14, *v16, v7);
  uint64_t v42 = v1[2];
  sub_1C254D5A0();
  sub_1C2441440(&qword_1EA2E3840, &qword_1EA2E3838, v5);
  char v17 = sub_1C254F420();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v13, v7);
  if ((v17 & 1) == 0)
  {
    sub_1C254E510();
    unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v19(v43, v15, v7);
    swift_retain_n();
    uint64_t v20 = sub_1C254E550();
    os_log_type_t v21 = sub_1C254FA00();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v38 = v19;
      uint64_t v24 = v23;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v46 = v37;
      *(_DWORD *)uint64_t v24 = 136446722;
      os_log_t v36 = v20;
      uint64_t v25 = sub_1C2550AA0();
      LODWORD(v39) = v22;
      uint64_t v45 = sub_1C21AD354(v25, v26, &v46);
      id v35 = v18;
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2082;
      sub_1C254D5A0();
      uint64_t v27 = sub_1C254F4F0();
      uint64_t v45 = sub_1C21AD354(v27, v28, &v46);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2082;
      uint64_t v29 = v43;
      v38(v13, v43, v7);
      uint64_t v30 = sub_1C254F4F0();
      uint64_t v45 = sub_1C21AD354(v30, v31, &v46);
      uint64_t v18 = v35;
      sub_1C2550120();
      swift_bridgeObjectRelease();
      v18(v29, v7);
      uint64_t v20 = v36;
      _os_log_impl(&dword_1C21A1000, v36, (os_log_type_t)v39, "[%{public}s] Changing visibility %{public}s -> %{public}s", (uint8_t *)v24, 0x20u);
      uint64_t v32 = v37;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v32, -1, -1);
      uint64_t v33 = v24;
      unint64_t v19 = v38;
      MEMORY[0x1C875A0B0](v33, -1, -1);
    }
    else
    {
      swift_release_n();
      v18(v43, v7);
    }

    (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v41);
    v19(v13, v15, v7);
    sub_1C254D5B0();
  }
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v7);
}

void (*sub_1C2440C64(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  sub_1C2440364(0, &qword_1EA2E3838, MEMORY[0x1E4F663C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  size_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = malloc(v6);
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = malloc(v6);
  *(void *)(a1 + 16) = v8;
  sub_1C254D5A0();
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F663B0], v4);
  sub_1C254DA40();
  char v9 = sub_1C254D580();
  uint64_t v10 = *(void (**)(void *, uint64_t))(v5 + 8);
  v10(v7, v4);
  v10(v8, v4);
  *(unsigned char *)(a1 + 24) = v9 & 1;
  return sub_1C2440DD4;
}

void sub_1C2440DD4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v1 = *(void **)(a1 + 16);
  sub_1C244073C(*(unsigned char *)(a1 + 24));
  free(v1);
  free(v2);
}

uint64_t ConceptsDataSource.dataSource.getter()
{
  return swift_retain();
}

uint64_t sub_1C2440E2C@<X0>(unsigned char *a1@<X8>)
{
  sub_1C2440364(0, &qword_1EA2E3838, MEMORY[0x1E4F663C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  size_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v13 - v8;
  sub_1C254D5A0();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F663B0], v3);
  sub_1C254DA40();
  char v10 = sub_1C254D580();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v11)(v9, v3);
  *a1 = v10 & 1;
  return result;
}

uint64_t ConceptsDataSource.__allocating_init(arrangedSections:isHidden:)(uint64_t a1, int a2)
{
  uint64_t v4 = swift_allocObject();
  ConceptsDataSource.init(arrangedSections:isHidden:)(a1, a2);
  return v4;
}

uint64_t ConceptsDataSource.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ConceptsDataSource.snapshot.getter()
{
  return sub_1C254D5E0();
}

uint64_t ConceptsDataSource.changeObservers.getter()
{
  return sub_1C254D5C0();
}

Swift::String_optional __swiftcall ConceptsDataSource.reuseIdentifierForItem(with:)(Swift::String with)
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, void))MEMORY[0x1E4F663D0];
  sub_1C2440364(0, (unint64_t *)&qword_1EA2E0D78, MEMORY[0x1E4F663D0]);
  sub_1C2441440(&qword_1EA2E3848, (unint64_t *)&qword_1EA2E0D78, v1);
  sub_1C254D7F0();
  swift_getObjectType();
  uint64_t v2 = sub_1C254D630();
  uint64_t v4 = v3;
  swift_unknownObjectRelease();
  uint64_t v5 = v2;
  size_t v6 = v4;
  result.value._object = v6;
  result.value._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t ConceptsDataSource.item(for:)()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void))MEMORY[0x1E4F663D0];
  sub_1C2440364(0, (unint64_t *)&qword_1EA2E0D78, MEMORY[0x1E4F663D0]);
  sub_1C2441440(&qword_1EA2E3848, (unint64_t *)&qword_1EA2E0D78, v0);
  sub_1C254D7F0();
  swift_getObjectType();
  sub_1C254D640();
  return swift_unknownObjectRelease();
}

uint64_t sub_1C2441240()
{
  return sub_1C254D5E0();
}

uint64_t sub_1C2441264()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void))MEMORY[0x1E4F663D0];
  sub_1C2440364(0, (unint64_t *)&qword_1EA2E0D78, MEMORY[0x1E4F663D0]);
  sub_1C2441440(&qword_1EA2E3848, (unint64_t *)&qword_1EA2E0D78, v0);
  sub_1C254D7F0();
  swift_getObjectType();
  sub_1C254D640();
  return swift_unknownObjectRelease();
}

uint64_t sub_1C2441344()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void))MEMORY[0x1E4F663D0];
  sub_1C2440364(0, (unint64_t *)&qword_1EA2E0D78, MEMORY[0x1E4F663D0]);
  sub_1C2441440(&qword_1EA2E3848, (unint64_t *)&qword_1EA2E0D78, v0);
  sub_1C254D7F0();
  swift_getObjectType();
  uint64_t v1 = sub_1C254D630();
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1C244141C()
{
  return sub_1C254D5C0();
}

uint64_t sub_1C2441440(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2440364(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2441484@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C24403F4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C24414B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  *(void *)(v4 + 24) = v3;
  *(void *)(v4 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C24414F8(char *a1)
{
  return sub_1C244073C(*a1);
}

uint64_t type metadata accessor for ConceptsDataSource()
{
  return self;
}

uint64_t method lookup function for ConceptsDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConceptsDataSource);
}

uint64_t dispatch thunk of ConceptsDataSource.identifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ConceptsDataSource.identifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ConceptsDataSource.identifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ConceptsDataSource.isHidden.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ConceptsDataSource.isHidden.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ConceptsDataSource.isHidden.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ConceptsDataSource.__allocating_init(arrangedSections:isHidden:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

id sub_1C2441648(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI64ClinicalSharingOnboardingNecessaryScopesNotPresentViewController_account] = a1;
  id v2 = a1;
  id v3 = objc_msgSend(v2, sel_gateway);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_title);

    uint64_t v6 = sub_1C254F470();
    uint64_t v8 = v7;

    if (qword_1EBB6D9B0 != -1) {
      swift_once();
    }
    id v9 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C2269E20();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C255CD90;
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 64) = sub_1C220D950();
    *(void *)(v10 + 32) = v6;
    *(void *)(v10 + 40) = v8;
    sub_1C254F4B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1EBB6D9B0 != -1) {
      swift_once();
    }
    id v11 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();
  }
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v12 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v13 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  v17.receiver = v1;
  v17.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingNecessaryScopesNotPresentViewController();
  id v15 = objc_msgSendSuper2(&v17, sel_initWithTitle_detailText_icon_contentLayout_, v13, v14, 0, 3, 0xE000000000000000);

  return v15;
}

void sub_1C24419A8()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingNecessaryScopesNotPresentViewController();
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  objc_msgSend(v0, sel_setModalInPresentation_, 1);
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v2 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v3 = objc_msgSend(self, sel_boldButton, 0xE000000000000000);
  uint64_t v4 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_forState_, v4, 0);

  objc_msgSend(v3, sel_addTarget_action_forControlEvents_, v0, sel_logInAgain_, 64);
  id v5 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v5, sel_addButton_, v3);

  id v6 = objc_msgSend(self, sel_linkButton);
  uint64_t v7 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setTitle_forState_, v7, 0);

  objc_msgSend(v6, sel_addTarget_action_forControlEvents_, v0, sel_abort_, 64);
  id v8 = objc_msgSend(v0, sel_buttonTray);
  objc_msgSend(v8, sel_addButton_, v6);
}

void sub_1C2441CB0()
{
  id v1 = v0;
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v7 = MEMORY[0x1F4188790](v6).n128_u64[0];
  objc_super v9 = (char *)v36 - v8;
  id v10 = objc_msgSend(v1, sel_navigationController, v7);
  if (v10)
  {
    id v40 = v10;
    id v11 = objc_msgSend(v10, sel_popViewControllerAnimated_, 1);
    if (v11)
    {

      id v12 = v40;
    }
    else
    {
      sub_1C254E510();
      id v24 = v1;
      uint64_t v25 = sub_1C254E550();
      os_log_type_t v26 = sub_1C254FA20();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v39 = v2;
        uint64_t v27 = swift_slowAlloc();
        uint64_t v38 = v3;
        unint64_t v28 = (uint8_t *)v27;
        uint64_t v37 = swift_slowAlloc();
        uint64_t v42 = v37;
        *(_DWORD *)unint64_t v28 = 136315138;
        v36[1] = v28 + 4;
        id v29 = v24;
        id v30 = objc_msgSend(v29, sel_description);
        uint64_t v31 = sub_1C254F470();
        id v32 = v24;
        unint64_t v34 = v33;

        uint64_t v41 = sub_1C21AD354(v31, v34, &v42);
        sub_1C2550120();

        id v24 = v32;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C21A1000, v25, v26, "%s: I was the first vc on a navigation controller, can't pop, attempting to abort", v28, 0xCu);
        uint64_t v35 = v37;
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v35, -1, -1);
        MEMORY[0x1C875A0B0](v28, -1, -1);

        (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      }
      objc_msgSend(v24, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
  }
  else
  {
    sub_1C254E510();
    id v13 = v1;
    uint64_t v14 = sub_1C254E550();
    os_log_type_t v15 = sub_1C254FA20();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v39 = v2;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v38 = v3;
      objc_super v17 = (uint8_t *)v16;
      id v40 = (id)swift_slowAlloc();
      uint64_t v42 = (uint64_t)v40;
      *(_DWORD *)objc_super v17 = 136315138;
      uint64_t v37 = (uint64_t)(v17 + 4);
      id v18 = v13;
      id v19 = objc_msgSend(v18, sel_description);
      uint64_t v20 = sub_1C254F470();
      unint64_t v22 = v21;

      uint64_t v41 = sub_1C21AD354(v20, v22, &v42);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v14, v15, "%s: not on a navigation controller, can't pop, attempting to abort", v17, 0xCu);
      id v23 = v40;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v23, -1, -1);
      MEMORY[0x1C875A0B0](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v39);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    objc_msgSend(v13, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

id sub_1C24422BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingNecessaryScopesNotPresentViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalSharingOnboardingNecessaryScopesNotPresentViewController()
{
  return self;
}

double static Double.approximateDays(_:)(double a1)
{
  return a1 * 24.0 * 60.0 * 60.0;
}

Swift::Double __swiftcall Double.init(approximateDays:)(Swift::Double approximateDays)
{
  return approximateDays * 24.0 * 60.0 * 60.0;
}

double static Double.hours(_:)(double a1)
{
  return a1 * 60.0 * 60.0;
}

Swift::Double __swiftcall Double.init(hours:)(Swift::Double hours)
{
  return hours * 60.0 * 60.0;
}

double static Double.minutes(_:)(double a1)
{
  return a1 * 60.0;
}

Swift::Double __swiftcall Double.init(minutes:)(Swift::Double minutes)
{
  return minutes * 60.0;
}

void sub_1C24423A4()
{
  sub_1C21AB7A0(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&aBlock[-1] - v2;
  sub_1C2248028(v0, (uint64_t)&v29);
  switch(v33)
  {
    case 1:
      id v12 = v29;
      id v13 = v30;
      uint64_t v14 = v31;
      id v15 = v32;
      id v16 = v32;
      id v17 = v12;
      id v5 = v13;
      id v6 = v14;
      objc_msgSend(v17, sel_presentViewController_animated_completion_, v5, 1, 0);
      if (v15)
      {
      }
      else
      {
      }
      break;
    case 2:
      id v18 = v29;
      sub_1C21AB51C(0, &qword_1EA2DE3F0);
      id v5 = v18;
      id v6 = (id)sub_1C254F700();
      objc_msgSend(v5, sel_setViewControllers_animated_, v6, 1);
      break;
    case 3:
      id v19 = v29;
      uint64_t v20 = v30;
      uint64_t v21 = sub_1C254F840();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v3, 1, 1, v21);
      sub_1C254F820();
      id v22 = v19;
      id v23 = v20;
      id v6 = v22;
      id v5 = v23;
      uint64_t v24 = sub_1C254F810();
      uint64_t v25 = (void *)swift_allocObject();
      uint64_t v26 = MEMORY[0x1E4FBCFD8];
      uint64_t v25[2] = v24;
      v25[3] = v26;
      v25[4] = v6;
      void v25[5] = v5;
      sub_1C24D0A0C((uint64_t)v3, (uint64_t)&unk_1EA2E38D0, (uint64_t)v25);
      swift_release();
      break;
    default:
      uint64_t v4 = v30;
      id v5 = v29;
      id v6 = v4;
      id v7 = objc_msgSend(v5, sel_presentedViewController);
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = swift_allocObject();
        *(void *)(v9 + 16) = v5;
        *(void *)(v9 + 24) = v6;
        aBlock[4] = sub_1C244C964;
        aBlock[5] = v9;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1C224E544;
        aBlock[3] = &block_descriptor_46_0;
        id v10 = _Block_copy(aBlock);
        id v11 = v5;
        id v5 = v6;
        swift_release();
        objc_msgSend(v8, sel_dismissViewControllerAnimated_completion_, 0, v10);
        _Block_release(v10);

        id v6 = v8;
      }
      else
      {
        objc_msgSend(v5, sel_presentViewController_animated_completion_, v6, 1, 0);
      }
      break;
  }
}

uint64_t sub_1C2442750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = a4;
  _OWORD v5[3] = a5;
  v5[4] = sub_1C254F820();
  v5[5] = sub_1C254F810();
  type metadata accessor for HealthRecordsViewRouter();
  id v6 = (void *)swift_task_alloc();
  v5[6] = v6;
  *id v6 = v5;
  v6[1] = sub_1C244281C;
  return sub_1C24C5E98(0xD000000000000018, 0x80000001C2585E50);
}

uint64_t sub_1C244281C()
{
  uint64_t v1 = *v0;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  *uint64_t v2 = v4;
  v2[1] = sub_1C2442950;
  return MEMORY[0x1F4187DE0](500000000);
}

uint64_t sub_1C2442950()
{
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v1 = sub_1C254F7D0();
    uint64_t v3 = v2;
    uint64_t v4 = sub_1C244DB74;
  }
  else
  {
    uint64_t v1 = sub_1C254F7D0();
    uint64_t v3 = v5;
    uint64_t v4 = sub_1C2442AD4;
  }
  return MEMORY[0x1F4188298](v4, v1, v3);
}

uint64_t sub_1C2442AD4()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v0[3];
  swift_release();
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v2, 1, 0);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_1C2442B54(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 8);
  if (!v4) {
    goto LABEL_27;
  }
  id v5 = *(id *)(v1 + 16);
  if (!v5) {
    goto LABEL_6;
  }
  id v6 = v5;
  id v7 = (id)v4;
  id v8 = objc_msgSend(v7, sel_viewControllers);
  sub_1C21AB51C(0, &qword_1EA2DE3F0);
  unint64_t v9 = sub_1C254F710();

  sub_1C252EBF4((uint64_t)v6, v9);
  uint64_t v11 = v10;
  char v13 = v12;

  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0 || v11)
  {
LABEL_6:
    uint64_t v14 = *(void **)(v2 + 24);
    if (v14)
    {
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
      id v17 = (id)v4;
      id v18 = v14;
      char v19 = sub_1C254FF70();

      if (v19)
      {
        if (!v5)
        {

          goto LABEL_27;
        }
        id v5 = v5;
        id v62 = v17;
        id v20 = objc_msgSend(v62, sel_viewControllers);
        sub_1C21AB51C(0, &qword_1EA2DE3F0);
        unint64_t v21 = sub_1C254F710();

        sub_1C252EBF4((uint64_t)v5, v21);
        uint64_t v11 = v22;
        char v24 = v23;

        swift_bridgeObjectRelease();
        if (v24)
        {
        }
        else
        {
          sub_1C244D448(v2 + 32, (uint64_t)&v65, &qword_1EA2E38D8, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
          sub_1C244D448((uint64_t)&v65, (uint64_t)&v66, &qword_1EA2E38D8, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
          uint64_t v25 = v66;
          if (v66)
          {
            id v26 = v18;
            sub_1C21FFFEC(&v65);
            id v27 = objc_msgSend(v26, sel_viewControllers);
            unint64_t v28 = sub_1C254F710();

            sub_1C252EBF4(v25, v28);
            id v30 = v29;
            char v32 = v31;
            swift_bridgeObjectRelease();

            sub_1C244D270(&v65);
            if ((v32 & 1) == 0)
            {
              uint64_t v15 = 0;
              char v16 = 0;
              uint64_t v14 = v30;
              goto LABEL_33;
            }
          }
        }
LABEL_19:
        id v33 = v5;
        id v34 = (id)v4;
        id v35 = objc_msgSend(v34, sel_viewControllers);
        sub_1C21AB51C(0, &qword_1EA2DE3F0);
        unint64_t v36 = sub_1C254F710();

        sub_1C252EBF4((uint64_t)v33, v36);
        uint64_t v11 = v37;
        char v39 = v38;

        swift_bridgeObjectRelease();
        if (v14)
        {
          if ((v39 & 1) == 0)
          {
            sub_1C244D448(v2 + 32, (uint64_t)&v64, &qword_1EA2E38D8, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
            sub_1C244D448((uint64_t)&v64, (uint64_t)&v67, &qword_1EA2E38D8, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
            uint64_t v40 = v67;
            if (v67)
            {
              id v60 = v34;
              id v61 = v14;
              sub_1C21FFFEC(&v64);
              id v41 = objc_msgSend(v61, sel_viewControllers);
              unint64_t v42 = sub_1C254F710();

              sub_1C252EBF4(v40, v42);
              uint64_t v15 = v43;
              LOBYTE(v41) = v44;
              swift_bridgeObjectRelease();

              sub_1C244D270(&v64);
              if ((v41 & 1) == 0)
              {
                id v45 = v61;
                char v16 = 1;
                goto LABEL_33;
              }
            }
          }
        }
        id v46 = v33;
        id v47 = v34;
        id v48 = objc_msgSend(v47, sel_viewControllers);
        unint64_t v49 = sub_1C254F710();

        sub_1C252EBF4((uint64_t)v46, v49);
        uint64_t v11 = v50;
        char v52 = v51;

        swift_bridgeObjectRelease();
        if ((v52 & 1) == 0)
        {
          id v53 = v47;
          uint64_t v14 = 0;
          uint64_t v15 = 0;
          char v16 = 2;
          goto LABEL_33;
        }
LABEL_27:
        uint64_t v4 = *(void *)(v2 + 24);
        if (v4)
        {
          sub_1C244D448(v2 + 32, (uint64_t)&v63, &qword_1EA2E38D8, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
          sub_1C244D448((uint64_t)&v63, (uint64_t)&v68, &qword_1EA2E38D8, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
          uint64_t v11 = v68;
          if (!v68)
          {
LABEL_32:
            uint64_t v14 = 0;
            uint64_t v15 = 0;
            char v16 = 4;
            uint64_t v4 = 1;
            goto LABEL_33;
          }
          sub_1C21FFFEC(&v63);
          id v54 = (id)v4;
          id v55 = objc_msgSend(v54, sel_viewControllers);
          sub_1C21AB51C(0, &qword_1EA2DE3F0);
          unint64_t v56 = sub_1C254F710();

          sub_1C252EBF4(v11, v56);
          uint64_t v11 = v57;
          LOBYTE(v55) = v58;
          swift_bridgeObjectRelease();

          sub_1C244D270(&v63);
          if ((v55 & 1) == 0)
          {
            id v59 = v54;
            uint64_t v14 = 0;
            uint64_t v15 = 0;
            char v16 = 3;
            goto LABEL_33;
          }
        }
        uint64_t v11 = 0;
        goto LABEL_32;
      }
    }
    if (!v5) {
      goto LABEL_27;
    }
    goto LABEL_19;
  }
  uint64_t v4 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  char v16 = 4;
LABEL_33:
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v14;
  *(void *)(a1 + 24) = v15;
  *(unsigned char *)(a1 + 32) = v16;
}

void sub_1C24430D4(uint64_t a1)
{
  uint64_t v3 = a1 - 1;
  if (__OFSUB__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    if (v3 < 0) {
      return;
    }
    uint64_t v2 = &selRef_setActionTitle_;
    id v4 = objc_msgSend(v1, sel_viewControllers);
    sub_1C21AB51C(0, &qword_1EA2DE3F0);
    unint64_t v5 = sub_1C254F710();

    if (!(v5 >> 62))
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C2550620();
  swift_bridgeObjectRelease();
LABEL_5:
  swift_bridgeObjectRelease();
  if (v3 < v6)
  {
    id v7 = [v1 v2[161]];
    uint64_t v8 = sub_1C254F710();

    if ((v8 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1C87588E0](v3, v8);
      goto LABEL_9;
    }
    if ((unint64_t)v3 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v9 = *(id *)(v8 + 8 * v3 + 32);
LABEL_9:
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
  }
}

uint64_t sub_1C2443220()
{
  swift_unknownObjectRelease();
  sub_1C244D3EC(v0+ OBJC_IVAR____TtCC15HealthRecordsUI29ClinicalAccountUpgradeManagerP33_C1E9680787D6FC085CDD3D854B2FD8D912SessionState_loginSessionState, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t sub_1C2443284()
{
  v1[7] = v0;
  uint64_t v2 = sub_1C254CB40();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v3 = sub_1C254E560();
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C24433B0, 0, 0);
}

uint64_t sub_1C24433B0()
{
  id v27 = v0;
  sub_1C254E510();
  swift_retain_n();
  uint64_t v1 = sub_1C254E550();
  os_log_type_t v2 = sub_1C254FA40();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v23 = v0[12];
    uint64_t v24 = v0[11];
    uint64_t v25 = v0[14];
    os_log_type_t type = v2;
    uint64_t v3 = v0[10];
    uint64_t v20 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v4 = v0[8];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = v21;
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v7 = *(void *)(v5 + 48);
    unint64_t v8 = *(void *)(v5 + 56);
    swift_bridgeObjectRetain();
    v0[5] = sub_1C21AD354(v7, v8, &v26);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    id v9 = objc_msgSend(*(id *)(v5 + 16), sel_identifier);
    sub_1C254CB20();

    sub_1C244C700((unint64_t *)&qword_1EA2DE1E0);
    uint64_t v10 = v4;
    uint64_t v11 = sub_1C2550810();
    unint64_t v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v3, v10);
    v0[6] = sub_1C21AD354(v11, v13, &v26);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C21A1000, v1, type, "%s beginning upgrade of account %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v21, -1, -1);
    MEMORY[0x1C875A0B0](v6, -1, -1);

    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v14(v25, v24);
  }
  else
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[11];
    uint64_t v17 = v0[12];
    swift_release_n();

    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v14(v15, v16);
  }
  v0[15] = v14;
  id v18 = (void *)swift_task_alloc();
  v0[16] = v18;
  *id v18 = v0;
  v18[1] = sub_1C24436D0;
  unsigned char v18[16] = v0[7];
  return MEMORY[0x1F4188298](sub_1C24440CC, 0, 0);
}

uint64_t sub_1C24436D0(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[17] = a1;
  v4[18] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1C2443ADC, 0, 0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v4[19] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_1C2443854;
    return sub_1C2444668(a1);
  }
}

uint64_t sub_1C2443854()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1C2443DC0;
  }
  else {
    os_log_type_t v2 = sub_1C2443968;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2443968()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C24439E4()
{
  uint64_t v1 = *(void **)(v0 + 168);
  swift_release();
  sub_1C24450E4(v1);

  return MEMORY[0x1F4188298](sub_1C2443A60, 0, 0);
}

uint64_t sub_1C2443A60()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2443ADC()
{
  uint64_t v25 = v0;
  uint64_t v1 = (void *)v0[18];
  v0[21] = v1;
  sub_1C254E510();
  swift_retain();
  id v2 = v1;
  swift_retain();
  id v3 = v1;
  uint64_t v4 = sub_1C254E550();
  os_log_type_t v5 = sub_1C254FA20();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v22 = v0[13];
    uint64_t v23 = (void (*)(uint64_t, uint64_t))v0[15];
    uint64_t v21 = v0[11];
    uint64_t v6 = v0[7];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = v20;
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v8 = *(void *)(v6 + 48);
    unint64_t v9 = *(void *)(v6 + 56);
    swift_bridgeObjectRetain();
    v0[2] = sub_1C21AD354(v8, v9, &v24);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[3] = v1;
    id v10 = v1;
    sub_1C2206F9C();
    uint64_t v11 = sub_1C254F4F0();
    v0[4] = sub_1C21AD354(v11, v12, &v24);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v4, v5, "%s failed to initiate upgrading account: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v20, -1, -1);
    MEMORY[0x1C875A0B0](v7, -1, -1);

    v23(v22, v21);
  }
  else
  {
    unint64_t v13 = (void (*)(uint64_t, uint64_t))v0[15];
    uint64_t v14 = v0[13];
    uint64_t v15 = v0[11];
    swift_release_n();

    v13(v14, v15);
  }
  sub_1C254F820();
  id v16 = v1;
  v0[22] = sub_1C254F810();
  uint64_t v18 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C24439E4, v18, v17);
}

uint64_t sub_1C2443DC0()
{
  uint64_t v25 = v0;

  uint64_t v1 = *(void **)(v0 + 160);
  *(void *)(v0 + 168) = v1;
  sub_1C254E510();
  swift_retain();
  id v2 = v1;
  swift_retain();
  id v3 = v1;
  uint64_t v4 = sub_1C254E550();
  os_log_type_t v5 = sub_1C254FA20();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v22 = *(void *)(v0 + 104);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
    uint64_t v21 = *(void *)(v0 + 88);
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = v20;
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v8 = *(void *)(v6 + 48);
    unint64_t v9 = *(void *)(v6 + 56);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 16) = sub_1C21AD354(v8, v9, &v24);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    *(void *)(v0 + 24) = v1;
    id v10 = v1;
    sub_1C2206F9C();
    uint64_t v11 = sub_1C254F4F0();
    *(void *)(v0 + 32) = sub_1C21AD354(v11, v12, &v24);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v4, v5, "%s failed to initiate upgrading account: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v20, -1, -1);
    MEMORY[0x1C875A0B0](v7, -1, -1);

    v23(v22, v21);
  }
  else
  {
    unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 104);
    uint64_t v15 = *(void *)(v0 + 88);
    swift_release_n();

    v13(v14, v15);
  }
  sub_1C254F820();
  id v16 = v1;
  *(void *)(v0 + 176) = sub_1C254F810();
  uint64_t v18 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C24439E4, v18, v17);
}

uint64_t sub_1C24440AC()
{
  *(void *)(v1 + 128) = v0;
  return MEMORY[0x1F4188298](sub_1C24440CC, 0, 0);
}

uint64_t sub_1C24440CC()
{
  id v1 = objc_msgSend(*(id *)(v0[16] + 16), sel_gateway);
  v0[17] = v1;
  if (v1)
  {
    id v2 = v1;
    id v3 = objc_msgSend(v1, sel_newerSupportedGatewayVersion);
    v0[18] = v3;
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = objc_msgSend(*(id *)(*(void *)(v0[16] + 24) + 24), sel_healthStore);
      id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67760]), sel_initWithHealthStore_, v5);
      v0[19] = v6;

      id v7 = objc_msgSend(v4, sel_gatewayID);
      if (!v7)
      {
        sub_1C254F470();
        id v7 = (id)sub_1C254F430();
        swift_bridgeObjectRelease();
      }
      v0[20] = v7;
      id v8 = objc_msgSend(v4, sel_gatewayBatchID);
      if (!v8)
      {
        sub_1C254F470();
        id v8 = (id)sub_1C254F430();
        swift_bridgeObjectRelease();
      }
      v0[21] = v8;
      v0[2] = v0;
      v0[7] = v0 + 15;
      v0[3] = sub_1C244438C;
      uint64_t v9 = swift_continuation_init();
      v0[10] = MEMORY[0x1E4F143A8];
      v0[11] = 0x40000000;
      v0[12] = sub_1C223F118;
      v0[13] = &block_descriptor_55;
      v0[14] = v9;
      objc_msgSend(v6, sel_fetchRemoteGatewayWithExternalID_batchID_completion_, v7, v8, v0 + 10);
      return MEMORY[0x1F41881E8](v0 + 2);
    }
    sub_1C244D4B4();
    swift_allocError();
    *uint64_t v11 = 2;
    swift_willThrow();
  }
  else
  {
    sub_1C244D4B4();
    swift_allocError();
    *id v10 = 1;
    swift_willThrow();
  }
  unint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1C244438C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 176) = v1;
  if (v1) {
    id v2 = sub_1C24445D0;
  }
  else {
    id v2 = sub_1C244449C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C244449C()
{
  uint64_t v1 = *(void **)(v0 + 160);
  id v2 = *(void **)(v0 + 120);

  id v3 = objc_msgSend(v2, sel_status);
  uint64_t v4 = *(void **)(v0 + 144);
  id v5 = *(void **)(v0 + 152);
  id v6 = *(void **)(v0 + 136);
  if (v3 == (id)1)
  {

    id v7 = *(uint64_t (**)(void *))(v0 + 8);
    return v7(v2);
  }
  else
  {
    sub_1C244D4B4();
    swift_allocError();
    *uint64_t v9 = 3;
    swift_willThrow();

    id v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_1C24445D0()
{
  uint64_t v1 = (void *)v0[21];
  id v3 = (void *)v0[19];
  id v2 = (void *)v0[20];
  id v5 = (void *)v0[17];
  uint64_t v4 = (void *)v0[18];
  swift_willThrow();

  id v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1C2444668(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  sub_1C21AB7A0(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  v2[18] = swift_task_alloc();
  sub_1C254F820();
  v2[19] = sub_1C254F810();
  uint64_t v4 = sub_1C254F7D0();
  v2[20] = v4;
  v2[21] = v3;
  return MEMORY[0x1F4188298](sub_1C2444748, v4, v3);
}

uint64_t sub_1C2444748()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = *(void *)(v0[17] + 40);
  v0[22] = v2;
  uint64_t v3 = sub_1C254CB40();
  v0[23] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  id v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v0[24] = v5;
  v0[25] = (v4 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v5(v1, 1, 1, v3);
  return MEMORY[0x1F4188298](sub_1C2444804, v2, 0);
}

uint64_t sub_1C2444804()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[18];
  uint64_t v3 = OBJC_IVAR____TtCC15HealthRecordsUI29ClinicalAccountUpgradeManagerP33_C1E9680787D6FC085CDD3D854B2FD8D912SessionState_loginSessionState;
  v0[26] = OBJC_IVAR____TtCC15HealthRecordsUI29ClinicalAccountUpgradeManagerP33_C1E9680787D6FC085CDD3D854B2FD8D912SessionState_loginSessionState;
  uint64_t v4 = v1 + v3;
  swift_beginAccess();
  sub_1C244BFEC(v2, v4);
  swift_endAccess();
  sub_1C244D3EC(v2, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  uint64_t v5 = v0[20];
  uint64_t v6 = v0[21];
  return MEMORY[0x1F4188298](sub_1C24448D0, v5, v6);
}

uint64_t sub_1C24448D0()
{
  Class super_class = v0[8].super_class;
  uint64_t v2 = (void *)*((void *)super_class + 4);
  id v3 = *(id *)(*((void *)super_class + 3) + 24);
  id v4 = objc_msgSend(v2, sel_hk_window);
  if (!v4) {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1F48]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  }
  uint64_t v5 = (objc_class *)type metadata accessor for ClinicalAccountLoginSession();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR___HRUIClinicalAccountLoginSession_authSession] = 0;
  *(void *)&v6[OBJC_IVAR___HRUIClinicalAccountLoginSession_accountStore] = v3;
  *(void *)&v6[OBJC_IVAR___HRUIClinicalAccountLoginSession_presentationAnchor] = v4;
  *(void *)&v6[OBJC_IVAR___HRUIClinicalAccountLoginSession_funnelContext] = 8;
  v0[7].id receiver = v6;
  v0[7].Class super_class = v5;
  v0[13].Class super_class = (Class)objc_msgSendSuper2(v0 + 7, sel_init);
  id v7 = objc_msgSend(self, sel_defaultCenter);
  v0[14].id receiver = v7;
  if (qword_1EA2DD768 != -1) {
    swift_once();
  }
  id receiver = v0[11].receiver;
  uint64_t v9 = qword_1EA2E2880;
  id v10 = objc_msgSend(self, sel_mainQueue);
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  v0[3].id receiver = sub_1C244C0A4;
  v0[3].Class super_class = (Class)v11;
  v0[1].id receiver = (id)MEMORY[0x1E4F143A8];
  v0[1].Class super_class = (Class)1107296256;
  v0[2].id receiver = sub_1C2445B58;
  v0[2].Class super_class = (Class)&block_descriptor_58;
  unint64_t v12 = _Block_copy(&v0[1]);
  swift_release();
  v0[14].Class super_class = (Class)objc_msgSend(v7, sel_addObserverForName_object_queue_usingBlock_, v9, 0, v10, v12);
  _Block_release(v12);

  swift_unknownObjectRetain();
  return MEMORY[0x1F4188298](sub_1C2444B78, receiver, 0);
}

uint64_t sub_1C2444B78()
{
  uint64_t v1 = *(void *)(v0 + 176);
  if (*(void *)(v1 + 112)) {
    objc_msgSend(*(id *)(v0 + 224), sel_removeObserver_);
  }
  *(void *)(v1 + 112) = *(void *)(v0 + 232);
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  return MEMORY[0x1F4188298](sub_1C2444C08, v2, v3);
}

uint64_t sub_1C2444C08()
{
  uint64_t v2 = (void *)v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = swift_allocObject();
  v0[30] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  swift_retain();
  id v4 = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[31] = v5;
  void *v5 = v0;
  v5[1] = sub_1C2444CFC;
  uint64_t v6 = v0[16];
  return sub_1C223E1BC(v6, 0, 0, (uint64_t)sub_1C244C0F4, v3);
}

uint64_t sub_1C2444CFC(uint64_t a1)
{
  id v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 256) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[20];
    uint64_t v6 = v4[21];
    id v7 = sub_1C2445048;
  }
  else
  {
    swift_release();
    v4[33] = a1;
    uint64_t v5 = v4[20];
    uint64_t v6 = v4[21];
    id v7 = sub_1C2444E2C;
  }
  return MEMORY[0x1F4188298](v7, v5, v6);
}

uint64_t sub_1C2444E2C()
{
  uint64_t v1 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 144);
  id v5 = objc_msgSend(*(id *)(v0 + 264), sel_state);
  sub_1C254CB20();

  v1(v4, 0, 1, v3);
  return MEMORY[0x1F4188298](sub_1C2444EE4, v2, 0);
}

uint64_t sub_1C2444EE4()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[22] + v0[26];
  swift_beginAccess();
  sub_1C244BFEC(v1, v2);
  swift_endAccess();
  sub_1C244D3EC(v1, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[21];
  return MEMORY[0x1F4188298](sub_1C2444FA8, v3, v4);
}

uint64_t sub_1C2444FA8()
{
  uint64_t v1 = *(void **)(v0 + 224);
  uint64_t v2 = *(void **)(v0 + 216);

  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C2445048()
{
  uint64_t v2 = (void *)v0[27];
  uint64_t v1 = (void *)v0[28];
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_1C24450E4(void *a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v4 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v5 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (a1) {
    a1 = (void *)sub_1C254C810();
  }
  id v7 = objc_msgSend(self, sel_basicAlertControllerWithTitle_message_internalError_, v4, v6, a1, 0xE000000000000000);

  objc_msgSend(*(id *)(v1 + 32), sel_presentViewController_animated_completion_, v7, 1, 0);
}

uint64_t sub_1C24452E0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2445340();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2445340()
{
  uint64_t v1 = v0;
  sub_1C21AB7A0(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v67 = (char *)&v57 - v3;
  uint64_t v4 = sub_1C254E560();
  uint64_t v65 = *(void *)(v4 - 8);
  uint64_t v66 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB7A0(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  uint64_t v63 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v57 - v13;
  MEMORY[0x1F4188790](v12);
  id v16 = (char *)&v57 - v15;
  uint64_t v17 = sub_1C254C570();
  if (!v17)
  {
    long long v71 = 0u;
    long long v72 = 0u;
LABEL_11:
    sub_1C224E3A4((uint64_t)&v71);
    uint64_t v64 = 0;
    goto LABEL_12;
  }
  uint64_t v18 = v17;
  *(void *)&long long v71 = 0xD00000000000002DLL;
  *((void *)&v71 + 1) = 0x80000001C2577040;
  sub_1C2550330();
  if (*(void *)(v18 + 16) && (unint64_t v19 = sub_1C2457670((uint64_t)v70), (v20 & 1) != 0))
  {
    sub_1C21A9A38(*(void *)(v18 + 56) + 32 * v19, (uint64_t)&v71);
  }
  else
  {
    long long v71 = 0u;
    long long v72 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1C2298B34((uint64_t)v70);
  if (!*((void *)&v72 + 1)) {
    goto LABEL_11;
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
  int v21 = swift_dynamicCast();
  uint64_t v22 = v70[0];
  if (!v21) {
    uint64_t v22 = 0;
  }
  uint64_t v64 = v22;
LABEL_12:
  uint64_t v23 = sub_1C254C570();
  if (v23)
  {
    uint64_t v24 = v23;
    unint64_t v68 = 0xD00000000000002BLL;
    unint64_t v69 = 0x80000001C2577070;
    sub_1C2550330();
    if (*(void *)(v24 + 16) && (unint64_t v25 = sub_1C2457670((uint64_t)v70), (v26 & 1) != 0))
    {
      sub_1C21A9A38(*(void *)(v24 + 56) + 32 * v25, (uint64_t)&v71);
    }
    else
    {
      long long v71 = 0u;
      long long v72 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1C2298B34((uint64_t)v70);
    if (*((void *)&v72 + 1))
    {
      uint64_t v27 = sub_1C254CB40();
      int v28 = swift_dynamicCast();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v16, v28 ^ 1u, 1, v27);
      goto LABEL_21;
    }
  }
  else
  {
    long long v71 = 0u;
    long long v72 = 0u;
  }
  sub_1C224E3A4((uint64_t)&v71);
  uint64_t v29 = sub_1C254CB40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v16, 1, 1, v29);
LABEL_21:
  uint64_t v30 = sub_1C254C570();
  if (v30)
  {
    uint64_t v31 = v30;
    *(void *)&long long v71 = 0xD00000000000002BLL;
    *((void *)&v71 + 1) = 0x80000001C25770A0;
    sub_1C2550330();
    if (*(void *)(v31 + 16) && (unint64_t v32 = sub_1C2457670((uint64_t)v70), (v33 & 1) != 0))
    {
      sub_1C21A9A38(*(void *)(v31 + 56) + 32 * v32, (uint64_t)&v71);
    }
    else
    {
      long long v71 = 0u;
      long long v72 = 0u;
    }
    uint64_t v34 = (uint64_t)v14;
    swift_bridgeObjectRelease();
    sub_1C2298B34((uint64_t)v70);
    if (*((void *)&v72 + 1))
    {
      sub_1C2206F9C();
      if (swift_dynamicCast()) {
        uint64_t v35 = v70[0];
      }
      else {
        uint64_t v35 = 0;
      }
      goto LABEL_32;
    }
  }
  else
  {
    long long v71 = 0u;
    long long v72 = 0u;
    uint64_t v34 = (uint64_t)v14;
  }
  sub_1C224E3A4((uint64_t)&v71);
  uint64_t v35 = 0;
LABEL_32:
  sub_1C254E510();
  sub_1C21F4914((uint64_t)v16, v34);
  swift_retain();
  unint64_t v36 = sub_1C254E550();
  uint64_t v37 = v6;
  os_log_type_t v38 = sub_1C254FA40();
  if (os_log_type_enabled(v36, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v59 = v35;
    uint64_t v40 = v39;
    uint64_t v41 = swift_slowAlloc();
    uint64_t v62 = v9;
    char v58 = v37;
    uint64_t v42 = v41;
    v70[0] = v41;
    *(_DWORD *)uint64_t v40 = 136315394;
    id v60 = v16;
    uint64_t v61 = v8;
    uint64_t v43 = v34;
    uint64_t v45 = *(void *)(v1 + 48);
    unint64_t v44 = *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    *(void *)&long long v71 = sub_1C21AD354(v45, v44, v70);
    sub_1C2550120();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    sub_1C21F4914(v43, (uint64_t)v11);
    uint64_t v46 = sub_1C254F4F0();
    *(void *)&long long v71 = sub_1C21AD354(v46, v47, v70);
    id v16 = v60;
    sub_1C2550120();
    uint64_t v8 = v61;
    swift_bridgeObjectRelease();
    sub_1C244D3EC(v43, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
    _os_log_impl(&dword_1C21A1000, v36, v38, "%s received oauth completion notification for login state %s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    uint64_t v9 = v62;
    MEMORY[0x1C875A0B0](v42, -1, -1);
    uint64_t v48 = v40;
    uint64_t v35 = v59;
    MEMORY[0x1C875A0B0](v48, -1, -1);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v58, v66);
  }
  else
  {
    swift_release();
    sub_1C244D3EC(v34, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v37, v66);
  }
  uint64_t v49 = sub_1C254F840();
  uint64_t v50 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v67, 1, 1, v49);
  sub_1C21F4914((uint64_t)v16, (uint64_t)v11);
  unint64_t v51 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v52 = (v9 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v53 = (void *)swift_allocObject();
  v53[2] = 0;
  v53[3] = 0;
  uint64_t v54 = v64;
  v53[4] = v1;
  v53[5] = v54;
  id v55 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1C244D448((uint64_t)v11, (uint64_t)v53 + v51, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  *(void *)((char *)v53 + v52) = v35;
  swift_retain();
  sub_1C24D0A0C(v50, (uint64_t)&unk_1EA2E38A0, (uint64_t)v53);
  swift_release();
  return sub_1C244D3EC((uint64_t)v16, (unint64_t *)&qword_1EA2DEFF0, v55);
}

uint64_t sub_1C2445B58(uint64_t a1)
{
  uint64_t v2 = sub_1C254C580();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_1C254C540();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C2445C4C(void *a1, uint64_t a2, void *a3)
{
  sub_1C21AB7A0(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = 0;
  v10[3] = 0;
  void v10[4] = a2;
  v10[5] = a3;
  v10[6] = a1;
  swift_retain();
  id v11 = a3;
  id v12 = a1;
  sub_1C24D0A0C((uint64_t)v8, (uint64_t)&unk_1EA2E3890, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1C2445D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned char v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  return MEMORY[0x1F4188298](sub_1C2445DA4, 0, 0);
}

uint64_t sub_1C2445DA4()
{
  sub_1C254F820();
  *(void *)(v0 + 40) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2445E38, v2, v1);
}

uint64_t sub_1C2445E38()
{
  swift_release();
  if (qword_1EBB6D858 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = sub_1C2453138(*(void **)(v0 + 24), *(void **)(v0 + 32));
  objc_msgSend(*(id *)(v1 + 32), sel_presentViewController_animated_completion_, v2, 1, 0);

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C2445EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v11 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v11;
  *id v11 = v7;
  v11[1] = sub_1C2223E3C;
  return sub_1C2445FAC(a5, a6, a7);
}

uint64_t sub_1C2445FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  uint64_t v5 = sub_1C254E560();
  v4[14] = v5;
  v4[15] = *(void *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  sub_1C21AB7A0(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  uint64_t v6 = sub_1C254CB40();
  v4[20] = v6;
  v4[21] = *(void *)(v6 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2446150, 0, 0);
}

uint64_t sub_1C2446150()
{
  uint64_t v1 = *(void *)(v0[13] + 40);
  v0[25] = v1;
  v0[26] = objc_msgSend(self, sel_defaultCenter);
  return MEMORY[0x1F4188298](sub_1C24461E0, v1, 0);
}

uint64_t sub_1C24461E0()
{
  uint64_t v1 = *(void *)(v0 + 200);
  if (*(void *)(v1 + 112)) {
    objc_msgSend(*(id *)(v0 + 208), sel_removeObserver_);
  }
  id v2 = *(void **)(v0 + 208);
  *(void *)(v1 + 112) = 0;
  swift_unknownObjectRelease();

  return MEMORY[0x1F4188298](sub_1C2446278, 0, 0);
}

uint64_t sub_1C2446278()
{
  id v53 = v0;
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[19];
  sub_1C21F4914(v0[11], v3);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[27] = v4;
  v0[28] = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v1) == 1)
  {
    sub_1C244D3EC(v0[19], (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
    uint64_t v5 = (void *)v0[10];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = (void *)swift_task_alloc();
      v0[31] = v7;
      void *v7 = v0;
      v7[1] = sub_1C2447060;
      return sub_1C2447334((uint64_t)v6);
    }
    uint64_t v18 = (void *)v0[12];
    sub_1C254E510();
    swift_retain_n();
    id v19 = v18;
    swift_retain();
    id v20 = v18;
    int v21 = sub_1C254E550();
    os_log_type_t v22 = sub_1C254FA20();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_type_t type = v22;
      uint64_t v24 = v0[21];
      uint64_t v23 = v0[22];
      uint64_t v44 = v0[20];
      uint64_t v49 = v0[15];
      uint64_t v25 = v0[13];
      uint64_t v50 = v0[14];
      uint64_t v51 = v0[16];
      uint64_t v45 = v0[12];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v52 = v47;
      *(_DWORD *)uint64_t v26 = 136315650;
      log = v21;
      uint64_t v28 = *(void *)(v25 + 48);
      unint64_t v27 = *(void *)(v25 + 56);
      swift_bridgeObjectRetain();
      v0[5] = sub_1C21AD354(v28, v27, &v52);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v26 + 12) = 2080;
      id v29 = objc_msgSend(*(id *)(v25 + 16), sel_identifier);
      sub_1C254CB20();

      sub_1C244C700((unint64_t *)&qword_1EA2DE1E0);
      uint64_t v30 = sub_1C2550810();
      unint64_t v32 = v31;
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v44);
      v0[6] = sub_1C21AD354(v30, v32, &v52);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v26 + 22) = 2080;
      v0[7] = v45;
      id v33 = v18;
      sub_1C21AB7A0(0, (unint64_t *)&unk_1EBB6F530, (void (*)(uint64_t))sub_1C2206F9C);
      uint64_t v34 = sub_1C254F4F0();
      v0[8] = sub_1C21AD354(v34, v35, &v52);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, log, type, "%s error logging in during upgrade of account %s: %s", (uint8_t *)v26, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v47, -1, -1);
      MEMORY[0x1C875A0B0](v26, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v51, v50);
    }
    else
    {
      uint64_t v37 = v0[15];
      uint64_t v36 = v0[16];
      uint64_t v38 = v0[14];
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
    }
    id v39 = v18;
    if (!v0[12]) {
      id v39 = objc_msgSend(self, sel_hk_error_userInfo_, 0, 0);
    }
    v0[32] = v39;
    sub_1C254F820();
    id v40 = v18;
    v0[33] = sub_1C254F810();
    uint64_t v41 = sub_1C254F7D0();
    uint64_t v43 = v42;
    uint64_t v15 = sub_1C2447210;
    uint64_t v16 = v41;
    uint64_t v17 = v43;
  }
  else
  {
    uint64_t v9 = v0[24];
    uint64_t v10 = v0[25];
    uint64_t v11 = v0[20];
    uint64_t v12 = v0[21];
    uint64_t v13 = v0[19];
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
    v0[29] = v14;
    v0[30] = (v12 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v14(v9, v13, v11);
    uint64_t v15 = sub_1C24467D0;
    uint64_t v16 = v10;
    uint64_t v17 = 0;
  }
  return MEMORY[0x1F4188298](v15, v16, v17);
}

uint64_t sub_1C24467D0()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 200)
     + OBJC_IVAR____TtCC15HealthRecordsUI29ClinicalAccountUpgradeManagerP33_C1E9680787D6FC085CDD3D854B2FD8D912SessionState_loginSessionState;
  swift_beginAccess();
  sub_1C21F4914(v2, v1);
  return MEMORY[0x1F4188298](sub_1C2446864, 0, 0);
}

uint64_t sub_1C2446864()
{
  uint64_t v65 = v0;
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 144);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 216))(v2, 1, v1) == 1)
  {
    (*(void (**)(void, uint64_t))(*(void *)(v0 + 168) + 8))(*(void *)(v0 + 192), v1);
    sub_1C244D3EC(v2, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
    uint64_t v3 = *(void **)(v0 + 80);
    if (v3)
    {
LABEL_3:
      id v4 = v3;
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 248) = v5;
      void *v5 = v0;
      v5[1] = sub_1C2447060;
      return sub_1C2447334((uint64_t)v4);
    }
    goto LABEL_8;
  }
  (*(void (**)(void, uint64_t, uint64_t))(v0 + 232))(*(void *)(v0 + 184), v2, v1);
  sub_1C244C700((unint64_t *)&qword_1EA2DE1E8);
  if (sub_1C254F420())
  {
    uint64_t v7 = *(void *)(v0 + 192);
    uint64_t v8 = *(void *)(v0 + 160);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 168) + 8);
    v9(*(void *)(v0 + 184), v8);
    v9(v7, v8);
    uint64_t v3 = *(void **)(v0 + 80);
    if (v3) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t v10 = *(void **)(v0 + 96);
    sub_1C254E510();
    swift_retain_n();
    id v11 = v10;
    swift_retain();
    id v12 = v10;
    uint64_t v13 = sub_1C254E550();
    os_log_type_t v14 = sub_1C254FA20();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t type = v14;
      uint64_t v16 = *(void *)(v0 + 168);
      uint64_t v15 = *(void *)(v0 + 176);
      uint64_t v51 = *(void *)(v0 + 160);
      uint64_t v62 = *(void *)(v0 + 128);
      uint64_t v17 = *(void *)(v0 + 104);
      uint64_t v58 = *(void *)(v0 + 120);
      *(void *)id v60 = *(void *)(v0 + 112);
      uint64_t v52 = *(void *)(v0 + 96);
      uint64_t v18 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v64 = v55;
      *(_DWORD *)uint64_t v18 = 136315650;
      log = v13;
      uint64_t v19 = *(void *)(v17 + 48);
      unint64_t v20 = *(void *)(v17 + 56);
      swift_bridgeObjectRetain();
      *(void *)(v0 + 40) = sub_1C21AD354(v19, v20, &v64);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v18 + 12) = 2080;
      id v21 = objc_msgSend(*(id *)(v17 + 16), sel_identifier);
      sub_1C254CB20();

      sub_1C244C700((unint64_t *)&qword_1EA2DE1E0);
      uint64_t v22 = sub_1C2550810();
      unint64_t v24 = v23;
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v51);
      *(void *)(v0 + 48) = sub_1C21AD354(v22, v24, &v64);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v18 + 22) = 2080;
      *(void *)(v0 + 56) = v52;
      id v25 = v10;
      sub_1C21AB7A0(0, (unint64_t *)&unk_1EBB6F530, (void (*)(uint64_t))sub_1C2206F9C);
      uint64_t v26 = sub_1C254F4F0();
      *(void *)(v0 + 64) = sub_1C21AD354(v26, v27, &v64);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, log, type, "%s error logging in during upgrade of account %s: %s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v55, -1, -1);
      MEMORY[0x1C875A0B0](v18, -1, -1);

      (*(void (**)(uint64_t, os_log_type_t *))(v58 + 8))(v62, *(os_log_type_t **)v60);
    }
    else
    {
      uint64_t v44 = *(void *)(v0 + 120);
      uint64_t v43 = *(void *)(v0 + 128);
      uint64_t v45 = *(void *)(v0 + 112);
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
    }
    id v46 = v10;
    if (!*(void *)(v0 + 96)) {
      id v46 = objc_msgSend(self, sel_hk_error_userInfo_, 0, 0);
    }
    *(void *)(v0 + 256) = v46;
    sub_1C254F820();
    id v47 = v10;
    *(void *)(v0 + 264) = sub_1C254F810();
    uint64_t v49 = sub_1C254F7D0();
    return MEMORY[0x1F4188298](sub_1C2447210, v49, v48);
  }
  sub_1C254E510();
  swift_retain_n();
  uint64_t v28 = sub_1C254E550();
  os_log_type_t v61 = sub_1C254FA40();
  BOOL v29 = os_log_type_enabled(v28, v61);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v30 = *(void *)(v0 + 192);
  uint64_t v32 = *(void *)(v0 + 160);
  uint64_t v33 = *(void *)(v0 + 168);
  uint64_t v34 = *(void *)(v0 + 136);
  uint64_t v35 = *(void *)(v0 + 120);
  uint64_t v63 = *(void *)(v0 + 112);
  uint64_t v36 = *(void *)(v0 + 104);
  if (v29)
  {
    uint64_t v59 = *(void *)(v0 + 160);
    *(void *)typea = *(void *)(v0 + 184);
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    os_log_t loga = (os_log_t)swift_slowAlloc();
    uint64_t v64 = (uint64_t)loga;
    *(_DWORD *)uint64_t v37 = 136315138;
    uint64_t v39 = *(void *)(v36 + 48);
    unint64_t v38 = *(void *)(v36 + 56);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 72) = sub_1C21AD354(v39, v38, &v64);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C21A1000, v28, v61, "%s received the oauth completion notification but for a different login session state, will ignore and not attempt to replace the account", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](loga, -1, -1);
    MEMORY[0x1C875A0B0](v37, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v63);
    id v40 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v40(*(void *)typea, v59);
    uint64_t v41 = v30;
    uint64_t v42 = v59;
  }
  else
  {

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v63);
    id v40 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v40(v31, v32);
    uint64_t v41 = v30;
    uint64_t v42 = v32;
  }
  v40(v41, v42);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v50 = *(uint64_t (**)(void))(v0 + 8);
  return v50();
}

uint64_t sub_1C2447060()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C244715C, 0, 0);
}

uint64_t sub_1C244715C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2447210()
{
  swift_release();
  if (qword_1EBB6D858 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[32];
  uint64_t v2 = v0[13];
  id v3 = sub_1C2453138(0, v1);
  objc_msgSend(*(id *)(v2 + 32), sel_presentViewController_animated_completion_, v3, 1, 0);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C2447334(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  uint64_t v3 = sub_1C254CB40();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  uint64_t v4 = sub_1C254E560();
  v2[21] = v4;
  v2[22] = *(void *)(v4 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  sub_1C254F820();
  v2[26] = sub_1C254F810();
  uint64_t v6 = sub_1C254F7D0();
  v2[27] = v6;
  v2[28] = v5;
  return MEMORY[0x1F4188298](sub_1C24474A0, v6, v5);
}

uint64_t sub_1C24474A0()
{
  uint64_t v41 = v0;
  uint64_t v1 = (void *)v0[16];
  sub_1C254E510();
  swift_retain_n();
  id v2 = v1;
  uint64_t v3 = sub_1C254E550();
  os_log_type_t v4 = sub_1C254FA40();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v39 = v0[25];
    uint64_t v37 = v0[22];
    uint64_t v38 = v0[21];
    os_log_type_t type = v4;
    uint64_t v6 = v0[19];
    uint64_t v5 = v0[20];
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    id v33 = (id)v0[16];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v40 = v35;
    *(_DWORD *)uint64_t v9 = 136315650;
    uint64_t v10 = v7;
    uint64_t v11 = *(void *)(v7 + 48);
    log = v3;
    unint64_t v12 = *(void *)(v10 + 56);
    uint64_t v13 = v10;
    swift_bridgeObjectRetain();
    v0[13] = sub_1C21AD354(v11, v12, &v40);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    id v14 = objc_msgSend(*(id *)(v13 + 16), sel_identifier);
    sub_1C254CB20();

    sub_1C244C700((unint64_t *)&qword_1EA2DE1E0);
    uint64_t v15 = v8;
    uint64_t v16 = sub_1C2550810();
    unint64_t v18 = v17;
    uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v32(v5, v15);
    v0[14] = sub_1C21AD354(v16, v18, &v40);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 22) = 2080;
    id v19 = objc_msgSend(v33, sel_identifier);
    sub_1C254CB20();

    uint64_t v20 = v15;
    uint64_t v21 = sub_1C2550810();
    unint64_t v23 = v22;
    v32(v5, v20);
    v0[15] = sub_1C21AD354(v21, v23, &v40);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, log, type, "%s beginning to replace account %s with new account %s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v35, -1, -1);
    MEMORY[0x1C875A0B0](v9, -1, -1);

    unint64_t v24 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v24(v39, v38);
  }
  else
  {
    uint64_t v25 = v0[25];
    uint64_t v26 = v0[21];
    uint64_t v27 = v0[22];
    uint64_t v28 = (void *)v0[16];
    swift_release_n();

    unint64_t v24 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v24(v25, v26);
  }
  v0[29] = v24;
  BOOL v29 = (void *)swift_task_alloc();
  v0[30] = v29;
  *BOOL v29 = v0;
  v29[1] = sub_1C2447884;
  uint64_t v30 = v0[16];
  return sub_1C24488B4(v30);
}

uint64_t sub_1C2447884(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 248) = a1;
  *(void *)(v4 + 256) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 224);
  uint64_t v6 = *(void *)(v3 + 216);
  if (v1) {
    uint64_t v7 = sub_1C2448094;
  }
  else {
    uint64_t v7 = sub_1C24479C8;
  }
  return MEMORY[0x1F4188298](v7, v6, v5);
}

uint64_t sub_1C24479C8()
{
  uint64_t v1 = (void *)v0[31];
  if (v1)
  {
    v0[33] = *(void *)(v0[17] + 24);
    id v2 = v1;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[34] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1C2447AE4;
    return sub_1C24D4060((uint64_t)v2);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1C2447AE4(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 248);
  uint64_t v5 = *v1;
  *(void *)(v3 + 280) = a1;
  swift_task_dealloc();

  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 288) = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1C2447C5C;
  return sub_1C2449CE0(v3 + 16, a1);
}

uint64_t sub_1C2447C5C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 224);
  uint64_t v3 = *(void *)(v1 + 216);
  return MEMORY[0x1F4188298](sub_1C2447D7C, v3, v2);
}

uint64_t sub_1C2447D7C()
{
  uint64_t v1 = v0[17];
  sub_1C24423A4();
  uint64_t v2 = *(void *)(v1 + 16);
  v0[37] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[38] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C2447E24;
  return sub_1C24877DC(v2);
}

uint64_t sub_1C2447E24()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 224);
  uint64_t v4 = *(void *)(v2 + 216);
  if (v0) {
    uint64_t v5 = sub_1C2448300;
  }
  else {
    uint64_t v5 = sub_1C2447F60;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C2447F60()
{
  swift_release();
  id v1 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EA2DD778 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[35];
  uint64_t v3 = (void *)v0[31];
  objc_msgSend(v1, sel_postNotificationName_object_, qword_1EA2E2890, v0[17]);

  sub_1C244D29C((uint64_t)(v0 + 2), (void (*)(void, void, void, void, void))sub_1C244C744);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C2448094()
{
  unint64_t v22 = v0;
  id v1 = (void *)v0[32];
  swift_release();
  sub_1C254E510();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C254E550();
  os_log_type_t v5 = sub_1C254FA30();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[32];
    uint64_t v19 = v0[24];
    uint64_t v20 = (void (*)(uint64_t, uint64_t))v0[29];
    uint64_t v18 = v0[21];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v21 = v8;
    v0[7] = v6;
    id v9 = v6;
    sub_1C2206F9C();
    uint64_t v10 = sub_1C254F4F0();
    v0[8] = sub_1C21AD354(v10, v11, &v21);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v4, v5, "Failed to persist and migrate upgraded account: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v8, -1, -1);
    MEMORY[0x1C875A0B0](v7, -1, -1);

    v20(v19, v18);
  }
  else
  {
    unint64_t v12 = (void *)v0[32];
    uint64_t v13 = (void (*)(uint64_t, uint64_t))v0[29];
    uint64_t v14 = v0[24];
    uint64_t v15 = v0[21];

    v13(v14, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1C2448300()
{
  uint64_t v45 = v0;
  id v1 = (void *)v0[39];
  swift_release();
  sub_1C254E510();
  swift_retain_n();
  id v2 = v1;
  swift_retain();
  id v3 = v1;
  uint64_t v4 = sub_1C254E550();
  os_log_type_t v5 = sub_1C254FA20();
  if (os_log_type_enabled(v4, v5))
  {
    id v35 = (id)v0[39];
    id v33 = (id)v0[37];
    uint64_t v39 = v0[22];
    uint64_t v41 = v0[21];
    uint64_t v42 = v0[23];
    os_log_type_t type = v5;
    uint64_t v7 = v0[19];
    uint64_t v6 = v0[20];
    uint64_t v8 = v0[17];
    uint64_t v34 = v0[18];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v44 = v36;
    *(_DWORD *)uint64_t v9 = 136315650;
    uint64_t v11 = *(void *)(v8 + 48);
    unint64_t v10 = *(void *)(v8 + 56);
    swift_bridgeObjectRetain();
    v0[9] = sub_1C21AD354(v11, v10, &v44);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    id v12 = objc_msgSend(v33, sel_identifier);
    sub_1C254CB20();

    sub_1C244C700((unint64_t *)&qword_1EA2DE1E0);
    uint64_t v13 = sub_1C2550810();
    unint64_t v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v34);
    v0[10] = sub_1C21AD354(v13, v15, &v44);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 22) = 2080;
    v0[11] = v35;
    id v16 = v35;
    sub_1C2206F9C();
    uint64_t v17 = sub_1C254F4F0();
    v0[12] = sub_1C21AD354(v17, v18, &v44);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v4, type, "%s failed to delete old account during upgrade of account %s: %s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v36, -1, -1);
    MEMORY[0x1C875A0B0](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42, v41);
  }
  else
  {
    uint64_t v19 = (void *)v0[39];
    uint64_t v21 = v0[22];
    uint64_t v20 = v0[23];
    uint64_t v22 = v0[21];
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  uint64_t v23 = self;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  unint64_t v24 = (void *)v0[39];
  uint64_t v43 = (void *)v0[35];
  *(void *)typea = v0[17];
  uint64_t v40 = (void *)v0[31];
  id v25 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();

  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v27 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();

  swift_bridgeObjectRelease();
  uint64_t v28 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  BOOL v29 = (void *)sub_1C254C810();
  id v30 = objc_msgSend(v23, sel_basicAlertControllerWithTitle_message_internalError_, v26, v28, v29, 0xE000000000000000);

  objc_msgSend(*(id *)(*(void *)typea + 32), sel_presentViewController_animated_completion_, v30, 1, 0);
  sub_1C244D29C((uint64_t)(v0 + 2), (void (*)(void, void, void, void, void))sub_1C244C744);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1C24488B4(uint64_t a1)
{
  v2[25] = a1;
  v2[26] = v1;
  uint64_t v3 = sub_1C254CB40();
  v2[27] = v3;
  v2[28] = *(void *)(v3 - 8);
  v2[29] = swift_task_alloc();
  uint64_t v4 = sub_1C254E560();
  v2[30] = v4;
  v2[31] = *(void *)(v4 - 8);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  sub_1C21AB7A0(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2448A44, 0, 0);
}

uint64_t sub_1C2448A44()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  v0[37] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = (void *)v0[25];
    uint64_t v4 = *(void **)(*(void *)(v0[26] + 24) + 24);
    v0[38] = v4;
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_1C2448C9C;
    uint64_t v5 = swift_continuation_init();
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 0x40000000;
    v0[12] = sub_1C223F118;
    v0[13] = &block_descriptor_49;
    v0[14] = v5;
    id v6 = v3;
    objc_msgSend(v4, sel_persistEphemeralAccount_triggerIngestion_completion_, v2, 1, v0 + 10);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  else
  {
    sub_1C254E510();
    uint64_t v7 = sub_1C254E550();
    os_log_type_t v8 = sub_1C254FA30();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1C21A1000, v7, v8, "ClinicalAccountUpgradeManager got a real account instead of an ephemeral account during account upgrade, won't attempt to persist", v9, 2u);
      MEMORY[0x1C875A0B0](v9, -1, -1);
    }
    uint64_t v10 = v0[34];
    uint64_t v11 = v0[30];
    uint64_t v12 = v0[31];

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13(0);
  }
}

uint64_t sub_1C2448C9C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 312) = v1;
  if (v1) {
    uint64_t v2 = sub_1C2449290;
  }
  else {
    uint64_t v2 = sub_1C2448DAC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2448DAC()
{
  uint64_t v1 = (void *)v0[38];
  uint64_t v2 = (void *)v0[15];
  v0[40] = v2;
  id v3 = v2;

  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(v0[26] + 16);
  v0[41] = v4;
  id v5 = objc_msgSend(v4, sel_gateway);
  if (!v5)
  {
    uint64_t v10 = v0[36];
    uint64_t v11 = sub_1C254C900();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
LABEL_9:
    sub_1C244D3EC(v0[36], (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
    unint64_t v14 = 0;
    goto LABEL_11;
  }
  id v6 = v5;
  id v7 = objc_msgSend(v5, sel_baseURL);

  uint64_t v8 = v0[35];
  if (v7)
  {
    sub_1C254C8A0();

    uint64_t v9 = sub_1C254C900();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  }
  else
  {
    uint64_t v9 = sub_1C254C900();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  uint64_t v12 = v0[36];
  sub_1C244D448(v0[35], v12, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  sub_1C254C900();
  uint64_t v13 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v12, 1, v9) == 1) {
    goto LABEL_9;
  }
  uint64_t v15 = v0[36];
  unint64_t v14 = (void *)sub_1C254C870();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v9);
LABEL_11:
  sub_1C23CCB04(12, 8, v14);

  id v16 = (void *)swift_task_alloc();
  v0[42] = v16;
  *id v16 = v0;
  v16[1] = sub_1C24490A0;
  return sub_1C244A78C((uint64_t)v3);
}

uint64_t sub_1C24490A0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 344) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_1C2449810;
  }
  else
  {

    *(void *)(v4 + 352) = a1;
    id v5 = sub_1C24491D0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C24491D0()
{
  uint64_t v1 = *(void **)(v0 + 200);

  uint64_t v2 = *(void *)(v0 + 352);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1C2449290()
{
  uint64_t v36 = v0;
  uint64_t v2 = *(void **)(v0 + 304);
  uint64_t v1 = *(void **)(v0 + 312);
  swift_willThrow();

  sub_1C254E510();
  swift_retain_n();
  id v3 = v1;
  swift_retain();
  id v4 = v1;
  uint64_t v5 = sub_1C254E550();
  os_log_type_t v6 = sub_1C254FA20();
  if (os_log_type_enabled(v5, v6))
  {
    id v29 = *(id *)(v0 + 312);
    uint64_t v32 = *(void *)(v0 + 248);
    uint64_t v33 = *(void *)(v0 + 240);
    uint64_t v34 = *(void *)(v0 + 264);
    os_log_type_t type = v6;
    uint64_t v8 = *(void *)(v0 + 224);
    uint64_t v7 = *(void *)(v0 + 232);
    uint64_t v9 = *(void *)(v0 + 208);
    uint64_t v27 = v0 + 136;
    uint64_t v28 = *(void *)(v0 + 216);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    v35[0] = v30;
    *(_DWORD *)uint64_t v10 = 136315650;
    uint64_t v11 = *(void *)(v9 + 48);
    unint64_t v12 = *(void *)(v9 + 56);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 128) = sub_1C21AD354(v11, v12, v35);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    id v13 = objc_msgSend(*(id *)(v9 + 16), sel_identifier);
    sub_1C254CB20();

    sub_1C244C700((unint64_t *)&qword_1EA2DE1E0);
    uint64_t v14 = sub_1C2550810();
    unint64_t v16 = v15;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v28);
    *(void *)(v0 + 136) = sub_1C21AD354(v14, v16, v35);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 22) = 2080;
    *(void *)(v0 + 144) = v29;
    id v17 = v29;
    sub_1C2206F9C();
    uint64_t v18 = sub_1C254F4F0();
    *(void *)(v0 + 152) = sub_1C21AD354(v18, v19, v35);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v5, type, "%s failed to persist new account during upgrade of account %s: %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v30, -1, -1);
    MEMORY[0x1C875A0B0](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v33);
  }
  else
  {
    uint64_t v20 = *(void **)(v0 + 312);
    uint64_t v21 = *(void *)(v0 + 264);
    uint64_t v22 = *(void *)(v0 + 240);
    uint64_t v23 = *(void *)(v0 + 248);
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  *(void *)(v0 + 360) = objc_msgSend(*(id *)(v0 + 296), sel_gateway, v27);
  sub_1C254F820();
  *(void *)(v0 + 368) = sub_1C254F810();
  uint64_t v25 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2449674, v25, v24);
}

uint64_t sub_1C2449674()
{
  swift_release();
  if (qword_1EBB6D858 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 208);
  id v3 = sub_1C2453138(v1, *(void **)(v0 + 312));
  objc_msgSend(*(id *)(v2 + 32), sel_presentViewController_animated_completion_, v3, 1, 0);

  return MEMORY[0x1F4188298](sub_1C2449750, 0, 0);
}

uint64_t sub_1C2449750()
{
  uint64_t v1 = *(void **)(v0 + 312);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_1C2449810()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void **)(v0 + 344);
  uint64_t v2 = *(void **)(v0 + 320);
  sub_1C254E510();
  swift_retain_n();
  id v3 = v1;
  id v4 = v2;
  swift_retain();
  id v5 = v1;
  os_log_type_t v6 = sub_1C254E550();
  os_log_type_t v7 = sub_1C254FA20();
  if (os_log_type_enabled(v6, v7))
  {
    id v37 = *(id *)(v0 + 344);
    uint64_t v8 = *(void **)(v0 + 320);
    id v36 = *(id *)(v0 + 328);
    id v35 = v8;
    uint64_t v44 = *(void *)(v0 + 256);
    uint64_t v42 = *(void *)(v0 + 248);
    uint64_t v43 = *(void *)(v0 + 240);
    os_log_type_t type = v7;
    uint64_t v9 = *(void *)(v0 + 232);
    uint64_t v45 = *(void *)(v0 + 224);
    uint64_t v10 = *(void *)(v0 + 208);
    uint64_t v11 = *(void *)(v0 + 216);
    uint64_t v41 = *(void **)(v0 + 200);
    log = v6;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v46 = v39;
    *(_DWORD *)uint64_t v12 = 136315906;
    uint64_t v14 = *(void *)(v10 + 48);
    unint64_t v13 = *(void *)(v10 + 56);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 160) = sub_1C21AD354(v14, v13, &v46);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v12 + 12) = 2080;
    id v15 = objc_msgSend(v8, sel_identifier);
    sub_1C254CB20();

    sub_1C244C700((unint64_t *)&qword_1EA2DE1E0);
    uint64_t v16 = sub_1C2550810();
    unint64_t v18 = v17;
    unint64_t v19 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    v19(v9, v11);
    *(void *)(v0 + 168) = sub_1C21AD354(v16, v18, &v46);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    *(_WORD *)(v12 + 22) = 2080;
    id v20 = objc_msgSend(v36, sel_identifier);
    sub_1C254CB20();

    uint64_t v21 = sub_1C2550810();
    unint64_t v23 = v22;
    v19(v9, v11);
    *(void *)(v0 + 176) = sub_1C21AD354(v21, v23, &v46);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v12 + 32) = 2080;
    *(void *)(v0 + 184) = v37;
    id v24 = v37;
    sub_1C2206F9C();
    uint64_t v25 = sub_1C254F4F0();
    *(void *)(v0 + 192) = sub_1C21AD354(v25, v26, &v46);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, log, type, "%s failed to apply existing Oslo properties to new account %s during upgrade of account %s: %s", (uint8_t *)v12, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v39, -1, -1);
    MEMORY[0x1C875A0B0](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v43);
  }
  else
  {
    uint64_t v27 = *(void **)(v0 + 344);
    uint64_t v28 = *(void **)(v0 + 320);
    uint64_t v30 = *(void *)(v0 + 248);
    uint64_t v29 = *(void *)(v0 + 256);
    uint64_t v31 = *(void *)(v0 + 240);

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
  }
  uint64_t v32 = *(void *)(v0 + 320);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v33(v32);
}

uint64_t sub_1C2449CE0(uint64_t a1, uint64_t a2)
{
  v3[38] = a2;
  v3[39] = v2;
  v3[37] = a1;
  sub_1C254F820();
  v3[40] = sub_1C254F810();
  uint64_t v5 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2449D7C, v5, v4);
}

uint64_t sub_1C2449D7C()
{
  uint64_t v68 = v0;
  uint64_t v65 = (long long *)(v0 + 56);
  uint64_t v66 = (id *)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 312);
  swift_release();
  uint64_t v63 = *(void **)(v1 + 32);
  sub_1C244D034(*(void **)(v1 + 16), v63, (void *)(v0 + 16));
  sub_1C244D448(v0 + 48, v0 + 272, &qword_1EA2E38D8, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
  sub_1C244D448(v0 + 272, v0 + 280, &qword_1EA2E38D8, (void (*)(uint64_t))type metadata accessor for ClinicalAccountDetailsViewController);
  uint64_t v2 = *(void *)(v0 + 280);
  if (v2 && *(void *)(v2 + qword_1EA2E3700))
  {
    sub_1C21FFFEC((id *)(v0 + 272));
    swift_retain();
    sub_1C254EA00();
    swift_release();
    sub_1C244D270((id *)(v0 + 272));
  }
  uint64_t v64 = (id *)(v0 + 272);
  uint64_t v57 = (id *)(v0 + 144);
  uint64_t v58 = (id *)(v0 + 152);
  uint64_t v59 = (id *)(v0 + 160);
  id v60 = (id *)(v0 + 168);
  id v53 = (id *)(v0 + 176);
  uint64_t v54 = (id *)(v0 + 184);
  os_log_type_t v61 = (id *)(v0 + 208);
  uint64_t v62 = (id *)(v0 + 216);
  uint64_t v55 = (id *)(v0 + 224);
  unint64_t v56 = (id *)(v0 + 232);
  uint64_t v51 = (id *)(v0 + 256);
  uint64_t v52 = (id *)(v0 + 264);
  sub_1C244D448(v0 + 32, (uint64_t)v66, &qword_1EA2E38E0, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineViewController);
  sub_1C244D448((uint64_t)v66, v0 + 200, &qword_1EA2E38E0, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineViewController);
  uint64_t v3 = *(void *)(v0 + 200);
  if (v3 && *(void *)(v3 + OBJC_IVAR___HRMedicalRecordTimelineViewController_accountStateCancellable))
  {
    sub_1C21FFFEC(v66);
    swift_retain();
    sub_1C254EA00();
    swift_release();
    sub_1C244D270(v66);
  }
  uint64_t v4 = *(void **)(v0 + 304);
  sub_1C2442B54((uint64_t)v65);
  uint64_t v5 = *(void **)(v0 + 56);
  id v6 = sub_1C244BA10(v4);
  sub_1C2248028(v65, v0 + 96);
  unint64_t v7 = *(void *)(v0 + 96);
  switch(*(unsigned char *)(v0 + 128))
  {
    case 1:
      unint64_t v13 = v6;
      uint64_t v14 = *(void *)(v0 + 104);
      id v15 = *(void **)(v0 + 112);
      unint64_t v16 = *(void *)(v0 + 120);
      id v17 = (id)v7;
      id v18 = v15;
      sub_1C24430D4(v14);
      if (v19)
      {
        id v20 = v19;
        id v21 = objc_msgSend(v17, sel_popToViewController_animated_, v19, 1);
      }
      id v22 = objc_msgSend(v18, sel_viewControllers, v51);
      sub_1C21AB51C(0, &qword_1EA2DE3F0);
      unint64_t v23 = sub_1C254F710();

      if (v23 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = sub_1C2550620();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v24)
      {
        sub_1C24430D4(v16);
        uint64_t v11 = v25;

        sub_1C244D29C((uint64_t)v65, (void (*)(void, void, void, void, void))sub_1C244D2DC);
        sub_1C244D1A4(v0 + 24, (uint64_t)v61);
        sub_1C244D270(v61);
        sub_1C244D270(v66);
        sub_1C244D1A4(v0 + 40, (uint64_t)v62);
        sub_1C244D270(v62);
        sub_1C244D270(v64);
        unint64_t v7 = (unint64_t)v18;
        id v18 = v63;
        char v26 = 1;
        id v6 = v13;
      }
      else
      {
        if (qword_1EBB6D858 != -1) {
          swift_once();
        }
        id v37 = *(void **)(v0 + 304);
        uint64_t v38 = *(void **)(*(void *)(*(void *)(v0 + 312) + 24) + 16);
        LOBYTE(v67) = 0;
        id v39 = objc_allocWithZone((Class)type metadata accessor for ClinicalAccountDetailsViewController());
        uint64_t v40 = sub_1C242E68C(v37, v38, (char *)&v67, 0, 0);
        if (swift_dynamicCastClass()) {
          sub_1C2430440();
        }
        sub_1C244D344(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
        uint64_t v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = xmmword_1C255CEB0;
        *(void *)(v41 + 32) = v40;
        uint64_t v67 = (void *)v41;
        sub_1C254F730();
        id v6 = v67;

        sub_1C244D29C((uint64_t)v65, (void (*)(void, void, void, void, void))sub_1C244D2DC);
        sub_1C244D1A4(v0 + 24, (uint64_t)v55);
        sub_1C244D270(v55);
        sub_1C244D270(v66);
        sub_1C244D1A4(v0 + 40, (uint64_t)v56);
        sub_1C244D270(v56);
        sub_1C244D270(v64);
        unint64_t v7 = 0;
        uint64_t v11 = 0;
        char v26 = 2;
      }
      break;
    case 2:
      uint64_t v27 = *(void *)(v0 + 104);
      id v28 = v5;
      sub_1C24430D4(v27);
      uint64_t v11 = v29;
      sub_1C244D29C((uint64_t)v65, (void (*)(void, void, void, void, void))sub_1C244D2DC);

      sub_1C244D1A4(v0 + 24, v0 + 192);
      sub_1C244D270((id *)(v0 + 192));
      sub_1C244D270(v66);
      sub_1C244D1A4(v0 + 40, v0 + 288);
      uint64_t v12 = (id *)(v0 + 288);
      goto LABEL_19;
    case 3:
      uint64_t v30 = v6;
      unint64_t v31 = *(void *)(v0 + 104);
      id v32 = v5;
      id v33 = objc_msgSend((id)v7, sel_viewControllers);
      sub_1C21AB51C(0, &qword_1EA2DE3F0);
      unint64_t v34 = sub_1C254F710();

      if (v34 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v35 = sub_1C2550620();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v35)
      {
        sub_1C24430D4(v31);
        uint64_t v11 = v36;
        sub_1C244D29C((uint64_t)v65, (void (*)(void, void, void, void, void))sub_1C244D2DC);

        sub_1C244D1A4(v0 + 24, (uint64_t)v59);
        sub_1C244D270(v59);
        sub_1C244D270(v66);
        sub_1C244D1A4(v0 + 40, (uint64_t)v60);
        sub_1C244D270(v60);
        sub_1C244D270(v64);
        id v18 = v63;
        char v26 = 1;
        id v6 = v30;
      }
      else
      {
        if (qword_1EBB6D858 != -1) {
          swift_once();
        }
        uint64_t v42 = *(void **)(v0 + 304);
        uint64_t v43 = *(void **)(*(void *)(*(void *)(v0 + 312) + 24) + 16);
        LOBYTE(v67) = 0;
        id v44 = objc_allocWithZone((Class)type metadata accessor for ClinicalAccountDetailsViewController());
        uint64_t v45 = sub_1C242E68C(v42, v43, (char *)&v67, 0, 0);
        if (swift_dynamicCastClass())
        {
          uint64_t v46 = v45;
          sub_1C2430440();
        }
        sub_1C244D344(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
        uint64_t v47 = swift_allocObject();
        *(_OWORD *)(v47 + 16) = xmmword_1C255CEB0;
        *(void *)(v47 + 32) = v45;
        uint64_t v67 = (void *)v47;
        sub_1C254F730();
        id v6 = v67;

        sub_1C244D29C((uint64_t)v65, (void (*)(void, void, void, void, void))sub_1C244D2DC);
        sub_1C244D1A4(v0 + 24, (uint64_t)v53);
        sub_1C244D270(v53);
        sub_1C244D270(v66);
        sub_1C244D1A4(v0 + 40, (uint64_t)v54);
        sub_1C244D270(v54);
        sub_1C244D270(v64);
        uint64_t v11 = 0;
        char v26 = 2;
        id v18 = (id)v7;
        unint64_t v7 = 0;
      }
      break;
    case 4:
      id v18 = *(id *)(v0 + 16);
      if (*(void *)(v0 + 104) | v7 | *(void *)(v0 + 112) | *(void *)(v0 + 120))
      {
        sub_1C244D1A4(v0 + 24, (uint64_t)v57);
        sub_1C244D270(v57);
        sub_1C244D270(v66);
        sub_1C244D1A4(v0 + 40, (uint64_t)v58);
        sub_1C244D270(v58);
        sub_1C244D270(v64);
        unint64_t v7 = 0;
        uint64_t v11 = 0;
        char v26 = 0;
      }
      else
      {
        sub_1C244D1A4(v0 + 24, (uint64_t)v51);
        sub_1C244D270(v51);
        sub_1C244D270(v66);
        sub_1C244D1A4(v0 + 40, (uint64_t)v52);
        sub_1C244D270(v52);
        sub_1C244D270(v64);
        unint64_t v7 = 0;
        uint64_t v11 = 0;
        char v26 = 3;
      }
      break;
    default:
      if (*(void *)(v0 + 112) >= *(void *)(v0 + 104)) {
        uint64_t v8 = *(void *)(v0 + 104);
      }
      else {
        uint64_t v8 = *(void *)(v0 + 112);
      }
      id v9 = v5;
      sub_1C24430D4(v8);
      uint64_t v11 = v10;
      sub_1C244D29C((uint64_t)v65, (void (*)(void, void, void, void, void))sub_1C244D2DC);

      sub_1C244D1A4(v0 + 24, v0 + 240);
      sub_1C244D270((id *)(v0 + 240));
      sub_1C244D270(v66);
      sub_1C244D1A4(v0 + 40, v0 + 248);
      uint64_t v12 = (id *)(v0 + 248);
LABEL_19:
      sub_1C244D270(v12);
      sub_1C244D270(v64);
      id v18 = v63;
      char v26 = 1;
      break;
  }
  uint64_t v48 = *(void *)(v0 + 296);
  *(void *)uint64_t v48 = v18;
  *(void *)(v48 + 8) = v6;
  *(void *)(v48 + 16) = v7;
  *(void *)(v48 + 24) = v11;
  *(unsigned char *)(v48 + 32) = v26;
  uint64_t v49 = *(uint64_t (**)(void))(v0 + 8);
  return v49();
}

uint64_t sub_1C244A78C(uint64_t a1)
{
  _OWORD v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_1C254CB40();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  sub_1C21AB7A0(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C244A8C0, 0, 0);
}

uint64_t sub_1C244A8C0()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 24) + 16);
  *(void *)(v0 + 88) = v1;
  if (objc_msgSend(v1, sel_isSharingToProvider))
  {
    id v2 = objc_msgSend(v1, sel_clinicalSharingStatus);
    *(void *)(v0 + 96) = v2;
    id v3 = objc_msgSend(v2, sel_firstSharedDate);
    uint64_t v4 = *(void *)(v0 + 80);
    if (v3)
    {
      uint64_t v5 = v3;
      sub_1C254CA80();

      uint64_t v6 = sub_1C254CAD0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 0, 1, v6);
    }
    else
    {
      uint64_t v6 = sub_1C254CAD0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
    }
    uint64_t v11 = *(void *)(v0 + 72);
    sub_1C254CAD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v11, 1, 1, v6);
    id v12 = objc_msgSend(v2, sel_featureStatus);
    id v13 = objc_msgSend(v2, sel_userStatus);
    id v14 = objc_msgSend(v2, sel_primaryDeviceName);
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = sub_1C254F470();
      uint64_t v18 = v17;
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v18 = 0;
    }
    uint64_t v20 = *(void *)(v0 + 72);
    uint64_t v19 = *(void *)(v0 + 80);
    id v21 = *(void **)(v0 + 16);
    uint64_t v22 = *(void *)(v0 + 24);
    id v23 = objc_allocWithZone(MEMORY[0x1E4F67778]);
    id v24 = sub_1C244BE3C(v19, v20, (uint64_t)v12, (uint64_t)v13, 3, v16, v18);
    *(void *)(v0 + 104) = v24;
    *(void *)(v0 + 112) = *(void *)(v22 + 24);
    id v25 = objc_msgSend(v21, sel_identifier);
    sub_1C254CB20();

    char v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v26;
    *char v26 = v0;
    v26[1] = sub_1C244ABF8;
    uint64_t v27 = *(void *)(v0 + 64);
    return sub_1C24D4828(v27, (uint64_t)v24);
  }
  else
  {
    id v7 = *(id *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v9 = *(void *)(v0 + 16);
    return v8(v9);
  }
}

uint64_t sub_1C244ABF8()
{
  id v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(void *)(*(void *)v1 + 40);
  uint64_t v5 = *(void *)(*(void *)v1 + 32);
  v2[16] = v0;
  swift_task_dealloc();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[17] = v6;
  v2[18] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  if (v0) {
    id v7 = sub_1C244B2E4;
  }
  else {
    id v7 = sub_1C244AD7C;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1C244AD7C()
{
  id v1 = objc_msgSend(*(id *)(v0 + 88), sel_identifier);
  sub_1C254CB20();

  id v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v2;
  *id v2 = v0;
  v2[1] = sub_1C244AE40;
  uint64_t v3 = *(void *)(v0 + 56);
  return sub_1C24D4FE8(v3);
}

uint64_t sub_1C244AE40(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*v2 + 136);
  uint64_t v6 = *(void *)(*v2 + 56);
  uint64_t v7 = *(void *)(*v2 + 32);
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  v5(v6, v7);
  if (v1)
  {
    uint64_t v8 = sub_1C244B398;
  }
  else
  {
    *(void *)(v4 + 168) = a1;
    uint64_t v8 = sub_1C244AFD4;
  }
  return MEMORY[0x1F4188298](v8, 0, 0);
}

uint64_t sub_1C244AFD4()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  sub_1C254CB20();

  id v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v2;
  *id v2 = v0;
  v2[1] = sub_1C244B09C;
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 48);
  return sub_1C24D532C(v3, v4);
}

uint64_t sub_1C244B09C()
{
  id v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 136);
  uint64_t v3 = *(void *)(*(void *)v1 + 48);
  uint64_t v4 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v5 = sub_1C244B44C;
  }
  else {
    uint64_t v5 = sub_1C244B238;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C244B238()
{
  uint64_t v1 = *(void **)(v0 + 96);
  id v2 = *(void **)(v0 + 104);
  id v3 = *(id *)(v0 + 16);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v5 = *(void *)(v0 + 16);
  return v4(v5);
}

uint64_t sub_1C244B2E4()
{
  uint64_t v1 = *(void **)(v0 + 96);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C244B398()
{
  uint64_t v1 = *(void **)(v0 + 96);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C244B44C()
{
  uint64_t v1 = *(void **)(v0 + 96);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

BOOL sub_1C244B500(void *a1, void *a2)
{
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21FE83C();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB7A0(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v12 - 8);
  id v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v39 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v39 - v19;
  type metadata accessor for MedicalRecordTimelineViewController();
  id v42 = a1;
  uint64_t v21 = swift_dynamicCastClass();
  if (!v21) {
    return 0;
  }
  uint64_t v22 = a2;
  uint64_t v40 = v7;
  uint64_t v41 = v14;
  id v23 = *(void **)(v21 + OBJC_IVAR___HRMedicalRecordTimelineViewController_account);
  if (v23)
  {
    id v24 = v42;
    id v25 = objc_msgSend(v23, sel_identifier);
    sub_1C254CB20();

    char v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v26(v20, 0, 1, v4);
  }
  else
  {
    char v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v26(v20, 1, 1, v4);
    id v27 = v42;
  }
  id v28 = objc_msgSend(v22, sel_identifier);
  sub_1C254CB20();

  v26(v17, 0, 1, v4);
  uint64_t v29 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1C21F4914((uint64_t)v20, (uint64_t)v11);
  sub_1C21F4914((uint64_t)v17, v29);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v30((uint64_t)v11, 1, v4) == 1)
  {

    unint64_t v31 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
    sub_1C244D3EC((uint64_t)v17, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
    sub_1C244D3EC((uint64_t)v20, (unint64_t *)&qword_1EA2DEFF0, v31);
    if (v30(v29, 1, v4) == 1)
    {
      sub_1C244D3EC((uint64_t)v11, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
      return 1;
    }
    goto LABEL_10;
  }
  uint64_t v32 = (uint64_t)v41;
  sub_1C21F4914((uint64_t)v11, (uint64_t)v41);
  if (v30(v29, 1, v4) == 1)
  {

    id v33 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
    sub_1C244D3EC((uint64_t)v17, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
    sub_1C244D3EC((uint64_t)v20, (unint64_t *)&qword_1EA2DEFF0, v33);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v32, v4);
LABEL_10:
    sub_1C244D390((uint64_t)v11);
    return 0;
  }
  unint64_t v34 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v40, v29, v4);
  sub_1C244C700((unint64_t *)&qword_1EA2DE1E8);
  char v35 = sub_1C254F420();

  uint64_t v36 = *(void (**)(char *, uint64_t))(v5 + 8);
  v36(v34, v4);
  id v37 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1C244D3EC((uint64_t)v17, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  sub_1C244D3EC((uint64_t)v20, (unint64_t *)&qword_1EA2DEFF0, v37);
  v36((char *)v32, v4);
  sub_1C244D3EC((uint64_t)v11, (unint64_t *)&qword_1EA2DEFF0, v37);
  return (v35 & 1) != 0;
}

id sub_1C244BA10(void *a1)
{
  if (qword_1EBB6D858 != -1) {
    swift_once();
  }
  id v3 = *(void **)(*(void *)(v1 + 24) + 16);
  char v8 = 0;
  id v4 = objc_allocWithZone((Class)type metadata accessor for ClinicalAccountDetailsViewController());
  uint64_t v5 = sub_1C242E68C(a1, v3, &v8, 0, 0);
  if (swift_dynamicCastClass()) {
    sub_1C2430440();
  }
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v5);
  objc_msgSend(v6, sel_setModalPresentationStyle_, 2);

  return v6;
}

uint64_t sub_1C244BB00(unint64_t a1)
{
  unint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_1C23C7008(v3);
    unint64_t v3 = v5;
    *uint64_t v1 = v5;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    uint64_t v9 = v7 - 1 - a1;
    if (v9 >= 0)
    {
      uint64_t v10 = v6 + 8 * a1;
      uint64_t v11 = *(void *)(v10 + 32);
      memmove((void *)(v10 + 32), (const void *)(v10 + 40), 8 * v9);
      *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
      sub_1C254F730();
      return v11;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C244BBEC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalAccountUpgradeManager()
{
  return self;
}

uint64_t sub_1C244BC68()
{
  return type metadata accessor for ClinicalAccountUpgradeManager.SessionState();
}

uint64_t type metadata accessor for ClinicalAccountUpgradeManager.SessionState()
{
  uint64_t result = qword_1EA2E3860;
  if (!qword_1EA2E3860) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C244BCBC()
{
  sub_1C21AB7A0(319, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unint64_t sub_1C244BD7C(char a1)
{
  unint64_t result = 0x206E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
      unint64_t result = 0xD000000000000025;
      break;
    case 3:
      unint64_t result = 0xD00000000000002BLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C244BE28()
{
  return sub_1C244BD7C(*v0);
}

id sub_1C244BE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = sub_1C254CAD0();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  uint64_t v15 = 0;
  if (v14(a1, 1, v12) != 1)
  {
    uint64_t v15 = (void *)sub_1C254CA50();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  }
  if (v14(a2, 1, v12) != 1)
  {
    uint64_t v16 = (void *)sub_1C254CA50();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
    uint64_t v18 = a3;
    uint64_t v17 = v23;
    if (a7) {
      goto LABEL_5;
    }
LABEL_7:
    uint64_t v19 = 0;
    goto LABEL_8;
  }
  uint64_t v16 = 0;
  uint64_t v18 = a3;
  uint64_t v17 = v23;
  if (!a7) {
    goto LABEL_7;
  }
LABEL_5:
  uint64_t v19 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
LABEL_8:
  id v20 = objc_msgSend(v17, sel_initWithFirstSharedDate_lastSharedDate_featureStatus_userStatus_multiDeviceStatus_primaryDeviceName_, v15, v16, v18, a4, a5, v19);

  return v20;
}

uint64_t sub_1C244BFEC(uint64_t a1, uint64_t a2)
{
  sub_1C21AB7A0(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C244C06C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C244C0A4()
{
  return sub_1C24452E0();
}

uint64_t block_destroy_helper_54()
{
  return swift_release();
}

uint64_t sub_1C244C0B4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C244C0F4(void *a1)
{
  return sub_1C2445C4C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1C244C0FC()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C244C14C()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1C222399C;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return MEMORY[0x1F4188298](sub_1C2445DA4, 0, 0);
}

uint64_t *sub_1C244C200(void *a1, uint64_t a2, void *a3)
{
  long long v4 = v3;
  uint64_t v8 = *v4;
  uint64_t v9 = sub_1C254CB40();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClinicalAccountUpgradeManager.SessionState();
  uint64_t v13 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v13 + 112) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v13+ OBJC_IVAR____TtCC15HealthRecordsUI29ClinicalAccountUpgradeManagerP33_C1E9680787D6FC085CDD3D854B2FD8D912SessionState_loginSessionState, 1, 1, v9);
  v4[2] = (uint64_t)a1;
  v4[3] = a2;
  v4[4] = (uint64_t)a3;
  void v4[5] = v13;
  uint64_t v19 = 91;
  unint64_t v20 = 0xE100000000000000;
  v18[1] = v8;
  swift_getMetatypeMetadata();
  id v14 = a1;
  swift_retain();
  id v15 = a3;
  sub_1C254F4F0();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  sub_1C254CB30();
  sub_1C244C700((unint64_t *)&qword_1EA2DE1E0);
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1C254F5A0();
  unint64_t v16 = v20;
  v4[6] = v19;
  v4[7] = v16;
  return v4;
}

uint64_t sub_1C244C41C()
{
  sub_1C21AB7A0(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();

  uint64_t v5 = sub_1C254CB40();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;

  return MEMORY[0x1F4186498](v0, v8, v2 | 7);
}

uint64_t sub_1C244C588()
{
  sub_1C21AB7A0(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(*(void *)(v2 - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  void *v7 = v1;
  v7[1] = sub_1C2223E3C;
  unint64_t v8 = (void *)swift_task_alloc();
  long long v7[2] = v8;
  *unint64_t v8 = v7;
  v8[1] = sub_1C2223E3C;
  return sub_1C2445FAC(v4, v5, v6);
}

uint64_t sub_1C244C700(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C254CB40();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C244C744(void *a1, void *a2, void *a3, void *a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 3:

      uint64_t v5 = a2;
      goto LABEL_4;
    case 1:

      uint64_t v5 = a4;
LABEL_4:

      break;
    case 2:

      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_1C244C81C()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C244C864(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_1C2223E3C;
  return sub_1C2442750(a1, v4, v5, v7, v6);
}

uint64_t sub_1C244C924()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1C244C964()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_presentViewController_animated_completion_, *(void *)(v0 + 24), 1, 0);
}

void sub_1C244C97C(void *a1, void *a2)
{
  sub_1C244D344(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255CEB0;
  *(void *)(v4 + 32) = a1;
  unint64_t v21 = v4;
  sub_1C254F730();
  unint64_t v5 = v21;
  id v6 = a1;
  while (1)
  {
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (!v20)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        return;
      }
    }
    else if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_18;
    }
    if ((swift_isUniquelyReferenced_nonNull_bridgeObject() & 1) == 0
      || (v5 & 0x8000000000000000) != 0
      || (v5 & 0x4000000000000000) != 0)
    {
      sub_1C23C7008(v5);
      unint64_t v5 = v7;
      unint64_t v21 = v7;
    }
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v8) {
      break;
    }
    uint64_t v9 = v8 - 1;
    uint64_t v10 = *(void **)((v5 & 0xFFFFFFFFFFFFFF8) + 8 * v9 + 0x20);
    *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    sub_1C254F730();
    if (sub_1C244B500(v10, a2)) {
      goto LABEL_18;
    }
    id v11 = objc_msgSend(v10, sel_childViewControllers);
    sub_1C21AB51C(0, &qword_1EA2DE3F0);
    unint64_t v12 = sub_1C254F710();

    sub_1C2272D90(v12);
    id v13 = objc_msgSend(v10, sel_presentedViewController);
    if (v13)
    {
      id v14 = v13;
      MEMORY[0x1C8757C00]();
      if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      unint64_t v16 = (void *)v15;
      id v17 = v10;
      id v18 = objc_msgSend(v16, sel_viewControllers);
      unint64_t v19 = sub_1C254F710();

      sub_1C2272D90(v19);
    }

    unint64_t v5 = v21;
  }
  __break(1u);
}

void sub_1C244CC28(void *a1, void *a2)
{
  id v33 = a2;
  uint64_t v3 = sub_1C254CB40();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v33 - v8;
  sub_1C244D344(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C255CEB0;
  *(void *)(v10 + 32) = a1;
  id v34 = (id)v10;
  sub_1C254F730();
  unint64_t v11 = (unint64_t)v34;
  unint64_t v35 = (unint64_t)v34;
  unint64_t v12 = (void (**)(char *, uint64_t))(v4 + 8);
  id v13 = a1;
  while (1)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (!v32) {
        goto LABEL_19;
      }
    }
    else if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_19;
    }
    if ((swift_isUniquelyReferenced_nonNull_bridgeObject() & 1) == 0
      || (v11 & 0x8000000000000000) != 0
      || (v11 & 0x4000000000000000) != 0)
    {
      sub_1C23C7008(v11);
      unint64_t v11 = v14;
      unint64_t v35 = v14;
    }
    uint64_t v15 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      break;
    }
    uint64_t v16 = v15 - 1;
    id v17 = *(void **)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * v16 + 0x20);
    *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
    sub_1C254F730();
    type metadata accessor for ClinicalAccountDetailsViewController();
    if (swift_dynamicCastClass())
    {
      id v18 = v17;
      swift_retain();
      sub_1C254EA80();
      swift_release();
      id v19 = v34;
      id v20 = objc_msgSend(v34, sel_identifier);

      sub_1C254CB20();
      id v21 = objc_msgSend(v33, sel_identifier);
      sub_1C254CB20();

      LOBYTE(v21) = sub_1C254CB10();
      uint64_t v22 = *v12;
      (*v12)(v6, v3);
      v22(v9, v3);
      if (v21)
      {
LABEL_19:
        swift_bridgeObjectRelease();
        return;
      }
    }
    id v23 = objc_msgSend(v17, sel_childViewControllers, v33);
    sub_1C21AB51C(0, &qword_1EA2DE3F0);
    unint64_t v24 = sub_1C254F710();

    sub_1C2272D90(v24);
    id v25 = objc_msgSend(v17, sel_presentedViewController);
    if (v25)
    {
      id v26 = v25;
      MEMORY[0x1C8757C00]();
      if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }
    self;
    uint64_t v27 = swift_dynamicCastObjCClass();
    if (v27)
    {
      id v28 = (void *)v27;
      id v29 = v17;
      id v30 = objc_msgSend(v28, sel_viewControllers);
      unint64_t v31 = sub_1C254F710();

      sub_1C2272D90(v31);
    }

    unint64_t v11 = v35;
  }
  __break(1u);
}

id sub_1C244D034@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  for (id i = a2; ; id i = v6)
  {
    id v6 = objc_msgSend(i, sel_parentViewController);
    if (!v6)
    {
      id v6 = objc_msgSend(i, sel_presentingViewController);
      if (!v6) {
        break;
      }
    }
  }
  id v7 = a1;
  sub_1C244C97C(i, v7);
  uint64_t v9 = v8;

  if (v9)
  {
    type metadata accessor for MedicalRecordTimelineViewController();
    uint64_t v10 = (void *)swift_dynamicCastClass();
    if (!v10) {
  }
    }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = v7;
  sub_1C244CC28(i, v11);
  id v13 = v12;

  if (!v13)
  {
    unint64_t v14 = 0;
    uint64_t v15 = &selRef_lastObject;
    if (v10) {
      goto LABEL_13;
    }
LABEL_16:
    id v16 = 0;
    if (v14) {
      goto LABEL_14;
    }
LABEL_17:
    id result = 0;
    goto LABEL_18;
  }
  type metadata accessor for ClinicalAccountDetailsViewController();
  unint64_t v14 = (void *)swift_dynamicCastClass();
  if (!v14) {

  }
  uint64_t v15 = &selRef_lastObject;
  if (!v10) {
    goto LABEL_16;
  }
LABEL_13:
  id v16 = [v10 v15[80]];
  if (!v14) {
    goto LABEL_17;
  }
LABEL_14:
  id result = [v14 v15[80]];
LABEL_18:
  *a3 = i;
  a3[1] = v16;
  a3[2] = v10;
  a3[3] = result;
  a3[4] = v14;
  return result;
}

uint64_t sub_1C244D1A4(uint64_t a1, uint64_t a2)
{
  sub_1C244D208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C244D208()
{
  if (!qword_1EA2E38E8)
  {
    sub_1C21AB51C(255, &qword_1EA2E38F0);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E38E8);
    }
  }
}

id *sub_1C244D270(id *a1)
{
  return a1;
}

uint64_t sub_1C244D29C(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

void sub_1C244D2DC(void *a1, uint64_t a2, void *a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 < 2 || a5 == 0)
  {
    goto LABEL_8;
  }
  if (a5 == 1)
  {

    a1 = a3;
LABEL_8:
  }
}

void sub_1C244D344(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C244D390(uint64_t a1)
{
  sub_1C21FE83C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C244D3EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C21AB7A0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C244D448(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C21AB7A0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_1C244D4B4()
{
  unint64_t result = qword_1EA2E3900;
  if (!qword_1EA2E3900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3900);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ClinicalAccountUpgradeManagerError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C244D5D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalAccountUpgradeManagerError()
{
  return &type metadata for ClinicalAccountUpgradeManagerError;
}

id sub_1C244D60C(id result, uint64_t a2, void *a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 < 2 || a5 == 0)
  {
    return result;
  }
  if (a5 == 1)
  {
    id v7 = result;
    unint64_t result = a3;
    return result;
  }
  return result;
}

uint64_t destroy for UpgradeFlowViewEnvironment.ViewEnvironmentType(uint64_t a1, uint64_t a2)
{
  return sub_1C244D8AC(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_1C244D2DC);
}

uint64_t initializeWithCopy for UpgradeFlowViewEnvironment.ViewEnvironmentType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C244D8E0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C244D60C);
}

uint64_t *assignWithCopy for UpgradeFlowViewEnvironment.ViewEnvironmentType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C244D978(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C244D60C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C244D2DC);
}

uint64_t *assignWithTake for UpgradeFlowViewEnvironment.ViewEnvironmentType(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C244DA1C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C244D2DC);
}

uint64_t getEnumTagSinglePayload for UpgradeFlowViewEnvironment.ViewEnvironmentType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UpgradeFlowViewEnvironment.ViewEnvironmentType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C244D778(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 3u) {
    return *(unsigned __int8 *)(a1 + 32);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1C244D790(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UpgradeFlowViewEnvironment.ViewEnvironmentType()
{
  return &type metadata for UpgradeFlowViewEnvironment.ViewEnvironmentType;
}

id sub_1C244D7BC(id result, void *a2, void *a3, void *a4, char a5)
{
  uint64_t v5 = result;
  switch(a5)
  {
    case 0:
    case 3:
      id v6 = result;
      id v7 = a2;
      goto LABEL_4;
    case 1:
      id v8 = a4;
      id v9 = v5;
      id v10 = a2;
      id v7 = a3;
LABEL_4:
      unint64_t result = v7;
      break;
    case 2:
      id v11 = result;
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for PostUpgradePresentationOption(uint64_t a1, uint64_t a2)
{
  return sub_1C244D8AC(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_1C244C744);
}

uint64_t sub_1C244D8AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
}

uint64_t initializeWithCopy for PostUpgradePresentationOption(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C244D8E0(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C244D7BC);
}

uint64_t sub_1C244D8E0(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v6, v7, v8, v9);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  return a1;
}

uint64_t *assignWithCopy for PostUpgradePresentationOption(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C244D978(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C244D7BC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C244C744);
}

uint64_t *sub_1C244D978(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = *((unsigned __int8 *)a2 + 32);
  a4(*a2, v8, v9, v10, v11);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  uint64_t v16 = *((unsigned __int8 *)a1 + 32);
  *((unsigned char *)a1 + 32) = v11;
  a5(v12, v13, v14, v15, v16);
  return a1;
}

uint64_t *assignWithTake for PostUpgradePresentationOption(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C244DA1C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C244C744);
}

uint64_t *sub_1C244DA1C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = a1[3];
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  uint64_t v12 = *((unsigned __int8 *)a1 + 32);
  *((unsigned char *)a1 + 32) = v6;
  a4(v7, v9, v8, v10, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for PostUpgradePresentationOption(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PostUpgradePresentationOption(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C244DB00(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PostUpgradePresentationOption()
{
  return &type metadata for PostUpgradePresentationOption;
}

unint64_t sub_1C244DB20()
{
  unint64_t result = qword_1EA2E3908;
  if (!qword_1EA2E3908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3908);
  }
  return result;
}

void *sub_1C244DB80()
{
  uint64_t v1 = qword_1EA2E3950;
  if (*(void *)(v0 + qword_1EA2E3950))
  {
    uint64_t v2 = *(void **)(v0 + qword_1EA2E3950);
  }
  else
  {
    sub_1C254FB30();
    unsigned int v3 = *(void **)(v0 + qword_1EA2E3928);
    id v4 = objc_msgSend(v3, sel_healthStore);
    id v5 = sub_1C244E49C();
    id v6 = objc_msgSend(v3, sel_healthStore);
    id v7 = objc_msgSend(v6, sel_profileIdentifier);

    type metadata accessor for CategorySearchDataSourceProvider();
    uint64_t v2 = (void *)swift_allocObject();
    _OWORD v2[2] = 0;
    v2[11] = 0;
    sub_1C21F44EC(&v9, (uint64_t)(v2 + 3));
    v2[9] = v7;
    v2[10] = v5;
    v2[8] = v4;
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_1C244DC8C(char *a1, void *a2)
{
  char v4 = *a1;
  id v6 = (void *)*((void *)a1 + 1);
  uint64_t v5 = *((void *)a1 + 2);
  uint64_t v7 = *((void *)a1 + 5);
  uint64_t v8 = *((void *)a1 + 6);
  uint64_t v9 = *((void *)a1 + 7);
  uint64_t v10 = (void *)*((void *)a1 + 8);
  long long v11 = &v2[qword_1EA2E3948];
  *(void *)long long v11 = 0;
  *((void *)v11 + 1) = 0;
  *(void *)&v2[qword_1EA2E3950] = 0;
  uint64_t v12 = &v2[qword_1EA2E3920];
  *uint64_t v12 = v4;
  *((void *)v12 + 1) = v6;
  *((void *)v12 + 2) = v5;
  *(_OWORD *)(v12 + 24) = *(_OWORD *)(a1 + 24);
  *((void *)v12 + 5) = v7;
  *((void *)v12 + 6) = v8;
  *((void *)v12 + 7) = v9;
  *((void *)v12 + 8) = v10;
  *(void *)&v2[qword_1EA2E3928] = a2;
  uint64_t v42 = sub_1C254D110();
  LOBYTE(v49) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v10;
  id v14 = a2;
  uint64_t v15 = v2;
  id v16 = v6;
  id v17 = objc_msgSend(v14, sel_healthStore, v42);
  id v18 = objc_msgSend(v17, sel_profileIdentifier);

  id v19 = (void *)_s14HealthPlatform8FeedItemC0A9RecordsUIE029predicateForUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0N0OSg_AA06SourceP0OtFZ_0((unsigned __int8 *)&v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C255CD70;
  *(void *)(v20 + 32) = v19;
  id v45 = v19;
  uint64_t v46 = v14;
  id v21 = objc_msgSend(v14, sel_healthStore);
  id v22 = objc_msgSend(v21, sel_profileIdentifier);

  uint64_t v23 = _s15HealthRecordsUI35AddAccountFeedItemIdentifierFactoryV011makeGeneralab10OnboardingH03forSSSo09HKProfileH0CSg_tFZ_0(v22);
  uint64_t v25 = v24;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  sub_1C2415E30(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1C255CDA0;
  uint64_t v27 = sub_1C254D0F0();
  uint64_t v29 = v28;
  uint64_t v30 = MEMORY[0x1E4FBB1A0];
  *(void *)(v26 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v31 = sub_1C220D950();
  *(void *)(v26 + 32) = v27;
  *(void *)(v26 + 40) = v29;
  *(void *)(v26 + 96) = v30;
  *(void *)(v26 + 104) = v31;
  *(void *)(v26 + 64) = v31;
  *(void *)(v26 + 72) = v23;
  *(void *)(v26 + 80) = v25;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1C254F9A0();

  swift_bridgeObjectRelease();
  *(void *)(v20 + 40) = v32;
  uint64_t v49 = v20;
  sub_1C254F730();
  id v33 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v33);

  *(void *)&v15[qword_1EA2E3930] = v34;
  uint64_t v35 = qword_1EBB6EF30;
  id v43 = v34;
  if (v35 != -1) {
    swift_once();
  }
  uint64_t v36 = qword_1EBB6FB90;
  id v37 = objc_msgSend(v46, sel_healthStore, v43);
  id v38 = objc_msgSend(v37, sel_profileIdentifier);

  uint64_t v48 = *(void *)(v36 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v39);
  sub_1C254CEE0();
  sub_1C254E460();
  sub_1C244FE30((unint64_t *)&qword_1EBB6F240, 255, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();

  swift_release();
  *(void *)&v15[qword_1EA2E3938] = v49;
  *(void *)&v15[qword_1EA2E3940] = 4;

  v47.id receiver = v15;
  v47.Class super_class = (Class)type metadata accessor for CategorySearchViewController();
  id v40 = objc_msgSendSuper2(&v47, sel_initWithCollectionViewLayout_, 0);

  return v40;
}

void sub_1C244E168(char *a1, uint64_t a2, void *a3)
{
  char v4 = &a1[qword_1EA2E3948];
  *(void *)char v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&a1[qword_1EA2E3950] = 0;
  id v5 = a3;

  sub_1C25505F0();
  __break(1u);
}

void sub_1C244E1F0()
{
  uint64_t v1 = sub_1C244DB80();
  uint64_t v10 = type metadata accessor for CategorySearchDataSourceProvider();
  uint64_t v11 = sub_1C244FE30(&qword_1EA2E3968, v2, (void (*)(uint64_t))type metadata accessor for CategorySearchDataSourceProvider);
  uint64_t v9 = v1;
  sub_1C254E0F0();
  v8.id receiver = v0;
  v8.Class super_class = (Class)type metadata accessor for CategorySearchViewController();
  objc_msgSendSuper2(&v8, sel_viewDidLoad);
  id v3 = objc_msgSend(v0, sel_collectionView);
  if (v3)
  {
    char v4 = v3;
    id v5 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);

    id v6 = objc_msgSend(v0, sel_collectionView);
    if (v6)
    {
      uint64_t v7 = v6;
      objc_msgSend(v6, sel_setKeyboardDismissMode_, 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C244E324(void *a1)
{
  id v1 = a1;
  sub_1C244E1F0();
}

id sub_1C244E36C(void *a1, uint64_t a2, uint64_t a3)
{
  v5.id receiver = a1;
  v5.Class super_class = (Class)type metadata accessor for CategorySearchViewController();
  return objc_msgSendSuper2(&v5, sel_viewDidAppear_, a3);
}

void sub_1C244E3B8()
{
  id v1 = v0;
  sub_1C254E100();
  uint64_t v2 = (void (*)(void))sub_1C254E110();
  v2();
  id v3 = objc_msgSend(v0, sel_collectionView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  char v4 = v3;
  sub_1C254DFE0();
  sub_1C254FAF0();

  sub_1C254E0D0();
  id v5 = objc_msgSend(v1, sel_collectionView);
  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v6 = v5;
  sub_1C254DCB0();
  swift_release();
}

id sub_1C244E49C()
{
  sub_1C244FA7C(0, &qword_1EA2DFD80, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)&v47 - v2;
  sub_1C244FA0C();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2561290;
  uint64_t v49 = v0;
  id v5 = (uint64_t *)(v0 + qword_1EA2E3948);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  uint64_t v48 = v5;
  if (v6)
  {
    sub_1C2415E30(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C255CDA0;
    *(void *)(v8 + 56) = v7;
    unint64_t v9 = sub_1C220D950();
    strcpy((char *)(v8 + 32), "localizedTitle");
    *(unsigned char *)(v8 + 47) = -18;
    uint64_t v10 = *v5;
    *(void *)(v8 + 96) = v7;
    *(void *)(v8 + 104) = v9;
    *(void *)(v8 + 64) = v9;
    *(void *)(v8 + 72) = v10;
    *(void *)(v8 + 80) = v6;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C254F9A0();
  }
  else
  {
    uint64_t v11 = 0;
  }
  *(void *)(inited + 32) = v11;
  uint64_t v12 = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  sub_1C2415E30(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C255CDA0;
  *(void *)(v13 + 56) = v7;
  unint64_t v14 = sub_1C220D950();
  strcpy((char *)(v13 + 32), "pluginPackage");
  *(_WORD *)(v13 + 46) = -4864;
  *(void *)(v13 + 96) = v7;
  *(void *)(v13 + 104) = v14;
  *(void *)(v13 + 64) = v14;
  *(void *)(v13 + 72) = 0xD000000000000025;
  *(void *)(v13 + 80) = 0x80000001C2578100;
  uint64_t v50 = v12;
  *(void *)(inited + 40) = sub_1C254F9A0();
  sub_1C254D110();
  sub_1C244FA7C(0, &qword_1EA2DF320, MEMORY[0x1E4F67030], MEMORY[0x1E4FBBE00]);
  uint64_t v15 = sub_1C254CEF0();
  uint64_t v16 = *(void *)(v15 - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  long long v47 = xmmword_1C255CD90;
  *(_OWORD *)(v18 + 16) = xmmword_1C255CD90;
  (*(void (**)(unint64_t, void, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E4F66FC8], v15);
  uint64_t v19 = sub_1C254CFE0();
  uint64_t v21 = v20;
  uint64_t v22 = sub_1C254C520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v3, 1, 1, v22);
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v47;
  uint64_t v24 = v49;
  id v25 = objc_msgSend(*(id *)(v49 + qword_1EA2E3928), sel_healthStore);
  id v26 = objc_msgSend(v25, sel_profileIdentifier);

  *(void *)(v23 + 32) = v26;
  uint64_t v27 = MEMORY[0x1C87555D0](v18, v19, v21, v3, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C229E610((uint64_t)v3);
  *(void *)(inited + 48) = v27;
  uint64_t v28 = *(void **)(v24 + qword_1EA2E3930);
  *(void *)(inited + 56) = v28;
  uint64_t v29 = *v48;
  unint64_t v30 = v48[1];
  swift_bridgeObjectRetain();
  id v31 = v28;
  id v32 = sub_1C244FAE0(v29, v30);
  swift_bridgeObjectRelease();
  *(void *)(inited + 64) = v32;
  uint64_t v51 = inited;
  sub_1C254F730();
  id v33 = (void *)v51;
  uint64_t v51 = MEMORY[0x1E4FBC860];
  id v34 = (void *)v33[4];
  if (v34)
  {
    id v35 = v34;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v36 = (void *)v33[5];
  if (v36)
  {
    id v37 = v36;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v38 = (void *)v33[6];
  if (v38)
  {
    id v39 = v38;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v40 = (void *)v33[7];
  if (v40)
  {
    id v41 = v40;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v42 = (void *)v33[8];
  if (v42)
  {
    id v43 = v42;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  swift_bridgeObjectRelease();
  id v44 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v45 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v44);

  return v45;
}

id sub_1C244EB7C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C254CD90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CD40();
  id v9 = a3;
  id v10 = a1;
  uint64_t v11 = (void *)sub_1C254CD30();
  uint64_t v12 = (objc_class *)type metadata accessor for CategorySearchViewController();
  v16.id receiver = v10;
  v16.Class super_class = v12;
  objc_msgSendSuper2(&v16, sel_collectionView_didSelectItemAtIndexPath_, v9, v11);

  id result = objc_msgSend(v10, sel_collectionView);
  if (result)
  {
    unint64_t v14 = result;
    uint64_t v15 = (void *)sub_1C254CD30();
    objc_msgSend(v14, sel_deselectItemAtIndexPath_animated_, v15, 1);

    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C244ECF4()
{
}

void sub_1C244ED24(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C244ED58()
{
  uint64_t v1 = *(void **)(v0 + qword_1EA2E3920 + 8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

id sub_1C244EE28()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CategorySearchViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C244EE60(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_1EA2E3920 + 8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C244EF34()
{
  uint64_t v1 = (uint64_t *)(v0 + qword_1EA2E3948);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1C244EF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (void *)(v3 + qword_1EA2E3948);
  swift_beginAccess();
  *uint64_t v6 = a1;
  v6[1] = a2;
  swift_bridgeObjectRelease();
  sub_1C244DB80();
  sub_1C244F168();
  swift_release();
  uint64_t v7 = (void *)sub_1C254D560();
  swift_release();
  sub_1C244E49C();
  sub_1C254DF90();
}

void (*sub_1C244F034(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C244F094;
}

void sub_1C244F094(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_1C244DB80();
    sub_1C244F168();
    swift_release();
    id v3 = (id)sub_1C254D560();
    swift_release();
    sub_1C244E49C();
    sub_1C254DF90();
  }
}

uint64_t sub_1C244F13C()
{
  return swift_retain();
}

void sub_1C244F150(void *a1@<X8>)
{
  *a1 = *(void *)(*v1 + qword_1EA2E3940);
}

uint64_t sub_1C244F168()
{
  uint64_t v1 = v0;
  sub_1C244F6F4(0, (unint64_t *)&unk_1EA2E3970, (uint64_t (*)(uint64_t))sub_1C22259FC, (uint64_t (*)(void))sub_1C22ECA38, MEMORY[0x1E4F663C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v18 - v5;
  sub_1C244FA7C(0, &qword_1EA2E0890, MEMORY[0x1E4F664A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v18 - v8;
  if (*(void *)(v0 + 16))
  {
    uint64_t v10 = *(void *)(v0 + 16);
  }
  else
  {
    sub_1C244F484();
    sub_1C254DAE0();
    sub_1C254DAF0();
    sub_1C22DD8FC();
    *(void *)&v9[*(int *)(v11 + 48)] = 0;
    uint64_t v12 = *MEMORY[0x1E4F66498];
    uint64_t v13 = sub_1C254DA70();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 104))(v9, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
    sub_1C22259FC();
    id v16 = objc_allocWithZone(v15);
    sub_1C254D530();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4F663B8], v3);
    sub_1C244F6F4(0, &qword_1EA2E3918, (uint64_t (*)(uint64_t))sub_1C22259FC, (uint64_t (*)(void))sub_1C22ECA38, MEMORY[0x1E4F663D0]);
    swift_allocObject();
    uint64_t v10 = sub_1C254D5D0();
    *(void *)(v1 + 16) = v10;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v10;
}

id sub_1C244F484()
{
  uint64_t v1 = (void *)v0[11];
  if (v1)
  {
    id v2 = (id)v0[11];
  }
  else
  {
    uint64_t v3 = v0;
    __swift_project_boxed_opaque_existential_1Tm(v0 + 3, v0[6]);
    uint64_t v4 = (void *)sub_1C254CE10();
    sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C255CEB0;
    id v6 = objc_allocWithZone(MEMORY[0x1E4F29008]);
    uint64_t v7 = (void *)sub_1C254F430();
    id v8 = objc_msgSend(v6, sel_initWithKey_ascending_selector_, v7, 1, sel_localizedStandardCompare_);

    *(void *)(v5 + 32) = v8;
    sub_1C254F730();
    id v9 = (void *)sub_1C254FD60();

    swift_bridgeObjectRelease();
    uint64_t v10 = (void *)v3[11];
    v3[11] = v9;
    id v2 = v9;

    uint64_t v1 = 0;
  }
  id v11 = v1;
  return v2;
}

uint64_t sub_1C244F5E8()
{
  sub_1C2415E30(0, (unint64_t *)&qword_1EA2DEA38, (unint64_t *)&qword_1EA2DEA40);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255CD90;
  uint64_t v1 = sub_1C244F168();
  unint64_t v2 = sub_1C244F658();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v2;
  return v0;
}

unint64_t sub_1C244F658()
{
  unint64_t result = qword_1EA2E3910;
  if (!qword_1EA2E3910)
  {
    sub_1C244F6F4(255, &qword_1EA2E3918, (uint64_t (*)(uint64_t))sub_1C22259FC, (uint64_t (*)(void))sub_1C22ECA38, MEMORY[0x1E4F663D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E3910);
  }
  return result;
}

void sub_1C244F6F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}