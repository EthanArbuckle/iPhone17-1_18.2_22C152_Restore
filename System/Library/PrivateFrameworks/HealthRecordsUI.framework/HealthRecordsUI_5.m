id sub_1C24EDD44(char a1)
{
  char *v1;
  char *v2;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t vars8;

  v2 = v1;
  v4 = self;
  v5 = OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_customConstraints;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_deactivateConstraints_, v6);

  if (a1)
  {
    v7 = sub_1C24ED1C8();
  }
  else
  {
    sub_1C21ACA3C();
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C255CEB0;
    *(void *)(v8 + 32) = sub_1C24ED08C();
    sub_1C254F730();
    v7 = v8;
  }
  *(void *)&v2[v5] = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v9 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v9);

  return objc_msgSend(v2, sel_setNeedsLayout);
}

uint64_t (*AttachmentSearchCell.item.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C24EDF08;
}

uint64_t sub_1C24EDF08(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C24ED738();
  }
  return result;
}

id AttachmentSearchCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id AttachmentSearchCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_customConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleLabelBottomConstraint] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabelConstraints] = 0;
  v10 = &v4[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  v40.receiver = v4;
  v40.super_class = ObjectType;
  id v11 = objc_msgSendSuper2(&v40, sel_initWithFrame_, a1, a2, a3, a4);
  id v12 = objc_msgSend(v11, sel_contentView);
  id v13 = sub_1C24ECF1C();
  objc_msgSend(v12, sel_addSubview_, v13);

  id v14 = objc_msgSend(v11, sel_contentView);
  id v15 = sub_1C24ECFA0();
  objc_msgSend(v14, sel_addSubview_, v15);

  v16 = self;
  id v17 = v11;
  id v18 = objc_msgSend(v16, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v17, sel_setBackgroundColor_, v18);

  id v19 = v17;
  sub_1C254CDB0();
  id v20 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C254FE70();

  v21 = self;
  sub_1C21ACA3C();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C255CD80;
  id v23 = sub_1C24ECF1C();
  id v24 = objc_msgSend(v23, sel_leadingAnchor);

  id v25 = objc_msgSend(v19, sel_contentView);
  id v26 = objc_msgSend(v25, sel_leadingAnchor);

  id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);
  *(void *)(v22 + 32) = v27;
  id v28 = sub_1C24ECF1C();
  id v29 = objc_msgSend(v28, sel_topAnchor);

  id v30 = objc_msgSend(v19, sel_contentView);
  id v31 = objc_msgSend(v30, sel_topAnchor);

  id v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v31);
  *(void *)(v22 + 40) = v32;
  id v33 = sub_1C24ECF1C();
  id v34 = objc_msgSend(v33, sel_trailingAnchor);

  id v35 = objc_msgSend(v19, sel_contentView);
  id v36 = objc_msgSend(v35, sel_trailingAnchor);

  id v37 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v36);
  *(void *)(v22 + 48) = v37;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  v38 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_activateConstraints_, v38);

  sub_1C24EDD44(0);
  return v19;
}

id AttachmentSearchCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C24EE4E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C24EE538(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1E4F66028];
  sub_1C225F0B8(a1, v3, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
  swift_endAccess();
  sub_1C24ED738();
  return sub_1C24EEC98(a1, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, v4, (uint64_t (*)(void))sub_1C225EBC8);
}

uint64_t (*sub_1C24EE5F4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C24EDF08;
}

uint64_t sub_1C24EE654()
{
  return sub_1C254D330();
}

void sub_1C24EE65C()
{
  qword_1EA2E4900 = 0x4028000000000000;
}

void sub_1C24EE66C()
{
  qword_1EA2E4908 = 0x402A000000000000;
}

void sub_1C24EE67C()
{
  qword_1EA2E4910 = 0x4030000000000000;
}

void sub_1C24EE68C()
{
  qword_1EA2E4918 = 0x4026000000000000;
}

Swift::Void __swiftcall AttachmentSearchCell.didSelectCell(_:in:)(UIView *_, UIViewController *in)
{
}

void sub_1C24EE6A4(uint64_t a1, void *a2)
{
}

void sub_1C24EE6CC(void *a1)
{
  uint64_t v3 = type metadata accessor for PresentationContext(0);
  MEMORY[0x1F4188790](v3 - 8);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  v8 = (char *)v21 - v7;
  uint64_t v9 = v1 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  sub_1C2227014(v9, (uint64_t)v22);
  if (v23)
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    type metadata accessor for AttachmentSearchItem();
    if (swift_dynamicCast())
    {
      uint64_t v10 = v21[1];
      if (qword_1EBB6D858 != -1) {
        swift_once();
      }
      id v11 = *(void **)(v10 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_record);
      id v12 = *(void **)(v10 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_profile);
      uint64_t v13 = v10 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchItem_attachmentUUID;
      uint64_t v14 = sub_1C254CB40();
      uint64_t v15 = *(void *)(v14 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
      sub_1C242B528((uint64_t)v8, (uint64_t)v5);
      id v16 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordDetailViewController(0));
      id v17 = v11;
      id v18 = v12;
      id v19 = sub_1C24CD370(v17, v18, (uint64_t)v5);

      id v20 = objc_msgSend(v19, sel_navigationItem);
      objc_msgSend(v20, sel_setLargeTitleDisplayMode_, 2);

      sub_1C24EECF8((uint64_t)v8, type metadata accessor for PresentationContext);
      objc_msgSend(a1, sel_showViewController_sender_, v19, 0);
      swift_release();
    }
  }
  else
  {
    sub_1C24EEC98((uint64_t)v22, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
  }
}

uint64_t sub_1C24EE9AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a2);
}

uint64_t sub_1C24EEA08()
{
  return type metadata accessor for AttachmentSearchItem();
}

uint64_t type metadata accessor for AttachmentSearchItem()
{
  uint64_t result = qword_1EA2E4958;
  if (!qword_1EA2E4958) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C24EEA5C()
{
  uint64_t result = sub_1C254CAD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C254CB40();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for AttachmentSearchItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AttachmentSearchItem);
}

uint64_t dispatch thunk of AttachmentSearchItem.__allocating_init(name:previewString:previewStringMatchRanges:record:attachmentUUID:profile:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

void sub_1C24EEB8C()
{
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_customConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___titleLabelBottomConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell____lazy_storage___previewLabelConstraints] = 0;
  unint64_t v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI20AttachmentSearchCell_item];
  *(_OWORD *)unint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;

  sub_1C25505F0();
  __break(1u);
}

uint64_t sub_1C24EEC48()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C24EEC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C24EECF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C24EED58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C24EEDBC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void destroy for AttachmentSearchFeedItemViewData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  unint64_t v2 = *(void **)(a1 + 40);
}

void *initializeWithCopy for AttachmentSearchFeedItemViewData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  uint64_t v6 = (void *)a2[5];
  a1[4] = v5;
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v5;
  id v8 = v6;
  return a1;
}

void *assignWithCopy for AttachmentSearchFeedItemViewData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  id v7 = (void *)a1[5];
  id v8 = (void *)a2[5];
  a1[5] = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for AttachmentSearchFeedItemViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for AttachmentSearchFeedItemViewData()
{
  return &type metadata for AttachmentSearchFeedItemViewData;
}

id sub_1C24EEFB8()
{
  if (sub_1C24EF8E8())
  {
    return sub_1C24F0FA8();
  }
  else
  {
    switch((unint64_t)objc_msgSend(v0, sel_signatureStatus))
    {
      case 1uLL:
        if (qword_1EA2DD680 != -1) {
          goto LABEL_18;
        }
        goto LABEL_9;
      case 2uLL:
        if (qword_1EA2DD680 != -1) {
          swift_once();
        }
        id v8 = (id)qword_1EA2E0B60;
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_1C254C730();
        uint64_t v5 = v9;
        swift_bridgeObjectRelease();

        uint64_t v10 = (void *)sub_1C254F430();
        id v7 = objc_msgSend(self, sel_systemImageNamed_, v10, 0xE000000000000000);

        id v11 = objc_msgSend(self, sel_systemGreenColor);
        goto LABEL_16;
      case 3uLL:
        if (qword_1EA2DD680 != -1) {
          swift_once();
        }
        id v12 = (id)qword_1EA2E0B60;
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_1C254C730();
        uint64_t v5 = v13;
        swift_bridgeObjectRelease();

        uint64_t v14 = (void *)sub_1C254F430();
        id v7 = objc_msgSend(self, sel_systemImageNamed_, v14, 0xE000000000000000);

        id v11 = objc_msgSend(self, sel_systemRedColor);
LABEL_16:
        id v6 = v11;
        break;
      default:
        if (qword_1EA2DD680 != -1) {
LABEL_18:
        }
          swift_once();
LABEL_9:
        id v2 = (id)qword_1EA2E0B60;
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_1C254C730();
        uint64_t v5 = v4;
        swift_bridgeObjectRelease();

        id v6 = 0;
        id v7 = 0;
        break;
    }
    id v15 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v3, v5, 0, v7, v6);
    swift_bridgeObjectRelease();

    return v15;
  }
}

id sub_1C24EF3D8()
{
  if (sub_1C24EF8E8())
  {
    return sub_1C24F0FA8();
  }
  else
  {
    if (objc_msgSend(v0, sel_signatureStatus) == (id)2)
    {
      id v2 = objc_msgSend(v0, sel_recordIssuerDisplayName);
      uint64_t v3 = sub_1C254F470();
      uint64_t v5 = v4;

      id v6 = (void *)sub_1C254F430();
      id v7 = objc_msgSend(self, sel_systemImageNamed_, v6);

      id v8 = objc_msgSend(self, sel_systemGreenColor);
    }
    else
    {
      if (qword_1EA2DD680 != -1) {
        swift_once();
      }
      id v9 = (id)qword_1EA2E0B60;
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C254C730();
      uint64_t v5 = v10;
      swift_bridgeObjectRelease();

      id v8 = 0;
      id v7 = 0;
    }
    id v11 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v3, v5, 0, v7, v8);
    swift_bridgeObjectRelease();

    return v11;
  }
}

uint64_t sub_1C24EF5D4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C23F5310();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C24EFE8C(v6);
  return sub_1C2550470();
}

uint64_t sub_1C24EF650(uint64_t a1)
{
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    unint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v1 = (uint64_t)sub_1C2290934(v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v8 = v1;
  sub_1C24EF5D4(&v8);
  uint64_t v2 = v8;
  if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    if (*(void *)(v8 + 16)) {
      goto LABEL_7;
    }
LABEL_13:
    swift_release();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C2550620();
  swift_release();
  if (!v6) {
    goto LABEL_13;
  }
LABEL_7:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x1C87588E0](0, v2);
    goto LABEL_10;
  }
  if (*(void *)(v2 + 16))
  {
    id v3 = *(id *)(v2 + 32);
LABEL_10:
    id v4 = v3;
    swift_release();
    return (uint64_t)v4;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

id sub_1C24EF74C()
{
  if (sub_1C24EF8E8())
  {
    return sub_1C24F0FA8();
  }
  else
  {
    id v2 = objc_msgSend(v0, sel_signatureStatus);
    if (v2 == (id)3)
    {
      id v3 = (void *)sub_1C254F430();
      id v4 = &selRef_systemRedColor;
    }
    else if (v2 == (id)2)
    {
      id v3 = (void *)sub_1C254F430();
      id v4 = &selRef_systemGreenColor;
    }
    else
    {
      id v3 = (void *)sub_1C254F430();
      id v4 = &selRef_secondaryLabelColor;
    }
    id v5 = objc_msgSend(self, sel_systemImageNamed_, v3);

    id v6 = [self *v4];
    id v7 = objc_msgSend(v0, sel_recordIssuerDisplayName);
    uint64_t v8 = sub_1C254F470();
    uint64_t v10 = v9;

    id v11 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v8, v10, 0, v5, v6);
    swift_bridgeObjectRelease();

    return v11;
  }
}

uint64_t sub_1C24EF8E8()
{
  uint64_t v1 = v0;
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C254CAD0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v11 = (char *)&v18 - v10;
  id v12 = objc_msgSend(v1, sel_expirationDate);
  if (!v12)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  uint64_t v13 = v12;
  sub_1C254CA80();

  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v14(v4, v9, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_1C22178C0((uint64_t)v4);
    char v15 = 0;
    return v15 & 1;
  }
  v14(v11, v4, v5);
  sub_1C254CA90();
  char v15 = sub_1C254CA70();
  id v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v9, v5);
  v16(v11, v5);
  return v15 & 1;
}

NSAttributedString __swiftcall HKSignedClinicalDataRecord.attributedMeaningfulDateString(with:)(Swift::String with)
{
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  id v2 = objc_msgSend(v1, sel_subject);
  id v3 = objc_msgSend(v2, sel_fullName);

  sub_1C254F470();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  char v4 = sub_1C24EF8E8();
  id v5 = objc_msgSend(self, sel_configurationWithScale_, 1);
  if (v4)
  {
    uint64_t v6 = (void *)sub_1C254F430();
    id v7 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v6, v5);

    if (v7)
    {
LABEL_5:
      uint64_t v10 = self;
      id v11 = objc_msgSend(v10, sel_secondaryLabelColor);
      id v12 = v7;
      id v13 = objc_msgSend(v10, sel_secondaryLabelColor);
      id v14 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(with._countAndFlagsBits, (uint64_t)with._object, v11, v7, v13);
      swift_bridgeObjectRelease();

      return (NSAttributedString)v14;
    }
    __break(1u);
  }
  uint64_t v8 = (void *)sub_1C254F430();
  id v7 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v8, v5);

  if (v7) {
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

Class sub_1C24EFD70(void *a1)
{
  uint64_t v2 = sub_1C254F470();
  char v4 = v3;
  id v5 = a1;
  v6._countAndFlagsBits = v2;
  v6._object = v4;
  v7.super.isa = HKSignedClinicalDataRecord.attributedMeaningfulDateString(with:)(v6).super.isa;

  swift_bridgeObjectRelease();
  return v7.super.isa;
}

BOOL sub_1C24EFDE4(void *a1)
{
  id v1 = a1;
  if (objc_msgSend(v1, sel_signatureStatus))
  {
    id v2 = objc_msgSend(v1, sel_signatureStatus);

    return v2 == (id)1;
  }
  else
  {

    return 1;
  }
}

BOOL HKSignedClinicalDataRecord.shouldReverifySignature.getter()
{
  return !objc_msgSend(v0, sel_signatureStatus) || objc_msgSend(v0, sel_signatureStatus) == (id)1;
}

void sub_1C24EFE8C(uint64_t *a1)
{
  uint64_t v137 = sub_1C254CAD0();
  uint64_t v2 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137);
  v136 = (char *)&v122 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  v135 = (char *)&v122 - v5;
  uint64_t v6 = a1[1];
  uint64_t v7 = sub_1C2550800();
  if (v7 >= v6)
  {
    if (v6 < 0) {
      goto LABEL_134;
    }
    if (v6) {
      sub_1C24F0828(0, v6, 1, a1);
    }
    return;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_142;
  }
  uint64_t v127 = v7;
  if (v6 < 2)
  {
    id v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v140 = MEMORY[0x1E4FBC860];
    v132 = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      unint64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_100:
      uint64_t v113 = v133;
      if (v14 >= 2)
      {
        uint64_t v114 = *a1;
        do
        {
          unint64_t v115 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_129;
          }
          if (!v114) {
            goto LABEL_141;
          }
          v116 = v11;
          v117 = v11 + 32;
          uint64_t v118 = *(void *)&v11[16 * v115 + 32];
          uint64_t v119 = *(void *)&v11[16 * v14 + 24];
          sub_1C24F0A64((void **)(v114 + 8 * v118), (id *)(v114 + 8 * *(void *)&v117[16 * v14 - 16]), (id *)(v114 + 8 * v119), v132);
          if (v113) {
            break;
          }
          if (v119 < v118) {
            goto LABEL_130;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v116 = sub_1C23F321C((uint64_t)v116);
          }
          if (v115 >= *((void *)v116 + 2)) {
            goto LABEL_131;
          }
          v120 = &v116[16 * v115 + 32];
          *(void *)v120 = v118;
          *((void *)v120 + 1) = v119;
          unint64_t v121 = *((void *)v116 + 2);
          if (v14 > v121) {
            goto LABEL_132;
          }
          id v11 = v116;
          memmove(&v116[16 * v14 + 16], &v116[16 * v14 + 32], 16 * (v121 - v14));
          *((void *)v116 + 2) = v121 - 1;
          unint64_t v14 = v121 - 1;
        }
        while (v121 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(void *)((v140 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C254F730();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1C24F0F68();
    uint64_t v10 = sub_1C254F780();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    v132 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v140 = v10;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  v134 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v125 = v13 + 16;
  v123 = a1;
  uint64_t v124 = v13 - 8;
  id v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v130 = v6;
  uint64_t v139 = v13;
  while (1)
  {
    uint64_t v15 = v12;
    uint64_t v16 = v12 + 1;
    uint64_t v129 = v12;
    if (v12 + 1 < v6)
    {
      id v17 = *(void **)(v13 + 8 * v12);
      id v18 = *(id *)(v13 + 8 * v16);
      id v19 = v17;
      id v20 = objc_msgSend(v18, sel_relevantDate);
      v21 = v135;
      sub_1C254CA80();

      id v22 = objc_msgSend(v19, sel_relevantDate);
      uint64_t v23 = v136;
      sub_1C254CA80();

      uint64_t v131 = sub_1C254CAA0();
      id v24 = *v134;
      id v25 = v23;
      uint64_t v26 = v137;
      (*v134)(v25, v137);
      v128 = v24;
      v24(v21, v26);

      uint64_t v6 = v130;
      uint64_t v16 = v15 + 2;
      if (v15 + 2 < v6)
      {
        v126 = v11;
        id v27 = (id *)(v125 + 8 * v15);
        while (1)
        {
          uint64_t v28 = v16;
          LODWORD(v138) = v131 == 1;
          id v29 = *(v27 - 1);
          id v30 = *v27;
          id v31 = v29;
          id v32 = objc_msgSend(v30, sel_relevantDate);
          id v33 = v135;
          sub_1C254CA80();

          id v34 = objc_msgSend(v31, sel_relevantDate);
          id v35 = v136;
          sub_1C254CA80();

          uint64_t v36 = sub_1C254CAA0();
          id v37 = v35;
          uint64_t v38 = v137;
          v39 = v128;
          v128(v37, v137);
          v39(v33, v38);

          if (v138 == (v36 != 1)) {
            break;
          }
          uint64_t v16 = v28 + 1;
          ++v27;
          uint64_t v6 = v130;
          if (v130 == v28 + 1)
          {
            uint64_t v16 = v130;
            id v11 = v126;
            goto LABEL_22;
          }
        }
        id v11 = v126;
        uint64_t v6 = v130;
        uint64_t v16 = v28;
LABEL_22:
        uint64_t v15 = v129;
      }
      uint64_t v13 = v139;
      if (v131 == 1)
      {
        if (v16 < v15) {
          goto LABEL_135;
        }
        if (v15 < v16)
        {
          objc_super v40 = (uint64_t *)(v124 + 8 * v16);
          uint64_t v41 = v16;
          uint64_t v42 = v15;
          v43 = (uint64_t *)(v139 + 8 * v15);
          do
          {
            if (v42 != --v41)
            {
              if (!v13) {
                goto LABEL_140;
              }
              uint64_t v44 = *v43;
              uint64_t *v43 = *v40;
              *objc_super v40 = v44;
            }
            ++v42;
            --v40;
            ++v43;
          }
          while (v42 < v41);
        }
      }
    }
    if (v16 >= v6) {
      goto LABEL_50;
    }
    if (__OFSUB__(v16, v15)) {
      goto LABEL_133;
    }
    if (v16 - v15 >= v127) {
      goto LABEL_50;
    }
    if (__OFADD__(v15, v127)) {
      goto LABEL_136;
    }
    v45 = (void (*)(char *, uint64_t))(v15 + v127 >= v6 ? v6 : v15 + v127);
    if ((uint64_t)v45 < v15) {
      break;
    }
    if ((void (*)(char *, uint64_t))v16 != v45)
    {
      v126 = v11;
      uint64_t v46 = v124 + 8 * v16;
      v128 = v45;
      do
      {
        uint64_t v138 = v16;
        v47 = *(void **)(v13 + 8 * v16);
        uint64_t v48 = v15;
        uint64_t v131 = v46;
        while (1)
        {
          v49 = *(void **)v46;
          id v50 = v47;
          id v51 = v49;
          id v52 = objc_msgSend(v50, sel_relevantDate);
          v53 = v135;
          sub_1C254CA80();

          id v54 = objc_msgSend(v51, sel_relevantDate);
          v55 = v136;
          sub_1C254CA80();

          uint64_t v56 = sub_1C254CAA0();
          v57 = *v134;
          v58 = v55;
          uint64_t v59 = v137;
          (*v134)(v58, v137);
          v57(v53, v59);

          if (v56 != 1) {
            break;
          }
          uint64_t v13 = v139;
          if (!v139) {
            goto LABEL_138;
          }
          v60 = *(void **)v46;
          v47 = *(void **)(v46 + 8);
          *(void *)uint64_t v46 = v47;
          *(void *)(v46 + 8) = v60;
          v46 -= 8;
          if (v138 == ++v48) {
            goto LABEL_43;
          }
        }
        uint64_t v13 = v139;
LABEL_43:
        uint64_t v16 = v138 + 1;
        uint64_t v46 = v131 + 8;
        uint64_t v15 = v129;
      }
      while ((void (*)(char *, uint64_t))(v138 + 1) != v128);
      uint64_t v16 = (uint64_t)v128;
      id v11 = v126;
    }
LABEL_50:
    if (v16 < v15) {
      goto LABEL_128;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v11 = sub_1C23F277C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v62 = *((void *)v11 + 2);
    unint64_t v61 = *((void *)v11 + 3);
    unint64_t v14 = v62 + 1;
    uint64_t v13 = v139;
    if (v62 >= v61 >> 1)
    {
      v112 = sub_1C23F277C((char *)(v61 > 1), v62 + 1, 1, v11);
      uint64_t v13 = v139;
      id v11 = v112;
    }
    *((void *)v11 + 2) = v14;
    v63 = v11 + 32;
    v64 = &v11[16 * v62 + 32];
    *(void *)v64 = v15;
    *((void *)v64 + 1) = v16;
    uint64_t v138 = v16;
    if (v62)
    {
      while (1)
      {
        unint64_t v65 = v14 - 1;
        if (v14 >= 4)
        {
          v70 = &v63[16 * v14];
          uint64_t v71 = *((void *)v70 - 8);
          uint64_t v72 = *((void *)v70 - 7);
          BOOL v76 = __OFSUB__(v72, v71);
          uint64_t v73 = v72 - v71;
          if (v76) {
            goto LABEL_117;
          }
          uint64_t v75 = *((void *)v70 - 6);
          uint64_t v74 = *((void *)v70 - 5);
          BOOL v76 = __OFSUB__(v74, v75);
          uint64_t v68 = v74 - v75;
          char v69 = v76;
          if (v76) {
            goto LABEL_118;
          }
          unint64_t v77 = v14 - 2;
          v78 = &v63[16 * v14 - 32];
          uint64_t v80 = *(void *)v78;
          uint64_t v79 = *((void *)v78 + 1);
          BOOL v76 = __OFSUB__(v79, v80);
          uint64_t v81 = v79 - v80;
          if (v76) {
            goto LABEL_120;
          }
          BOOL v76 = __OFADD__(v68, v81);
          uint64_t v82 = v68 + v81;
          if (v76) {
            goto LABEL_123;
          }
          if (v82 >= v73)
          {
            v100 = &v63[16 * v65];
            uint64_t v102 = *(void *)v100;
            uint64_t v101 = *((void *)v100 + 1);
            BOOL v76 = __OFSUB__(v101, v102);
            uint64_t v103 = v101 - v102;
            if (v76) {
              goto LABEL_127;
            }
            BOOL v93 = v68 < v103;
            goto LABEL_87;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v94 = *((void *)v11 + 4);
            uint64_t v95 = *((void *)v11 + 5);
            BOOL v76 = __OFSUB__(v95, v94);
            uint64_t v87 = v95 - v94;
            char v88 = v76;
            goto LABEL_81;
          }
          uint64_t v67 = *((void *)v11 + 4);
          uint64_t v66 = *((void *)v11 + 5);
          BOOL v76 = __OFSUB__(v66, v67);
          uint64_t v68 = v66 - v67;
          char v69 = v76;
        }
        if (v69) {
          goto LABEL_119;
        }
        unint64_t v77 = v14 - 2;
        v83 = &v63[16 * v14 - 32];
        uint64_t v85 = *(void *)v83;
        uint64_t v84 = *((void *)v83 + 1);
        BOOL v86 = __OFSUB__(v84, v85);
        uint64_t v87 = v84 - v85;
        char v88 = v86;
        if (v86) {
          goto LABEL_122;
        }
        v89 = &v63[16 * v65];
        uint64_t v91 = *(void *)v89;
        uint64_t v90 = *((void *)v89 + 1);
        BOOL v76 = __OFSUB__(v90, v91);
        uint64_t v92 = v90 - v91;
        if (v76) {
          goto LABEL_125;
        }
        if (__OFADD__(v87, v92)) {
          goto LABEL_126;
        }
        if (v87 + v92 >= v68)
        {
          BOOL v93 = v68 < v92;
LABEL_87:
          if (v93) {
            unint64_t v65 = v77;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v88) {
          goto LABEL_121;
        }
        v96 = &v63[16 * v65];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v76 = __OFSUB__(v97, v98);
        uint64_t v99 = v97 - v98;
        if (v76) {
          goto LABEL_124;
        }
        if (v99 < v87) {
          goto LABEL_14;
        }
LABEL_89:
        v104 = v11;
        unint64_t v105 = v65 - 1;
        if (v65 - 1 >= v14)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        if (!v13) {
          goto LABEL_139;
        }
        v106 = &v63[16 * v105];
        uint64_t v107 = *(void *)v106;
        v108 = &v63[16 * v65];
        uint64_t v109 = *((void *)v108 + 1);
        uint64_t v110 = v133;
        sub_1C24F0A64((void **)(v13 + 8 * *(void *)v106), (id *)(v13 + 8 * *(void *)v108), (id *)(v13 + 8 * v109), v132);
        uint64_t v133 = v110;
        if (v110) {
          goto LABEL_111;
        }
        if (v109 < v107) {
          goto LABEL_114;
        }
        if (v65 > *((void *)v104 + 2)) {
          goto LABEL_115;
        }
        *(void *)v106 = v107;
        *(void *)&v63[16 * v105 + 8] = v109;
        unint64_t v111 = *((void *)v104 + 2);
        if (v65 >= v111) {
          goto LABEL_116;
        }
        id v11 = v104;
        unint64_t v14 = v111 - 1;
        memmove(&v63[16 * v65], v108 + 16, 16 * (v111 - 1 - v65));
        *((void *)v104 + 2) = v111 - 1;
        uint64_t v13 = v139;
        if (v111 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_14:
    uint64_t v6 = v130;
    uint64_t v12 = v138;
    if (v138 >= v130)
    {
      a1 = v123;
      goto LABEL_100;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  sub_1C25505E0();
  __break(1u);
}

void sub_1C24F0828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v31 = a1;
  uint64_t v36 = sub_1C254CAD0();
  MEMORY[0x1F4188790](v36);
  id v35 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v34 = (char *)&v29 - v10;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v11 = *a4;
    uint64_t v33 = v9 + 8;
    uint64_t v37 = v11;
    uint64_t v12 = v11 + 8 * a3 - 8;
    uint64_t v13 = v35;
    unint64_t v14 = (void (**)(char *, uint64_t))(v9 + 8);
LABEL_5:
    uint64_t v15 = *(void **)(v37 + 8 * a3);
    uint64_t v16 = v31;
    uint64_t v32 = v12;
    uint64_t v38 = a3;
    while (1)
    {
      id v17 = *(void **)v12;
      id v18 = v15;
      id v39 = v18;
      id v19 = v17;
      id v20 = objc_msgSend(v18, sel_relevantDate);
      v21 = v34;
      sub_1C254CA80();

      id v22 = objc_msgSend(v19, sel_relevantDate);
      sub_1C254CA80();

      uint64_t v23 = sub_1C254CAA0();
      id v24 = *v14;
      uint64_t v25 = v36;
      (*v14)(v13, v36);
      v24(v21, v25);

      BOOL v26 = v23 == 1;
      uint64_t v27 = v38;
      if (!v26)
      {
LABEL_4:
        a3 = v27 + 1;
        uint64_t v12 = v32 + 8;
        if (a3 == v30) {
          return;
        }
        goto LABEL_5;
      }
      if (!v37) {
        break;
      }
      uint64_t v28 = *(void **)v12;
      uint64_t v15 = *(void **)(v12 + 8);
      *(void *)uint64_t v12 = v15;
      *(void *)(v12 + 8) = v28;
      v12 -= 8;
      if (v27 == ++v16) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C24F0A64(void **a1, id *a2, id *a3, void **a4)
{
  uint64_t v59 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  v58 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  v57 = (char *)&v49 - v11;
  uint64_t v12 = (char *)a2 - (char *)a1;
  uint64_t v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0) {
    uint64_t v13 = (char *)a2 - (char *)a1;
  }
  uint64_t v14 = v13 >> 3;
  id v54 = a3;
  uint64_t v15 = (char *)a3 - (char *)a2;
  uint64_t v16 = v15 / 8;
  unint64_t v62 = a1;
  unint64_t v61 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7) {
      goto LABEL_43;
    }
    if (a4 != a2 || &a2[v16] <= a4) {
      memmove(a4, a2, 8 * v16);
    }
    uint64_t v30 = &a4[v16];
    v60 = v30;
    unint64_t v62 = a2;
    if (v15 < 8 || a1 >= a2) {
      goto LABEL_42;
    }
    id v50 = (void (**)(char *, uint64_t))(v8 + 8);
    id v51 = a1;
    uint64_t v31 = v54 - 1;
    uint64_t v32 = a2;
    id v52 = a4;
    uint64_t v33 = (void (**)(char *, uint64_t))(v8 + 8);
    while (1)
    {
      uint64_t v56 = a2;
      id v54 = v30;
      v55 = v31 + 1;
      id v35 = v30 - 1;
      uint64_t v36 = *--v32;
      uint64_t v37 = *(v30 - 1);
      v53 = v37;
      id v38 = v36;
      id v39 = objc_msgSend(v37, sel_relevantDate);
      objc_super v40 = v57;
      sub_1C254CA80();

      id v41 = objc_msgSend(v38, sel_relevantDate);
      uint64_t v42 = v58;
      sub_1C254CA80();

      uint64_t v43 = sub_1C254CAA0();
      uint64_t v44 = *v33;
      v45 = v42;
      uint64_t v46 = v59;
      (*v33)(v45, v59);
      v44(v40, v46);

      if (v43 == 1) {
        break;
      }
      v60 = v35;
      uint64_t v32 = v56;
      if (v55 < v54 || v31 >= v54)
      {
        *uint64_t v31 = *v35;
        uint64_t v30 = v35;
        goto LABEL_30;
      }
      unint64_t v34 = (unint64_t)v51;
      unint64_t v47 = (unint64_t)v52;
      if (v55 != v54) {
        *uint64_t v31 = *v35;
      }
      uint64_t v30 = v35;
      if ((unint64_t)v35 <= v47) {
        goto LABEL_42;
      }
LABEL_31:
      --v31;
      a2 = v32;
      if ((unint64_t)v32 <= v34) {
        goto LABEL_42;
      }
    }
    uint64_t v30 = v54;
    if (v55 != v56 || v31 >= v56) {
      *uint64_t v31 = *v32;
    }
    unint64_t v62 = v32;
LABEL_30:
    unint64_t v34 = (unint64_t)v51;
    if (v30 <= v52) {
      goto LABEL_42;
    }
    goto LABEL_31;
  }
  if (v12 >= -7)
  {
    if (a4 != a1 || &a1[v14] <= a4) {
      memmove(a4, a1, 8 * v14);
    }
    v53 = &a4[v14];
    v60 = v53;
    if (v12 >= 8 && a2 < v54)
    {
      id v50 = (void (**)(char *, uint64_t))(v8 + 8);
      do
      {
        id v17 = *a4;
        id v18 = (id *)*a2;
        uint64_t v56 = v18;
        id v19 = v17;
        v55 = v19;
        id v20 = objc_msgSend(v18, sel_relevantDate);
        v21 = a2;
        id v22 = v57;
        sub_1C254CA80();

        id v23 = objc_msgSend(v19, sel_relevantDate);
        id v24 = v58;
        sub_1C254CA80();

        uint64_t v25 = a4;
        uint64_t v26 = sub_1C254CAA0();
        uint64_t v27 = *v50;
        uint64_t v28 = v59;
        (*v50)(v24, v59);
        v27(v22, v28);

        if (v26 == 1)
        {
          uint64_t v29 = v21 + 1;
          a4 = v25;
          if (a1 < v21 || a1 >= v29 || a1 != v21) {
            *a1 = *v21;
          }
        }
        else
        {
          if (a1 != v25) {
            *a1 = *v25;
          }
          a4 = v25 + 1;
          unint64_t v61 = v25 + 1;
          uint64_t v29 = v21;
        }
        unint64_t v62 = ++a1;
        if (a4 >= v53) {
          break;
        }
        a2 = v29;
      }
      while (v29 < v54);
    }
LABEL_42:
    sub_1C23F2978(&v62, &v61, &v60);
    return 1;
  }
LABEL_43:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

unint64_t sub_1C24F0F68()
{
  unint64_t result = qword_1EA2DFAF8;
  if (!qword_1EA2DFAF8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DFAF8);
  }
  return result;
}

id sub_1C24F0FA8()
{
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  uint64_t v4 = (void *)sub_1C254F430();
  id v5 = objc_msgSend(self, sel_systemImageNamed_, v4, 0xE000000000000000);

  id v6 = objc_msgSend(self, sel_systemRedColor);
  id v7 = _sSo18NSAttributedStringC15HealthRecordsUIE010attributedB17WithLeadingSymbol4text0J5Color6symbol0lK015useLargeSpacingABSS_So7UIColorCSgSo7UIImageCSgALSbtFZ_0(v1, v3, 0, v5, v6);
  swift_bridgeObjectRelease();

  return v7;
}

id DynamicView.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

uint64_t sub_1C24F1154()
{
  id v1 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v2 = (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
  (*(void (**)(uint64_t))((*v1 & *v0) + 0x80))(v2);
  uint64_t v3 = *(uint64_t (**)(void))((*v1 & *v0) + 0x78);
  return v3();
}

id DynamicView.init()()
{
  return objc_msgSend(v0, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
}

id sub_1C24F1228()
{
  return DynamicView.init()();
}

id DynamicView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id DynamicView.init(frame:)(double a1, double a2, double a3, double a4)
{
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for DynamicView();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C24F1154();

  return v9;
}

uint64_t type metadata accessor for DynamicView()
{
  return __swift_instantiateGenericMetadata();
}

id sub_1C24F1370(double a1, double a2, double a3, double a4)
{
  return DynamicView.init(frame:)(a1, a2, a3, a4);
}

id DynamicView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id DynamicView.init(coder:)(void *a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for DynamicView();
  id v3 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);
  id v4 = v3;
  if (v3)
  {
    id v5 = v3;
    sub_1C24F1154();
  }
  return v4;
}

id sub_1C24F146C(uint64_t a1, uint64_t a2, void *a3)
{
  return DynamicView.init(coder:)(a3);
}

void sub_1C24F1494(void *a1)
{
  id v3 = (void *)MEMORY[0x1E4FBC8C8];
  v19.receiver = v1;
  v19.super_class = (Class)type metadata accessor for DynamicView();
  objc_msgSendSuper2(&v19, sel_traitCollectionDidChange_, a1);
  id v4 = objc_msgSend(v1, sel_traitCollection);
  id v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  if (!a1)
  {

    goto LABEL_11;
  }
  id v6 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  uint64_t v7 = sub_1C254F470();
  uint64_t v9 = v8;
  if (v7 == sub_1C254F470() && v9 == v10)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = sub_1C2550870();

    swift_bridgeObjectRelease();
    id v13 = (id)swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      goto LABEL_11;
    }
  }
  id v14 = objc_msgSend(v1, sel_traitCollection);
  id v15 = objc_msgSend(v14, sel_legibilityWeight);

  id v13 = objc_msgSend(a1, sel_legibilityWeight);
  if (v15 == v13) {
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v16 = (*(uint64_t (**)(id))((*v3 & *v1) + 0x78))(v13);
  if (a1)
  {
LABEL_12:
    id v17 = objc_msgSend(v1, sel_traitCollection);
    unsigned int v18 = objc_msgSend(a1, sel_hasDifferentColorAppearanceComparedToTraitCollection_, v17);

    if (!v18) {
      return;
    }
  }
  (*(void (**)(uint64_t))((*v3 & *v1) + 0x80))(v16);
}

void sub_1C24F16C8(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_1C24F1494(a3);
}

id DynamicView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DynamicView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C24F1790()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x70))();
}

uint64_t sub_1C24F17E4()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x78))();
}

uint64_t sub_1C24F1838()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x80))();
}

uint64_t sub_1C24F188C()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & **v0) + 0x60))();
}

uint64_t sub_1C24F18E0()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for DynamicView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DynamicView);
}

uint64_t dispatch thunk of DynamicView.updateAutomationIdentifiers(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of DynamicView.apply(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of DynamicView.addSubviews()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of DynamicView.reloadFonts()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of DynamicView.reloadColors()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

void sub_1C24F1A34(unsigned __int8 *a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return;
  }
  uint64_t v2 = a2;
  long long v4 = *((_OWORD *)a1 + 3);
  v74[2] = *((_OWORD *)a1 + 2);
  v74[3] = v4;
  uint64_t v75 = *((void *)a1 + 8);
  long long v5 = *((_OWORD *)a1 + 1);
  v74[0] = *(_OWORD *)a1;
  v74[1] = v5;
  sub_1C25509C0();
  DisplayCategory.hash(into:)((uint64_t)v73);
  uint64_t v6 = sub_1C2550A10();
  uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v9 = v2 + 56;
  if (((*(void *)(v2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return;
  }
  uint64_t v10 = ~v7;
  int v11 = *a1;
  uint64_t v71 = v2 + 56;
  uint64_t v67 = *((void *)a1 + 3);
  uint64_t v66 = *((void *)a1 + 4);
  uint64_t v64 = *((void *)a1 + 2);
  uint64_t v65 = *((void *)a1 + 5);
  *(void *)&v74[0] = *((void *)a1 + 6);
  uint64_t v62 = *((void *)a1 + 7);
  uint64_t v68 = v2;
  uint64_t v70 = ~v7;
  int v69 = v11;
  while (1)
  {
    char v12 = (void *)(*(void *)(v2 + 48) + 72 * v8);
    if (*(unsigned __int8 *)v12 != v11) {
      goto LABEL_5;
    }
    id v14 = (void *)v12[1];
    uint64_t v13 = v12[2];
    uint64_t v15 = v12[3];
    uint64_t v72 = v12[4];
    uint64_t v17 = v12[5];
    uint64_t v16 = v12[6];
    uint64_t v18 = v12[7];
    objc_super v19 = (void *)v12[8];
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v20 = v19;
    id v21 = v14;
    if ((sub_1C254FF70() & 1) == 0)
    {
LABEL_4:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = v68;

      uint64_t v10 = v70;
      uint64_t v9 = v71;
      int v11 = v69;
      goto LABEL_5;
    }
    uint64_t v22 = v15;
    if (v15)
    {
      uint64_t v23 = v17;
      uint64_t v24 = v18;
      if (!v67) {
        goto LABEL_4;
      }
      BOOL v25 = v13 == v64 && v22 == v67;
      uint64_t v26 = v16;
      if (!v25 && (sub_1C2550870() & 1) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v23 = v17;
      uint64_t v24 = v18;
      uint64_t v26 = v16;
      if (v67) {
        goto LABEL_4;
      }
    }
    BOOL v27 = v72 == v66 && v23 == v65;
    if (!v27 && (sub_1C2550870() & 1) == 0) {
      goto LABEL_4;
    }
    if ((unint64_t)v26 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1C2550620();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v28 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v29 = *(void *)&v74[0];
    uint64_t v30 = *(void *)&v74[0] >> 62;
    uint64_t v63 = *(void *)&v74[0];
    if (*(void *)&v74[0] >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_1C2550620();
      sub_1C22C04F0((uint64_t)v74);
      uint64_t v29 = v63;
      if (v28 != v57) {
        goto LABEL_4;
      }
    }
    else if (v28 != *(void *)((*(void *)&v74[0] & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_4;
    }
    if (v28)
    {
      uint64_t v31 = v26 & 0xFFFFFFFFFFFFFF8;
      uint64_t v32 = (v26 & 0xFFFFFFFFFFFFFF8) + 32;
      if (v26 < 0) {
        uint64_t v31 = v26;
      }
      if ((unint64_t)v26 >> 62) {
        uint64_t v32 = v31;
      }
      uint64_t v33 = v29 & 0xFFFFFFFFFFFFFF8;
      uint64_t v34 = (v29 & 0xFFFFFFFFFFFFFF8) + 32;
      uint64_t v61 = v29 & 0xFFFFFFFFFFFFFF8;
      if (v29 < 0) {
        uint64_t v33 = v29;
      }
      if (v30) {
        uint64_t v34 = v33;
      }
      if (v32 != v34) {
        break;
      }
    }
LABEL_45:
    if ((sub_1C22AB474(v24, v62) & 1) == 0) {
      goto LABEL_4;
    }
    char v42 = sub_1C254FF70();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v2 = v68;
    uint64_t v10 = v70;
    uint64_t v9 = v71;
    int v11 = v69;
    if (v42) {
      return;
    }
LABEL_5:
    unint64_t v8 = (v8 + 1) & v10;
    if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      return;
    }
  }
  if ((v28 & 0x8000000000000000) == 0)
  {
    unint64_t v60 = v26 & 0xC000000000000001;
    if ((v26 & 0xC000000000000001) != 0)
    {
      id v35 = (id)MEMORY[0x1C87588E0](0, v26);
    }
    else
    {
      if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_77;
      }
      id v35 = *(id *)(v26 + 32);
    }
    id v36 = v35;
    unint64_t v59 = v63 & 0xC000000000000001;
    if ((v63 & 0xC000000000000001) != 0)
    {
      id v37 = (id)MEMORY[0x1C87588E0](0);
    }
    else
    {
      if (!*(void *)(v61 + 16)) {
        goto LABEL_78;
      }
      id v37 = *(id *)(v63 + 32);
    }
    id v38 = v37;
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    char v39 = sub_1C254FF70();
    objc_super v40 = v36;
    char v41 = v39;

    if ((v41 & 1) == 0) {
      goto LABEL_4;
    }
    if (v28 != 1)
    {
      if (v60)
      {
        id v43 = (id)MEMORY[0x1C87588E0](1, v26);
      }
      else
      {
        if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
          goto LABEL_81;
        }
        id v43 = *(id *)(v26 + 40);
      }
      id v44 = v43;
      if (v59)
      {
        id v45 = (id)MEMORY[0x1C87588E0](1, v63);
      }
      else
      {
        if (*(void *)(v61 + 16) < 2uLL) {
          goto LABEL_82;
        }
        id v45 = *(id *)(v63 + 40);
      }
      uint64_t v46 = v45;
      char v47 = sub_1C254FF70();
      uint64_t v48 = v44;
      char v49 = v47;

      if ((v49 & 1) == 0) {
        goto LABEL_4;
      }
      uint64_t v58 = 2 - v28;
      uint64_t v50 = 6;
      while (v58 + v50 != 6)
      {
        unint64_t v54 = v50 - 4;
        if (v60)
        {
          id v55 = (id)MEMORY[0x1C87588E0](v50 - 4, v26);
        }
        else
        {
          if (v54 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_79;
          }
          id v55 = *(id *)(v26 + 8 * v50);
        }
        uint64_t v56 = v55;
        if (v59)
        {
          id v51 = (id)MEMORY[0x1C87588E0](v50 - 4, v63);
        }
        else
        {
          if (v54 >= *(void *)(v61 + 16)) {
            goto LABEL_80;
          }
          id v51 = *(id *)(v63 + 8 * v50);
        }
        id v52 = v51;
        char v53 = sub_1C254FF70();

        ++v50;
        if ((v53 & 1) == 0) {
          goto LABEL_4;
        }
      }
    }
    goto LABEL_45;
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
}

uint64_t sub_1C24F2054(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_1C25502E0();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (uint64_t v6 = sub_1C254FF60(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_1C254FF70();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_1C254FF70();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

uint64_t sub_1C24F21B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C254E220();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_1C24F49C0(&qword_1EA2DF688, MEMORY[0x1E4F66840]),
        uint64_t v7 = sub_1C254F370(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    char v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    unint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_1C24F49C0(&qword_1EA2DFE28, MEMORY[0x1E4F66840]);
      char v15 = sub_1C254F420();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

BOOL sub_1C24F23C8(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_1C25509B0();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1C24F2494(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1C254CB40();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_1C24F49C0((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]),
        uint64_t v7 = sub_1C254F370(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    uint64_t v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    unint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_1C24F49C0((unint64_t *)&qword_1EA2DE1E8, MEMORY[0x1E4F27990]);
      char v15 = sub_1C254F420();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1C24F26A8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t ClinicalSharingSelectedDataTypesContext.__allocating_init(selectedItems:selectedItemsDidUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = MEMORY[0x1E4FBC870];
  *(unsigned char *)(v6 + 32) = 0;
  *(void *)(v6 + 48) = 0;
  *(void *)(v6 + 40) = 0;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = v7;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v6 + 40);
  *(void *)(v6 + 40) = a2;
  *(void *)(v6 + 48) = a3;
  sub_1C221794C(v8);
  return v6;
}

uint64_t sub_1C24F276C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  sub_1C24F27D4(v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C24F27D4(uint64_t a1)
{
  sub_1C24F4A6C(0, &qword_1EA2E0098, MEMORY[0x1E4F66840], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v33 - v4;
  uint64_t v6 = sub_1C254E220();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v42 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  uint64_t v16 = swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_1C22AB9E0(v16, a1);
  uint64_t result = swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
  {
    uint64_t v35 = v12;
    id v36 = v11;
    id v37 = v9;
    uint64_t v18 = *v15;
    uint64_t v19 = *(void *)(*v15 + 16);
    if (v19)
    {
      uint64_t v33 = *v15;
      uint64_t v34 = v1;
      uint64_t v20 = v18 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
      uint64_t v21 = *(void *)(v42 + 72);
      char v41 = (void (**)(char *, char *, uint64_t))(v38 + 16);
      uint64_t v42 = v21;
      char v39 = (unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      objc_super v40 = (void (**)(char *, void, uint64_t, uint64_t))(v38 + 56);
      uint64_t v22 = (void (**)(char *, char *, uint64_t))(v38 + 32);
      swift_bridgeObjectRetain();
      uint64_t v23 = MEMORY[0x1E4FBC860];
      BOOL v25 = v36;
      uint64_t v24 = v37;
      uint64_t v26 = v35;
      do
      {
        sub_1C22667C4(v20, (uint64_t)v14);
        (*v41)(v5, &v14[*(int *)(v26 + 48)], v6);
        (*v40)(v5, 0, 1, v6);
        sub_1C2266828((uint64_t)v14);
        if ((*v39)(v5, 1, v6) == 1)
        {
          sub_1C24F4904((uint64_t)v5, &qword_1EA2E0098, MEMORY[0x1E4F66840], MEMORY[0x1E4FBB718]);
        }
        else
        {
          BOOL v27 = *v22;
          (*v22)(v25, v5, v6);
          v27(v24, v25, v6);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v23 = sub_1C226C270(0, *(void *)(v23 + 16) + 1, 1, v23);
          }
          unint64_t v29 = *(void *)(v23 + 16);
          unint64_t v28 = *(void *)(v23 + 24);
          if (v29 >= v28 >> 1) {
            uint64_t v23 = sub_1C226C270(v28 > 1, v29 + 1, 1, v23);
          }
          *(void *)(v23 + 16) = v29 + 1;
          uint64_t v24 = v37;
          v27((char *)(v23+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v29), v37, v6);
          uint64_t v26 = v35;
          BOOL v25 = v36;
        }
        v20 += v42;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      uint64_t v1 = v34;
    }
    else
    {
      uint64_t v23 = MEMORY[0x1E4FBC860];
    }
    uint64_t v30 = sub_1C2492308(v23);
    swift_bridgeObjectRelease();
    *(void *)(v1 + 24) = v30;
    uint64_t result = swift_bridgeObjectRelease();
    if ((*(unsigned char *)(v1 + 32) & 1) == 0)
    {
      uint64_t result = swift_beginAccess();
      uint64_t v31 = *(void (**)(uint64_t))(v1 + 40);
      if (v31)
      {
        uint64_t v32 = swift_retain();
        v31(v32);
        return sub_1C221794C((uint64_t)v31);
      }
    }
  }
  return result;
}

uint64_t sub_1C24F2C58()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C24F2C90(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v1 + 16) = a1;
  sub_1C24F27D4(v3);
  return swift_bridgeObjectRelease();
}

void (*sub_1C24F2CEC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  return sub_1C24F2D68;
}

void sub_1C24F2D68(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(v3 + 16) = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C24F27D4(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C24F27D4(v4);
  }
  swift_bridgeObjectRelease();
  free(v2);
}

uint64_t sub_1C24F2DEC@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 40);
  uint64_t v5 = *(void *)(v3 + 48);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_1C23D0134;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1C223E0BC(v4);
}

uint64_t sub_1C24F2E80(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_1C24F4998;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 40);
  *(void *)(v7 + 40) = v6;
  *(void *)(v7 + 48) = v5;
  sub_1C223E0BC(v3);
  return sub_1C221794C(v8);
}

uint64_t sub_1C24F2F3C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  sub_1C223E0BC(v1);
  return v1;
}

uint64_t sub_1C24F2F8C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 40);
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return sub_1C221794C(v5);
}

uint64_t (*sub_1C24F2FE0())()
{
  return j__swift_endAccess;
}

uint64_t ClinicalSharingSelectedDataTypesContext.init(selectedItems:selectedItemsDidUpdate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = MEMORY[0x1E4FBC870];
  *(unsigned char *)(v3 + 32) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v6;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 40);
  *(void *)(v3 + 40) = a2;
  *(void *)(v3 + 48) = a3;
  sub_1C221794C(v7);
  return v3;
}

uint64_t sub_1C24F30B0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  if (a2)
  {
    return sub_1C24F35F0(a1, 0);
  }
  else
  {
    swift_beginAccess();
    uint64_t v9 = *(void *)(v3 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C24F3EE8(&v9, a1);
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v7 = *(void *)(v9 + 16);
    if (v7 < v6)
    {
      __break(1u);
    }
    else
    {
      sub_1C24F4530(v6, v7);
      uint64_t v8 = *(void *)(v3 + 16);
      *(void *)(v3 + 16) = v9;
      sub_1C24F27D4(v8);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C24F319C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  LODWORD(v4) = a2;
  uint64_t v42 = *v2;
  uint64_t v6 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v43 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = sub_1C254E560();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E520();
  sub_1C22667C4(a1, (uint64_t)v11);
  uint64_t v16 = sub_1C254E550();
  os_log_type_t v17 = sub_1C254FA40();
  id v44 = v16;
  int v41 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v39 = v6;
    uint64_t v19 = v18;
    uint64_t v37 = swift_slowAlloc();
    v46[0] = v37;
    *(_DWORD *)uint64_t v19 = 136315394;
    int v40 = v4;
    uint64_t v20 = sub_1C2550AA0();
    uint64_t v45 = sub_1C21AD354(v20, v21, v46);
    uint64_t v38 = v12;
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v42 = a1;
    uint64_t v22 = v3;
    uint64_t v23 = v8;
    uint64_t v4 = *((void *)v11 + 2);
    unint64_t v24 = *((void *)v11 + 3);
    swift_bridgeObjectRetain();
    uint64_t v25 = v4;
    LOBYTE(v4) = v40;
    uint64_t v45 = sub_1C21AD354(v25, v24, v46);
    sub_1C2550120();
    uint64_t v8 = v23;
    uint64_t v3 = v22;
    a1 = v42;
    swift_bridgeObjectRelease();
    sub_1C2266828((uint64_t)v11);
    uint64_t v26 = v44;
    _os_log_impl(&dword_1C21A1000, v44, (os_log_type_t)v41, "[%s] Adding data type with identifier '%s' to the selected data types array", (uint8_t *)v19, 0x16u);
    uint64_t v27 = v37;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v27, -1, -1);
    uint64_t v28 = v19;
    uint64_t v6 = v39;
    MEMORY[0x1C875A0B0](v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v38);
  }
  else
  {
    sub_1C2266828((uint64_t)v11);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  uint64_t v29 = v3[3];
  uint64_t v30 = a1 + *(int *)(v6 + 48);
  swift_bridgeObjectRetain();
  LOBYTE(v30) = sub_1C24F21B4(v30, v29);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v30 & 1) == 0)
  {
    *((unsigned char *)v3 + 32) = v4 & 1;
    sub_1C22667C4(a1, (uint64_t)v8);
    swift_beginAccess();
    unint64_t v32 = v3[2];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v32 = sub_1C226C100(0, *(void *)(v32 + 16) + 1, 1, v32);
    }
    unint64_t v34 = *(void *)(v32 + 16);
    unint64_t v33 = *(void *)(v32 + 24);
    if (v34 >= v33 >> 1) {
      unint64_t v32 = sub_1C226C100(v33 > 1, v34 + 1, 1, v32);
    }
    *(void *)(v32 + 16) = v34 + 1;
    sub_1C2266760((uint64_t)v8, v32+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v34);
    uint64_t v35 = v3[2];
    v3[2] = v32;
    sub_1C24F27D4(v35);
    uint64_t result = swift_bridgeObjectRelease();
    *((unsigned char *)v3 + 32) = 0;
  }
  return result;
}

uint64_t sub_1C24F35F0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  LODWORD(v4) = a2;
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E520();
  uint64_t v10 = sub_1C254E550();
  os_log_type_t v11 = sub_1C254FA40();
  if (os_log_type_enabled(v10, v11))
  {
    v21[0] = v6;
    uint64_t v12 = swift_slowAlloc();
    int v22 = (int)v4;
    uint64_t v4 = (uint8_t *)v12;
    uint64_t v13 = swift_slowAlloc();
    v23[0] = v13;
    *(_DWORD *)uint64_t v4 = 136315138;
    v21[1] = a1;
    uint64_t v14 = sub_1C2550AA0();
    uint64_t v24 = sub_1C21AD354(v14, v15, v23);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v10, v11, "[%s] Adding array of data types to selected items", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v13, -1, -1);
    uint64_t v16 = v4;
    LOBYTE(v4) = v22;
    MEMORY[0x1C875A0B0](v16, -1, -1);

    (*(void (**)(char *, void))(v7 + 8))(v9, v21[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_retain();
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C24F3AF4(v17, v3);
  swift_bridgeObjectRelease();
  swift_release();
  *(unsigned char *)(v3 + 32) = v4 & 1;
  swift_beginAccess();
  uint64_t v24 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_1C2272594(v18);
  uint64_t v19 = *(void *)(v3 + 16);
  *(void *)(v3 + 16) = v24;
  sub_1C24F27D4(v19);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(v3 + 32) = 0;
  return result;
}

uint64_t ClinicalSharingSelectedDataTypesContext.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C221794C(*(void *)(v0 + 40));
  return v0;
}

uint64_t ClinicalSharingSelectedDataTypesContext.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C221794C(*(void *)(v0 + 40));
  return swift_deallocClassInstance();
}

uint64_t sub_1C24F3920(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_1C226CD5C(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *(void *)uint64_t v3 = v5;
  }
  uint64_t v14 = (uint64_t)&v5[5 * a1 + 4];
  sub_1C22270A8();
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v15 = v5[2];
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = (char *)(v14 + 40);
    uint64_t v19 = (char *)&v5[5 * a2 + 4];
    if ((char *)(v14 + 40) != v19 || v18 >= &v19[40 * v17]) {
      memmove(v18, v19, 40 * v17);
    }
    uint64_t v20 = v5[2];
    BOOL v16 = __OFADD__(v20, v9);
    uint64_t v21 = v20 + v9;
    if (!v16)
    {
      v5[2] = v21;
LABEL_20:
      sub_1C21F4424(a3, v14);
      return sub_1C24F4904(a3, &qword_1EA2E4970, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBBB08]);
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C24F3AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v4 = sub_1C254E220();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v42 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v7 = MEMORY[0x1F4188790](v33);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)v29 - v11;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v44 = MEMORY[0x1E4FBC860];
  uint64_t v36 = *(void *)(a1 + 16);
  if (v36)
  {
    v29[1] = v2;
    uint64_t v30 = v5;
    uint64_t v14 = 0;
    unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v38 = *(void *)(v10 + 72);
    unint64_t v34 = v15;
    uint64_t v35 = a1 + v15;
    int v40 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v41 = v5 + 16;
    uint64_t v31 = (char *)v29 - v11;
    unint64_t v32 = v9;
    BOOL v16 = v42;
    while (1)
    {
      uint64_t v39 = v14;
      sub_1C22667C4(v35 + v38 * v14, (uint64_t)v12);
      uint64_t v17 = *(void *)(v37 + 24);
      if (*(void *)(v17 + 16))
      {
        uint64_t v18 = &v12[*(int *)(v33 + 48)];
        sub_1C24F49C0(&qword_1EA2DF688, MEMORY[0x1E4F66840]);
        swift_bridgeObjectRetain();
        uint64_t v43 = v18;
        uint64_t v19 = sub_1C254F370();
        uint64_t v20 = -1 << *(unsigned char *)(v17 + 32);
        unint64_t v21 = v19 & ~v20;
        if ((*(void *)(v17 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
        {
          uint64_t v22 = ~v20;
          uint64_t v23 = *(void *)(v30 + 72);
          uint64_t v24 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
          while (1)
          {
            v24(v16, *(void *)(v17 + 48) + v23 * v21, v4);
            sub_1C24F49C0(&qword_1EA2DFE28, MEMORY[0x1E4F66840]);
            char v25 = sub_1C254F420();
            (*v40)(v16, v4);
            if (v25) {
              break;
            }
            unint64_t v21 = (v21 + 1) & v22;
            if (((*(void *)(v17 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
              goto LABEL_10;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v12 = v31;
          sub_1C2266828((uint64_t)v31);
          uint64_t v9 = v32;
          goto LABEL_4;
        }
LABEL_10:
        swift_bridgeObjectRelease();
        uint64_t v12 = v31;
        uint64_t v9 = v32;
      }
      sub_1C2266760((uint64_t)v12, (uint64_t)v9);
      uint64_t v26 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C22747C4(0, *(void *)(v26 + 16) + 1, 1);
        uint64_t v26 = v44;
      }
      unint64_t v28 = *(void *)(v26 + 16);
      unint64_t v27 = *(void *)(v26 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1C22747C4(v27 > 1, v28 + 1, 1);
        uint64_t v26 = v44;
      }
      *(void *)(v26 + 16) = v28 + 1;
      sub_1C2266760((uint64_t)v9, v26 + v34 + v28 * v38);
LABEL_4:
      uint64_t v14 = v39 + 1;
      if (v39 + 1 == v36) {
        return v44;
      }
    }
  }
  return result;
}

uint64_t sub_1C24F3EE8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() - 8;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v64 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v63 = (uint64_t)&v60 - v8;
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v60 - v10);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (uint64_t *)((char *)&v60 - v13);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v60 - v16;
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v60 - v19;
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  MEMORY[0x1F4188790](v22);
  unint64_t v27 = (char *)&v60 - v26;
  uint64_t v68 = a1;
  uint64_t v28 = *a1;
  uint64_t v29 = *(void *)(v28 + 16);
  if (!v29) {
    return 0;
  }
  uint64_t v70 = (void *)v25;
  uint64_t v71 = (void *)v24;
  unint64_t v30 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v61 = v28 + v30;
  uint64_t v31 = *(void *)(a2 + 16);
  uint64_t v75 = *(void *)(v23 + 72);
  uint64_t v65 = a2 + v30;
  swift_bridgeObjectRetain();
  unint64_t v32 = 0;
  int v69 = v27;
  unint64_t v66 = v30;
  uint64_t v67 = a2;
  uint64_t v74 = v31;
  uint64_t v62 = v28;
  uint64_t v60 = v29;
  while (!v31)
  {
LABEL_4:
    if (++v32 == v29)
    {
LABEL_54:
      swift_bridgeObjectRelease();
      return *(void *)(v28 + 16);
    }
  }
  unint64_t v73 = v32;
  uint64_t v72 = v61 + v75 * v32;
  swift_bridgeObjectRetain();
  uint64_t v33 = v65;
  uint64_t v34 = v31;
  while (1)
  {
    sub_1C22667C4(v33, (uint64_t)v27);
    uint64_t v36 = v72;
    if (*((void *)v27 + 2) == *(void *)(v72 + 16) && *((void *)v27 + 3) == *(void *)(v72 + 24)) {
      break;
    }
    char v38 = sub_1C2550870();
    uint64_t v39 = (uint64_t)v27;
    int v40 = v70;
    sub_1C22667C4(v39, (uint64_t)v70);
    uint64_t v41 = v36;
    uint64_t v42 = v71;
    sub_1C22667C4(v41, (uint64_t)v71);
    if (v38) {
      goto LABEL_16;
    }
    sub_1C2266828((uint64_t)v40);
    sub_1C2266828((uint64_t)v42);
    unint64_t v27 = v69;
    sub_1C2266828((uint64_t)v69);
LABEL_8:
    v33 += v75;
    if (!--v34)
    {
      swift_bridgeObjectRelease();
      unint64_t v32 = v73;
      uint64_t v31 = v74;
      uint64_t v28 = v62;
      uint64_t v29 = v60;
      goto LABEL_4;
    }
  }
  uint64_t v43 = (uint64_t)v27;
  int v40 = v70;
  sub_1C22667C4(v43, (uint64_t)v70);
  uint64_t v44 = v36;
  uint64_t v42 = v71;
  sub_1C22667C4(v44, (uint64_t)v71);
LABEL_16:
  if (*v40 != *v42 || v40[1] != v42[1])
  {
    char v35 = sub_1C2550870();
    sub_1C2266828((uint64_t)v40);
    sub_1C2266828((uint64_t)v42);
    unint64_t v27 = v69;
    sub_1C2266828((uint64_t)v69);
    if (v35) {
      goto LABEL_19;
    }
    goto LABEL_8;
  }
  sub_1C2266828((uint64_t)v40);
  sub_1C2266828((uint64_t)v42);
  sub_1C2266828((uint64_t)v69);
LABEL_19:
  unint64_t v45 = v62;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = v73;
  unint64_t v47 = v73 + 1;
  if (__OFADD__(v73, 1))
  {
LABEL_63:
    __break(1u);
    return result;
  }
  unint64_t v48 = *(void *)(v45 + 16);
  if (v47 == v48) {
    return result;
  }
  unint64_t v49 = v66;
  while (2)
  {
    if (v47 >= v48)
    {
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    uint64_t v72 = v47 * v75;
    unint64_t v73 = result;
    sub_1C22667C4(v45 + v49 + v47 * v75, (uint64_t)v20);
    swift_bridgeObjectRetain();
    uint64_t v50 = 0;
    uint64_t v28 = v65;
    do
    {
      uint64_t v52 = v50 + 1;
      if (__OFADD__(v50, 1))
      {
        __break(1u);
        goto LABEL_54;
      }
      sub_1C22667C4(v28, (uint64_t)v17);
      if (*((void *)v17 + 2) == *((void *)v20 + 2) && *((void *)v17 + 3) == *((void *)v20 + 3))
      {
        sub_1C22667C4((uint64_t)v17, (uint64_t)v14);
        sub_1C22667C4((uint64_t)v20, (uint64_t)v11);
      }
      else
      {
        char v54 = sub_1C2550870();
        sub_1C22667C4((uint64_t)v17, (uint64_t)v14);
        sub_1C22667C4((uint64_t)v20, (uint64_t)v11);
        if ((v54 & 1) == 0)
        {
          sub_1C2266828((uint64_t)v14);
          sub_1C2266828((uint64_t)v11);
          sub_1C2266828((uint64_t)v17);
          goto LABEL_25;
        }
      }
      if (*v14 == *v11 && v14[1] == v11[1])
      {
        sub_1C2266828((uint64_t)v14);
        sub_1C2266828((uint64_t)v11);
        sub_1C2266828((uint64_t)v17);
LABEL_37:
        swift_bridgeObjectRelease();
        sub_1C2266828((uint64_t)v20);
        unint64_t v49 = v66;
        uint64_t result = v73;
        goto LABEL_48;
      }
      char v51 = sub_1C2550870();
      sub_1C2266828((uint64_t)v14);
      sub_1C2266828((uint64_t)v11);
      sub_1C2266828((uint64_t)v17);
      if (v51) {
        goto LABEL_37;
      }
LABEL_25:
      ++v50;
      v28 += v75;
    }
    while (v52 != v74);
    swift_bridgeObjectRelease();
    sub_1C2266828((uint64_t)v20);
    uint64_t result = v73;
    unint64_t v49 = v66;
    if (v73 != v47)
    {
      if ((v73 & 0x8000000000000000) != 0) {
        goto LABEL_58;
      }
      unint64_t v55 = *v68;
      unint64_t v56 = *(void *)(*v68 + 16);
      if (v73 >= v56) {
        goto LABEL_59;
      }
      unint64_t v57 = v55 + v66;
      unint64_t v58 = v73 * v75;
      uint64_t result = sub_1C22667C4(v55 + v66 + v73 * v75, v63);
      if (v47 >= v56) {
        goto LABEL_60;
      }
      sub_1C22667C4(v57 + v72, v64);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v68 = v55;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_1C23C7084(v55);
        unint64_t v55 = result;
        *uint64_t v68 = result;
      }
      unint64_t v49 = v66;
      if (v73 >= *(void *)(v55 + 16)) {
        goto LABEL_61;
      }
      uint64_t result = sub_1C24F4A08(v64, v55 + v66 + v58);
      if (v47 >= *(void *)(*v68 + 16)) {
        goto LABEL_62;
      }
      sub_1C24F4A08(v63, *v68 + v49 + v72);
      uint64_t result = v73;
    }
    BOOL v59 = __OFADD__(result++, 1);
    if (v59) {
      goto LABEL_57;
    }
LABEL_48:
    BOOL v59 = __OFADD__(v47++, 1);
    if (v59) {
      goto LABEL_56;
    }
    unint64_t v45 = *v68;
    unint64_t v48 = *(void *)(*v68 + 16);
    if (v47 != v48) {
      continue;
    }
    return result;
  }
}

uint64_t sub_1C24F4530(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_1C226C100(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C24F4718@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ClinicalSharingSelectedDataTypesContext()
{
  return self;
}

uint64_t method lookup function for ClinicalSharingSelectedDataTypesContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClinicalSharingSelectedDataTypesContext);
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.selectedItems.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.selectedItems.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.selectedItems.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.selectedItemsDidUpdate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.selectedItemsDidUpdate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.selectedItemsDidUpdate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.__allocating_init(selectedItems:selectedItemsDidUpdate:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.selectionStatesDidUpdate(for:selected:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.addDataType(_:byPassDataSourceUpdates:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesContext.addDataTypes(_:byPassDataSourceUpdates:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t sub_1C24F4904(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_1C24F4A6C(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C24F4960()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C24F4998()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C24F49C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C24F4A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C24F4A6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t AccountStatusSummaryTileSettingsManager.__allocating_init(healthStore:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC868];
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  sub_1C21A6E94();
  return v2;
}

uint64_t static AccountStatusSummaryTileSettingsManager.Keys.accountId.getter()
{
  return 0x49746E756F636361;
}

uint64_t static AccountStatusSummaryTileSettingsManager.Keys.tileType.getter()
{
  return 0x65707954656C6974;
}

unint64_t static AccountStatusSummaryTileSettingsManager.Keys.suiteName.getter()
{
  return 0xD000000000000029;
}

id sub_1C24F4B6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254E260();
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v0 + 24);
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_1C21A6470(v2, v4);
    if (v7)
    {
      id v8 = *(id *)(*(void *)(v5 + 56) + 8 * v6);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = *(void **)(v1 + 16);
  id v11 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  swift_bridgeObjectRetain();
  id v12 = v10;
  unint64_t v13 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v11, sel_initWithCategory_domainName_healthStore_, 2, v13, v12);

  swift_beginAccess();
  id v15 = v14;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *(void *)(v1 + 24);
  *(void *)(v1 + 24) = 0x8000000000000000;
  sub_1C2365914((uint64_t)v15, v2, v4, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 24) = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return v15;
}

uint64_t sub_1C24F4D14()
{
  sub_1C21AD2B8();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = sub_1C24F4B6C();
  uint64_t v6 = sub_1C254FAA0();

  v9[1] = v6;
  sub_1C21AD128();
  sub_1C24F5AAC((unint64_t *)&qword_1EBB6DCC0, (void (*)(uint64_t))sub_1C21AD128);
  sub_1C254EC00();
  swift_release();
  sub_1C24F5AAC(&qword_1EBB6DC78, (void (*)(uint64_t))sub_1C21AD2B8);
  uint64_t v7 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v7;
}

uint64_t sub_1C24F4ED8@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = sub_1C254CAD0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
  *a2 = result == 1;
  return result;
}

uint64_t sub_1C24F4F44(int a1, uint64_t a2)
{
  int v82 = a1;
  uint64_t v4 = *v2;
  sub_1C24F747C(0, &qword_1EA2E4978, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4F1AC08]);
  uint64_t v90 = v5;
  uint64_t v88 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  BOOL v86 = (char *)&v75 - v6;
  sub_1C24F6C6C(0, &qword_1EA2E4980, MEMORY[0x1E4F1ACE0]);
  uint64_t v8 = v7;
  uint64_t v89 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v87 = (char *)&v75 - v9;
  sub_1C24F6BBC(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v81 = (char *)&v75 - v11;
  uint64_t v12 = sub_1C254E560();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v75 - v17;
  sub_1C24F6BBC(0, &qword_1EBB6E3F8, MEMORY[0x1E4F67698]);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)&v75 - v20;
  uint64_t v22 = sub_1C254E290();
  uint64_t v84 = *(void *)(v22 - 8);
  uint64_t v85 = v22;
  MEMORY[0x1F4188790](v22);
  v83 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a2 + 16)
    || (unint64_t v24 = sub_1C21A6470(0x49746E756F636361, 0xE900000000000064), (v25 & 1) == 0)
    || !*(void *)(a2 + 16))
  {
LABEL_8:
    sub_1C254E510();
    swift_bridgeObjectRetain_n();
    uint64_t v36 = sub_1C254E550();
    os_log_type_t v37 = sub_1C254FA20();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      v92[0] = v39;
      *(_DWORD *)uint64_t v38 = 136315394;
      uint64_t v85 = v8;
      uint64_t v91 = v4;
      swift_getMetatypeMetadata();
      uint64_t v40 = sub_1C254F4F0();
      uint64_t v80 = v12;
      uint64_t v91 = sub_1C21AD354(v40, v41, v92);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      uint64_t v84 = v38 + 14;
      uint64_t v91 = a2;
      sub_1C2270334();
      swift_bridgeObjectRetain_n();
      sub_1C25508F0();
      id v42 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v43 = sub_1C254F4F0();
      uint64_t v44 = v13;
      unint64_t v46 = v45;
      swift_bridgeObjectRelease();
      uint64_t v91 = sub_1C21AD354(v43, v46, v92);
      sub_1C2550120();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v36, v37, "[%s] failed to track account summary tile appearance, not enough information provided in userInfo: %s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v39, -1, -1);
      MEMORY[0x1C875A0B0](v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v80);
      uint64_t v8 = v85;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
    uint64_t v48 = v89;
    uint64_t v47 = v90;
    uint64_t v50 = v87;
    uint64_t v49 = v88;
    char v51 = v86;
    sub_1C254EAD0();
    sub_1C2206F9C();
    sub_1C254EAB0();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v51, v47);
    sub_1C21A58D4(&qword_1EA2E4988, &qword_1EA2E4980, MEMORY[0x1E4F1ACE0]);
    uint64_t v52 = sub_1C254EBC0();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v8);
    return v52;
  }
  v78 = v18;
  uint64_t v79 = v2;
  uint64_t v26 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v24);
  uint64_t v27 = *v26;
  unint64_t v28 = v26[1];
  swift_bridgeObjectRetain();
  unint64_t v29 = sub_1C21A6470(0x65707954656C6974, 0xE800000000000000);
  if ((v30 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v75 = v27;
  uint64_t v76 = v4;
  unint64_t v77 = v28;
  uint64_t v31 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v29);
  uint64_t v33 = *v31;
  unint64_t v32 = v31[1];
  swift_bridgeObjectRetain_n();
  sub_1C254E270();
  uint64_t v35 = v84;
  uint64_t v34 = v85;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v21, 1, v85) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C24F6C10((uint64_t)v21, &qword_1EBB6E3F8, MEMORY[0x1E4F67698]);
    uint64_t v4 = v76;
    goto LABEL_8;
  }
  uint64_t v90 = v33;
  char v54 = v83;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v83, v21, v34);
  unint64_t v55 = v78;
  sub_1C254E510();
  unint64_t v56 = v77;
  swift_bridgeObjectRetain_n();
  unint64_t v57 = v32;
  swift_bridgeObjectRetain();
  unint64_t v58 = sub_1C254E550();
  os_log_type_t v59 = sub_1C254FA40();
  int v60 = v59;
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v61 = swift_slowAlloc();
    LODWORD(v88) = v60;
    uint64_t v62 = v61;
    uint64_t v63 = swift_slowAlloc();
    uint64_t v80 = v12;
    uint64_t v64 = v63;
    v92[0] = v63;
    *(_DWORD *)uint64_t v62 = 136315906;
    uint64_t v89 = v13;
    uint64_t v91 = v76;
    swift_getMetatypeMetadata();
    uint64_t v65 = sub_1C254F4F0();
    uint64_t v91 = sub_1C21AD354(v65, v66, v92);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v62 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v91 = sub_1C21AD354(v90, v57, v92);
    sub_1C2550120();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v62 + 22) = 1024;
    char v67 = v82;
    LODWORD(v91) = v82 & 1;
    sub_1C2550120();
    *(_WORD *)(v62 + 28) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v91 = sub_1C21AD354(v75, v56, v92);
    char v54 = v83;
    sub_1C2550120();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C21A1000, v58, (os_log_type_t)v88, "[%s] setting account summary %s tile dismissal to %{BOOL}d for account %s", (uint8_t *)v62, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v64, -1, -1);
    MEMORY[0x1C875A0B0](v62, -1, -1);

    (*(void (**)(char *, uint64_t))(v89 + 8))(v55, v80);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v55, v12);
    char v67 = v82;
  }
  id v68 = sub_1C24F4B6C();
  uint64_t v69 = (uint64_t)v81;
  uint64_t v70 = v84;
  if (v67)
  {
    sub_1C254CAC0();
    uint64_t v71 = sub_1C254CAD0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v69, 0, 1, v71);
  }
  else
  {
    uint64_t v72 = sub_1C254CAD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v69, 1, 1, v72);
  }
  uint64_t v73 = sub_1C254FAB0();
  swift_bridgeObjectRelease();

  sub_1C24F6C10(v69, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  uint64_t v91 = v73;
  uint64_t v74 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C24F6C6C(0, (unint64_t *)&qword_1EA2DE8A0, MEMORY[0x1E4F1AC28]);
  sub_1C21A58D4(&qword_1EA2DE8A8, (unint64_t *)&qword_1EA2DE8A0, v74);
  uint64_t v52 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v54, v85);
  swift_release();
  return v52;
}

uint64_t sub_1C24F5AAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C24F5AF4()
{
  return 0x746E756F6363615BLL;
}

uint64_t sub_1C24F5B48(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v75 = a3;
  uint64_t v74 = a2;
  uint64_t v93 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1C254E560();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  uint64_t v81 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C254E290();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_1C254CAD0();
  uint64_t v76 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  v83 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CAC0();
  uint64_t v16 = *(void (**)(void))(v12 + 104);
  unsigned int v68 = *MEMORY[0x1E4F67690];
  uint64_t v69 = v12 + 104;
  char v67 = (void (*)(char *, void, uint64_t))v16;
  v16(v14);
  uint64_t v73 = v3;
  id v17 = sub_1C24F4B6C();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v70 = v14;
  uint64_t v72 = v11;
  uint64_t v71 = v12 + 8;
  unint64_t v66 = v18;
  v18(v14, v11);
  *(void *)&long long aBlock = 0;
  id v19 = objc_msgSend(v17, sel_allValuesWithError_, &aBlock);

  id v20 = (id)aBlock;
  if (!v19)
  {
    unint64_t v46 = v20;
    uint64_t v47 = (void *)sub_1C254C820();

    swift_willThrow();
    sub_1C254E510();
    id v48 = v47;
    id v49 = v47;
    uint64_t v50 = sub_1C254E550();
    os_log_type_t v51 = sub_1C254FA20();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v85 = v6;
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(void *)&long long aBlock = v53;
      *(_DWORD *)uint64_t v52 = 136315138;
      *(void *)&long long v91 = v47;
      id v54 = v47;
      sub_1C2206F9C();
      uint64_t v55 = sub_1C254F4F0();
      *(void *)&long long v91 = sub_1C21AD354(v55, v56, (uint64_t *)&aBlock);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v50, v51, "HKKeyValueDomain returned error when attempting to fetch ids of dismissed upgrade tiles: %s", v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v53, -1, -1);
      MEMORY[0x1C875A0B0](v52, -1, -1);

      (*(void (**)(char *, uint64_t))(v85 + 8))(v8, v5);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v83, v84);
  }
  uint64_t v21 = (void *)sub_1C254F2D0();

  if (a1 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1C2550620();
    if (v22) {
      goto LABEL_4;
    }
    goto LABEL_29;
  }
  uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v22)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    unint64_t v57 = v70;
    uint64_t v58 = v72;
    v67(v70, v68, v72);
    id v59 = sub_1C24F4B6C();
    v66(v57, v58);
    int v60 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    uint64_t v61 = swift_allocObject();
    uint64_t v62 = v74;
    uint64_t v63 = v75;
    *(void *)(v61 + 16) = v74;
    *(void *)(v61 + 24) = v63;
    uint64_t v89 = sub_1C24F7508;
    uint64_t v90 = v61;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v88 = sub_1C22AE944;
    *((void *)&v88 + 1) = &block_descriptor_71;
    uint64_t v64 = _Block_copy(&aBlock);
    sub_1C223E0BC(v62);
    swift_release();
    objc_msgSend(v59, sel_setValuesWithDictionary_completion_, v60, v64);
    _Block_release(v64);

    return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v83, v84);
  }
LABEL_4:
  unint64_t v80 = a1 & 0xC000000000000001;
  v78 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v79 = (void (**)(uint64_t *, char *, uint64_t))(v76 + 16);
  uint64_t v23 = 4;
  unint64_t v77 = a1;
  while (1)
  {
    if (v80) {
      id v24 = (id)MEMORY[0x1C87588E0](v23 - 4, a1);
    }
    else {
      id v24 = *(id *)(a1 + 8 * v23);
    }
    char v25 = v24;
    uint64_t v9 = v23 - 3;
    if (__OFADD__(v23 - 4, 1))
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    uint64_t v85 = v23 - 3;
    uint64_t v9 = v22;
    uint64_t v26 = v84;
    uint64_t v92 = v84;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v91);
    (*v79)(boxed_opaque_existential_1, v83, v26);
    unint64_t v28 = v25;
    id v29 = objc_msgSend(v25, sel_identifier);
    char v30 = v81;
    sub_1C254CB20();

    a1 = sub_1C254CAF0();
    uint64_t v32 = v31;
    (*v78)(v30, v82);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    BOOL v86 = v21;
    unint64_t v35 = sub_1C21A6470(a1, v32);
    uint64_t v36 = v21[2];
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37)) {
      goto LABEL_26;
    }
    char v39 = v34;
    if (v21[3] < v38) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v21 = v86;
      if (v34) {
        goto LABEL_5;
      }
    }
    else
    {
      sub_1C24AE67C();
      uint64_t v21 = v86;
      if (v39)
      {
LABEL_5:
        sub_1C2206B9C((_OWORD *)(v21[7] + 32 * v35), &aBlock);
        sub_1C2206B9C(&v91, (_OWORD *)(v21[7] + 32 * v35));
        goto LABEL_6;
      }
    }
LABEL_18:
    v21[(v35 >> 6) + 8] |= 1 << v35;
    id v42 = (unint64_t *)(v21[6] + 16 * v35);
    *id v42 = a1;
    v42[1] = v32;
    sub_1C2206B9C(&v91, (_OWORD *)(v21[7] + 32 * v35));
    uint64_t v43 = v21[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_27;
    }
    void v21[2] = v45;
    long long aBlock = 0u;
    long long v88 = 0u;
    swift_bridgeObjectRetain();
LABEL_6:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    sub_1C224E3A4((uint64_t)&aBlock);
    ++v23;
    uint64_t v22 = v9;
    a1 = v77;
    if (v85 == v9) {
      goto LABEL_29;
    }
  }
  sub_1C227B200(v38, isUniquelyReferenced_nonNull_native);
  unint64_t v40 = sub_1C21A6470(a1, v32);
  if ((v39 & 1) == (v41 & 1))
  {
    unint64_t v35 = v40;
    uint64_t v21 = v86;
    if (v39) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  uint64_t result = sub_1C2550910();
  __break(1u);
  return result;
}

uint64_t sub_1C24F6490(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v7 = sub_1C254E560();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v12 = a2;
    sub_1C254E510();
    id v13 = a2;
    id v14 = a2;
    uint64_t v15 = sub_1C254E550();
    os_log_type_t v16 = sub_1C254FA20();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v26 = a4;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v25 = v7;
      uint64_t v18 = (uint8_t *)v17;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v27 = (uint64_t)a2;
      uint64_t v28 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      v24[1] = v18 + 4;
      id v20 = a2;
      sub_1C2206F9C();
      uint64_t v21 = sub_1C254F4F0();
      uint64_t v27 = sub_1C21AD354(v21, v22, &v28);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v15, v16, "HKKeyValueDomain returned error when attempting to set ids of dismissed upgrade tiles: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v19, -1, -1);
      MEMORY[0x1C875A0B0](v18, -1, -1);

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v25);
    }
    else
    {

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
  }
  if (a3)
  {
    uint64_t v23 = swift_retain();
    a3(v23);
    return sub_1C221794C((uint64_t)a3);
  }
  return result;
}

void *sub_1C24F6714(uint64_t a1)
{
  v36[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1C254E290();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = sub_1C24F4B6C();
  v36[0] = 0;
  id v11 = objc_msgSend(v10, sel_allValuesWithError_, v36);

  id v12 = v36[0];
  if (v11)
  {
    uint64_t v13 = sub_1C254F2D0();
    id v14 = v12;

    uint64_t v15 = sub_1C228FE98(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v16 = v36[0];
    uint64_t v17 = (void *)sub_1C254C820();

    swift_willThrow();
    sub_1C254E510();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    id v18 = v17;
    id v19 = v17;
    id v20 = sub_1C254E550();
    os_log_type_t v21 = sub_1C254FA20();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v33 = (void *)swift_slowAlloc();
      v36[0] = v33;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v34 = v7;
      os_log_t v32 = v20;
      uint64_t v23 = sub_1C254E280();
      uint64_t v35 = sub_1C21AD354(v23, v24, (uint64_t *)v36);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v35 = (uint64_t)v17;
      id v25 = v17;
      sub_1C2206F9C();
      uint64_t v26 = sub_1C254F4F0();
      uint64_t v35 = sub_1C21AD354(v26, v27, (uint64_t *)v36);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      os_log_t v28 = v32;
      _os_log_impl(&dword_1C21A1000, v32, v21, "HKKeyValueDomain error when attempting to fetch ids of dismissed tiles of type %s: %s", (uint8_t *)v22, 0x16u);
      id v29 = v33;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v29, -1, -1);
      MEMORY[0x1C875A0B0](v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v6);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v15;
}

uint64_t AccountStatusSummaryTileSettingsManager.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AccountStatusSummaryTileSettingsManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1C24F6BBC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C24F6C10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C24F6BBC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C24F6C6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2206F9C();
    unint64_t v7 = a3(a1, MEMORY[0x1E4FBC848] + 8, v6, MEMORY[0x1E4FBC0F0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C24F6CE4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  uint64_t v6 = a5[7] + 72 * result;
  *(void *)(v6 + 64) = *(void *)(a4 + 64);
  long long v7 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v6 + 48) = v7;
  long long v8 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v8;
  uint64_t v9 = a5[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a5[2] = v11;
  }
  return result;
}

unint64_t sub_1C24F6D48(unint64_t result, uint64_t a2, void *a3, double a4)
{
  a3[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(double *)(a3[6] + v4) = a4;
  *(void *)(a3[7] + v4) = a2;
  uint64_t v5 = a3[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a3[2] = v7;
  }
  return result;
}

unint64_t sub_1C24F6D90(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  uint64_t v7 = (void *)(a7[6] + 32 * result);
  *uint64_t v7 = a2;
  v7[1] = a3;
  v7[2] = a4;
  v7[3] = a5;
  *(void *)(a7[7] + 8 * result) = a6;
  uint64_t v8 = a7[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a7[2] = v10;
  }
  return result;
}

uint64_t sub_1C24F6DE0(unint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1C254CB40();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v11 = (_OWORD *)(a4[7] + 48 * a1);
  long long v12 = a3[2];
  long long v13 = *a3;
  v11[1] = a3[1];
  v11[2] = v12;
  *uint64_t v11 = v13;
  uint64_t v14 = a4[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a4[2] = v16;
  }
  return result;
}

_OWORD *sub_1C24F6EAC(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  BOOL v6 = (void *)(a5[6] + 16 * a1);
  *BOOL v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1C2206B9C(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_1C24F6F18(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = a4[6] + 40 * result;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(void *)(v4 + 32) = *(void *)(a2 + 32);
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

_OWORD *sub_1C24F6F74(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1C2206B9C(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_1C24F6FDC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for BrowseCategory();
  uint64_t result = sub_1C2207DD8(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_1C24F707C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  long long v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1C24F70C4(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_1C24F710C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for BrowseCategory();
  uint64_t result = sub_1C2207DD8(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1);
  uint64_t v11 = a4[7] + 72 * a1;
  *(void *)(v11 + 64) = *(void *)(a3 + 64);
  long long v12 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v11 + 48) = v12;
  long long v13 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 16) = v13;
  uint64_t v14 = a4[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a4[2] = v16;
  }
  return result;
}

uint64_t sub_1C24F71C8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, void *a7)
{
  a7[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a7[6] + 32 * a1;
  *(void *)uint64_t v8 = a2;
  *(void *)(v8 + 8) = a3;
  *(void *)(v8 + 16) = a4;
  *(unsigned char *)(v8 + 24) = a5 & 1;
  uint64_t result = sub_1C24F762C(a6, a7[7] + 48 * a1);
  uint64_t v10 = a7[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a7[2] = v12;
  }
  return result;
}

uint64_t sub_1C24F7244(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1C254CB40();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v11 = a4[7] + 72 * a1;
  *(void *)(v11 + 64) = *(void *)(a3 + 64);
  long long v12 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v11 + 48) = v12;
  long long v13 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 16) = v13;
  uint64_t v14 = a4[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a4[2] = v16;
  }
  return result;
}

unint64_t sub_1C24F7318(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, _OWORD *a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  uint64_t v7 = a7[6] + 32 * result;
  *(void *)uint64_t v7 = a2;
  *(void *)(v7 + 8) = a3;
  *(void *)(v7 + 16) = a4;
  *(unsigned char *)(v7 + 24) = a5 & 1;
  uint64_t v8 = (_OWORD *)(a7[7] + 48 * result);
  long long v9 = a6[1];
  _OWORD *v8 = *a6;
  v8[1] = v9;
  v8[2] = a6[2];
  uint64_t v10 = a7[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a7[2] = v12;
  }
  return result;
}

unint64_t sub_1C24F7380(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = a4[6] + 72 * result;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 64) = *(void *)(a2 + 64);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v6;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v7 = a4[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a4[2] = v9;
  }
  return result;
}

unint64_t sub_1C24F73E0(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unint64_t sub_1C24F7424(unint64_t result, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  uint64_t v4 = (_OWORD *)(a4[7] + 48 * result);
  long long v5 = a3[1];
  _OWORD *v4 = *a3;
  v4[1] = v5;
  v4[2] = a3[2];
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void sub_1C24F747C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C24F74C8()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C24F7508(uint64_t a1, void *a2)
{
  return sub_1C24F6490(a1, a2, *(void (**)(uint64_t))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t block_destroy_helper_67()
{
  return swift_release();
}

uint64_t method lookup function for AccountStatusSummaryTileSettingsManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountStatusSummaryTileSettingsManager);
}

uint64_t dispatch thunk of AccountStatusSummaryTileSettingsManager.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AccountStatusSummaryTileSettingsManager.shouldShowAccountStatusSummaryTile(for:type:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of AccountStatusSummaryTileSettingsManager.setAccountStatusSummaryTileAppearance(dismissed:userInfo:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of AccountStatusSummaryTileSettingsManager.migrateFromUserDefault()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of AccountStatusSummaryTileSettingsManager.key(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of AccountStatusSummaryTileSettingsManager.dismissUpgradeTiles(for:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of AccountStatusSummaryTileSettingsManager.previouslyDismissedAccountIDs(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

ValueMetadata *type metadata accessor for AccountStatusSummaryTileSettingsManager.Keys()
{
  return &type metadata for AccountStatusSummaryTileSettingsManager.Keys;
}

uint64_t sub_1C24F762C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t static HealthRecordsMigrator.currentVersion.getter()
{
  return 1;
}

id HealthRecordsMigrator.__allocating_init(healthStore:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  if (qword_1EBB6EF50 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1EBB719C8;
  id v5 = objc_allocWithZone(v1);
  swift_retain();
  id v6 = sub_1C24F8B38(a1, v4);

  swift_release();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v6;
}

id HealthRecordsMigrator.init(healthStore:)(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_1EBB6EF50 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EBB719C8;
  id v4 = objc_allocWithZone(ObjectType);
  swift_retain();
  id v5 = sub_1C24F8B38(a1, v3);

  swift_release();
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t HealthRecordsMigrator.migrateIfNeeded(completion:)(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v5 = sub_1C254E560();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)&v2[OBJC_IVAR___HRHealthRecordsMigrator_searchIndexController])
  {
    uint64_t v9 = (void *)swift_allocObject();
    void v9[2] = v2;
    v9[3] = a1;
    v9[4] = a2;
    uint64_t v10 = v2;
    swift_retain();
    sub_1C24F7D58((uint64_t)sub_1C24F8E7C, (uint64_t)v9);
    return swift_release();
  }
  else
  {
    sub_1C254E530();
    uint64_t v12 = sub_1C254E550();
    os_log_type_t v13 = sub_1C254FA40();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_1C21A1000, v12, v13, "Unable to perform health record search index migration since private SearchIndex is unsupported for non-sandbox process", v14, 2u);
      MEMORY[0x1C875A0B0](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return a1(0);
  }
}

void sub_1C24F7AB4(void *a1, char a2, char *a3, void (*a4)(void *), uint64_t a5)
{
  uint64_t v10 = sub_1C254E560();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v24[1] = a1;
    id v15 = a1;
    sub_1C2206F9C();
    swift_willThrowTypedImpl();
    id v16 = a1;
    a4(a1);
    sub_1C22CB1D4(a1, 1);
    sub_1C22CB1D4(a1, 1);
  }
  else if (a1 == (void *)1)
  {
    ((void (*)(void, __n128))a4)(0, v12);
  }
  else
  {
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = a4;
    v17[3] = a5;
    v17[4] = a3;
    if (*(void *)&a3[OBJC_IVAR___HRHealthRecordsMigrator_searchIndexController])
    {
      swift_retain_n();
      id v18 = a3;
      swift_retain();
      sub_1C25465C0((uint64_t)sub_1C24F9238, (uint64_t)v17);
      swift_release();
      swift_release();
    }
    else
    {
      swift_retain_n();
      id v19 = a3;
      sub_1C254E530();
      id v20 = sub_1C254E550();
      os_log_type_t v21 = sub_1C254FA40();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        v24[0] = v19;
        uint64_t v23 = v22;
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_1C21A1000, v20, v21, "Unable to perform health record search index migration since private SearchIndex is unsupported for non-sandbox process", v22, 2u);
        MEMORY[0x1C875A0B0](v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      sub_1C24F8054(1, (uint64_t)a4, a5);
      swift_release();
    }
    swift_release();
  }
}

void sub_1C24F7D58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E530();
  uint64_t v10 = sub_1C254E550();
  os_log_type_t v11 = sub_1C254FA40();
  if (os_log_type_enabled(v10, v11))
  {
    __n128 v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)__n128 v12 = 0;
    _os_log_impl(&dword_1C21A1000, v10, v11, "Fetching DataVersion...", v12, 2u);
    MEMORY[0x1C875A0B0](v12, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v13 = *(void **)(v3 + OBJC_IVAR___HRHealthRecordsMigrator_keyValueDomain);
  uint64_t v14 = (void *)sub_1C254F430();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  aBlock[4] = sub_1C24F9174;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23CC220;
  aBlock[3] = &block_descriptor_72;
  id v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v13, sel_numberForKey_completion_, v14, v16);
  _Block_release(v16);
}

void sub_1C24F7FF0(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = sub_1C254C810();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

void sub_1C24F8054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C254E560();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  os_log_type_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E530();
  __n128 v12 = sub_1C254E550();
  os_log_type_t v13 = sub_1C254FA40();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v31 = a2;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v30 = v3;
    uint64_t v17 = v16;
    uint64_t v32 = a1;
    aBlock[0] = v16;
    uint64_t v28 = v8;
    uint64_t v29 = a3;
    *(_DWORD *)uint64_t v15 = 136446210;
    uint64_t v18 = sub_1C2550810();
    uint64_t v32 = sub_1C21AD354(v18, v19, aBlock);
    a3 = v29;
    sub_1C2550120();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v12, v13, "Setting DataVersion to %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v20 = v17;
    uint64_t v4 = v30;
    MEMORY[0x1C875A0B0](v20, -1, -1);
    os_log_type_t v21 = v15;
    a2 = v31;
    MEMORY[0x1C875A0B0](v21, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v28);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v22 = *(void **)(v4 + OBJC_IVAR___HRHealthRecordsMigrator_keyValueDomain);
  id v23 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1);
  unint64_t v24 = (void *)sub_1C254F430();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  *(void *)(v25 + 24) = a3;
  aBlock[4] = (uint64_t)sub_1C24F9244;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C22AE944;
  aBlock[3] = (uint64_t)&block_descriptor_21_1;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v22, sel_setNumber_forKey_completion_, v23, v24, v26);
  _Block_release(v26);
}

void sub_1C24F8374(void *a1, void *a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v8 = sub_1C254E560();
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)&double v10 = MEMORY[0x1F4188790](v8).n128_u64[0];
  __n128 v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    id v13 = objc_msgSend(a1, sel_integerValue, v10);
  }
  else {
    id v13 = 0;
  }
  if (a2) {
    uint64_t v14 = a2;
  }
  else {
    uint64_t v14 = v13;
  }
  id v15 = a2;
  sub_1C254E530();
  sub_1C24F9184(v14, a2 != 0);
  sub_1C24F9184(v14, a2 != 0);
  uint64_t v16 = sub_1C254E550();
  os_log_type_t v17 = sub_1C254FA40();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v28 = a4;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v29 = a3;
    unint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v27 = v9;
    uint64_t v21 = v20;
    uint64_t v32 = v20;
    uint64_t v26 = v8;
    *(_DWORD *)unint64_t v19 = 136446210;
    uint64_t v25 = v19 + 4;
    uint64_t v30 = (uint64_t)v14;
    BOOL v31 = a2 != 0;
    sub_1C24F9184(v14, a2 != 0);
    sub_1C24F9190();
    uint64_t v22 = sub_1C254F510();
    uint64_t v30 = sub_1C21AD354(v22, v23, &v32);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    sub_1C22CB1D4(v14, a2 != 0);
    sub_1C22CB1D4(v14, a2 != 0);
    _os_log_impl(&dword_1C21A1000, v16, v17, "Fetched DataVersion: %{public}s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v21, -1, -1);
    unint64_t v24 = v19;
    a3 = v29;
    MEMORY[0x1C875A0B0](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v26);
  }
  else
  {
    sub_1C22CB1D4(v14, a2 != 0);
    sub_1C22CB1D4(v14, a2 != 0);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  a3(v14, a2 != 0);
  sub_1C22CB1D4(v14, a2 != 0);
}

void sub_1C24F8658(int a1, void *a2, void (*a3)(void), uint64_t a4)
{
  LODWORD(v7) = a1;
  uint64_t v8 = sub_1C254E560();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E530();
  id v12 = a2;
  id v13 = a2;
  uint64_t v14 = sub_1C254E550();
  os_log_type_t v15 = sub_1C254FA40();
  if (!os_log_type_enabled(v14, v15))
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v21 = a2;
    if (a2) {
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  int v25 = (int)v7;
  v23[1] = a4;
  unint64_t v24 = a3;
  uint64_t v7 = (uint8_t *)swift_slowAlloc();
  uint64_t v16 = swift_slowAlloc();
  uint64_t v27 = v16;
  *(_DWORD *)uint64_t v7 = 136446210;
  uint64_t v17 = (uint64_t)a2;
  if (!a2)
  {
    uint64_t v17 = 0;
    if ((v25 & 1) == 0)
    {
      sub_1C2405F2C();
      uint64_t v17 = swift_allocError();
    }
  }
  uint64_t v26 = v17;
  id v18 = a2;
  sub_1C24F924C(0, (unint64_t *)&unk_1EBB6F530, (uint64_t (*)(uint64_t))sub_1C2206F9C, MEMORY[0x1E4FBB718]);
  uint64_t v19 = sub_1C254F510();
  uint64_t v26 = sub_1C21AD354(v19, v20, &v27);
  sub_1C2550120();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_1C21A1000, v14, v15, "Set DataVersion: %{public}s", v7, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1C875A0B0](v16, -1, -1);
  MEMORY[0x1C875A0B0](v7, -1, -1);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  a3 = v24;
  LOBYTE(v7) = v25;
  uint64_t v21 = a2;
  if (!a2)
  {
LABEL_8:
    if ((v7 & 1) == 0)
    {
      sub_1C2405F2C();
      uint64_t v21 = (void *)swift_allocError();
    }
  }
LABEL_10:
  id v22 = a2;
  a3(v21);
}

id HealthRecordsMigrator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void HealthRecordsMigrator.init()()
{
}

id HealthRecordsMigrator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C24F8ABC(void *a1, void (*a2)(void *), uint64_t a3)
{
  if (a1)
  {
    id v5 = a1;
    a2(a1);
  }
  else
  {
    sub_1C24F8054(1, (uint64_t)a2, a3);
  }
}

id sub_1C24F8B38(void *a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_1C254FC60();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254FC00();
  MEMORY[0x1F4188790](v7);
  uint64_t v8 = sub_1C254F200();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v20 = OBJC_IVAR___HRHealthRecordsMigrator_queue;
  unint64_t v19 = sub_1C22023A4();
  uint64_t v9 = v2;
  sub_1C254F1E0();
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C21ACD00();
  sub_1C24F924C(0, &qword_1EBB6FF50, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C21ACDC4();
  sub_1C2550200();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCC58], v3);
  *(void *)&v2[v20] = sub_1C254FCB0();
  uint64_t v10 = &v9[OBJC_IVAR___HRHealthRecordsMigrator_healthRecordsKeyValueDomain];
  *(void *)uint64_t v10 = 0xD000000000000020;
  *((void *)v10 + 1) = 0x80000001C2589F30;
  uint64_t v11 = &v9[OBJC_IVAR___HRHealthRecordsMigrator_dataVersionKey];
  *(void *)uint64_t v11 = 0x7372655661746164;
  *((void *)v11 + 1) = 0xEB000000006E6F69;
  id v12 = v21;
  uint64_t v13 = v22;
  *(void *)&v9[OBJC_IVAR___HRHealthRecordsMigrator_healthStore] = v21;
  *(void *)&v9[OBJC_IVAR___HRHealthRecordsMigrator_searchIndexController] = v13;
  id v14 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  swift_retain();
  id v15 = v12;
  uint64_t v16 = (void *)sub_1C254F430();
  id v17 = objc_msgSend(v14, sel_initWithCategory_domainName_healthStore_, 1, v16, v15);

  *(void *)&v9[OBJC_IVAR___HRHealthRecordsMigrator_keyValueDomain] = v17;
  v24.receiver = v9;
  v24.super_class = ObjectType;
  return objc_msgSendSuper2(&v24, sel_init);
}

void sub_1C24F8E7C(void *a1, char a2)
{
  sub_1C24F7AB4(a1, a2 & 1, *(char **)(v2 + 16), *(void (**)(void *))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t type metadata accessor for HealthRecordsMigrator()
{
  return self;
}

uint64_t method lookup function for HealthRecordsMigrator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthRecordsMigrator);
}

uint64_t sub_1C24F8EC8(char *a1, void (**a2)(void, void))
{
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  if (*(void *)&a1[OBJC_IVAR___HRHealthRecordsMigrator_searchIndexController])
  {
    uint64_t v9 = (void *)swift_allocObject();
    void v9[2] = a1;
    v9[3] = sub_1C24F9130;
    v9[4] = v8;
    _Block_copy(a2);
    uint64_t v10 = a1;
    swift_retain();
    sub_1C24F7D58((uint64_t)sub_1C24F92BC, (uint64_t)v9);
    swift_release();
    return swift_release();
  }
  else
  {
    _Block_copy(a2);
    sub_1C254E530();
    id v12 = sub_1C254E550();
    os_log_type_t v13 = sub_1C254FA40();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      _os_log_impl(&dword_1C21A1000, v12, v13, "Unable to perform health record search index migration since private SearchIndex is unsupported for non-sandbox process", v14, 2u);
      MEMORY[0x1C875A0B0](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    a2[2](a2, 0);
    return swift_release();
  }
}

uint64_t sub_1C24F90F8()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C24F9130(uint64_t a1)
{
  sub_1C24F7FF0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C24F913C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C24F9174(void *a1, void *a2)
{
  sub_1C24F8374(a1, a2, *(void (**)(void, void))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t block_destroy_helper_68()
{
  return swift_release();
}

id sub_1C24F9184(id result, char a2)
{
  if (a2) {
    return result;
  }
  return result;
}

void sub_1C24F9190()
{
  if (!qword_1EBB6EEF0)
  {
    sub_1C2206F9C();
    unint64_t v0 = sub_1C2550A30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6EEF0);
    }
  }
}

uint64_t sub_1C24F91F8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C24F9238(void *a1)
{
  sub_1C24F8ABC(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C24F9244(int a1, void *a2)
{
  sub_1C24F8658(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24));
}

void sub_1C24F924C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C24F92C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UserDomainConceptViewData();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (id *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24FB1EC(v2 + *(int *)(v5 + 44), (uint64_t)v10, (uint64_t (*)(void))sub_1C21EA6B8);
  sub_1C24FB1EC(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
  uint64_t v11 = sub_1C254CAD0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    id v13 = objc_msgSend(v7[1], sel_modificationDate);
    sub_1C254CA80();

    sub_1C24FB254((uint64_t)v10, (uint64_t (*)(void))sub_1C21EA6B8);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v10, v11);
  }
  return sub_1C24FB254((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
}

void sub_1C24F94AC(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t v64 = a2;
  sub_1C21EA6B8();
  *(void *)&double v23 = MEMORY[0x1F4188790](v22 - 8).n128_u64[0];
  uint64_t v63 = (uint64_t)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  id v26 = objc_msgSend(a1, sel_categoryTypes, v23);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
  unint64_t v27 = sub_1C254F710();

  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v67 = a6;
  uint64_t v68 = a7;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  if (v28)
  {
    if ((v27 & 0xC000000000000001) != 0)
    {
      id v29 = (id)MEMORY[0x1C87588E0](0, v27);
    }
    else
    {
      if (!*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      id v29 = *(id *)(v27 + 32);
    }
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v30, sel_integerValue);
  }
  else
  {
    swift_bridgeObjectRelease();
    id v31 = 0;
  }
  int v62 = a14;
  uint64_t v61 = a13;
  int v60 = a12;
  uint64_t v58 = a10;
  uint64_t v59 = a11;
  DisplayCategory.Kind.init(rawValue:)((Swift::Int)v31);
  int v32 = v69;
  id v33 = objc_msgSend(self, sel_mainBundle);
  id v34 = objc_msgSend(v33, sel_preferredLocalizations);

  uint64_t v35 = sub_1C254F710();
  uint64_t v36 = v25;
  Swift::String v37 = HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v35);
  uint64_t countAndFlagsBits = v37._countAndFlagsBits;
  object = v37._object;
  swift_bridgeObjectRelease();
  uint64_t v40 = sub_1C254CAD0();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(a3, 1, v40) == 1)
  {
    id v42 = objc_msgSend(v25, sel_modificationDate);
    int v57 = v32;
    uint64_t v43 = a8;
    uint64_t v44 = a3;
    id v45 = v42;
    uint64_t v46 = v63;
    sub_1C254CA80();

    a3 = v44;
    a8 = v43;
    uint64_t countAndFlagsBits = v37._countAndFlagsBits;
    object = v37._object;
    int v32 = v57;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v46, 0, 1, v40);
  }
  else
  {
    uint64_t v46 = v63;
    sub_1C24FB1EC(a3, v63, (uint64_t (*)(void))sub_1C21EA6B8);
  }
  uint64_t v47 = v64;
  if (v32 == 11) {
    char v48 = 0;
  }
  else {
    char v48 = v32;
  }
  *(unsigned char *)a9 = v48;
  *(void *)(a9 + 8) = v36;
  *(void *)(a9 + 16) = v47;
  *(void *)(a9 + 24) = countAndFlagsBits;
  *(void *)(a9 + 32) = object;
  *(void *)(a9 + 40) = v65;
  id v49 = (int *)type metadata accessor for UserDomainConceptViewData();
  sub_1C22AE66C(v46, a9 + v49[9]);
  *(void *)(a9 + v49[10]) = v66;
  uint64_t v50 = (void *)(a9 + v49[11]);
  uint64_t v51 = v68;
  *uint64_t v50 = v67;
  v50[1] = v51;
  uint64_t v52 = (void *)(a9 + v49[12]);
  uint64_t v53 = v58;
  *uint64_t v52 = a8;
  v52[1] = v53;
  uint64_t v54 = a9 + v49[13];
  *(void *)uint64_t v54 = v59;
  *(unsigned char *)(v54 + 8) = v60 & 1;
  uint64_t v55 = a9 + v49[14];
  *(void *)uint64_t v55 = v61;
  *(unsigned char *)(v55 + 8) = v62 & 1;
  sub_1C24FB254(a3, (uint64_t (*)(void))sub_1C21EA6B8);
}

uint64_t UserDomainConceptViewData.meaningfulDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UserDomainConceptViewData();
  return sub_1C24FB1EC(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(void))sub_1C21EA6B8);
}

uint64_t UserDomainConceptViewData.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CAD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C25509D0();
  id v9 = *(id *)(v0 + 8);
  sub_1C254FF80();

  sub_1C25509D0();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  sub_1C25509D0();
  uint64_t v10 = (int *)type metadata accessor for UserDomainConceptViewData();
  sub_1C24FB1EC(v1 + v10[9], (uint64_t)v8, (uint64_t (*)(void))sub_1C21EA6B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1C25509E0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1C25509E0();
    sub_1C24FB2B4(&qword_1EA2DD9B0, MEMORY[0x1E4F27928]);
    sub_1C254F380();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v11 = *(void **)(v1 + v10[10]);
  sub_1C25509E0();
  if (v11)
  {
    id v12 = v11;
    sub_1C254FF80();
  }
  if (*(void *)(v1 + v10[11] + 8))
  {
    sub_1C25509E0();
    swift_bridgeObjectRetain();
    sub_1C254F570();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C25509E0();
  }
  if (*(void *)(v1 + v10[12] + 8))
  {
    sub_1C25509E0();
    swift_bridgeObjectRetain();
    sub_1C254F570();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C25509E0();
  }
  if (*(unsigned char *)(v1 + v10[13] + 8) == 1)
  {
    sub_1C25509E0();
  }
  else
  {
    sub_1C25509E0();
    sub_1C25509D0();
  }
  if (*(unsigned char *)(v1 + v10[14] + 8) == 1) {
    return sub_1C25509E0();
  }
  sub_1C25509E0();
  return sub_1C25509D0();
}

uint64_t UserDomainConceptViewData.hashValue.getter()
{
  return sub_1C2550A10();
}

uint64_t sub_1C24F9CE8()
{
  return sub_1C2550A10();
}

uint64_t sub_1C24F9D2C()
{
  return sub_1C2550A10();
}

uint64_t sub_1C24F9D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C24FB1EC(v2 + *(int *)(a1 + 36), a2, (uint64_t (*)(void))sub_1C21EA6B8);
}

uint64_t _s15HealthRecordsUI25UserDomainConceptViewDataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1C254CAD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EDF24();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EA6B8();
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  id v18 = (char *)&v59 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v59 - v19;
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2) {
    return 0;
  }
  uint64_t v62 = v5;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
  if ((sub_1C254FF70() & 1) == 0 || a1[2] != a2[2]) {
    return 0;
  }
  if (a1[3] != a2[3] || a1[4] != a2[4])
  {
    char v21 = sub_1C2550870();
    uint64_t result = 0;
    if ((v21 & 1) == 0) {
      return result;
    }
  }
  if (a1[5] != a2[5]) {
    return 0;
  }
  uint64_t v23 = type metadata accessor for UserDomainConceptViewData();
  uint64_t v24 = (uint64_t)a1 + *(int *)(v23 + 36);
  int v60 = sub_1C21EA6B8;
  sub_1C24FB1EC(v24, (uint64_t)v20, (uint64_t (*)(void))sub_1C21EA6B8);
  uint64_t v59 = (int *)v23;
  uint64_t v25 = (uint64_t)a2 + *(int *)(v23 + 36);
  id v26 = v60;
  sub_1C24FB1EC(v25, (uint64_t)v18, (uint64_t (*)(void))v60);
  uint64_t v27 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1C24FB1EC((uint64_t)v20, (uint64_t)v11, (uint64_t (*)(void))v26);
  uint64_t v61 = v27;
  sub_1C24FB1EC((uint64_t)v18, v27, (uint64_t (*)(void))v26);
  uint64_t v28 = v62;
  int v60 = *(void (**)())(v62 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v60)(v11, 1, v4) == 1)
  {
    sub_1C24FB254((uint64_t)v18, (uint64_t (*)(void))sub_1C21EA6B8);
    sub_1C24FB254((uint64_t)v20, (uint64_t (*)(void))sub_1C21EA6B8);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v60)(v61, 1, v4) == 1)
    {
      sub_1C24FB254((uint64_t)v11, (uint64_t (*)(void))sub_1C21EA6B8);
      goto LABEL_17;
    }
LABEL_13:
    sub_1C24FB254((uint64_t)v11, (uint64_t (*)(void))sub_1C21EDF24);
    return 0;
  }
  sub_1C24FB1EC((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))sub_1C21EA6B8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v60)(v61, 1, v4) == 1)
  {
    sub_1C24FB254((uint64_t)v18, (uint64_t (*)(void))sub_1C21EA6B8);
    sub_1C24FB254((uint64_t)v20, (uint64_t (*)(void))sub_1C21EA6B8);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v4);
    goto LABEL_13;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v7, v61, v4);
  sub_1C24FB2B4(&qword_1EA2DDD00, MEMORY[0x1E4F27928]);
  LODWORD(v61) = sub_1C254F420();
  id v29 = *(void (**)(char *, uint64_t))(v28 + 8);
  v29(v7, v4);
  sub_1C24FB254((uint64_t)v18, (uint64_t (*)(void))sub_1C21EA6B8);
  sub_1C24FB254((uint64_t)v20, (uint64_t (*)(void))sub_1C21EA6B8);
  v29(v15, v4);
  sub_1C24FB254((uint64_t)v11, (uint64_t (*)(void))sub_1C21EA6B8);
  if ((v61 & 1) == 0) {
    return 0;
  }
LABEL_17:
  uint64_t v30 = v59;
  uint64_t v31 = v59[10];
  int v32 = *(void **)((char *)a1 + v31);
  id v33 = *(void **)((char *)a2 + v31);
  if (v32)
  {
    if (!v33) {
      return 0;
    }
    sub_1C21AB51C(0, &qword_1EA2E0EC8);
    id v34 = v33;
    id v35 = v32;
    char v36 = sub_1C254FF70();

    if ((v36 & 1) == 0) {
      return 0;
    }
  }
  else if (v33)
  {
    return 0;
  }
  uint64_t v37 = v30[11];
  uint64_t v38 = (void *)((char *)a1 + v37);
  uint64_t v39 = *(void *)((char *)a1 + v37 + 8);
  uint64_t v40 = (void *)((char *)a2 + v37);
  uint64_t v41 = v40[1];
  if (v39)
  {
    if (!v41) {
      return 0;
    }
    if (*v38 != *v40 || v39 != v41)
    {
      char v42 = sub_1C2550870();
      uint64_t result = 0;
      if ((v42 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v41)
  {
    return 0;
  }
  uint64_t v43 = v30[12];
  uint64_t v44 = (void *)((char *)a1 + v43);
  uint64_t v45 = *(void *)((char *)a1 + v43 + 8);
  uint64_t v46 = (void *)((char *)a2 + v43);
  uint64_t v47 = v46[1];
  if (!v45)
  {
    if (v47) {
      return 0;
    }
LABEL_36:
    uint64_t v49 = v30[13];
    uint64_t v50 = (void *)((char *)a1 + v49);
    char v51 = *((unsigned char *)a1 + v49 + 8);
    uint64_t v52 = (void *)((char *)a2 + v49);
    int v53 = *((unsigned __int8 *)a2 + v49 + 8);
    if (v51)
    {
      if (v53) {
        goto LABEL_42;
      }
    }
    else
    {
      if (*v50 != *v52) {
        LOBYTE(v53) = 1;
      }
      if ((v53 & 1) == 0)
      {
LABEL_42:
        uint64_t v54 = v30[14];
        uint64_t v55 = (void *)((char *)a1 + v54);
        char v56 = *((unsigned char *)a1 + v54 + 8);
        int v57 = (void *)((char *)a2 + v54);
        char v58 = *((unsigned char *)a2 + v54 + 8);
        if (v56)
        {
          if (v58) {
            return 1;
          }
        }
        else
        {
          if (*v55 != *v57) {
            char v58 = 1;
          }
          if ((v58 & 1) == 0) {
            return 1;
          }
        }
      }
    }
    return 0;
  }
  if (!v47) {
    return 0;
  }
  if (*v44 == *v46 && v45 == v47) {
    goto LABEL_36;
  }
  char v48 = sub_1C2550870();
  uint64_t result = 0;
  if (v48) {
    goto LABEL_36;
  }
  return result;
}

uint64_t type metadata accessor for UserDomainConceptViewData()
{
  uint64_t result = qword_1EA2E49C8;
  if (!qword_1EA2E49C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C24FA424()
{
  return sub_1C24FB2B4(&qword_1EA2E49C0, (void (*)(uint64_t))type metadata accessor for UserDomainConceptViewData);
}

void *initializeBufferWithCopyOfBuffer for UserDomainConceptViewData(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = (void *)a2[1];
    *(void *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    uint64_t v8 = a2[5];
    uint64_t v9 = a3[9];
    __dst = (void *)(a1 + v9);
    uint64_t v10 = (char *)a2 + v9;
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v11 = sub_1C254CAD0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    id v14 = v7;
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1C21EA6B8();
      memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v17 = a3[10];
    uint64_t v18 = a3[11];
    uint64_t v19 = *(void **)((char *)a2 + v17);
    *(void *)((char *)v4 + v17) = v19;
    uint64_t v20 = (void *)((char *)v4 + v18);
    char v21 = (uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[12];
    uint64_t v24 = a3[13];
    uint64_t v25 = (void *)((char *)v4 + v23);
    id v26 = (uint64_t *)((char *)a2 + v23);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = (char *)v4 + v24;
    uint64_t v29 = (uint64_t)a2 + v24;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = *(unsigned char *)(v29 + 8);
    uint64_t v30 = a3[14];
    uint64_t v31 = (char *)v4 + v30;
    uint64_t v32 = (uint64_t)a2 + v30;
    *(void *)uint64_t v31 = *(void *)v32;
    v31[8] = *(unsigned char *)(v32 + 8);
    id v33 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for UserDomainConceptViewData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1C254CAD0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UserDomainConceptViewData(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = a3[9];
  __dst = (void *)(a1 + v8);
  uint64_t v9 = (const void *)(a2 + v8);
  uint64_t v10 = sub_1C254CAD0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v6;
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1C21EA6B8();
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v15 = a3[10];
  uint64_t v16 = a3[11];
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[12];
  uint64_t v22 = a3[13];
  uint64_t v23 = (void *)(a1 + v21);
  uint64_t v24 = (void *)(a2 + v21);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = a1 + v22;
  uint64_t v27 = a2 + v22;
  *(void *)uint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = a3[14];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(void *)uint64_t v29 = *(void *)v30;
  *(unsigned char *)(v29 + 8) = *(unsigned char *)(v30 + 8);
  id v31 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserDomainConceptViewData(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v6;
  id v8 = v6;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v9 = a3[9];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_1C254CAD0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1C21EA6B8();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[10];
  uint64_t v19 = *(void **)(a1 + v18);
  uint64_t v20 = *(void **)(a2 + v18);
  *(void *)(a1 + v18) = v20;
  id v21 = v20;

  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[12];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[13];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v31 = *v30;
  *(unsigned char *)(v29 + 8) = *((unsigned char *)v30 + 8);
  *(void *)uint64_t v29 = v31;
  uint64_t v32 = a3[14];
  uint64_t v33 = a1 + v32;
  id v34 = (uint64_t *)(a2 + v32);
  uint64_t v35 = *v34;
  *(unsigned char *)(v33 + 8) = *((unsigned char *)v34 + 8);
  *(void *)uint64_t v33 = v35;
  return a1;
}

uint64_t initializeWithTake for UserDomainConceptViewData(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = a3[9];
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C254CAD0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1C21EA6B8();
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = a3[14];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  return a1;
}

uint64_t assignWithTake for UserDomainConceptViewData(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = a3[9];
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1C254CAD0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1C21EA6B8();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[10];
  uint64_t v17 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);

  uint64_t v18 = a3[11];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[12];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[13];
  uint64_t v29 = a3[14];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  uint64_t v32 = a1 + v29;
  uint64_t v33 = a2 + v29;
  *(void *)uint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserDomainConceptViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C24FAFA0);
}

uint64_t sub_1C24FAFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C21EA6B8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for UserDomainConceptViewData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C24FB064);
}

uint64_t sub_1C24FB064(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C21EA6B8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C24FB10C()
{
  sub_1C21EA6B8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1C24FB1EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C24FB254(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C24FB2B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double static ViewMetrics.defaultPadding.getter()
{
  return 16.0;
}

double static ViewMetrics.defaultInterItemPadding.getter()
{
  return 8.0;
}

double static ViewMetrics.baselineTop.getter()
{
  return 27.0;
}

double static ViewMetrics.baselineInterLabel.getter()
{
  return 24.0;
}

double static ViewMetrics.baselineBottom.getter()
{
  return 13.0;
}

double static ViewMetrics.singleRowBaselineTop.getter()
{
  return 29.0;
}

double static ViewMetrics.singleRowBaselineBottom.getter()
{
  return 15.0;
}

ValueMetadata *type metadata accessor for ViewMetrics()
{
  return &type metadata for ViewMetrics;
}

uint64_t sub_1C24FB344@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C254D770();
  *a1 = result;
  return result;
}

uint64_t sub_1C24FB370(id *a1)
{
  id v1 = *a1;
  return sub_1C254D780();
}

uint64_t sub_1C24FB39C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C254D750();
  *a1 = result;
  return result;
}

uint64_t sub_1C24FB3C8(id *a1)
{
  id v1 = *a1;
  return sub_1C254D760();
}

uint64_t ConceptListViewDataSourceProvider.__allocating_init(categoryPredicate:sourceProfile:store:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  ConceptListViewDataSourceProvider.init(categoryPredicate:sourceProfile:store:)(a1, a2, a3);
  return v6;
}

id sub_1C24FB44C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = (void *)a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v41 = a1[4];
  uint64_t v7 = a1[6];
  uint64_t v42 = a1[5];
  uint64_t v9 = a1[7];
  uint64_t v8 = (void *)a1[8];
  if (v4) {
    char v10 = *a1;
  }
  else {
    char v10 = 11;
  }
  sub_1C254D110();
  LOBYTE(v44) = v10;
  id v39 = a2;
  id v11 = objc_msgSend(a2, sel_healthStore);
  id v12 = objc_msgSend(v11, sel_profileIdentifier);

  id v13 = static FeedItem.predicateForHealthRecordsData(categoryKind:sourceProfile:)((unsigned __int8 *)&v44, v12);
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1C2201B28(v3, v4, v5, v6, v41, v42, v7, v9, v8);
  }
  else
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v14 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();
  }
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C255CD70;
  *(void *)(v15 + 32) = v13;
  id v38 = v13;
  id v16 = objc_msgSend(v39, sel_healthStore);
  id v17 = objc_msgSend(v16, sel_profileIdentifier);

  uint64_t v18 = _s15HealthRecordsUI35AddAccountFeedItemIdentifierFactoryV011makeGeneralab10OnboardingH03forSSSo09HKProfileH0CSg_tFZ_0(v17);
  uint64_t v20 = v19;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  sub_1C2415E30(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C255CDA0;
  uint64_t v22 = sub_1C254D0F0();
  uint64_t v24 = v23;
  uint64_t v25 = MEMORY[0x1E4FBB1A0];
  *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v26 = sub_1C220D950();
  *(void *)(v21 + 32) = v22;
  *(void *)(v21 + 40) = v24;
  *(void *)(v21 + 96) = v25;
  *(void *)(v21 + 104) = v26;
  *(void *)(v21 + 64) = v26;
  *(void *)(v21 + 72) = v18;
  *(void *)(v21 + 80) = v20;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C254F9A0();

  swift_bridgeObjectRelease();
  *(void *)(v15 + 40) = v27;
  uint64_t v44 = v15;
  sub_1C254F730();
  uint64_t v28 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v28);

  *(void *)&v40[qword_1EA2DF3F0] = v29;
  *(void *)&v40[qword_1EA2DF3F8] = MEMORY[0x1E4FBC860];
  *(void *)&v40[qword_1EA2DF3E8] = v39;
  id v30 = objc_allocWithZone(MEMORY[0x1E4FB15C0]);
  id v31 = v29;
  id v32 = v39;
  id v33 = objc_msgSend(v30, sel_init);
  v43.receiver = v40;
  v43.super_class = (Class)type metadata accessor for FeedItemListViewController();
  id v34 = objc_msgSendSuper2(&v43, sel_initWithCollectionViewLayout_, v33);

  id v35 = v34;
  char v36 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setTitle_, v36);

  return v35;
}

void sub_1C24FB89C(void *a1, uint64_t a2, uint64_t a3)
{
  v6.receiver = a1;
  v6.super_class = (Class)swift_getObjectType();
  id v4 = v6.receiver;
  objc_msgSendSuper2(&v6, sel_viewDidAppear_, a3);
  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  char v5 = 11;
  sub_1C23CD65C(2, 15, 1, &v5, 0);
}

uint64_t sub_1C24FB954@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + qword_1EA2DF3E8);
  id v4 = *(id *)(v1 + qword_1EA2DF3F0);
  id v5 = objc_msgSend(v3, sel_healthStore);
  id v6 = objc_msgSend(v5, sel_profileIdentifier);

  sub_1C254FB30();
  uint64_t v7 = type metadata accessor for ConceptListViewDataSourceProvider();
  uint64_t v8 = swift_allocObject();
  ConceptListViewDataSourceProvider.init(categoryPredicate:sourceProfile:store:)(v4, v6, (uint64_t)v11);
  a1[3] = v7;
  uint64_t result = sub_1C24FC8D8((unint64_t *)&qword_1EA2DF108, v9, (void (*)(uint64_t))type metadata accessor for ConceptListViewDataSourceProvider);
  a1[4] = result;
  *a1 = v8;
  return result;
}

void sub_1C24FBA5C()
{
  qword_1EA2E49D8 = 0x4036000000000000;
}

id ConceptListViewDataSourceProvider.categoryPredicate.getter()
{
  return *(id *)(v0 + 16);
}

void *ConceptListViewDataSourceProvider.init(categoryPredicate:sourceProfile:store:)(void *a1, void *a2, uint64_t a3)
{
  id v4 = v3;
  sub_1C24FC874(0, &qword_1EA2E49E0, MEMORY[0x1E4F66228], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = &v17[-v9 - 8];
  v4[2] = a1;
  sub_1C21F4424(a3, (uint64_t)(v4 + 3));
  sub_1C21F4424(a3, (uint64_t)v17);
  uint64_t v11 = sub_1C254D2C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_1C254DE70();
  swift_allocObject();
  id v12 = a2;
  id v13 = a1;
  uint64_t v14 = sub_1C254DE60();
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  v4[8] = v14;
  v4[9] = a2;
  return v4;
}

uint64_t sub_1C24FBBE4()
{
  sub_1C2415E30(0, (unint64_t *)&qword_1EA2DEA38, (unint64_t *)&qword_1EA2DEA40);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255D0E0;
  *(void *)(v0 + 32) = sub_1C24FBC60();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = sub_1C254DE40();
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = sub_1C254DE30();
  *(void *)(v0 + 72) = v3;
  return v0;
}

uint64_t sub_1C24FBC60()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254D7E0();
  uint64_t v57 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  MEMORY[0x1F4188790](v2);
  char v56 = (char *)v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  v54[0] = (char *)v54 - v5;
  sub_1C24FC874(0, &qword_1EA2DFD80, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v54 - v7;
  sub_1C254D110();
  id v55 = (id)MEMORY[0x1C87555F0]();
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  v54[1] = v9;
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C255DBA0;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  sub_1C2415E30(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255CDA0;
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v13 = sub_1C220D950();
  strcpy((char *)(v11 + 32), "pluginPackage");
  *(_WORD *)(v11 + 46) = -4864;
  *(void *)(v11 + 96) = v12;
  *(void *)(v11 + 104) = v13;
  *(void *)(v11 + 64) = v13;
  *(void *)(v11 + 72) = 0xD000000000000025;
  *(void *)(v11 + 80) = 0x80000001C2578100;
  *(void *)(v10 + 32) = sub_1C254F9A0();
  sub_1C24FC874(0, &qword_1EA2DF320, MEMORY[0x1E4F67030], MEMORY[0x1E4FBBE00]);
  uint64_t v14 = sub_1C254CEF0();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = swift_allocObject();
  long long v59 = xmmword_1C255CD90;
  *(_OWORD *)(v17 + 16) = xmmword_1C255CD90;
  (*(void (**)(unint64_t, void, uint64_t))(v15 + 104))(v17 + v16, *MEMORY[0x1E4F66FC8], v14);
  uint64_t v18 = sub_1C254CFE0();
  uint64_t v20 = v19;
  uint64_t v21 = sub_1C254C520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 1, 1, v21);
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v59;
  uint64_t v23 = *(void **)(v1 + 72);
  *(void *)(v22 + 32) = v23;
  id v24 = v23;
  uint64_t v25 = MEMORY[0x1C87555D0](v17, v18, v20, v8, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = (uint64_t)v8;
  uint64_t v27 = v54[0];
  sub_1C229E610(v26);
  uint64_t v28 = *(void **)(v1 + 16);
  *(void *)(v10 + 40) = v25;
  *(void *)(v10 + 48) = v28;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = v59;
  id v30 = v28;
  *(void *)(v29 + 32) = sub_1C254DE50();
  uint64_t v31 = MEMORY[0x1C8755610](v29);
  swift_bridgeObjectRelease();
  *(void *)(v10 + 56) = v31;
  v61[0] = v10;
  sub_1C254F730();
  id v32 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v32);

  id v34 = v55;
  objc_msgSend(v55, sel_setPredicate_, v33);

  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1C255CEB0;
  id v36 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v37 = (void *)sub_1C254F430();
  id v38 = objc_msgSend(v36, sel_initWithKey_ascending_selector_, v37, 1, sel_localizedStandardCompare_);

  *(void *)(v35 + 32) = v38;
  v61[0] = v35;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  id v39 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setSortDescriptors_, v39);

  swift_beginAccess();
  sub_1C21F4424(v1 + 24, (uint64_t)v61);
  __swift_project_boxed_opaque_existential_1Tm(v61, v61[3]);
  id v40 = v34;
  uint64_t v41 = (void *)sub_1C254CE10();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v40, v41, 0, 0);

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v61);
  sub_1C254D7A0();
  uint64_t v42 = (void (*)(void *, void))sub_1C254D7C0();
  uint64_t v44 = v43;
  uint64_t v45 = sub_1C254D740();
  uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48);
  if (v46(v44, 1, v45))
  {
    v42(v61, 0);
  }
  else
  {
    swift_getKeyPath();
    uint64_t v47 = self;
    if (qword_1EA2DD910 != -1) {
      swift_once();
    }
    id v60 = objc_msgSend(v47, sel_absoluteDimension_, *(double *)&qword_1EA2E49D8);
    sub_1C254D730();
    v42(v61, 0);
  }
  char v48 = (void (*)(void *, void))sub_1C254D7C0();
  if (!v46(v49, 1, v45))
  {
    swift_getKeyPath();
    id v60 = objc_msgSend(self, sel_absoluteDimension_, 0.0);
    sub_1C254D730();
  }
  v48(v61, 0);
  sub_1C22259FC();
  uint64_t v50 = v57;
  uint64_t v51 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v56, v27, v58);
  uint64_t v52 = sub_1C254D540();

  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v27, v51);
  sub_1C24FC8D8((unint64_t *)&qword_1EA2DEA78, 255, (void (*)(uint64_t))sub_1C22259FC);
  return v52;
}

uint64_t sub_1C24FC514()
{
  return sub_1C254DE40();
}

uint64_t sub_1C24FC538()
{
  return sub_1C254DE30();
}

uint64_t ConceptListViewDataSourceProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  swift_release();

  return v0;
}

uint64_t ConceptListViewDataSourceProvider.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C24FC5E4()
{
  sub_1C2415E30(0, (unint64_t *)&qword_1EA2DEA38, (unint64_t *)&qword_1EA2DEA40);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255D0E0;
  *(void *)(v0 + 32) = sub_1C24FBC60();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = sub_1C254DE40();
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = sub_1C254DE30();
  *(void *)(v0 + 72) = v3;
  return v0;
}

uint64_t sub_1C24FC664@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 24;
  swift_beginAccess();
  return sub_1C21F4424(v3, a2);
}

uint64_t type metadata accessor for ConceptListViewController()
{
  uint64_t result = qword_1EA2E49E8;
  if (!qword_1EA2E49E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C24FC704()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C24FC744()
{
  return type metadata accessor for ConceptListViewController();
}

uint64_t type metadata accessor for ConceptListViewDataSourceProvider()
{
  return self;
}

uint64_t method lookup function for ConceptListViewDataSourceProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConceptListViewDataSourceProvider);
}

uint64_t dispatch thunk of ConceptListViewDataSourceProvider.store.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ConceptListViewDataSourceProvider.store.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ConceptListViewDataSourceProvider.store.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of ConceptListViewDataSourceProvider.__allocating_init(categoryPredicate:sourceProfile:store:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of ConceptListViewDataSourceProvider.selectedDataSources(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ConceptListViewDataSourceProvider.makePromotionDataSource()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ConceptListViewDataSourceProvider.makeArticleDataSource()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

void sub_1C24FC874(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C24FC8D8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C24FC920@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C254D750();
  *a1 = result;
  return result;
}

uint64_t sub_1C24FC94C(id *a1)
{
  id v1 = *a1;
  return sub_1C254D760();
}

uint64_t sub_1C24FC978@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C254D770();
  *a1 = result;
  return result;
}

uint64_t sub_1C24FC9A4(id *a1)
{
  id v1 = *a1;
  return sub_1C254D780();
}

id sub_1C24FC9D0(void *a1)
{
  id v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  uint64_t v2 = self;
  uint64_t v3 = &selRef_tertiarySystemGroupedBackgroundColor;
  if (v1 != (id)2) {
    uint64_t v3 = &selRef_secondarySystemFillColor;
  }
  id v4 = [v2 *v3];
  return v4;
}

id sub_1C24FCA3C(uint64_t a1)
{
  uint64_t v2 = sub_1C254E690();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = sub_1C254E650();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  if (v6)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_4:
    id v8 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
    aBlock[4] = sub_1C24FC9D0;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C23B0A44;
    aBlock[3] = &block_descriptor_73;
    uint64_t v9 = _Block_copy(aBlock);
    id v10 = objc_msgSend(v8, sel_initWithDynamicProvider_, v9);
    _Block_release(v9);
    swift_release();
    return v10;
  }
  char v7 = sub_1C254E640();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v7) {
    goto LABEL_4;
  }
  id v12 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
  return v12;
}

uint64_t block_destroy_helper_69()
{
  return swift_release();
}

uint64_t Calendar.endOfDay(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v1 = sub_1C254CCB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C254CAD0();
  uint64_t v5 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CC00();
  uint64_t v11 = *MEMORY[0x1E4F27BF0];
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v17(v4, v11, v1);
  sub_1C254CC60();
  unint64_t v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  v16(v4, v1);
  id v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  unint64_t v13 = v7;
  uint64_t v14 = v19;
  v12(v13, v19);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v14);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    v17(v4, *MEMORY[0x1E4F27C50], v1);
    sub_1C254CC60();
    v16(v4, v1);
    return ((uint64_t (*)(char *, uint64_t))v12)(v10, v14);
  }
  return result;
}

uint64_t Calendar.oneDay(after:)(uint64_t a1)
{
  return sub_1C24FCF04(a1, MEMORY[0x1E4F27BF0]);
}

uint64_t Calendar.oneSecond(before:)(uint64_t a1)
{
  return sub_1C24FCF04(a1, MEMORY[0x1E4F27C50]);
}

uint64_t sub_1C24FCF04(uint64_t a1, unsigned int *a2)
{
  uint64_t v3 = sub_1C254CCB0();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = MEMORY[0x1F4188790](v3);
  char v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v4 + 104))(v7, *a2, v3, v5);
  sub_1C254CC60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_1C24FD014@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = a4;
  sub_1C24FDE08();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C24FE090();
  uint64_t v24 = *(void *)(v10 - 8);
  uint64_t v25 = v10;
  *(void *)&double v11 = MEMORY[0x1F4188790](v10).n128_u64[0];
  unint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(a2, sel_gatewayVersions, v11);
  if (v14)
  {
    uint64_t v15 = v14;
    sub_1C23FD7C4();
    uint64_t v16 = sub_1C254F710();
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
  }
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = a3;
  uint64_t v29 = v16;
  MEMORY[0x1F4188790](v17);
  *(&v24 - 4) = (uint64_t)&v29;
  *(&v24 - 3) = (uint64_t)sub_1C24FE1D4;
  *(&v24 - 2) = v18;
  sub_1C24FDE88();
  sub_1C24FDFCC();
  id v19 = a1;
  id v20 = a2;
  id v21 = a3;
  sub_1C254EF80();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C254EE70();
  sub_1C24FE144(&qword_1EA2E4A30, (void (*)(uint64_t))sub_1C24FDE08);
  uint64_t v22 = v27;
  sub_1C254F060();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v22);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v28, v13, v25);
}

id sub_1C24FD324@<X0>(id *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  id v11 = *a1;
  *a5 = a2;
  a5[1] = a3;
  a5[2] = a4;
  a5[3] = v11;
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  return v11;
}

uint64_t sub_1C24FD380@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, char *a5@<X8>)
{
  uint64_t v58 = a2;
  long long v59 = a3;
  uint64_t v57 = a1;
  sub_1C24FE7BC();
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v62 = v7;
  MEMORY[0x1F4188790](v7);
  id v60 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v10 = MEMORY[0x1F4188790](v9).n128_u64[0];
  uint64_t v63 = (char *)&v50 - v11;
  id v12 = objc_msgSend(a4, sel_gatewayID, v10);
  uint64_t v13 = sub_1C254F470();
  uint64_t v55 = v14;
  uint64_t v56 = v13;

  id v15 = objc_msgSend(a4, sel_FHIRVersion);
  id v16 = objc_msgSend(v15, sel_stringRepresentation);

  uint64_t v17 = sub_1C254F470();
  uint64_t v19 = v18;

  id v64 = (id)v17;
  uint64_t v65 = v19;
  sub_1C254F5A0();
  id v20 = objc_msgSend(a4, sel_FHIRVersion);
  id v21 = objc_msgSend(v20, sel_FHIRRelease);

  sub_1C254F470();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v53 = v65;
  id v54 = v64;
  id v64 = objc_msgSend(a4, sel_minCompatibleAPIVersion);
  uint64_t v22 = sub_1C2550810();
  uint64_t v51 = v23;
  uint64_t v52 = v22;
  id v24 = objc_msgSend(a4, sel_gatewayBatchID);
  uint64_t v50 = sub_1C254F470();
  uint64_t v26 = v25;

  sub_1C254EE70();
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = v57;
  uint64_t v29 = v58;
  v27[2] = v57;
  v27[3] = v29;
  id v30 = v59;
  v27[4] = v59;
  v27[5] = a4;
  id v31 = v28;
  id v32 = v29;
  id v33 = v30;
  id v34 = a4;
  uint64_t v35 = v63;
  sub_1C254F100();
  id v36 = v60;
  uint64_t v37 = v61;
  id v38 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
  uint64_t v39 = v62;
  v38(v60, v35, v62);
  *(void *)a5 = 0x79617765746147;
  uint64_t v41 = v55;
  uint64_t v40 = v56;
  *((void *)a5 + 1) = 0xE700000000000000;
  *((void *)a5 + 2) = v40;
  *((void *)a5 + 3) = v41;
  *((void *)a5 + 4) = 1380534342;
  uint64_t v43 = v53;
  id v42 = v54;
  *((void *)a5 + 5) = 0xE400000000000000;
  *((void *)a5 + 6) = v42;
  *((void *)a5 + 7) = v43;
  *((void *)a5 + 8) = 1447117645;
  uint64_t v45 = v51;
  uint64_t v44 = v52;
  *((void *)a5 + 9) = 0xE400000000000000;
  *((void *)a5 + 10) = v44;
  *((void *)a5 + 11) = v45;
  *((void *)a5 + 12) = 0x4449206863746142;
  uint64_t v46 = v50;
  *((void *)a5 + 13) = 0xE800000000000000;
  *((void *)a5 + 14) = v46;
  *((void *)a5 + 15) = v26;
  sub_1C24FE73C();
  v38(&a5[*(int *)(v47 + 96)], v36, v39);
  char v48 = *(void (**)(char *, uint64_t))(v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v48(v63, v39);
  v48(v36, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C24FD7BC(void *a1, int a2, void *a3, id a4)
{
  id v7 = objc_msgSend(a4, sel_gatewayID);
  sub_1C254F470();

  id v8 = objc_msgSend(a4, sel_gatewayBatchID);
  sub_1C254F470();

  id v9 = objc_allocWithZone((Class)WDClinicalGatewayProxy);
  double v10 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v9, sel_initWithGatewayID_batchID_, v10, v11);

  if (qword_1EBB6D858 != -1) {
    swift_once();
  }
  id v13 = objc_allocWithZone((Class)WDClinicalOnboardingOAuthNavigationViewController);
  id v14 = v12;
  id v15 = objc_msgSend(v13, sel_initWithContext_onboardingOptions_sourceIdentifier_profile_existingAccount_, 7, 0, 0, a1, 0);
  objc_msgSend(v15, sel_setGatewayProxyToTry_, v14);
  id v16 = objc_msgSend(a1, sel_onboardingManager);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a3;
  v17[3] = v15;
  v17[4] = nullsub_1;
  v17[5] = 0;
  v21[4] = sub_1C238593C;
  v21[5] = v17;
  v21[0] = MEMORY[0x1E4F143A8];
  v21[1] = 1107296256;
  void v21[2] = sub_1C22F3AD0;
  v21[3] = &block_descriptor_74;
  uint64_t v18 = _Block_copy(v21);
  id v19 = a3;
  id v20 = v15;
  swift_release();
  objc_msgSend(v16, sel_registerInflightOnboardingViewController_completion_, v20, v18);
  _Block_release(v18);
}

uint64_t sub_1C24FDA34@<X0>(uint64_t a1@<X8>)
{
  sub_1C2218914();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254F010();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_1C254EF50();
  uint64_t v7 = sub_1C254EFA0();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  sub_1C22C6C58(v2, v4, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C254F010();
  uint64_t v16 = v15;
  LOBYTE(v2) = v17 & 1;
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v15;
  *(unsigned char *)(a1 + 64) = v17 & 1;
  *(void *)(a1 + 72) = v18;
  sub_1C22C6CAC(v7, v9, v13);
  swift_bridgeObjectRetain();
  sub_1C22C6CAC(v14, v16, v2);
  swift_bridgeObjectRetain();
  sub_1C22C6C58(v14, v16, v2);
  swift_bridgeObjectRelease();
  sub_1C22C6C58(v7, v9, v13);
  return swift_bridgeObjectRelease();
}

__n128 sub_1C24FDBB8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C254EE10();
  sub_1C24FDA34((uint64_t)&v11);
  char v3 = v12;
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  char v6 = v15;
  char v7 = v17;
  uint64_t v8 = v18;
  __n128 result = v11;
  long long v10 = v16;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  return result;
}

uint64_t sub_1C24FDC5C()
{
  return sub_1C254F170();
}

uint64_t sub_1C24FDD14@<X0>(uint64_t a1@<X8>)
{
  return sub_1C24FD014(*v1, v1[1], v1[2], a1);
}

uint64_t HKClinicalGatewayReference.id.getter()
{
  id v1 = objc_msgSend(v0, sel_gatewayID);
  uint64_t v2 = sub_1C254F470();

  return v2;
}

void sub_1C24FDD78(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_gatewayID);
  uint64_t v4 = sub_1C254F470();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

ValueMetadata *type metadata accessor for InternalGatewayVersionsView()
{
  return &type metadata for InternalGatewayVersionsView;
}

uint64_t sub_1C24FDDEC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C24FDE08()
{
  if (!qword_1EA2E49F8)
  {
    sub_1C24FDE88();
    sub_1C24FDFCC();
    unint64_t v0 = sub_1C254EF90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E49F8);
    }
  }
}

void sub_1C24FDE88()
{
  if (!qword_1EA2E4A00)
  {
    sub_1C24FEA7C(255, &qword_1EA2E4A08, (uint64_t (*)(uint64_t))sub_1C23FD7C4, MEMORY[0x1E4FBB320]);
    sub_1C24FDF44();
    unint64_t v0 = sub_1C254F160();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4A00);
    }
  }
}

unint64_t sub_1C24FDF44()
{
  unint64_t result = qword_1EA2E4A10;
  if (!qword_1EA2E4A10)
  {
    sub_1C24FEA7C(255, &qword_1EA2E4A08, (uint64_t (*)(uint64_t))sub_1C23FD7C4, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4A10);
  }
  return result;
}

unint64_t sub_1C24FDFCC()
{
  unint64_t result = qword_1EA2E4A18;
  if (!qword_1EA2E4A18)
  {
    sub_1C24FDE88();
    sub_1C24FE03C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4A18);
  }
  return result;
}

unint64_t sub_1C24FE03C()
{
  unint64_t result = qword_1EA2E4A20;
  if (!qword_1EA2E4A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4A20);
  }
  return result;
}

void sub_1C24FE090()
{
  if (!qword_1EA2E4A28)
  {
    sub_1C24FDE08();
    sub_1C24FE144(&qword_1EA2E4A30, (void (*)(uint64_t))sub_1C24FDE08);
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_1EA2E4A28);
    }
  }
}

uint64_t sub_1C24FE144(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C24FE18C()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

id sub_1C24FE1D4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_1C24FD324(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1C24FE1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  sub_1C24FEA7C(0, &qword_1EA2E4A08, (uint64_t (*)(uint64_t))sub_1C23FD7C4, MEMORY[0x1E4FBB320]);
  sub_1C24FDF44();
  sub_1C24FE03C();
  sub_1C24FE144(&qword_1EA2E4A38, (void (*)(uint64_t))sub_1C23FD7C4);
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1C254F150();
}

uint64_t sub_1C24FE324()
{
  return sub_1C24FE1E0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C24FE330()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

double sub_1C24FE368@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  void (*v4)(_OWORD *__return_ptr, uint64_t *);
  double result;
  long long v6;
  _OWORD v7[2];
  uint64_t v8;

  uint64_t v4 = *(void (**)(_OWORD *__return_ptr, uint64_t *))(v2 + 16);
  uint64_t v8 = *a1;
  v4(v7, &v8);
  uint64_t result = *(double *)v7;
  uint64_t v6 = v7[1];
  *a2 = v7[0];
  a2[1] = v6;
  return result;
}

void destroy for InternalGatewayVersionsView.GatewayVersionCell(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for InternalGatewayVersionsView.GatewayVersionCell(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  id v10 = v6;
  return a1;
}

uint64_t assignWithCopy for InternalGatewayVersionsView.GatewayVersionCell(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 16);
  __n128 v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  uint64_t v13 = *(void **)(a2 + 24);
  uint64_t v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  return a1;
}

uint64_t assignWithTake for InternalGatewayVersionsView.GatewayVersionCell(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for InternalGatewayVersionsView.GatewayVersionCell()
{
  return &type metadata for InternalGatewayVersionsView.GatewayVersionCell;
}

void *initializeBufferWithCopyOfBuffer for InternalGatewayVersionsInfo(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

void destroy for InternalGatewayVersionsInfo(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t _s15HealthRecordsUI27InternalGatewayVersionsInfoVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 16);
  __n128 v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  return a1;
}

uint64_t assignWithTake for InternalGatewayVersionsInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for InternalGatewayVersionsInfo()
{
  return &type metadata for InternalGatewayVersionsInfo;
}

uint64_t sub_1C24FE68C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C24FE714()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C24FE730@<X0>(char *a1@<X8>)
{
  return sub_1C24FD380(v1[2], v1[3], v1[4], v1[5], a1);
}

void sub_1C24FE73C()
{
  if (!qword_1EA2E4A48)
  {
    sub_1C24FE7BC();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EA2E4A48);
    }
  }
}

void sub_1C24FE7BC()
{
  if (!qword_1EA2E4A50)
  {
    unint64_t v0 = sub_1C254F110();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4A50);
    }
  }
}

uint64_t sub_1C24FE81C()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C24FE86C()
{
  sub_1C24FD7BC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(id *)(v0 + 40));
}

uint64_t sub_1C24FE878()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t block_destroy_helper_70()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for InternalGatewayVersionsView.GatewayVersionCell.LeftRightView()
{
  return &type metadata for InternalGatewayVersionsView.GatewayVersionCell.LeftRightView;
}

unint64_t sub_1C24FE8E4()
{
  unint64_t result = qword_1EA2E4A60;
  if (!qword_1EA2E4A60)
  {
    sub_1C24FE984();
    sub_1C24FEAE0(&qword_1EA2E4A58, &qword_1EA2E4A40, (uint64_t (*)(uint64_t))sub_1C24FE73C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4A60);
  }
  return result;
}

void sub_1C24FE984()
{
  if (!qword_1EA2E4A68)
  {
    sub_1C24FEA7C(255, &qword_1EA2E4A40, (uint64_t (*)(uint64_t))sub_1C24FE73C, MEMORY[0x1E4F3F108]);
    unint64_t v0 = sub_1C254F190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4A68);
    }
  }
}

uint64_t sub_1C24FEA18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C24FEA34()
{
  return sub_1C24FE144(&qword_1EA2E4A70, (void (*)(uint64_t))sub_1C247A530);
}

void sub_1C24FEA7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C24FEAE0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C24FEA7C(255, a2, a3, MEMORY[0x1E4F3F108]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Array<A>.newlineJoined.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    uint64_t v3 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v8 = *(v2 - 1);
      uint64_t v7 = *v2;
      uint64_t v9 = HIBYTE(*v2) & 0xF;
      if ((*v2 & 0x2000000000000000) == 0) {
        uint64_t v9 = v8 & 0xFFFFFFFFFFFFLL;
      }
      if (v9)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C2274764(0, *(void *)(v3 + 16) + 1, 1);
        }
        unint64_t v5 = *(void *)(v3 + 16);
        unint64_t v4 = *(void *)(v3 + 24);
        if (v5 >= v4 >> 1) {
          sub_1C2274764(v4 > 1, v5 + 1, 1);
        }
        *(void *)(v3 + 16) = v5 + 1;
        uint64_t v6 = v3 + 16 * v5;
        *(void *)(v6 + 32) = v8;
        *(void *)(v6 + 40) = v7;
      }
      v2 += 2;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  sub_1C23FD724();
  sub_1C226BF44();
  uint64_t v10 = sub_1C254F390();
  swift_release();
  return v10;
}

id HRNewlineJoinedStrings()
{
  uint64_t v0 = sub_1C254F710();
  Array<A>.newlineJoined.getter(v0);
  swift_bridgeObjectRelease();
  uint64_t v1 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  return v1;
}

id sub_1C24FED1C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___store;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___store);
  if (!v2)
  {
    uint64_t v4 = v0;
    uint64_t v5 = v0 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
    swift_beginAccess();
    sub_1C225EB54(v5, (uint64_t)v12, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
    if (v13)
    {
      sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
      sub_1C21FFE74(0, &qword_1EA2DF318);
      if (swift_dynamicCast())
      {
        uint64_t v6 = *((void *)&v15 + 1);
        if (*((void *)&v15 + 1))
        {
          uint64_t v7 = v16;
          __swift_project_boxed_opaque_existential_1Tm(&v14, *((uint64_t *)&v15 + 1));
          id v8 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
LABEL_10:
          uint64_t v9 = *(void **)(v4 + v1);
          *(void *)(v4 + v1) = v8;
          id v3 = v8;

          uint64_t v2 = 0;
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v16 = 0;
        long long v14 = 0u;
        long long v15 = 0u;
      }
    }
    else
    {
      sub_1C225F904((uint64_t)v12, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
      long long v14 = 0u;
      long long v15 = 0u;
      uint64_t v16 = 0;
    }
    sub_1C225F904((uint64_t)&v14, (uint64_t)&unk_1EA2DF310, (uint64_t)&qword_1EA2DF318, (uint64_t)&protocol descriptor for UDCItem, (uint64_t (*)(void))sub_1C225EBC8);
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
    goto LABEL_10;
  }
  id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___store);
LABEL_11:
  id v10 = v2;
  return v3;
}

id sub_1C24FEF24()
{
  uint64_t v1 = v0;
  sub_1C250415C(0, &qword_1EA2DF2E8, MEMORY[0x1E4FB1290]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v15 - v3;
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___button;
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___button];
  if (v6)
  {
    id v7 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___button];
  }
  else
  {
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14D0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    sub_1C21AB51C(0, &qword_1EA2DF300);
    *(void *)(swift_allocObject() + 16) = v0;
    v0;
    uint64_t v9 = (void *)sub_1C254FFB0();
    objc_msgSend(v8, sel_addAction_forControlEvents_, v9, 64);

    sub_1C24FF168();
    static UIButton.Configuration.pinnedLabsConfiguration(pinned:)();
    uint64_t v10 = sub_1C25500A0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 0, 1, v10);
    sub_1C25500C0();
    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    LODWORD(v11) = 1148846080;
    objc_msgSend(v8, sel_setContentHuggingPriority_forAxis_, 0, v11);
    objc_msgSend(v8, sel_setAlpha_, 0.0);
    id v12 = *(void **)&v1[v5];
    *(void *)&v1[v5] = v8;
    id v7 = v8;

    uint64_t v6 = 0;
  }
  id v13 = v6;
  return v7;
}

uint64_t sub_1C24FF168()
{
  uint64_t v1 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (id *)((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = v0 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  sub_1C225EB54(v4, (uint64_t)v14, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (!v14[3])
  {
    sub_1C225F904((uint64_t)v14, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
    goto LABEL_7;
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for UDCRecentItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    char v10 = 0;
    return v10 & 1;
  }
  sub_1C225F054(v13 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, (uint64_t)v3);
  swift_release();
  id v5 = v3[1];
  sub_1C225F87C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
  if (qword_1EBB6EF30 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EBB6FB90;
  id v7 = sub_1C24FED1C();
  id v8 = objc_msgSend(v7, sel_profileIdentifier);

  uint64_t v13 = *(void *)(v6 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v9);
  *(&v12 - 2) = v6;
  *(&v12 - 1) = (uint64_t)v8;
  sub_1C254CEE0();
  sub_1C254E460();
  sub_1C21A89AC();
  swift_retain();
  sub_1C254E1D0();

  swift_release();
  char v10 = sub_1C254E430();

  swift_release();
  return v10 & 1;
}

char *sub_1C24FF434(double a1, double a2, double a3, double a4)
{
  sub_1C250415C(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v9 - 8);
  double v11 = (char *)&v33 - v10;
  uint64_t v12 = sub_1C254E690();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___store] = 0;
  uint64_t v16 = OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_titleView;
  id v17 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemTitleView());
  uint64_t v18 = v4;
  *(void *)&v4[v16] = objc_msgSend(v17, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v19 = OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView;
  *(void *)&v18[v19] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v18[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___button] = 0;
  *(void *)&v18[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_activeConstraints] = MEMORY[0x1E4FBC860];
  v18[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_editMode] = 0;
  id v20 = &v18[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item];
  *((void *)v20 + 4) = 0;
  *(_OWORD *)id v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  id v21 = &v18[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_sectionContext];
  uint64_t v22 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);

  uint64_t v23 = (objc_class *)type metadata accessor for RecentUDCCell();
  v33.receiver = v18;
  v33.super_class = v23;
  id v24 = (char *)objc_msgSendSuper2(&v33, sel_initWithFrame_, a1, a2, a3, a4);
  id v25 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v25, sel_addSubview_, *(void *)&v24[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_titleView]);

  id v26 = objc_msgSend(v24, sel_contentView);
  objc_msgSend(v26, sel_addSubview_, *(void *)&v24[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView]);

  id v27 = objc_msgSend(v24, sel_contentView);
  id v28 = sub_1C24FEF24();
  objc_msgSend(v27, sel_addSubview_, v28);

  sub_1C254CDB0();
  id v29 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C254FE70();

  id v30 = objc_msgSend(self, sel_currentTraitCollection);
  sub_1C254E660();
  sub_1C254E6D0();
  sub_1C24FCA3C((uint64_t)v15);
  sub_1C254E6C0();
  uint64_t v31 = sub_1C254E710();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v11, 0, 1, v31);
  MEMORY[0x1C8758250](v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1C250175C();
  sub_1C24FFE04();

  return v24;
}

id sub_1C24FF850(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___store] = 0;
  uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_titleView;
  id v4 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemTitleView());
  id v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView;
  *(void *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemValueView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell____lazy_storage___button] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_activeConstraints] = MEMORY[0x1E4FBC860];
  v5[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_editMode] = 0;
  id v7 = &v5[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item];
  *((void *)v7 + 4) = 0;
  *(_OWORD *)id v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  id v8 = &v5[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_sectionContext];
  uint64_t v9 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for RecentUDCCell();
  id v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, a1);

  return v10;
}

void sub_1C24FF9F0()
{
  uint64_t v1 = v0;
  sub_1C250415C(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v17 - v3;
  uint64_t v5 = sub_1C254E690();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (objc_class *)type metadata accessor for RecentUDCCell();
  v17.receiver = v0;
  v17.super_class = v9;
  objc_msgSendSuper2(&v17, sel_awakeFromNib);
  id v10 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v10, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_titleView]);

  id v11 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v11, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView]);

  id v12 = objc_msgSend(v1, sel_contentView);
  id v13 = sub_1C24FEF24();
  objc_msgSend(v12, sel_addSubview_, v13);

  sub_1C254CDB0();
  id v14 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C254FE70();

  id v15 = objc_msgSend(self, sel_currentTraitCollection);
  sub_1C254E660();
  sub_1C254E6D0();
  sub_1C24FCA3C((uint64_t)v8);
  sub_1C254E6C0();
  uint64_t v16 = sub_1C254E710();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 0, 1, v16);
  MEMORY[0x1C8758250](v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1C250175C();
  sub_1C24FFE04();
}

void sub_1C24FFCF0(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C875A200](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_1C24FFE04();
    id v4 = objc_msgSend(v3, sel_contentView);
    objc_msgSend(v4, sel_layoutIfNeeded);
  }
}

void sub_1C24FFE04()
{
  uint64_t v1 = v0;
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_editMode);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_titleView);
  id v4 = (unsigned char *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron);
  if (v2 == 1)
  {
    swift_beginAccess();
    unsigned char *v4 = 1;
    sub_1C22399E4();
    uint64_t v5 = (unsigned char *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode);
    swift_beginAccess();
    unsigned char *v5 = 1;
    id v6 = sub_1C22394D0();
    double v7 = 0.0;
    if ((*v5 & 1) == 0)
    {
      if (qword_1EA2DD4D8 != -1) {
        swift_once();
      }
      double v7 = -*(double *)&qword_1EA3037F8;
    }
    objc_msgSend(v6, sel_setConstant_, v7);

    id v8 = (unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView)
                 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode);
    swift_beginAccess();
    unsigned char *v8 = 1;
    sub_1C23168B8();
    id v9 = sub_1C24FEF24();
    objc_msgSend(v9, sel_setAlpha_, 1.0);
  }
  else
  {
    swift_beginAccess();
    unsigned char *v4 = 0;
    sub_1C22399E4();
    id v10 = (unsigned char *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode);
    swift_beginAccess();
    unsigned char *v10 = 0;
    id v11 = sub_1C22394D0();
    double v12 = 0.0;
    if ((*v10 & 1) == 0)
    {
      if (qword_1EA2DD4D8 != -1) {
        swift_once();
      }
      double v12 = -*(double *)&qword_1EA3037F8;
    }
    objc_msgSend(v11, sel_setConstant_, v12);

    id v13 = (unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView)
                  + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode);
    swift_beginAccess();
    *id v13 = 0;
    sub_1C23168B8();
    id v9 = sub_1C24FEF24();
    objc_msgSend(v9, sel_setAlpha_, 0.0);
  }

  sub_1C250175C();
}

void sub_1C250006C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void (***)(char *, uint64_t))(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C250415C(0, &qword_1EA2DF2E8, MEMORY[0x1E4FB1290]);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v92 - v7;
  uint64_t v9 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item];
  swift_beginAccess();
  sub_1C225EB54(v12, (uint64_t)v126, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (!v127)
  {
    sub_1C225F904((uint64_t)v126, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
LABEL_8:
    sub_1C254E510();
    uint64_t v23 = v1;
    id v24 = sub_1C254E550();
    os_log_type_t v25 = sub_1C254FA20();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v125 = v2;
      id v26 = (uint8_t *)swift_slowAlloc();
      v123 = (char *)swift_slowAlloc();
      uint64_t v138 = v123;
      *(_DWORD *)id v26 = 136446210;
      id v122 = v26 + 4;
      uint64_t v124 = v3;
      sub_1C225EB54(v12, (uint64_t)v126, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
      sub_1C225EBC8(0, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
      uint64_t v27 = sub_1C254F510();
      v126[0] = sub_1C21AD354(v27, v28, (uint64_t *)&v138);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v24, v25, "Incorrect view model for UDCRecentCell: %{public}s", v26, 0xCu);
      id v29 = v123;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v29, -1, -1);
      MEMORY[0x1C875A0B0](v26, -1, -1);

      v124[1](v5, v125);
    }
    else
    {

      v3[1](v5, v2);
    }
    return;
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for UDCRecentItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v107 = v8;
  id v109 = v138;
  id v13 = &v138[OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData];
  *id v11 = v138[OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData];
  swift_storeEnumTagMultiPayload();
  if (qword_1EBB6EF30 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1EBB6FB90;
  id v15 = sub_1C24FED1C();
  uint64_t v138 = *(char **)(v14 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v15);
  sub_1C254CEE0();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
  sub_1C21A89AC();
  swift_retain();
  sub_1C254E1D0();

  swift_release();
  uint64_t v16 = (void *)v126[0];
  objc_super v17 = (int *)type metadata accessor for UserDomainConceptViewData();
  uint64_t v18 = (uint64_t)&v13[v17[9]];
  id v19 = v16;
  id v20 = (void *)sub_1C2504274(v18, v19);
  uint64_t v22 = v21;
  id v108 = v19;

  if (v22)
  {
    id v119 = v20;
  }
  else
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v30 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    id v119 = (id)sub_1C254C730();
    uint64_t v22 = v31;
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = *((void *)v13 + 4);
  uint64_t v118 = (char *)*((void *)v13 + 3);
  uint64_t v121 = v32;
  swift_bridgeObjectRetain();
  BrowseCategory.systemImageName.getter();
  if (v33
    && (id v34 = (void *)sub_1C254F430(),
        swift_bridgeObjectRelease(),
        id v35 = objc_msgSend(self, sel_systemImageNamed_, v34),
        v34,
        v35))
  {
    v123 = (char *)objc_msgSend(v35, sel_imageWithRenderingMode_, 1);
  }
  else
  {
    v123 = 0;
  }
  id v122 = BrowseCategory.tintColorForTemplateImage.getter();
  id v36 = *(void **)&v13[v17[10]];
  if (!v36) {
    goto LABEL_22;
  }
  id v37 = v36;
  if (!objc_msgSend(v37, sel_hasRenderableContent))
  {

LABEL_22:
    id v38 = 0;
    goto LABEL_23;
  }
  id v38 = objc_msgSend(self, sel_referenceRangeViewDataFromInspectableValueInRange_, v37);

LABEL_23:
  uint64_t v39 = v17[12];
  uint64_t v40 = &v13[v17[11]];
  uint64_t v41 = *((void *)v40 + 1);
  uint64_t v115 = *(void *)v40;
  uint64_t v43 = *(void *)&v13[v39];
  uint64_t v42 = *(void *)&v13[v39 + 8];
  LODWORD(v120) = v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_editMode];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LODWORD(v114) = sub_1C24FF168();
  id v116 = v38;
  id v44 = v38;
  swift_bridgeObjectRetain();
  uint64_t v45 = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v46 = v123;
  id v47 = v122;
  uint64_t v124 = (void (**)(char *, uint64_t))v1;
  uint64_t v110 = v11;
  if (v42)
  {
    uint64_t v48 = sub_1C254F530();
    uint64_t v125 = v49;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v125 = 0;
    uint64_t v48 = v43;
  }
  uint64_t v105 = v48;
  uint64_t v50 = v125;
  swift_bridgeObjectRetain();
  uint64_t v51 = v121;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v52 = v46;
  id v53 = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  uint64_t v54 = *(uint64_t *)((char *)v124 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_titleView);
  uint64_t v127 = &type metadata for UserDomainConceptFeedItemViewData;
  v128 = &protocol witness table for UserDomainConceptFeedItemViewData;
  uint64_t v55 = swift_allocObject();
  v126[0] = v55;
  *(void *)(v55 + 16) = v118;
  *(void *)(v55 + 24) = v51;
  *(void *)(v55 + 32) = v119;
  *(void *)(v55 + 40) = v22;
  id v56 = v122;
  *(void *)(v55 + 48) = v123;
  *(void *)(v55 + 56) = v56;
  uint64_t v57 = v115;
  *(void *)(v55 + 64) = v116;
  *(void *)(v55 + 72) = v57;
  *(void *)(v55 + 80) = v45;
  *(void *)(v55 + 88) = v48;
  uint64_t v117 = v45;
  *(void *)(v55 + 96) = v50;
  *(void *)(v55 + 104) = 0;
  uint64_t v125 = v50;
  *(unsigned char *)(v55 + 112) = 1;
  int v58 = (int)v120;
  *(unsigned char *)(v55 + 113) = (_BYTE)v120;
  BOOL v85 = (v114 & 1) == 0;
  *(unsigned char *)(v55 + 114) = v114 & 1;
  *(_WORD *)(v55 + 115) = 256;
  uint64_t v59 = v54 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
  uint64_t v60 = 0x10000;
  if (v85) {
    uint64_t v60 = 0;
  }
  uint64_t v114 = v60;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v102 = v52;
  id v103 = v53;
  id v104 = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C225F0B8((uint64_t)v126, v59, (unint64_t *)&qword_1EA2DEE88, &qword_1EA2DEE90);
  swift_endAccess();
  sub_1C223A4E8();
  sub_1C225F904((uint64_t)v126, (uint64_t)&qword_1EA2DEE88, (uint64_t)&qword_1EA2DEE90, (uint64_t)&protocol descriptor for ConceptTitleViewContentProviding, (uint64_t (*)(void))sub_1C225EBC8);
  uint64_t v61 = *(uint64_t *)((char *)v124 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView);
  uint64_t v106 = v61;
  int v62 = 1;
  if (v58) {
    int v62 = 257;
  }
  int v63 = v62 | v114;
  uint64_t v64 = v61 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  swift_beginAccess();
  uint64_t v113 = *(void *)v64;
  uint64_t v112 = *(void *)(v64 + 8);
  uint64_t v99 = *(void *)(v64 + 16);
  uint64_t v65 = v51;
  uint64_t v98 = *(void *)(v64 + 24);
  uint64_t v97 = *(void **)(v64 + 32);
  v96 = *(void **)(v64 + 40);
  v120 = *(void **)(v64 + 48);
  uint64_t v66 = *(void *)(v64 + 64);
  uint64_t v114 = *(void *)(v64 + 56);
  uint64_t v67 = *(void *)(v64 + 80);
  uint64_t v111 = *(void *)(v64 + 72);
  uint64_t v68 = *(void *)(v64 + 88);
  uint64_t v101 = *(unsigned int *)(v64 + 96);
  uint64_t v100 = *(unsigned __int8 *)(v64 + 100);
  uint64_t v69 = v101 | (v100 << 32);
  *(void *)uint64_t v64 = v118;
  *(void *)(v64 + 8) = v65;
  *(void *)(v64 + 16) = v119;
  *(void *)(v64 + 24) = v22;
  id v70 = v122;
  *(void *)(v64 + 32) = v123;
  *(void *)(v64 + 40) = v70;
  uint64_t v71 = v115;
  *(void *)(v64 + 48) = v116;
  *(void *)(v64 + 56) = v71;
  uint64_t v72 = v105;
  *(void *)(v64 + 64) = v117;
  *(void *)(v64 + 72) = v72;
  *(void *)(v64 + 80) = v125;
  *(void *)(v64 + 88) = 0;
  *(_DWORD *)(v64 + 96) = v63;
  *(unsigned char *)(v64 + 100) = 1;
  swift_bridgeObjectRetain();
  v123 = v22;
  swift_bridgeObjectRetain();
  uint64_t v118 = v102;
  id v122 = v103;
  id v119 = v104;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v95 = v69;
  uint64_t v94 = v68;
  uint64_t v93 = v67;
  uint64_t v73 = v113;
  uint64_t v74 = v112;
  uint64_t v75 = v99;
  uint64_t v76 = v98;
  unint64_t v77 = v97;
  v78 = v96;
  sub_1C22AC0E8(v113, v112, v99, v98, v97, v96, v120);
  uint64_t v79 = v120;
  uint64_t v80 = v114;
  sub_1C22AC064(v73, v74, v75, v76, v77, v78, v120);
  v126[0] = v73;
  v126[1] = v74;
  v126[2] = v75;
  uint64_t v127 = (ValueMetadata *)v76;
  v128 = (_UNKNOWN **)v77;
  uint64_t v129 = v78;
  uint64_t v130 = v79;
  uint64_t v131 = v80;
  uint64_t v132 = v66;
  uint64_t v133 = v111;
  uint64_t v134 = v93;
  uint64_t v135 = v94;
  char v137 = v100;
  int v136 = v101;
  sub_1C2315E54((uint64_t)v126);
  sub_1C22AC064(v113, v112, v75, v76, v77, v78, v120);
  id v81 = sub_1C24FEF24();
  sub_1C24FF168();
  uint64_t v82 = v107;
  static UIButton.Configuration.pinnedLabsConfiguration(pinned:)();
  uint64_t v83 = sub_1C25500A0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v82, 0, 1, v83);
  sub_1C25500C0();

  char v84 = sub_1C24FF168();
  BOOL v85 = (v84 & 1) == 0;
  if (v84) {
    uint64_t v86 = 0x7475426E69706E55;
  }
  else {
    uint64_t v86 = 0x6F747475426E6950;
  }
  if (v85) {
    uint64_t v87 = 0xE90000000000006ELL;
  }
  else {
    uint64_t v87 = 0xEB000000006E6F74;
  }
  sub_1C25013F4(v86, v87);
  uint64_t v89 = v88;
  swift_bridgeObjectRelease();
  if (v89)
  {
    id v90 = sub_1C24FEF24();
    long long v91 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v90, sel_setAccessibilityIdentifier_, v91);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

    sub_1C225F87C((uint64_t)v110, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  }
  else
  {
    sub_1C225F87C((uint64_t)v110, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C2501050()
{
  uint64_t v1 = v0;
  uint64_t v22 = sub_1C254CD90();
  uint64_t v2 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void (*)(uint64_t))MEMORY[0x1E4F66300];
  sub_1C250415C(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v21 - v7;
  uint64_t v9 = sub_1C254D370();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_sectionContext;
  swift_beginAccess();
  sub_1C25044EC(v13, (uint64_t)v8, &qword_1EA2DF2E0, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_1C225F194((uint64_t)v8);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_1C254D360();
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_1C25503A0();
  uint64_t v15 = sub_1C254F470();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v24 = v15;
  unint64_t v25 = v17;
  sub_1C254F5A0();
  uint64_t v23 = sub_1C254CD80();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v23 = sub_1C254CD70();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v18 = v24;
  uint64_t v19 = v25;
  id v20 = (void *)sub_1C254F430();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v20);

  swift_bridgeObjectRetain();
  sub_1C223A178(v18, v19);
  sub_1C2316BE4(v18, v19);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1C25013F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v2 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  sub_1C225EB54(v8, (uint64_t)v17, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (!v18)
  {
    sub_1C225F904((uint64_t)v17, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
    return 0;
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for UDCRecentItem();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  sub_1C225F054(v16[1] + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, (uint64_t)v7);
  swift_release();
  uint64_t v10 = *((void *)v7 + 3);
  uint64_t v9 = *((void *)v7 + 4);
  swift_bridgeObjectRetain();
  sub_1C225F87C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
  sub_1C225F830(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255D0E0;
  strcpy((char *)(v11 + 32), "LabLatestView");
  *(_WORD *)(v11 + 46) = -4864;
  *(void *)(v11 + 48) = a1;
  *(void *)(v11 + 56) = a2;
  *(void *)(v11 + 64) = v10;
  *(void *)(v11 + 72) = v9;
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v13 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v13) {
    return 0;
  }
  uint64_t v14 = sub_1C254F470();

  return v14;
}

void sub_1C250175C()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  uint64_t v3 = (uint64_t *)&v0[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_activeConstraints];
  swift_beginAccess();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v80 = v2;
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  sub_1C225F830(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C256EA60;
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_titleView];
  id v7 = objc_msgSend(v6, sel_leadingAnchor);
  id v8 = objc_msgSend(v1, sel_contentView);
  id v9 = objc_msgSend(v8, (SEL)&selRef_minusOrderedSet_ + 2);

  id v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);
  *(void *)(v5 + 32) = v10;
  id v11 = objc_msgSend(v6, sel_topAnchor);
  id v12 = objc_msgSend(v1, sel_contentView);
  id v13 = objc_msgSend(v12, sel_topAnchor);

  id v14 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v13);
  *(void *)(v5 + 40) = v14;
  uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_valueView];
  id v16 = objc_msgSend(v15, sel_leadingAnchor);
  id v17 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v18 = objc_msgSend(v17, sel_leadingAnchor);

  id v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  *(void *)(v5 + 48) = v19;
  id v20 = objc_msgSend(v15, sel_trailingAnchor);
  id v21 = sub_1C24FEF24();
  id v22 = objc_msgSend(v21, (SEL)&selRef_minusOrderedSet_ + 2);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_constant_, v22, -7.0);
  *(void *)(v5 + 56) = v23;
  id v24 = objc_msgSend(v15, sel_topAnchor);
  id v25 = objc_msgSend(v6, sel_bottomAnchor);
  id v26 = objc_msgSend(v24, sel_constraintGreaterThanOrEqualToAnchor_constant_, v25, 7.0);

  LODWORD(v27) = 1140129792;
  objc_msgSend(v26, sel_setPriority_, v27);
  *(void *)(v5 + 64) = v26;
  id v28 = objc_msgSend(v15, sel_bottomAnchor);
  id v29 = objc_msgSend(v1, sel_contentView);
  id v30 = objc_msgSend(v29, sel_bottomAnchor);

  id v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v30);
  *(void *)(v5 + 72) = v31;
  id v32 = sub_1C24FEF24();
  id v33 = objc_msgSend(v32, sel_centerYAnchor);

  id v34 = objc_msgSend(v1, sel_contentView);
  id v35 = objc_msgSend(v34, sel_centerYAnchor);

  id v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);
  *(void *)(v5 + 80) = v36;
  id v37 = sub_1C24FEF24();
  id v38 = objc_msgSend(v37, sel_heightAnchor);

  id v39 = sub_1C24FEF24();
  id v40 = objc_msgSend(v39, sel_widthAnchor);

  id v41 = objc_msgSend(v38, sel_constraintEqualToAnchor_multiplier_, v40, 1.0);
  *(void *)(v5 + 88) = v41;
  id v42 = sub_1C24FEF24();
  id v43 = objc_msgSend(v42, sel_widthAnchor);

  id v44 = objc_msgSend(v1, sel_traitCollection);
  id v45 = objc_msgSend(v44, sel_preferredContentSizeCategory);
  LOBYTE(v26) = sub_1C254FD50();

  double v46 = 32.0;
  if (v26) {
    double v46 = 64.0;
  }
  id v47 = objc_msgSend(v43, sel_constraintEqualToConstant_, v46);

  *(void *)(v5 + 96) = v47;
  id v48 = objc_msgSend(v1, sel_contentView);
  id v49 = objc_msgSend(v48, sel_heightAnchor);

  id v50 = objc_msgSend(v49, sel_constraintGreaterThanOrEqualToConstant_, 115.0);
  LODWORD(v51) = 1148846080;
  objc_msgSend(v50, sel_setPriority_, v51);
  *(void *)(v5 + 104) = v50;
  id v52 = objc_msgSend(v1, sel_contentView);
  id v53 = objc_msgSend(v52, sel_heightAnchor);

  id v54 = objc_msgSend(v53, sel_constraintEqualToConstant_, 115.0);
  uint64_t v55 = (SEL *)&selRef_setUnsupportedSearchResults_;
  LODWORD(v56) = 1132068864;
  objc_msgSend(v54, sel_setPriority_, v56);
  *(void *)(v5 + 112) = v54;
  sub_1C254F730();
  *uint64_t v3 = v5;
  swift_bridgeObjectRelease();
  int v57 = v1[OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_editMode];
  id v58 = objc_msgSend(v6, sel_trailingAnchor);
  id v59 = sub_1C24FEF24();
  unint64_t v60 = (unint64_t)objc_msgSend(v59, sel_leadingAnchor);

  uint64_t v61 = sel_constraintEqualToAnchor_constant_;
  if (v57 == 1)
  {
    id v62 = objc_msgSend(v58, sel_constraintEqualToAnchor_constant_, v60, -7.0);

    id v63 = sub_1C24FEF24();
    id v64 = objc_msgSend(v63, sel_trailingAnchor);

    id v65 = objc_msgSend(v1, sel_contentView);
    uint64_t v55 = (SEL *)objc_msgSend(v65, sel_trailingAnchor);

    id v58 = objc_msgSend(v64, sel_constraintEqualToAnchor_constant_, v55, -16.0);
    swift_beginAccess();
    unint64_t v60 = *v3;
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v1 = (char *)sub_1C2550620();
      swift_bridgeObjectRelease();
      uint64_t v66 = (uint64_t)(v1 + 2);
      if (!__OFADD__(v1, 2)) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v1 = *(char **)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v66 = (uint64_t)(v1 + 2);
      if (!__OFADD__(v1, 2)) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  id v62 = objc_msgSend(v58, v61, v60, 7.0);

  id v67 = sub_1C24FEF24();
  id v68 = [v67 v55[150]];

  id v69 = objc_msgSend(v1, sel_contentView);
  id v70 = [v69 v55[150]];

  id v71 = objc_msgSend(v1, sel_traitCollection);
  id v72 = objc_msgSend(v71, sel_preferredContentSizeCategory);
  char v73 = sub_1C254FD50();

  double v74 = 56.0;
  if ((v73 & 1) == 0) {
    double v74 = 24.0;
  }
  id v58 = objc_msgSend(v68, sel_constraintEqualToAnchor_constant_, v70, v74);

  swift_beginAccess();
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_1C2550620();
    swift_bridgeObjectRelease();
    uint64_t v66 = v79 + 2;
    if (!__OFADD__(v79, 2)) {
      goto LABEL_12;
    }
LABEL_22:
    __break(1u);
    return;
  }
  uint64_t v75 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v66 = v75 + 2;
  if (__OFADD__(v75, 2)) {
    goto LABEL_22;
  }
LABEL_12:
  sub_1C25041B4(v66, 1);
  sub_1C254F730();
  id v76 = v62;
  MEMORY[0x1C8757C00]();
  if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v77 = v58;
  MEMORY[0x1C8757C00]();
  if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  swift_endAccess();

  swift_bridgeObjectRetain();
  v78 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v80, sel_activateConstraints_, v78);
}

uint64_t sub_1C25021D8(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (id *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = v2 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  sub_1C225EB54(v8, (uint64_t)v28, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (!v29) {
    return sub_1C225F904((uint64_t)v28, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for UDCRecentItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    sub_1C225F054(v27 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, (uint64_t)v7);
    swift_release();
    id v10 = v7[1];
    sub_1C225F87C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
    if (qword_1EBB6EF30 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_1EBB6FB90;
    id v12 = sub_1C24FED1C();
    uint64_t v27 = *(void *)(v11 + OBJC_IVAR___HRProfileManager_lock);
    MEMORY[0x1F4188790](v12);
    *(&v26 - 2) = v13;
    *(&v26 - 1) = v11;
    sub_1C254CEE0();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
    sub_1C21A89AC();
    swift_retain();
    sub_1C254E1D0();

    swift_release();
    id v14 = (void *)v28[0];
    if (qword_1EBB6D858 != -1) {
      swift_once();
    }
    id v15 = objc_allocWithZone((Class)type metadata accessor for UserDomainConceptDetailViewController());
    id v16 = v10;
    id v17 = v14;
    id v18 = sub_1C23D294C(v16, v17);

    sub_1C225EB54(a1, (uint64_t)v28, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225F830);
    uint64_t v19 = v29;
    if (v29)
    {
      id v20 = __swift_project_boxed_opaque_existential_1Tm(v28, v29);
      uint64_t v21 = *(void *)(v19 - 8);
      __n128 v22 = MEMORY[0x1F4188790](v20);
      id v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v21 + 16))(v24, v22);
      uint64_t v25 = sub_1C2550860();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v19);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
    }
    else
    {
      uint64_t v25 = 0;
    }
    objc_msgSend(a2, sel_showViewController_sender_, v18, v25);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C2502708(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254E4C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (id *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = v2 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  sub_1C225EB54(v14, (uint64_t)&v53, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (!v55) {
    return sub_1C225F904((uint64_t)&v53, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
  }
  uint64_t v15 = sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for UDCRecentItem();
  uint64_t v51 = v15;
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v47 = v8;
  id v48 = v10;
  id v49 = v7;
  uint64_t v44 = v5;
  uint64_t v45 = v4;
  uint64_t v46 = a1;
  sub_1C225F054(v52 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, (uint64_t)v13);
  swift_release();
  id v50 = v13[1];
  sub_1C225F87C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
  if (qword_1EBB6EF30 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1EBB6FB90;
  id v18 = sub_1C24FED1C();
  id v19 = objc_msgSend(v18, sel_profileIdentifier);

  uint64_t v52 = *(void *)(v17 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v20);
  *(&v44 - 2) = v17;
  *(&v44 - 1) = (uint64_t)v19;
  sub_1C254CEE0();
  sub_1C254E460();
  sub_1C21A89AC();
  swift_retain();
  sub_1C254E1D0();

  swift_release();
  uint64_t v21 = v53;
  char v22 = sub_1C24FF168();
  BOOL v23 = (v22 & 1) == 0;
  if (v22) {
    uint64_t v24 = 0x7475426E69706E55;
  }
  else {
    uint64_t v24 = 0x6F747475426E6950;
  }
  if (v23) {
    uint64_t v25 = 0xE90000000000006ELL;
  }
  else {
    uint64_t v25 = 0xEB000000006E6F74;
  }
  sub_1C25013F4(v24, v25);
  uint64_t v27 = v26;
  uint64_t v28 = swift_bridgeObjectRelease();
  if (v27)
  {
    uint64_t v29 = (void *)sub_1C24FEF24(v28);
    id v30 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v29, sel_setAccessibilityIdentifier_, v30);
  }
  sub_1C225EB54(v14, (uint64_t)&v53, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (!v55)
  {

    swift_release();
    return sub_1C225F904((uint64_t)&v53, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
  }
  if (swift_dynamicCast())
  {
    uint64_t v31 = *(void *)(v52 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_listConfiguration);
    swift_release();
    uint64_t v32 = v21;
    unint64_t v33 = sub_1C254E400();
    if (v33 >> 62) {
      uint64_t v34 = sub_1C2550620();
    }
    else {
      uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v36 = (uint64_t)v48;
    uint64_t v35 = (uint64_t)v49;
    swift_bridgeObjectRelease();
    if (!v34)
    {
      id v37 = sub_1C24FED1C();
      type metadata accessor for OnboardingTileAppearanceManager();
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 16) = v37;
      id v39 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
      id v40 = v37;
      id v41 = (void *)sub_1C254F430();
      id v42 = objc_msgSend(v39, sel_initWithCategory_domainName_healthStore_, 0, v41, v40);

      *(void *)(inited + 24) = v42;
      swift_storeEnumTagMultiPayload();
      sub_1C221B650(1, v36);
      swift_release();
      swift_release();
      sub_1C225F87C(v36, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
    }
    id v43 = v50;
    ListConceptManager.togglePinState(for:onCommitHandler:)(v50, 0, 0, v35);
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v35, v45);
    if (qword_1EBB6D840 != -1) {
      swift_once();
    }
    uint64_t v53 = v31;
    char v54 = 0;
    sub_1C23CE38C((uint64_t)v43, v32, v46, 0, &v53);

    return swift_release();
  }
  else
  {

    return swift_release();
  }
}

id sub_1C2502D90()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecentUDCCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2502E90()
{
  return type metadata accessor for RecentUDCCell();
}

uint64_t type metadata accessor for RecentUDCCell()
{
  uint64_t result = qword_1EA2E4AB0;
  if (!qword_1EA2E4AB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2502EE4()
{
  sub_1C250415C(319, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C2502FD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  return sub_1C225EB54(v3, a1, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
}

uint64_t sub_1C2503050(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1E4F66028];
  sub_1C225F0B8(a1, v3, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
  swift_endAccess();
  sub_1C250006C();
  return sub_1C225F904(a1, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, v4, (uint64_t (*)(void))sub_1C225EBC8);
}

uint64_t (*sub_1C250310C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C250316C;
}

uint64_t sub_1C250316C(uint64_t a1, char a2)
{
  return sub_1C2503388(a1, a2, (uint64_t (*)(uint64_t))sub_1C250006C);
}

uint64_t sub_1C2503184(void *a1, void *a2)
{
  v6[3] = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
  v6[0] = a1;
  id v4 = a1;
  sub_1C25021D8((uint64_t)v6, a2);
  return sub_1C225F904((uint64_t)v6, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C225F830);
}

uint64_t sub_1C2503230@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_sectionContext;
  swift_beginAccess();
  return sub_1C25044EC(v3, a1, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
}

uint64_t sub_1C25032A0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_sectionContext;
  swift_beginAccess();
  sub_1C225F20C(a1, v3);
  swift_endAccess();
  sub_1C2501050();
  return sub_1C225F194(a1);
}

uint64_t (*sub_1C2503310(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2503370;
}

uint64_t sub_1C2503370(uint64_t a1, char a2)
{
  return sub_1C2503388(a1, a2, (uint64_t (*)(uint64_t))sub_1C2501050);
}

uint64_t sub_1C2503388(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

id sub_1C25033CC()
{
  uint64_t v1 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (id *)((char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = v0 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  sub_1C225EB54(v4, (uint64_t)v8, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (!v9)
  {
    sub_1C225F904((uint64_t)v8, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
    return 0;
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for UDCRecentItem();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  sub_1C225F054(v7[1] + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData, (uint64_t)v3);
  swift_release();
  id v5 = v3[1];
  sub_1C225F87C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
  return v5;
}

id sub_1C2503560()
{
  return sub_1C25033CC();
}

void sub_1C2503584(char a1, char a2)
{
  uint64_t v3 = v2;
  int v5 = a1 & 1;
  sub_1C250415C(0, &qword_1EA2DF2E8, MEMORY[0x1E4FB1290]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)aBlock - v7;
  if (*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_editMode) != v5)
  {
    *(unsigned char *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_editMode) = v5;
    id v9 = sub_1C24FEF24();
    sub_1C24FF168();
    static UIButton.Configuration.pinnedLabsConfiguration(pinned:)();
    uint64_t v10 = sub_1C25500A0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
    sub_1C25500C0();

    if (a2)
    {
      uint64_t v11 = self;
      uint64_t v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_1C2504590;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C224E544;
      aBlock[3] = &block_descriptor_75;
      uint64_t v13 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v11, sel_animateWithDuration_animations_, v13, 0.25);
      _Block_release(v13);
    }
    else
    {
      sub_1C24FFE04();
    }
  }
}

void sub_1C2503774(char a1, char a2)
{
}

id sub_1C2503798()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (sub_1C24FF168()) {
    id v1 = sub_1C225F2DC((uint64_t)sub_1C25045A0, v0);
  }
  else {
    id v1 = sub_1C225F51C((uint64_t)sub_1C25045A0, v0);
  }
  uint64_t v2 = v1;
  sub_1C25013F4(0xD000000000000013, 0x80000001C2573EC0);
  if (v3)
  {
    id v4 = v2;
    int v5 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setAccessibilityIdentifier_, v5);
  }
  sub_1C225F830(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255CEB0;
  *(void *)(v6 + 32) = v2;
  sub_1C254F730();
  sub_1C21AB51C(0, &qword_1EA2DF2F0);
  id v7 = v2;
  uint64_t v8 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_configurationWithActions_, v8);
  swift_release();

  return v9;
}

void sub_1C2503970(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a5 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C875A200](v6);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    sub_1C2502708(2);
    ((void (*)(uint64_t))a3)(1);
  }
  else
  {
    a3();
  }
}

id sub_1C25039FC()
{
  return sub_1C2503798();
}

uint64_t sub_1C2503A20()
{
  if (sub_1C24FF168())
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
  }
  else if (qword_1EBB6EF40 != -1)
  {
    swift_once();
  }
  id v0 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v1;
}

id sub_1C2503B68()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v4 = self;
  uint64_t v14 = sub_1C25045E0;
  uint64_t v15 = v2;
  uint64_t v10 = MEMORY[0x1E4F143A8];
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_1C225ECF4;
  uint64_t v13 = &block_descriptor_34_3;
  int v5 = _Block_copy(&v10);
  id v6 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v14 = sub_1C2504604;
  uint64_t v15 = v3;
  uint64_t v10 = MEMORY[0x1E4F143A8];
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_1C225ED44;
  uint64_t v13 = &block_descriptor_37_1;
  uint64_t v7 = _Block_copy(&v10);
  swift_retain();
  swift_release();
  id v8 = objc_msgSend(v4, sel_configurationWithIdentifier_previewProvider_actionProvider_, 0, v5, v7);
  swift_release();
  swift_release();
  _Block_release(v7);
  _Block_release(v5);
  swift_release();
  return v8;
}

uint64_t sub_1C2503D40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C875A200](v2);
  if (!v3) {
    return 0;
  }
  id v4 = (void *)v3;
  uint64_t v5 = v3 + OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item;
  swift_beginAccess();
  sub_1C225EB54(v5, (uint64_t)v19, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (v19[3])
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    type metadata accessor for UDCRecentItem();
    if ((swift_dynamicCast() & 1) == 0
      || ((unint64_t v6 = *(void *)(v18 + OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_listConfiguration),
           swift_release(),
           v6 <= 4)
        ? (BOOL v7 = ((1 << v6) & 0x13) == 0)
        : (BOOL v7 = 1),
          v7))
    {

      return 0;
    }
    else
    {
      sub_1C2503A20();
      sub_1C24FF168();
      id v9 = (void *)sub_1C254F430();
      id v10 = objc_msgSend(self, sel_systemImageNamed_, v9);

      sub_1C21AB51C(0, &qword_1EA2DF300);
      uint64_t v11 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v12 = (void *)sub_1C254FFB0();
      sub_1C25013F4(0x73657250676E6F4CLL, 0xE900000000000073);
      if (v13)
      {
        id v14 = v12;
        uint64_t v15 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        objc_msgSend(v14, sel_setAccessibilityIdentifier_, v15, 0, 0, 0, sub_1C250460C, v11);
      }
      sub_1C21AB51C(0, &qword_1EA2DF308);
      sub_1C225F830(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1C255CEB0;
      *(void *)(v16 + 32) = v12;
      v19[0] = v16;
      sub_1C254F730();
      uint64_t v8 = sub_1C254FE60();
    }
  }
  else
  {

    sub_1C225F904((uint64_t)v19, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
    return 0;
  }
  return v8;
}

void sub_1C25040E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C875A200](v2);
  if (v3)
  {
    id v4 = (void *)v3;
    sub_1C2502708(1);
  }
}

id sub_1C2504138()
{
  return sub_1C2503B68();
}

void sub_1C250415C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C25041B4(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x1C87588F0](v7, v9, a2 & 1, v5);
  *uint64_t v2 = result;
  return result;
}

uint64_t sub_1C2504274(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1C254CAD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C250415C(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v17 - v10;
  sub_1C25044EC(a1, (uint64_t)v17 - v10, (unint64_t *)&qword_1EBB6F550, v8);
  uint64_t v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    id v13 = objc_msgSend(a2, sel_utcDateFormatter);
    id v14 = (void *)sub_1C254CA50();
    id v15 = objc_msgSend(v13, sel_relativeStringFromDate_, v14);

    uint64_t v12 = sub_1C254F470();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v12;
}

uint64_t sub_1C2504484()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 117, 7);
}

uint64_t sub_1C25044EC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C250415C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C2504558()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2504590()
{
  sub_1C24FFCF0(v0);
}

uint64_t block_destroy_helper_71()
{
  return swift_release();
}

void sub_1C25045A0(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1C2503970(a1, a2, a3, a4, v4);
}

uint64_t sub_1C25045A8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C25045E0()
{
  return sub_1C225DC58();
}

uint64_t sub_1C2504604(uint64_t a1)
{
  return sub_1C2503D40(a1, v1);
}

void sub_1C250460C(uint64_t a1)
{
  sub_1C25040E0(a1, v1);
}

uint64_t sub_1C2504614()
{
  return sub_1C2502708(0);
}

uint64_t MedicalRecordTimelineSystemStatusItem.SystemStatus.hash(into:)()
{
  uint64_t v1 = v0[1];
  if (v1 == 1) {
    return sub_1C25509D0();
  }
  uint64_t v3 = *v0;
  sub_1C25509D0();
  if (!v1) {
    return sub_1C25509E0();
  }
  sub_1C25509E0();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  return sub_1C24C9DD0(v3, v1);
}

uint64_t MedicalRecordTimelineSystemStatusItem.SystemStatus.hashValue.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_1C25509C0();
  if (v1 == 1)
  {
    sub_1C25509D0();
  }
  else
  {
    sub_1C25509D0();
    sub_1C25509E0();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_1C254F570();
      sub_1C24C9DD0(v2, v1);
    }
  }
  return sub_1C2550A10();
}

uint64_t sub_1C25047A0()
{
  uint64_t v1 = v0[1];
  if (v1 == 1) {
    return sub_1C25509D0();
  }
  uint64_t v3 = *v0;
  sub_1C25509D0();
  if (!v1) {
    return sub_1C25509E0();
  }
  sub_1C25509E0();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  return sub_1C24C9DD0(v3, v1);
}

uint64_t sub_1C2504844()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_1C25509C0();
  if (v1 == 1)
  {
    sub_1C25509D0();
  }
  else
  {
    sub_1C25509D0();
    sub_1C25509E0();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_1C254F570();
      sub_1C24C9DD0(v2, v1);
    }
  }
  return sub_1C2550A10();
}

uint64_t MedicalRecordTimelineSystemStatusItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static MedicalRecordTimelineSystemStatusItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 16);
  long long v5 = v2;
  return _s15HealthRecordsUI37MedicalRecordTimelineSystemStatusItemC0gH0O2eeoiySbAE_AEtFZ_0((uint64_t *)&v5, (uint64_t *)&v4) & 1;
}

uint64_t sub_1C2504950()
{
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1 == 1) {
    return sub_1C25509D0();
  }
  uint64_t v3 = *(void *)(v0 + 16);
  sub_1C25509D0();
  sub_1C25509E0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1C254F570();
    uint64_t v4 = v3;
    uint64_t v5 = v1;
  }
  else
  {
    uint64_t v4 = v3;
    uint64_t v5 = 0;
  }
  return sub_1C24C9DD0(v4, v5);
}

uint64_t MedicalRecordTimelineSystemStatusItem.deinit()
{
  sub_1C24C9DD0(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineSystemStatusItem.__deallocating_deinit()
{
  sub_1C24C9DD0(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2504A94()
{
  sub_1C25509C0();
  sub_1C254F570();
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1 == 1)
  {
    sub_1C25509D0();
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 16);
    sub_1C25509D0();
    sub_1C25509E0();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_1C254F570();
      uint64_t v3 = v2;
      uint64_t v4 = v1;
    }
    else
    {
      uint64_t v3 = v2;
      uint64_t v4 = 0;
    }
    sub_1C24C9DD0(v3, v4);
  }
  return sub_1C2550A10();
}

uint64_t sub_1C2504B54()
{
  return sub_1C2504A94();
}

uint64_t sub_1C2504B78()
{
  uint64_t v1 = *v0;
  sub_1C254F570();
  uint64_t v2 = *(void *)(v1 + 24);
  if (v2 == 1) {
    return sub_1C25509D0();
  }
  uint64_t v4 = *(void *)(v1 + 16);
  sub_1C25509D0();
  sub_1C25509E0();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1C254F570();
    uint64_t v5 = v4;
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v5 = v4;
    uint64_t v6 = 0;
  }
  return sub_1C24C9DD0(v5, v6);
}

uint64_t sub_1C2504C3C()
{
  sub_1C25509C0();
  uint64_t v1 = *v0;
  sub_1C254F570();
  uint64_t v2 = *(void *)(v1 + 24);
  if (v2 == 1)
  {
    sub_1C25509D0();
  }
  else
  {
    uint64_t v3 = *(void *)(v1 + 16);
    sub_1C25509D0();
    sub_1C25509E0();
    if (v2)
    {
      swift_bridgeObjectRetain();
      sub_1C254F570();
      uint64_t v4 = v3;
      uint64_t v5 = v2;
    }
    else
    {
      uint64_t v4 = v3;
      uint64_t v5 = 0;
    }
    sub_1C24C9DD0(v4, v5);
  }
  return sub_1C2550A10();
}

uint64_t sub_1C2504CFC(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(*(void *)a1 + 16);
  long long v4 = *(_OWORD *)(*(void *)a2 + 16);
  long long v5 = v2;
  return _s15HealthRecordsUI37MedicalRecordTimelineSystemStatusItemC0gH0O2eeoiySbAE_AEtFZ_0((uint64_t *)&v5, (uint64_t *)&v4) & 1;
}

id sub_1C2504D3C()
{
  return sub_1C2504EC8(&OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell____lazy_storage___spinner, (uint64_t (*)(void))sub_1C2504D5C);
}

id sub_1C2504D5C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
  objc_msgSend(v0, sel_setAlpha_, 0.4);
  objc_msgSend(v0, sel_setHidesWhenStopped_, 1);
  uint64_t v5 = sub_1C254F470();
  uint64_t v6 = v1;
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  id v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v5, v6);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

id sub_1C2504EA8()
{
  return sub_1C2504EC8(&OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell____lazy_storage___titleLabel, (uint64_t (*)(void))sub_1C2504F28);
}

id sub_1C2504EC8(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  long long v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2();
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    long long v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C2504F28()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  objc_msgSend(v0, sel_setAlpha_, 0.4);
  uint64_t v5 = sub_1C254F470();
  uint64_t v6 = v1;
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  id v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v5, v6);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

id sub_1C250506C(double a1, double a2, double a3, double a4)
{
  sub_1C234829C(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v47 - v10;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell____lazy_storage___spinner] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell____lazy_storage___titleLabel] = 0;
  uint64_t v12 = &v4[OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell_item];
  id v13 = (objc_class *)type metadata accessor for MedicalRecordTimelineSystemStatusItemCell();
  *(_OWORD *)uint64_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *((void *)v12 + 4) = 0;
  v47.receiver = v4;
  v47.super_class = v13;
  id v14 = objc_msgSendSuper2(&v47, sel_initWithFrame_, a1, a2, a3, a4);
  id v15 = objc_msgSend(v14, sel_contentView);
  id v16 = sub_1C2504D3C();
  objc_msgSend(v15, sel_addSubview_, v16);

  id v17 = objc_msgSend(v14, sel_contentView);
  id v18 = sub_1C2504EA8();
  objc_msgSend(v17, sel_addSubview_, v18);

  id v19 = v14;
  sub_1C254E6F0();
  uint64_t v20 = sub_1C254E710();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 0, 1, v20);
  MEMORY[0x1C8758250](v11);

  id v21 = sub_1C2504D3C();
  id v22 = objc_msgSend(v21, sel_topAnchor);

  id v23 = objc_msgSend(v19, sel_contentView);
  id v24 = objc_msgSend(v23, sel_topAnchor);

  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, 16.0);
  objc_msgSend(v25, sel_setActive_, 1);

  id v26 = sub_1C2504D3C();
  id v27 = objc_msgSend(v26, sel_centerXAnchor);

  id v28 = objc_msgSend(v19, sel_contentView);
  id v29 = objc_msgSend(v28, sel_centerXAnchor);

  id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  objc_msgSend(v30, sel_setActive_, 1);

  id v31 = sub_1C2504EA8();
  id v32 = objc_msgSend(v31, sel_topAnchor);

  id v33 = sub_1C2504D3C();
  id v34 = objc_msgSend(v33, sel_bottomAnchor);

  id v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, 8.0);
  objc_msgSend(v35, sel_setActive_, 1);

  id v36 = sub_1C2504EA8();
  id v37 = objc_msgSend(v36, sel_centerXAnchor);

  id v38 = objc_msgSend(v19, sel_contentView);
  id v39 = objc_msgSend(v38, sel_centerXAnchor);

  id v40 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v39);
  objc_msgSend(v40, sel_setActive_, 1);

  id v41 = sub_1C2504EA8();
  id v42 = objc_msgSend(v41, sel_bottomAnchor);

  id v43 = objc_msgSend(v19, sel_contentView);
  id v44 = objc_msgSend(v43, sel_bottomAnchor);

  id v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v44, -16.0);
  objc_msgSend(v45, sel_setActive_, 1);

  return v19;
}

uint64_t sub_1C25055E0(uint64_t a1, void *a2)
{
  sub_1C2227014(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell_item;
  swift_beginAccess();
  sub_1C2232E74((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C2505654();
  return sub_1C2227100((uint64_t)v5);
}

uint64_t sub_1C2505654()
{
  uint64_t v1 = sub_1C254E560();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  long long v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v5, (uint64_t)v23);
  if (!v23[3])
  {
    sub_1C2227100((uint64_t)v23);
LABEL_6:
    sub_1C254E510();
    id v9 = v0;
    uint64_t v10 = sub_1C254E550();
    os_log_type_t v11 = sub_1C254FA20();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v21 = v1;
      id v13 = (uint8_t *)v12;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v22 = v14;
      *(_DWORD *)id v13 = 136446210;
      sub_1C2227014(v5, (uint64_t)v23);
      sub_1C234829C(0, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
      uint64_t v15 = sub_1C254F510();
      v23[0] = sub_1C21AD354(v15, v16, &v22);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v10, v11, "Incorrect view model for MedicalRecordTimelineSystemStatusItem: %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v14, -1, -1);
      MEMORY[0x1C875A0B0](v13, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v21);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
  sub_1C22270A8();
  type metadata accessor for MedicalRecordTimelineSystemStatusItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)(v22 + 24);
  if (v6 == 1)
  {
    id v7 = sub_1C2504EA8();
    objc_msgSend(v7, sel_setText_, 0);

    id v8 = sub_1C2504D3C();
    objc_msgSend(v8, sel_stopAnimating);
  }
  else
  {
    uint64_t v18 = *(void *)(v22 + 16);
    swift_bridgeObjectRetain();
    id v19 = sub_1C2504EA8();
    if (v6)
    {
      uint64_t v20 = (void *)sub_1C254F430();
      sub_1C24C9DD0(v18, v6);
    }
    else
    {
      uint64_t v20 = 0;
    }
    objc_msgSend(v19, sel_setText_, v20);

    id v8 = sub_1C2504D3C();
    objc_msgSend(v8, sel_startAnimating);
  }

  return swift_release();
}

uint64_t sub_1C25059B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C2505A08(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C2505654();
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C2505A78(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2505AD8;
}

uint64_t sub_1C2505AD8(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2505654();
  }
  return result;
}

id MedicalRecordTimelineSystemStatusItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineSystemStatusItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s15HealthRecordsUI37MedicalRecordTimelineSystemStatusItemC0gH0O2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v3 != 1)
  {
    if (v5 != 1)
    {
      if (v3)
      {
        if (!v5)
        {
          uint64_t v6 = *a2;
          uint64_t v7 = 0;
          goto LABEL_6;
        }
        if (v2 == v4 && v3 == v5)
        {
          sub_1C24C99A8(*a1, v3);
          sub_1C24C99A8(v2, v3);
          sub_1C24C9DD0(v2, v3);
          sub_1C24C9DD0(v2, v3);
          return 1;
        }
        char v9 = sub_1C2550870();
        sub_1C24C99A8(v4, v5);
        sub_1C24C99A8(v2, v3);
        sub_1C24C9DD0(v2, v3);
        sub_1C24C9DD0(v4, v5);
        if ((v9 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1C24C99A8(v4, v5);
        sub_1C24C99A8(v2, 0);
        sub_1C24C9DD0(v2, 0);
        sub_1C24C9DD0(v4, v5);
        if (v5) {
          goto LABEL_7;
        }
      }
      return 1;
    }
LABEL_5:
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
LABEL_6:
    sub_1C24C99A8(v6, v7);
    sub_1C24C99A8(v2, v3);
LABEL_7:
    sub_1C24C9DD0(v2, v3);
    sub_1C24C9DD0(v4, v5);
    return 0;
  }
  if (v5 != 1) {
    goto LABEL_5;
  }
  sub_1C24C9DD0(*a1, 1);
  sub_1C24C9DD0(v4, 1);
  return v5;
}

uint64_t type metadata accessor for MedicalRecordTimelineSystemStatusItemCell()
{
  return self;
}

unint64_t sub_1C2505D58()
{
  unint64_t result = qword_1EA2E4AC8;
  if (!qword_1EA2E4AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4AC8);
  }
  return result;
}

unint64_t sub_1C2505DB0()
{
  unint64_t result = qword_1EA2E4AD0;
  if (!qword_1EA2E4AD0)
  {
    type metadata accessor for MedicalRecordTimelineSystemStatusItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4AD0);
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordTimelineSystemStatusItem()
{
  return self;
}

uint64_t sub_1C2505E28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI41MedicalRecordTimelineSystemStatusItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineSystemStatusItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineSystemStatusItem);
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t getEnumTagSinglePayload for MedicalRecordTimelineSystemStatusItem.SystemStatus(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 2) {
    return (v3 - 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MedicalRecordTimelineSystemStatusItem.SystemStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicalRecordTimelineSystemStatusItem.SystemStatus()
{
  return &type metadata for MedicalRecordTimelineSystemStatusItem.SystemStatus;
}

uint64_t method lookup function for MedicalRecordTimelineSystemStatusItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineSystemStatusItemCell);
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItemCell.didSelectCell(_:in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of MedicalRecordTimelineSystemStatusItemCell.deselectionBehavior.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

void *sub_1C25060F4(void *a1, uint64_t a2, void *a3)
{
  v3[5] = a1;
  v3[6] = a2;
  v3[7] = a3;
  v3[8] = 0;
  id v5 = a1;
  swift_retain();
  id v6 = a3;
  uint64_t v7 = ConceptsDataSource.init(arrangedSections:isHidden:)(MEMORY[0x1E4FBC860], 0);
  swift_allocObject();
  swift_weakInit();
  sub_1C25074A8();
  sub_1C25075C8(&qword_1EA2E4B30, 255, (void (*)(uint64_t))sub_1C25074A8);
  swift_retain();
  uint64_t v8 = sub_1C254ECC0();
  swift_release();
  swift_release();
  swift_release();

  v7[8] = v8;
  swift_release();
  return v7;
}

uint64_t sub_1C2506240(void **a1)
{
  uint64_t v2 = sub_1C254F1C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254F200();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    uint64_t v13 = sub_1C254FC70();
    uint64_t v18 = v6;
    uint64_t v14 = (void *)v13;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v10;
    *(void *)(v15 + 24) = v12;
    aBlock[4] = sub_1C25075B8;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_76;
    unint64_t v16 = _Block_copy(aBlock);
    id v17 = v10;
    swift_retain();
    swift_release();
    sub_1C254F1E0();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1C25075C8((unint64_t *)&qword_1EBB6FF10, 255, MEMORY[0x1E4FBCB00]);
    sub_1C21AC42C(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C21FFDEC();
    sub_1C2550200();
    MEMORY[0x1C87581B0](0, v9, v5, v16);
    _Block_release(v16);
    swift_release();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  }
  return result;
}

void sub_1C2506570(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    sub_1C244073C(0);
    sub_1C25066B4(v1);
  }
  else
  {
    sub_1C244073C(1);
  }
}

uint64_t sub_1C25065E0()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DAE0();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C25066B4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254CB40();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x1F4188790](v4);
  id v40 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v49 = xmmword_1C255F7E0;
  uint64_t v6 = type metadata accessor for MedicalRecordTimelineAccountHeaderItem();
  uint64_t v7 = (void *)swift_allocObject();
  type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell();
  sub_1C25075C8(&qword_1EA2E4AE8, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell);
  id v8 = a1;
  v7[3] = sub_1C254D330();
  v7[4] = v9;
  void v7[2] = v8;
  v50[3] = v6;
  v50[4] = sub_1C25075C8(&qword_1EA2E4AF0, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountHeaderItem);
  v50[0] = v7;
  if (qword_1EA2DD8D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (byte_1EA2E4618 == 1 && objc_msgSend(v8, sel_needsLogin))
  {
    uint64_t v10 = *(void **)(v2 + 56);
    uint64_t v11 = type metadata accessor for MedicalRecordTimelineAccountReconnectItem();
    uint64_t v12 = (void *)swift_allocObject();
    type metadata accessor for MedicalRecordTimelineAccountReconnectItemCell();
    sub_1C25075C8(&qword_1EA2E4B18, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountReconnectItemCell);
    id v13 = v8;
    id v14 = v10;
    v12[4] = sub_1C254D330();
    v12[5] = v15;
    v12[2] = v13;
    v12[3] = v14;
    *((void *)&v52 + 1) = v11;
    uint64_t v53 = sub_1C25075C8(&qword_1EA2E4B20, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountReconnectItem);
    *(void *)&long long v51 = v12;
  }
  else
  {
    uint64_t v53 = 0;
    long long v51 = 0u;
    long long v52 = 0u;
  }
  v39[2] = v50;
  if ((byte_1EA2E4618 & 1) != 0 && objc_msgSend(v8, sel_wantsGatewayUpgrade))
  {
    unint64_t v16 = *(void **)(v2 + 56);
    uint64_t v17 = type metadata accessor for MedicalRecordTimelineAccountUpgradeItem();
    uint64_t v18 = (void *)swift_allocObject();
    type metadata accessor for MedicalRecordTimelineAccountUpgradeItemCell();
    sub_1C25075C8(&qword_1EA2E4B08, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeItemCell);
    id v19 = v8;
    id v20 = v16;
    v18[4] = sub_1C254D330();
    v18[5] = v21;
    v18[2] = v19;
    v18[3] = v20;
    *((void *)&v55 + 1) = v17;
    uint64_t v56 = sub_1C25075C8(&qword_1EA2E4B10, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeItem);
    *(void *)&long long v54 = v18;
  }
  else
  {
    uint64_t v56 = 0;
    long long v54 = 0u;
    long long v55 = 0u;
  }
  uint64_t v22 = type metadata accessor for MedicalRecordTimelineAccountDetailsItem();
  id v23 = (void *)swift_allocObject();
  type metadata accessor for MedicalRecordTimelineAccountDetailsItemCell();
  sub_1C25075C8(&qword_1EA2E4AF8, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountDetailsItemCell);
  id v24 = v8;
  uint64_t v23[3] = sub_1C254D330();
  v23[4] = v25;
  void v23[2] = v24;
  uint64_t v58 = v22;
  uint64_t v59 = sub_1C25075C8(&qword_1EA2E4B00, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountDetailsItem);
  int v57 = v23;
  v39[1] = sub_1C254D560();
  sub_1C21AC42C(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
  v48[0] = MEMORY[0x1E4FBC860];
  for (uint64_t i = 4; i != 24; i += 5)
  {
    sub_1C2227014((uint64_t)&v48[i + 4], (uint64_t)v47);
    sub_1C2262398((uint64_t)v47, (uint64_t)&v43);
    if (v44)
    {
      sub_1C21F44EC(&v43, (uint64_t)v46);
      sub_1C21F44EC(v46, (uint64_t)&v43);
      id v27 = (void *)v48[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        id v27 = sub_1C226CD5C(0, v27[2] + 1, 1, v27);
        v48[0] = (uint64_t)v27;
      }
      unint64_t v29 = v27[2];
      unint64_t v28 = v27[3];
      if (v29 >= v28 >> 1) {
        v48[0] = (uint64_t)sub_1C226CD5C((void *)(v28 > 1), v29 + 1, 1, v27);
      }
      uint64_t v30 = v44;
      uint64_t v31 = v45;
      uint64_t v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v43, v44);
      __n128 v33 = MEMORY[0x1F4188790](v32);
      id v35 = (char *)v39 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v36 + 16))(v35, v33);
      sub_1C2507304(v29, (uint64_t)v35, v48, v30, v31);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v43);
    }
    else
    {
      sub_1C2227100((uint64_t)&v43);
    }
  }
  sub_1C21AC42C(0, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBB718]);
  swift_arrayDestroy();
  id v37 = v40;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v37, v42);
  sub_1C254D990();
  sub_1C254DA10();
  swift_release();
  return swift_bridgeObjectRelease();
}

void MedicalRecordTimelineAccountDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void MedicalRecordTimelineAccountDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C2506EE0()
{
  swift_release();
  return swift_release();
}

uint64_t MedicalRecordTimelineAccountDataSource.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v0;
}

uint64_t MedicalRecordTimelineAccountDataSource.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2506FC8()
{
  return sub_1C254E160();
}

Swift::Void __swiftcall MedicalRecordTimelineAccountDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C2507194()
{
  return sub_1C254FAD0();
}

uint64_t sub_1C2507304(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1C21F44EC(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1C250739C(uint64_t a1, uint64_t a2)
{
  return sub_1C25075C8(&qword_1EA2E4B28, a2, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountDataSource);
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountDataSource()
{
  return self;
}

uint64_t method lookup function for MedicalRecordTimelineAccountDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineAccountDataSource);
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountDataSource.reloadSection(account:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t sub_1C2507468()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C25074A0(void **a1)
{
  return sub_1C2506240(a1);
}

void sub_1C25074A8()
{
  if (!qword_1EA2E4320)
  {
    sub_1C2507510();
    unint64_t v0 = sub_1C254EA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4320);
    }
  }
}

void sub_1C2507510()
{
  if (!qword_1EA2E4328)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EA2E1530);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4328);
    }
  }
}

uint64_t sub_1C2507578()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C25075B8()
{
  sub_1C2506570(*(void **)(v0 + 16));
}

uint64_t block_destroy_helper_72()
{
  return swift_release();
}

uint64_t sub_1C25075C8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SharingDataSource(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E4B88);
}

uint64_t sub_1C2507630()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C25076B0(uint64_t a1)
{
  uint64_t v2 = sub_1C254F230();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = qword_1EA2E4B38;
  id v7 = *(id *)(a1 + qword_1EA2E4B38);
  sub_1C250976C(v7);
  uint64_t v8 = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t *v5 = sub_1C254FC70();
  uint64_t v9 = *(void (**)(void))(v3 + 104);
  unsigned int v17 = *MEMORY[0x1E4FBCBF0];
  unint64_t v16 = (void (*)(uint64_t *, void, uint64_t))v9;
  v9(v5);
  char v10 = sub_1C254F260();
  uint64_t v15 = *(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8);
  uint64_t result = v15(v5, v2);
  if (v10)
  {
    swift_retain();
    sub_1C254D340();
    uint64_t v14 = v8;
    swift_release();
    sub_1C254DA30();

    swift_bridgeObjectRelease();
    swift_release();
    id v12 = *(id *)(a1 + v6);
    sub_1C250A1B4(v12);
    uint64_t *v5 = sub_1C254FC70();
    v16(v5, v17, v2);
    char v13 = sub_1C254F260();
    uint64_t result = v15(v5, v2);
    if (v13)
    {
      swift_retain();
      sub_1C254DA30();

      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1C2507910(char a1)
{
  uint64_t v2 = v1;
  int v4 = a1 & 1;
  uint64_t v5 = sub_1C254F1C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254F200();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *(unsigned __int8 *)(v2 + qword_1EA2E4B80);
  *(unsigned char *)(v2 + qword_1EA2E4B80) = a1;
  if (v13 != v4)
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    uint64_t v14 = (void *)sub_1C254FC70();
    aBlock[4] = sub_1C250FD10;
    aBlock[5] = v2;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_99_0;
    uint64_t v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_1C254F1E0();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1C25103B8((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    sub_1C250E468(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C21FFDEC();
    sub_1C2550200();
    MEMORY[0x1C87581B0](0, v12, v8, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_1C2507C04(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F663C0];
  sub_1C2510400(0, &qword_1EA2E4C98, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource, MEMORY[0x1E4F66578], MEMORY[0x1E4F663C0]);
  uint64_t v89 = *(void *)(v7 - 8);
  uint64_t v90 = v7;
  MEMORY[0x1F4188790](v7);
  long long v91 = (char *)&v84 - v8;
  sub_1C2510400(0, &qword_1EA2E4C90, MEMORY[0x1E4F66320], MEMORY[0x1E4F66318], v6);
  uint64_t v87 = v9;
  uint64_t v86 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v88 = (char *)&v84 - v10;
  uint64_t v11 = sub_1C254CB40();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v101 = v11;
  uint64_t v102 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C254E890();
  MEMORY[0x1F4188790](v15 - 8);
  *(void *)(v3 + qword_1EA2E4B70) = MEMORY[0x1E4FBC860];
  uint64_t v16 = qword_1EA2E4B78;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  swift_retain();
  unsigned int v17 = (void *)sub_1C254FC70();
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67780]), sel_initWithDelegateQueue_, v17);

  *(void *)(v3 + v16) = v18;
  *(unsigned char *)(v3 + qword_1EA2E4B80) = 0;
  *(void *)(v3 + qword_1EA2E4B38) = a1;
  *(void *)(v3 + qword_1EA2E4B40) = a2;
  uint64_t v19 = qword_1EBB6D9B0;
  id v85 = a1;
  uint64_t v93 = a2;
  swift_retain();
  if (v19 != -1) {
    swift_once();
  }
  id v20 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C254E820();
  uint64_t v21 = sub_1C254D2A0();
  swift_allocObject();
  uint64_t v22 = sub_1C254D280();
  sub_1C250E468(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)(sub_1C254D9B0() - 8);
  uint64_t v26 = *(void *)(v25 + 72);
  uint64_t v27 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v28 = (v27 + 32) & ~v27;
  uint64_t v98 = v24;
  uint64_t v95 = v27 | 7;
  uint64_t v96 = v28 + v26;
  uint64_t v29 = swift_allocObject();
  long long v100 = xmmword_1C255CD90;
  *(_OWORD *)(v29 + 16) = xmmword_1C255CD90;
  uint64_t v97 = v28;
  sub_1C254CB30();
  sub_1C254CAF0();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v102 + 8);
  v102 += 8;
  uint64_t v99 = v30;
  v30(v14, v101);
  uint64_t v31 = (void *)MEMORY[0x1E4FBC860];
  sub_1C254D990();
  sub_1C254DF30();
  swift_allocObject();
  sub_1C254DF10();
  uint64_t v104 = v21;
  uint64_t v84 = sub_1C25103B8((unint64_t *)&qword_1EBB6E7D8, MEMORY[0x1E4F66208]);
  uint64_t v105 = v84;
  v103[0] = v22;
  uint64_t v92 = v22;
  swift_retain();
  uint64_t v32 = sub_1C254D6C0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v103);
  uint64_t v94 = v3;
  *(void *)(v3 + qword_1EA2E4B50) = v32;
  swift_retain();
  __n128 v33 = sub_1C226D744(0, 1, 1, v31);
  unint64_t v35 = v33[2];
  unint64_t v34 = v33[3];
  if (v35 >= v34 >> 1) {
    __n128 v33 = sub_1C226D744((void *)(v34 > 1), v35 + 1, 1, v33);
  }
  unint64_t v36 = sub_1C2510328();
  v33[2] = v35 + 1;
  id v37 = &v33[2 * v35];
  v37[4] = v32;
  v37[5] = v36;
  *(_OWORD *)(swift_allocObject() + 16) = v100;
  sub_1C254CB30();
  sub_1C254CAF0();
  v99(v14, v101);
  sub_1C254D990();
  swift_allocObject();
  sub_1C254DF10();
  uint64_t v104 = v21;
  uint64_t v105 = v84;
  v103[0] = v92;
  swift_retain();
  uint64_t v38 = sub_1C254D6C0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v103);
  uint64_t v39 = v94;
  *(void *)(v94 + qword_1EA2E4B48) = v38;
  unint64_t v40 = v33[2];
  unint64_t v41 = v33[3];
  swift_retain();
  if (v40 >= v41 >> 1) {
    __n128 v33 = sub_1C226D744((void *)(v41 > 1), v40 + 1, 1, v33);
  }
  v33[2] = v40 + 1;
  uint64_t v42 = &v33[2 * v40];
  v42[4] = v38;
  v42[5] = v36;
  *(_OWORD *)(swift_allocObject() + 16) = v100;
  sub_1C254CB30();
  sub_1C254CAF0();
  uint64_t v43 = v101;
  uint64_t v44 = v99;
  v99(v14, v101);
  sub_1C254D990();
  v103[0] = 0;
  v103[1] = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v103, "MutableArray<");
  HIWORD(v103[1]) = -4864;
  sub_1C254CB30();
  sub_1C254CAF0();
  v44(v14, v43);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  sub_1C254DA40();
  swift_allocObject();
  uint64_t v45 = sub_1C254D9F0();
  *(void *)(v39 + qword_1EA2E4B58) = v45;
  unint64_t v46 = v33[2];
  unint64_t v47 = v33[3];
  swift_retain();
  if (v46 >= v47 >> 1) {
    __n128 v33 = sub_1C226D744((void *)(v47 > 1), v46 + 1, 1, v33);
  }
  v33[2] = v46 + 1;
  id v48 = &v33[2 * v46];
  v48[4] = v45;
  v48[5] = MEMORY[0x1E4F66470];
  *(_OWORD *)(swift_allocObject() + 16) = v100;
  sub_1C2421CE8(0, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = v100;
  uint64_t v50 = type metadata accessor for StopSharingItem(0);
  swift_allocObject();
  id v51 = v85;
  uint64_t v52 = v93;
  swift_retain();
  uint64_t v53 = sub_1C250EB88(v51, v52);
  *(void *)&long long v100 = v51;

  *(void *)(v49 + 56) = v50;
  *(void *)(v49 + 64) = sub_1C25103B8(&qword_1EA2E4CC8, (void (*)(uint64_t))type metadata accessor for StopSharingItem);
  *(void *)(v49 + 32) = v53;
  sub_1C254CB30();
  sub_1C254CAF0();
  uint64_t v54 = v101;
  long long v55 = v99;
  v99(v14, v101);
  sub_1C254D990();
  strcpy((char *)v103, "ArrayDS<");
  BYTE1(v103[1]) = 0;
  WORD1(v103[1]) = 0;
  HIDWORD(v103[1]) = -402653184;
  sub_1C254CB30();
  sub_1C254CAF0();
  v55(v14, v54);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  sub_1C254D3A0();
  swift_allocObject();
  sub_1C254D390();
  uint64_t v56 = *MEMORY[0x1E4F663B0];
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 104))(v88, v56, v87);
  sub_1C2510400(0, &qword_1EA2E4CA0, MEMORY[0x1E4F66320], MEMORY[0x1E4F66318], MEMORY[0x1E4F663D0]);
  swift_allocObject();
  swift_retain();
  uint64_t v57 = sub_1C254D5D0();
  uint64_t v58 = v94;
  *(void *)(v94 + qword_1EA2E4B68) = v57;
  unint64_t v59 = v33[2];
  unint64_t v60 = v33[3];
  swift_retain();
  if (v59 >= v60 >> 1) {
    __n128 v33 = sub_1C226D744((void *)(v60 > 1), v59 + 1, 1, v33);
  }
  unint64_t v61 = sub_1C2510208();
  v33[2] = v59 + 1;
  id v62 = &v33[2 * v59];
  v62[4] = v57;
  v62[5] = v61;
  id v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource();
  swift_allocObject();
  id v64 = (void *)v100;
  id v65 = (id)v100;
  sub_1C22B5108(v63, v64, 1, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 104))(v91, v56, v90);
  sub_1C2510400(0, &qword_1EA2E4CD0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource, MEMORY[0x1E4F66578], MEMORY[0x1E4F663D0]);
  swift_allocObject();
  swift_retain();
  uint64_t v66 = sub_1C254D5D0();
  *(void *)(v58 + qword_1EA2E4B60) = v66;
  unint64_t v67 = v33[2];
  unint64_t v68 = v33[3];
  swift_retain();
  if (v67 >= v68 >> 1) {
    __n128 v33 = sub_1C226D744((void *)(v68 > 1), v67 + 1, 1, v33);
  }
  unint64_t v69 = sub_1C251046C();
  v33[2] = v67 + 1;
  id v70 = &v33[2 * v67];
  v70[4] = v66;
  v70[5] = v69;
  swift_release();
  uint64_t v71 = v33[2];
  if (v71)
  {
    swift_bridgeObjectRetain_n();
    id v72 = v33 + 5;
    char v73 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v75 = *(v72 - 1);
      if (v75)
      {
        uint64_t v76 = *v72;
        swift_unknownObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v103[0] = (uint64_t)v73;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          char v73 = sub_1C226C148(0, v73[2] + 1, 1, v73);
          v103[0] = (uint64_t)v73;
        }
        unint64_t v79 = v73[2];
        unint64_t v78 = v73[3];
        if (v79 >= v78 >> 1)
        {
          char v73 = sub_1C226C148((void *)(v78 > 1), v79 + 1, 1, v73);
          v103[0] = (uint64_t)v73;
        }
        uint64_t ObjectType = swift_getObjectType();
        sub_1C2332694(v79, v75, v103, ObjectType, v76);
      }
      v72 += 2;
      --v71;
    }
    while (v71);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  uint64_t v80 = sub_1C254DD00();
  swift_retain();
  sub_1C2508EEC(v65);
  id v81 = *(void **)(v80 + qword_1EA2E4B78);
  objc_msgSend(v81, sel_setDelegate_, v80);
  id v82 = v81;
  objc_msgSend(v82, sel_resume);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return v80;
}

uint64_t sub_1C2508AC0()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DA90();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void sub_1C2508B94()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + qword_1EA2E4B78);
}

uint64_t sub_1C2508C44()
{
  uint64_t v1 = *(void **)(v0 + qword_1EA2E4B78);
  objc_msgSend(v1, sel_invalidate);
  objc_msgSend(v1, sel_setDelegate_, 0);
  uint64_t v2 = sub_1C254DCF0();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1C2508D30()
{
  sub_1C2508C44();
  return swift_deallocClassInstance();
}

unint64_t sub_1C2508D60()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254DB50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SharingDataSource(0);
  uint64_t v6 = sub_1C254D6B0();
  unint64_t result = sub_1C254DC80();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result >= *(void *)(v6 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  unint64_t v8 = v6 + 16 * result;
  uint64_t v9 = *(void *)(v8 + 32);
  uint64_t v10 = *(void *)(v8 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  LOBYTE(v9) = sub_1C226803C(v9, v10, *(void **)(v1 + qword_1EA2E4B70));
  swift_bridgeObjectRelease();
  if (v9) {
    sub_1C254DAE0();
  }
  else {
    sub_1C254DA90();
  }
  sub_1C254DC60();
  uint64_t v11 = sub_1C254DB40();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11;
}

uint64_t sub_1C2508EEC(void *a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4F663C0];
  sub_1C2510400(0, &qword_1EA2E4C90, MEMORY[0x1E4F66320], MEMORY[0x1E4F66318], MEMORY[0x1E4F663C0]);
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v56 = (char *)&v54 - v5;
  sub_1C2510400(0, &qword_1EA2E4C98, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource, MEMORY[0x1E4F66578], v3);
  uint64_t v61 = v6;
  uint64_t v64 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v55 = (char *)&v54 - v7;
  uint64_t v8 = sub_1C254F230();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void **)(v1 + qword_1EA2E4B38);
  *(void *)(v1 + qword_1EA2E4B38) = a1;
  id v13 = a1;

  uint64_t v14 = v1;
  sub_1C250976C(v13);
  uint64_t v62 = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *uint64_t v11 = sub_1C254FC70();
  uint64_t v15 = *(void (**)(void))(v9 + 104);
  LODWORD(v60) = *MEMORY[0x1E4FBCBF0];
  unint64_t v59 = (void (*)(uint64_t *, void, uint64_t))v15;
  v15(v11);
  char v16 = sub_1C254F260();
  unsigned int v17 = *(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8);
  uint64_t result = v17(v11, v8);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  swift_retain();
  sub_1C254D340();
  swift_release();
  sub_1C254DA30();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C250A1B4(v13);
  *uint64_t v11 = sub_1C254FC70();
  v59(v11, v60, v8);
  char v19 = sub_1C254F260();
  uint64_t result = v17(v11, v8);
  if ((v19 & 1) == 0)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    return result;
  }
  uint64_t v63 = qword_1EA2E4B58;
  swift_retain();
  sub_1C254DA30();
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  id v20 = objc_msgSend(v13, sel_clinicalSharingStatus);
  id v21 = objc_msgSend(v20, sel_userStatus);

  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 104);
  uint64_t v64 = v14;
  unsigned int v23 = *MEMORY[0x1E4F663B8];
  unsigned int v24 = *MEMORY[0x1E4F663B0];
  if (v21 == (id)2) {
    uint64_t v25 = v23;
  }
  else {
    uint64_t v25 = v24;
  }
  v22(v55, v25, v61);
  sub_1C254D5B0();
  swift_release();
  uint64_t v26 = qword_1EA2E4B68;
  swift_retain();
  if (objc_msgSend(v13, sel_isSharingToProvider)) {
    uint64_t v27 = v23;
  }
  else {
    uint64_t v27 = v24;
  }
  uint64_t v28 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 104))(v56, v27, v58);
  sub_1C254D5B0();
  swift_release();
  sub_1C250A69C(v13);
  *uint64_t v11 = sub_1C254FC70();
  v59(v11, v60, v8);
  char v29 = sub_1C254F260();
  uint64_t result = v17(v11, v8);
  if ((v29 & 1) == 0) {
    goto LABEL_27;
  }
  swift_retain();
  sub_1C254D340();
  swift_release();
  sub_1C254DA30();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C2510400(0, &qword_1EA2E4CA0, MEMORY[0x1E4F66320], MEMORY[0x1E4F66318], MEMORY[0x1E4F663D0]);
  uint64_t v31 = v30;
  sub_1C2510208();
  swift_retain();
  uint64_t v62 = v31;
  uint64_t v32 = sub_1C254D6B0();
  swift_release();
  int64_t v33 = *(void *)(v32 + 16);
  uint64_t v34 = MEMORY[0x1E4FBC860];
  if (v33)
  {
    uint64_t v65 = MEMORY[0x1E4FBC860];
    swift_retain();
    sub_1C2274764(0, v33, 0);
    uint64_t v35 = v65;
    unint64_t v36 = sub_1C2510298();
    unint64_t v59 = (void (*)(uint64_t *, void, uint64_t))v32;
    unint64_t v60 = v36;
    uint64_t v37 = v32 + 40;
    uint64_t v61 = v26;
    do
    {
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C254D7F0();
      swift_getObjectType();
      sub_1C254D610();
      swift_release();
      swift_unknownObjectRelease();
      uint64_t v38 = sub_1C254DCC0();
      uint64_t v40 = v39;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v65 = v35;
      unint64_t v42 = *(void *)(v35 + 16);
      unint64_t v41 = *(void *)(v35 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_1C2274764(v41 > 1, v42 + 1, 1);
        uint64_t v35 = v65;
      }
      v37 += 16;
      *(void *)(v35 + 16) = v42 + 1;
      unint64_t v43 = v35 + 16 * v42;
      *(void *)(v43 + 32) = v38;
      *(void *)(v43 + 40) = v40;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    uint64_t v28 = v64;
    swift_release();
    uint64_t v34 = MEMORY[0x1E4FBC860];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = MEMORY[0x1E4FBC860];
  }
  sub_1C254DA40();
  swift_retain();
  uint64_t v44 = sub_1C254D6B0();
  swift_release();
  int64_t v45 = *(void *)(v44 + 16);
  if (v45)
  {
    uint64_t v62 = v35;
    uint64_t v65 = v34;
    swift_retain();
    sub_1C2274764(0, v45, 0);
    uint64_t v46 = v65;
    uint64_t v47 = v44 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C254D9C0();
      swift_release();
      uint64_t v48 = sub_1C254DCC0();
      uint64_t v50 = v49;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v65 = v46;
      unint64_t v52 = *(void *)(v46 + 16);
      unint64_t v51 = *(void *)(v46 + 24);
      if (v52 >= v51 >> 1)
      {
        sub_1C2274764(v51 > 1, v52 + 1, 1);
        uint64_t v46 = v65;
      }
      v47 += 16;
      *(void *)(v46 + 16) = v52 + 1;
      uint64_t v53 = v46 + 16 * v52;
      *(void *)(v53 + 32) = v48;
      *(void *)(v53 + 40) = v50;
      --v45;
    }
    while (v45);
    swift_bridgeObjectRelease();
    uint64_t v28 = v64;
    swift_release();
    uint64_t v35 = v62;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v46 = MEMORY[0x1E4FBC860];
  }
  uint64_t v65 = v35;
  sub_1C2272294(v46);
  *(void *)(v28 + qword_1EA2E4B70) = v65;
  return swift_bridgeObjectRelease();
}

void *sub_1C250976C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_clinicalSharingStatus);
  id v3 = objc_msgSend(v2, sel_userStatus);

  if (v3 != (id)2)
  {
    id v4 = objc_msgSend(a1, sel_clinicalSharingStatus);
    id v5 = objc_msgSend(v4, sel_userStatus);

    if (v5 != (id)4)
    {
      id v6 = objc_msgSend(a1, sel_clinicalSharingStatus);
      id v7 = objc_msgSend(v6, sel_userStatus);

      if (v7 != (id)5) {
        return (void *)MEMORY[0x1E4FBC860];
      }
    }
  }
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C254C730();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();

  uint64_t v89 = a1;
  id v12 = objc_msgSend(a1, sel_displayableLastSharedToProviderDate);
  uint64_t v13 = sub_1C254F470();
  uint64_t v15 = v14;

  sub_1C2201F2C();
  uint64_t v87 = v16;
  uint64_t v17 = swift_allocObject();
  long long v85 = xmmword_1C255CDA0;
  *(_OWORD *)(v17 + 16) = xmmword_1C255CDA0;
  uint64_t v86 = @"UIA.Health.Sharing";
  *(void *)(v17 + 32) = sub_1C254F470();
  *(void *)(v17 + 40) = v18;
  *(void *)(v17 + 48) = 0x6F6C70557473614CLL;
  *(void *)(v17 + 56) = 0xEA00000000006461;
  char v19 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v20 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v20)
  {
    uint64_t v21 = sub_1C254F470();
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v23 = 0;
  }
  uint64_t v24 = type metadata accessor for TitleSubtitleDetailItem(0);
  uint64_t v25 = (void *)swift_allocObject();
  sub_1C254CB30();
  v25[2] = v9;
  v25[3] = v11;
  v25[4] = v13;
  v25[5] = v15;
  v25[6] = 0;
  uint64_t v26 = (void *)MEMORY[0x1E4FBC860];
  v25[7] = MEMORY[0x1E4FBC860];
  v25[8] = v21;
  v25[9] = v23;
  swift_retain();
  uint64_t v27 = sub_1C226CD5C(0, 1, 1, v26);
  unint64_t v29 = v27[2];
  unint64_t v28 = v27[3];
  if (v29 >= v28 >> 1) {
    uint64_t v27 = sub_1C226CD5C((void *)(v28 > 1), v29 + 1, 1, v27);
  }
  uint64_t v30 = v89;
  uint64_t v94 = v24;
  uint64_t v31 = sub_1C25103B8(&qword_1EA2DF188, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItem);
  uint64_t v95 = v31;
  *(void *)&long long v93 = v25;
  v27[2] = v29 + 1;
  sub_1C21F44EC(&v93, (uint64_t)&v27[5 * v29 + 4]);
  uint64_t v84 = qword_1EA2E4B80;
  if (*(unsigned char *)(v88 + qword_1EA2E4B80) == 1)
  {
    id v32 = objc_msgSend(v30, sel_clinicalSharingStatus);
    objc_msgSend(v32, sel_userStatus);

    id v33 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1C254C730();
    uint64_t v49 = v48;
    swift_bridgeObjectRelease();

    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v50 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1C254C730();
    uint64_t v53 = v52;
    swift_bridgeObjectRelease();

    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = v85;
    *(void *)(v54 + 32) = sub_1C254F470();
    *(void *)(v54 + 40) = v55;
    *(void *)(v54 + 48) = 0x737574617453;
    *(void *)(v54 + 56) = 0xE600000000000000;
    uint64_t v56 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v57 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v57)
    {
      uint64_t v58 = sub_1C254F470();
      uint64_t v60 = v59;
    }
    else
    {
      uint64_t v58 = 0;
      uint64_t v60 = 0;
    }
    uint64_t v62 = type metadata accessor for TitleSubtitleDetailItemWithSpinner(0);
    uint64_t v63 = (void *)swift_allocObject();
    sub_1C254CB30();
    v63[2] = v51;
    v63[3] = v53;
    v63[4] = v47;
    v63[5] = v49;
    v63[6] = v58;
    v63[7] = v60;
    uint64_t v91 = v62;
    uint64_t v92 = sub_1C25103B8(&qword_1EA2DFD48, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItemWithSpinner);
    *(void *)&long long v90 = v63;
  }
  else
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v34 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v83 = sub_1C254C730();
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();

    uint64_t v37 = sub_1C22F8408();
    uint64_t v39 = v38;
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = v85;
    *(void *)(v40 + 32) = sub_1C254F470();
    *(void *)(v40 + 40) = v41;
    *(void *)(v40 + 48) = 0x737574617453;
    *(void *)(v40 + 56) = 0xE600000000000000;
    unint64_t v42 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v43 = (id)HKUIJoinStringsForAutomationIdentifier();

    if (v43)
    {
      uint64_t v44 = sub_1C254F470();
      uint64_t v46 = v45;
    }
    else
    {
      uint64_t v44 = 0;
      uint64_t v46 = 0;
    }
    uint64_t v61 = (void *)swift_allocObject();
    sub_1C254CB30();
    v61[2] = v83;
    v61[3] = v36;
    void v61[4] = v37;
    v61[5] = v39;
    v61[6] = 0;
    v61[7] = MEMORY[0x1E4FBC860];
    v61[8] = v44;
    v61[9] = v46;
    uint64_t v91 = v24;
    uint64_t v92 = v31;
    *(void *)&long long v90 = v61;
  }
  sub_1C21F44EC(&v90, (uint64_t)&v93);
  sub_1C21F4424((uint64_t)&v93, (uint64_t)&v90);
  uint64_t v96 = v27;
  unint64_t v65 = v27[2];
  unint64_t v64 = v27[3];
  uint64_t v66 = v89;
  if (v65 >= v64 >> 1) {
    uint64_t v96 = sub_1C226CD5C((void *)(v64 > 1), v65 + 1, 1, v27);
  }
  uint64_t v67 = v91;
  uint64_t v68 = v92;
  uint64_t v69 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v90, v91);
  MEMORY[0x1F4188790](v69);
  uint64_t v71 = (char *)&v83 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v72 + 16))(v71);
  sub_1C2507304(v65, (uint64_t)v71, (uint64_t *)&v96, v67, v68);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v90);
  char v73 = v96;
  if (objc_msgSend(v66, sel_state) == (id)1
    && objc_msgSend(v66, sel_isSharingToProvider)
    && (id v74 = objc_msgSend(v66, sel_clinicalSharingStatus),
        id v75 = objc_msgSend(v74, sel_multiDeviceStatus),
        v74,
        v75 != (id)2))
  {
    char v77 = *(unsigned char *)(v88 + v84);
    swift_retain();
    uint64_t v78 = sub_1C254D560();
    swift_release();
    uint64_t v79 = type metadata accessor for UploadNewDataItem();
    uint64_t v80 = swift_allocObject();
    *(void *)(v80 + 16) = 0xD000000000000011;
    *(void *)(v80 + 24) = 0x80000001C258A6B0;
    *(unsigned char *)(v80 + 32) = v77;
    *(void *)(v80 + 40) = v78;
    unint64_t v81 = v73[2];
    unint64_t v82 = v73[3];
    swift_retain();
    if (v81 >= v82 >> 1) {
      char v73 = sub_1C226CD5C((void *)(v82 > 1), v81 + 1, 1, v73);
    }
    uint64_t v91 = v79;
    uint64_t v92 = sub_1C25103B8(&qword_1EA2E4C88, (void (*)(uint64_t))type metadata accessor for UploadNewDataItem);
    *(void *)&long long v90 = v80;
    v73[2] = v81 + 1;
    sub_1C21F44EC(&v90, (uint64_t)&v73[5 * v81 + 4]);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v93);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v93);
    swift_release();
  }
  return v73;
}

uint64_t sub_1C250A1B4(void *a1)
{
  uint64_t v2 = v1;
  if (objc_msgSend(a1, sel_isSharingToProvider)
    && (id v4 = objc_msgSend(a1, sel_clinicalSharingStatus),
        id v5 = objc_msgSend(v4, sel_multiDeviceStatus),
        v4,
        v5 == (id)4))
  {
    sub_1C250F098(a1, *(void *)(v2 + qword_1EA2E4B40), v39);
    sub_1C2421CE8(0, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C255CD90;
    *(void *)(v6 + 56) = &type metadata for ClinicalSharingPausedItem;
    *(void *)(v6 + 64) = sub_1C250FDBC();
    uint64_t v7 = swift_allocObject();
    *(void *)(v6 + 32) = v7;
    long long v8 = v39[5];
    *(_OWORD *)(v7 + 80) = v39[4];
    *(_OWORD *)(v7 + 96) = v8;
    *(void *)(v7 + 112) = v40;
    long long v9 = v39[1];
    *(_OWORD *)(v7 + 16) = v39[0];
    *(_OWORD *)(v7 + 32) = v9;
    long long v10 = v39[3];
    *(_OWORD *)(v7 + 48) = v39[2];
    *(_OWORD *)(v7 + 64) = v10;
  }
  else if (objc_msgSend(a1, sel_isSharingToProvider) {
         && (id v11 = objc_msgSend(a1, sel_clinicalSharingStatus),
  }
             id v12 = objc_msgSend(v11, sel_multiDeviceStatus),
             v11,
             v12 == (id)2))
  {
    id v13 = objc_msgSend(a1, sel_clinicalSharingStatus);
    id v14 = objc_msgSend(v13, sel_primaryDeviceName);

    uint64_t v6 = MEMORY[0x1E4FBC860];
    if (v14)
    {
      uint64_t v15 = sub_1C254F470();
      uint64_t v37 = v16;
      uint64_t v38 = v15;

      if (qword_1EBB6D9B0 != -1) {
        swift_once();
      }
      id v17 = (id)qword_1EBB6D998;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1C2421CE8(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1C255CDA0;
      id v20 = objc_msgSend(a1, sel_title, 0xE000000000000000);
      uint64_t v21 = sub_1C254F470();
      uint64_t v23 = v22;

      uint64_t v24 = MEMORY[0x1E4FBB1A0];
      *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v25 = sub_1C220D950();
      *(void *)(v19 + 32) = v21;
      *(void *)(v19 + 40) = v23;
      *(void *)(v19 + 96) = v24;
      *(void *)(v19 + 104) = v25;
      *(void *)(v19 + 64) = v25;
      *(void *)(v19 + 72) = v38;
      *(void *)(v19 + 80) = v37;
      uint64_t v26 = sub_1C254F4B0();
      uint64_t v28 = v27;
      swift_bridgeObjectRelease();
      uint64_t v29 = type metadata accessor for TextItem();
      uint64_t v30 = (void *)swift_allocObject();
      type metadata accessor for TextItemCell();
      sub_1C25103B8(&qword_1EA2DE790, (void (*)(uint64_t))type metadata accessor for TextItemCell);
      v30[10] = sub_1C254D330();
      v30[11] = v31;
      v30[2] = v26;
      v30[3] = v28;
      v30[4] = 0;
      v30[5] = 0;
      v30[6] = 0;
      v30[7] = v6;
      v30[8] = 0;
      v30[9] = 0;
      uint64_t v32 = *(void *)(v2 + qword_1EA2E4B40);
      uint64_t PrimaryDeviceItem = type metadata accessor for MakePrimaryDeviceItem(0);
      swift_allocObject();
      id v34 = a1;
      swift_retain();
      uint64_t v35 = sub_1C250F3E8(v34, v32);

      sub_1C2421CE8(0, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90, MEMORY[0x1E4F66028], v18);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1C255CDA0;
      *(void *)(v6 + 56) = v29;
      *(void *)(v6 + 64) = sub_1C25103B8(&qword_1EA2E4C60, (void (*)(uint64_t))type metadata accessor for TextItem);
      *(void *)(v6 + 32) = v30;
      *(void *)(v6 + 96) = PrimaryDeviceItem;
      *(void *)(v6 + 104) = sub_1C25103B8(&qword_1EA2E4C68, (void (*)(uint64_t))type metadata accessor for MakePrimaryDeviceItem);
      *(void *)(v6 + 72) = v35;
    }
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return v6;
}

uint64_t sub_1C250A69C(void *a1)
{
  uint64_t v3 = sub_1C254CB40();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isSharingToProvider)) {
    return MEMORY[0x1E4FBC860];
  }
  id v7 = objc_msgSend(a1, sel_clinicalSharingStatus);
  id v8 = objc_msgSend(v7, sel_userStatus);

  if (v8 == (id)4) {
    return MEMORY[0x1E4FBC860];
  }
  id v9 = objc_msgSend(a1, sel_clinicalSharingStatus);
  id v10 = objc_msgSend(v9, sel_userStatus);

  if (v10 == (id)5) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C250F664(v29);
  uint64_t v13 = *(void *)(v1 + qword_1EA2E4B40);
  uint64_t started = type metadata accessor for StartSharingItem(0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + OBJC_IVAR____TtC15HealthRecordsUI16StartSharingItem_account) = a1;
  id v16 = a1;
  uint64_t v28 = v13;
  swift_retain();
  id v17 = objc_msgSend(v16, sel_identifier);
  sub_1C254CB20();

  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v18 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C254C730();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();

  id v21 = objc_msgSend(self, sel_linkColor);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  uint64_t v22 = sub_1C254FE50();

  *(void *)(v15 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v15 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID, v6, v3);
  *(void *)(v15 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager) = v28;
  uint64_t v23 = (uint64_t *)(v15 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelText);
  *uint64_t v23 = v27;
  v23[1] = v20;
  *(void *)(v15 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelColor) = v21;
  *(void *)(v15 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelFont) = v22;
  *(unsigned char *)(v15 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_shouldAlignWithImageInsetText) = 1;
  sub_1C2421CE8(0, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255CDA0;
  *(void *)(v11 + 56) = &type metadata for TopAlignedIconListItem;
  *(void *)(v11 + 64) = sub_1C250FD18();
  uint64_t v24 = swift_allocObject();
  *(void *)(v11 + 32) = v24;
  long long v25 = v29[1];
  *(_OWORD *)(v24 + 16) = v29[0];
  *(_OWORD *)(v24 + 32) = v25;
  *(_OWORD *)(v24 + 48) = v29[2];
  *(void *)(v24 + 64) = v30;
  *(void *)(v11 + 96) = started;
  *(void *)(v11 + 104) = sub_1C25103B8(&qword_1EA2E4C58, (void (*)(uint64_t))type metadata accessor for StartSharingItem);
  *(void *)(v11 + 72) = v15;
  return v11;
}

void sub_1C250AAFC()
{
}

uint64_t sub_1C250AB2C()
{
  return type metadata accessor for SharingDataSource(0);
}

uint64_t sub_1C250AB34(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v5 = a3;
  id v6 = a4;
  swift_retain();
  sub_1C250F864(v6);

  return swift_release();
}

void sub_1C250AB9C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v5 = a3;
  swift_retain();
  id v6 = a4;
  sub_1C250FA24();

  swift_release();
}

void sub_1C250AC0C()
{
}

uint64_t sub_1C250AC1C()
{
  return sub_1C250AD20(&OBJC_IVAR____TtC15HealthRecordsUI16StartSharingItem_account);
}

uint64_t sub_1C250AC28()
{
  return type metadata accessor for StartSharingItem(0);
}

uint64_t type metadata accessor for StartSharingItem(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E4C00);
}

void sub_1C250AC54(uint64_t a1, void *a2)
{
  uint64_t v4 = *v2;
  id v5 = objc_msgSend(objc_allocWithZone((Class)WDClinicalOnboardingOAuthNavigationViewController), sel_initWithContext_onboardingOptions_sourceIdentifier_profile_existingAccount_, 8, 1, 0, *(void *)(*(void *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager) + 16), *(void *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI16StartSharingItem_account));
  objc_msgSend(a2, sel_showViewController_sender_, v5, v4);
}

void sub_1C250AD04()
{
}

uint64_t sub_1C250AD14()
{
  return sub_1C250AD20(&OBJC_IVAR____TtC15HealthRecordsUI15StopSharingItem_account);
}

uint64_t sub_1C250AD20(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  uint64_t v4 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_bridgeObjectRelease();

  sub_1C2201FD8(v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
  return swift_deallocClassInstance();
}

uint64_t sub_1C250AE44()
{
  return type metadata accessor for StopSharingItem(0);
}

uint64_t type metadata accessor for StopSharingItem(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E4C18);
}

uint64_t sub_1C250AE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1C250AE8C, 0, 0);
}

uint64_t sub_1C250AE8C()
{
  uint64_t v1 = v0[2];
  v0[4] = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager);
  v0[5] = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI15StopSharingItem_account);
  sub_1C254F820();
  v0[6] = sub_1C254F810();
  uint64_t v3 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C250AF48, v3, v2);
}

uint64_t sub_1C250AF48()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = (void *)v0[3];
  swift_release();
  sub_1C24D359C(v1, v2);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C250AFC0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7 = (void *)swift_allocObject();
  void v7[2] = a3;
  v7[3] = a2;
  v7[4] = a4;
  id v8 = a3;
  swift_retain();
  sub_1C251C964((uint64_t)sub_1C250E438, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1C250B050(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v61 = a2;
  uint64_t v7 = sub_1C254F1C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C254F200();
  uint64_t v62 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C254E560();
  MEMORY[0x1F4188790](v14);
  id v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v56 - v19;
  uint64_t v63 = v22;
  uint64_t v64 = v21;
  if (a1)
  {
    uint64_t v59 = v11;
    uint64_t v60 = v8;
    id v23 = a1;
    sub_1C254E510();
    id v24 = a1;
    id v25 = a1;
    uint64_t v26 = sub_1C254E550();
    os_log_type_t v27 = sub_1C254FA20();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v58 = v7;
      uint64_t v29 = v28;
      uint64_t v57 = swift_slowAlloc();
      uint64_t v66 = v57;
      *(_DWORD *)uint64_t v29 = 136446466;
      aBlock[0] = a4;
      swift_getMetatypeMetadata();
      uint64_t v30 = sub_1C254F4F0();
      aBlock[0] = sub_1C21AD354(v30, v31, &v66);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      uint64_t v56 = v29 + 14;
      aBlock[0] = a1;
      id v32 = a1;
      id v33 = a1;
      sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
      sub_1C25508F0();
      id v34 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v35 = sub_1C254F4F0();
      unint64_t v37 = v36;

      aBlock[0] = sub_1C21AD354(v35, v37, &v66);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v26, v27, "[%{public}s]: failed to stop sharing with error: %{public}s", (uint8_t *)v29, 0x16u);
      uint64_t v38 = v57;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v38, -1, -1);
      uint64_t v39 = v29;
      uint64_t v7 = v58;
      MEMORY[0x1C875A0B0](v39, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v20, v64);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    id v50 = (void *)sub_1C254FC70();
    uint64_t v51 = swift_allocObject();
    uint64_t v52 = v61;
    *(void *)(v51 + 16) = a1;
    *(void *)(v51 + 24) = v52;
    aBlock[4] = sub_1C250E460;
    aBlock[5] = v51;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_44_0;
    uint64_t v53 = _Block_copy(aBlock);
    id v54 = a1;
    id v55 = v52;
    swift_release();
    sub_1C254F1E0();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1C25103B8((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    sub_1C250E468(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C21FFDEC();
    sub_1C2550200();
    MEMORY[0x1C87581B0](0, v13, v10, v53);
    _Block_release(v53);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v10, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v13, v59);
  }
  else
  {
    uint64_t v40 = a3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate;
    if (MEMORY[0x1C875A200](a3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate, v18))
    {
      uint64_t v41 = *(void *)(v40 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v41 + 16))(ObjectType, v41);
      swift_unknownObjectRelease();
    }
    sub_1C254E510();
    id v43 = sub_1C254E550();
    os_log_type_t v44 = sub_1C254FA00();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v66 = v46;
      *(_DWORD *)uint64_t v45 = 136446210;
      aBlock[0] = a4;
      swift_getMetatypeMetadata();
      uint64_t v47 = sub_1C254F4F0();
      aBlock[0] = sub_1C21AD354(v47, v48, &v66);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v43, v44, "[%{public}s]: successfully stopped sharing", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v46, -1, -1);
      MEMORY[0x1C875A0B0](v45, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v16, v64);
  }
}

void sub_1C250B798(uint64_t a1, void *a2)
{
  uint64_t v3 = self;
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v6 = (void *)sub_1C254C810();
  id v7 = objc_msgSend(v3, sel_basicAlertControllerWithTitle_message_internalError_, 0, v5, v6, 0xE000000000000000);

  objc_msgSend(a2, sel_presentViewController_animated_completion_, v7, 1, 0);
}

void sub_1C250B910(uint64_t a1, void *a2)
{
}

uint64_t sub_1C250B938()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  uint64_t v2 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();

  sub_1C2201FD8(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
  return swift_deallocClassInstance();
}

uint64_t sub_1C250BA44()
{
  return type metadata accessor for MakePrimaryDeviceItem(0);
}

uint64_t type metadata accessor for MakePrimaryDeviceItem(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E4C28);
}

uint64_t sub_1C250BA6C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1C250BAA4(uint64_t a1, uint64_t a2, id a3, uint64_t a4)
{
  uint64_t v7 = sub_1C254CB40();
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  uint64_t v8 = *(void *)(v39 + 64);
  MEMORY[0x1F4188790](v7);
  uint64_t v38 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C250E468(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  __n128 v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = a2;
  uint64_t v14 = a2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate;
  uint64_t v15 = MEMORY[0x1C875A200](a2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate, v10);
  id v41 = a3;
  if (v15)
  {
    uint64_t v36 = a4;
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t ObjectType = swift_getObjectType();
    if (qword_1EBB6D9B0 != -1) {
      swift_once();
    }
    id v18 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C254C730();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 24))(v19, v21, ObjectType, v16);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    a3 = v41;
    a4 = v36;
  }
  uint64_t v22 = *(void *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager);
  uint64_t v23 = a2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  id v24 = (uint64_t (*)(void *))swift_allocObject();
  *((void *)v24 + 2) = v13;
  *((void *)v24 + 3) = a3;
  *((void *)v24 + 4) = a4;
  uint64_t v25 = sub_1C254F840();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  unint64_t v37 = v12;
  v26(v12, 1, 1, v25);
  os_log_type_t v27 = v38;
  uint64_t v28 = v39;
  uint64_t v29 = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v38, v23, v40);
  unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v31 = (v8 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v32 = (char *)swift_allocObject();
  *((void *)v32 + 2) = 0;
  *((void *)v32 + 3) = 0;
  *((void *)v32 + 4) = v22;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v32[v30], v27, v29);
  *(void *)&v32[v31] = 3;
  id v33 = (uint64_t (**)(void *))&v32[(v31 + 15) & 0xFFFFFFFFFFFFFFF8];
  *id v33 = sub_1C250E998;
  v33[1] = v24;
  swift_retain();
  id v34 = v41;
  swift_retain();
  swift_retain();
  sub_1C24D0A0C((uint64_t)v37, (uint64_t)&unk_1EA2E4C48, (uint64_t)v32);
  swift_release();
  return swift_release();
}

uint64_t sub_1C250BE78(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = sub_1C254F1C0();
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  __n128 v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C254F200();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v14 = (void *)sub_1C254FC70();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a2;
  v15[3] = a1;
  v15[4] = a3;
  v15[5] = a4;
  aBlock[4] = sub_1C250EB3C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_63;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  id v17 = a1;
  id v18 = a3;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C25103B8((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C250E468(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v20);
}

uint64_t sub_1C250C184(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = a1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate;
  uint64_t result = MEMORY[0x1C875A200](a1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
  if (result)
  {
    uint64_t v9 = *(void *)(v7 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a3;
    *(void *)(v11 + 24) = a4;
    uint64_t v12 = *(void (**)(uint64_t, void (*)(void *), uint64_t, uint64_t, uint64_t))(v9 + 32);
    id v13 = a3;
    v12(a2, sub_1C250EB80, v11, ObjectType, v9);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1C250C27C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v41 - v11;
  if (a1)
  {
    sub_1C254E510();
    id v13 = a1;
    id v14 = a1;
    uint64_t v15 = sub_1C254E550();
    os_log_type_t v16 = sub_1C254FA20();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      unint64_t v42 = a2;
      uint64_t v19 = v18;
      uint64_t v45 = v18;
      *(_DWORD *)uint64_t v17 = 136446466;
      uint64_t v44 = a3;
      swift_getMetatypeMetadata();
      uint64_t v43 = v6;
      uint64_t v20 = sub_1C254F4F0();
      uint64_t v44 = sub_1C21AD354(v20, v21, &v45);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      uint64_t v41 = v17 + 14;
      uint64_t v44 = (uint64_t)a1;
      id v22 = a1;
      id v23 = a1;
      sub_1C2421CE8(0, (unint64_t *)&unk_1EBB6F530, (unint64_t *)&qword_1EBB70060, MEMORY[0x1E4FBC0E8], MEMORY[0x1E4FBB718]);
      sub_1C25508F0();
      id v24 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v25 = sub_1C254F4F0();
      unint64_t v27 = v26;

      uint64_t v44 = sub_1C21AD354(v25, v27, &v45);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v15, v16, "[%{public}s]: failed to change primary device with error: %{public}s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      uint64_t v28 = v19;
      a2 = v42;
      MEMORY[0x1C875A0B0](v28, -1, -1);
      MEMORY[0x1C875A0B0](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v43);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    uint64_t v36 = self;
    if (qword_1EBB6D9B0 != -1) {
      swift_once();
    }
    id v37 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v38 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    uint64_t v39 = (void *)sub_1C254C810();
    id v40 = objc_msgSend(v36, sel_basicAlertControllerWithTitle_message_internalError_, 0, v38, v39);

    objc_msgSend(a2, sel_presentViewController_animated_completion_, v40, 1, 0);
  }
  else
  {
    sub_1C254E510();
    uint64_t v29 = sub_1C254E550();
    uint64_t v30 = sub_1C254FA00();
    if (os_log_type_enabled(v29, (os_log_type_t)v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v43 = v6;
      id v32 = (uint8_t *)v31;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v45 = v33;
      *(_DWORD *)id v32 = 136446210;
      uint64_t v44 = a3;
      swift_getMetatypeMetadata();
      uint64_t v34 = sub_1C254F4F0();
      uint64_t v44 = sub_1C21AD354(v34, v35, &v45);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v29, (os_log_type_t)v30, "[%{public}s]: successfully changed primary device", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v33, -1, -1);
      MEMORY[0x1C875A0B0](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v43);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
  }
}

void sub_1C250C828(uint64_t a1, void *a2)
{
}

void *sub_1C250C850(void *result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_beginAccess();
    long long v4 = *(_OWORD *)(a3 + 96);
    v7[4] = *(_OWORD *)(a3 + 80);
    v7[5] = v4;
    uint64_t v8 = *(void *)(a3 + 112);
    long long v5 = *(_OWORD *)(a3 + 32);
    v7[0] = *(_OWORD *)(a3 + 16);
    v7[1] = v5;
    long long v6 = *(_OWORD *)(a3 + 64);
    void v7[2] = *(_OWORD *)(a3 + 48);
    v7[3] = v6;
    sub_1C250FE98(v7);
    sub_1C250C8D0();
    return sub_1C250FF2C(v7);
  }
  return result;
}

uint64_t sub_1C250C8D0()
{
  uint64_t v0 = sub_1C254E560();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClinicalAccountDetailsViewController();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    long long v5 = (void *)v4;
    swift_unknownObjectRetain();
    sub_1C250CA68(v5);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1C254E510();
    uint64_t v7 = sub_1C254E550();
    os_log_type_t v8 = sub_1C254FA20();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1C21A1000, v7, v8, "Clincal SharingPausedItemDelegate must be a view controller", v9, 2u);
      MEMORY[0x1C875A0B0](v9, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

void sub_1C250CA68(void *a1)
{
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  long long v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C250E468(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  os_log_type_t v8 = (char *)&v48 - v7;
  uint64_t v9 = sub_1C254CB40();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v55 + 64);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  id v54 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v48 - v12;
  swift_getObjectType();
  uint64_t v14 = swift_conformsToProtocol2();
  if (v14) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v14) {
    os_log_type_t v16 = a1;
  }
  else {
    os_log_type_t v16 = 0;
  }
  if (v16)
  {
    uint64_t v51 = v8;
    uint64_t v52 = v9;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v18 = qword_1EBB6D9B0;
    uint64_t v19 = a1;
    if (v18 != -1) {
      swift_once();
    }
    id v20 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1C254C730();
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(v21, v23, ObjectType, v15);
    swift_bridgeObjectRelease();
    id v24 = (void *)v53[11];
    uint64_t v50 = v53[12];
    id v25 = objc_msgSend(v24, sel_identifier);
    unint64_t v26 = v13;
    uint64_t v49 = v13;
    sub_1C254CB20();

    unint64_t v27 = (uint64_t (*)(void *))swift_allocObject();
    *((void *)v27 + 2) = v16;
    *((void *)v27 + 3) = v15;
    *((void *)v27 + 4) = v19;
    uint64_t v28 = sub_1C254F840();
    uint64_t v29 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v51, 1, 1, v28);
    uint64_t v30 = v55;
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
    uint64_t v53 = v19;
    id v32 = v54;
    uint64_t v33 = v52;
    v31(v54, v26, v52);
    unint64_t v34 = (*(unsigned __int8 *)(v30 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    unint64_t v35 = (v10 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v36 = (char *)swift_allocObject();
    *((void *)v36 + 2) = 0;
    *((void *)v36 + 3) = 0;
    *((void *)v36 + 4) = v50;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(&v36[v34], v32, v33);
    *(void *)&v36[v35] = 3;
    id v37 = (uint64_t (**)(void *))&v36[(v35 + 15) & 0xFFFFFFFFFFFFFFF8];
    *id v37 = sub_1C2510004;
    v37[1] = v27;
    uint64_t v38 = v53;
    swift_retain();
    swift_retain();
    sub_1C24D0A0C(v29, (uint64_t)&unk_1EA2E4C78, (uint64_t)v36);

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v49, v33);
  }
  else
  {
    uint64_t v39 = v3;
    sub_1C254E510();
    id v40 = sub_1C254E550();
    os_log_type_t v41 = sub_1C254FA30();
    if (os_log_type_enabled(v40, v41))
    {
      unint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v57 = v43;
      *(_DWORD *)unint64_t v42 = 136315138;
      uint64_t v56 = sub_1C21AD354(0xD000000000000019, 0x80000001C256F0E0, &v57);
      sub_1C2550120();
      _os_log_impl(&dword_1C21A1000, v40, v41, "[%s] Parent view controller did not conform to AccountActionDelegate, cannot resume sharing.", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v43, -1, -1);
      MEMORY[0x1C875A0B0](v42, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v39 + 8))(v5, v2);
    uint64_t v44 = self;
    if (qword_1EBB6D9B0 != -1) {
      swift_once();
    }
    id v45 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v46 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v47 = objc_msgSend(v44, sel_basicAlertControllerWithTitle_message_internalError_, 0, v46, 0);

    objc_msgSend(a1, sel_presentViewController_animated_completion_, v47, 1, 0);
  }
}

uint64_t sub_1C250D158(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_1C254F1C0();
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C254F200();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  id v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v14 = (void *)sub_1C254FC70();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a2;
  v15[3] = a3;
  v15[4] = a1;
  v15[5] = a4;
  aBlock[4] = sub_1C2510180;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_92;
  os_log_type_t v16 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  id v17 = a1;
  id v18 = a4;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C25103B8((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C250E468(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v20);
}

uint64_t sub_1C250D464(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a4;
  uint64_t v9 = *(void (**)(uint64_t, void (*)(ValueMetadata *), uint64_t, uint64_t, uint64_t))(a2 + 32);
  id v10 = a4;
  v9(a3, sub_1C25101C4, v8, ObjectType, a2);
  return swift_release();
}

void sub_1C250D520(ValueMetadata *a1, void *a2)
{
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v39 - v9;
  if (a1)
  {
    sub_1C254E510();
    uint64_t v11 = a1;
    uint64_t v12 = a1;
    id v13 = sub_1C254E550();
    os_log_type_t v14 = sub_1C254FA20();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      os_log_type_t v16 = (ValueMetadata *)swift_slowAlloc();
      id v40 = a2;
      id v17 = v16;
      uint64_t v43 = v16;
      *(_DWORD *)uint64_t v15 = 136446466;
      unint64_t v42 = &type metadata for ClinicalSharingPausedItem;
      sub_1C25101CC();
      uint64_t v41 = v4;
      uint64_t v18 = sub_1C254F4F0();
      unint64_t v42 = (ValueMetadata *)sub_1C21AD354(v18, v19, (uint64_t *)&v43);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      uint64_t v39 = v15 + 14;
      unint64_t v42 = a1;
      uint64_t v20 = a1;
      uint64_t v21 = a1;
      sub_1C2421CE8(0, (unint64_t *)&unk_1EBB6F530, (unint64_t *)&qword_1EBB70060, MEMORY[0x1E4FBC0E8], MEMORY[0x1E4FBB718]);
      sub_1C25508F0();
      id v22 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v23 = sub_1C254F4F0();
      unint64_t v25 = v24;

      unint64_t v42 = (ValueMetadata *)sub_1C21AD354(v23, v25, (uint64_t *)&v43);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v13, v14, "[%{public}s]: failed to update multi device status with error: %{public}s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      unint64_t v26 = v17;
      a2 = v40;
      MEMORY[0x1C875A0B0](v26, -1, -1);
      MEMORY[0x1C875A0B0](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v41);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    unint64_t v34 = self;
    if (qword_1EBB6D9B0 != -1) {
      swift_once();
    }
    id v35 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v36 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v37 = (void *)sub_1C254C810();
    id v38 = objc_msgSend(v34, sel_basicAlertControllerWithTitle_message_internalError_, 0, v36, v37);

    objc_msgSend(a2, sel_presentViewController_animated_completion_, v38, 1, 0);
  }
  else
  {
    sub_1C254E510();
    unint64_t v27 = sub_1C254E550();
    uint64_t v28 = sub_1C254FA00();
    if (os_log_type_enabled(v27, (os_log_type_t)v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v41 = v4;
      uint64_t v30 = (uint8_t *)v29;
      uint64_t v31 = (ValueMetadata *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136446210;
      unint64_t v42 = v31;
      uint64_t v43 = &type metadata for ClinicalSharingPausedItem;
      sub_1C25101CC();
      uint64_t v32 = sub_1C254F4F0();
      uint64_t v43 = (ValueMetadata *)sub_1C21AD354(v32, v33, (uint64_t *)&v42);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v27, (os_log_type_t)v28, "[%{public}s]: successfully changed updated sharing status", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v31, -1, -1);
      MEMORY[0x1C875A0B0](v30, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v41);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
  }
}

void sub_1C250DAD8(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
}

uint64_t (*sub_1C250DB04())()
{
  return nullsub_1;
}

uint64_t sub_1C250DB24()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C250DB54(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*sub_1C250DB8C())()
{
  return nullsub_1;
}

uint64_t sub_1C250DBAC(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*sub_1C250DBE4())()
{
  return nullsub_1;
}

uint64_t sub_1C250DC04()
{
  uint64_t v1 = *(void *)(v0 + 72);
  sub_1C223E0BC(v1);
  return v1;
}

uint64_t sub_1C250DC38(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C221794C(*(void *)(v2 + 72));
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*sub_1C250DC70())()
{
  return nullsub_1;
}

void sub_1C250DC90(void *a1)
{
  uint64_t v3 = *v1;
  sub_1C250E468(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v35 - v5;
  swift_getObjectType();
  uint64_t v7 = swift_conformsToProtocol2();
  if (v7) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v9) {
    id v10 = a1;
  }
  else {
    uint64_t v8 = 0;
  }
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = v8;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  uint64_t v11 = *(void **)((char *)v1 + OBJC_IVAR____TtC15HealthRecordsUI15StopSharingItem_account);
  if (objc_msgSend(v11, sel_isSharingToProvider)
    && (id v12 = objc_msgSend(v11, sel_clinicalSharingStatus),
        id v13 = objc_msgSend(v12, sel_multiDeviceStatus),
        v12,
        v13 == (id)2)
    && objc_msgSend(v11, sel_needsRelogin))
  {
    uint64_t v14 = sub_1C254F840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    v15[4] = v1;
    v15[5] = a1;
    id v16 = a1;
    swift_retain();
    sub_1C24D0A0C((uint64_t)v6, (uint64_t)&unk_1EA2E4C40, (uint64_t)v15);
    swift_release();
  }
  else
  {
    uint64_t v36 = v3;
    if (qword_1EBB6D9B0 != -1) {
      swift_once();
    }
    id v17 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C2421CE8(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C255CD90;
    id v19 = objc_msgSend(v11, sel_title);
    uint64_t v20 = sub_1C254F470();
    uint64_t v22 = v21;

    *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v18 + 64) = sub_1C220D950();
    *(void *)(v18 + 32) = v20;
    *(void *)(v18 + 40) = v22;
    sub_1C254F4B0();
    swift_bridgeObjectRelease();
    uint64_t v23 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v24 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, 0, v23, 0);

    id v25 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    unint64_t v26 = (void *)swift_allocObject();
    v26[2] = v1;
    v26[3] = a1;
    v26[4] = v36;
    id v27 = a1;
    swift_retain();
    uint64_t v28 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1C250E320;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224DAAC;
    aBlock[3] = &block_descriptor_77;
    uint64_t v29 = _Block_copy(aBlock);
    swift_release();
    uint64_t v30 = self;
    id v31 = objc_msgSend(v30, sel_actionWithTitle_style_handler_, v28, 2, v29);
    _Block_release(v29);

    objc_msgSend(v24, sel_addAction_, v31);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v32 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    unint64_t v33 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v34 = objc_msgSend(v30, sel_actionWithTitle_style_handler_, v33, 1, 0);

    objc_msgSend(v24, sel_addAction_, v34);
    objc_msgSend(v27, sel_presentViewController_animated_completion_, v24, 1, 0);
  }
}

uint64_t sub_1C250E304()
{
  return objectdestroyTm_13(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t sub_1C250E320(uint64_t a1)
{
  return sub_1C250AFC0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t block_destroy_helper_73()
{
  return swift_release();
}

uint64_t sub_1C250E334()
{
  return objectdestroy_33Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C250E34C()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1C222399C;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x1F4188298](sub_1C250AE8C, 0, 0);
}

uint64_t sub_1C250E3F8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C250E438(void *a1)
{
  return sub_1C250B050(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C250E444()
{
  return objectdestroyTm_13(MEMORY[0x1E4FBC8B8], 32);
}

void sub_1C250E460()
{
  sub_1C250B798(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1C250E468(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C250E4CC(void *a1)
{
  uint64_t v3 = *v1;
  swift_getObjectType();
  uint64_t v4 = swift_conformsToProtocol2();
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (v4) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6) {
    id v7 = a1;
  }
  else {
    uint64_t v5 = 0;
  }
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = v5;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, 0, v9, 1, 0xE000000000000000);

  id v11 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v12 = (void *)swift_allocObject();
  v12[2] = v1;
  v12[3] = a1;
  v12[4] = v3;
  id v13 = a1;
  swift_retain();
  uint64_t v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1C250E91C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224DAAC;
  aBlock[3] = &block_descriptor_50_0;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  id v16 = self;
  id v17 = objc_msgSend(v16, sel_actionWithTitle_style_handler_, v14, 2, v15, 0xE000000000000000);
  _Block_release(v15);

  objc_msgSend(v10, sel_addAction_, v17);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v18 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v19 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v16, sel_actionWithTitle_style_handler_, v19, 1, 0, 0xE000000000000000);

  objc_msgSend(v10, sel_addAction_, v20);
  objc_msgSend(v13, sel_presentViewController_animated_completion_, v10, 1, 0);
}

uint64_t sub_1C250E900()
{
  return objectdestroyTm_13(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t sub_1C250E91C(uint64_t a1)
{
  return sub_1C250BAA4(a1, *(void *)(v1 + 16), *(id *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C250E928()
{
  return objectdestroyTm_13(MEMORY[0x1E4FBC8D0], 40);
}

uint64_t objectdestroyTm_13(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 16));

  return MEMORY[0x1F4186498](v2, a2, 7);
}

uint64_t sub_1C250E998(void *a1)
{
  return sub_1C250BE78(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C250E9A8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1C254CB40() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = *(void *)((char *)v1 + v6);
  uint64_t v11 = (uint64_t)v1 + v5;
  id v12 = (void *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_1C2223E3C;
  return sub_1C24E039C(a1, v7, v8, v9, v11, v10, v13, v14);
}

uint64_t sub_1C250EAF4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C250EB3C()
{
  return sub_1C250C184(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1C250EB48()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C250EB80(void *a1)
{
  sub_1C250C27C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C250EB88(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1C254CB40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI15StopSharingItem_account) = a1;
  id v9 = objc_msgSend(a1, sel_identifier);
  sub_1C254CB20();

  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C254C730();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();

  id v14 = objc_msgSend(self, sel_systemRedColor);
  id v15 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID, v8, v5);
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager) = a2;
  id v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelText);
  uint64_t *v16 = v11;
  v16[1] = v13;
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelColor) = v14;
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelFont) = v15;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_shouldAlignWithImageInsetText) = 0;
  return v2;
}

void sub_1C250EE10(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v32 = a8;
  uint64_t v33 = a2;
  uint64_t v35 = a4;
  uint64_t v36 = a6;
  uint64_t v30 = a5;
  id v31 = a1;
  uint64_t v28 = (uint64_t)a3;
  uint64_t v13 = sub_1C254CB40();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254D510();
  uint64_t v34 = sub_1C254D330();
  unint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  uint64_t v27 = v17;
  swift_bridgeObjectRetain();
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v37 = 0xD00000000000001ALL;
  unint64_t v38 = 0x80000001C258A640;
  sub_1C254CB30();
  sub_1C25103B8((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  unint64_t v18 = v38;
  unint64_t v29 = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v19 = a3;
  uint64_t v20 = v30;
  swift_bridgeObjectRetain();
  uint64_t v21 = v32;
  sub_1C223E0BC(v32);
  id v22 = v31;
  uint64_t v23 = v33;
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v24 = v27;
  swift_bridgeObjectRelease_n();
  sub_1C221794C(v21);
  swift_release();

  *a9 = v34;
  a9[1] = v24;
  a9[2] = v29;
  a9[3] = v18;
  uint64_t v25 = v35;
  a9[4] = v28;
  a9[5] = v25;
  uint64_t v26 = v36;
  a9[6] = v20;
  a9[7] = v26;
  a9[8] = a7;
  a9[9] = v21;
  a9[10] = a10;
  a9[11] = (uint64_t)v22;
  a9[12] = v23;
}

uint64_t sub_1C250F098@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C254C730();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();

  id v10 = (void *)MEMORY[0x1C8757A60](v7, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = (void *)qword_1EBB6D998;
  id v40 = a1;
  swift_retain();
  id v42 = v10;
  uint64_t v13 = a2;
  id v14 = v12;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C254C730();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();

  id v18 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C254C730();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();

  sub_1C250EE10(v40, v13, v10, v15, v17, v19, v21, 0, (uint64_t *)v45, 0);
  long long v22 = v45[5];
  *(_OWORD *)(v11 + 80) = v45[4];
  *(_OWORD *)(v11 + 96) = v22;
  *(void *)(v11 + 112) = v46;
  long long v23 = v45[1];
  *(_OWORD *)(v11 + 16) = v45[0];
  *(_OWORD *)(v11 + 32) = v23;
  long long v24 = v45[3];
  *(_OWORD *)(v11 + 48) = v45[2];
  *(_OWORD *)(v11 + 64) = v24;
  swift_beginAccess();
  uint64_t v25 = *(void *)(v11 + 88);
  *(void *)(v11 + 88) = sub_1C250FE90;
  *(void *)(v11 + 96) = v11;
  swift_retain();
  sub_1C221794C(v25);
  uint64_t v26 = *(void *)(v11 + 24);
  uint64_t v27 = *(void *)(v11 + 40);
  uint64_t v43 = *(void *)(v11 + 32);
  uint64_t v44 = *(void *)(v11 + 16);
  uint64_t v28 = *(void **)(v11 + 48);
  uint64_t v29 = *(void *)(v11 + 64);
  uint64_t v39 = *(void *)(v11 + 72);
  uint64_t v41 = *(void *)(v11 + 56);
  uint64_t v30 = *(void *)(v11 + 80);
  uint64_t v31 = *(void *)(v11 + 88);
  uint64_t v32 = *(void *)(v11 + 96);
  unint64_t v37 = v28;
  unint64_t v38 = *(void **)(v11 + 104);
  uint64_t v33 = *(void *)(v11 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v34 = v28;
  swift_bridgeObjectRetain();
  sub_1C223E0BC(v31);
  id v35 = v38;
  swift_retain();
  uint64_t result = swift_release();
  *a3 = v44;
  a3[1] = v26;
  a3[2] = v43;
  a3[3] = v27;
  a3[4] = v37;
  a3[5] = v41;
  a3[6] = v29;
  a3[7] = v39;
  a3[8] = v30;
  a3[9] = v31;
  a3[10] = v32;
  a3[11] = v35;
  a3[12] = v33;
  return result;
}

uint64_t sub_1C250F3E8(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1C254CB40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(a1, sel_identifier);
  sub_1C254CB20();

  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C254C730();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();

  id v14 = objc_msgSend(self, sel_linkColor);
  id v15 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID, v8, v5);
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager) = a2;
  uint64_t v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelText);
  uint64_t *v16 = v11;
  v16[1] = v13;
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelColor) = v14;
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelFont) = v15;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_shouldAlignWithImageInsetText) = 0;
  return v2;
}

void sub_1C250F664(void *a1@<X8>)
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  id v6 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C254C730();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();

  if (qword_1EBB6EFD0 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EBB70020;
  uint64_t v11 = (void *)sub_1C254F430();
  id v12 = objc_msgSend(self, sel_imageNamed_inBundle_, v11, v10, 0xE000000000000000);

  *a1 = 0xD00000000000001BLL;
  a1[1] = 0x80000001C258A4B0;
  a1[2] = v3;
  a1[3] = v5;
  a1[4] = v7;
  a1[5] = v9;
  a1[6] = v12;
}

void sub_1C250F864(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = MEMORY[0x1F4188790](v4).n128_u64[0];
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(a1, sel_accountIdentifiers, v6);
  sub_1C25103B8((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
  uint64_t v10 = sub_1C254F8F0();

  id v11 = objc_msgSend(*(id *)(v2 + qword_1EA2E4B38), sel_identifier);
  sub_1C254CB20();

  LOBYTE(v11) = sub_1C24F2494((uint64_t)v8, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (v11)
  {
    swift_retain();
    sub_1C254D560();
    swift_release();
    sub_1C22B58A4(0);
    swift_release();
    sub_1C2507910(1);
  }
}

void sub_1C250FA24()
{
  uint64_t v1 = sub_1C254F1C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C254F200();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *(unsigned __int8 *)(v0 + qword_1EA2E4B80);
  *(unsigned char *)(v0 + qword_1EA2E4B80) = 0;
  if (v9 == 1)
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    uint64_t v10 = (void *)sub_1C254FC70();
    aBlock[4] = sub_1C250FD10;
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_69_1;
    id v11 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    sub_1C254F1E0();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1C25103B8((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    sub_1C250E468(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C21FFDEC();
    sub_1C2550200();
    MEMORY[0x1C87581B0](0, v8, v4, v11);
    _Block_release(v11);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1C250FD10()
{
  return sub_1C25076B0(v0);
}

unint64_t sub_1C250FD18()
{
  unint64_t result = qword_1EA2E4C50;
  if (!qword_1EA2E4C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4C50);
  }
  return result;
}

uint64_t sub_1C250FD6C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

unint64_t sub_1C250FDBC()
{
  unint64_t result = qword_1EA2E4C70;
  if (!qword_1EA2E4C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4C70);
  }
  return result;
}

uint64_t objectdestroy_74Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 88)) {
    swift_release();
  }

  swift_release();
  return MEMORY[0x1F4186498](v0, 120, 7);
}

void *sub_1C250FE90(void *a1, uint64_t a2)
{
  return sub_1C250C850(a1, a2, v2);
}

void *sub_1C250FE98(void *a1)
{
  uint64_t v2 = (void *)a1[4];
  uint64_t v3 = a1[9];
  uint64_t v4 = (void *)a1[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v2;
  swift_bridgeObjectRetain();
  sub_1C223E0BC(v3);
  id v6 = v4;
  swift_retain();
  return a1;
}

void *sub_1C250FF2C(void *a1)
{
  uint64_t v2 = (void *)a1[4];
  uint64_t v3 = a1[9];
  uint64_t v4 = (void *)a1[11];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C221794C(v3);
  swift_release();

  return a1;
}

uint64_t sub_1C250FFC4()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2510004(void *a1)
{
  return sub_1C250D158(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t objectdestroy_55Tm()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C2510110()
{
  return objectdestroy_33Tm(MEMORY[0x1E4FBC8B8]);
}

uint64_t objectdestroy_33Tm(void (*a1)(void))
{
  swift_unknownObjectRelease();
  a1(*(void *)(v1 + 32));

  return MEMORY[0x1F4186498](v1, 48, 7);
}

uint64_t sub_1C2510180()
{
  return sub_1C250D464(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1C251018C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C25101C4(ValueMetadata *a1)
{
  sub_1C250D520(a1, *(void **)(v1 + 16));
}

unint64_t sub_1C25101CC()
{
  unint64_t result = qword_1EA2E4C80;
  if (!qword_1EA2E4C80)
  {
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E4C80);
  }
  return result;
}

unint64_t sub_1C2510208()
{
  unint64_t result = qword_1EA2E4CA8;
  if (!qword_1EA2E4CA8)
  {
    sub_1C2510400(255, &qword_1EA2E4CA0, MEMORY[0x1E4F66320], MEMORY[0x1E4F66318], MEMORY[0x1E4F663D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4CA8);
  }
  return result;
}

unint64_t sub_1C2510298()
{
  unint64_t result = qword_1EA2E4CB0;
  if (!qword_1EA2E4CB0)
  {
    sub_1C2510400(255, &qword_1EA2E4CA0, MEMORY[0x1E4F66320], MEMORY[0x1E4F66318], MEMORY[0x1E4F663D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4CB0);
  }
  return result;
}

unint64_t sub_1C2510328()
{
  unint64_t result = qword_1EA2E4CB8;
  if (!qword_1EA2E4CB8)
  {
    sub_1C2510400(255, &qword_1EA2E4CC0, MEMORY[0x1E4F66618], MEMORY[0x1E4F66470], MEMORY[0x1E4F662E8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4CB8);
  }
  return result;
}

uint64_t sub_1C25103B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2510400(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    unint64_t v10 = a5(a1, v9, a4);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C251046C()
{
  unint64_t result = qword_1EA2E4CD8;
  if (!qword_1EA2E4CD8)
  {
    sub_1C2510400(255, &qword_1EA2E4CD0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource, MEMORY[0x1E4F66578], MEMORY[0x1E4F663D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4CD8);
  }
  return result;
}

uint64_t destroy for ClinicalSharingPausedItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72)) {
    swift_release();
  }

  return swift_release();
}

void *initializeWithCopy for ClinicalSharingPausedItem(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v7 = (void *)a2[4];
  uint64_t v6 = a2[5];
  a1[4] = v7;
  a1[5] = v6;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  a1[8] = a2[8];
  unint64_t v10 = a2 + 9;
  uint64_t v9 = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    uint64_t v12 = a2[10];
    a1[9] = v9;
    a1[10] = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 9) = *v10;
  }
  uint64_t v13 = (void *)a2[11];
  uint64_t v14 = a2[12];
  a1[11] = v13;
  a1[12] = v14;
  id v15 = v13;
  swift_retain();
  return a1;
}

void *assignWithCopy for ClinicalSharingPausedItem(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[9];
  if (!a1[9])
  {
    if (v7)
    {
      uint64_t v9 = a2[10];
      a1[9] = v7;
      a1[10] = v9;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = a2[10];
  a1[9] = v7;
  a1[10] = v8;
  swift_retain();
  swift_release();
LABEL_8:
  unint64_t v10 = (void *)a2[11];
  id v11 = (void *)a1[11];
  a1[11] = v10;
  id v12 = v10;

  a1[12] = a2[12];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for ClinicalSharingPausedItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  long long v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 72))
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v8;
      *(void *)(a1 + 80) = v10;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  swift_release();
LABEL_8:

  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingPausedItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingPausedItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalSharingPausedItem()
{
  return &type metadata for ClinicalSharingPausedItem;
}

uint64_t AccountStateProvider.requiresOnboardingPublisher.getter()
{
  return swift_retain();
}

uint64_t AccountStateProvider.accountStatePublisher.getter()
{
  return swift_retain();
}

uint64_t AccountStateProvider.ingestionStatePublisher.getter()
{
  return swift_retain();
}

uint64_t AccountStateProvider.indexManagerStatePublisher.getter()
{
  return swift_retain();
}

uint64_t sub_1C2510990()
{
  uint64_t v1 = v0;
  unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F1AC60];
  sub_1C2511228(0, &qword_1EBB6F448, (unint64_t *)&qword_1EBB6F9D0, (uint64_t)&type metadata for HealthRecordsSupportedChange, MEMORY[0x1E4F1AC60]);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  uint64_t v31 = v4;
  MEMORY[0x1F4188790]();
  uint64_t v6 = (char *)&v27 - v5;
  sub_1C2511228(0, &qword_1EBB6F458, (unint64_t *)&qword_1EBB6FA00, (uint64_t)&type metadata for AccountStateChange, v2);
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)&v27 - v8;
  sub_1C2511290();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v32 = v10;
  uint64_t v33 = v11;
  MEMORY[0x1F4188790]();
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2511424();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v34 = v14;
  uint64_t v35 = v15;
  MEMORY[0x1F4188790]();
  uint64_t v29 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(v1 + 64), sel_addAccountStateChangeListener_, *(void *)(v1 + 80));
  objc_msgSend(*(id *)(v1 + 48), sel_addHealthRecordsSupportedChangeListener_, *(void *)(v1 + 88));
  objc_msgSend(*(id *)(v1 + 56), sel_addIngestionStateListener_, *(void *)(v1 + 96));
  objc_msgSend(*(id *)(v1 + 72), sel_registerAsConceptObserver_onQueue_, *(void *)(v1 + 104), 0);
  swift_beginAccess();
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F1AC70];
  sub_1C2511228(0, &qword_1EBB6FA48, (unint64_t *)&qword_1EBB6FA00, (uint64_t)&type metadata for AccountStateChange, MEMORY[0x1E4F1AC70]);
  sub_1C254EB40();
  swift_endAccess();
  swift_beginAccess();
  sub_1C2511228(0, (unint64_t *)&unk_1EBB6FA38, (unint64_t *)&qword_1EBB6F9D0, (uint64_t)&type metadata for HealthRecordsSupportedChange, v17);
  sub_1C254EB40();
  swift_endAccess();
  sub_1C25113C0(&qword_1EBB6F450, &qword_1EBB6F458, (unint64_t *)&qword_1EBB6FA00, (uint64_t)&type metadata for AccountStateChange);
  sub_1C25113C0((unint64_t *)&unk_1EBB6F438, &qword_1EBB6F448, (unint64_t *)&qword_1EBB6F9D0, (uint64_t)&type metadata for HealthRecordsSupportedChange);
  uint64_t v18 = v28;
  uint64_t v19 = v30;
  sub_1C254EBF0();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v19);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v18);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1C2511530;
  *(void *)(v20 + 24) = v1;
  swift_retain();
  sub_1C254E9D0();
  uint64_t v21 = (uint64_t (*)(void, void, void, void))MEMORY[0x1E4F1AAE0];
  sub_1C2511BD0(0, &qword_1EBB6F3E0, MEMORY[0x1E4F1AAE0]);
  sub_1C2511614(&qword_1EBB6F378, (void (*)(uint64_t))sub_1C2511290);
  sub_1C21A5228((unint64_t *)&unk_1EBB6F3D0, &qword_1EBB6F3E0, v21);
  long long v22 = v29;
  uint64_t v23 = v32;
  sub_1C254ECD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v23);
  sub_1C2511614(&qword_1EBB6F398, (void (*)(uint64_t))sub_1C2511424);
  swift_retain();
  uint64_t v24 = v34;
  uint64_t v25 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v24);
  *(void *)(v1 + 112) = v25;
  return swift_release();
}

uint64_t sub_1C2510F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C21AD02C();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)(a3 + 64);
  *(void *)(swift_allocObject() + 16) = v9;
  uint64_t v10 = (uint64_t (*)(void, void, void, void))MEMORY[0x1E4F1AC28];
  sub_1C2511BD0(0, (unint64_t *)&qword_1EBB6F420, MEMORY[0x1E4F1AC28]);
  sub_1C21A5228(&qword_1EBB6F418, (unint64_t *)&qword_1EBB6F420, v10);
  id v11 = v9;
  sub_1C254EB10();
  sub_1C2511614(&qword_1EBB6F428, (void (*)(uint64_t))sub_1C21AD02C);
  uint64_t v12 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v12;
}

id *AccountStateProvider.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return v0;
}

uint64_t AccountStateProvider.__deallocating_deinit()
{
  AccountStateProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AccountStateProvider()
{
  return self;
}

uint64_t method lookup function for AccountStateProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountStateProvider);
}

void sub_1C2511228(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C22C67A8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C2511290()
{
  if (!qword_1EBB6F380)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F1AC60];
    sub_1C2511228(255, &qword_1EBB6F458, (unint64_t *)&qword_1EBB6FA00, (uint64_t)&type metadata for AccountStateChange, MEMORY[0x1E4F1AC60]);
    sub_1C2511228(255, &qword_1EBB6F448, (unint64_t *)&qword_1EBB6F9D0, (uint64_t)&type metadata for HealthRecordsSupportedChange, v0);
    sub_1C25113C0(&qword_1EBB6F450, &qword_1EBB6F458, (unint64_t *)&qword_1EBB6FA00, (uint64_t)&type metadata for AccountStateChange);
    sub_1C25113C0((unint64_t *)&unk_1EBB6F438, &qword_1EBB6F448, (unint64_t *)&qword_1EBB6F9D0, (uint64_t)&type metadata for HealthRecordsSupportedChange);
    unint64_t v1 = sub_1C254E8F0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB6F380);
    }
  }
}

uint64_t sub_1C25113C0(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2511228(255, a2, a3, a4, MEMORY[0x1E4F1AC60]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2511424()
{
  if (!qword_1EBB6F3A0)
  {
    uint64_t v0 = (uint64_t (*)(void, void, void, void))MEMORY[0x1E4F1AAE0];
    sub_1C2511BD0(255, &qword_1EBB6F3E0, MEMORY[0x1E4F1AAE0]);
    sub_1C2511290();
    sub_1C21A5228((unint64_t *)&unk_1EBB6F3D0, &qword_1EBB6F3E0, v0);
    sub_1C2511614(&qword_1EBB6F378, (void (*)(uint64_t))sub_1C2511290);
    unint64_t v1 = sub_1C254E950();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB6F3A0);
    }
  }
}

uint64_t sub_1C2511530(uint64_t a1, uint64_t a2)
{
  return sub_1C2510F7C(a1, a2, v2);
}

uint64_t sub_1C2511538()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2511570@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(a1, a1 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_1C25115A4()
{
  return sub_1C254EA70();
}

uint64_t sub_1C25115DC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2511614(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C251165C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F1AC70];
  sub_1C2511228(0, (unint64_t *)&unk_1EBB6FA38, (unint64_t *)&qword_1EBB6F9D0, (uint64_t)&type metadata for HealthRecordsSupportedChange, MEMORY[0x1E4F1AC70]);
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  MEMORY[0x1F4188790]();
  uint64_t v7 = (char *)&v34 - v6;
  sub_1C2511228(0, &qword_1EBB6FA48, (unint64_t *)&qword_1EBB6FA00, (uint64_t)&type metadata for AccountStateChange, v4);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v12 = (char *)&v34 - v11;
  LOBYTE(v41) = 0;
  sub_1C2511BD0(0, (unint64_t *)&qword_1EBB6F410, MEMORY[0x1E4F1ABB0]);
  swift_allocObject();
  *(void *)(v2 + 16) = sub_1C254EAA0();
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0A0]), sel_initWithHealthStore_, a1);
  *(void *)(v2 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67730]), sel_initWithHealthStore_, a1);
  *(void *)(v2 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67710]), sel_initWithHealthStore_, a1);
  *(void *)(v2 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AE08]), sel_initWithHealthStore_, a1);
  uint64_t v13 = (objc_class *)type metadata accessor for AccountStateChangeListener();
  uint64_t v14 = (char *)objc_allocWithZone(v13);
  uint64_t v15 = &v14[OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener__latestChange];
  id v41 = 0;
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  sub_1C22C67A8(0, (unint64_t *)&qword_1EBB6FA00);
  uint64_t v16 = v14;
  sub_1C254EB30();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v12, v9);
  uint64_t v17 = OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_changePublisher;
  sub_1C21A842C();
  swift_allocObject();
  *(void *)&v16[v17] = sub_1C254EA50();
  uint64_t v18 = &v16[OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_handler];
  *(void *)uint64_t v18 = nullsub_1;
  *((void *)v18 + 1) = 0;

  v40.receiver = v16;
  v40.super_class = v13;
  *(void *)(v2 + 80) = objc_msgSendSuper2(&v40, sel_init);
  uint64_t v19 = (objc_class *)type metadata accessor for HealthRecordsSupportedStateChangeListener();
  uint64_t v20 = (char *)objc_allocWithZone(v19);
  uint64_t v21 = &v20[OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener__latestChange];
  id v41 = 0;
  LOBYTE(v42) = 0;
  sub_1C22C67A8(0, (unint64_t *)&qword_1EBB6F9D0);
  long long v22 = v20;
  sub_1C254EB30();
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v21, v7, v36);
  uint64_t v23 = &v22[OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener_handler];
  *(void *)uint64_t v23 = nullsub_1;
  *((void *)v23 + 1) = 0;

  v39.receiver = v22;
  v39.super_class = v19;
  *(void *)(v2 + 88) = objc_msgSendSuper2(&v39, sel_init);
  uint64_t v24 = (objc_class *)type metadata accessor for IngestionStateChangeListener();
  id v25 = objc_allocWithZone(v24);
  id v41 = 0;
  LOBYTE(v42) = 1;
  sub_1C2511C88(0, (unint64_t *)&qword_1EBB6F1F0, (unint64_t *)&qword_1EBB6F208, type metadata accessor for HKClinicalIngestionState);
  swift_allocObject();
  uint64_t v26 = (char *)v25;
  *(void *)&v26[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_changePublisher] = sub_1C254EAA0();
  uint64_t v27 = &v26[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_handler];
  *(void *)uint64_t v27 = nullsub_1;
  *((void *)v27 + 1) = 0;

  v38.receiver = v26;
  v38.super_class = v24;
  *(void *)(v2 + 96) = objc_msgSendSuper2(&v38, sel_init);
  id v28 = objc_msgSend(*(id *)(v2 + 72), sel_currentConceptIndexerState);
  uint64_t v29 = (objc_class *)type metadata accessor for IndexManagerStateChangeListener();
  id v30 = objc_allocWithZone(v29);
  id v41 = v28;
  LOBYTE(v42) = 0;
  sub_1C2511C88(0, &qword_1EBB6F200, &qword_1EBB6F228, type metadata accessor for HKConceptIndexManagerState);
  swift_allocObject();
  uint64_t v31 = (char *)v30;
  *(void *)&v31[OBJC_IVAR____TtC15HealthRecordsUI31IndexManagerStateChangeListener_changePublisher] = sub_1C254EAA0();

  v37.receiver = v31;
  v37.super_class = v29;
  uint64_t v32 = (char *)objc_msgSendSuper2(&v37, sel_init);
  *(void *)(v2 + 104) = v32;
  *(void *)(v2 + 24) = *(void *)(*(void *)(v2 + 80)
                                   + OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_changePublisher);
  *(void *)(v2 + 32) = *(void *)(*(void *)(v2 + 96)
                                   + OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_changePublisher);
  *(void *)(v2 + 40) = *(void *)&v32[OBJC_IVAR____TtC15HealthRecordsUI31IndexManagerStateChangeListener_changePublisher];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C2510990();
  return v2;
}

void sub_1C2511BD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2511C34(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2511C88(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C2511C34(255, a3, a4);
    unint64_t v5 = sub_1C254EA90();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

id MedicationDispenseFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v5[OBJC_IVAR___HRMedicationDispenseFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR___HRMedicationDispenseFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_1C2511D64()
{
  uint64_t v1 = OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter);
  }
  else
  {
    unint64_t v4 = *(void **)(v0 + OBJC_IVAR___HRMedicationDispenseFormatter_store);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR___HRMedicationDispenseFormatter_context);
    uint64_t v6 = (objc_class *)type metadata accessor for MedicationDosageFormatter();
    objc_super v7 = (char *)objc_allocWithZone(v6);
    *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store] = v4;
    *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context] = v5;
    v13.receiver = v7;
    v13.super_class = v6;
    id v8 = v4;
    id v9 = objc_msgSendSuper2(&v13, sel_init);
    uint64_t v10 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_1C2511E34(void *a1)
{
  id v2 = objc_msgSend(a1, sel_dosages);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  id v3 = v2;
  sub_1C21AB51C(0, &qword_1EA2DFC10);
  uint64_t v4 = sub_1C254F710();

  id v5 = sub_1C2511D64();
  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    unint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t)sub_1C228FB74(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  unint64_t v12 = v6;
  sub_1C23199C8((uint64_t *)&v12);
  unint64_t v7 = v12;
  id v8 = v5;
  uint64_t v9 = sub_1C231AF3C(v7);
  swift_bridgeObjectRelease();
  swift_release();

  return v9;
}

id MedicationDispenseFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR___HRMedicationDispenseFormatter_store);
}

uint64_t MedicationDispenseFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR___HRMedicationDispenseFormatter_context);
}

id MedicationDispenseFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v2[OBJC_IVAR___HRMedicationDispenseFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR___HRMedicationDispenseFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MedicationDispenseFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

unint64_t sub_1C2511FE4(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___HRMedicationDispenseFormatter_context);
  if (v2 == 1)
  {
    return sub_1C2512EF4(a1);
  }
  else if (v2)
  {
    unint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C2512068(a1);
  }
  return result;
}

uint64_t sub_1C2512068(void *a1)
{
  sub_1C22EE4B0();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C256C4D0;
  *(void *)(inited + 32) = sub_1C25127BC(a1);
  *(void *)(inited + 40) = sub_1C253F788(a1);
  *(void *)(inited + 48) = sub_1C2512644(a1);
  *(void *)(inited + 56) = sub_1C25129E0(a1);
  *(void *)(inited + 64) = sub_1C2512B58(a1);
  *(void *)(inited + 72) = sub_1C2512CD0(a1);
  *(void *)(inited + 80) = sub_1C243F974(a1);
  sub_1C254F730();
  uint64_t v18 = MEMORY[0x1E4FBC860];
  id v3 = *(void **)(inited + 32);
  if (v3)
  {
    id v4 = v3;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v5 = *(void **)(inited + 40);
  if (v5)
  {
    id v6 = v5;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  unint64_t v7 = *(void **)(inited + 48);
  if (v7)
  {
    id v8 = v7;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v9 = *(void **)(inited + 56);
  if (v9)
  {
    id v10 = v9;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  unint64_t v11 = *(void **)(inited + 64);
  if (v11)
  {
    id v12 = v11;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  objc_super v13 = *(void **)(inited + 72);
  if (v13)
  {
    id v14 = v13;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v15 = *(void **)(inited + 80);
  if (v15)
  {
    id v16 = v15;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  swift_bridgeObjectRelease();
  return v18;
}

id MedicationDispenseFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MedicationDispenseFormatter.init()()
{
}

id MedicationDispenseFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDispenseFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C25124EC()
{
  return *(id *)(*v0 + OBJC_IVAR___HRMedicationDispenseFormatter_store);
}

uint64_t sub_1C2512500()
{
  return *(void *)(*v0 + OBJC_IVAR___HRMedicationDispenseFormatter_context);
}

id sub_1C2512514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = (objc_class *)type metadata accessor for MedicationDispenseFormatter();
  unint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR___HRMedicationDispenseFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v7[OBJC_IVAR___HRMedicationDispenseFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR___HRMedicationDispenseFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

unint64_t sub_1C2512594(void *a1)
{
  uint64_t v2 = *(void *)(*v1 + OBJC_IVAR___HRMedicationDispenseFormatter_context);
  if (v2 == 1)
  {
    return sub_1C2512EF4(a1);
  }
  else if (v2)
  {
    unint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C2512068(a1);
  }
  return result;
}

uint64_t type metadata accessor for MedicationDispenseFormatter()
{
  return self;
}

id sub_1C2512644(void *a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(a1, sel_earliestDosageDate, 0xE000000000000000);
  id v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  id v11 = sub_1C23898E0(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1C25127BC(void *a1)
{
  id v1 = objc_msgSend(a1, sel_quantityDispensed);
  id v2 = v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_displayString);

    uint64_t v4 = sub_1C254F470();
    unint64_t v6 = v5;

    uint64_t v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v7)
    {
      id v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v8 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      uint64_t v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v9, 0xE000000000000000);

      uint64_t v10 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v10);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

id sub_1C25129E0(void *a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(a1, sel_handOverDate, 0xE000000000000000);
  id v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  id v11 = sub_1C23898E0(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1C2512B58(void *a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(a1, sel_preparationDate, 0xE000000000000000);
  id v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  id v11 = sub_1C23898E0(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1C2512CD0(void *a1)
{
  id v1 = objc_msgSend(a1, sel_daysSupplyQuantity);
  id v2 = v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_displayString);

    uint64_t v4 = sub_1C254F470();
    unint64_t v6 = v5;

    uint64_t v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v7)
    {
      id v2 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v2, sel_setDisplayItemType_, 15);
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v8 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      uint64_t v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setTitle_, v9, 0xE000000000000000);

      uint64_t v10 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setSubtitle_, v10);

      objc_msgSend(v2, sel_setSeparatorStyle_, 0);
      objc_msgSend(v2, sel_setSeparatorHidden_, 0);
      objc_msgSend(v2, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v2;
}

unint64_t sub_1C2512EF4(void *a1)
{
  id v2 = sub_1C25127BC(a1);
  id v3 = sub_1C2512CD0(a1);
  unint64_t v11 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    id v4 = v2;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  if (v3)
  {
    id v5 = v3;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  unint64_t v6 = v11;

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v10 >= 2) {
      return v6;
    }
  }
  else if (*(uint64_t *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
    return v6;
  }
  uint64_t v7 = (void *)sub_1C243F974(a1);
  if (v7)
  {
    id v8 = v7;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    return v11;
  }
  return v6;
}

unint64_t sub_1C25130D0(uint64_t a1)
{
  unint64_t result = sub_1C25130F8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C25130F8()
{
  unint64_t result = qword_1EA2E4CF8;
  if (!qword_1EA2E4CF8)
  {
    type metadata accessor for MedicationDispenseFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4CF8);
  }
  return result;
}

uint64_t method lookup function for MedicationDispenseFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationDispenseFormatter);
}

uint64_t dispatch thunk of MedicationDispenseFormatter.structuredItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicationDispenseFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of MedicationDispenseFormatter.displayItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

id sub_1C25131E0()
{
  if (!objc_msgSend(self, sel_isAppleInternalInstall)) {
    return 0;
  }
  uint64_t v0 = (void *)sub_1C254F430();
  id v1 = (void *)sub_1C254F430();
  id v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_alertControllerWithTitle_message_preferredStyle_, v0, v1, 1);

  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v4 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(self, sel_actionWithTitle_style_handler_, v4, 0, 0, 0xE000000000000000);

  objc_msgSend(v2, sel_addAction_, v5);
  return v2;
}

id HealthRecordsNotAvailableViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    unint64_t v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

id HealthRecordsNotAvailableViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    id v5 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for HealthRecordsNotAvailableViewController();
  id v6 = objc_msgSendSuper2(&v8, sel_initWithNibName_bundle_, v5, a3);

  return v6;
}

uint64_t type metadata accessor for HealthRecordsNotAvailableViewController()
{
  return self;
}

id HealthRecordsNotAvailableViewController.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id HealthRecordsNotAvailableViewController.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for HealthRecordsNotAvailableViewController();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id HealthRecordsNotAvailableViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthRecordsNotAvailableViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for HealthRecordsNotAvailableViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthRecordsNotAvailableViewController);
}

uint64_t dispatch thunk of static HealthRecordsNotAvailableViewController.presentableInstance()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t BrowseCategory.sidebarFeedItemIdentifier.getter()
{
  uint64_t v1 = sub_1C254F540();
  sub_1C254F5A0();
  sub_1C25178E0();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v1;
}

id BrowseCategory.image.getter()
{
  return sub_1C25140EC((void (*)(void))sub_1C2517664, &qword_1EBB6EFC0, (id *)&qword_1EBB70018);
}

id BrowseCategory.tintColorForTemplateImage.getter()
{
  uint64_t v1 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v1);
  id v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C21A9698(v0, (uint64_t)v3);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload > 8) {
    goto LABEL_16;
  }
  if (((1 << EnumCaseMultiPayload) & 0xDC) != 0)
  {
    if (qword_1EBB6D8B0 != -1) {
      swift_once();
    }
    id v5 = (id)qword_1EBB6EEB0;
LABEL_6:
    id v6 = v5;
    return v5;
  }
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 8)
    {
      if (qword_1EA2DD728 != -1) {
        swift_once();
      }
      id v5 = (id)qword_1EA2E2548;
      goto LABEL_6;
    }
LABEL_16:
    sub_1C2268C64((uint64_t)v3);
    return 0;
  }
  uint64_t v8 = *v3;
  unint64_t v9 = sub_1C21A9468();
  if (*(void *)(v9 + 16))
  {
    uint64_t v10 = sub_1C21A93C4(v8);
    if (v11)
    {
      uint64_t v12 = *(void *)(v9 + 56) + 72 * v10;
      objc_super v13 = *(void **)(v12 + 8);
      id v14 = *(void **)(v12 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v15 = v14;
      id v5 = v13;
      swift_bridgeObjectRelease();
LABEL_19:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  swift_bridgeObjectRelease();
  id result = objc_msgSend(self, sel_unknownRecordCategory);
  if (result)
  {
    sub_1C21AA50C(result, (uint64_t)v17);
    id v5 = v18;
    id v15 = v19;
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

id BrowseCategory.systemImage.getter()
{
  BrowseCategory.systemImageName.getter();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(self, sel_systemImageNamed_, v1);

  if (!v2) {
    return 0;
  }
  id v3 = objc_msgSend(v2, sel_imageWithRenderingMode_, 1);

  return v3;
}

uint64_t BrowseCategory.localizedTitle.getter()
{
  uint64_t v1 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v1);
  id v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C21A9698(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C21FD4EC();
      uint64_t v10 = *(void *)&v3[*(int *)(v14 + 48)];
      uint64_t v15 = sub_1C254CB40();
      (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v15 - 8) + 8))(v3, v15);
      return v10;
    case 2u:
    case 6u:
    case 7u:
      if (qword_1EBB6EF40 != -1) {
        goto LABEL_22;
      }
      goto LABEL_13;
    case 3u:
      if (qword_1EBB6EF40 == -1) {
        goto LABEL_13;
      }
      goto LABEL_22;
    case 4u:
      if (qword_1EBB6EF40 == -1) {
        goto LABEL_13;
      }
      goto LABEL_22;
    case 5u:
      if (qword_1EBB6EF40 == -1) {
        goto LABEL_13;
      }
LABEL_22:
      swift_once();
LABEL_13:
      id v16 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      goto LABEL_17;
    case 8u:
      if (qword_1EBB6EF38 != -1) {
        swift_once();
      }
      id v16 = (id)qword_1EBB6FBB0;
      swift_bridgeObjectRetain();
LABEL_17:
      uint64_t v10 = sub_1C254C730();
      swift_bridgeObjectRelease();

      break;
    default:
      uint64_t v4 = *v3;
      unint64_t v5 = sub_1C21A9468();
      if (*(void *)(v5 + 16) && (uint64_t v6 = sub_1C21A93C4(v4), (v7 & 1) != 0))
      {
        uint64_t v8 = (void *)(*(void *)(v5 + 56) + 72 * v6);
        unint64_t v9 = (void *)v8[1];
        uint64_t v10 = v8[4];
        char v11 = (void *)v8[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v12 = v11;
        id v13 = v9;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        id v18 = objc_msgSend(self, sel_unknownRecordCategory);
        if (!v18)
        {
          __break(1u);
          JUMPOUT(0x1C2513E88);
        }
        sub_1C21AA50C(v18, (uint64_t)v20);
        id v13 = v21;
        uint64_t v10 = v22;
        id v12 = v23;
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      break;
  }
  return v10;
}

unint64_t BrowseCategory.systemImageName.getter()
{
  uint64_t v1 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v1);
  id v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C21A9698(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 8)
    {
      return 0x696C632E7473696CLL;
    }
    else if (EnumCaseMultiPayload == 4)
    {
      return 0xD000000000000012;
    }
    else
    {
      sub_1C2268C64((uint64_t)v3);
      return 0;
    }
  }
  else
  {
    uint64_t v6 = *v3;
    unint64_t v7 = sub_1C21A9468();
    if (*(void *)(v7 + 16) && (uint64_t v8 = sub_1C21A93C4(v6), (v9 & 1) != 0))
    {
      uint64_t v10 = *(void *)(v7 + 56) + 72 * v8;
      char v11 = *(unsigned char *)v10;
      id v12 = *(void **)(v10 + 8);
      id v13 = *(void **)(v10 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v14 = v13;
      id v15 = v12;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t result = (unint64_t)objc_msgSend(self, sel_unknownRecordCategory);
      if (!result)
      {
        __break(1u);
        return result;
      }
      sub_1C21AA50C((void *)result, (uint64_t)v17);
      char v11 = v17[0];
      id v15 = v18;
      id v14 = v19;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v16[7] = v11;
    return DisplayCategory.Kind.systemImageName.getter();
  }
}

id BrowseCategory.coloredImage.getter()
{
  return sub_1C25140EC((void (*)(void))BrowseCategory.coloredImageName.getter, &qword_1EBB6EFD0, (id *)&qword_1EBB70020);
}

id sub_1C25140EC(void (*a1)(void), void *a2, id *a3)
{
  a1();
  id v6 = v5;
  if (v5)
  {
    if (*a2 != -1) {
      swift_once();
    }
    id v7 = *a3;
    uint64_t v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v8, v7, 0);
  }
  return v6;
}

uint64_t sub_1C25141B4()
{
  sub_1C254C400();
  swift_allocObject();
  uint64_t result = sub_1C254C3F0();
  qword_1EA2E4D00 = result;
  return result;
}

uint64_t static BrowseCategory.account(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C21FD4EC();
  unint64_t v5 = (uint64_t *)(a2 + *(int *)(v4 + 48));
  id v6 = objc_msgSend(a1, sel_identifier);
  sub_1C254CB20();

  id v7 = objc_msgSend(a1, sel_title);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  uint64_t *v5 = v8;
  v5[1] = v10;
  type metadata accessor for BrowseCategory();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C25142B4()
{
  uint64_t result = sub_1C25142D4();
  qword_1EBB6F568 = result;
  return result;
}

uint64_t sub_1C25142D4()
{
  uint64_t v0 = type metadata accessor for BrowseCategory();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C25184D0((uint64_t)&unk_1F1D8E218, (uint64_t)&unk_1F1D8EF78);
  int64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C2274D28(0, v5, 0);
    uint64_t v6 = 0;
    uint64_t v7 = v12;
    do
    {
      *id v3 = *(unsigned char *)(v4 + v6 + 32);
      swift_storeEnumTagMultiPayload();
      uint64_t v12 = v7;
      unint64_t v9 = *(void *)(v7 + 16);
      unint64_t v8 = *(void *)(v7 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1C2274D28(v8 > 1, v9 + 1, 1);
        uint64_t v7 = v12;
      }
      ++v6;
      *(void *)(v7 + 16) = v9 + 1;
      sub_1C2207DD8((uint64_t)v3, v7+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v9);
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x1E4FBC860];
  }
  sub_1C21ACA98(0, &qword_1EBB6FA58, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C255CD90;
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = v10;
  sub_1C21ABEDC(v7);
  return v12;
}

uint64_t static BrowseCategory.allCasesExceptAccounts.getter()
{
  if (qword_1EBB6D870 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static BrowseCategory.allCasesExceptAccounts.setter(uint64_t a1)
{
  if (qword_1EBB6D870 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EBB6F568 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static BrowseCategory.allCasesExceptAccounts.modify())()
{
  if (qword_1EBB6D870 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static BrowseCategory.regularSubcategories.getter()
{
  uint64_t v0 = type metadata accessor for BrowseCategory();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB6D880 != -1) {
    swift_once();
  }
  uint64_t v4 = off_1EBB6F578;
  int64_t v5 = *((void *)off_1EBB6F578 + 2);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C2274D28(0, v5, 0);
    uint64_t v7 = 0;
    uint64_t v6 = v12;
    do
    {
      *id v3 = v4[v7 + 32];
      swift_storeEnumTagMultiPayload();
      uint64_t v12 = v6;
      unint64_t v9 = *(void *)(v6 + 16);
      unint64_t v8 = *(void *)(v6 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1C2274D28(v8 > 1, v9 + 1, 1);
        uint64_t v6 = v12;
      }
      ++v7;
      *(void *)(v6 + 16) = v9 + 1;
      sub_1C2207DD8((uint64_t)v3, v6+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * v9);
    }
    while (v5 != v7);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1C2514840()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2514894()
{
  return sub_1C254F570();
}

uint64_t sub_1C25148AC()
{
  return sub_1C2550A10();
}

uint64_t sub_1C25148FC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C25506C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1C2514950(void *a1@<X8>)
{
  *a1 = 0x65756C6156776172;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1C251496C()
{
  return 0x65756C6156776172;
}

uint64_t sub_1C2514984@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1C25506C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1C25149DC(uint64_t a1)
{
  unint64_t v2 = sub_1C2518600();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2514A18(uint64_t a1)
{
  unint64_t v2 = sub_1C2518600();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t BrowseCategory.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  uint64_t v36 = v5;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21ACA98(0, (unint64_t *)&unk_1EBB6F4F0, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v32 - v9;
  sub_1C2518718(0, &qword_1EBB6EED0, MEMORY[0x1E4FBBDC0]);
  uint64_t v12 = v11;
  uint64_t v38 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v32 - v13;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C2518600();
  sub_1C2550A50();
  if (v2)
  {
LABEL_8:
    uint64_t v29 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1Tm(v29);
  }
  uint64_t v15 = v37;
  uint64_t v34 = a1;
  uint64_t v16 = sub_1C2550710();
  uint64_t v17 = v38;
  uint64_t v18 = v16;
  unint64_t v20 = v19;
  swift_bridgeObjectRetain();
  BrowseCategory.init(rawValue:)(v18, v20, (uint64_t)v10);
  uint64_t v21 = type metadata accessor for BrowseCategory();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v10, 1, v21) == 1)
  {
    uint64_t v37 = v18;
    uint64_t v33 = v14;
    sub_1C2518654((uint64_t)v10, (unint64_t *)&unk_1EBB6F4F0, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory);
    uint64_t v22 = v7;
    sub_1C254E4F0();
    unint64_t v23 = v20;
    swift_bridgeObjectRetain_n();
    uint64_t v24 = sub_1C254E550();
    os_log_type_t v25 = sub_1C254FA20();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v40 = v27;
      *(_DWORD *)uint64_t v26 = 136446210;
      uint64_t v32 = v26 + 4;
      swift_bridgeObjectRetain();
      uint64_t v28 = v37;
      uint64_t v39 = sub_1C21AD354(v37, v23, &v40);
      uint64_t v17 = v38;
      sub_1C2550120();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C21A1000, v24, v25, "Unable to decode BrowseCategory from rawValue: %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v27, -1, -1);
      MEMORY[0x1C875A0B0](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v35);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v35);
      uint64_t v28 = v37;
    }
    sub_1C25186C4();
    swift_allocError();
    *id v30 = v28;
    v30[1] = v23;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v33, v12);
    a1 = v34;
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v12);
  swift_bridgeObjectRelease();
  sub_1C2207DD8((uint64_t)v10, v15);
  uint64_t v29 = (uint64_t)v34;
  return __swift_destroy_boxed_opaque_existential_1Tm(v29);
}

uint64_t BrowseCategory.init(rawValue:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v5 = sub_1C254E560();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  uint64_t v42 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v41 - v10;
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v41 - v13;
  sub_1C21ACA98(0, (unint64_t *)&unk_1EBB6F4F0, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  unint64_t v20 = (char *)&v41 - v19;
  uint64_t v44 = type metadata accessor for BrowseCategory();
  uint64_t v21 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  unint64_t v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 != 0xD000000000000011 || a2 != 0x80000001C258AA70)
    && (sub_1C2550870() & 1) == 0
    && (a1 != 0xD000000000000010 || a2 != 0x80000001C258AA90)
    && (sub_1C2550870() & 1) == 0
    && (a1 != 0x73746E756F636361 || a2 != 0xEE00726564616548)
    && (sub_1C2550870() & 1) == 0
    && (a1 != 0x756F636341646461 || a2 != 0xEA0000000000746ELL)
    && (sub_1C2550870() & 1) == 0
    && (a1 != 0xD000000000000011 || a2 != 0x80000001C258AAB0)
    && (sub_1C2550870() & 1) == 0
    && (a1 != 0xD000000000000011 || a2 != 0x80000001C258AAD0)
    && (sub_1C2550870() & 1) == 0)
  {
    if (a1 == 0xD00000000000001DLL && a2 == 0x80000001C258AAF0 || (sub_1C2550870() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = v43;
      uint64_t v24 = v44;
      swift_storeEnumTagMultiPayload();
      goto LABEL_5;
    }
    if (sub_1C254F610())
    {
      swift_bridgeObjectRetain();
      sub_1C2516300(a1, a2, v20);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v44) == 1)
      {
        sub_1C2518654((uint64_t)v20, (unint64_t *)&unk_1EBB6F4F0, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory);
        sub_1C254E4F0();
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_1C254E550();
        os_log_type_t v29 = sub_1C254FA20();
        if (os_log_type_enabled(v28, v29))
        {
          id v30 = (uint8_t *)swift_slowAlloc();
          uint64_t v31 = swift_slowAlloc();
          uint64_t v46 = v31;
          *(_DWORD *)id v30 = 136642819;
          swift_bridgeObjectRetain();
          uint64_t v45 = sub_1C21AD354(a1, a2, &v46);
          sub_1C2550120();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C21A1000, v28, v29, "Invalid subcategory: %{sensitive}s", v30, 0xCu);
          uint64_t v26 = 1;
          swift_arrayDestroy();
          MEMORY[0x1C875A0B0](v31, -1, -1);
          MEMORY[0x1C875A0B0](v30, -1, -1);

          (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v41);
LABEL_48:
          uint64_t v25 = v43;
          uint64_t v24 = v44;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v25, v26, 1, v24);
        }

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v41);
        goto LABEL_47;
      }
      swift_bridgeObjectRelease();
      uint64_t v36 = (uint64_t)v20;
    }
    else
    {
      if ((sub_1C254F610() & 1) == 0)
      {
        sub_1C254E4F0();
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_1C254E550();
        os_log_type_t v38 = sub_1C254FA20();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = (uint8_t *)swift_slowAlloc();
          uint64_t v40 = swift_slowAlloc();
          uint64_t v46 = v40;
          *(_DWORD *)uint64_t v39 = 136642819;
          swift_bridgeObjectRetain();
          uint64_t v45 = sub_1C21AD354(a1, a2, &v46);
          sub_1C2550120();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C21A1000, v37, v38, "Invalid browseCategoryRawValue: %{sensitive}s", v39, 0xCu);
          uint64_t v26 = 1;
          swift_arrayDestroy();
          MEMORY[0x1C875A0B0](v40, -1, -1);
          MEMORY[0x1C875A0B0](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v41);
          goto LABEL_48;
        }

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v41);
        goto LABEL_47;
      }
      swift_bridgeObjectRetain();
      sub_1C25167E4(a1, a2, v17);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v44) == 1)
      {
        sub_1C2518654((uint64_t)v17, (unint64_t *)&unk_1EBB6F4F0, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory);
        sub_1C254E4F0();
        swift_bridgeObjectRetain();
        uint64_t v32 = sub_1C254E550();
        os_log_type_t v33 = sub_1C254FA20();
        if (os_log_type_enabled(v32, v33))
        {
          uint64_t v34 = (uint8_t *)swift_slowAlloc();
          uint64_t v35 = swift_slowAlloc();
          uint64_t v46 = v35;
          *(_DWORD *)uint64_t v34 = 136642819;
          swift_bridgeObjectRetain();
          uint64_t v45 = sub_1C21AD354(a1, a2, &v46);
          sub_1C2550120();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C21A1000, v32, v33, "Invalid account: %{sensitive}s", v34, 0xCu);
          uint64_t v26 = 1;
          swift_arrayDestroy();
          MEMORY[0x1C875A0B0](v35, -1, -1);
          MEMORY[0x1C875A0B0](v34, -1, -1);

          (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v41);
          goto LABEL_48;
        }

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v41);
LABEL_47:
        uint64_t v26 = 1;
        goto LABEL_48;
      }
      swift_bridgeObjectRelease();
      uint64_t v36 = (uint64_t)v17;
    }
    sub_1C2207DD8(v36, (uint64_t)v23);
    uint64_t v25 = v43;
    uint64_t v24 = v44;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = v44;
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v43;
LABEL_5:
  sub_1C2207DD8((uint64_t)v23, v25);
  uint64_t v26 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v25, v26, 1, v24);
}

uint64_t BrowseCategory.encode(to:)(void *a1)
{
  sub_1C2518718(0, &qword_1EBB6F9A8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C2518600();
  sub_1C2550A70();
  BrowseCategory.rawValue.getter();
  sub_1C25507A0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return swift_bridgeObjectRelease();
}

unint64_t BrowseCategory.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000011;
  uint64_t v2 = sub_1C254E560();
  uint64_t v28 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = sub_1C254F4E0();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = sub_1C254C430();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v5 = sub_1C254CB40();
  uint64_t v29 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C21A9698(v0, (uint64_t)v10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C21FD4EC();
      uint64_t v13 = &v10[*(int *)(v12 + 48)];
      unint64_t v15 = *(void *)v13;
      uint64_t v14 = *((void *)v13 + 1);
      unint64_t v27 = v15;
      uint64_t v26 = v14;
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v29 + 32))(v7, v10, v5);
      sub_1C254C470();
      swift_allocObject();
      sub_1C254C460();
      sub_1C254C410();
      sub_1C254C440();
      sub_1C21ACA98(0, (unint64_t *)&qword_1EA2DE7B8, (uint64_t (*)(uint64_t))sub_1C251877C, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C255D0E0;
      *(void *)(inited + 32) = 1684957547;
      *(void *)(inited + 40) = 0xE400000000000000;
      *(void *)(inited + 48) = 0x746E756F636361;
      *(void *)(inited + 56) = 0xE700000000000000;
      *(void *)(inited + 64) = 25705;
      *(void *)(inited + 72) = 0xE200000000000000;
      *(void *)(inited + 80) = sub_1C254CAF0();
      *(void *)(inited + 88) = v17;
      *(void *)(inited + 96) = 0x656C746974;
      *(void *)(inited + 104) = 0xE500000000000000;
      uint64_t v18 = v26;
      *(void *)(inited + 112) = v27;
      *(void *)(inited + 120) = v18;
      v30[0] = sub_1C2203AFC(inited);
      sub_1C2270334();
      sub_1C22D8194(&qword_1EA2E0430);
      uint64_t v19 = sub_1C254C450();
      unint64_t v27 = v20;
      uint64_t v21 = v19;
      swift_bridgeObjectRelease();
      sub_1C254F4C0();
      unint64_t v22 = v27;
      sub_1C254F490();
      if (!v23)
      {
        __break(1u);
        JUMPOUT(0x1C25162DCLL);
      }
      strcpy((char *)v30, "account: ");
      WORD1(v30[1]) = 0;
      HIDWORD(v30[1]) = -385875968;
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      sub_1C2205E6C(v21, v22);
      swift_release();
      unint64_t v1 = v30[0];
      (*(void (**)(unsigned char *, uint64_t))(v29 + 8))(v7, v5);
      break;
    case 2u:
      unint64_t v1 = 0xD00000000000001DLL;
      break;
    case 3u:
    case 7u:
    case 8u:
      return v1;
    case 4u:
      unint64_t v1 = 0xD000000000000010;
      break;
    case 5u:
      unint64_t v1 = 0x73746E756F636361;
      break;
    case 6u:
      unint64_t v1 = 0x756F636341646461;
      break;
    default:
      uint64_t v11 = *v10;
      strcpy((char *)v30, "subcategory:");
      BYTE5(v30[1]) = 0;
      HIWORD(v30[1]) = -5120;
      v30[4] = v11;
      sub_1C2550810();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      unint64_t v1 = v30[0];
      break;
  }
  return v1;
}

uint64_t sub_1C2516300@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if ((sub_1C254F610() & 1) == 0) {
    goto LABEL_55;
  }
  uint64_t result = sub_1C254F610();
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C254F580();
    uint64_t v8 = sub_1C254F580();
    BOOL v9 = __OFSUB__(v7, v8);
    unint64_t v10 = v7 - v8;
    if (v9)
    {
      __break(1u);
      goto LABEL_69;
    }
    unint64_t v11 = sub_1C226267C(v10, a1, a2);
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x1C8757A30](v11, v13, v15, v17);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v19;
  }
  uint64_t v20 = HIBYTE(a2) & 0xF;
  uint64_t v21 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v22 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v22 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v22) {
    goto LABEL_55;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    Swift::Int v24 = (Swift::Int)sub_1C251816C(a1, a2, 10);
    char v26 = v44;
    swift_bridgeObjectRelease();
LABEL_48:
    if ((v26 & 1) == 0)
    {
      v45[0] = v24;
      if (a1 == sub_1C2550810() && a2 == v36)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v38 = sub_1C2550870();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v38 & 1) == 0) {
          goto LABEL_56;
        }
      }
      DisplayCategory.Kind.init(rawValue:)(v24);
      if (LOBYTE(v45[0]) && LOBYTE(v45[0]) != 11)
      {
        *a3 = v45[0];
        uint64_t v40 = type metadata accessor for BrowseCategory();
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(a3, 0, 1, v40);
      }
LABEL_56:
      uint64_t v39 = type metadata accessor for BrowseCategory();
      return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(a3, 1, 1, v39);
    }
LABEL_55:
    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0)
    {
      uint64_t v23 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
LABEL_13:
      Swift::Int v24 = (Swift::Int)sub_1C2518254(v23, v21, 10);
      char v26 = v25 & 1;
      goto LABEL_48;
    }
LABEL_69:
    uint64_t v23 = (unsigned __int8 *)sub_1C2550440();
    goto LABEL_13;
  }
  v45[0] = a1;
  v45[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v20) {
      goto LABEL_71;
    }
    if (v20 == 1 || (BYTE1(a1) - 48) > 9u) {
      goto LABEL_35;
    }
    Swift::Int v24 = (BYTE1(a1) - 48);
    if (v20 != 2)
    {
      if ((BYTE2(a1) - 48) > 9u) {
        goto LABEL_35;
      }
      Swift::Int v24 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
      uint64_t v27 = v20 - 3;
      if (v27)
      {
        uint64_t v28 = (unsigned __int8 *)v45 + 3;
        while (1)
        {
          unsigned int v29 = *v28 - 48;
          if (v29 > 9) {
            goto LABEL_35;
          }
          uint64_t v30 = 10 * v24;
          if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63) {
            goto LABEL_35;
          }
          Swift::Int v24 = v30 + v29;
          if (__OFADD__(v30, v29)) {
            goto LABEL_35;
          }
          char v26 = 0;
          ++v28;
          if (!--v27) {
            goto LABEL_48;
          }
        }
      }
    }
LABEL_47:
    char v26 = 0;
    goto LABEL_48;
  }
  if (a1 != 45)
  {
    if (!v20 || (a1 - 48) > 9u) {
      goto LABEL_35;
    }
    Swift::Int v24 = (a1 - 48);
    if (v20 != 1)
    {
      if ((BYTE1(a1) - 48) > 9u) {
        goto LABEL_35;
      }
      Swift::Int v24 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
      uint64_t v31 = v20 - 2;
      if (v31)
      {
        uint64_t v32 = (unsigned __int8 *)v45 + 2;
        while (1)
        {
          unsigned int v33 = *v32 - 48;
          if (v33 > 9) {
            goto LABEL_35;
          }
          uint64_t v34 = 10 * v24;
          if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63) {
            goto LABEL_35;
          }
          Swift::Int v24 = v34 + v33;
          if (__OFADD__(v34, v33)) {
            goto LABEL_35;
          }
          char v26 = 0;
          ++v32;
          if (!--v31) {
            goto LABEL_48;
          }
        }
      }
    }
    goto LABEL_47;
  }
  if (v20)
  {
    if (v20 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      if (v20 == 2)
      {
        char v26 = 0;
        Swift::Int v24 = -(uint64_t)(BYTE1(a1) - 48);
        goto LABEL_48;
      }
      if ((BYTE2(a1) - 48) <= 9u)
      {
        Swift::Int v24 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
        uint64_t v35 = v20 - 3;
        if (!v35) {
          goto LABEL_47;
        }
        uint64_t v41 = (unsigned __int8 *)v45 + 3;
        while (1)
        {
          unsigned int v42 = *v41 - 48;
          if (v42 > 9) {
            break;
          }
          uint64_t v43 = 10 * v24;
          if ((unsigned __int128)(v24 * (__int128)10) >> 64 != (10 * v24) >> 63) {
            break;
          }
          Swift::Int v24 = v43 - v42;
          if (__OFSUB__(v43, v42)) {
            break;
          }
          char v26 = 0;
          ++v41;
          if (!--v35) {
            goto LABEL_48;
          }
        }
      }
    }
LABEL_35:
    Swift::Int v24 = 0;
    char v26 = 1;
    goto LABEL_48;
  }
  __break(1u);
LABEL_71:
  __break(1u);
  return result;
}

uint64_t sub_1C25167E4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v58 - v9;
  sub_1C21ACA98(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v61 = (char *)&v58 - v12;
  uint64_t v13 = sub_1C254CB40();
  uint64_t v62 = *(void *)(v13 - 8);
  uint64_t v63 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v60 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C254F4E0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1C254F610() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1C254E4F0();
    uint64_t v32 = sub_1C254E550();
    os_log_type_t v33 = sub_1C254FA20();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl(&dword_1C21A1000, v32, v33, "rawValue must start with 'account:'", v34, 2u);
      MEMORY[0x1C875A0B0](v34, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_11;
  }
  if (sub_1C254F610())
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1C254F580();
    uint64_t v20 = sub_1C254F580();
    BOOL v21 = __OFSUB__(v19, v20);
    unint64_t v22 = v19 - v20;
    if (v21)
    {
      __break(1u);
LABEL_29:
      swift_once();
      goto LABEL_7;
    }
    unint64_t v23 = sub_1C226267C(v22, a1, a2);
    uint64_t v25 = v24;
    uint64_t v58 = v6;
    uint64_t v59 = v7;
    char v26 = a3;
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    MEMORY[0x1C8757A30](v23, v25, v28, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a3 = v26;
  }
  sub_1C254F4C0();
  a1 = sub_1C254F480();
  unint64_t v19 = v31;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v19 >> 60 == 15)
  {
LABEL_11:
    uint64_t v35 = type metadata accessor for BrowseCategory();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a3, 1, 1, v35);
  }
  if (qword_1EA2DD918 != -1) {
    goto LABEL_29;
  }
LABEL_7:
  sub_1C2270334();
  sub_1C22D8194(&qword_1EA2E0420);
  uint64_t v59 = a1;
  sub_1C254C3E0();
  uint64_t v37 = v64;
  if (!*(void *)(v64 + 16))
  {
    uint64_t v46 = v59;
    goto LABEL_23;
  }
  unint64_t v38 = sub_1C21A6470(1684957547, 0xE400000000000000);
  uint64_t v39 = v59;
  if ((v40 & 1) == 0
    || ((uint64_t v41 = (void *)(*(void *)(v37 + 56) + 16 * v38), *v41 != 0x746E756F636361)
     || v41[1] != 0xE700000000000000)
    && (sub_1C2550870() & 1) == 0
    || !*(void *)(v37 + 16)
    || (sub_1C21A6470(25705, 0xE200000000000000), (v42 & 1) == 0))
  {
    uint64_t v46 = v39;
LABEL_23:
    sub_1C22071AC(v46, v19);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v43 = (uint64_t)v61;
  sub_1C254CAE0();
  swift_bridgeObjectRelease();
  uint64_t v44 = v62;
  uint64_t v45 = v63;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v43, 1, v63) == 1)
  {
    sub_1C22071AC(v59, v19);
    swift_bridgeObjectRelease();
    sub_1C2518654(v43, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
    goto LABEL_11;
  }
  id v47 = a3;
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 32);
  uint64_t v49 = v60;
  v48(v60, v43, v45);
  if (!*(void *)(v37 + 16) || (unint64_t v50 = sub_1C21A6470(0x656C746974, 0xE500000000000000), (v51 & 1) == 0))
  {
    sub_1C22071AC(v59, v19);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v45);
    a3 = v47;
    goto LABEL_11;
  }
  uint64_t v52 = (uint64_t *)(*(void *)(v37 + 56) + 16 * v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  swift_bridgeObjectRetain();
  sub_1C22071AC(v59, v19);
  swift_bridgeObjectRelease();
  sub_1C21FD4EC();
  uint64_t v56 = &v47[*(int *)(v55 + 48)];
  v48(v47, (uint64_t)v49, v45);
  *(void *)uint64_t v56 = v54;
  *((void *)v56 + 1) = v53;
  uint64_t v57 = type metadata accessor for BrowseCategory();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v47, 0, 1, v57);
}

uint64_t sub_1C2517138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseCategory.init(rawValue:)(*(void *)a1, *(void *)(a1 + 8), a2);
}

unint64_t sub_1C2517144@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = BrowseCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C251716C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BrowseCategory.init(from:)(a1, a2);
}

uint64_t sub_1C2517184(void *a1)
{
  sub_1C2518718(0, &qword_1EBB6F9A8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C2518600();
  sub_1C2550A70();
  BrowseCategory.rawValue.getter();
  sub_1C25507A0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C25172D4()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2517330()
{
  BrowseCategory.rawValue.getter();
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2517380()
{
  return sub_1C2550A10();
}

uint64_t sub_1C25173D8()
{
  unint64_t v0 = BrowseCategory.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == BrowseCategory.rawValue.getter() && v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1C2550870();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_1C2517468()
{
  qword_1EA2E4D08 = 0x4042000000000000;
}

double static BrowseCategory.defaultIconDimension.getter()
{
  if (qword_1EA2DD928 != -1) {
    swift_once();
  }
  return *(double *)&qword_1EA2E4D08;
}

unint64_t BrowseCategory.coloredImageName.getter()
{
  uint64_t v1 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21A9698(v0, (uint64_t)v3);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1C21FD4EC();
      swift_bridgeObjectRelease();
      uint64_t v6 = sub_1C254CB40();
      (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v3, v6);
      unint64_t result = 0;
      break;
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
      return result;
    case 4:
      unint64_t result = 0x655268746C616548;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      unint64_t result = qword_1C256F640[*v3];
      break;
  }
  return result;
}

unint64_t sub_1C2517664()
{
  uint64_t v1 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C21A9698(v0, (uint64_t)v3);
  unint64_t v4 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C21FD4EC();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_1C254CB40();
      (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v14 - 8) + 8))(v3, v14);
      goto LABEL_7;
    case 2u:
    case 3u:
    case 5u:
    case 6u:
    case 7u:
      return v4;
    case 4u:
      unint64_t v4 = 0xD00000000000001ALL;
      break;
    case 8u:
      unint64_t v4 = 0xD000000000000021;
      break;
    default:
      uint64_t v5 = *v3;
      if (v5 == 8)
      {
LABEL_7:
        unint64_t v4 = 0;
      }
      else
      {
        unint64_t v6 = sub_1C21A9468();
        if (*(void *)(v6 + 16) && (uint64_t v7 = sub_1C21A93C4(v5), (v8 & 1) != 0))
        {
          uint64_t v9 = (void *)(*(void *)(v6 + 56) + 72 * v7);
          unint64_t v10 = (void *)v9[1];
          unint64_t v4 = v9[2];
          uint64_t v11 = (void *)v9[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v12 = v11;
          id v13 = v10;
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          id v15 = objc_msgSend(self, sel_unknownRecordCategory);
          if (!v15)
          {
            __break(1u);
            JUMPOUT(0x1C25178BCLL);
          }
          sub_1C21AA50C(v15, (uint64_t)v18);
          id v13 = v19;
          unint64_t v4 = v20;
          id v12 = v21;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
  }
  return v4;
}

uint64_t sub_1C25178E0()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21A9698(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C21FD4EC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    unint64_t v11 = 0x2D746E756F636361;
    unint64_t v12 = 0xE800000000000000;
    sub_1C254CAF0();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    unint64_t v9 = v11;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    unint64_t v11 = BrowseCategory.rawValue.getter();
    unint64_t v12 = v8;
    return sub_1C254F620();
  }
  return v9;
}

uint64_t BrowseCategory.init(kind:)@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *a1;
  type metadata accessor for BrowseCategory();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static BrowseCategory.unreadableData.getter@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 8;
  type metadata accessor for BrowseCategory();
  return swift_storeEnumTagMultiPayload();
}

void *sub_1C2517BA0(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C237389C();
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1C2517C04(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1C254F600();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1C8757AE0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1C2517C80()
{
  unint64_t v0 = sub_1C254F630();
  uint64_t v4 = sub_1C2517D00(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C2517D00(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_1C2517E58(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_1C2517BA0(v9, 0);
      unint64_t v12 = sub_1C2517F58((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1C2550440();
LABEL_4:
        JUMPOUT(0x1C8757A70);
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1C8757A70](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1C8757A70]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1C2517E58(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    unint64_t result = sub_1C2517C04(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    unint64_t result = sub_1C2517C04(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  return sub_1C254F5E0();
}

unint64_t sub_1C2517F58(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_1C2517C04(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1C254F5F0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_1C2550440();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_1C2517C04(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1C254F5C0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unsigned __int8 *sub_1C251816C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C254F620();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1C2517C80();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_1C2550440();
  }
LABEL_7:
  uint64_t v11 = sub_1C2518254(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1C2518254(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1C25184D0(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 32;
  unsigned __int8 v6 = (unsigned __int8 *)(a2 + 32);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  do
  {
    if (v4 <= v2) {
      unint64_t v8 = v2;
    }
    else {
      unint64_t v8 = v4;
    }
    while (1)
    {
      if (v4 == v8)
      {
        __break(1u);
        return result;
      }
      int v9 = *(unsigned __int8 *)(v5 + v4++);
      uint64_t v10 = *(void *)(a2 + 16);
      if (!v10) {
        break;
      }
      unsigned int v11 = v6;
      while (1)
      {
        int v12 = *v11++;
        if (v12 == v9) {
          break;
        }
        if (!--v10) {
          goto LABEL_14;
        }
      }
      if (v4 == v2) {
        return v7;
      }
    }
LABEL_14:
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      unint64_t result = sub_1C2274FC0(0, *(void *)(v7 + 16) + 1, 1);
    }
    unint64_t v14 = *(void *)(v7 + 16);
    unint64_t v13 = *(void *)(v7 + 24);
    if (v14 >= v13 >> 1) {
      unint64_t result = sub_1C2274FC0(v13 > 1, v14 + 1, 1);
    }
    *(void *)(v7 + 16) = v14 + 1;
    *(unsigned char *)(v7 + v14 + 32) = v9;
  }
  while (v4 != v2);
  return v7;
}

unint64_t sub_1C2518600()
{
  unint64_t result = qword_1EBB6FAC0;
  if (!qword_1EBB6FAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6FAC0);
  }
  return result;
}

uint64_t sub_1C2518654(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C21ACA98(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C25186C4()
{
  unint64_t result = qword_1EA2E4D10;
  if (!qword_1EA2E4D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4D10);
  }
  return result;
}

void sub_1C2518718(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2518600();
    unint64_t v7 = a3(a1, &type metadata for BrowseCategory.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C251877C()
{
  if (!qword_1EA2DE7C0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DE7C0);
    }
  }
}

unint64_t sub_1C25187E4()
{
  unint64_t result = qword_1EBB6FAE0;
  if (!qword_1EBB6FAE0)
  {
    type metadata accessor for BrowseCategory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6FAE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseCategoryError()
{
  return &type metadata for BrowseCategoryError;
}

uint64_t *initializeBufferWithCopyOfBuffer for BrowseCategory(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1C254CB40();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      sub_1C21FD4EC();
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = (uint64_t *)((char *)a1 + v9);
      unsigned int v11 = (uint64_t *)((char *)a2 + v9);
      uint64_t v12 = v11[1];
      void *v10 = *v11;
      v10[1] = v12;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

char *assignWithCopy for BrowseCategory(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C2268C64((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C254CB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      sub_1C21FD4EC();
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = *((void *)v10 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

char *initializeWithTake for BrowseCategory(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C254CB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    sub_1C21FD4EC();
    *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for BrowseCategory(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C2268C64((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C254CB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      sub_1C21FD4EC();
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C2518C00()
{
  v2[4] = &unk_1C256F498;
  uint64_t result = sub_1C254CB40();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BrowseCategory.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2518D44);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BrowseCategory.CodingKeys()
{
  return &type metadata for BrowseCategory.CodingKeys;
}

unint64_t sub_1C2518D80()
{
  unint64_t result = qword_1EA2E4D18;
  if (!qword_1EA2E4D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4D18);
  }
  return result;
}

unint64_t sub_1C2518DD8()
{
  unint64_t result = qword_1EBB6FAD0;
  if (!qword_1EBB6FAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6FAD0);
  }
  return result;
}

unint64_t sub_1C2518E30()
{
  unint64_t result = qword_1EBB6FAC8;
  if (!qword_1EBB6FAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6FAC8);
  }
  return result;
}

double sub_1C2518E84()
{
  double result = 0.0;
  __asm { FMOV            V1.2D, #14.0 }
  xmmword_1EA303E00 = _Q1;
  *(_OWORD *)&qword_1EA303E10 = xmmword_1C255E100;
  return result;
}

void sub_1C2518EA0()
{
  qword_1EA303E20 = 0x4020000000000000;
}

id sub_1C2518EB0()
{
  uint64_t v1 = OBJC_IVAR___HRConceptHeaderCell____lazy_storage___bottomConstraint;
  unint64_t v2 = *(void **)&v0[OBJC_IVAR___HRConceptHeaderCell____lazy_storage___bottomConstraint];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR___HRConceptHeaderCell____lazy_storage___bottomConstraint];
  }
  else
  {
    id v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR___HRConceptHeaderCell_titleLabel], sel_bottomAnchor);
    id v5 = objc_msgSend(v0, sel_pillBackgroundView);
    id v6 = objc_msgSend(v5, sel_bottomAnchor);

    if (qword_1EA2DD930 != -1) {
      swift_once();
    }
    id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, *(double *)&qword_1EA303E10);

    uint64_t v8 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v7;
    id v3 = v7;

    unint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

void *sub_1C2518FD8()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___HRConceptHeaderCell_headerImage);
  swift_beginAccess();
  unint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1C2519084(void *a1)
{
}

void (*sub_1C25190A0(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  id v4 = (void **)(v1 + OBJC_IVAR___HRConceptHeaderCell_headerImage);
  swift_beginAccess();
  id v5 = *v4;
  v3[3] = *v4;
  id v6 = v5;
  return sub_1C2519128;
}

void sub_1C2519128(uint64_t a1, char a2)
{
}

uint64_t sub_1C25191CC()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___HRConceptHeaderCell_title);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C25192A4(uint64_t a1, uint64_t a2)
{
  id v5 = (uint64_t *)(v2 + OBJC_IVAR___HRConceptHeaderCell_title);
  swift_beginAccess();
  uint64_t result = *v5;
  uint64_t v7 = v5[1];
  uint64_t *v5 = a1;
  v5[1] = a2;
  if (v7)
  {
    if (a2)
    {
      BOOL v8 = result == a1 && v7 == a2;
      if (v8 || (sub_1C2550870() & 1) != 0) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  else if (!a2)
  {
    return result;
  }
  sub_1C251A1B0();
  return swift_bridgeObjectRelease();
}

void (*sub_1C2519348(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HRConceptHeaderCell_title;
  v3[5] = v1;
  v3[6] = v4;
  id v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[3] = *v5;
  v3[4] = v6;
  swift_bridgeObjectRetain();
  return sub_1C25193D0;
}

void sub_1C25193D0(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v5 = *(void *)(*(void *)a1 + 40);
  uint64_t v4 = *(void *)(*(void *)a1 + 48);
  uint64_t v6 = *(void *)(*(void *)a1 + 32);
  uint64_t v7 = (uint64_t *)(v5 + v4);
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  *uint64_t v7 = v3;
  v7[1] = v6;
  uint64_t v10 = (uint64_t *)(v2[5] + v2[6]);
  if (a2)
  {
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    swift_bridgeObjectRetain();
    if (v8)
    {
      if (v11)
      {
        BOOL v13 = v9 == v12 && v8 == v11;
        if (v13 || (sub_1C2550870() & 1) != 0) {
          goto LABEL_20;
        }
      }
      goto LABEL_19;
    }
    if (v11)
    {
LABEL_19:
      sub_1C251A1B0();
LABEL_20:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v14 = v10[1];
    if (v8)
    {
      if (v14)
      {
        BOOL v15 = v9 == *v10 && v8 == v14;
        if (v15 || (sub_1C2550870() & 1) != 0) {
          goto LABEL_24;
        }
      }
    }
    else if (!v14)
    {
      goto LABEL_25;
    }
    sub_1C251A1B0();
  }
LABEL_24:
  swift_bridgeObjectRelease();
LABEL_25:
  free(v2);
}

id sub_1C25194E8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = (id *)(a1 + *a3);
  swift_beginAccess();
  return *v3;
}

void *sub_1C2519530()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___HRConceptHeaderCell_categoryColor);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1C25195DC(void *a1)
{
}

void sub_1C25195F8(void *a1, void *a2, unint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v7 = (void **)(v5 + *a2);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = a1;
  id v9 = a1;
  if (!v8)
  {
    if (!a1)
    {
LABEL_7:
      id v10 = v8;
      goto LABEL_8;
    }
LABEL_6:
    sub_1C251A1B0();
    goto LABEL_7;
  }
  if (!a1) {
    goto LABEL_6;
  }
  sub_1C21AB51C(0, a3);
  id v10 = v8;
  id v11 = v9;
  char v12 = sub_1C254FF70();

  if ((v12 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_8:
}

void (*sub_1C25196CC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t v4 = (void **)(v1 + OBJC_IVAR___HRConceptHeaderCell_categoryColor);
  swift_beginAccess();
  uint64_t v5 = *v4;
  v3[3] = *v4;
  id v6 = v5;
  return sub_1C2519754;
}

void sub_1C2519754(uint64_t a1, char a2)
{
}

void sub_1C251976C(uint64_t a1, char a2, void (*a3)(id))
{
  uint64_t v4 = *(void **)a1;
  id v6 = (id *)(*(void *)a1 + 24);
  id v5 = *v6;
  if (a2)
  {
    id v7 = v5;
    a3(v5);
  }
  else
  {
    a3(*(id *)(*(void *)a1 + 24));
  }
  free(v4);
}

void sub_1C2519854()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ConceptHeaderCell();
  objc_msgSendSuper2(&v6, sel_setupSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___HRConceptHeaderCell_titleLabel];
  objc_msgSend(v1, sel_setNumberOfLines_, 0);
  objc_msgSend(v1, sel_setLineBreakMode_, 0);
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v2) = 1148846080;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 1, v2);
  id v3 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB2950], 1024);
  objc_msgSend(v1, sel_setFont_, v3);

  id v4 = objc_msgSend(v0, sel_pillBackgroundView);
  objc_msgSend(v4, sel_addSubview_, v1);

  id v5 = objc_msgSend(v0, sel_pillBackgroundView);
  objc_msgSend(v5, sel_addSubview_, *(void *)&v0[OBJC_IVAR___HRConceptHeaderCell_chevronView]);
}

void sub_1C25199F8()
{
  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for ConceptHeaderCell();
  objc_msgSendSuper2(&v25, sel_setUpConstraints);
  id v23 = self;
  sub_1C21ACA3C();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C25645D0;
  double v2 = *(void **)&v0[OBJC_IVAR___HRConceptHeaderCell_titleLabel];
  id v3 = objc_msgSend(v2, sel_leadingAnchor);
  id v4 = objc_msgSend(v0, sel_pillBackgroundView);
  id v5 = objc_msgSend(v4, sel_leadingAnchor);

  if (qword_1EA2DD930 != -1) {
    swift_once();
  }
  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, *((double *)&xmmword_1EA303E00 + 1), v23);

  *(void *)(v1 + 32) = v6;
  id v7 = objc_msgSend(v2, sel_topAnchor);
  id v8 = objc_msgSend(v0, sel_pillBackgroundView);
  id v9 = objc_msgSend(v8, sel_topAnchor);

  id v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v9, *(double *)&xmmword_1EA303E00);
  *(void *)(v1 + 40) = v10;
  *(void *)(v1 + 48) = sub_1C2518EB0();
  id v11 = objc_msgSend(v2, sel_trailingAnchor);
  char v12 = *(void **)&v0[OBJC_IVAR___HRConceptHeaderCell_chevronView];
  id v13 = objc_msgSend(v12, sel_leadingAnchor);
  if (qword_1EA2DD938 != -1) {
    swift_once();
  }
  id v14 = objc_msgSend(v11, sel_constraintLessThanOrEqualToAnchor_constant_, v13, -*(double *)&qword_1EA303E20);

  *(void *)(v1 + 56) = v14;
  id v15 = objc_msgSend(v12, sel_firstBaselineAnchor);
  id v16 = objc_msgSend(v2, sel_firstBaselineAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(void *)(v1 + 64) = v17;
  id v18 = objc_msgSend(v12, sel_trailingAnchor);
  id v19 = objc_msgSend(v0, sel_pillBackgroundView);
  id v20 = objc_msgSend(v19, sel_trailingAnchor);

  id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, -*(double *)&qword_1EA303E18);
  *(void *)(v1 + 72) = v21;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  unsigned __int8 v22 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_activateConstraints_, v22);
}

id sub_1C2519E84(id a1)
{
  id result = objc_msgSend(v1, sel_intendedPlacement);
  if (result != a1)
  {
    if ((a1 == (id)2) == (objc_msgSend(v1, sel_intendedPlacement) != (id)2))
    {
      id v4 = sub_1C2518EB0();
      if (qword_1EA2DD930 != -1) {
        swift_once();
      }
      double v5 = *(double *)&xmmword_1EA303E00;
      if (a1 != (id)2) {
        double v5 = -0.0;
      }
      objc_msgSend(v4, sel_setConstant_, *(double *)&qword_1EA303E10 - v5);
    }
    v6.receiver = v1;
    v6.super_class = (Class)type metadata accessor for ConceptHeaderCell();
    return objc_msgSendSuper2(&v6, sel_setIntendedPlacement_, a1);
  }
  return result;
}

void sub_1C251A02C(void *a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for ConceptHeaderCell();
  objc_msgSendSuper2(&v10, sel__traitCollectionDidChange_, a1);
  id v3 = objc_msgSend(v1, sel_traitCollection);
  objc_msgSend(v3, sel_displayScale);
  double v5 = v4;

  if (!a1) {
    goto LABEL_4;
  }
  objc_msgSend(a1, sel_displayScale);
  if (v5 != v6) {
    goto LABEL_4;
  }
  id v7 = objc_msgSend(v1, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

  LODWORD(v7) = sub_1C254FD50() & 1;
  id v9 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  LODWORD(v8) = sub_1C254FD50() & 1;

  if (v8 != v7) {
LABEL_4:
  }
    sub_1C251A1B0();
}

void sub_1C251A1B0()
{
  uint64_t v1 = (id *)&v0[OBJC_IVAR___HRConceptHeaderCell_headerImage];
  swift_beginAccess();
  if (*v1) {
    id v2 = objc_msgSend(*v1, sel_imageWithRenderingMode_, 2);
  }
  else {
    id v2 = 0;
  }
  id v3 = &v0[OBJC_IVAR___HRConceptHeaderCell_title];
  swift_beginAccess();
  if (!*((void *)v3 + 1))
  {

    objc_msgSend(*(id *)&v0[OBJC_IVAR___HRConceptHeaderCell_titleLabel], sel_setAttributedText_, 0);
    return;
  }
  if (!v2)
  {
    id v9 = *(void **)&v0[OBJC_IVAR___HRConceptHeaderCell_titleLabel];
    swift_bridgeObjectRetain();
    id v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setText_, v8);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  id v4 = objc_msgSend(v0, sel_traitCollection);
  id v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  char v6 = sub_1C254FD50();
  id v7 = *(void **)&v0[OBJC_IVAR___HRConceptHeaderCell_titleLabel];
  if (v6)
  {
    id v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setText_, v8);

LABEL_10:
    return;
  }
  id v10 = objc_msgSend(*(id *)&v0[OBJC_IVAR___HRConceptHeaderCell_titleLabel], sel_font);
  if (v10)
  {
    id v11 = v10;
    sub_1C21AB51C(0, &qword_1EA2E3C40);
    id v12 = objc_msgSend(v0, sel_traitCollection);
    objc_msgSend(v12, sel_displayScale);
    double v14 = v13;

    id v15 = (void **)&v0[OBJC_IVAR___HRConceptHeaderCell_categoryColor];
    swift_beginAccess();
    id v16 = *v15;
    id v17 = self;
    id v18 = v16;
    id v19 = objc_msgSend(v17, sel_labelColor);
    id v20 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v21 = v2;
    unsigned __int8 v22 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(v20, sel_initWithLeadingImage_text_font_displayScale_imageTintColor_textColor_adjustsImageSizeForAccessibilityContentSizeCategory_, v21, v22, v11, v18, v19, 1, v14);

    if (objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection) == (id)1)
    {
      id v24 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      objc_super v25 = (void *)sub_1C254F430();
      id v26 = objc_msgSend(v24, sel_initWithString_, v25);

      objc_msgSend(v23, sel_insertAttributedString_atIndex_, v26, 0);
    }
    objc_msgSend(v7, sel_setAttributedText_, v23);
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1C251A540()
{
  unint64_t result = qword_1EA2E4D38;
  if (!qword_1EA2E4D38)
  {
    type metadata accessor for ConceptHeaderCell();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E4D38);
  }
  return result;
}

uint64_t type metadata accessor for ConceptHeaderCell()
{
  return self;
}

id ConceptHeaderCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  if (a3)
  {
    char v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id ConceptHeaderCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR___HRConceptHeaderCell_titleLabel;
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  id v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_init);
  uint64_t v9 = OBJC_IVAR___HRConceptHeaderCell_chevronView;
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  objc_msgSend(v10, sel_setContentMode_, 4);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
  id v11 = (void *)sub_1C254FEF0();
  objc_msgSend(v10, sel_setImage_, v11);

  id v12 = objc_msgSend(self, sel_tertiaryLabelColor);
  objc_msgSend(v10, sel_setTintColor_, v12);

  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v13) = 1148846080;
  objc_msgSend(v10, sel_setContentHuggingPriority_forAxis_, 0, v13);
  LODWORD(v14) = 1148846080;
  objc_msgSend(v10, sel_setContentCompressionResistancePriority_forAxis_, 0, v14);
  *(void *)&v8[v9] = v10;
  *(void *)&v8[OBJC_IVAR___HRConceptHeaderCell____lazy_storage___bottomConstraint] = 0;
  *(void *)&v8[OBJC_IVAR___HRConceptHeaderCell_headerImage] = 0;
  id v15 = &v8[OBJC_IVAR___HRConceptHeaderCell_title];
  *(void *)id v15 = 0;
  *((void *)v15 + 1) = 0;
  *(void *)&v8[OBJC_IVAR___HRConceptHeaderCell_categoryColor] = 0;

  if (a3)
  {
    id v16 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v16 = 0;
  }
  v19.receiver = v8;
  v19.super_class = (Class)type metadata accessor for ConceptHeaderCell();
  id v17 = objc_msgSendSuper2(&v19, sel_initWithStyle_reuseIdentifier_, a1, v16);

  return v17;
}

id ConceptHeaderCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id ConceptHeaderCell.init(coder:)(void *a1)
{
  uint64_t v3 = OBJC_IVAR___HRConceptHeaderCell_titleLabel;
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  id v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  uint64_t v6 = OBJC_IVAR___HRConceptHeaderCell_chevronView;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  objc_msgSend(v7, sel_setContentMode_, 4);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
  id v8 = (void *)sub_1C254FEF0();
  objc_msgSend(v7, sel_setImage_, v8);

  id v9 = objc_msgSend(self, sel_tertiaryLabelColor);
  objc_msgSend(v7, sel_setTintColor_, v9);

  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v10) = 1148846080;
  objc_msgSend(v7, sel_setContentHuggingPriority_forAxis_, 0, v10);
  LODWORD(v11) = 1148846080;
  objc_msgSend(v7, sel_setContentCompressionResistancePriority_forAxis_, 0, v11);
  *(void *)&v5[v6] = v7;
  *(void *)&v5[OBJC_IVAR___HRConceptHeaderCell____lazy_storage___bottomConstraint] = 0;
  *(void *)&v5[OBJC_IVAR___HRConceptHeaderCell_headerImage] = 0;
  id v12 = &v5[OBJC_IVAR___HRConceptHeaderCell_title];
  *(void *)id v12 = 0;
  *((void *)v12 + 1) = 0;
  *(void *)&v5[OBJC_IVAR___HRConceptHeaderCell_categoryColor] = 0;

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for ConceptHeaderCell();
  id v13 = objc_msgSendSuper2(&v15, sel_initWithCoder_, a1);

  return v13;
}

id ConceptHeaderCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConceptHeaderCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C251ABF4@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___HRConceptHeaderCell_headerImage, a2);
}

void sub_1C251AC00(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_1C2519084(v1);
}

uint64_t sub_1C251AC30@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___HRConceptHeaderCell_title);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C251AC88(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1C25192A4(v1, v2);
}

id sub_1C251ACC8@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___HRConceptHeaderCell_categoryColor, a2);
}

void sub_1C251ACD4(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_1C25195DC(v1);
}

uint64_t method lookup function for ConceptHeaderCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConceptHeaderCell);
}

uint64_t dispatch thunk of ConceptHeaderCell.headerImage.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConceptHeaderCell.headerImage.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ConceptHeaderCell.headerImage.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ConceptHeaderCell.title.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ConceptHeaderCell.title.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ConceptHeaderCell.title.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ConceptHeaderCell.categoryColor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ConceptHeaderCell.categoryColor.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ConceptHeaderCell.categoryColor.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

id sub_1C251AEF0()
{
  type metadata accessor for ViewControllerFactory();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EBB70020 = (uint64_t)result;
  return result;
}

id static NSBundle.healthRecordsUI.getter()
{
  return sub_1C21A4D60(&qword_1EBB6EFD0, (void **)&qword_1EBB70020);
}

id sub_1C251AF6C(uint64_t a1)
{
  return sub_1C251AF88(a1, &qword_1EA2E4D60, 0x1E4F67868, &qword_1EA2E4D58);
}

id sub_1C251AF88(uint64_t a1, unint64_t *a2, uint64_t a3, void *a4)
{
  sub_1C21AB51C(0, a2);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  *a4 = result;
  return result;
}

id static NSBundle.healthToolbox.getter()
{
  return sub_1C21A4D60(&qword_1EA2DD948, (void **)&qword_1EA2E4D58);
}

id sub_1C251B004(uint64_t a1)
{
  return sub_1C251AF88(a1, (unint64_t *)&unk_1EBB6FFB0, 0x1E4F67C78, &qword_1EBB70018);
}

id static NSBundle.healthUI.getter()
{
  return sub_1C21A4D60(&qword_1EBB6EFC0, (void **)&qword_1EBB70018);
}

id BloodPressureChartSeries.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id BloodPressureChartSeries.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureChartSeries();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for BloodPressureChartSeries()
{
  return self;
}

id BloodPressureChartSeries.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureChartSeries();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ProfileOnboardingActionViewController.__allocating_init(context:)(char *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ProfileOnboardingActionViewController.init(context:)(a1);
}

uint64_t ProfileOnboardingActionViewController.init(context:)(char *a1)
{
  uint64_t v3 = sub_1C254DE00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v24 - v8;
  __n128 v11 = MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v24 - v12;
  double v14 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16);
  objc_super v25 = a1;
  v14((char *)&v24 - v12, (uint64_t)a1, v3, v11);
  uint64_t v15 = qword_1EBB6E3E8;
  uint64_t v16 = qword_1EBB6D858;
  id v17 = v1;
  if (v16 != -1) {
    swift_once();
  }
  id v18 = (void *)qword_1EBB6ED30;
  *(void *)&v17[v15] = qword_1EBB6ED30;
  objc_super v19 = &v17[qword_1EBB6E3E0];
  *(void *)objc_super v19 = 0;
  *((void *)v19 + 1) = 0;
  *((void *)v19 + 2) = 2;
  id v20 = v18;

  ((void (*)(char *, char *, uint64_t))v14)(v9, v13, v3);
  ((void (*)(char *, char *, uint64_t))v14)(v6, v9, v3);
  uint64_t v21 = sub_1C254E010();
  unsigned __int8 v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v9, v3);
  v22(v13, v3);
  v22(v25, v3);
  return v21;
}

id ProfileOnboardingActionViewController.__deallocating_deinit()
{
  return sub_1C251C184(type metadata accessor for ProfileOnboardingActionViewController);
}

uint64_t type metadata accessor for ProfileOnboardingActionViewController(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E4D68);
}

uint64_t sub_1C251B4A4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C251B4E4()
{
  return type metadata accessor for ProfileOnboardingActionViewController(0);
}

uint64_t type metadata accessor for OnboardingTableViewCell(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E4D88);
}

uint64_t sub_1C251B50C()
{
  return swift_initClassMetadata2();
}

void sub_1C251B564()
{
}

uint64_t sub_1C251B5C0()
{
  uint64_t v1 = v0;
  uint64_t v22 = sub_1C254D320();
  uint64_t v2 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v21 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C254CF90();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v20 - v8;
  sub_1C254D500();
  id v10 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v11 = sub_1C254D050();
  uint64_t v12 = qword_1EA2E4D78;
  id v13 = objc_msgSend(*(id *)(v1 + qword_1EA2E4D78), sel_healthStore);
  uint64_t v14 = sub_1C254D040();
  sub_1C251B8CC(*(void *)(v1 + qword_1EA2E4D80), *(void *)(v1 + qword_1EA2E4D80 + 8), (uint64_t)v9);
  id v15 = objc_msgSend(*(id *)(v1 + v12), sel_healthStore);
  uint64_t v25 = v11;
  uint64_t v26 = MEMORY[0x1E4F672C0];
  uint64_t v24 = v14;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v6, v9, v4);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v21, *MEMORY[0x1E4F66288], v22);
  v27[3] = sub_1C254DF80();
  v27[4] = MEMORY[0x1E4F66630];
  __swift_allocate_boxed_opaque_existential_1(v27);
  swift_retain();
  sub_1C254DF70();
  sub_1C254D4F0();
  uint64_t result = sub_1C254D4A0();
  if (result)
  {
    id v17 = (void *)result;
    id v18 = v10;
    sub_1C254E180();

    sub_1C254CF80();
    if (v19)
    {
      sub_1C254D4C0();
      swift_release();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v9, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C251B8CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v38 = a3;
  uint64_t v4 = sub_1C254CEF0();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v30 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1C254E560();
  v26[1] = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254D170();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1C254D1B0();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = qword_1EBB6EFD0;
  uint64_t v34 = a2;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v35 = v11;
  v26[0] = v7;
  id v13 = (id)qword_1EBB70020;
  sub_1C254D160();
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v14 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C254C730();
  uint64_t v31 = v16;
  uint64_t v32 = v15;
  swift_bridgeObjectRelease();

  id v17 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v18 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v19 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v20 = v35;
  sub_1C254D1A0();
  sub_1C254C470();
  swift_allocObject();
  sub_1C254C460();
  LOBYTE(v39) = 0;
  uint64_t v40 = v33;
  uint64_t v41 = v34;
  sub_1C2385850();
  uint64_t v21 = sub_1C254C450();
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C2205E14(v21, v23);
  uint64_t v24 = (void *)sub_1C254CF10();
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1C2550620()) {
    sub_1C251C4A4(MEMORY[0x1E4FBC860]);
  }
  type metadata accessor for ProfileOnboardingActionViewController(0);
  sub_1C251C44C();
  sub_1C254CF30();
  swift_bridgeObjectRelease();

  sub_1C2205E6C(v21, v23);
  sub_1C2205E6C(v21, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
}

void sub_1C251C0F8()
{
}

uint64_t sub_1C251C128()
{
  return swift_bridgeObjectRelease();
}

id sub_1C251C16C()
{
  return sub_1C251C184(type metadata accessor for OnboardingTableViewCell);
}

id sub_1C251C184(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1C251C1C4(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C251C214()
{
  return type metadata accessor for OnboardingTableViewCell(0);
}

id sub_1C251C21C()
{
  id v1 = objc_msgSend(*(id *)(*v0 + qword_1EA2E4D78), sel_healthStore);
  return v1;
}

uint64_t sub_1C251C260(unint64_t a1, unint64_t a2)
{
  sub_1C21AB51C(0, &qword_1EA2E0000);
  if (a2 >> 62)
  {
    uint64_t v4 = sub_1C2550640();
    self;
    if (swift_dynamicCastObjCClass()) {
      return v4;
    }
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      self;
      if (!swift_dynamicCastObjCClass()) {
        goto LABEL_10;
      }
      return v4;
    }
    __break(1u);
  }
LABEL_10:
  sub_1C25503A0();
  sub_1C254F5A0();
  sub_1C2550AA0();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_1C2550AA0();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C2550600();
  __break(1u);
  return result;
}

unint64_t sub_1C251C44C()
{
  unint64_t result = qword_1EA2E4D98;
  if (!qword_1EA2E4D98)
  {
    type metadata accessor for ProfileOnboardingActionViewController(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4D98);
  }
  return result;
}

void sub_1C251C4A4(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1C22B3A18();
      uint64_t v3 = sub_1C2550370();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v42 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = sub_1C251C260(v8, a1);
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v11 = v9;
      uint64_t v12 = sub_1C254FF60();
      uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        sub_1C21AB51C(0, &qword_1EA2E0000);
        id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
        char v19 = sub_1C254FF70();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          uint64_t v5 = v42;
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_1C254FF70();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v42;
      }
      *(void *)(v7 + 8 * v15) = v17 | v16;
      *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
      uint64_t v23 = *(void *)(v3 + 16);
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_38;
      }
      *(void *)(v3 + 16) = v24;
LABEL_12:
      if (v8 == v5) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = a1 + 32;
  uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_1C254FF60();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_1C21AB51C(0, &qword_1EA2E0000);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_1C254FF70();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_1C254FF70();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_39;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v42) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t dispatch thunk of DynamicViewProtocol.addSubviews()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DynamicViewProtocol.reloadFonts()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DynamicViewProtocol.reloadColors()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DynamicViewProtocol.apply(viewData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1C251C858()
{
  type metadata accessor for AccountActionCell();
  sub_1C251E4C4(&qword_1EA2E3740, v0, (void (*)(uint64_t))type metadata accessor for AccountActionCell);
  return sub_1C254D330();
}

uint64_t sub_1C251C8BC()
{
  uint64_t v1 = sub_1C2550AA0();
  sub_1C254F5A0();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C251C964(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v2 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate;
  uint64_t v7 = MEMORY[0x1C875A200](v6);
  uint64_t v8 = *(void *)(v6 + 8);
  if (v7)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = qword_1EBB6D9B0;
    swift_unknownObjectRetain();
    if (v10 != -1) {
      swift_once();
    }
    id v11 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C254C730();
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(v12, v14, ObjectType, v8);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v15 = v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v7;
  v16[3] = v8;
  v16[4] = a1;
  v16[5] = a2;
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C24D92E4(v15, (uint64_t)sub_1C251E39C, (uint64_t)v16);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_1C251CB44()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254E890();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionCell_item;
  swift_beginAccess();
  sub_1C2227014(v6, (uint64_t)v27);
  if (!v28) {
    return sub_1C2227100((uint64_t)v27);
  }
  sub_1C22270A8();
  type metadata accessor for AccountActionItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v8 = v26[1];
    MEMORY[0x1C87582A0]();
    swift_bridgeObjectRetain();
    sub_1C254E860();
    id v9 = *(id *)(v8 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelColor);
    uint64_t v10 = (void (*)(uint64_t *, void))sub_1C254E7A0();
    sub_1C254E780();
    v10(v27, 0);
    id v11 = *(id *)(v8 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelFont);
    uint64_t v12 = (void (*)(uint64_t *, void))sub_1C254E7A0();
    sub_1C254E770();
    v12(v27, 0);
    if (*(unsigned char *)(v8 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_shouldAlignWithImageInsetText) == 1)
    {
      id v13 = objc_msgSend(v1, sel_traitCollection);
      id v14 = objc_msgSend(v13, sel_preferredContentSizeCategory);

      LOBYTE(v13) = sub_1C254FD50();
      if ((v13 & 1) == 0)
      {
        if (qword_1EA2DD840 != -1) {
          swift_once();
        }
        id v15 = objc_msgSend(self, sel_hk_transparentInterfaceImageWithSize_, *(double *)&xmmword_1EA303D00, 0.01);
        sub_1C254E870();
      }
    }
    uint64_t v28 = v2;
    uint64_t v29 = MEMORY[0x1E4FB0F88];
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
    (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(boxed_opaque_existential_1, v5, v2);
    MEMORY[0x1C8758230](v27);
    sub_1C2201F2C();
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C255CDA0;
    *(void *)(v17 + 32) = sub_1C254F470();
    *(void *)(v17 + 40) = v18;
    char v19 = (void *)sub_1C254F430();
    id v20 = objc_msgSend(v19, sel_removeSpecialCharactersAndWhiteSpaces);

    uint64_t v21 = sub_1C254F470();
    uint64_t v23 = v22;

    *(void *)(v17 + 48) = v21;
    *(void *)(v17 + 56) = v23;
    uint64_t v24 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v25 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v1, sel_setAccessibilityIdentifier_, v25);
    objc_msgSend(v1, sel_setAccessibilityTraits_, *MEMORY[0x1E4FB2540]);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return result;
}

id sub_1C251D034()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountActionCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AccountActionCell()
{
  return self;
}

uint64_t sub_1C251D09C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C251D0F0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C251CB44();
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C251D160(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C251D1C0;
}

uint64_t sub_1C251D1C0(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C251CB44();
  }
  return result;
}

uint64_t sub_1C251D1F4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  uint64_t v2 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();

  sub_1C2201FD8(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
  return swift_deallocClassInstance();
}

uint64_t sub_1C251D2E8()
{
  return type metadata accessor for AccountActionItem();
}

uint64_t type metadata accessor for AccountActionItem()
{
  uint64_t result = qword_1EA2E4DA8;
  if (!qword_1EA2E4DA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C251D33C()
{
  uint64_t result = sub_1C254CB40();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t dispatch thunk of AccountActionDelegate.didDeleteAccount()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AccountActionDelegate.didStopSharing()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AccountActionDelegate.showActivity(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of AccountActionDelegate.hideActivity(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_1C251D458()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 136))();
}

uint64_t sub_1C251D49C()
{
  return sub_1C251C8BC();
}

uint64_t sub_1C251D4C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1C254F1C0();
  uint64_t v24 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1C254F200();
  uint64_t v13 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  id v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22023A4();
  uint64_t v22 = sub_1C254FC70();
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = a2;
  v16[3] = a3;
  v16[4] = a1;
  v16[5] = a4;
  v16[6] = a5;
  aBlock[4] = sub_1C251E3F0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_29_1;
  uint64_t v17 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  id v18 = a1;
  swift_retain();
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C251E4C4((unint64_t *)&qword_1EBB6FF10, 255, MEMORY[0x1E4FBCB00]);
  sub_1C251E460(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  char v19 = (void *)v22;
  MEMORY[0x1C87581B0](0, v15, v12, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v23);
}

uint64_t sub_1C251D7CC(uint64_t a1, uint64_t a2)
{
  return sub_1C251D948(a1, a2, (uint64_t)&unk_1F1D9EA30, (uint64_t)sub_1C251E354, (uint64_t)&block_descriptor_20_0);
}

uint64_t sub_1C251D7F4(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t ObjectType = swift_getObjectType();
    if (qword_1EBB6D9B0 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C254C730();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 24))(v5, v7, ObjectType, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C251D920(uint64_t a1, uint64_t a2)
{
  return sub_1C251D948(a1, a2, (uint64_t)&unk_1F1D9E9E0, (uint64_t)sub_1C251E34C, (uint64_t)&block_descriptor_14_0);
}

uint64_t sub_1C251D948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v7 = sub_1C254F1C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1C254F200();
  uint64_t v11 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22023A4();
  uint64_t v14 = (void *)sub_1C254FC70();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  aBlock[4] = v19;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = v20;
  uint64_t v16 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C251E4C4((unint64_t *)&qword_1EBB6FF10, 255, MEMORY[0x1E4FBCB00]);
  sub_1C251E460(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v21);
}

uint64_t sub_1C251DC20(uint64_t result, uint64_t a2)
{
  if (result)
  {
    uint64_t ObjectType = swift_getObjectType();
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C254C730();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 24))(v5, v7, ObjectType, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C251DD4C(char a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = sub_1C254F1C0();
  uint64_t v25 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C254F200();
  uint64_t v13 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22023A4();
  uint64_t v23 = sub_1C254FC70();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  *(void *)(v16 + 32) = a2;
  *(unsigned char *)(v16 + 40) = a1;
  *(void *)(v16 + 48) = a5;
  aBlock[4] = sub_1C251E2F8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_78;
  uint64_t v17 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  id v18 = a2;
  id v19 = a5;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C251E4C4((unint64_t *)&qword_1EBB6FF10, 255, MEMORY[0x1E4FBCB00]);
  sub_1C251E460(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  uint64_t v20 = (void *)v23;
  MEMORY[0x1C87581B0](0, v15, v12, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v24);
}

void sub_1C251E058(uint64_t a1, uint64_t a2, void *a3, char a4, void *a5)
{
  if (a1)
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t (*)(), void, uint64_t, uint64_t))(a2 + 32))(a3, nullsub_1, 0, ObjectType, a2);
  }
  if (a4)
  {
    if (a4 == 5)
    {
      if (qword_1EBB6D9B0 != -1) {
        swift_once();
      }
      id v10 = (id)qword_1EBB6D998;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v10 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
    }
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v11 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    if (a3) {
      a3 = (void *)sub_1C254C810();
    }
    id v12 = objc_msgSend(self, sel_basicAlertControllerWithTitle_message_internalError_, 0, v11, a3, 0xE000000000000000);

    objc_msgSend(a5, sel_presentViewController_animated_completion_, v12, 1, 0);
  }
}

uint64_t sub_1C251E2B0()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C251E2F8()
{
  sub_1C251E058(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t block_destroy_helper_74()
{
  return swift_release();
}

uint64_t sub_1C251E314()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C251E34C()
{
  return sub_1C251DC20(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C251E354()
{
  return sub_1C251D7F4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C251E35C()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C251E39C(void *a1)
{
  return sub_1C251D4C0(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1C251E3A8()
{
  swift_unknownObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C251E3F0()
{
  if (v0[2])
  {
    uint64_t v2 = v0[5];
    uint64_t v1 = v0[6];
    uint64_t v4 = v0[3];
    uint64_t v3 = v0[4];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v2, v1, ObjectType, v4);
  }
}

void sub_1C251E460(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C251E4C4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id ProviderNotFoundView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id ProviderNotFoundView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = *MEMORY[0x1E4FB2928];
  id v10 = self;
  uint64_t v11 = v4;
  id v12 = objc_msgSend(v10, sel_configurationWithTextStyle_scale_, v9, 2);
  uint64_t v13 = (void *)sub_1C254F430();
  id v14 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v13, v12);

  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v14);
  *(void *)&v11[OBJC_IVAR___HRProviderNotFoundView_glyphView] = v15;
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  *(void *)&v11[OBJC_IVAR___HRProviderNotFoundView_providerStatusLabel] = v16;

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for ProviderNotFoundView();
  id v17 = objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C251E7AC();

  return v17;
}

uint64_t type metadata accessor for ProviderNotFoundView()
{
  return self;
}

id sub_1C251E7AC()
{
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 1);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___HRProviderNotFoundView_glyphView];
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_secondaryLabelColor);
  objc_msgSend(v1, sel_setTintColor_, v3);

  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_addSubview_, v1);
  id v4 = objc_msgSend(v1, sel_centerXAnchor);
  id v5 = objc_msgSend(v0, sel_centerXAnchor);
  id v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v5);

  objc_msgSend(v6, sel_setActive_, 1);
  id v7 = objc_msgSend(v1, sel_topAnchor);
  id v8 = objc_msgSend(v0, sel_topAnchor);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v8, 16.0);

  objc_msgSend(v9, sel_setActive_, 1);
  LODWORD(v10) = 1148846080;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 1, v10);
  uint64_t v11 = *(void **)&v0[OBJC_IVAR___HRProviderNotFoundView_providerStatusLabel];
  objc_msgSend(v11, sel_setAdjustsFontForContentSizeCategory_, 1);
  id v12 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v11, sel_setFont_, v12);

  objc_msgSend(v11, sel_setNumberOfLines_, 0);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v13 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setText_, v14, 0xE000000000000000);

  objc_msgSend(v11, sel_setLineBreakMode_, 0);
  objc_msgSend(v11, sel_setTextAlignment_, 1);
  id v15 = objc_msgSend(v2, sel_systemGrayColor);
  objc_msgSend(v11, sel_setTextColor_, v15);

  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_addSubview_, v11);
  id v16 = objc_msgSend(v11, sel_leadingAnchor);
  id v17 = objc_msgSend(v0, sel_leadingAnchor);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v17, 16.0);

  objc_msgSend(v18, sel_setActive_, 1);
  id v19 = objc_msgSend(v11, sel_trailingAnchor);
  id v20 = objc_msgSend(v0, sel_trailingAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v20, -16.0);

  objc_msgSend(v21, sel_setActive_, 1);
  id v22 = objc_msgSend(v11, sel_topAnchor);
  id v23 = objc_msgSend(v1, sel_bottomAnchor);
  id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, 12.0);

  objc_msgSend(v24, sel_setActive_, 1);
  id v25 = objc_msgSend(v11, sel_bottomAnchor);
  id v26 = objc_msgSend(v0, sel_bottomAnchor);
  id v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v26, 8.0);

  objc_msgSend(v27, sel_setActive_, 1);
  type metadata accessor for UILayoutPriority(0);
  sub_1C2318BE4();
  sub_1C254E580();
  LODWORD(v28) = v30;
  return objc_msgSend(v11, sel_setContentCompressionResistancePriority_forAxis_, 1, v28);
}

id ProviderNotFoundView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProviderNotFoundView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for ProviderNotFoundView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProviderNotFoundView);
}

uint64_t sub_1C251EDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

void *sub_1C251EDF4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C251EE4C(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C251EED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C251EF2C(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C251EF74(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t _s12SortedRecordVMa()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *_s13SortedSectionVMa()
{
  return &_s13SortedSectionVN;
}

uint64_t _s10SortedDataVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t _s10SortedDataVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  long long v12 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v12;
  uint64_t v10 = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *_s10SortedDataVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[16];
  a1[15] = a2[15];
  a1[16] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[18];
  a1[17] = a2[17];
  a1[18] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[20];
  a1[19] = a2[19];
  a1[20] = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s10SortedDataVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_release();
  uint64_t v9 = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = v9;
  swift_release();
  return a1;
}

uint64_t _s10SortedDataVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 168)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10SortedDataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 168) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s10SortedDataVMa()
{
  return &_s10SortedDataVN;
}

uint64_t sub_1C251F474(void *a1)
{
  uint64_t v3 = v1;
  sub_1C25226AC(0, &qword_1EA2E4E60, (uint64_t (*)(void))sub_1C2520FB4, (uint64_t)&_s13SortedSectionV10CodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C2520FB4();
  sub_1C2550A70();
  v11[0] = 0;
  sub_1C25507A0();
  if (!v2)
  {
    v11[0] = 1;
    sub_1C25507A0();
    sub_1C22D59D0((uint64_t *)(v3 + 32), (uint64_t)v12);
    sub_1C22D59D0(v12, (uint64_t)v11);
    char v13 = 2;
    sub_1C252105C();
    sub_1C25507D0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C251F65C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v48 = a3;
  uint64_t v45 = a2;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C25226AC(0, &qword_1EA2E4FE0, (uint64_t (*)(void))sub_1C2521E68, (uint64_t)&_s13SortedRecordsO18MetadataCodingKeysON, MEMORY[0x1E4FBBDE0]);
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (char *)&v32 - v6;
  sub_1C25226AC(0, &qword_1EA2E4FE8, (uint64_t (*)(void))sub_1C2521EBC, (uint64_t)&_s13SortedRecordsO21ThreeValuesCodingKeysON, v4);
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v39 = (char *)&v32 - v8;
  sub_1C25226AC(0, &qword_1EA2E4FF0, (uint64_t (*)(void))sub_1C2521F10, (uint64_t)&_s13SortedRecordsO22ValueInRangeCodingKeysON, v4);
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  MEMORY[0x1F4188790](v9);
  id v36 = (char *)&v32 - v10;
  sub_1C25226AC(0, &qword_1EA2E4FF8, (uint64_t (*)(void))sub_1C2521F64, (uint64_t)&_s13SortedRecordsO15ValueCodingKeysON, v4);
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v32 - v12;
  sub_1C25226AC(0, &qword_1EA2E5000, (uint64_t (*)(void))sub_1C2521FB8, (uint64_t)&_s13SortedRecordsO15PlainCodingKeysON, v4);
  uint64_t v15 = v14;
  uint64_t v33 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v32 - v16;
  sub_1C25226AC(0, &qword_1EA2E5008, (uint64_t (*)(void))sub_1C252200C, (uint64_t)&_s13SortedRecordsO10CodingKeysON, v4);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v47 = v19;
  MEMORY[0x1F4188790](v18);
  id v21 = (char *)&v32 - v20;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C252200C();
  id v22 = v21;
  sub_1C2550A70();
  switch((char)v48)
  {
    case 1:
      LOBYTE(v49) = 1;
      sub_1C2521F64();
      uint64_t v25 = v46;
      sub_1C2550770();
      uint64_t v49 = v45;
      sub_1C252218C(0, &qword_1EA2E4FB0, &qword_1EA2DF520, (uint64_t (*)(void))sub_1C226FF7C, (uint64_t)&_s20FormattedRecordValueVN);
      sub_1C2522A98();
      uint64_t v26 = v35;
      sub_1C25507D0();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v26);
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v21, v25);
    case 2:
      LOBYTE(v49) = 2;
      sub_1C2521F10();
      id v27 = v36;
      uint64_t v28 = v46;
      uint64_t v29 = v22;
      sub_1C2550770();
      uint64_t v49 = v45;
      sub_1C252218C(0, &qword_1EA2E4F98, &qword_1EA2DF538, (uint64_t (*)(void))sub_1C227004C, (uint64_t)&_s27FormattedRecordValueInRangeVN);
      sub_1C252296C();
      uint64_t v30 = v38;
      sub_1C25507D0();
      uint64_t v31 = v37;
      goto LABEL_7;
    case 3:
      LOBYTE(v49) = 3;
      sub_1C2521EBC();
      id v27 = v39;
      uint64_t v28 = v46;
      uint64_t v29 = v22;
      sub_1C2550770();
      uint64_t v49 = v45;
      sub_1C252218C(0, &qword_1EA2E4F80, &qword_1EA2DF550, (uint64_t (*)(void))sub_1C227011C, (uint64_t)&_s22FormattedRecord3ValuesVN);
      sub_1C2522840();
      uint64_t v30 = v41;
      sub_1C25507D0();
      uint64_t v31 = v40;
      goto LABEL_7;
    case 4:
      LOBYTE(v49) = 4;
      sub_1C2521E68();
      id v27 = v42;
      uint64_t v28 = v46;
      uint64_t v29 = v22;
      sub_1C2550770();
      uint64_t v49 = v45;
      sub_1C252218C(0, &qword_1EA2E4F68, &qword_1EA2DF568, (uint64_t (*)(void))sub_1C227024C, (uint64_t)&_s23FormattedRecordMetadataVN);
      sub_1C2522714();
      uint64_t v30 = v44;
      sub_1C25507D0();
      uint64_t v31 = v43;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v30);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v29, v28);
      break;
    default:
      LOBYTE(v49) = 0;
      sub_1C2521FB8();
      uint64_t v23 = v46;
      sub_1C2550770();
      uint64_t v49 = v45;
      sub_1C252218C(0, &qword_1EA2E4FC8, &qword_1EA2DF508, (uint64_t (*)(void))sub_1C226FEAC, (uint64_t)&_s15FormattedRecordVN);
      sub_1C2522BC4();
      sub_1C25507D0();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v15);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v22, v23);
      break;
  }
  return result;
}

uint64_t sub_1C251FEA0(uint64_t a1)
{
  unint64_t v2 = sub_1C2520FB4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C251FEDC(uint64_t a1)
{
  unint64_t v2 = sub_1C2520FB4();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C251FF18@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C2520CC0(a1, (uint64_t)&v6);
  if (!v2)
  {
    long long v5 = v7[0];
    *a2 = v6;
    a2[1] = v5;
    double result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1C251FF5C(void *a1)
{
  return sub_1C251F474(a1);
}

uint64_t sub_1C251FF98()
{
  uint64_t result = 0x6E69616C70;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65756C6176;
      break;
    case 2:
      uint64_t result = 0x526E4965756C6176;
      break;
    case 3:
      uint64_t result = 0x6C61566565726874;
      break;
    case 4:
      uint64_t result = 0x617461646174656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2520048(uint64_t a1)
{
  unint64_t v2 = sub_1C252200C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2520084(uint64_t a1)
{
  unint64_t v2 = sub_1C252200C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C25200C0(uint64_t a1)
{
  unint64_t v2 = sub_1C2521E68();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C25200FC(uint64_t a1)
{
  unint64_t v2 = sub_1C2521E68();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C2520138(uint64_t a1)
{
  unint64_t v2 = sub_1C2521FB8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2520174(uint64_t a1)
{
  unint64_t v2 = sub_1C2521FB8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C25201B0(uint64_t a1)
{
  unint64_t v2 = sub_1C2521EBC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C25201EC(uint64_t a1)
{
  unint64_t v2 = sub_1C2521EBC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C2520228(uint64_t a1)
{
  unint64_t v2 = sub_1C2521F64();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2520264(uint64_t a1)
{
  unint64_t v2 = sub_1C2521F64();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C25202A0(uint64_t a1)
{
  unint64_t v2 = sub_1C2521F10();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C25202DC(uint64_t a1)
{
  unint64_t v2 = sub_1C2521F10();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C2520318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1C2521324(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_1C2520348(void *a1)
{
  return sub_1C251F65C(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8));
}

BOOL sub_1C2520368(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1C2520378()
{
  return sub_1C25509D0();
}

uint64_t sub_1C25203A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72656469766F7270 && a2 == 0xE800000000000000 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7364726F636572 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C25204F0()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2520538(char a1)
{
  if (!a1) {
    return 0x656C746974;
  }
  if (a1 == 1) {
    return 0x72656469766F7270;
  }
  return 0x7364726F636572;
}

uint64_t sub_1C252058C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v14 = v5;
  _s12SortedRecordV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v6 = sub_1C25507E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C2550A70();
  LOBYTE(v19) = 0;
  uint64_t v10 = v16;
  sub_1C25507A0();
  if (!v10)
  {
    uint64_t v11 = v14;
    LOBYTE(v19) = 1;
    sub_1C2550780();
    uint64_t v19 = *(void *)(v3 + 32);
    char v18 = 2;
    sub_1C254F7A0();
    uint64_t v17 = *(void *)(v11 + 16);
    swift_getWitnessTable();
    sub_1C25507D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C252079C@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  id v22 = a3;
  _s12SortedRecordV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v23 = sub_1C2550760();
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v7 = (char *)&v18 - v6;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C2550A50();
  if (v3) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v20 = a1;
  uint64_t v8 = v21;
  uint64_t v9 = v22;
  LOBYTE(v26) = 0;
  uint64_t v10 = sub_1C2550710();
  uint64_t v12 = v11;
  uint64_t v19 = v10;
  LOBYTE(v26) = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C25506F0();
  uint64_t v15 = v14;
  uint64_t v18 = v13;
  sub_1C254F7A0();
  char v25 = 2;
  uint64_t v24 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C2550740();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v23);
  uint64_t v16 = v26;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v9 = v19;
  v9[1] = v12;
  void v9[2] = v18;
  v9[3] = v15;
  v9[4] = v16;
  return result;
}

BOOL sub_1C2520ABC(char *a1, char *a2)
{
  return sub_1C2520368(*a1, *a2);
}

uint64_t sub_1C2520AD0()
{
  return sub_1C25204F0();
}

uint64_t sub_1C2520ADC()
{
  return sub_1C2520378();
}

uint64_t sub_1C2520AE8()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2520B30()
{
  return sub_1C2520538(*v0);
}

uint64_t sub_1C2520B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C25203A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2520B6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C2521E60();
  *a1 = result;
  return result;
}

uint64_t sub_1C2520B98(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C2520BEC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

double sub_1C2520C40@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C252079C(a1, *(void *)(a2 + 24), (uint64_t *)v7);
  if (!v3)
  {
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a3 = v7[0];
    *(_OWORD *)(a3 + 16) = v6;
    *(void *)(a3 + 32) = v8;
  }
  return result;
}

uint64_t sub_1C2520C90(void *a1, uint64_t a2)
{
  return sub_1C252058C(a1, a2);
}

uint64_t _s12SortedRecordV10CodingKeysOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C2520CC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  sub_1C25226AC(0, &qword_1EA2E4E48, (uint64_t (*)(void))sub_1C2520FB4, (uint64_t)&_s13SortedSectionV10CodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v21 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C2520FB4();
  sub_1C2550A50();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v24;
  char v29 = 0;
  uint64_t v11 = sub_1C2550710();
  uint64_t v13 = v12;
  uint64_t v23 = v11;
  char v28 = 1;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C2550710();
  uint64_t v16 = v15;
  uint64_t v21 = v14;
  char v27 = 2;
  sub_1C2521008();
  swift_bridgeObjectRetain();
  uint64_t v22 = v16;
  sub_1C2550740();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v17 = v25;
  char v18 = v26;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = v22;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v10 = v23;
  *(void *)(v10 + 8) = v13;
  *(void *)(v10 + 16) = v21;
  *(void *)(v10 + 24) = v19;
  *(void *)(v10 + 32) = v17;
  *(unsigned char *)(v10 + 40) = v18;
  return result;
}

unint64_t sub_1C2520FB4()
{
  unint64_t result = qword_1EA2E4E50;
  if (!qword_1EA2E4E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4E50);
  }
  return result;
}

unint64_t sub_1C2521008()
{
  unint64_t result = qword_1EA2E4E58;
  if (!qword_1EA2E4E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4E58);
  }
  return result;
}

unint64_t sub_1C252105C()
{
  unint64_t result = qword_1EA2E4E68[0];
  if (!qword_1EA2E4E68[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA2E4E68);
  }
  return result;
}

ValueMetadata *_s13SortedSectionV10CodingKeysOMa()
{
  return &_s13SortedSectionV10CodingKeysON;
}

unsigned char *_s13SortedSectionV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2521190);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13SortedRecordsOMa()
{
  return &_s13SortedRecordsON;
}

uint64_t sub_1C25211C8()
{
  return swift_getWitnessTable();
}

unint64_t sub_1C25211E8()
{
  unint64_t result = qword_1EA2E4EF0;
  if (!qword_1EA2E4EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4EF0);
  }
  return result;
}

unint64_t sub_1C2521240()
{
  unint64_t result = qword_1EA2E4EF8;
  if (!qword_1EA2E4EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4EF8);
  }
  return result;
}

unint64_t sub_1C2521298()
{
  unint64_t result = qword_1EA2E4F00;
  if (!qword_1EA2E4F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4F00);
  }
  return result;
}

uint64_t sub_1C25212EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C2521308()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C2521324(uint64_t a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C25226AC(0, &qword_1EA2E4F08, (uint64_t (*)(void))sub_1C2521E68, (uint64_t)&_s13SortedRecordsO18MetadataCodingKeysON, MEMORY[0x1E4FBBDC0]);
  uint64_t v52 = v3;
  uint64_t v55 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v60 = (char *)&v46 - v4;
  sub_1C25226AC(0, &qword_1EA2E4F18, (uint64_t (*)(void))sub_1C2521EBC, (uint64_t)&_s13SortedRecordsO21ThreeValuesCodingKeysON, v2);
  uint64_t v50 = v5;
  uint64_t v56 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v59 = (char *)&v46 - v6;
  sub_1C25226AC(0, &qword_1EA2E4F28, (uint64_t (*)(void))sub_1C2521F10, (uint64_t)&_s13SortedRecordsO22ValueInRangeCodingKeysON, v2);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v58 = (char *)&v46 - v8;
  sub_1C25226AC(0, &qword_1EA2E4F38, (uint64_t (*)(void))sub_1C2521F64, (uint64_t)&_s13SortedRecordsO15ValueCodingKeysON, v2);
  uint64_t v51 = v9;
  uint64_t v48 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v57 = (char *)&v46 - v10;
  sub_1C25226AC(0, &qword_1EA2E4F48, (uint64_t (*)(void))sub_1C2521FB8, (uint64_t)&_s13SortedRecordsO15PlainCodingKeysON, v2);
  uint64_t v12 = v11;
  uint64_t v49 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v46 - v13;
  sub_1C25226AC(0, &qword_1EA2E4F58, (uint64_t (*)(void))sub_1C252200C, (uint64_t)&_s13SortedRecordsO10CodingKeysON, v2);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = *(void *)(a1 + 24);
  uint64_t v18 = *(void *)(a1 + 32);
  uint64_t v62 = a1;
  uint64_t v20 = (void *)a1;
  uint64_t v22 = (char *)&v46 - v21;
  __swift_project_boxed_opaque_existential_1Tm(v20, v19);
  sub_1C252200C();
  uint64_t v61 = v22;
  uint64_t v23 = v63;
  sub_1C2550A50();
  if (v23) {
    goto LABEL_10;
  }
  uint64_t v24 = v14;
  uint64_t v47 = v12;
  uint64_t v25 = v57;
  char v26 = v58;
  char v28 = v59;
  char v27 = v60;
  uint64_t v63 = v17;
  uint64_t v29 = sub_1C2550750();
  if (*(void *)(v29 + 16) != 1)
  {
    uint64_t v18 = sub_1C2550420();
    swift_allocError();
    uint64_t v32 = v61;
    uint64_t v33 = v16;
    uint64_t v35 = v34;
    sub_1C22D95F8();
    *uint64_t v35 = &_s13SortedRecordsON;
    sub_1C25506E0();
    sub_1C2550400();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v35, *MEMORY[0x1E4FBBA70], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v32, v33);
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm(v62);
    return v18;
  }
  switch(*(unsigned char *)(v29 + 32))
  {
    case 1:
      LOBYTE(v64) = 1;
      sub_1C2521F64();
      sub_1C25506D0();
      sub_1C252218C(0, &qword_1EA2E4FB0, &qword_1EA2DF520, (uint64_t (*)(void))sub_1C226FF7C, (uint64_t)&_s20FormattedRecordValueVN);
      sub_1C2522454();
      uint64_t v36 = v51;
      sub_1C2550740();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v25, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v61, v16);
      goto LABEL_14;
    case 2:
      LOBYTE(v64) = 2;
      sub_1C2521F10();
      uint64_t v37 = v26;
      sub_1C25506D0();
      sub_1C252218C(0, &qword_1EA2E4F98, &qword_1EA2DF538, (uint64_t (*)(void))sub_1C227004C, (uint64_t)&_s27FormattedRecordValueInRangeVN);
      sub_1C2522328();
      uint64_t v38 = v54;
      sub_1C2550740();
      uint64_t v39 = v63;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v38);
      goto LABEL_12;
    case 3:
      LOBYTE(v64) = 3;
      sub_1C2521EBC();
      uint64_t v40 = v28;
      sub_1C25506D0();
      sub_1C252218C(0, &qword_1EA2E4F80, &qword_1EA2DF550, (uint64_t (*)(void))sub_1C227011C, (uint64_t)&_s22FormattedRecord3ValuesVN);
      sub_1C25221FC();
      uint64_t v41 = v50;
      sub_1C2550740();
      uint64_t v39 = v63;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v40, v41);
LABEL_12:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v61, v16);
LABEL_14:
      uint64_t v18 = v64;
      uint64_t v45 = v62;
      goto LABEL_15;
    case 4:
      uint64_t v59 = (char *)*(unsigned __int8 *)(v29 + 32);
      LOBYTE(v64) = 4;
      sub_1C2521E68();
      sub_1C25506D0();
      sub_1C252218C(0, &qword_1EA2E4F68, &qword_1EA2DF568, (uint64_t (*)(void))sub_1C227024C, (uint64_t)&_s23FormattedRecordMetadataVN);
      sub_1C2522060();
      uint64_t v43 = v52;
      sub_1C2550740();
      uint64_t v44 = v63;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v27, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v61, v16);
      goto LABEL_13;
    default:
      uint64_t v59 = (char *)*(unsigned __int8 *)(v29 + 32);
      LOBYTE(v64) = 0;
      sub_1C2521FB8();
      sub_1C25506D0();
      sub_1C252218C(0, &qword_1EA2E4FC8, &qword_1EA2DF508, (uint64_t (*)(void))sub_1C226FEAC, (uint64_t)&_s15FormattedRecordVN);
      sub_1C2522580();
      uint64_t v30 = v47;
      sub_1C2550740();
      uint64_t v31 = v63;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v24, v30);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v61, v16);
LABEL_13:
      uint64_t v18 = v64;
      uint64_t v45 = v62;
LABEL_15:
      __swift_destroy_boxed_opaque_existential_1Tm(v45);
      break;
  }
  return v18;
}

uint64_t sub_1C2521E60()
{
  return 3;
}

unint64_t sub_1C2521E68()
{
  unint64_t result = qword_1EA2E4F10;
  if (!qword_1EA2E4F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4F10);
  }
  return result;
}

unint64_t sub_1C2521EBC()
{
  unint64_t result = qword_1EA2E4F20;
  if (!qword_1EA2E4F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4F20);
  }
  return result;
}

unint64_t sub_1C2521F10()
{
  unint64_t result = qword_1EA2E4F30;
  if (!qword_1EA2E4F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4F30);
  }
  return result;
}

unint64_t sub_1C2521F64()
{
  unint64_t result = qword_1EA2E4F40;
  if (!qword_1EA2E4F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4F40);
  }
  return result;
}

unint64_t sub_1C2521FB8()
{
  unint64_t result = qword_1EA2E4F50;
  if (!qword_1EA2E4F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4F50);
  }
  return result;
}

unint64_t sub_1C252200C()
{
  unint64_t result = qword_1EA2E4F60;
  if (!qword_1EA2E4F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4F60);
  }
  return result;
}

unint64_t sub_1C2522060()
{
  unint64_t result = qword_1EA2E4F70;
  if (!qword_1EA2E4F70)
  {
    sub_1C252218C(255, &qword_1EA2E4F68, &qword_1EA2DF568, (uint64_t (*)(void))sub_1C227024C, (uint64_t)&_s23FormattedRecordMetadataVN);
    sub_1C25220FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4F70);
  }
  return result;
}

unint64_t sub_1C25220FC()
{
  unint64_t result = qword_1EA2E4F78;
  if (!qword_1EA2E4F78)
  {
    sub_1C25226AC(255, &qword_1EA2DF568, (uint64_t (*)(void))sub_1C227024C, (uint64_t)&_s23FormattedRecordMetadataVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s12SortedRecordVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4F78);
  }
  return result;
}

void sub_1C252218C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  if (!*a2)
  {
    sub_1C25226AC(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s12SortedRecordVMa);
    unint64_t v6 = sub_1C254F7A0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1C25221FC()
{
  unint64_t result = qword_1EA2E4F88;
  if (!qword_1EA2E4F88)
  {
    sub_1C252218C(255, &qword_1EA2E4F80, &qword_1EA2DF550, (uint64_t (*)(void))sub_1C227011C, (uint64_t)&_s22FormattedRecord3ValuesVN);
    sub_1C2522298();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4F88);
  }
  return result;
}

unint64_t sub_1C2522298()
{
  unint64_t result = qword_1EA2E4F90;
  if (!qword_1EA2E4F90)
  {
    sub_1C25226AC(255, &qword_1EA2DF550, (uint64_t (*)(void))sub_1C227011C, (uint64_t)&_s22FormattedRecord3ValuesVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s12SortedRecordVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4F90);
  }
  return result;
}

unint64_t sub_1C2522328()
{
  unint64_t result = qword_1EA2E4FA0;
  if (!qword_1EA2E4FA0)
  {
    sub_1C252218C(255, &qword_1EA2E4F98, &qword_1EA2DF538, (uint64_t (*)(void))sub_1C227004C, (uint64_t)&_s27FormattedRecordValueInRangeVN);
    sub_1C25223C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4FA0);
  }
  return result;
}

unint64_t sub_1C25223C4()
{
  unint64_t result = qword_1EA2E4FA8;
  if (!qword_1EA2E4FA8)
  {
    sub_1C25226AC(255, &qword_1EA2DF538, (uint64_t (*)(void))sub_1C227004C, (uint64_t)&_s27FormattedRecordValueInRangeVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s12SortedRecordVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4FA8);
  }
  return result;
}

unint64_t sub_1C2522454()
{
  unint64_t result = qword_1EA2E4FB8;
  if (!qword_1EA2E4FB8)
  {
    sub_1C252218C(255, &qword_1EA2E4FB0, &qword_1EA2DF520, (uint64_t (*)(void))sub_1C226FF7C, (uint64_t)&_s20FormattedRecordValueVN);
    sub_1C25224F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4FB8);
  }
  return result;
}

unint64_t sub_1C25224F0()
{
  unint64_t result = qword_1EA2E4FC0;
  if (!qword_1EA2E4FC0)
  {
    sub_1C25226AC(255, &qword_1EA2DF520, (uint64_t (*)(void))sub_1C226FF7C, (uint64_t)&_s20FormattedRecordValueVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s12SortedRecordVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4FC0);
  }
  return result;
}

unint64_t sub_1C2522580()
{
  unint64_t result = qword_1EA2E4FD0;
  if (!qword_1EA2E4FD0)
  {
    sub_1C252218C(255, &qword_1EA2E4FC8, &qword_1EA2DF508, (uint64_t (*)(void))sub_1C226FEAC, (uint64_t)&_s15FormattedRecordVN);
    sub_1C252261C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4FD0);
  }
  return result;
}

unint64_t sub_1C252261C()
{
  unint64_t result = qword_1EA2E4FD8;
  if (!qword_1EA2E4FD8)
  {
    sub_1C25226AC(255, &qword_1EA2DF508, (uint64_t (*)(void))sub_1C226FEAC, (uint64_t)&_s15FormattedRecordVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s12SortedRecordVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4FD8);
  }
  return result;
}

void sub_1C25226AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C2522714()
{
  unint64_t result = qword_1EA2E5010;
  if (!qword_1EA2E5010)
  {
    sub_1C252218C(255, &qword_1EA2E4F68, &qword_1EA2DF568, (uint64_t (*)(void))sub_1C227024C, (uint64_t)&_s23FormattedRecordMetadataVN);
    sub_1C25227B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5010);
  }
  return result;
}

unint64_t sub_1C25227B0()
{
  unint64_t result = qword_1EA2E5018;
  if (!qword_1EA2E5018)
  {
    sub_1C25226AC(255, &qword_1EA2DF568, (uint64_t (*)(void))sub_1C227024C, (uint64_t)&_s23FormattedRecordMetadataVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s12SortedRecordVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5018);
  }
  return result;
}

unint64_t sub_1C2522840()
{
  unint64_t result = qword_1EA2E5020;
  if (!qword_1EA2E5020)
  {
    sub_1C252218C(255, &qword_1EA2E4F80, &qword_1EA2DF550, (uint64_t (*)(void))sub_1C227011C, (uint64_t)&_s22FormattedRecord3ValuesVN);
    sub_1C25228DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5020);
  }
  return result;
}

unint64_t sub_1C25228DC()
{
  unint64_t result = qword_1EA2E5028;
  if (!qword_1EA2E5028)
  {
    sub_1C25226AC(255, &qword_1EA2DF550, (uint64_t (*)(void))sub_1C227011C, (uint64_t)&_s22FormattedRecord3ValuesVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s12SortedRecordVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5028);
  }
  return result;
}

unint64_t sub_1C252296C()
{
  unint64_t result = qword_1EA2E5030;
  if (!qword_1EA2E5030)
  {
    sub_1C252218C(255, &qword_1EA2E4F98, &qword_1EA2DF538, (uint64_t (*)(void))sub_1C227004C, (uint64_t)&_s27FormattedRecordValueInRangeVN);
    sub_1C2522A08();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5030);
  }
  return result;
}

unint64_t sub_1C2522A08()
{
  unint64_t result = qword_1EA2E5038;
  if (!qword_1EA2E5038)
  {
    sub_1C25226AC(255, &qword_1EA2DF538, (uint64_t (*)(void))sub_1C227004C, (uint64_t)&_s27FormattedRecordValueInRangeVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s12SortedRecordVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5038);
  }
  return result;
}

unint64_t sub_1C2522A98()
{
  unint64_t result = qword_1EA2E5040;
  if (!qword_1EA2E5040)
  {
    sub_1C252218C(255, &qword_1EA2E4FB0, &qword_1EA2DF520, (uint64_t (*)(void))sub_1C226FF7C, (uint64_t)&_s20FormattedRecordValueVN);
    sub_1C2522B34();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5040);
  }
  return result;
}

unint64_t sub_1C2522B34()
{
  unint64_t result = qword_1EA2E5048;
  if (!qword_1EA2E5048)
  {
    sub_1C25226AC(255, &qword_1EA2DF520, (uint64_t (*)(void))sub_1C226FF7C, (uint64_t)&_s20FormattedRecordValueVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s12SortedRecordVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5048);
  }
  return result;
}

unint64_t sub_1C2522BC4()
{
  unint64_t result = qword_1EA2E5050;
  if (!qword_1EA2E5050)
  {
    sub_1C252218C(255, &qword_1EA2E4FC8, &qword_1EA2DF508, (uint64_t (*)(void))sub_1C226FEAC, (uint64_t)&_s15FormattedRecordVN);
    sub_1C2522C60();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5050);
  }
  return result;
}

unint64_t sub_1C2522C60()
{
  unint64_t result = qword_1EA2E5058;
  if (!qword_1EA2E5058)
  {
    sub_1C25226AC(255, &qword_1EA2DF508, (uint64_t (*)(void))sub_1C226FEAC, (uint64_t)&_s15FormattedRecordVN, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s12SortedRecordVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5058);
  }
  return result;
}

unsigned char *_s13SortedRecordsO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2522DBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13SortedRecordsO10CodingKeysOMa()
{
  return &_s13SortedRecordsO10CodingKeysON;
}

ValueMetadata *_s13SortedRecordsO15PlainCodingKeysOMa()
{
  return &_s13SortedRecordsO15PlainCodingKeysON;
}

ValueMetadata *_s13SortedRecordsO15ValueCodingKeysOMa()
{
  return &_s13SortedRecordsO15ValueCodingKeysON;
}

ValueMetadata *_s13SortedRecordsO22ValueInRangeCodingKeysOMa()
{
  return &_s13SortedRecordsO22ValueInRangeCodingKeysON;
}

ValueMetadata *_s13SortedRecordsO21ThreeValuesCodingKeysOMa()
{
  return &_s13SortedRecordsO21ThreeValuesCodingKeysON;
}

unsigned char *_s13SortedRecordsO15PlainCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2522ED4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s13SortedRecordsO18MetadataCodingKeysOMa()
{
  return &_s13SortedRecordsO18MetadataCodingKeysON;
}

unint64_t sub_1C2522F10()
{
  unint64_t result = qword_1EA2E5060;
  if (!qword_1EA2E5060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5060);
  }
  return result;
}

unint64_t sub_1C2522F68()
{
  unint64_t result = qword_1EA2E5068;
  if (!qword_1EA2E5068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5068);
  }
  return result;
}

unint64_t sub_1C2522FC0()
{
  unint64_t result = qword_1EA2E5070;
  if (!qword_1EA2E5070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5070);
  }
  return result;
}

unint64_t sub_1C2523018()
{
  unint64_t result = qword_1EA2E5078;
  if (!qword_1EA2E5078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5078);
  }
  return result;
}

unint64_t sub_1C2523070()
{
  unint64_t result = qword_1EA2E5080;
  if (!qword_1EA2E5080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5080);
  }
  return result;
}

unint64_t sub_1C25230C8()
{
  unint64_t result = qword_1EA2E5088;
  if (!qword_1EA2E5088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5088);
  }
  return result;
}

unint64_t sub_1C2523120()
{
  unint64_t result = qword_1EA2E5090;
  if (!qword_1EA2E5090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5090);
  }
  return result;
}

unint64_t sub_1C2523178()
{
  unint64_t result = qword_1EA2E5098;
  if (!qword_1EA2E5098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5098);
  }
  return result;
}

unint64_t sub_1C25231D0()
{
  unint64_t result = qword_1EA2E50A0;
  if (!qword_1EA2E50A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E50A0);
  }
  return result;
}

unint64_t sub_1C2523228()
{
  unint64_t result = qword_1EA2E50A8;
  if (!qword_1EA2E50A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E50A8);
  }
  return result;
}

unint64_t sub_1C2523280()
{
  unint64_t result = qword_1EA2E50B0;
  if (!qword_1EA2E50B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E50B0);
  }
  return result;
}

unint64_t sub_1C25232D8()
{
  unint64_t result = qword_1EA2E50B8;
  if (!qword_1EA2E50B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E50B8);
  }
  return result;
}

unint64_t sub_1C2523330()
{
  unint64_t result = qword_1EA2E50C0;
  if (!qword_1EA2E50C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E50C0);
  }
  return result;
}

unint64_t sub_1C2523388()
{
  unint64_t result = qword_1EA2E50C8;
  if (!qword_1EA2E50C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E50C8);
  }
  return result;
}

unint64_t sub_1C25233E0()
{
  unint64_t result = qword_1EA2E50D0;
  if (!qword_1EA2E50D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E50D0);
  }
  return result;
}

unint64_t sub_1C2523438()
{
  unint64_t result = qword_1EA2E50D8;
  if (!qword_1EA2E50D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E50D8);
  }
  return result;
}

unint64_t sub_1C2523490()
{
  unint64_t result = qword_1EA2E50E0;
  if (!qword_1EA2E50E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E50E0);
  }
  return result;
}

unint64_t sub_1C25234E8()
{
  unint64_t result = qword_1EA2E50E8;
  if (!qword_1EA2E50E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E50E8);
  }
  return result;
}

uint64_t sub_1C252353C(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

id sub_1C252357C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___signedClinicalDataStore;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___signedClinicalDataStore);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___signedClinicalDataStore);
  }
  else
  {
    id v4 = objc_msgSend(*(id *)(v0 + 24), sel_healthStore);
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F677D0]), sel_initWithHealthStore_, v4);

    unsigned int v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

uint64_t sub_1C2523620()
{
  return sub_1C25237D8(&OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___walletIntegrationDataSource, sub_1C25249DC, (void (*)(uint64_t))sub_1C25276B0, (void (*)(uint64_t))sub_1C25276B4);
}

uint64_t sub_1C2523668()
{
  return sub_1C25237D8(&OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___signedClinicalDataStatusDataSource, sub_1C2524C78, (void (*)(uint64_t))sub_1C2527690, (void (*)(uint64_t))sub_1C25276A0);
}

uint64_t sub_1C25236B0()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___recordSourceDataSource;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___recordSourceDataSource))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___recordSourceDataSource);
  }
  else
  {
    uint64_t v3 = v0;
    id v4 = objc_msgSend(*(id *)(v0 + 16), sel_sourceRevision);
    id v5 = objc_msgSend(v4, sel_source);

    id v6 = objc_msgSend(*(id *)(v3 + 24), sel_clinicalSourcesDataProvider);
    type metadata accessor for RecordSourceDataSource();
    swift_allocObject();
    uint64_t v2 = sub_1C22C0C38(v5, v6);
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1C2523790()
{
  return sub_1C25237D8(&OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___deleteRecordDataSource, sub_1C2524F30, (void (*)(uint64_t))sub_1C25276B0, (void (*)(uint64_t))sub_1C25276B4);
}

uint64_t sub_1C25237D8(uint64_t *a1, uint64_t (*a2)(void), void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(v4 + *a1);
  uint64_t v8 = v7;
  if (v7 == 1)
  {
    uint64_t v8 = a2();
    uint64_t v10 = *(void *)(v4 + v6);
    *(void *)(v4 + v6) = v8;
    swift_retain();
    a3(v10);
  }
  a4(v7);
  return v8;
}

uint64_t sub_1C252385C()
{
  return sub_1C254F4F0();
}

uint64_t sub_1C25238B4()
{
  uint64_t v1 = v0;
  uint64_t v61 = *v0;
  sub_1C2527094();
  uint64_t v63 = *(void *)(v2 - 8);
  uint64_t v64 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v62 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2527158();
  uint64_t v66 = *(void *)(v4 - 8);
  uint64_t v67 = v4;
  MEMORY[0x1F4188790](v4);
  unint64_t v65 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254CB40();
  uint64_t v75 = *(void *)(v6 - 8);
  unint64_t v76 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v68 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2526D9C(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  id v74 = (char *)&v58 - v10;
  uint64_t v72 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C2526D9C(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], v8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v58 - v12;
  sub_1C2466CC8();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2527398();
  uint64_t v71 = v19;
  uint64_t v73 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v69 = v1;
  uint64_t v70 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v1;
  id v22 = objc_msgSend((id)v1[3], sel_clinicalAccountStore);
  id v23 = objc_msgSend((id)v21[2], sel_sourceRevision);
  id v24 = objc_msgSend(v23, sel_source);

  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v22;
  *(void *)(v25 + 24) = v24;
  char v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C2527254(0, &qword_1EA2E3B28, (unint64_t *)&qword_1EA2E1530, 0x1E4F67708, MEMORY[0x1E4F1AC28]);
  sub_1C2527340(&qword_1EA2E3B30, &qword_1EA2E3B28, v26);
  id v27 = v22;
  id v28 = v24;
  sub_1C254EB10();
  sub_1C25274DC(&qword_1EA2E3B40, (void (*)(uint64_t))sub_1C2466CC8);
  uint64_t v29 = sub_1C254EBC0();

  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v30 = v69;
  uint64_t v78 = v29;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v77 = (id)sub_1C254FC70();
  uint64_t v31 = sub_1C254FC20();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 56);
  uint64_t v34 = v32 + 56;
  uint64_t v59 = v31;
  v33(v13, 1, 1);
  uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2527254(0, &qword_1EA2E3B58, (unint64_t *)&qword_1EA2E1530, 0x1E4F67708, MEMORY[0x1E4F1AAE0]);
  sub_1C2527340(&qword_1EA2E3B60, &qword_1EA2E3B58, v35);
  unint64_t v36 = sub_1C22611AC();
  uint64_t v37 = v70;
  sub_1C254EC70();
  uint64_t v60 = v13;
  sub_1C2527524((uint64_t)v13, (unint64_t *)&qword_1EBB6F4A0, v72);

  swift_release();
  sub_1C25274DC(&qword_1EA2E5178, (void (*)(uint64_t))sub_1C2527398);
  swift_retain();
  uint64_t v38 = v71;
  sub_1C254EBB0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v37, v38);
  id v39 = objc_msgSend((id)v30[2], sel_originIdentifier);
  id v40 = objc_msgSend(v39, sel_signedClinicalDataRecordIdentifier);

  if (v40)
  {
    uint64_t v73 = v34;
    uint64_t v41 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v33;
    uint64_t v42 = v68;
    sub_1C254CB20();

    uint64_t v44 = (uint64_t)v74;
    uint64_t v43 = v75;
    unint64_t v45 = v76;
    (*(void (**)(char *, char *, unint64_t))(v75 + 32))(v74, v42, v76);
    (*(void (**)(uint64_t, void, uint64_t, unint64_t))(v43 + 56))(v44, 0, 1, v45);
    if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v43 + 48))(v44, 1, v45) != 1)
    {
      sub_1C2527524(v44, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
      id v46 = sub_1C252357C();
      uint64_t v47 = (void *)swift_allocObject();
      v47[2] = v46;
      v47[3] = v30;
      v47[4] = 11;
      v47[5] = v61;
      uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AC28];
      sub_1C2527254(0, &qword_1EA2E5140, &qword_1EA2E5148, 0x1E4F677B0, MEMORY[0x1E4F1AC28]);
      unint64_t v76 = v36;
      sub_1C25272E8(&qword_1EA2E5150, &qword_1EA2E5140, v48);
      swift_retain();
      id v49 = v46;
      uint64_t v50 = v62;
      sub_1C254EB10();
      sub_1C25274DC(&qword_1EA2E5180, (void (*)(uint64_t))sub_1C2527094);
      uint64_t v51 = v64;
      uint64_t v52 = sub_1C254EBC0();

      (*(void (**)(char *, uint64_t))(v63 + 8))(v50, v51);
      uint64_t v78 = v52;
      id v77 = (id)sub_1C254FC70();
      uint64_t v53 = (uint64_t)v60;
      v41(v60, 1, 1, v59);
      uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
      sub_1C2527254(0, &qword_1EA2E5160, &qword_1EA2E5148, 0x1E4F677B0, MEMORY[0x1E4F1AAE0]);
      sub_1C25272E8(&qword_1EA2E5168, &qword_1EA2E5160, v54);
      uint64_t v55 = v65;
      sub_1C254EC70();
      sub_1C2527524(v53, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28]);

      swift_release();
      sub_1C25274DC(&qword_1EA2E5188, (void (*)(uint64_t))sub_1C2527158);
      swift_retain();
      uint64_t v56 = v67;
      sub_1C254EBB0();
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v55, v56);
    }
  }
  else
  {
    uint64_t v44 = (uint64_t)v74;
    (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v75 + 56))(v74, 1, 1, v76);
  }
  return sub_1C2527524(v44, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
}

uint64_t sub_1C25243B4(void **a1)
{
  uint64_t v1 = *a1;
  *(void *)(sub_1C25236B0() + qword_1EA2E00E0) = v1;
  id v2 = v1;
  swift_unknownObjectRelease();
  sub_1C22C0E90();
  swift_release();

  uint64_t result = sub_1C2523790();
  if (result)
  {
    uint64_t v4 = result;
    id v5 = objc_msgSend(v2, sel_gateway);
    id v6 = v5;
    if (v5) {

    }
    *(unsigned char *)(v4 + qword_1EA2E34A8) = v6 == 0;
    sub_1C241FF30();
    return swift_release();
  }
  return result;
}

void *sub_1C2524498(void *a1)
{
  id v2 = v1;
  v40[5] = sub_1C2524868(a1);
  v40[6] = v3;
  uint64_t v4 = (void *)v1[2];
  id v5 = (void *)v1[3];
  type metadata accessor for RecordDetailsDataSource();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + qword_1EA2E0E70) = v4;
  id v7 = v4;
  id v8 = v5;
  swift_retain();
  id v9 = objc_msgSend(v8, sel_healthRecordsStore);
  *(void *)(v6 + qword_1EA2E0E78) = v9;
  id v10 = objc_msgSend(v8, sel_conceptStore);
  *(void *)(v6 + qword_1EA2E0E80) = v10;
  swift_release();
  uint64_t v11 = sub_1C254DF10();
  swift_retain();
  sub_1C2313560();
  swift_release();

  uint64_t v12 = MEMORY[0x1E4F66470];
  v40[7] = v11;
  v40[8] = MEMORY[0x1E4F66470];
  uint64_t v13 = sub_1C2523620();
  if (v13) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = 0;
  }
  v40[9] = v13;
  v40[10] = v14;
  uint64_t v15 = sub_1C2523668();
  if (v15) {
    uint64_t v16 = v12;
  }
  else {
    uint64_t v16 = 0;
  }
  v40[11] = v15;
  v40[12] = v16;
  uint64_t v17 = (void *)v2[2];
  uint64_t v18 = (void *)v2[4];
  uint64_t v19 = (void *)v2[5];
  type metadata accessor for RecordAttachmentsDataSource();
  swift_allocObject();
  id v20 = v17;
  id v21 = v18;
  v40[13] = sub_1C229B2C0(v20, v21, v19);
  v40[14] = v12;
  id v22 = (void *)v2[2];
  type metadata accessor for RecordDisplayNamesDataSource();
  swift_allocObject();
  v40[15] = sub_1C2238928(v22, v21);
  v40[16] = v12;
  v40[17] = sub_1C25236B0();
  v40[18] = v12;
  id v23 = (void *)v2[2];
  type metadata accessor for FHIRSourceDataSource();
  swift_allocObject();
  v40[19] = sub_1C24A5DC0(v8, v23);
  v40[20] = MEMORY[0x1E4F66318];
  uint64_t v24 = sub_1C2523790();
  if (v24) {
    uint64_t v25 = v12;
  }
  else {
    uint64_t v25 = 0;
  }
  v40[21] = v24;
  v40[22] = v25;
  unsigned int v26 = objc_msgSend(self, sel_isAppleInternalInstall);
  uint64_t v27 = 0;
  uint64_t v28 = 0;
  if (v26)
  {
    uint64_t v29 = (void *)v2[2];
    type metadata accessor for RecordConceptsDataSource();
    *(void *)(swift_allocObject() + qword_1EA2E1048) = v29;
    id v30 = v29;
    uint64_t v27 = sub_1C254DF10();
    swift_retain();
    sub_1C232E570();
    swift_release();

    uint64_t v28 = MEMORY[0x1E4F66470];
  }
  uint64_t v31 = 0;
  v40[23] = v27;
  v40[24] = v28;
  uint64_t v32 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v34 = v40[v31 + 5];
    if (v34)
    {
      uint64_t v35 = v40[v31 + 6];
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v40[0] = (uint64_t)v32;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v32 = sub_1C226C148(0, v32[2] + 1, 1, v32);
        v40[0] = (uint64_t)v32;
      }
      unint64_t v38 = v32[2];
      unint64_t v37 = v32[3];
      if (v38 >= v37 >> 1)
      {
        uint64_t v32 = sub_1C226C148((void *)(v37 > 1), v38 + 1, 1, v32);
        v40[0] = (uint64_t)v32;
      }
      uint64_t ObjectType = swift_getObjectType();
      sub_1C2332694(v38, v34, v40, ObjectType, v35);
    }
    v31 += 2;
  }
  while (v31 != 20);
  sub_1C2527034(0, (unint64_t *)&qword_1EA2DF5A8, (unint64_t *)&qword_1EA2DEA40);
  swift_arrayDestroy();
  return v32;
}

uint64_t sub_1C2524868(void *a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for PresentationContext(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (void *)v2[2];
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    swift_getObjectType();
    uint64_t v9 = swift_conformsToProtocol2();
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 0;
    }
    if (v9) {
      uint64_t v11 = (uint64_t)a1;
    }
    else {
      uint64_t v11 = 0;
    }
    if (v11) {
      id v12 = a1;
    }
    else {
      uint64_t v10 = 0;
    }
    uint64_t v13 = (void *)v2[3];
    id v14 = v7;
    id v15 = objc_msgSend(v13, sel_healthStore);
    sub_1C242B528((uint64_t)v2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider_presentationContext, (uint64_t)v6);
    type metadata accessor for MedicalAttachmentDataSource();
    swift_allocObject();
    v2[7] = sub_1C2547A4C(v14, v15, (uint64_t)v6, v11, v10);
    swift_release();
    uint64_t result = v2[7];
    if (result) {
      return swift_retain();
    }
  }
  return result;
}

uint64_t sub_1C25249DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2526D9C(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v16 - v7;
  id v9 = objc_msgSend(*(id *)(v1 + 16), sel_originIdentifier);
  id v10 = objc_msgSend(v9, sel_signedClinicalDataRecordIdentifier);

  if (!v10)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
    goto LABEL_5;
  }
  sub_1C254CB20();

  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
LABEL_5:
    sub_1C2527524((uint64_t)v8, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
    return 0;
  }
  sub_1C2527524((uint64_t)v8, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  uint64_t v11 = *(void **)(v1 + 48);
  type metadata accessor for WalletIntegrationDataSource();
  swift_allocObject();
  id v12 = v11;
  uint64_t v13 = sub_1C254418C(v12);

  uint64_t v14 = *(void *)(v1
                  + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___walletIntegrationDataSource);
  *(void *)(v1
            + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___walletIntegrationDataSource) = v13;
  swift_retain();
  sub_1C2527690(v14);
  return v13;
}

uint64_t sub_1C2524C78()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2526D9C(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v16 - v6;
  id v8 = objc_msgSend(*(id *)(v0 + 16), sel_originIdentifier);
  id v9 = objc_msgSend(v8, sel_signedClinicalDataRecordIdentifier);

  if (v9)
  {
    sub_1C254CB20();

    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v4, v1);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v1);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) != 1)
    {
      sub_1C2527524((uint64_t)v7, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
      id v10 = *(void **)(v0 + 24);
      uint64_t v11 = *(void **)(v0 + 48);
      type metadata accessor for SignedClinicalDataStatusDataSource(0);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + qword_1EA2DF120) = 0;
      *(void *)(v12 + qword_1EA2DF110) = v10;
      *(void *)(v12 + qword_1EA2DF118) = v11;
      id v13 = v10;
      id v14 = v11;
      return sub_1C254DF10();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v7, 1, 1, v1);
  }
  sub_1C2527524((uint64_t)v7, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  return 0;
}

uint64_t sub_1C2524F30()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2526D9C(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v14 - v6;
  id v8 = objc_msgSend(*(id *)(v0 + 16), sel_originIdentifier);
  id v9 = objc_msgSend(v8, sel_signedClinicalDataRecordIdentifier);

  if (v9)
  {
    sub_1C254CB20();

    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v4, v1);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v1);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) != 1)
    {
      sub_1C2527524((uint64_t)v7, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
      id v10 = *(id *)(v0 + 16);
      id v11 = sub_1C252357C();
      type metadata accessor for DeleteRecordDataSource();
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + qword_1EA2E34A0) = 0;
      *(void *)(v12 + qword_1EA2E3490) = v10;
      *(void *)(v12 + qword_1EA2E3498) = v11;
      *(unsigned char *)(v12 + qword_1EA2E34A8) = 0;
      return sub_1C254DF10();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v7, 1, 1, v1);
  }
  sub_1C2527524((uint64_t)v7, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  return 0;
}

uint64_t sub_1C2525204@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_1C2527254(0, &qword_1EA2E3B28, (unint64_t *)&qword_1EA2E1530, 0x1E4F67708, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  id v7 = a1;
  id v8 = a2;
  uint64_t result = sub_1C254EAF0();
  *a3 = result;
  return result;
}

void sub_1C25252C8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1C236FFFC;
  *(void *)(v9 + 24) = v8;
  v11[4] = sub_1C2527688;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1C23447F8;
  v11[3] = &block_descriptor_70;
  id v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_fetchAccountForSource_completion_, a4, v10);
  _Block_release(v10);
}

void sub_1C25253E8(void *a1, id a2, void (*a3)(void *, uint64_t))
{
  if (a1)
  {
    id v9 = a1;
    a3(a1, 0);
    uint64_t v5 = v9;
  }
  else
  {
    if (a2) {
      id v7 = a2;
    }
    else {
      id v7 = objc_msgSend(self, sel_hk_error_userInfo_, 0, 0);
    }
    id v8 = a2;
    a3(v7, 1);
    uint64_t v5 = v7;
  }
}

uint64_t sub_1C25254CC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  id v10 = (void *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  sub_1C2527254(0, &qword_1EA2E5140, &qword_1EA2E5148, 0x1E4F677B0, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  id v11 = a1;
  swift_retain();
  uint64_t result = sub_1C254EAF0();
  *a5 = result;
  return result;
}

void sub_1C252559C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  id v13 = *(void **)(a4 + 16);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = sub_1C236FFFC;
  void v14[3] = v12;
  v14[4] = a6;
  v17[4] = sub_1C2527674;
  v17[5] = v14;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  void v17[2] = sub_1C23447F8;
  v17[3] = &block_descriptor_58;
  id v15 = _Block_copy(v17);
  swift_retain();
  id v16 = v13;
  swift_release();
  objc_msgSend(a3, sel_fetchSignedClinicalDataGroupBackingMedicalRecord_options_completion_, v16, a5, v15);
  _Block_release(v15);
}

void sub_1C25256E4(void *a1, void *a2, void (*a3)(void *, void), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1C254E560();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v32 = a1;
    a3(a1, 0);
    id v13 = v32;
  }
  else
  {
    if (a2)
    {
      id v14 = a2;
    }
    else
    {
      id v15 = self;
      id v16 = (void *)sub_1C254F430();
      id v14 = objc_msgSend(v15, sel_hk_error_description_, 0, v16);
    }
    id v17 = a2;
    sub_1C254E510();
    id v18 = v14;
    id v19 = v14;
    id v20 = sub_1C254E550();
    os_log_type_t v21 = sub_1C254FA20();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v31 = v23;
      *(_DWORD *)uint64_t v22 = 136446466;
      id v32 = a3;
      uint64_t v33 = v23;
      uint64_t v34 = a5;
      swift_getMetatypeMetadata();
      uint64_t v24 = sub_1C254F4F0();
      uint64_t v34 = sub_1C21AD354(v24, v25, &v33);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      uint64_t v34 = (uint64_t)v14;
      id v26 = v14;
      sub_1C2270AE4(0, (unint64_t *)&qword_1EBB70060);
      uint64_t v27 = sub_1C254F4F0();
      uint64_t v34 = sub_1C21AD354(v27, v28, &v33);
      sub_1C2550120();
      a3 = (void (*)(void *, void))v32;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v20, v21, "%{public}s: Failed to fetch SCD group with error: %{public}s", (uint8_t *)v22, 0x16u);
      uint64_t v29 = v31;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v29, -1, -1);
      MEMORY[0x1C875A0B0](v22, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    id v30 = v14;
    a3(v14, 1);
  }
}

void sub_1C2525A68(void *a1)
{
  sub_1C2526D9C(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v33 - v3;
  uint64_t v5 = sub_1C2523620();
  if (v5)
  {
    uint64_t v6 = *(void **)(v5 + qword_1EA2E54B0);
    *(void *)(v5 + qword_1EA2E54B0) = a1;
    id v7 = a1;

    sub_1C2541124();
    swift_release();
  }
  uint64_t v8 = sub_1C25236B0();
  id v9 = objc_msgSend(a1, sel_mainRecord);
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = objc_msgSend(v9, sel_subject);
  }
  else
  {
    id v11 = 0;
  }
  uint64_t v12 = *(void **)(v8 + qword_1EA2E0100);
  *(void *)(v8 + qword_1EA2E0100) = v11;
  id v13 = v11;

  sub_1C22C0E90();
  swift_release();

  uint64_t v14 = sub_1C2523790();
  if (v14)
  {
    id v15 = *(void **)(v14 + qword_1EA2E34A0);
    *(void *)(v14 + qword_1EA2E34A0) = a1;
    id v16 = a1;

    sub_1C241FF30();
    swift_release();
  }
  id v17 = (objc_class *)type metadata accessor for SignedClinicalDataGroupContext();
  id v18 = (char *)objc_allocWithZone(v17);
  *(void *)&v18[OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_qrImage] = 0;
  *(void *)&v18[OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_group] = a1;
  v33.receiver = v18;
  v33.super_class = v17;
  id v19 = a1;
  id v20 = (char *)objc_msgSendSuper2(&v33, sel_init);
  uint64_t v21 = sub_1C2523668();
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = qword_1EA2DF120;
    uint64_t v24 = *(void *)(v21 + qword_1EA2DF120);
    if (v24)
    {
      unint64_t v25 = *(void **)(v24 + OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_qrImage);
      id v26 = *(void **)&v20[OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_qrImage];
      *(void *)&v20[OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_qrImage] = v25;
      id v27 = v25;

      unint64_t v28 = *(void **)(v22 + v23);
    }
    else
    {
      unint64_t v28 = 0;
    }
    *(void *)(v22 + v23) = v20;
    uint64_t v29 = v20;

    uint64_t v30 = sub_1C254F840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v4, 1, 1, v30);
    uint64_t v31 = (void *)swift_allocObject();
    v31[2] = 0;
    v31[3] = 0;
    v31[4] = v22;
    swift_retain();
    sub_1C24D0A0C((uint64_t)v4, (uint64_t)&unk_1EA2E5130, (uint64_t)v31);
    swift_release();
    swift_release();
  }
  id v32 = objc_msgSend(v19, sel_mainRecord);
  sub_1C2525D88(v32);
}

void sub_1C2525D88(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v27 = a1;
    if (objc_msgSend(v27, sel_shouldReverifySignature))
    {
      sub_1C254E510();
      id v8 = v27;
      swift_retain_n();
      id v9 = v8;
      uint64_t v10 = sub_1C254E550();
      os_log_type_t v11 = sub_1C254FA40();
      int v12 = v11;
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v13 = swift_slowAlloc();
        int v26 = v12;
        uint64_t v14 = v13;
        id v27 = (id)swift_slowAlloc();
        uint64_t v28 = v3;
        aBlock[0] = (uint64_t)v27;
        *(_DWORD *)uint64_t v14 = 136446466;
        swift_getMetatypeMetadata();
        uint64_t v15 = sub_1C254F4F0();
        uint64_t v28 = sub_1C21AD354(v15, v16, aBlock);
        sub_1C2550120();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2050;
        id v17 = objc_msgSend(v9, sel_signatureStatus);

        uint64_t v28 = (uint64_t)v17;
        sub_1C2550120();

        _os_log_impl(&dword_1C21A1000, v10, (os_log_type_t)v26, "%{public}s: Attempting to verify signature because it's currently %{public}ld", (uint8_t *)v14, 0x16u);
        id v18 = v27;
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v18, -1, -1);
        MEMORY[0x1C875A0B0](v14, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      id v20 = sub_1C252357C();
      uint64_t v21 = swift_allocObject();
      swift_weakInit();
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v21;
      *(void *)(v22 + 24) = v9;
      aBlock[4] = (uint64_t)sub_1C2526D84;
      aBlock[5] = v22;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1C2526A4C;
      aBlock[3] = (uint64_t)&block_descriptor_79;
      uint64_t v23 = _Block_copy(aBlock);
      id v24 = v9;
      swift_release();
      objc_msgSend(v20, sel_reverifySignatureForRecord_completion_, v24, v23);
      _Block_release(v23);
    }
    else
    {
      id v19 = v27;
    }
  }
}

uint64_t sub_1C2526158(char a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v49 = a2;
  id v50 = a5;
  uint64_t v7 = sub_1C254F1C0();
  uint64_t v53 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254F200();
  uint64_t v51 = *(void *)(v10 - 8);
  uint64_t v52 = v10;
  MEMORY[0x1F4188790](v10);
  int v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C254E560();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  id v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v45 - v18;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v21 = (void *)result;
    if (a1)
    {
      sub_1C254E510();
      swift_retain_n();
      uint64_t v22 = sub_1C254E550();
      os_log_type_t v23 = sub_1C254FA40();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        uint64_t v55 = v46;
        *(_DWORD *)uint64_t v24 = 136446466;
        uint64_t v45 = v24 + 4;
        aBlock[0] = *v21;
        swift_getMetatypeMetadata();
        uint64_t v48 = v14;
        uint64_t v25 = sub_1C254F4F0();
        uint64_t v47 = v13;
        aBlock[0] = sub_1C21AD354(v25, v26, &v55);
        sub_1C2550120();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 12) = 2050;
        uint64_t v27 = v49;
        aBlock[0] = v49;
        sub_1C2550120();
        _os_log_impl(&dword_1C21A1000, v22, v23, "%{public}s: Re-verified signature, which is now %{public}ld", (uint8_t *)v24, 0x16u);
        uint64_t v28 = v46;
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v28, -1, -1);
        MEMORY[0x1C875A0B0](v24, -1, -1);

        (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v47);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
        uint64_t v27 = v49;
      }
      objc_msgSend(v50, sel__setSignatureStatus_, v27, v45);
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
      uint64_t v43 = (void *)sub_1C254FC70();
      aBlock[4] = sub_1C2526D94;
      aBlock[5] = v21;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C224E544;
      aBlock[3] = &block_descriptor_36_1;
      uint64_t v44 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      sub_1C254F1E0();
      aBlock[0] = MEMORY[0x1E4FBC860];
      sub_1C25274DC((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
      sub_1C2526D9C(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
      sub_1C21FFDEC();
      sub_1C2550200();
      MEMORY[0x1C87581B0](0, v12, v9, v44);
      _Block_release(v44);
      swift_release();

      (*(void (**)(char *, uint64_t))(v53 + 8))(v9, v7);
      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v12, v52);
    }
    else
    {
      uint64_t v48 = v14;
      sub_1C254E510();
      swift_retain();
      id v29 = a3;
      swift_retain();
      id v30 = a3;
      uint64_t v31 = sub_1C254E550();
      os_log_type_t v32 = sub_1C254FA20();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        uint64_t v55 = v34;
        *(_DWORD *)uint64_t v33 = 136446466;
        uint64_t v47 = v13;
        aBlock[0] = *v21;
        swift_getMetatypeMetadata();
        uint64_t v35 = sub_1C254F4F0();
        aBlock[0] = sub_1C21AD354(v35, v36, &v55);
        sub_1C2550120();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v33 + 12) = 2082;
        uint64_t v53 = v33 + 14;
        aBlock[0] = a3;
        id v37 = a3;
        id v38 = a3;
        sub_1C2527034(0, (unint64_t *)&unk_1EBB6F530, (unint64_t *)&qword_1EBB70060);
        sub_1C25508F0();
        id v39 = (id)HKSensitiveLogItem();
        swift_unknownObjectRelease();
        sub_1C25501E0();
        swift_unknownObjectRelease();
        uint64_t v40 = sub_1C254F4F0();
        unint64_t v42 = v41;

        aBlock[0] = sub_1C21AD354(v40, v42, &v55);
        sub_1C2550120();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C21A1000, v31, v32, "%{public}s: Failed to re-verify signature status with error: %{public}s", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v34, -1, -1);
        MEMORY[0x1C875A0B0](v33, -1, -1);
        swift_release();

        return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v17, v47);
      }
      else
      {
        swift_release_n();

        return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v17, v13);
      }
    }
  }
  return result;
}

void sub_1C2526968(uint64_t a1)
{
  if (sub_1C2523620())
  {
    sub_1C2541124();
    swift_release();
  }
  if (sub_1C2523668())
  {
    sub_1C2251014();
    swift_release();
  }
  id v2 = objc_msgSend(self, sel_defaultCenter);
  id v3 = v2;
  if (qword_1EA2DD780 != -1)
  {
    swift_once();
    id v2 = v3;
  }
  objc_msgSend(v2, sel_postNotificationName_object_, qword_1EA2E2898, a1);
}

void sub_1C2526A4C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v8 = a4;
  v7(a2, a3, a4);
  swift_release();
}

id *sub_1C2526AD4()
{
  swift_release();
  sub_1C24CE280((uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider_presentationContext);
  objc_release(*(id *)((char *)v0
                     + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___signedClinicalDataStore));
  sub_1C2527690(*(uint64_t *)((char *)v0
                           + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___walletIntegrationDataSource));
  sub_1C2527690(*(uint64_t *)((char *)v0
                           + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___signedClinicalDataStatusDataSource));
  swift_release();
  sub_1C2527690(*(uint64_t *)((char *)v0
                           + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___deleteRecordDataSource));
  return v0;
}

uint64_t sub_1C2526B7C()
{
  sub_1C2526AD4();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2526BD4()
{
  return type metadata accessor for MedicalRecordDetailDataSourceProvider();
}

uint64_t type metadata accessor for MedicalRecordDetailDataSourceProvider()
{
  uint64_t result = qword_1EA2E5120;
  if (!qword_1EA2E5120) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2526C28()
{
  uint64_t result = type metadata accessor for PresentationContext(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_1C2526CE8(void *a1)
{
  return sub_1C2524498(a1);
}

uint64_t sub_1C2526D0C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2526D44()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2526D84(char a1, uint64_t a2, void *a3)
{
  return sub_1C2526158(a1, a2, a3, *(void *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t block_destroy_helper_75()
{
  return swift_release();
}

void sub_1C2526D94()
{
  sub_1C2526968(v0);
}

void sub_1C2526D9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2526E00()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2526E40(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C222399C;
  return sub_1C224FEA0(a1, v4, v5, v6);
}

void *sub_1C2526EF4(void *a1, void *a2, uint64_t a3)
{
  v3[7] = 0;
  *(void *)((char *)v3
            + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___signedClinicalDataStore) = 0;
  *(void *)((char *)v3
            + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___walletIntegrationDataSource) = 1;
  *(void *)((char *)v3
            + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___signedClinicalDataStatusDataSource) = 1;
  *(void *)((char *)v3
            + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___recordSourceDataSource) = 0;
  *(void *)((char *)v3
            + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider____lazy_storage___deleteRecordDataSource) = 1;
  v3[2] = a1;
  v3[3] = a2;
  id v6 = a1;
  id v7 = a2;
  v3[4] = objc_msgSend(v7, sel_healthRecordsStore);
  id v8 = objc_msgSend(v7, sel_conceptStore);
  v3[5] = v8;
  uint64_t v9 = (objc_class *)type metadata accessor for MedicalRecordFormatter();
  uint64_t v10 = (char *)objc_allocWithZone(v9);
  *(void *)&v10[OBJC_IVAR___HRMedicalRecordFormatter_store] = v8;
  *(void *)&v10[OBJC_IVAR___HRMedicalRecordFormatter_context] = 1;
  v13.receiver = v10;
  v13.super_class = v9;
  id v11 = v8;
  v3[6] = objc_msgSendSuper2(&v13, sel_init);
  sub_1C242B528(a3, (uint64_t)v3 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordDetailDataSourceProvider_presentationContext);
  sub_1C25238B4();
  sub_1C24CE280(a3);
  return v3;
}

void sub_1C2527034(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C2270AE4(255, a3);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2527094()
{
  if (!qword_1EA2E5138)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AC28];
    sub_1C2527254(255, &qword_1EA2E5140, &qword_1EA2E5148, 0x1E4F677B0, MEMORY[0x1E4F1AC28]);
    sub_1C25272E8(&qword_1EA2E5150, &qword_1EA2E5140, v0);
    unint64_t v1 = sub_1C254EB20();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E5138);
    }
  }
}

void sub_1C2527158()
{
  if (!qword_1EA2E5158)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C2527254(255, &qword_1EA2E5160, &qword_1EA2E5148, 0x1E4F677B0, MEMORY[0x1E4F1AAE0]);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    sub_1C25272E8(&qword_1EA2E5168, &qword_1EA2E5160, v0);
    sub_1C22611AC();
    unint64_t v1 = sub_1C254E9B0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E5158);
    }
  }
}

void sub_1C2527254(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C21AB51C(255, a3);
    uint64_t v9 = sub_1C2270AE4(255, (unint64_t *)&qword_1EBB70060);
    unint64_t v10 = a5(a1, v8, v9, MEMORY[0x1E4FBC0F0]);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C25272E8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2527254(255, a2, &qword_1EA2E5148, 0x1E4F677B0, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2527340(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2527254(255, a2, (unint64_t *)&qword_1EA2E1530, 0x1E4F67708, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2527398()
{
  if (!qword_1EA2E5170)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C2527254(255, &qword_1EA2E3B58, (unint64_t *)&qword_1EA2E1530, 0x1E4F67708, MEMORY[0x1E4F1AAE0]);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    sub_1C2527340(&qword_1EA2E3B60, &qword_1EA2E3B58, v0);
    sub_1C22611AC();
    unint64_t v1 = sub_1C254E9B0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E5170);
    }
  }
}

uint64_t sub_1C2527494()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C25274D4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2525204(*(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_1C25274DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2527524(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2526D9C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2527594(void **a1)
{
  return sub_1C25243B4(a1);
}

uint64_t sub_1C25275A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C25254CC(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

void sub_1C25275AC(void **a1)
{
}

uint64_t objectdestroy_45Tm_0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C25275F8(uint64_t a1, uint64_t a2)
{
  sub_1C252559C(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1C2527604()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C252763C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C2527674(void *a1, void *a2)
{
  sub_1C25256E4(a1, a2, *(void (**)(void *, void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_1C2527680(uint64_t a1, uint64_t a2)
{
  sub_1C25252C8(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

void sub_1C2527688(void *a1, void *a2)
{
  sub_1C25253E8(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_1C2527690(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1C25276A0(uint64_t result)
{
  if (result != 1) {
    return swift_retain();
  }
  return result;
}

uint64_t RecordKindsResultWrapper.resultsByKind.getter()
{
  return swift_bridgeObjectRetain();
}

void *RecordKindsResultWrapper.upToAndIncludingAnchor.getter()
{
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

void *sub_1C252770C()
{
  uint64_t result = (void *)sub_1C252772C();
  off_1EBB6E418 = result;
  return result;
}

uint64_t sub_1C252772C()
{
  if (qword_1EBB6D880 != -1) {
    swift_once();
  }
  uint64_t v0 = (unsigned __int8 *)off_1EBB6F578;
  uint64_t v47 = *((void *)off_1EBB6F578 + 2);
  if (!v47) {
    return MEMORY[0x1E4FBC860];
  }
  id v58 = self;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = 0;
  id v2 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v45 = v0;
  while (1)
  {
    uint64_t v3 = v0[v1 + 32];
    id v4 = objc_msgSend(v58, sel_supportedRecordCategoriesByCategoryType, v44);
    if (v4)
    {
      uint64_t v5 = v4;
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FFC0);
      sub_1C21A9630();
      unint64_t v6 = sub_1C254F2D0();

      sub_1C21AA128(v6);
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();
      if (*(void *)(v8 + 16))
      {
        sub_1C21A95CC();
        uint64_t v9 = sub_1C2550680();
      }
      else
      {
        uint64_t v9 = MEMORY[0x1E4FBC868];
      }
      unint64_t v59 = v9;
      uint64_t v11 = swift_bridgeObjectRetain();
      sub_1C21A8FF0(v11, 1, &v59);
      swift_bridgeObjectRelease();
      unint64_t v10 = v59;
    }
    else
    {
      unint64_t v10 = sub_1C220615C(MEMORY[0x1E4FBC860]);
    }
    uint64_t v55 = v2;
    uint64_t v56 = v1;
    char v51 = v3;
    if (*(void *)(v10 + 16) && (uint64_t v12 = sub_1C21A93C4(v3), (v13 & 1) != 0))
    {
      uint64_t v14 = (void *)(*(void *)(v10 + 56) + 72 * v12);
      int v15 = *(unsigned __int8 *)v14;
      uint64_t v16 = (void *)v14[1];
      uint64_t v17 = v14[2];
      uint64_t v18 = v14[3];
      uint64_t v19 = v14[4];
      uint64_t v20 = v14[5];
      uint64_t v21 = v14[6];
      uint64_t v22 = v14[7];
      os_log_type_t v23 = (void *)v14[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v24 = v23;
      uint64_t v0 = v45;
      id v53 = v24;
      id v25 = v16;
      uint64_t v26 = v18;
      swift_bridgeObjectRelease();
      LOBYTE(v59) = v15;
      uint64_t v54 = v25;
      id v60 = v25;
      uint64_t v61 = v17;
      uint64_t v48 = v17;
      uint64_t v49 = v19;
      uint64_t v62 = v18;
      uint64_t v63 = v19;
      uint64_t v52 = v20;
      uint64_t v64 = v20;
      uint64_t v65 = v21;
      uint64_t v57 = v21;
    }
    else
    {
      swift_bridgeObjectRelease();
      id v27 = objc_msgSend(v58, sel_unknownRecordCategory);
      if (!v27) {
        goto LABEL_52;
      }
      sub_1C21AA50C(v27, (uint64_t)&v59);
      int v15 = v59;
      uint64_t v26 = v62;
      uint64_t v48 = v61;
      uint64_t v49 = v63;
      uint64_t v52 = v64;
      uint64_t v22 = v66;
      uint64_t v57 = v65;
      id v53 = v67;
      uint64_t v54 = v60;
    }
    uint64_t v28 = v0;
    id v29 = objc_msgSend(v58, sel_unknownRecordCategory);
    if (!v29) {
      break;
    }
    sub_1C21AA50C(v29, (uint64_t)&v59);
    id v30 = v60;
    uint64_t v31 = v65;
    uint64_t v32 = v66;
    uint64_t v33 = v67;
    if (v15 != v59)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v2 = v55;
      uint64_t v0 = v28;
      goto LABEL_29;
    }
    uint64_t v46 = v64;
    uint64_t v50 = v62;
    uint64_t v34 = v61;
    uint64_t v35 = v63;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
    if ((sub_1C254FF70() & 1) == 0) {
      goto LABEL_26;
    }
    uint64_t v36 = v31;
    if (v26)
    {
      uint64_t v37 = v57;
      if (!v50)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_27;
      }
      uint64_t v44 = v32;
      uint64_t v38 = v36;
      if ((v48 != v34 || v26 != v50) && (sub_1C2550870() & 1) == 0)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v44 = v32;
      uint64_t v38 = v31;
      uint64_t v37 = v57;
      if (v50)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_27;
      }
    }
    if ((v49 != v35 || v52 != v46) && (sub_1C2550870() & 1) == 0)
    {
LABEL_26:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
LABEL_28:
      uint64_t v0 = v45;
      id v2 = v55;
LABEL_29:
      uint64_t v39 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v2 = sub_1C226E2D4(0, *((void *)v2 + 2) + 1, 1, v2);
      }
      unint64_t v41 = *((void *)v2 + 2);
      unint64_t v40 = *((void *)v2 + 3);
      if (v41 >= v40 >> 1) {
        id v2 = sub_1C226E2D4((char *)(v40 > 1), v41 + 1, 1, v2);
      }
      *((void *)v2 + 2) = v41 + 1;
      v2[v41 + 32] = v51;
      goto LABEL_34;
    }
    id v2 = v55;
    if ((sub_1C22AB474(v37, v38) & 1) == 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v0 = v45;
      goto LABEL_29;
    }
    uint64_t v0 = v45;
    if ((sub_1C22AB474(v22, v44) & 1) == 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    char v42 = sub_1C254FF70();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v42 & 1) == 0) {
      goto LABEL_29;
    }
    uint64_t v39 = v56;
LABEL_34:
    uint64_t v1 = v39 + 1;
    if (v47 == v1)
    {
      swift_bridgeObjectRelease_n();
      return (uint64_t)v2;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t static RecordKindDataProvider.supportedDisplayCategoryKinds.getter()
{
  if (qword_1EBB6E428 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t RecordKindDataProvider.__allocating_init(healthStore:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  RecordKindDataProvider.init(healthStore:)(a1);
  return v2;
}

uint64_t sub_1C2527FD0(uint64_t a1, uint64_t a2)
{
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6FA60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
  *(void *)(inited + 32) = sub_1C254F470();
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 48) = sub_1C254F470();
  *(void *)(inited + 56) = v4;
  if (qword_1EBB6E428 != -1) {
    goto LABEL_31;
  }
  while (1)
  {
    unint64_t v5 = MEMORY[0x1E4FBC860];
    unint64_t v90 = MEMORY[0x1E4FBC860];
    uint64_t v70 = *((void *)off_1EBB6E418 + 2);
    if (!v70) {
      break;
    }
    uint64_t v65 = inited;
    unint64_t v6 = (char *)off_1EBB6E418;
    id v72 = self;
    uint64_t v69 = v6 + 32;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    while (1)
    {
      uint64_t v73 = v7;
      uint64_t v14 = v69[v7];
      id v15 = objc_msgSend(v72, sel_supportedRecordCategoriesByCategoryType);
      if (v15) {
        break;
      }
      uint64_t inited = MEMORY[0x1E4FBC868];
      if (!*(void *)(MEMORY[0x1E4FBC868] + 16)) {
        goto LABEL_24;
      }
LABEL_23:
      uint64_t v42 = sub_1C21A93C4(v14);
      if (v43)
      {
        uint64_t v8 = (void *)(*(void *)(inited + 56) + 72 * v42);
        uint64_t v9 = (void *)v8[1];
        unint64_t v10 = v8[7];
        uint64_t v11 = (void *)v8[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v12 = v11;
        id v13 = v9;
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
LABEL_24:
      swift_bridgeObjectRelease();
      id v44 = objc_msgSend(v72, sel_unknownRecordCategory);
      if (!v44)
      {
        __break(1u);
LABEL_33:
        uint64_t v63 = (void *)swift_allocError();
        swift_willThrow();
        id v80 = v63;
        id v64 = v63;
        sub_1C2206F9C();
        if (swift_dynamicCast())
        {
          uint64_t aBlock = 0;
          unint64_t v83 = 0xE000000000000000;
          sub_1C25503A0();
          sub_1C254F5A0();
          sub_1C25504F0();
          sub_1C254F5A0();
          sub_1C25505F0();
          __break(1u);
LABEL_35:
          sub_1C2550910();
          __break(1u);
        }
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t result = swift_unexpectedError();
        __break(1u);
        return result;
      }
      sub_1C21AA50C(v44, (uint64_t)&aBlock);
      id v13 = (id)v83;
      unint64_t v10 = v88;
      id v12 = v89;
LABEL_5:
      uint64_t v7 = v73 + 1;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1C22725C0(v10);
      if (v73 + 1 == v70)
      {
        swift_bridgeObjectRelease();
        unint64_t v5 = v90;
        uint64_t inited = v65;
        goto LABEL_27;
      }
    }
    uint64_t v16 = v15;
    unsigned int v71 = v14;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FFC0);
    sub_1C21A9630();
    unint64_t v17 = sub_1C254F2D0();

    sub_1C21AA128(v17);
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    if (!*(void *)(v19 + 16))
    {
      uint64_t inited = MEMORY[0x1E4FBC868];
      swift_bridgeObjectRetain();
LABEL_22:
      swift_bridgeObjectRelease_n();
      uint64_t v14 = v71;
      if (!*(void *)(inited + 16)) {
        goto LABEL_24;
      }
      goto LABEL_23;
    }
    sub_1C21A95CC();
    uint64_t inited = sub_1C2550680();
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v81 = inited;
    swift_bridgeObjectRetain();
    uint64_t v76 = v20;
    if (!v20) {
      goto LABEL_22;
    }
    uint64_t v21 = 0;
    unint64_t v22 = 0;
    uint64_t v75 = v19;
    while (v22 < *(void *)(v19 + 16))
    {
      uint64_t v23 = v19 + v21;
      long long v78 = *(_OWORD *)(v19 + v21 + 80);
      long long v79 = *(_OWORD *)(v19 + v21 + 96);
      char v24 = *(unsigned char *)(v19 + v21 + 40);
      uint64_t v25 = *(unsigned __int8 *)(v23 + 32);
      uint64_t v26 = *(void *)(v23 + 64);
      uint64_t v27 = *(void *)(v23 + 72);
      id v29 = *(void **)(v23 + 48);
      uint64_t v28 = *(void *)(v23 + 56);
      id v77 = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v30 = *((id *)&v79 + 1);
      if (!v29) {
        goto LABEL_22;
      }
      id v74 = v30;
      unint64_t v31 = sub_1C21A93C4(v25);
      uint64_t v33 = *(void *)(inited + 16);
      BOOL v34 = (v32 & 1) == 0;
      BOOL v35 = __OFADD__(v33, v34);
      uint64_t v36 = v33 + v34;
      if (v35) {
        goto LABEL_29;
      }
      char v37 = v32;
      if (*(void *)(inited + 24) < v36)
      {
        sub_1C2279214(v36, 1);
        uint64_t inited = v81;
        unint64_t v31 = sub_1C21A93C4(v25);
        if ((v37 & 1) != (v38 & 1)) {
          goto LABEL_35;
        }
      }
      if (v37) {
        goto LABEL_33;
      }
      *(void *)(inited + 8 * (v31 >> 6) + 64) |= 1 << v31;
      *(unsigned char *)(*(void *)(inited + 48) + v31) = v25;
      uint64_t v39 = *(void *)(inited + 56) + 72 * v31;
      *(unsigned char *)uint64_t v39 = v24;
      *(void *)(v39 + 8) = v77;
      *(void *)(v39 + 16) = v28;
      *(void *)(v39 + 24) = v26;
      *(void *)(v39 + 32) = v27;
      *(_OWORD *)(v39 + 40) = v78;
      *(_OWORD *)(v39 + 56) = v79;
      uint64_t v40 = *(void *)(inited + 16);
      BOOL v35 = __OFADD__(v40, 1);
      uint64_t v41 = v40 + 1;
      if (v35) {
        goto LABEL_30;
      }
      ++v22;
      *(void *)(inited + 16) = v41;
      v21 += 80;
      uint64_t v19 = v75;
      if (v76 == v22) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_once();
  }
LABEL_27:
  sub_1C2494D14(v5, (void *)inited);
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1C255CEB0;
  sub_1C254F470();
  id v46 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v47 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v48 = objc_msgSend(v46, sel_initWithKey_ascending_, v47, 0);

  *(void *)(v45 + 32) = v48;
  uint64_t aBlock = v45;
  sub_1C254F730();
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1C255CD90;
  *(void *)(v49 + 32) = sub_1C254F470();
  *(void *)(v49 + 40) = v50;
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = a1;
  *(void *)(v51 + 24) = a2;
  id v52 = objc_allocWithZone(MEMORY[0x1E4F2B430]);
  sub_1C21AB51C(0, &qword_1EBB6EF58);
  swift_retain();
  id v53 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  uint64_t v54 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  uint64_t v55 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  uint64_t v86 = sub_1C252925C;
  uint64_t v87 = v51;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v83 = 1107296256;
  uint64_t v84 = sub_1C2274608;
  long long v85 = &block_descriptor_80;
  uint64_t v56 = _Block_copy(&aBlock);
  id v57 = objc_msgSend(v52, sel_initWithQueryDescriptors_sortDescriptors_followingAnchor_upToAndIncludingAnchor_distinctByKeyPaths_limit_resultsHandler_, v53, v54, 0, 0, v55, 0, v56);

  _Block_release(v56);
  swift_release();
  id v58 = v57;
  unint64_t v59 = (void *)sub_1C254F430();
  objc_msgSend(v58, sel_setDebugIdentifier_, v59);

  objc_msgSend(*(id *)(v68 + 16), sel_executeQuery_, v58);
  uint64_t v60 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = v60;
  *(void *)(v61 + 24) = v58;
  type metadata accessor for CancellationToken();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  *(void *)(result + 24) = sub_1C227475C;
  *(void *)(result + 32) = v61;
  return result;
}

void sub_1C2528958(uint64_t a1, unint64_t a2, void *a3, void *a4, void (*a5)(void), uint64_t a6)
{
  sub_1C21ACF14(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)&v83 - v12;
  uint64_t v14 = type metadata accessor for CategoryRecordKind();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v92 = v14;
  uint64_t v93 = v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v91 = (uint64_t)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v94 = (unsigned __int8 *)&v83 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v83 - v20;
  if (!a2)
  {
    id v29 = 0;
    unint64_t v23 = 0;
    goto LABEL_55;
  }
  unint64_t v22 = sub_1C21EF864(a2);
  unint64_t v23 = v22;
  if (!v22)
  {
    id v29 = 0;
    goto LABEL_55;
  }
  uint64_t v24 = MEMORY[0x1E4FBC860];
  v96[0] = MEMORY[0x1E4FBC860];
  if (v22 >> 62) {
    uint64_t v25 = sub_1C2550620();
  }
  else {
    uint64_t v25 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v86 = a6;
  uint64_t v87 = a5;
  id v84 = a3;
  long long v85 = a4;
  if (!v25)
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x1E4FBC860];
    if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
      goto LABEL_35;
    }
LABEL_20:
    if ((v30 & 0x4000000000000000) == 0)
    {
      uint64_t v31 = *(void *)(v30 + 16);
      if (!v31)
      {
LABEL_36:
        swift_release();
        uint64_t v33 = MEMORY[0x1E4FBC860];
LABEL_37:
        v96[0] = MEMORY[0x1E4FBC868];
        uint64_t v51 = *(void *)(v33 + 16);
        if (v51)
        {
          uint64_t v52 = *(unsigned __int8 *)(v93 + 80);
          uint64_t v53 = (v52 + 32) & ~v52;
          uint64_t v54 = v33 + v53;
          uint64_t v55 = *(void *)(v93 + 72);
          uint64_t v93 = v55 + v53;
          id v29 = (void *)MEMORY[0x1E4FBC868];
          uint64_t v90 = v52 | 7;
          long long v89 = xmmword_1C255CD90;
          uint64_t v92 = v33;
          while (1)
          {
            id v57 = v94;
            sub_1C2529554(v54, (uint64_t)v94);
            uint64_t v58 = *v57;
            unint64_t v60 = sub_1C21A93C4(v58);
            uint64_t v61 = v29[2];
            BOOL v62 = (v59 & 1) == 0;
            uint64_t v63 = v61 + v62;
            if (__OFADD__(v61, v62)) {
              break;
            }
            char v64 = v59;
            if (v29[3] < v63)
            {
              sub_1C2280110(v63, 1);
              id v29 = (void *)v96[0];
              uint64_t v65 = sub_1C21A93C4(v58);
              if ((v64 & 1) != (v66 & 1)) {
                goto LABEL_65;
              }
              unint64_t v60 = v65;
            }
            if (v64)
            {
              uint64_t v67 = v55;
              uint64_t v68 = v29[7];
              sub_1C25294F0((uint64_t)v94, v91);
              unint64_t v69 = *(void *)(v68 + 8 * v60);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *(void *)(v68 + 8 * v60) = v69;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                unint64_t v69 = sub_1C226E418(0, *(void *)(v69 + 16) + 1, 1, v69);
                *(void *)(v68 + 8 * v60) = v69;
              }
              unint64_t v72 = *(void *)(v69 + 16);
              unint64_t v71 = *(void *)(v69 + 24);
              if (v72 >= v71 >> 1)
              {
                unint64_t v69 = sub_1C226E418(v71 > 1, v72 + 1, 1, v69);
                *(void *)(v68 + 8 * v60) = v69;
              }
              *(void *)(v69 + 16) = v72 + 1;
              uint64_t v56 = v69 + v53 + v72 * v67;
              uint64_t v55 = v67;
              sub_1C25294F0(v91, v56);
            }
            else
            {
              sub_1C21ACF14(0, &qword_1EA2DF5C8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordKind, MEMORY[0x1E4FBBE00]);
              uint64_t v73 = swift_allocObject();
              *(_OWORD *)(v73 + 16) = v89;
              sub_1C25294F0((uint64_t)v94, v73 + v53);
              v29[(v60 >> 6) + 8] |= 1 << v60;
              *(unsigned char *)(v29[6] + v60) = v58;
              *(void *)(v29[7] + 8 * v60) = v73;
              uint64_t v74 = v29[2];
              BOOL v75 = __OFADD__(v74, 1);
              uint64_t v76 = v74 + 1;
              if (v75) {
                goto LABEL_62;
              }
              void v29[2] = v76;
            }
            v54 += v55;
            if (!--v51)
            {
              swift_bridgeObjectRelease();
              goto LABEL_54;
            }
          }
          __break(1u);
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        swift_bridgeObjectRelease();
        id v29 = (void *)MEMORY[0x1E4FBC868];
LABEL_54:
        unint64_t v23 = (unint64_t)objc_msgSend(v84, sel_upToAndIncludingAnchor);
        a5 = v87;
        a4 = v85;
LABEL_55:
        sub_1C2405F2C();
        uint64_t v77 = swift_allocError();
        long long v78 = (void *)v77;
        if (a4)
        {
          id v79 = a4;

          id v80 = 0;
          char v81 = 1;
        }
        else if (v29)
        {
          id v82 = (id)v23;
          swift_bridgeObjectRetain();

          char v81 = 0;
          a4 = v29;
          id v80 = (void *)v23;
        }
        else
        {
          id v80 = 0;
          char v81 = 1;
          a4 = (void *)v77;
        }
        v96[0] = a4;
        v96[1] = v80;
        char v97 = v81;
        a5(v96);
        sub_1C2529464((uint64_t)v29, (void *)v23);
        sub_1C25294A4(a4, v80, v81);
        return;
      }
LABEL_22:
      v96[0] = v24;
      sub_1C22750EC(0, v31 & ~(v31 >> 63), 0);
      if (v31 < 0) {
        goto LABEL_64;
      }
      uint64_t v32 = 0;
      uint64_t v33 = v96[0];
      unint64_t v88 = v30 & 0xC000000000000001;
      *(void *)&long long v89 = v31;
      uint64_t v90 = v30;
      do
      {
        if (v88) {
          id v34 = (id)MEMORY[0x1C87588E0](v32, v30);
        }
        else {
          id v34 = *(id *)(v30 + 8 * v32 + 32);
        }
        BOOL v35 = v34;
        HKMedicalRecord.categoryKind.getter(&v95);
        char v36 = v95;
        id v37 = objc_msgSend(v35, sel_primaryConcept);
        id v38 = objc_msgSend(v37, sel_groupByConcept);

        id v39 = objc_msgSend(v38, sel_identifier);
        id v40 = objc_msgSend(v39, sel_rawIdentifier);

        id v41 = objc_msgSend(v35, sel_displayNameForGroupByConcept);
        uint64_t v42 = sub_1C254F470();
        uint64_t v44 = v43;

        id v45 = objc_msgSend(v35, sel_meaningfulDate);
        if (v45)
        {
          id v46 = v45;
          sub_1C254CA80();

          uint64_t v47 = sub_1C254CAD0();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v13, 0, 1, v47);
        }
        else
        {

          uint64_t v48 = sub_1C254CAD0();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v13, 1, 1, v48);
        }
        char *v21 = v36;
        *((void *)v21 + 1) = v40;
        *((void *)v21 + 2) = v42;
        *((void *)v21 + 3) = v44;
        sub_1C22AE66C((uint64_t)v13, (uint64_t)&v21[*(int *)(v92 + 28)]);
        v96[0] = v33;
        unint64_t v50 = *(void *)(v33 + 16);
        unint64_t v49 = *(void *)(v33 + 24);
        if (v50 >= v49 >> 1)
        {
          sub_1C22750EC(v49 > 1, v50 + 1, 1);
          uint64_t v33 = v96[0];
        }
        ++v32;
        *(void *)(v33 + 16) = v50 + 1;
        sub_1C25294F0((uint64_t)v21, v33+ ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(void *)(v93 + 72) * v50);
        uint64_t v30 = v90;
      }
      while ((void)v89 != v32);
      swift_release();
      goto LABEL_37;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1C2550620();
    swift_release();
    if (!v31) {
      goto LABEL_36;
    }
    goto LABEL_22;
  }
  if (v25 >= 1)
  {
    for (uint64_t i = 0; i != v25; ++i)
    {
      if ((v23 & 0xC000000000000001) != 0) {
        id v27 = (id)MEMORY[0x1C87588E0](i, v23);
      }
      else {
        id v27 = *(id *)(v23 + 8 * i + 32);
      }
      uint64_t v28 = v27;
      if (objc_msgSend(v27, sel_canDefineConceptRoom))
      {
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v30 = v96[0];
    uint64_t v24 = MEMORY[0x1E4FBC860];
    if ((v96[0] & 0x8000000000000000) != 0) {
      goto LABEL_35;
    }
    goto LABEL_20;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  sub_1C2550910();
  __break(1u);
}

uint64_t RecordKindDataProvider.deinit()
{
  return v0;
}

uint64_t RecordKindDataProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C2529200(uint64_t a1, uint64_t a2)
{
  return sub_1C2527FD0(a1, a2);
}

uint64_t sub_1C2529224()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C252925C(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  sub_1C2528958(a1, a2, a3, a4, *(void (**)(void))(v4 + 16), *(void *)(v4 + 24));
}

uint64_t block_destroy_helper_76()
{
  return swift_release();
}

uint64_t sub_1C252926C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C25292A4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t dispatch thunk of RecordKindDataProviderProtocol.fetchRecordKinds(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

void *initializeBufferWithCopyOfBuffer for RecordKindsResultWrapper(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

void destroy for RecordKindsResultWrapper(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for RecordKindsResultWrapper(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a1[1];
  unint64_t v5 = (void *)a2[1];
  a1[1] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for RecordKindsResultWrapper(uint64_t a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for RecordKindsResultWrapper()
{
  return &type metadata for RecordKindsResultWrapper;
}

uint64_t method lookup function for RecordKindDataProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecordKindDataProvider);
}

uint64_t dispatch thunk of RecordKindDataProvider.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of RecordKindDataProvider.fetchRecordKinds(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

void sub_1C2529464(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_bridgeObjectRelease();
  }
}

void sub_1C25294A4(void *a1, void *a2, char a3)
{
  if (a3)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    a1 = a2;
  }
}

uint64_t sub_1C25294F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CategoryRecordKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2529554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CategoryRecordKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C25295BC()
{
  sub_1C252C760(v0+ OBJC_IVAR____TtCC15HealthRecordsUI24AccountOnboardingSessionP33_4967B47108071FD86EC67D018158994912StateManager_persistedAccountID, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t AccountOnboardingSession.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR___WDClinicalAccountOnboardingSession_context);
}

uint64_t AccountOnboardingSession.options.getter()
{
  return *(void *)(v0 + OBJC_IVAR___WDClinicalAccountOnboardingSession_options);
}

uint64_t AccountOnboardingSession.sourceIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___WDClinicalAccountOnboardingSession_sourceIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id AccountOnboardingSession.profile.getter()
{
  return *(id *)(v0 + OBJC_IVAR___WDClinicalAccountOnboardingSession_profile);
}

uint64_t sub_1C25296C8()
{
  return *(_DWORD *)(v0 + OBJC_IVAR___WDClinicalAccountOnboardingSession_options) & 1;
}

BOOL sub_1C25296F4()
{
  return *(void *)(v0 + OBJC_IVAR___WDClinicalAccountOnboardingSession_context) != 2;
}

id AccountOnboardingSession.__allocating_init(context:options:sourceIdentifier:profile:analyticsManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v13 = objc_allocWithZone(v6);
  id v14 = sub_1C252C1B4(a1, a2, a3, a4, a5, a6);

  return v14;
}

id AccountOnboardingSession.init(context:options:sourceIdentifier:profile:analyticsManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v8 = sub_1C252C1B4(a1, a2, a3, a4, a5, a6);

  return v8;
}

void sub_1C2529874(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___WDClinicalAccountOnboardingSession_sharingClient);
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      uint64_t v3 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      sub_1C22CC2DC(*(void *)(v1 + OBJC_IVAR___WDClinicalAccountOnboardingSession_context));
      uint64_t v4 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      void v6[4] = nullsub_1;
      v6[5] = 0;
      v6[0] = MEMORY[0x1E4F143A8];
      v6[1] = 1107296256;
      uint64_t v6[2] = sub_1C22AE944;
      v6[3] = &block_descriptor_81;
      unint64_t v5 = _Block_copy(v6);
      objc_msgSend(v2, sel_submitOnboardingAnalyticsForStepIdentifier_context_completion_, v3, v4, v5);
      _Block_release(v5);

      return;
    default:
      v6[0] = a1;
      sub_1C25508E0();
      __break(1u);
      JUMPOUT(0x1C2529A78);
  }
}

uint64_t sub_1C2529AE4(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_1C252C30C(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  *(void *)(v13 + 32) = v4;
  *(void *)(v13 + 40) = a1;
  *(unsigned char *)(v13 + 48) = a2;
  *(void *)(v13 + 56) = a3;
  *(void *)(v13 + 64) = a4;
  id v14 = v4;
  id v15 = a1;
  swift_retain();
  sub_1C24D0A0C((uint64_t)v11, (uint64_t)&unk_1EA2E3B48, v13);
  return swift_release();
}

uint64_t sub_1C2529C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a7;
  v8[3] = a8;
  uint64_t v11 = (void *)swift_task_alloc();
  v8[4] = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_1C2529CD4;
  return sub_1C252A120(a5, a6);
}

uint64_t sub_1C2529CD4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v5 = sub_1C2529E84;
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    unint64_t v5 = sub_1C2529DFC;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C2529DFC()
{
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = (void (*)(void *, void))v0[2];
  id v3 = v1;
  v2(v1, 0);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C2529E84()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = (void (*)(void, void *))v0[2];
  id v3 = v1;
  v2(0, v1);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_1C252A0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_1C254C810();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t sub_1C252A120(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 256) = a2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v2;
  sub_1C252C30C(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  *(void *)(v3 + 168) = swift_task_alloc();
  *(void *)(v3 + 176) = swift_task_alloc();
  sub_1C252C30C(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  *(void *)(v3 + 184) = swift_task_alloc();
  *(void *)(v3 + 192) = swift_task_alloc();
  uint64_t v4 = sub_1C254CB40();
  *(void *)(v3 + 200) = v4;
  *(void *)(v3 + 208) = *(void *)(v4 - 8);
  *(void *)(v3 + 216) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C252A294, 0, 0);
}

uint64_t sub_1C252A294()
{
  char v1 = *(unsigned char *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 152);
  id v3 = objc_msgSend(*(id *)(*(void *)(v0 + 160) + OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_clinicalAccountStore);
  *(void *)(v0 + 224) = v3;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 144;
  *(void *)(v0 + 24) = sub_1C252A3D4;
  uint64_t v4 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1C223F118;
  *(void *)(v0 + 104) = &block_descriptor_2;
  *(void *)(v0 + 112) = v4;
  objc_msgSend(v3, sel_persistEphemeralAccount_triggerIngestion_completion_, v2, (v1 & 1) == 0, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1C252A3D4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 232) = v1;
  if (v1) {
    uint64_t v2 = sub_1C252A970;
  }
  else {
    uint64_t v2 = sub_1C252A4E4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C252A4E4()
{
  uint64_t v1 = (void *)v0[28];
  uint64_t v2 = v0[20];
  id v3 = (void *)v0[18];
  v0[30] = v3;

  uint64_t v4 = *(void *)(v2 + OBJC_IVAR___WDClinicalAccountOnboardingSession_stateManager);
  v0[31] = v4;
  id v5 = objc_msgSend(v3, sel_identifier);
  sub_1C254CB20();

  return MEMORY[0x1F4188298](sub_1C252A598, v4, 0);
}

uint64_t sub_1C252A598()
{
  uint64_t v1 = v0[31];
  uint64_t v3 = v0[26];
  uint64_t v2 = v0[27];
  uint64_t v5 = v0[24];
  uint64_t v4 = v0[25];
  uint64_t v6 = v0[23];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v5, v2, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
  sub_1C252C3E0(v5, v6, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  uint64_t v7 = v1
     + OBJC_IVAR____TtCC15HealthRecordsUI24AccountOnboardingSessionP33_4967B47108071FD86EC67D018158994912StateManager_persistedAccountID;
  swift_beginAccess();
  sub_1C252C360(v6, v7);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return MEMORY[0x1F4188298](sub_1C252A6DC, 0, 0);
}

uint64_t sub_1C252A6DC()
{
  id v1 = objc_msgSend(*(id *)(v0 + 240), sel_gateway);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(v1, sel_patientPortalURL);

    uint64_t v4 = *(void *)(v0 + 168);
    if (v3)
    {
      sub_1C254C8A0();

      uint64_t v5 = sub_1C254C900();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
    }
    else
    {
      uint64_t v5 = sub_1C254C900();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    }
    uint64_t v9 = *(void *)(v0 + 176);
    sub_1C252C3E0(*(void *)(v0 + 168), v9, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
    sub_1C254C900();
    uint64_t v10 = *(void *)(v5 - 8);
    id v8 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) != 1)
    {
      uint64_t v11 = *(void *)(v0 + 176);
      id v8 = (void *)sub_1C254C870();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v5);
    }
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v7 = sub_1C254C900();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    id v8 = 0;
  }
  sub_1C23CCB04(6, *(void *)(*(void *)(v0 + 160) + OBJC_IVAR___WDClinicalAccountOnboardingSession_context), v8);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v13 = *(void *)(v0 + 240);
  return v12(v13);
}

uint64_t sub_1C252A970()
{
  id v1 = *(void **)(v0 + 224);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C252AA24(uint64_t a1)
{
  uint64_t v3 = sub_1C254CB40();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  sub_1C252C30C(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v14 - v7;
  uint64_t v9 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = 0;
  *((void *)v11 + 3) = 0;
  *((void *)v11 + 4) = v1;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v11[v10], (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  id v12 = v1;
  sub_1C24D0A0C((uint64_t)v8, (uint64_t)&unk_1EA2E51E8, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1C252AC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  sub_1C252C30C(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C252ACC0, 0, 0);
}

uint64_t sub_1C252ACC0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + OBJC_IVAR___WDClinicalAccountOnboardingSession_stateManager);
  *(void *)(v0 + 72) = v1;
  return MEMORY[0x1F4188298](sub_1C252ACEC, v1, 0);
}

uint64_t sub_1C252ACEC()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v5 = sub_1C254CB40();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v4, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v1, 0, 1, v5);
  sub_1C252C3E0(v1, v3, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  uint64_t v7 = v2
     + OBJC_IVAR____TtCC15HealthRecordsUI24AccountOnboardingSessionP33_4967B47108071FD86EC67D018158994912StateManager_persistedAccountID;
  swift_beginAccess();
  sub_1C252C360(v3, v7);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  id v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1C252B094()
{
  sub_1C252C30C(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v14 - v2;
  uint64_t v4 = sub_1C254F840();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = 0;
  v6[3] = 0;
  void v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_1C252C760((uint64_t)v3, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1C254F830();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1C254F7D0();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1EA2E51F8;
  *(void *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    void v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C252B2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x1F4188298](sub_1C252B31C, 0, 0);
}

uint64_t sub_1C252B31C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR___WDClinicalAccountOnboardingSession_stateManager);
  *(void *)(v0 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1C252B348, v1, 0);
}

uint64_t sub_1C252B348()
{
  *(unsigned char *)(*(void *)(v0 + 24)
           + OBJC_IVAR____TtCC15HealthRecordsUI24AccountOnboardingSessionP33_4967B47108071FD86EC67D018158994912StateManager_shouldDismissOnboardingTileViewController) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C252B3B8(void *a1, char a2)
{
  sub_1C252C30C(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v5 - 8);
  int v7 = (char *)&v13 - v6;
  uint64_t v8 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  *(void *)(v9 + 32) = v2;
  *(unsigned char *)(v9 + 40) = a2;
  *(void *)(v9 + 48) = a1;
  id v10 = a1;
  id v11 = v2;
  sub_1C24D0A0C((uint64_t)v7, (uint64_t)&unk_1EA2E5210, v9);
  return swift_release();
}

uint64_t sub_1C252B4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_1C2223E3C;
  return sub_1C252B6DC(a5, a6);
}

uint64_t sub_1C252B6DC(char a1, uint64_t a2)
{
  *(void *)(v3 + 40) = a2;
  *(void *)(v3 + 48) = v2;
  *(unsigned char *)(v3 + 104) = a1;
  sub_1C252C30C(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  *(void *)(v3 + 56) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C252B78C, 0, 0);
}

uint64_t sub_1C252B78C()
{
  uint64_t v1 = (uint64_t *)(v0[6] + OBJC_IVAR___WDClinicalAccountOnboardingSession_sourceIdentifier);
  uint64_t v2 = v1[1];
  if (v2)
  {
    uint64_t v3 = *v1;
    type metadata accessor for HealthRecordsViewRouter();
    static HealthRecordsViewRouter.navigateBack(to:)(v3, v2);
  }
  uint64_t v4 = (void *)v0[5];
  uint64_t v5 = v0[6];
  if (v4)
  {
    uint64_t v6 = *(void *)(v5 + OBJC_IVAR___WDClinicalAccountOnboardingSession_stateManager);
    v0[8] = v6;
    id v7 = v4;
    uint64_t v8 = sub_1C252B8FC;
    uint64_t v9 = v6;
    goto LABEL_5;
  }
  if (*(void *)(v5 + OBJC_IVAR___WDClinicalAccountOnboardingSession_context) == 2)
  {
    uint64_t v8 = (uint64_t (*)())objc_msgSend(self, sel_sharedBehavior);
    if (!v8)
    {
      __break(1u);
      return MEMORY[0x1F4188298](v8, v9, v10);
    }
    uint64_t v11 = v8;
    unsigned int v12 = objc_msgSend(v8, sel_isiPad);

    if (v12)
    {
      uint64_t v9 = *(void *)(v0[6] + OBJC_IVAR___WDClinicalAccountOnboardingSession_stateManager);
      v0[10] = v9;
      uint64_t v8 = sub_1C252BC28;
LABEL_5:
      uint64_t v10 = 0;
      return MEMORY[0x1F4188298](v8, v9, v10);
    }
  }
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1C252B8FC()
{
  *(unsigned char *)(v0 + 105) = *(unsigned char *)(*(void *)(v0 + 64)
                                  + OBJC_IVAR____TtCC15HealthRecordsUI24AccountOnboardingSessionP33_4967B47108071FD86EC67D018158994912StateManager_shouldDismissOnboardingTileViewController);
  return MEMORY[0x1F4188298](sub_1C252B92C, 0, 0);
}

uint64_t sub_1C252B92C()
{
  if (*(unsigned char *)(v0 + 105) == 1)
  {
    sub_1C254F820();
    *(void *)(v0 + 72) = sub_1C254F810();
    uint64_t v1 = sub_1C254F7D0();
    uint64_t v3 = v2;
    uint64_t v4 = sub_1C252BA94;
    uint64_t v5 = v1;
    uint64_t v6 = v3;
    goto LABEL_3;
  }

  if (*(void *)(*(void *)(v0 + 48) + OBJC_IVAR___WDClinicalAccountOnboardingSession_context) == 2)
  {
    uint64_t v4 = (uint64_t (*)())objc_msgSend(self, sel_sharedBehavior);
    if (!v4)
    {
      __break(1u);
      return MEMORY[0x1F4188298](v4, v5, v6);
    }
    id v7 = v4;
    unsigned int v8 = objc_msgSend(v4, sel_isiPad);

    if (v8)
    {
      uint64_t v5 = *(void *)(*(void *)(v0 + 48) + OBJC_IVAR___WDClinicalAccountOnboardingSession_stateManager);
      *(void *)(v0 + 80) = v5;
      uint64_t v4 = sub_1C252BC28;
      uint64_t v6 = 0;
LABEL_3:
      return MEMORY[0x1F4188298](v4, v5, v6);
    }
  }
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1C252BA94()
{
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 104);
  swift_release();
  objc_msgSend(v1, sel_dismissViewControllerAnimated_completion_, v2, 0);
  return MEMORY[0x1F4188298](sub_1C252BB1C, 0, 0);
}

uint64_t sub_1C252BB1C()
{
  if (*(void *)(*(void *)(v0 + 48) + OBJC_IVAR___WDClinicalAccountOnboardingSession_context) == 2)
  {
    uint64_t v1 = (uint64_t (*)())objc_msgSend(self, sel_sharedBehavior);
    if (!v1)
    {
      __break(1u);
      return MEMORY[0x1F4188298](v1, v2, v3);
    }
    uint64_t v4 = v1;
    unsigned int v5 = objc_msgSend(v1, sel_isiPad);

    if (v5)
    {
      uint64_t v2 = *(void *)(*(void *)(v0 + 48) + OBJC_IVAR___WDClinicalAccountOnboardingSession_stateManager);
      *(void *)(v0 + 80) = v2;
      uint64_t v1 = sub_1C252BC28;
      uint64_t v3 = 0;
      return MEMORY[0x1F4188298](v1, v2, v3);
    }
  }
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1C252BC28()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 80)
     + OBJC_IVAR____TtCC15HealthRecordsUI24AccountOnboardingSessionP33_4967B47108071FD86EC67D018158994912StateManager_persistedAccountID;
  swift_beginAccess();
  sub_1C21F4914(v2, v1);
  return MEMORY[0x1F4188298](sub_1C252BCBC, 0, 0);
}

uint64_t sub_1C252BCBC()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = sub_1C254CB40();
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  sub_1C252C760(v1, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  if (v3 == 1)
  {
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v0[11] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1C252BDFC;
    return MEMORY[0x1F4187DE0](500000000);
  }
}

uint64_t sub_1C252BDFC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0) {

  }
  type metadata accessor for HealthRecordsViewRouter();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 96) = v4;
  void *v4 = v3;
  v4[1] = sub_1C252BF5C;
  return sub_1C24C5E98(0xD000000000000022, 0x80000001C2581050);
}

uint64_t sub_1C252BF5C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

id AccountOnboardingSession.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AccountOnboardingSession.init()()
{
}

id AccountOnboardingSession.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountOnboardingSession();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C252C1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  *(void *)&v6[OBJC_IVAR___WDClinicalAccountOnboardingSession_context] = a1;
  *(void *)&v6[OBJC_IVAR___WDClinicalAccountOnboardingSession_options] = a2;
  uint64_t v9 = &v6[OBJC_IVAR___WDClinicalAccountOnboardingSession_sourceIdentifier];
  *(void *)uint64_t v9 = a3;
  *((void *)v9 + 1) = a4;
  *(void *)&v6[OBJC_IVAR___WDClinicalAccountOnboardingSession_profile] = a5;
  type metadata accessor for AccountOnboardingSession.StateManager();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v6;
  id v12 = a5;
  swift_defaultActor_initialize();
  uint64_t v13 = v10
      + OBJC_IVAR____TtCC15HealthRecordsUI24AccountOnboardingSessionP33_4967B47108071FD86EC67D018158994912StateManager_persistedAccountID;
  uint64_t v14 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(unsigned char *)(v10
           + OBJC_IVAR____TtCC15HealthRecordsUI24AccountOnboardingSessionP33_4967B47108071FD86EC67D018158994912StateManager_shouldDismissOnboardingTileViewController) = 0;
  *(void *)&v11[OBJC_IVAR___WDClinicalAccountOnboardingSession_stateManager] = v10;
  *(void *)&v11[OBJC_IVAR___WDClinicalAccountOnboardingSession_analyticsManager] = a6;
  id v15 = objc_allocWithZone(MEMORY[0x1E4F67770]);
  id v16 = a6;
  id v17 = objc_msgSend(v15, sel_init);
  *(void *)&v11[OBJC_IVAR___WDClinicalAccountOnboardingSession_sharingClient] = v17;

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for AccountOnboardingSession();
  return objc_msgSendSuper2(&v19, sel_init);
}

uint64_t block_destroy_helper_77()
{
  return swift_release();
}

void sub_1C252C30C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C252C360(uint64_t a1, uint64_t a2)
{
  sub_1C252C30C(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C252C3E0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C252C30C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C252C450(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1C254CB40() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1C2223E3C;
  return sub_1C252AC04(a1, v5, v6, v7, v8);
}

uint64_t sub_1C252C54C()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C252C58C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C2223E3C;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_1C252B31C, 0, 0);
}

uint64_t sub_1C252C634()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C252C670()
{
  char v2 = *(unsigned char *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_1C2223E3C;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[2] = v5;
  void *v5 = v4;
  v5[1] = sub_1C2223E3C;
  return sub_1C252B6DC(v2, v3);
}

uint64_t sub_1C252C760(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C252C30C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t type metadata accessor for AccountOnboardingSession()
{
  return self;
}

uint64_t method lookup function for AccountOnboardingSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountOnboardingSession);
}

uint64_t dispatch thunk of AccountOnboardingSession.shouldLaunchClinicalSharing.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AccountOnboardingSession.allowsCancellingClinicalOnboarding.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AccountOnboardingSession.__allocating_init(context:options:sourceIdentifier:profile:analyticsManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of AccountOnboardingSession.submitClinicalSharingOnboardingStepAnalytic(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of AccountOnboardingSession.persistEphemeralAccount(_:fromSharing:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of AccountOnboardingSession.persistEphemeralAccount(_:fromSharing:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0xB0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C252C9F8;
  return v9(a1, a2);
}

uint64_t sub_1C252C9F8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of AccountOnboardingSession.didAddStaticSampleAccount(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AccountOnboardingSession.markShouldDismissOnboardingTileViewController()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of AccountOnboardingSession.onboardingWillDisappear(with:animated:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AccountOnboardingSession.onboardingWillDisappear(animated:onboardingTileNavigationController:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v2) + 0xD0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C2223E3C;
  return v9(a1, a2);
}

uint64_t sub_1C252CCAC()
{
  return type metadata accessor for AccountOnboardingSession.StateManager();
}

uint64_t type metadata accessor for AccountOnboardingSession.StateManager()
{
  uint64_t result = qword_1EA2E5238;
  if (!qword_1EA2E5238) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C252CD00()
{
  sub_1C252C30C(319, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t objectdestroy_17Tm()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t objectdestroy_5Tm_1()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C252CEE4()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C252CF1C(uint64_t a1, uint64_t a2)
{
  sub_1C252A0B0(a1, a2, *(void *)(v2 + 16));
}

uint64_t objectdestroyTm_14()
{
  swift_unknownObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C252CF78()
{
  uint64_t v2 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 48);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 56);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1C222399C;
  *(_OWORD *)(v4 + 16) = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 32) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1C2529CD4;
  return sub_1C252A120(v2, v3);
}

id sub_1C252D074()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell____lazy_storage___titleLabel);
  }
  else
  {
    id v4 = sub_1C252D0D4();
    long long v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C252D0D4()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_labelColor);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v2, sel_setFont_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 1);
  objc_msgSend(v2, sel_setTextColor_, v1);

  id v3 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v2, sel_setFont_, v3);

  id v4 = objc_msgSend(v0, sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

id sub_1C252D210()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell____lazy_storage___spinnerView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell____lazy_storage___spinnerView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell____lazy_storage___spinnerView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
    id v5 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v4, sel_setColor_, v5);

    objc_msgSend(v4, sel_startAnimating);
    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void sub_1C252D2D8()
{
  uint64_t v1 = (uint64_t)&v0[OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_item];
  swift_beginAccess();
  sub_1C2227014(v1, (uint64_t)v19);
  if (v20)
  {
    sub_1C22270A8();
    type metadata accessor for ButtonItem();
    if (swift_dynamicCast())
    {
      uint64_t v2 = *(void *)(v18 + 40);
      id v3 = sub_1C252D074();
      id v4 = v3;
      if (v2)
      {
        objc_msgSend(v3, sel_setAttributedText_, v2);
      }
      else
      {
        if (*(void *)(v18 + 32))
        {
          swift_bridgeObjectRetain();
          uint64_t v5 = sub_1C254F430();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v5 = 0;
        }
        objc_msgSend(v4, sel_setText_, v5);

        id v4 = (void *)v5;
      }

      id v6 = sub_1C252D074();
      if (*(unsigned char *)(v18 + 16))
      {
        id v7 = &selRef_tintColor;
        uint64_t v8 = v0;
      }
      else
      {
        uint64_t v8 = self;
        id v7 = &selRef_secondaryLabelColor;
      }
      id v9 = [v8 *v7];
      objc_msgSend(v6, sel_setTextColor_, v9);

      sub_1C254FD80();
      id v10 = sub_1C252D074();
      uint64_t v11 = OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_nonBusyTitleLabelColor;
      id v12 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_nonBusyTitleLabelColor];
      if (v12)
      {
        id v13 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_nonBusyTitleLabelColor];
      }
      else
      {
        id v14 = sub_1C252D074();
        id v13 = objc_msgSend(v14, sel_textColor);

        id v12 = 0;
      }
      id v15 = v12;
      objc_msgSend(v10, sel_setTextColor_, v13);

      id v16 = *(void **)&v0[v11];
      *(void *)&v0[v11] = 0;

      if (*(void *)(v18 + 56))
      {
        swift_bridgeObjectRetain();
        id v17 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v17 = 0;
      }
      objc_msgSend(v0, sel_setAccessibilityIdentifier_, v17);
      swift_release();
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v19);
  }
}

id sub_1C252D534(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell____lazy_storage___spinnerView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_titleLabelLeadingConstraint] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_nonBusyTitleLabelColor] = 0;
  id v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_item];
  id v10 = (objc_class *)type metadata accessor for ButtonCell();
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v15.receiver = v4;
  v15.super_class = v10;
  id v11 = objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  id v12 = objc_msgSend(v11, sel_contentView);
  id v13 = sub_1C252D074();
  objc_msgSend(v12, sel_addSubview_, v13);

  sub_1C252D68C();
  return v11;
}

void sub_1C252D68C()
{
  id v1 = sub_1C252D074();
  id v2 = objc_msgSend(v1, sel_trailingAnchor);

  id v3 = objc_msgSend(v0, sel_contentView);
  id v4 = objc_msgSend(v3, sel_trailingAnchor);

  id v5 = objc_msgSend(v2, sel_constraintEqualToAnchor_constant_, v4, -16.0);
  objc_msgSend(v5, sel_setActive_, 1);

  id v6 = sub_1C252D074();
  id v7 = objc_msgSend(v6, sel_firstBaselineAnchor);

  id v8 = objc_msgSend(v0, sel_contentView);
  id v9 = objc_msgSend(v8, sel_topAnchor);

  id v10 = sub_1C252D074();
  id v11 = objc_msgSend(v10, sel_font);

  if (!v11)
  {
    __break(1u);
    goto LABEL_7;
  }
  objc_msgSend(v11, sel__scaledValueForValue_, 29.0);
  double v13 = v12;

  id v14 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v9, v13);
  objc_msgSend(v14, sel_setActive_, 1);

  id v15 = sub_1C252D074();
  id v16 = objc_msgSend(v15, sel_lastBaselineAnchor);

  id v17 = objc_msgSend(v0, sel_contentView);
  id v18 = objc_msgSend(v17, sel_bottomAnchor);

  id v19 = sub_1C252D074();
  id v20 = objc_msgSend(v19, sel_font);

  if (!v20)
  {
LABEL_7:
    __break(1u);
    return;
  }
  objc_msgSend(v20, sel__scaledValueForValue_, 15.0);
  double v22 = v21;

  id v23 = objc_msgSend(v16, sel_constraintEqualToAnchor_constant_, v18, -v22);
  objc_msgSend(v23, sel_setActive_, 1);

  sub_1C252D92C();
}

id sub_1C252D92C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_titleLabelLeadingConstraint;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_titleLabelLeadingConstraint];
  if (v2) {
    objc_msgSend(v2, sel_setActive_, 0);
  }
  id v3 = sub_1C252D074();
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  id v5 = objc_msgSend(v0, sel_contentView);
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, 16.0);
  id v8 = *(void **)&v0[v1];
  *(void *)&v0[v1] = v7;

  id result = *(id *)&v0[v1];
  if (result)
  {
    return objc_msgSend(result, sel_setActive_, 1);
  }
  return result;
}

void sub_1C252DA3C(char a1)
{
  sub_1C252E320(0, &qword_1EA2DE9F0, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  id v5 = (char *)v38 - v4;
  uint64_t v6 = sub_1C254E610();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254E5E0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v39 = v12;
    sub_1C252E320(0, &qword_1EA2DE9D8, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
    uint64_t v15 = *(void *)(sub_1C254E620() - 8);
    unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C255CD90;
    v38[2] = v17 + v16;
    v38[1] = sub_1C252D210();
    sub_1C2223C14();
    id v19 = (uint64_t (**)())&v9[*(int *)(v18 + 48)];
    uint64_t v20 = *MEMORY[0x1E4FB0E18];
    uint64_t v21 = sub_1C254E5A0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v9, v20, v21);
    *id v19 = sub_1C22267A4;
    v19[1] = 0;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FB0E60], v6);
    uint64_t v22 = sub_1C254E5B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v5, 1, 1, v22);
    sub_1C254E5D0();
    sub_1C254E590();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v39);
    sub_1C254FD80();
    uint64_t v23 = OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_nonBusyTitleLabelColor;
    uint64_t v24 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_nonBusyTitleLabelColor);
    uint64_t v25 = v24;
    id v26 = v24;
    if (!v24)
    {
      id v27 = sub_1C252D074();
      id v26 = objc_msgSend(v27, sel_textColor);

      uint64_t v25 = *(void **)(v1 + v23);
    }
    *(void *)(v1 + v23) = v26;
    id v28 = v24;

    id v29 = sub_1C252D074();
    id v30 = objc_msgSend(self, sel_tertiaryLabelColor);
    objc_msgSend(v29, sel_setTextColor_, v30);
  }
  else
  {
    sub_1C254FD80();
    id v31 = sub_1C252D074();
    uint64_t v32 = OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_nonBusyTitleLabelColor;
    uint64_t v33 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_nonBusyTitleLabelColor);
    if (v33)
    {
      id v34 = *(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_nonBusyTitleLabelColor);
    }
    else
    {
      id v35 = sub_1C252D074();
      id v34 = objc_msgSend(v35, sel_textColor);

      uint64_t v33 = 0;
    }
    id v36 = v33;
    objc_msgSend(v31, sel_setTextColor_, v34);

    id v37 = *(void **)(v1 + v32);
    *(void *)(v1 + v32) = 0;
  }
}

id sub_1C252DF04()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ButtonCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ButtonCell()
{
  return self;
}

uint64_t sub_1C252DFD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C252E02C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C252D2D8();
  return sub_1C2227100(a1);
}

void (*sub_1C252E09C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C252E0FC;
}

void sub_1C252E0FC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C252D2D8();
  }
}

uint64_t sub_1C252E130()
{
  uint64_t v4 = sub_1C2550AA0();
  sub_1C254F5A0();
  uint64_t v3 = *(void **)(v0 + 40);
  sub_1C252E320(0, &qword_1EA2E4278, (uint64_t (*)(uint64_t))sub_1C24A5C34, MEMORY[0x1E4FBB718]);
  id v1 = v3;
  sub_1C254F4F0();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C252E208()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ButtonItem()
{
  return self;
}

uint64_t sub_1C252E274()
{
  return sub_1C254D330();
}

uint64_t sub_1C252E2A8()
{
  return sub_1C252E130();
}

unint64_t sub_1C252E2CC()
{
  unint64_t result = qword_1EA2E45E8;
  if (!qword_1EA2E45E8)
  {
    type metadata accessor for ButtonCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E45E8);
  }
  return result;
}

void sub_1C252E320(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C252E384()
{
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell____lazy_storage___spinnerView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_titleLabelLeadingConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_nonBusyTitleLabelColor] = 0;
  id v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_item];
  *(_OWORD *)id v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;

  sub_1C25505F0();
  __break(1u);
}

double sub_1C252E438()
{
  double result = 0.0;
  xmmword_1EA2E5288 = xmmword_1C255E100;
  *(_OWORD *)&qword_1EA2E5298 = xmmword_1C2565E80;
  return result;
}

double static NSDirectionalEdgeInsets.feedItemViewMargins.getter()
{
  if (qword_1EA2DD950 != -1) {
    swift_once();
  }
  return *(double *)&xmmword_1EA2E5288;
}

double sub_1C252E4AC()
{
  double result = 8.0;
  xmmword_1EA2E52A8 = xmmword_1C2563B40;
  *(_OWORD *)&qword_1EA2E52B8 = xmmword_1C2563B40;
  return result;
}

double static NSDirectionalEdgeInsets.doubleWideStandardMargins.getter()
{
  if (qword_1EA2DD958 != -1) {
    swift_once();
  }
  return *(double *)&xmmword_1EA2E52A8;
}

double sub_1C252E518()
{
  double result = 0.0;
  xmmword_1EBB6E6E0 = xmmword_1C255E100;
  *(_OWORD *)&qword_1EBB6E6F0 = xmmword_1C255E100;
  return result;
}

double static NSDirectionalEdgeInsets.doubleWideHorizontalMargins.getter()
{
  if (qword_1EBB6E7E0 != -1) {
    swift_once();
  }
  return *(double *)&xmmword_1EBB6E6E0;
}

uint64_t sub_1C252E584()
{
  type metadata accessor for CategoryViewControllerManager();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_unknownObjectWeakInit();
  qword_1EA2E52C8 = v0;
  return result;
}

uint64_t static CategoryViewControllerManager.shared.getter()
{
  if (qword_1EA2DD968 != -1) {
    swift_once();
  }
  return swift_retain();
}

unint64_t sub_1C252E624()
{
  unint64_t result = MEMORY[0x1C875A200](v0 + 16);
  if (!result) {
    return result;
  }
  objc_super v2 = (void *)result;
  id v3 = objc_msgSend((id)result, sel_navigationController);
  if (!v3)
  {

    return 0;
  }
  uint64_t v4 = v3;
  unint64_t v5 = v2;
  id v6 = objc_msgSend(v4, sel_viewControllers);
  sub_1C21AB51C(0, &qword_1EA2DE3F0);
  unint64_t v7 = sub_1C254F710();

  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_5;
    }
LABEL_41:

    goto LABEL_42;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_41;
  }
LABEL_5:
  unint64_t v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
  }
  else if ((v7 & 0xC000000000000001) == 0)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v10 = *(id *)(v7 + 8 * v9 + 32);
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_49;
  }
  id v10 = (id)MEMORY[0x1C87588E0](v9, v7);
LABEL_10:
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  unint64_t v7 = (unint64_t)(id)v5;
  char v12 = sub_1C254FF70();

  if ((v12 & 1) == 0)
  {

    return 0;
  }
  uint64_t v13 = (char *)objc_msgSend((id)v7, sel_tabBarController);
  if (!v13) {
    goto LABEL_30;
  }
  id v14 = v13;
  id v15 = objc_msgSend(v13, sel_viewControllers);
  if (v15)
  {
    unint64_t v16 = v15;
    unint64_t v5 = sub_1C254F710();

    uint64_t v17 = (char *)objc_msgSend(v14, sel_selectedIndex);
    if ((v5 & 0xC000000000000001) == 0)
    {
      if (((unint64_t)v17 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v17 < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v18 = *(id *)(v5 + 8 * (void)v17 + 32);
        goto LABEL_17;
      }
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      id v30 = (id)MEMORY[0x1C87588E0](v17, v5);
LABEL_38:
      id v31 = v30;
      swift_bridgeObjectRelease();
      id v32 = (id)v7;
      id v33 = v31;
      char v34 = sub_1C254FF70();

      return v34 & 1;
    }
    id v18 = (id)MEMORY[0x1C87588E0](v17, v5);
LABEL_17:
    id v19 = v18;
    swift_bridgeObjectRelease();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
    char v20 = sub_1C254FF70();

    if (v20)
    {
      id v21 = objc_msgSend(v4, sel_viewControllers);
      unint64_t v5 = sub_1C254F710();

      if (v5 >> 62) {
        goto LABEL_58;
      }
      uint64_t v22 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v22) {
        goto LABEL_59;
      }
LABEL_20:
      unint64_t result = v22 - 1;
      if (__OFSUB__(v22, 1))
      {
        __break(1u);
      }
      else if ((v5 & 0xC000000000000001) == 0)
      {
        if ((result & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (result < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v23 = *(id *)(v5 + 8 * result + 32);
LABEL_25:
          uint64_t v24 = v23;
          swift_bridgeObjectRelease();
          id v25 = (id)v7;
          id v26 = v24;
          char v27 = sub_1C254FF70();

          if ((v27 & 1) == 0) {
            goto LABEL_30;
          }

          return 1;
        }
        __break(1u);
        return result;
      }
      id v23 = (id)MEMORY[0x1C87588E0](result, v5);
      goto LABEL_25;
    }
  }

  while (1)
  {
LABEL_30:
    id v28 = objc_msgSend(v4, sel_presentingViewController);

    if (!v28)
    {

      return 0;
    }
    id v29 = objc_msgSend(v4, sel_viewControllers);
    unint64_t v5 = sub_1C254F710();

    if (v5 >> 62) {
      break;
    }
    id v14 = *(char **)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v14) {
      goto LABEL_50;
    }
LABEL_33:
    uint64_t v17 = v14 - 1;
    if (__OFSUB__(v14, 1)) {
      goto LABEL_54;
    }
    if ((v5 & 0xC000000000000001) != 0) {
      goto LABEL_55;
    }
    if (((unint64_t)v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v17 < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v30 = *(id *)(v5 + 8 * (void)v17 + 32);
      goto LABEL_38;
    }
    __break(1u);
LABEL_58:
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_20;
    }
LABEL_59:

    swift_bridgeObjectRelease();
  }
LABEL_49:
  swift_bridgeObjectRetain();
  id v14 = (char *)sub_1C2550620();
  swift_bridgeObjectRelease();
  if (v14) {
    goto LABEL_33;
  }
LABEL_50:

LABEL_42:
  swift_bridgeObjectRelease();
  return 0;
}

BOOL sub_1C252EAE0()
{
  id v1 = (void *)MEMORY[0x1C875A200](v0 + 16);
  objc_super v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

uint64_t CategoryViewControllerManager.deinit()
{
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t CategoryViewControllerManager.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CategoryViewControllerManager()
{
  return self;
}

uint64_t method lookup function for CategoryViewControllerManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CategoryViewControllerManager);
}

uint64_t dispatch thunk of CategoryViewControllerManager.isCategoryViewControllerOnTop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of CategoryViewControllerManager.hasActiveCategoryViewController()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

void sub_1C252EBF4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x1C87588E0](0, a2);
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      unint64_t v5 = v4;
      sub_1C21AB51C(0, &qword_1EA2DE3F0);
      char v6 = sub_1C254FF70();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)MEMORY[0x1C87588E0](i + 1, a2);
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          unint64_t v9 = v8;
          char v10 = sub_1C254FF70();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_1C2550620();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

uint64_t sub_1C252ED90(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t result = 0;
  while (*(unsigned __int8 *)(a2 + 32 + result) != a1)
  {
    if (v2 == ++result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C252EDD8(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a2 + 32;
  if (a1) {
    uint64_t v5 = 0x7265656E69676E45;
  }
  else {
    uint64_t v5 = 0x647261646E617453;
  }
  if (a1) {
    unint64_t v6 = 0xEB00000000676E69;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  while (1)
  {
    uint64_t v7 = *(unsigned char *)(v4 + v3) ? 0x7265656E69676E45 : 0x647261646E617453;
    unint64_t v8 = *(unsigned char *)(v4 + v3) ? 0xEB00000000676E69 : 0xE800000000000000;
    if (v7 == v5 && v8 == v6) {
      break;
    }
    char v10 = sub_1C2550870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10) {
      return v3;
    }
    if (v2 == ++v3) {
      return 0;
    }
  }
  swift_bridgeObjectRelease_n();
  return v3;
}

uint64_t sub_1C252EF00(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = a1;
  if (*(unsigned __int8 *)(a2 + 32) == a1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v5 = v2 - 1;
  while (v5 != result)
  {
    int v6 = *(unsigned __int8 *)(a2 + 33 + result++);
    if (v6 == v3) {
      return result;
    }
  }
  return 0;
}

uint64_t sub_1C252EF64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == a1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v5 = v2 - 1;
  while (v5 != result)
  {
    uint64_t v6 = *(void *)(a2 + 40 + 8 * result++);
    if (v6 == a1) {
      return result;
    }
  }
  return 0;
}

void static Features.toggleMode(notify:)(char a1)
{
  if (qword_1EA2DD970 != -1) {
    swift_once();
  }
  char v3 = byte_1EA2E52D0;
  UserInterfaceMode.toggle()();
  char v2 = v3;
  _s15HealthRecordsUI8FeaturesC7setMode_6notifyyAA013UserInterfaceF0O_SbtFZ_0(&v2, a1 & 1);
}

void sub_1C252F048()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E520();
  swift_retain_n();
  unint64_t v8 = sub_1C254E550();
  os_log_type_t v9 = sub_1C254FA40();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v28 = v4;
    char v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v29 = v1;
    v30[0] = v11;
    uint64_t v12 = v11;
    *(_DWORD *)char v10 = 136446210;
    v27[1] = v10 + 4;
    uint64_t v31 = *(void *)v3;
    sub_1C2530848();
    uint64_t v13 = sub_1C254F510();
    uint64_t v31 = sub_1C21AD354(v13, v14, v30);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v8, v9, "Performing FeedItemAction: %%{public}%{public}s", v10, 0xCu);
    swift_arrayDestroy();
    uint64_t v15 = v12;
    uint64_t v2 = v29;
    MEMORY[0x1C875A0B0](v15, -1, -1);
    MEMORY[0x1C875A0B0](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v28);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1C21AB51C(0, &qword_1EA2DE898);
  unint64_t v16 = (void *)sub_1C254FAC0();
  if (qword_1EA2DD7A8 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_1EA2E2B78;
  sub_1C23E3688();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
  id v19 = v17;
  v30[0] = sub_1C254F430();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEC0);
  sub_1C23E1B3C();
  sub_1C2550330();
  if (qword_1EA2DD7B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  LOBYTE(v31) = *(unsigned char *)(v3 + 16);
  sub_1C23E14E8();
  uint64_t v20 = sub_1C254C450();
  if (v2)
  {

    sub_1C2298B34(inited + 32);
    swift_setDeallocating();
    sub_1C23E36E0();
    swift_arrayDestroy();
  }
  else
  {
    uint64_t v22 = v20;
    unint64_t v23 = v21;
    uint64_t v24 = sub_1C254C930();
    sub_1C2205E6C(v22, v23);
    *(void *)(inited + 96) = sub_1C21AB51C(0, &qword_1EA2E2C20);
    *(void *)(inited + 72) = v24;
    sub_1C2204984(inited);
    id v25 = objc_allocWithZone((Class)sub_1C254D1D0());
    id v26 = (void *)sub_1C254D1C0();
    objc_msgSend(v16, sel_addOperation_, v26);
  }
}

uint64_t UserInterfaceMode.rawValue.getter()
{
  if (*v0) {
    return 0x7265656E69676E45;
  }
  else {
    return 0x647261646E617453;
  }
}

id sub_1C252F524()
{
  return sub_1C252F554(&byte_1EA2E52D0);
}

id sub_1C252F554@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v23 - v7;
  id result = objc_msgSend(self, sel_isAppleInternalInstall);
  if (!result)
  {
LABEL_9:
    char v14 = 0;
    goto LABEL_14;
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6DD78);
  char v10 = (void *)sub_1C254FA70();
  uint64_t v11 = (void *)sub_1C254F430();
  id v12 = objc_msgSend(v10, sel_stringForKey_, v11);

  if (!v12) {
    goto LABEL_6;
  }
  sub_1C254F470();

  uint64_t v13 = sub_1C25506C0();
  swift_bridgeObjectRelease();
  if (!v13)
  {
    char v14 = 0;
    goto LABEL_11;
  }
  if (v13 != 1)
  {
LABEL_6:
    sub_1C254E4F0();
    uint64_t v15 = sub_1C254E550();
    os_log_type_t v16 = sub_1C254FA40();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_1C21A1000, v15, v16, "loaded null mode from disk", v17, 2u);
      MEMORY[0x1C875A0B0](v17, -1, -1);
    }

    id result = (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    goto LABEL_9;
  }
  char v14 = 1;
LABEL_11:
  sub_1C254E4F0();
  id v18 = sub_1C254E550();
  os_log_type_t v19 = sub_1C254FA40();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v24 = v21;
    *(_DWORD *)uint64_t v20 = 136446210;
    unint64_t v23 = v20 + 4;
    uint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    uint64_t v28 = v21;
    char v25 = v14;
    sub_1C25504F0();
    uint64_t v26 = sub_1C21AD354(v26, v27, &v28);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v18, v19, "loaded mode form disk: %{public}s", v20, 0xCu);
    uint64_t v22 = v24;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v22, -1, -1);
    MEMORY[0x1C875A0B0](v20, -1, -1);
  }

  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
LABEL_14:
  *a1 = v14;
  return result;
}

uint64_t static Features.mode.getter@<X0>(unsigned char *a1@<X8>)
{
  if (qword_1EA2DD970 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = byte_1EA2E52D0;
  return result;
}

uint64_t static Features.Charting.isDebugMode.getter()
{
  if (qword_1EA2DD970 != -1) {
    swift_once();
  }
  return byte_1EA2E52D0;
}

uint64_t static Features.hideCategoryNameFromHeader.getter()
{
  return byte_1EA2E52D1;
}

uint64_t static Features.hideCategoryNameFromHeader.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1EA2E52D1 = a1;
  return result;
}

uint64_t (*static Features.hideCategoryNameFromHeader.modify())()
{
  return j__swift_endAccess;
}

uint64_t static Features.alwaysSendGeminiNotification.getter()
{
  if (qword_1EA2DD970 != -1) {
    swift_once();
  }
  return byte_1EA2E52D0;
}

id Features.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Features();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall UserInterfaceMode.toggle()()
{
  uint64_t v1 = sub_1C252EDD8(*v0, (uint64_t)byte_1F1D8E9D8);
  char v2 = 0;
  if ((v3 & 1) != 0 || v1 > 0) {
    goto LABEL_5;
  }
  if (v1 >= -1)
  {
    char v2 = byte_1F1D8E9D8[v1 + 33];
LABEL_5:
    char *v0 = v2;
    return;
  }
  __break(1u);
}

void *static UserInterfaceMode.allCases.getter()
{
  return &unk_1F1D8F010;
}

HealthRecordsUI::UserInterfaceMode_optional __swiftcall UserInterfaceMode.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  uint64_t v3 = sub_1C25506C0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *char v2 = v5;
  return result;
}

uint64_t sub_1C252FC54(char *a1, char *a2)
{
  return sub_1C23D89E0(*a1, *a2);
}

HealthRecordsUI::UserInterfaceMode_optional sub_1C252FC60(Swift::String *a1)
{
  return UserInterfaceMode.init(rawValue:)(*a1);
}

void sub_1C252FC6C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x647261646E617453;
  if (*v1) {
    uint64_t v2 = 0x7265656E69676E45;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xEB00000000676E69;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_1C252FCB4(void *a1@<X8>)
{
  *a1 = &unk_1F1D8F088;
}

uint64_t sub_1C252FCC4()
{
  return sub_1C254F6D0();
}

uint64_t sub_1C252FD24()
{
  return sub_1C254F6B0();
}

unint64_t healthRecordsUserInterfaceModeKey.getter()
{
  return 0xD000000000000021;
}

void sub_1C252FD94(char *a1)
{
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *a1;
  sub_1C254E4F0();
  uint64_t v7 = sub_1C254E550();
  os_log_type_t v8 = sub_1C254FA40();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 136446210;
    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    uint64_t v19 = v10;
    char v16 = v6;
    sub_1C25504F0();
    uint64_t v15 = v2;
    uint64_t v17 = sub_1C21AD354(v17, v18, &v19);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v7, v8, "writing mode to disk: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v10, -1, -1);
    MEMORY[0x1C875A0B0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6DD78);
  uint64_t v11 = (void *)sub_1C254FA70();
  id v12 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_1C254F430();
  objc_msgSend(v11, sel_setObject_forKey_, v12, v13);
}

void _s15HealthRecordsUI8FeaturesC7setMode_6notifyyAA013UserInterfaceF0O_SbtFZ_0(char *a1, int a2)
{
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v18 - v9;
  char v11 = *a1;
  sub_1C254E4F0();
  id v12 = sub_1C254E550();
  os_log_type_t v13 = sub_1C254FA40();
  BOOL v14 = os_log_type_enabled(v12, v13);
  LODWORD(v20) = a2;
  if (v14)
  {
    uint64_t v15 = swift_slowAlloc();
    v18[1] = v7;
    uint64_t v16 = v15;
    v18[0] = swift_slowAlloc();
    v24[0] = v18[0];
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    char v21 = v11;
    uint64_t v19 = v5;
    sub_1C25504F0();
    uint64_t v22 = sub_1C21AD354(v22, v23, v24);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2082;
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_1C21AD354(v22, v23, v24);
    uint64_t v5 = v19;
    sub_1C2550120();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v12, v13, "setMode: %{public}s %{public}s", (uint8_t *)v16, 0x16u);
    uint64_t v17 = v18[0];
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v17, -1, -1);
    MEMORY[0x1C875A0B0](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  if (qword_1EA2DD970 != -1) {
    swift_once();
  }
  byte_1EA2E52D0 = v11;
  LOBYTE(v22) = v11;
  sub_1C252FD94((char *)&v22);
  if (v20)
  {
    type metadata accessor for FeatureModeToggleAction();
    *(unsigned char *)(swift_initStackObject() + 16) = v11;
    sub_1C252F048();
  }
}

uint64_t type metadata accessor for Features()
{
  return self;
}

unint64_t sub_1C25305A8()
{
  unint64_t result = qword_1EA2E52D8;
  if (!qword_1EA2E52D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E52D8);
  }
  return result;
}

unint64_t sub_1C2530600()
{
  unint64_t result = qword_1EA2E52E0;
  if (!qword_1EA2E52E0)
  {
    sub_1C2530658();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E52E0);
  }
  return result;
}

void sub_1C2530658()
{
  if (!qword_1EA2E52E8)
  {
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E52E8);
    }
  }
}

ValueMetadata *type metadata accessor for Features.Summary()
{
  return &type metadata for Features.Summary;
}

ValueMetadata *type metadata accessor for Features.Summary.All()
{
  return &type metadata for Features.Summary.All;
}

ValueMetadata *type metadata accessor for Features.Summary.HealthRecords()
{
  return &type metadata for Features.Summary.HealthRecords;
}

ValueMetadata *type metadata accessor for Features.Charting()
{
  return &type metadata for Features.Charting;
}

unsigned char *storeEnumTagSinglePayload for UserInterfaceMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C25307BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserInterfaceMode()
{
  return &type metadata for UserInterfaceMode;
}

unint64_t sub_1C25307F4()
{
  unint64_t result = qword_1EA2E52F0;
  if (!qword_1EA2E52F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E52F0);
  }
  return result;
}

unint64_t sub_1C2530848()
{
  unint64_t result = qword_1EA2E52F8;
  if (!qword_1EA2E52F8)
  {
    sub_1C2530884();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E52F8);
  }
  return result;
}

void sub_1C2530884()
{
  if (!qword_1EA2E2C10)
  {
    sub_1C23E199C();
    unint64_t v0 = type metadata accessor for FeedItemAction();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2C10);
    }
  }
}

uint64_t sub_1C25308E0()
{
  id v0 = objc_msgSend(self, sel_sharedConverter);
  uint64_t v1 = (void *)sub_1C254F430();
  id v2 = objc_msgSend(v0, sel_synonymForUCUMUnitString_, v1);

  uint64_t v3 = sub_1C254F470();
  return v3;
}

uint64_t HealthRecordsUnitFormatter.deinit()
{
  return v0;
}

uint64_t HealthRecordsUnitFormatter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C25309A4(void *a1)
{
  id v2 = objc_msgSend(a1, sel_displayString);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1C254F470();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = 0;
  }
  id v6 = objc_msgSend(a1, sel_codingSystem);
  if (!v6)
  {
LABEL_9:
    if (v5) {
      goto LABEL_10;
    }
    goto LABEL_12;
  }
  uint64_t v7 = v6;
  sub_1C224B3D4();
  id v8 = objc_msgSend(self, sel_UCUMSystem);
  char v9 = sub_1C254FF70();

  if ((v9 & 1) == 0)
  {

    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(a1, sel_code);
  if (v10)
  {
    char v11 = v10;
    sub_1C254F470();

LABEL_10:
    id v12 = objc_msgSend(self, sel_sharedConverter);
    os_log_type_t v13 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(v12, sel_synonymForUCUMUnitString_, v13);

    goto LABEL_13;
  }

LABEL_12:
  id v14 = objc_msgSend(a1, sel_displayString);
  if (!v14) {
    return 0;
  }
LABEL_13:
  uint64_t v15 = sub_1C254F470();

  return v15;
}

uint64_t sub_1C2530B74(void *a1)
{
  if (objc_msgSend(a1, sel_isNull)) {
    return 0;
  }
  id v3 = objc_msgSend(self, sel_sharedConverter);
  id v4 = objc_msgSend(a1, sel_unitString);
  if (!v4)
  {
    sub_1C254F470();
    id v4 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  id v5 = objc_msgSend(v3, sel_synonymForUCUMUnitString_, v4);

  uint64_t v2 = sub_1C254F470();
  return v2;
}

uint64_t type metadata accessor for HealthRecordsUnitFormatter()
{
  return self;
}

uint64_t method lookup function for HealthRecordsUnitFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthRecordsUnitFormatter);
}

uint64_t dispatch thunk of static HealthRecordsUnitFormatter.unitString(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t SignedClinicalDataImportEvent.eventDescription.getter()
{
  return 0;
}

HealthRecordsUI::SignedClinicalDataImportEvent::SourceType_optional __swiftcall SignedClinicalDataImportEvent.SourceType.init(rawValue:)(Swift::String rawValue)
{
  return (HealthRecordsUI::SignedClinicalDataImportEvent::SourceType_optional)sub_1C253112C(v1);
}

uint64_t SignedClinicalDataImportEvent.SourceType.rawValue.getter()
{
  uint64_t v1 = 0x65646F63205251;
  if (*v0 != 1) {
    uint64_t v1 = 0x51204343442D5545;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701603686;
  }
}

uint64_t sub_1C2530EC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C23D8798(*a1, *a2);
}

uint64_t sub_1C2530ED0()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2530F78()
{
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C253100C()
{
  return sub_1C2550A10();
}

HealthRecordsUI::SignedClinicalDataImportEvent::SourceType_optional sub_1C25310B0(Swift::String *a1)
{
  return SignedClinicalDataImportEvent.SourceType.init(rawValue:)(*a1);
}

void sub_1C25310BC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x65646F63205251;
  if (v2 != 1)
  {
    uint64_t v5 = 0x51204343442D5545;
    unint64_t v4 = 0xEE0065646F632052;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701603686;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

HealthRecordsUI::SignedClinicalDataImportEvent::ActionType_optional __swiftcall SignedClinicalDataImportEvent.ActionType.init(rawValue:)(Swift::String rawValue)
{
  return (HealthRecordsUI::SignedClinicalDataImportEvent::ActionType_optional)sub_1C253112C(v1);
}

uint64_t sub_1C253112C@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1C25506C0();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t SignedClinicalDataImportEvent.ActionType.rawValue.getter()
{
  uint64_t v1 = 0x74726F706D69;
  if (*v0 != 1) {
    uint64_t v1 = 0x65746172656E6567;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x77656976657270;
  }
}

uint64_t sub_1C25311E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C23D88BC(*a1, *a2);
}

uint64_t sub_1C25311F0()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2531298()
{
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C253132C()
{
  return sub_1C2550A10();
}

HealthRecordsUI::SignedClinicalDataImportEvent::ActionType_optional sub_1C25313D0(Swift::String *a1)
{
  return SignedClinicalDataImportEvent.ActionType.init(rawValue:)(*a1);
}

void sub_1C25313DC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x74726F706D69;
  if (v2 != 1)
  {
    uint64_t v5 = 0x65746172656E6567;
    unint64_t v4 = 0xEB00000000464450;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x77656976657270;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

HealthRecordsUI::SignedClinicalDataImportEvent::OutcomeType_optional __swiftcall SignedClinicalDataImportEvent.OutcomeType.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  uint64_t v3 = sub_1C25506C0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *int v2 = v5;
  return result;
}

uint64_t SignedClinicalDataImportEvent.OutcomeType.rawValue.getter()
{
  if (*v0) {
    return 0x64656C696166;
  }
  else {
    return 0x6564656563637573;
  }
}

uint64_t sub_1C25314E0(char *a1, char *a2)
{
  return sub_1C23D86F0(*a1, *a2);
}

uint64_t sub_1C25314EC()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2531570()
{
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C25315E0()
{
  return sub_1C2550A10();
}

HealthRecordsUI::SignedClinicalDataImportEvent::OutcomeType_optional sub_1C2531660(Swift::String *a1)
{
  return SignedClinicalDataImportEvent.OutcomeType.init(rawValue:)(*a1);
}

void sub_1C253166C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6564656563637573;
  if (*v1) {
    uint64_t v2 = 0x64656C696166;
  }
  unint64_t v3 = 0xE900000000000064;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

void SignedClinicalDataImportEvent.source.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void SignedClinicalDataImportEvent.action.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

void SignedClinicalDataImportEvent.outcome.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

unsigned char *SignedClinicalDataImportEvent.outcome.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 2) = *result;
  return result;
}

uint64_t (*SignedClinicalDataImportEvent.outcome.modify())()
{
  return nullsub_1;
}

unint64_t sub_1C2531700()
{
  unint64_t result = qword_1EA2E5300;
  if (!qword_1EA2E5300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5300);
  }
  return result;
}

unint64_t sub_1C2531758()
{
  unint64_t result = qword_1EA2E5308;
  if (!qword_1EA2E5308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5308);
  }
  return result;
}

unint64_t sub_1C25317B0()
{
  unint64_t result = qword_1EA2E5310;
  if (!qword_1EA2E5310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5310);
  }
  return result;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SignedClinicalDataImportEvent(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *((unsigned __int8 *)a1 + 2);
  BOOL v5 = v4 >= 2;
  int v6 = v4 - 2;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for SignedClinicalDataImportEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)unint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)(result + 2) = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignedClinicalDataImportEvent()
{
  return &type metadata for SignedClinicalDataImportEvent;
}

ValueMetadata *type metadata accessor for SignedClinicalDataImportEvent.SourceType()
{
  return &type metadata for SignedClinicalDataImportEvent.SourceType;
}

unsigned char *_s15HealthRecordsUI29SignedClinicalDataImportEventV10SourceTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2531A04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignedClinicalDataImportEvent.ActionType()
{
  return &type metadata for SignedClinicalDataImportEvent.ActionType;
}

unsigned char *storeEnumTagSinglePayload for SignedClinicalDataImportEvent.OutcomeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2531B08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignedClinicalDataImportEvent.OutcomeType()
{
  return &type metadata for SignedClinicalDataImportEvent.OutcomeType;
}

unint64_t static RecordKindFeedItemIdentifierFactory.makeComponent(categoryKind:)()
{
  return 0xD000000000000014;
}

uint64_t static RecordKindFeedItemIdentifierFactory.make(categoryKind:conceptId:profile:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255D0E0;
  id v10 = (void *)sub_1C254CF00();
  unint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  if (v10)
  {
    unint64_t v22 = 0x656C69666F72505BLL;
    unint64_t v23 = 0xE90000000000003ALL;
    id v11 = v10;
    v21[0] = a2;
    id v12 = v11;
    id v13 = objc_msgSend(v11, sel_identifier, v21[0]);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();

    unint64_t v15 = v22;
    unint64_t v14 = v23;
  }
  else
  {
    unint64_t v14 = 0x80000001C2578680;
    unint64_t v15 = 0xD000000000000013;
  }
  unint64_t v22 = v15;
  unint64_t v23 = v14;
  sub_1C254F5A0();

  unint64_t v16 = v23;
  *(void *)(v9 + 32) = v22;
  *(void *)(v9 + 40) = v16;
  unint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v22 = 0xD000000000000014;
  unint64_t v23 = 0x80000001C257B7E0;
  v21[1] = v8;
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  unint64_t v17 = v23;
  *(void *)(v9 + 48) = v22;
  *(void *)(v9 + 56) = v17;
  *(void *)(v9 + 64) = _s15HealthRecordsUI35RecordKindFeedItemIdentifierFactoryV13makeComponent9conceptIdSSs5Int64V_tFZ_0();
  *(void *)(v9 + 72) = v18;
  unint64_t v22 = v9;
  sub_1C22C74CC(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB320]);
  sub_1C226BF44();
  uint64_t v19 = sub_1C254F390();
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t static RecordKindFeedItemIdentifierFactory.makeComponentForPrefix()()
{
  return 0xD000000000000021;
}

uint64_t static RecordKindFeedItemIdentifierFactory.makeComponent(conceptId:)(void *a1)
{
  objc_msgSend(a1, sel_rawIdentifier);
  return _s15HealthRecordsUI35RecordKindFeedItemIdentifierFactoryV13makeComponent9conceptIdSSs5Int64V_tFZ_0();
}

uint64_t _s15HealthRecordsUI35RecordKindFeedItemIdentifierFactoryV13makeComponent9conceptIdSSs5Int64V_tFZ_0()
{
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "[RecordKindId:");
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  return v1[0];
}

ValueMetadata *type metadata accessor for RecordKindFeedItemIdentifierFactory()
{
  return &type metadata for RecordKindFeedItemIdentifierFactory;
}

uint64_t sub_1C2532040(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1C254E560();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E510();
  id v11 = a1;
  id v12 = sub_1C254E550();
  os_log_type_t v13 = sub_1C254FA00();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    int v33 = v14;
    uint64_t v16 = v15;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v37 = v32;
    uint64_t v38 = ObjectType;
    *(_DWORD *)uint64_t v16 = 136446722;
    uint64_t v34 = v7;
    swift_getMetatypeMetadata();
    uint64_t v35 = v3;
    uint64_t v17 = sub_1C254F4F0();
    uint64_t v36 = a2;
    uint64_t v38 = sub_1C21AD354(v17, v18, &v37);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    id v19 = v11;
    id v20 = objc_msgSend(v19, sel_description);
    uint64_t v21 = sub_1C254F470();
    unint64_t v23 = v22;

    uint64_t v38 = sub_1C21AD354(v21, v23, &v37);
    sub_1C2550120();

    a2 = v36;
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2082;
    unint64_t v24 = 0xE400000000000000;
    uint64_t v25 = 1701602377;
    unint64_t v26 = 0xEE002E6574617453;
    uint64_t v27 = 0x206E776F6E6B6E55;
    if (a2 == 2)
    {
      uint64_t v27 = 0x676E697865646E49;
      unint64_t v26 = 0xE800000000000000;
    }
    if (a2 != 1)
    {
      uint64_t v25 = v27;
      unint64_t v24 = v26;
    }
    if (a2) {
      uint64_t v28 = v25;
    }
    else {
      uint64_t v28 = 0x6C616974696E49;
    }
    if (a2) {
      unint64_t v29 = v24;
    }
    else {
      unint64_t v29 = 0xE700000000000000;
    }
    uint64_t v38 = sub_1C21AD354(v28, v29, &v37);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v12, (os_log_type_t)v33, "[%{public}s]: indexManagerStateDidChange (store: %s, to: %{public}s)", (uint8_t *)v16, 0x20u);
    uint64_t v30 = v32;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v30, -1, -1);
    MEMORY[0x1C875A0B0](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v38 = a2;
  char v39 = 0;
  return sub_1C254EA70();
}

id sub_1C2532458()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IndexManagerStateChangeListener();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for IndexManagerStateChangeListener()
{
  return self;
}

uint64_t MedicalRecordTimelineChartItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C25324F0()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  objc_msgSend(v1, sel_rawIdentifier);

  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return 0x2E7472616843;
}

uint64_t static MedicalRecordTimelineChartItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a2 + 16);
  id v6 = v4;
  id v7 = v5;
  LOBYTE(v5) = sub_1C254FF70();

  return v5 & 1;
}

void sub_1C253260C()
{
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 16);
  sub_1C254FF80();
}

uint64_t MedicalRecordTimelineChartItem.deinit()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineChartItem.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2532718()
{
  sub_1C25509C0();
  sub_1C254F570();
  id v1 = *(id *)(v0 + 16);
  sub_1C254FF80();

  return sub_1C2550A10();
}

uint64_t sub_1C2532774()
{
  uint64_t v1 = *v0;
  sub_1C25509C0();
  sub_1C254F570();
  id v2 = *(id *)(v1 + 16);
  sub_1C254FF80();

  return sub_1C2550A10();
}

void sub_1C25327D4()
{
  uint64_t v1 = *v0;
  sub_1C254F570();
  id v2 = *(id *)(v1 + 16);
  sub_1C254FF80();
}

uint64_t sub_1C2532838()
{
  sub_1C25509C0();
  uint64_t v1 = *v0;
  sub_1C254F570();
  id v2 = *(id *)(v1 + 16);
  sub_1C254FF80();

  return sub_1C2550A10();
}

uint64_t sub_1C2532894()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C25328C8()
{
  return sub_1C25324F0();
}

uint64_t sub_1C2532A1C()
{
  uint64_t v1 = v0;
  sub_1C234829C(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v16 - v3;
  uint64_t v5 = sub_1C254E710();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v9);

  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v1, sel_setBackgroundView_, v10);

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v1, sel_setSelectedBackgroundView_, v11);

  id v12 = objc_msgSend(v1, sel_selectedBackgroundView);
  if (v12)
  {
    os_log_type_t v13 = v12;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
    int v14 = (void *)sub_1C254FEE0();
    objc_msgSend(v13, sel_setBackgroundColor_, v14);
  }
  sub_1C254E700();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  MEMORY[0x1C8758250](v4);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C2532C9C(uint64_t a1, void *a2)
{
  sub_1C2227014(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelineChartItemCell_item;
  swift_beginAccess();
  sub_1C2232E74((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C2532D10();
  return sub_1C2227100((uint64_t)v5);
}

void sub_1C2532D10()
{
  uint64_t v1 = sub_1C254E560();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelineChartItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v5, (uint64_t)v17);
  if (v17[3])
  {
    sub_1C22270A8();
    type metadata accessor for MedicalRecordTimelineChartItem();
    if (swift_dynamicCast())
    {
      swift_release();
      id v6 = objc_msgSend(v0, sel_superview);

      if (v6) {
        sub_1C25334A8();
      }
      return;
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v17);
  }
  sub_1C254E510();
  id v7 = v0;
  uint64_t v8 = sub_1C254E550();
  os_log_type_t v9 = sub_1C254FA20();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v15 = v1;
    uint64_t v16 = v11;
    uint64_t v12 = v11;
    *(_DWORD *)id v10 = 136446210;
    sub_1C2227014(v5, (uint64_t)v17);
    sub_1C234829C(0, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    uint64_t v13 = sub_1C254F510();
    v17[0] = sub_1C21AD354(v13, v14, &v16);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v8, v9, "Incorrect view model for MedicalRecordTimelineChartItem: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v12, -1, -1);
    MEMORY[0x1C875A0B0](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_1C2532FE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelineChartItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C2533038(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelineChartItemCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C2532D10();
  return sub_1C2227100(a1);
}

void (*sub_1C25330A8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2533108;
}

void sub_1C2533108(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C2532D10();
  }
}

uint64_t sub_1C253313C()
{
  uint64_t v1 = sub_1C254E560();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelineChartItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v5, (uint64_t)v17);
  if (v17[3])
  {
    sub_1C22270A8();
    type metadata accessor for MedicalRecordTimelineChartItem();
    if (swift_dynamicCast()) {
      return v16;
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v17);
  }
  sub_1C254E510();
  id v7 = v0;
  uint64_t v8 = sub_1C254E550();
  os_log_type_t v9 = sub_1C254FA20();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v1;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v16 = v12;
    *(_DWORD *)uint64_t v11 = 136446210;
    sub_1C2227014(v5, (uint64_t)v17);
    sub_1C234829C(0, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    uint64_t v13 = sub_1C254F510();
    v17[0] = sub_1C21AD354(v13, v14, &v16);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v8, v9, "Incorrect view model for MedicalRecordTimelineChartItemCell: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v12, -1, -1);
    MEMORY[0x1C875A0B0](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return 0;
}

uint64_t type metadata accessor for MedicalRecordTimelineChartItemCell()
{
  return self;
}

void sub_1C25334A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C253313C();
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = v2 + 32;
    uint64_t v5 = MEMORY[0x1C875A200](v2 + 32);
    if (v5)
    {
      id v6 = (void *)v5;
      uint64_t v7 = swift_dynamicCastObjCProtocolConditional();
      if (v7)
      {
        uint64_t v8 = v7;
        id v9 = objc_msgSend(*(id *)(v3 + 24), sel_chartController);
        if (v9)
        {
          uint64_t v10 = v9;
          objc_msgSend(v9, sel_addChartViewObserver_, v8);
        }
      }
    }
    uint64_t v11 = (void *)MEMORY[0x1C875A200](v4);
    if (v11)
    {
      uint64_t v12 = v11;
      objc_msgSend(v11, sel_addChildViewController_, *(void *)(v3 + 24));
    }
    id v13 = objc_msgSend(*(id *)(v3 + 24), sel_view);
    if (v13)
    {
      unint64_t v14 = v13;
      id v15 = objc_msgSend(v1, sel_contentView);
      objc_msgSend(v15, sel_addSubview_, v14);

      objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
      id v37 = self;
      sub_1C21ACA3C();
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1C255DBA0;
      id v17 = objc_msgSend(v1, sel_contentView);
      id v18 = objc_msgSend(v17, sel_topAnchor);

      id v19 = objc_msgSend(v14, sel_topAnchor);
      id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, 16.0);

      *(void *)(v16 + 32) = v20;
      id v21 = objc_msgSend(v1, sel_contentView);
      id v22 = objc_msgSend(v21, sel_bottomAnchor);

      id v23 = objc_msgSend(v14, sel_bottomAnchor);
      id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

      *(void *)(v16 + 40) = v24;
      id v25 = objc_msgSend(v1, sel_contentView);
      id v26 = objc_msgSend(v25, sel_leadingAnchor);

      id v27 = objc_msgSend(v14, sel_leadingAnchor);
      id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

      *(void *)(v16 + 48) = v28;
      id v29 = objc_msgSend(v1, sel_contentView);
      id v30 = objc_msgSend(v29, sel_trailingAnchor);

      id v31 = objc_msgSend(v14, sel_trailingAnchor);
      id v32 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v31);

      *(void *)(v16 + 56) = v32;
      sub_1C254F730();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
      int v33 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      objc_msgSend(v37, sel_activateConstraints_, v33);

      uint64_t v34 = *(void **)(v3 + 24);
      uint64_t v35 = (void *)MEMORY[0x1C875A200](v4);
      id v36 = v34;
      objc_msgSend(v36, sel_didMoveToParentViewController_, v35);

      objc_msgSend(v1, sel_invalidateIntrinsicContentSize);
      objc_msgSend(v1, sel_setNeedsLayout);
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

id MedicalRecordTimelineChartItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineChartItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1C25338F4()
{
  unint64_t result = qword_1EA2E5340;
  if (!qword_1EA2E5340)
  {
    type metadata accessor for MedicalRecordTimelineChartItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5340);
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordTimelineChartItem()
{
  return self;
}

uint64_t sub_1C253397C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI34MedicalRecordTimelineChartItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineChartItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineChartItem);
}

uint64_t dispatch thunk of MedicalRecordTimelineChartItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t method lookup function for MedicalRecordTimelineChartItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineChartItemCell);
}

uint64_t dispatch thunk of MedicalRecordTimelineChartItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineChartItemCell.deselectionBehavior.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t sub_1C2533B44(uint64_t a1)
{
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      sub_1C23B8E98();
      return sub_1C254FFA0();
    default:
      sub_1C25508E0();
      __break(1u);
      JUMPOUT(0x1C2533C2CLL);
  }
}

BOOL PrivacyInteractionType.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t PrivacyInteractionContext.init(rawValue:)(unint64_t a1)
{
  return sub_1C23B8ED8(a1);
}

unint64_t sub_1C2533C84()
{
  unint64_t result = qword_1EA2E5348;
  if (!qword_1EA2E5348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5348);
  }
  return result;
}

unint64_t sub_1C2533CDC()
{
  unint64_t result = qword_1EA2E5350;
  if (!qword_1EA2E5350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5350);
  }
  return result;
}

ValueMetadata *type metadata accessor for PrivacyInteractionType()
{
  return &type metadata for PrivacyInteractionType;
}

ValueMetadata *type metadata accessor for PrivacyInteractionContext()
{
  return &type metadata for PrivacyInteractionContext;
}

unint64_t static RecordPrimaryTitleCell.reuseIdentifier.getter()
{
  return 0xD000000000000016;
}

id RecordPrimaryTitleCell.recordTitleLabel.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22RecordPrimaryTitleCell_recordTitleLabel);
}

id RecordPrimaryTitleCell.recordDateLabel.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI22RecordPrimaryTitleCell_recordDateLabel);
}

id RecordPrimaryTitleCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI22RecordPrimaryTitleCell_recordTitleLabel;
  id v6 = self;
  uint64_t v7 = v3;
  id v8 = objc_msgSend(v6, sel_labelColor);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v9, sel_setFont_, 0);
  objc_msgSend(v9, sel_setNumberOfLines_, 8);
  objc_msgSend(v9, sel_setTextColor_, v8);

  *(void *)&v3[v5] = v9;
  uint64_t v10 = OBJC_IVAR____TtC15HealthRecordsUI22RecordPrimaryTitleCell_recordDateLabel;
  id v11 = objc_msgSend(v6, sel_labelColor);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v12, sel_setFont_, 0);
  objc_msgSend(v12, sel_setNumberOfLines_, 0);
  objc_msgSend(v12, sel_setTextColor_, v11);

  *(void *)&v7[v10] = v12;
  if (a3)
  {
    id v13 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v13 = 0;
  }
  v18.receiver = v7;
  v18.super_class = (Class)type metadata accessor for RecordPrimaryTitleCell();
  id v14 = objc_msgSendSuper2(&v18, sel_initWithStyle_reuseIdentifier_, a1, v13);

  id v15 = v14;
  sub_1C2534020();

  return v15;
}

uint64_t type metadata accessor for RecordPrimaryTitleCell()
{
  return self;
}

void sub_1C2534020()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI22RecordPrimaryTitleCell_recordTitleLabel];
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_super v2 = self;
  uint64_t v3 = *MEMORY[0x1E4FB28C8];
  id v4 = objc_msgSend(v2, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB28C8], 1024);
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = v4;
  objc_msgSend(v1, sel_setFont_, v4);

  id v6 = self;
  id v7 = objc_msgSend(v6, sel_labelColor);
  objc_msgSend(v1, sel_setTextColor_, v7);

  id v8 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI22RecordPrimaryTitleCell_recordDateLabel];
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v35 = (id)*MEMORY[0x1E4FB2950];
  id v9 = objc_msgSend(v2, sel_preferredFontForTextStyle_);
  objc_msgSend(v8, sel_setFont_, v9);

  id v10 = objc_msgSend(v6, sel_secondaryLabelColor);
  objc_msgSend(v8, sel_setTextColor_, v10);

  id v11 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v11, sel_addSubview_, v1);

  id v12 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v12, sel_addSubview_, v8);

  id v13 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_hk_alignHorizontalConstraintsWithView_margin_, v13, 16.0);

  id v14 = objc_msgSend(v1, sel_firstBaselineAnchor);
  id v15 = objc_msgSend(v0, sel_contentView);
  id v16 = objc_msgSend(v15, sel_topAnchor);

  id v17 = objc_msgSend(v2, sel__preferredFontForTextStyle_variant_, v3, 1024);
  if (!v17)
  {
LABEL_7:
    __break(1u);
    return;
  }
  objc_super v18 = v17;
  objc_msgSend(v17, sel__scaledValueForValue_, 27.0);
  double v20 = v19;

  id v21 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v16, v20);
  objc_msgSend(v21, sel_setActive_, 1);

  id v22 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v8, sel_hk_alignHorizontalConstraintsWithView_margin_, v22, 16.0);

  id v23 = objc_msgSend(v8, sel_firstBaselineAnchor);
  id v24 = objc_msgSend(v1, sel_lastBaselineAnchor);
  id v25 = objc_msgSend(v2, sel_preferredFontForTextStyle_, v35);
  objc_msgSend(v25, sel__scaledValueForValue_, 24.0);
  double v27 = v26;

  id v28 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v24, v27);
  objc_msgSend(v28, sel_setActive_, 1);

  id v29 = objc_msgSend(v8, sel_lastBaselineAnchor);
  id v30 = objc_msgSend(v0, sel_contentView);
  id v31 = objc_msgSend(v30, sel_bottomAnchor);

  id v32 = objc_msgSend(v2, sel_preferredFontForTextStyle_, v35);
  objc_msgSend(v32, sel__scaledValueForValue_, 13.0);
  double v34 = v33;

  id v36 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v31, -v34);
  objc_msgSend(v36, sel_setActive_, 1);
}

id RecordPrimaryTitleCell.__deallocating_deinit()
{
  return sub_1C253726C(type metadata accessor for RecordPrimaryTitleCell);
}

unint64_t static RecordDetailItemCell.reuseIdentifier.getter()
{
  return 0xD000000000000014;
}

id RecordDetailItemCell.titleLabel.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20RecordDetailItemCell_titleLabel);
}

id RecordDetailItemCell.bodyLabel.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20RecordDetailItemCell_bodyLabel);
}

id RecordDetailItemCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI20RecordDetailItemCell_titleLabel;
  id v6 = self;
  id v7 = v3;
  id v8 = objc_msgSend(v6, sel_labelColor);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v9, sel_setFont_, 0);
  objc_msgSend(v9, sel_setNumberOfLines_, 0);
  objc_msgSend(v9, sel_setTextColor_, v8);

  *(void *)&v3[v5] = v9;
  uint64_t v10 = OBJC_IVAR____TtC15HealthRecordsUI20RecordDetailItemCell_bodyLabel;
  id v11 = objc_msgSend(v6, sel_labelColor);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v12, sel_setFont_, 0);
  objc_msgSend(v12, sel_setNumberOfLines_, 0);
  objc_msgSend(v12, sel_setTextColor_, v11);

  *(void *)&v7[v10] = v12;
  if (a3)
  {
    id v13 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v13 = 0;
  }
  v18.receiver = v7;
  v18.super_class = (Class)type metadata accessor for RecordDetailItemCell();
  id v14 = objc_msgSendSuper2(&v18, sel_initWithStyle_reuseIdentifier_, a1, v13);

  id v15 = v14;
  sub_1C2534804();

  return v15;
}

uint64_t type metadata accessor for RecordDetailItemCell()
{
  return self;
}

void sub_1C2534804()
{
  uint64_t v1 = v0;
  objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI20RecordDetailItemCell_titleLabel];
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v3 = self;
  uint64_t v39 = *MEMORY[0x1E4FB2950];
  id v4 = v3;
  id v5 = objc_msgSend(v3, sel_preferredFontForTextStyle_);
  objc_msgSend(v2, sel_setFont_, v5);

  id v6 = self;
  id v7 = objc_msgSend(v6, sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTextColor_, v7);

  id v8 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI20RecordDetailItemCell_bodyLabel];
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v40 = *MEMORY[0x1E4FB28C8];
  id v9 = objc_msgSend(v4, sel_preferredFontForTextStyle_);
  objc_msgSend(v8, sel_setFont_, v9);

  id v10 = objc_msgSend(v6, sel_labelColor);
  objc_msgSend(v8, sel_setTextColor_, v10);

  type metadata accessor for UILayoutPriority(0);
  sub_1C2318BE4();
  sub_1C254E580();
  sub_1C254E570();
  LODWORD(v11) = 1148846080;
  objc_msgSend(v2, sel_setContentCompressionResistancePriority_forAxis_, 1, v11);
  LODWORD(v12) = 1132068864;
  objc_msgSend(v2, sel_setContentHuggingPriority_forAxis_, 1, v12);
  LODWORD(v13) = v41;
  objc_msgSend(v8, sel_setContentCompressionResistancePriority_forAxis_, 1, v13);
  LODWORD(v14) = v41;
  objc_msgSend(v8, sel_setContentHuggingPriority_forAxis_, 1, v14);
  id v15 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v15, sel_addSubview_, v2);

  id v16 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  objc_msgSend(v16, sel_addSubview_, v8);

  id v17 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  objc_msgSend(v2, sel_hk_alignHorizontalConstraintsWithView_margin_, v17, 16.0);

  id v18 = objc_msgSend(v2, sel_firstBaselineAnchor);
  id v19 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v20 = objc_msgSend(v19, sel_topAnchor);

  id v21 = objc_msgSend(v4, sel_preferredFontForTextStyle_, v39);
  objc_msgSend(v21, sel__scaledValueForValue_, 27.0);
  double v23 = v22;

  id v24 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, v23);
  objc_msgSend(v24, sel_setActive_, 1);

  id v25 = objc_msgSend(v1, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  objc_msgSend(v8, sel_hk_alignHorizontalConstraintsWithView_margin_, v25, 16.0);

  id v26 = objc_msgSend(v8, sel_firstBaselineAnchor);
  id v27 = objc_msgSend(v2, sel_lastBaselineAnchor);
  id v28 = objc_msgSend(v4, (SEL)&selRef_setPendingOnboardingGateway_ + 3, v40);
  objc_msgSend(v28, sel__scaledValueForValue_, 24.0);
  double v30 = v29;

  id v31 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, v30);
  objc_msgSend(v31, sel_setActive_, 1);

  id v32 = objc_msgSend(v8, sel_lastBaselineAnchor);
  id v33 = objc_msgSend(v1, sel_contentView);
  id v34 = objc_msgSend(v33, sel_bottomAnchor);

  id v35 = objc_msgSend(v4, (SEL)&selRef_setPendingOnboardingGateway_ + 3, v40);
  objc_msgSend(v35, sel__scaledValueForValue_, 13.0);
  double v37 = v36;

  id v38 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, -v37);
  objc_msgSend(v38, sel_setActive_, 1);
}

id RecordDetailItemCell.__deallocating_deinit()
{
  return sub_1C253726C(type metadata accessor for RecordDetailItemCell);
}

unint64_t static RecordReferenceRangeCell.reuseIdentifier.getter()
{
  return 0xD000000000000018;
}

void *sub_1C2534E58()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24RecordReferenceRangeCell_valueInRange);
  swift_beginAccess();
  objc_super v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1C2534F28(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24RecordReferenceRangeCell_valueInRange);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
  id v5 = a1;

  sub_1C2535008();
}

void sub_1C2534F94(void **a1, void *a2)
{
  objc_super v2 = *a1;
  id v3 = (void **)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI24RecordReferenceRangeCell_valueInRange);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = v2;
  id v5 = v2;

  sub_1C2535008();
}

void sub_1C2535008()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24RecordReferenceRangeCell_valueInRange);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (v2
    && (id v3 = objc_msgSend(self, sel_referenceRangeViewDataFromInspectableValueInRange_, v2)) != 0)
  {
    id v4 = v3;
    id v5 = v3;
    id v6 = sub_1C22C22C8();
    sub_1C2286664();
    id v7 = v5;
    id v8 = (void *)sub_1C254FE50();
    id v9 = (void *)sub_1C254FE50();
    id v10 = sub_1C21EFF3C(v8, v9);

    objc_msgSend(v6, sel_setAttributedText_, v10);
    id v11 = v7;
    sub_1C2424EA8(v4);
  }
  else
  {
    id v11 = 0;
  }
  sub_1C22C2A88();
}

void (*sub_1C25351AC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C253520C;
}

void sub_1C253520C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C2535008();
  }
}

char *RecordReferenceRangeCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI24RecordReferenceRangeCell_valueInRange] = 0;
  id v6 = objc_allocWithZone((Class)type metadata accessor for ExpandedRangeValueView());
  id v7 = v3;
  id v8 = objc_msgSend(v6, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24RecordReferenceRangeCell_expandedRangeValueView] = v8;

  if (a3)
  {
    id v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v9 = 0;
  }
  v16.receiver = v7;
  v16.super_class = (Class)type metadata accessor for RecordReferenceRangeCell();
  id v10 = (char *)objc_msgSendSuper2(&v16, sel_initWithStyle_reuseIdentifier_, a1, v9);

  id v11 = *(void **)&v10[OBJC_IVAR____TtC15HealthRecordsUI24RecordReferenceRangeCell_expandedRangeValueView];
  double v12 = v10;
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v13 = objc_msgSend(v12, sel_contentView);
  objc_msgSend(v13, sel_addSubview_, v11);

  id v14 = objc_msgSend(v12, sel_contentView);
  objc_msgSend(v11, sel_hk_alignConstraintsWithView_insets_, v14, 16.0, 16.0, 16.0, 16.0);

  return v12;
}

uint64_t type metadata accessor for RecordReferenceRangeCell()
{
  return self;
}

id RecordReferenceRangeCell.__deallocating_deinit()
{
  return sub_1C253726C(type metadata accessor for RecordReferenceRangeCell);
}

unint64_t static RecordDataSourceCell.reuseIdentifier.getter()
{
  return 0xD000000000000014;
}

char *RecordDataSourceCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI20RecordDataSourceCell_brandView;
  double v7 = *MEMORY[0x1E4F1DB20];
  double v8 = *(double *)(MEMORY[0x1E4F1DB20] + 8);
  double v9 = *(double *)(MEMORY[0x1E4F1DB20] + 16);
  double v10 = *(double *)(MEMORY[0x1E4F1DB20] + 24);
  id v11 = objc_allocWithZone((Class)WDMedicalRecordBrandView);
  double v12 = v3;
  *(void *)&v3[v6] = objc_msgSend(v11, sel_initWithFrame_, v7, v8, v9, v10);

  if (a3)
  {
    id v13 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v13 = 0;
  }
  v20.receiver = v12;
  v20.super_class = (Class)type metadata accessor for RecordDataSourceCell();
  id v14 = (char *)objc_msgSendSuper2(&v20, sel_initWithStyle_reuseIdentifier_, a1, v13);

  id v15 = *(void **)&v14[OBJC_IVAR____TtC15HealthRecordsUI20RecordDataSourceCell_brandView];
  objc_super v16 = v14;
  objc_msgSend(v15, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v17 = objc_msgSend(v16, sel_contentView);
  objc_msgSend(v17, sel_addSubview_, v15);

  id v18 = objc_msgSend(v16, sel_contentView);
  objc_msgSend(v15, sel_hk_alignConstraintsWithView_insets_, v18, 16.0, 16.0, 16.0, 16.0);

  return v16;
}

uint64_t type metadata accessor for RecordDataSourceCell()
{
  return self;
}

id sub_1C25357E8(uint64_t a1, void *a2, void *a3)
{
  return sub_1C2535818(a1, a2, a3, (SEL *)&selRef_nameAndFormattedBirthDateForAccountOwner_);
}

id sub_1C253580C(uint64_t a1, void *a2, void *a3)
{
  return sub_1C2535818(a1, a2, a3, (SEL *)&selRef_nameAndFormattedBirthDateForSignedClinicalDataSubject_);
}

id sub_1C2535818(uint64_t a1, void *a2, void *a3, SEL *a4)
{
  if (a3 && a2)
  {
    id v9 = a3;
    id v10 = a2;
    id v11 = objc_msgSend(v9, *a4, v10);
    id v12 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI20RecordDataSourceCell_brandView), sel_brandDetailLabel);
    objc_msgSend(v12, sel_setText_, v11);
  }
  id v13 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI20RecordDataSourceCell_brandView);
  return objc_msgSend(v13, sel_setBrandable_dataProvider_, a1, a3);
}

void sub_1C2535914(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void (*a6)(uint64_t, void *, void *))
{
  swift_unknownObjectRetain();
  id v11 = a4;
  id v12 = a5;
  id v13 = a1;
  a6(a3, a4, a5);
  swift_unknownObjectRelease();
}

id RecordDataSourceCell.__deallocating_deinit()
{
  return sub_1C253726C(type metadata accessor for RecordDataSourceCell);
}

unint64_t static RecordDetailItemSpinnerCell.reuseIdentifier.getter()
{
  return 0xD00000000000001BLL;
}

id RecordDetailItemSpinnerCell.titleLabel.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI27RecordDetailItemSpinnerCell_titleLabel);
}

id RecordDetailItemSpinnerCell.bodyLabel.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI27RecordDetailItemSpinnerCell_bodyLabel);
}

id RecordDetailItemSpinnerCell.spinner.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI27RecordDetailItemSpinnerCell_spinner);
}

id RecordDetailItemSpinnerCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI27RecordDetailItemSpinnerCell_titleLabel;
  id v5 = self;
  uint64_t v6 = v3;
  id v7 = objc_msgSend(v5, sel_labelColor);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v8, sel_setFont_, 0);
  objc_msgSend(v8, sel_setNumberOfLines_, 0);
  objc_msgSend(v8, sel_setTextColor_, v7);

  *(void *)&v3[v4] = v8;
  uint64_t v9 = OBJC_IVAR____TtC15HealthRecordsUI27RecordDetailItemSpinnerCell_bodyLabel;
  id v10 = objc_msgSend(v5, sel_labelColor);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v11, sel_setFont_, 0);
  objc_msgSend(v11, sel_setNumberOfLines_, 0);
  objc_msgSend(v11, sel_setTextColor_, v10);

  *(void *)&v6[v9] = v11;
  uint64_t v12 = OBJC_IVAR____TtC15HealthRecordsUI27RecordDetailItemSpinnerCell_spinner;
  *(void *)&v6[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);

  if (a3)
  {
    id v13 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v13 = 0;
  }
  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for RecordDetailItemSpinnerCell();
  id v14 = objc_msgSendSuper2(&v19, sel_initWithStyle_reuseIdentifier_, a1, v13);

  id v15 = v14;
  sub_1C2535D04();

  return v15;
}

uint64_t type metadata accessor for RecordDetailItemSpinnerCell()
{
  return self;
}

void sub_1C2535D04()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordDetailItemSpinnerCell_titleLabel];
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v2 = self;
  uint64_t v44 = *MEMORY[0x1E4FB2950];
  id v3 = v2;
  id v4 = objc_msgSend(v2, sel_preferredFontForTextStyle_);
  objc_msgSend(v1, sel_setFont_, v4);

  id v5 = self;
  id v6 = objc_msgSend(v5, sel_secondaryLabelColor);
  objc_msgSend(v1, sel_setTextColor_, v6);

  id v7 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordDetailItemSpinnerCell_spinner];
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v8 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI27RecordDetailItemSpinnerCell_bodyLabel];
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v45 = v3;
  id v46 = (id)*MEMORY[0x1E4FB28C8];
  id v9 = objc_msgSend(v3, sel_preferredFontForTextStyle_);
  objc_msgSend(v8, sel_setFont_, v9);

  id v10 = objc_msgSend(v5, sel_labelColor);
  objc_msgSend(v8, sel_setTextColor_, v10);

  id v11 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v11, sel_addSubview_, v1);

  id v12 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  objc_msgSend(v12, sel_addSubview_, v7);

  id v13 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  objc_msgSend(v13, sel_addSubview_, v8);

  id v14 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  objc_msgSend(v1, sel_hk_alignHorizontalConstraintsWithView_margin_, v14, 16.0);

  id v15 = objc_msgSend(v1, sel_firstBaselineAnchor);
  id v16 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v17 = objc_msgSend(v16, sel_topAnchor);

  id v18 = objc_msgSend(v3, sel_preferredFontForTextStyle_, v44);
  objc_msgSend(v18, sel__scaledValueForValue_, 27.0);
  double v20 = v19;

  id v21 = objc_msgSend(v15, sel_constraintEqualToAnchor_constant_, v17, v20);
  objc_msgSend(v21, sel_setActive_, 1);

  id v22 = objc_msgSend(v7, sel_leadingAnchor);
  id v23 = objc_msgSend(v0, sel_contentView);
  id v24 = objc_msgSend(v23, sel_leadingAnchor);

  id v25 = objc_msgSend(v22, (SEL)&selRef_chartDataCacheController + 7, v24, 16.0);
  objc_msgSend(v25, sel_setActive_, 1);

  id v26 = objc_msgSend(v7, sel_centerYAnchor);
  id v27 = objc_msgSend(v8, sel_centerYAnchor);
  id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

  objc_msgSend(v28, (SEL)&selRef_setNeedsDisplay, 1);
  id v29 = objc_msgSend(v8, sel_leadingAnchor);
  id v30 = objc_msgSend(v7, sel_trailingAnchor);
  id v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v30, 8.0);

  objc_msgSend(v31, (SEL)&selRef_setNeedsDisplay, 1);
  id v32 = objc_msgSend(v8, sel_firstBaselineAnchor);
  id v33 = objc_msgSend(v1, sel_lastBaselineAnchor);
  id v34 = objc_msgSend(v45, sel_preferredFontForTextStyle_, v46);
  objc_msgSend(v34, sel__scaledValueForValue_, 24.0);
  double v36 = v35;

  id v37 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, v36);
  objc_msgSend(v37, sel_setActive_, 1);

  id v38 = objc_msgSend(v8, sel_lastBaselineAnchor);
  id v39 = objc_msgSend(v0, sel_contentView);
  id v40 = objc_msgSend(v39, sel_bottomAnchor);

  id v41 = objc_msgSend(v45, sel_preferredFontForTextStyle_, v46);
  objc_msgSend(v41, sel__scaledValueForValue_, 13.0);
  double v43 = v42;

  id v47 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v40, -v43);
  objc_msgSend(v47, sel_setActive_, 1);
}

id RecordDetailItemSpinnerCell.__deallocating_deinit()
{
  return sub_1C253726C(type metadata accessor for RecordDetailItemSpinnerCell);
}

unint64_t static RecordTextItemCell.reuseIdentifier.getter()
{
  return 0xD000000000000012;
}

id RecordTextItemCell.titleLabel.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI18RecordTextItemCell_titleLabel);
}

id RecordTextItemCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI18RecordTextItemCell_titleLabel;
  id v7 = self;
  id v8 = v3;
  id v9 = objc_msgSend(v7, sel_labelColor);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v10, sel_setFont_, 0);
  objc_msgSend(v10, sel_setNumberOfLines_, 0);
  objc_msgSend(v10, sel_setTextColor_, v9);

  *(void *)&v3[v6] = v10;
  if (a3)
  {
    id v11 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v11 = 0;
  }
  v15.receiver = v8;
  v15.super_class = (Class)type metadata accessor for RecordTextItemCell();
  id v12 = objc_msgSendSuper2(&v15, sel_initWithStyle_reuseIdentifier_, a1, v11);

  id v13 = v12;
  sub_1C25365D4();

  return v13;
}

uint64_t type metadata accessor for RecordTextItemCell()
{
  return self;
}

void sub_1C25365D4()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI18RecordTextItemCell_titleLabel];
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v2 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v1, sel_setFont_, v2);

  id v3 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v1, sel_setTextColor_, v3);

  id v4 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v4, sel_addSubview_, v1);

  id v5 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_hk_alignHorizontalConstraintsWithView_margin_, v5, 16.0);

  id v6 = objc_msgSend(v1, sel_firstBaselineAnchor);
  id v7 = objc_msgSend(v0, sel_contentView);
  id v8 = objc_msgSend(v7, sel_topAnchor);

  id v9 = objc_msgSend(v1, sel_font);
  if (!v9)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v10 = v9;
  objc_msgSend(v9, sel__scaledValueForValue_, 29.0);
  double v12 = v11;

  id v13 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, v12);
  objc_msgSend(v13, sel_setActive_, 1);

  id v14 = objc_msgSend(v1, sel_lastBaselineAnchor);
  id v15 = objc_msgSend(v0, sel_contentView);
  id v16 = objc_msgSend(v15, sel_bottomAnchor);

  id v17 = objc_msgSend(v1, sel_font);
  if (!v17)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v18 = v17;
  objc_msgSend(v17, sel__scaledValueForValue_, 15.0);
  double v20 = v19;

  id v21 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v16, -v20);
  objc_msgSend(v21, sel_setActive_, 1);
}

id RecordTextItemCell.__deallocating_deinit()
{
  return sub_1C253726C(type metadata accessor for RecordTextItemCell);
}

uint64_t static RecordImageCell.reuseIdentifier.getter()
{
  return 0x6D4964726F636552;
}

id RecordImageCell.recordImageView.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15RecordImageCell_recordImageView);
}

id RecordImageCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI15RecordImageCell_recordImageView;
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1838]);
  id v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_init);

  if (a3)
  {
    id v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v9 = 0;
  }
  v13.receiver = v8;
  v13.super_class = (Class)type metadata accessor for RecordImageCell();
  id v10 = objc_msgSendSuper2(&v13, sel_initWithStyle_reuseIdentifier_, a1, v9);

  id v11 = v10;
  sub_1C2536B98();

  return v11;
}

uint64_t type metadata accessor for RecordImageCell()
{
  return self;
}

uint64_t sub_1C2536A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (a4)
  {
    a4 = sub_1C254F470();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v8 = 0;
  }
  return a5(a3, a4, v8);
}

void sub_1C2536B98()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1940]), sel_init);
  id v2 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v2, sel_addLayoutGuide_, v1);

  id v3 = objc_msgSend(v1, sel_leadingAnchor);
  id v4 = objc_msgSend(v0, sel_contentView);
  id v5 = objc_msgSend(v4, sel_leadingAnchor);

  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v5);
  objc_msgSend(v6, sel_setActive_, 1);

  id v7 = objc_msgSend(v1, sel_trailingAnchor);
  id v8 = objc_msgSend(v0, sel_contentView);
  id v9 = objc_msgSend(v8, sel_trailingAnchor);

  id v10 = objc_msgSend(v7, (SEL)&selRef_characterAtIndex_ + 6, v9);
  objc_msgSend(v10, (SEL)&selRef_setNeedsDisplay, 1);

  id v11 = objc_msgSend(v1, sel_topAnchor);
  id v12 = objc_msgSend(v0, sel_contentView);
  id v13 = objc_msgSend(v12, sel_topAnchor);

  id v14 = objc_msgSend(v11, (SEL)&selRef_characterAtIndex_ + 6, v13);
  objc_msgSend(v14, (SEL)&selRef_setNeedsDisplay, 1);

  id v15 = objc_msgSend(v1, sel_bottomAnchor);
  id v16 = objc_msgSend(v0, sel_contentView);
  id v17 = objc_msgSend(v16, sel_bottomAnchor);

  id v18 = objc_msgSend(v15, (SEL)&selRef_characterAtIndex_ + 6, v17);
  objc_msgSend(v18, (SEL)&selRef_setNeedsDisplay, 1);

  id v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  id v19 = objc_msgSend(self, sel_whiteColor);
  objc_msgSend(v42, sel_setBackgroundColor_, v19);

  objc_msgSend(v42, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v20 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v20, sel_addSubview_, v42);

  id v21 = objc_msgSend(v42, sel_centerXAnchor);
  id v22 = objc_msgSend(v1, sel_centerXAnchor);
  id v23 = objc_msgSend(v21, (SEL)&selRef_characterAtIndex_ + 6, v22);

  objc_msgSend(v23, (SEL)&selRef_setNeedsDisplay, 1);
  id v24 = objc_msgSend(v42, sel_centerYAnchor);
  id v25 = objc_msgSend(v1, sel_centerYAnchor);
  id v26 = objc_msgSend(v24, (SEL)&selRef_characterAtIndex_ + 6, v25);

  objc_msgSend(v26, (SEL)&selRef_setNeedsDisplay, 1);
  id v27 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI15RecordImageCell_recordImageView];
  objc_msgSend(v27, sel_setContentMode_, 4);
  objc_msgSend(v27, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v42, sel_addSubview_, v27);
  id v28 = objc_msgSend(v27, sel_centerXAnchor);
  id v29 = objc_msgSend(v1, sel_centerXAnchor);
  id v30 = objc_msgSend(v28, (SEL)&selRef_characterAtIndex_ + 6, v29);

  objc_msgSend(v30, (SEL)&selRef_setNeedsDisplay, 1);
  id v31 = objc_msgSend(v27, sel_centerYAnchor);
  id v32 = objc_msgSend(v1, sel_centerYAnchor);
  id v33 = objc_msgSend(v31, (SEL)&selRef_characterAtIndex_ + 6, v32);

  objc_msgSend(v33, (SEL)&selRef_setNeedsDisplay, 1);
  id v34 = objc_msgSend(v42, sel_widthAnchor);
  id v35 = objc_msgSend(v27, sel_widthAnchor);
  id v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_multiplier_constant_, v35, 1.0, 6.0);

  objc_msgSend(v36, (SEL)&selRef_setNeedsDisplay, 1);
  id v37 = objc_msgSend(v42, sel_heightAnchor);
  id v38 = objc_msgSend(v27, sel_heightAnchor);
  id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_multiplier_constant_, v38, 1.0, 6.0);

  objc_msgSend(v39, (SEL)&selRef_setNeedsDisplay, 1);
  id v40 = objc_msgSend(v42, sel_layer);
  objc_msgSend(v40, sel_setCornerRadius_, 6.0);

  id v41 = objc_msgSend(v42, sel_layer);
  objc_msgSend(v41, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);

  objc_msgSend(v42, sel_setClipsToBounds_, 1);
}

id RecordImageCell.__deallocating_deinit()
{
  return sub_1C253726C(type metadata accessor for RecordImageCell);
}

id sub_1C253726C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

id sub_1C25372A4@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  objc_super v3 = (void **)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI24RecordReferenceRangeCell_valueInRange);
  swift_beginAccess();
  id v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for RecordPrimaryTitleCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecordPrimaryTitleCell);
}

uint64_t method lookup function for RecordDetailItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecordDetailItemCell);
}

uint64_t method lookup function for RecordReferenceRangeCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecordReferenceRangeCell);
}

uint64_t dispatch thunk of RecordReferenceRangeCell.valueInRange.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of RecordReferenceRangeCell.valueInRange.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of RecordReferenceRangeCell.valueInRange.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t method lookup function for RecordDataSourceCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecordDataSourceCell);
}

uint64_t dispatch thunk of RecordDataSourceCell.configCell(with:owner:dataProvider:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of RecordDataSourceCell.configCell(with:subject:dataProvider:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t method lookup function for RecordDetailItemSpinnerCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecordDetailItemSpinnerCell);
}

uint64_t method lookup function for RecordTextItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecordTextItemCell);
}

uint64_t method lookup function for RecordImageCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecordImageCell);
}

void sub_1C25374C8()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI22RecordPrimaryTitleCell_recordTitleLabel;
  id v2 = self;
  id v3 = objc_msgSend(v2, sel_labelColor);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v4, sel_setFont_, 0);
  objc_msgSend(v4, sel_setNumberOfLines_, 8);
  objc_msgSend(v4, sel_setTextColor_, v3);

  *(void *)&v0[v1] = v4;
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI22RecordPrimaryTitleCell_recordDateLabel;
  id v6 = objc_msgSend(v2, sel_labelColor);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v7, sel_setFont_, 0);
  objc_msgSend(v7, sel_setNumberOfLines_, 0);
  objc_msgSend(v7, sel_setTextColor_, v6);

  *(void *)&v0[v5] = v7;
  sub_1C25505F0();
  __break(1u);
}

void sub_1C2537644()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI20RecordDetailItemCell_titleLabel;
  id v2 = self;
  id v3 = objc_msgSend(v2, sel_labelColor);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v4, sel_setFont_, 0);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setTextColor_, v3);

  *(void *)&v0[v1] = v4;
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI20RecordDetailItemCell_bodyLabel;
  id v6 = objc_msgSend(v2, sel_labelColor);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v7, sel_setFont_, 0);
  objc_msgSend(v7, sel_setNumberOfLines_, 0);
  objc_msgSend(v7, sel_setTextColor_, v6);

  *(void *)&v0[v5] = v7;
  sub_1C25505F0();
  __break(1u);
}

void sub_1C25377C0()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI27RecordDetailItemSpinnerCell_titleLabel;
  id v2 = self;
  id v3 = objc_msgSend(v2, sel_labelColor);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v4, sel_setFont_, 0);
  objc_msgSend(v4, sel_setNumberOfLines_, 0);
  objc_msgSend(v4, sel_setTextColor_, v3);

  *(void *)&v0[v1] = v4;
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI27RecordDetailItemSpinnerCell_bodyLabel;
  id v6 = objc_msgSend(v2, sel_labelColor);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v7, sel_setFont_, 0);
  objc_msgSend(v7, sel_setNumberOfLines_, 0);
  objc_msgSend(v7, sel_setTextColor_, v6);

  *(void *)&v0[v5] = v7;
  uint64_t v8 = OBJC_IVAR____TtC15HealthRecordsUI27RecordDetailItemSpinnerCell_spinner;
  *(void *)&v0[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);

  sub_1C25505F0();
  __break(1u);
}

void sub_1C2537964()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI18RecordTextItemCell_titleLabel;
  id v2 = objc_msgSend(self, sel_labelColor);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v3, sel_setFont_, 0);
  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  objc_msgSend(v3, sel_setTextColor_, v2);

  *(void *)&v0[v1] = v3;
  sub_1C25505F0();
  __break(1u);
}

uint64_t DisplayCategory.makeQueryDescriptors(additionalPredicate:)(void *a1)
{
  id v2 = a1;
  unint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C2537F5C(v3, a1);
  swift_bridgeObjectRelease();

  return v4;
}

void sub_1C2537AC4(id *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  id v5 = *a1;
  id v6 = objc_msgSend(*a1, sel_sampleType);
  id v7 = objc_msgSend(v5, sel_predicate);
  if (v7)
  {
    id v8 = v7;
    if (a2)
    {
      sub_1C21ACA3C();
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1C255CD70;
      *(void *)(v9 + 32) = v8;
      *(void *)(v9 + 40) = a2;
      sub_1C254F730();
      sub_1C22EEE20();
      id v10 = a2;
      id v11 = v8;
      id v12 = v10;
      id v13 = v11;
      id v14 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v8 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v14);
    }
  }
  else if (a2)
  {
    id v8 = a2;
  }
  else
  {
    id v8 = 0;
  }
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B3D0]), sel_initWithSampleType_predicate_, v6, v8);

  *a3 = v15;
}

uint64_t DisplayCategory.makeCategoryRecordQueryDescriptions(additionalPredicate:)(void *a1)
{
  long long v3 = *(_OWORD *)(v1 + 48);
  void v9[2] = *(_OWORD *)(v1 + 32);
  v9[3] = v3;
  uint64_t v10 = *(void *)(v1 + 64);
  long long v4 = *(_OWORD *)(v1 + 16);
  v9[0] = *(_OWORD *)v1;
  v9[1] = v4;
  sub_1C2201A54((uint64_t)v9);
  id v5 = a1;
  unint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C25381F4(v6, v9, a1);

  sub_1C2201ABC((uint64_t)v9);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2537CE0@<X0>(void **a1@<X0>, unsigned char *a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)&v27 - v12;
  id v14 = *a1;
  *((unsigned char *)&v27 - v12) = *a2;
  swift_storeEnumTagMultiPayload();
  id v15 = objc_msgSend(v14, sel_sampleType);
  id v16 = objc_msgSend(v14, sel_predicate);
  if (v16)
  {
    id v17 = v16;
    if (a3)
    {
      sub_1C21ACA3C();
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1C255CD70;
      *(void *)(v18 + 32) = v17;
      *(void *)(v18 + 40) = a3;
      uint64_t v29 = v18;
      sub_1C254F730();
      sub_1C22EEE20();
      id v28 = a4;
      id v19 = a3;
      id v20 = v17;
      id v21 = v19;
      id v22 = v20;
      id v23 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v17 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v23);

      a4 = v28;
    }
  }
  else if (a3)
  {
    id v17 = a3;
  }
  else
  {
    id v17 = 0;
  }
  sub_1C21A9698((uint64_t)v13, (uint64_t)v10);
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B3D0]), sel_initWithSampleType_predicate_, v15, v17);

  sub_1C2268C64((uint64_t)v13);
  type metadata accessor for CategoryRecordQueryDescription();
  uint64_t v25 = swift_allocObject();
  uint64_t result = sub_1C2207DD8((uint64_t)v10, v25 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_category);
  *(void *)(v25 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor) = v24;
  *a4 = v25;
  return result;
}

uint64_t sub_1C2537F5C(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v4) {
      break;
    }
    uint64_t v23 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2550490();
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = 0;
    unint64_t v21 = v3 & 0xC000000000000001;
    uint64_t v22 = v4;
    unint64_t v20 = v3;
    while (v4 != v6)
    {
      if (v21) {
        id v9 = (id)MEMORY[0x1C87588E0](v6, v3);
      }
      else {
        id v9 = *(id *)(v3 + 8 * v6 + 32);
      }
      uint64_t v10 = v9;
      id v11 = objc_msgSend(v9, sel_sampleType);
      id v12 = objc_msgSend(v10, sel_predicate);
      if (v12)
      {
        id v8 = v12;
        if (a2)
        {
          sub_1C21ACA3C();
          uint64_t v13 = swift_allocObject();
          *(_OWORD *)(v13 + 16) = xmmword_1C255CD70;
          *(void *)(v13 + 32) = v8;
          *(void *)(v13 + 40) = a2;
          sub_1C254F730();
          sub_1C22EEE20();
          id v14 = a2;
          id v15 = a2;
          id v16 = v8;
          id v17 = v15;
          id v18 = v16;
          id v19 = (void *)sub_1C254F700();
          swift_bridgeObjectRelease();
          id v8 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v19);

          a2 = v14;
          unint64_t v3 = v20;
        }
      }
      else if (a2)
      {
        id v7 = a2;
        id v8 = a2;
      }
      else
      {
        id v8 = 0;
      }
      ++v6;
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B3D0]), sel_initWithSampleType_predicate_, v11, v8);

      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      uint64_t v4 = v22;
      if (v22 == v6) {
        return v23;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C25381F4(unint64_t a1, unsigned char *a2, void *a3)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v6) {
      break;
    }
    uint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2550490();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = 0;
    while (v6 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1C87588E0](v8, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      id v12 = v9;
      sub_1C2537CE0(&v12, a2, a3, &v13);

      if (v3) {
        return swift_release();
      }
      ++v8;
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      if (v6 == v8) {
        return v14;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static MonogramProvider.shared.getter()
{
  if (qword_1EBB6D888 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_1C25383C0()
{
  type metadata accessor for MonogramProvider();
  uint64_t v0 = swift_allocObject();
  sub_1C23BA868((uint64_t *)(v0 + 16));
  uint64_t result = sub_1C23BAAC0((uint64_t *)(v0 + 88));
  qword_1EBB6E970 = v0;
  return result;
}

id sub_1C2538408(uint64_t a1, uint64_t a2, double a3)
{
  *(void *)&v16[0] = a1;
  *((void *)&v16[0] + 1) = a2;
  sub_1C2538B40();
  swift_bridgeObjectRetain();
  sub_1C254FC90();
  uint64_t v6 = swift_bridgeObjectRelease();
  if (*(void *)&v18[0])
  {
    *(double *)id v16 = a3;
    uint64_t v7 = MEMORY[0x1F4188790](v6);
    MEMORY[0x1F4188790](v7);
    sub_1C21FFF20(0, (unint64_t *)&qword_1EA2E2808, (unint64_t *)&qword_1EBB6EEB8);
    sub_1C254FC90();
    sub_1C2538BB0((uint64_t)v18, (uint64_t (*)(void))sub_1C2538B40);
    if (v15) {
      return (id)v15;
    }
  }
  else
  {
    sub_1C2538BB0((uint64_t)v18, (uint64_t (*)(void))sub_1C2538B40);
  }
  id v9 = sub_1C25389A4(a3);
  uint64_t v10 = (void *)sub_1C254F430();
  id v11 = objc_msgSend(v9, sel_makeImageForTitle_, v10);

  uint64_t v13 = MEMORY[0x1F4188790](v12);
  MEMORY[0x1F4188790](v13);
  swift_bridgeObjectRetain();
  sub_1C254FC90();
  swift_bridgeObjectRelease();
  if (*(void *)&v16[0])
  {
    void v18[2] = v16[2];
    v18[3] = v16[3];
    uint64_t v19 = v17;
    v18[0] = v16[0];
    v18[1] = v16[1];
    id v14 = v11;
    sub_1C2402060(v11, a3);
  }
  else
  {
    sub_1C2538BB0((uint64_t)v16, (uint64_t (*)(void))sub_1C2538B40);
    sub_1C23BAF90((uint64_t *)v18);
    id v14 = v11;
    sub_1C2402060(v11, a3);
    sub_1C2284EE8((uint64_t)v18, (uint64_t)v16);
    swift_bridgeObjectRetain();
    sub_1C24022BC((uint64_t)v16, a1, a2);
  }

  sub_1C2538C10((uint64_t)v18, (unint64_t *)&qword_1EBB6E940, (unint64_t *)&qword_1EBB6EEB8);
  return v14;
}

uint64_t MonogramProvider.deinit()
{
  sub_1C2538C10(v0 + 16, &qword_1EA2E53B8, &qword_1EBB6EEA8);
  sub_1C2538BB0(v0 + 88, (uint64_t (*)(void))sub_1C2538808);
  return v0;
}

void sub_1C2538808()
{
  if (!qword_1EA2E53C0)
  {
    sub_1C2538888(255, (unint64_t *)&qword_1EBB6E940, (unint64_t *)&qword_1EBB6EEB8);
    unint64_t v0 = type metadata accessor for UnboundedCache();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E53C0);
    }
  }
}

void sub_1C2538888(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C21AB51C(255, a3);
    sub_1C2207750();
    unint64_t v4 = type metadata accessor for UnboundedCache();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t MonogramProvider.__deallocating_deinit()
{
  sub_1C2538C10(v0 + 16, &qword_1EA2E53B8, &qword_1EBB6EEA8);
  sub_1C2538BB0(v0 + 88, (uint64_t (*)(void))sub_1C2538808);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MonogramProvider()
{
  return self;
}

uint64_t method lookup function for MonogramProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MonogramProvider);
}

id sub_1C25389A4(double a1)
{
  sub_1C21FFF20(0, &qword_1EA2E53C8, &qword_1EBB6EEA8);
  sub_1C254FC90();
  id result = v5;
  if (!v5)
  {
    id v3 = objc_msgSend(objc_allocWithZone((Class)HRMonogrammer), sel_initWithDiameter_, a1);
    id v4 = v3;
    sub_1C2401E04(v3, a1);
    return v4;
  }
  return result;
}

uint64_t sub_1C2538A9C@<X0>(void (*a1)(uint64_t *__return_ptr, uint64_t *)@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  a1(&v8, &v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v8;
  return result;
}

double sub_1C2538B30@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2403030(*a1, **(void **)(v2 + 16), *(void *)(*(void *)(v2 + 16) + 8), a2);
}

void sub_1C2538B40()
{
  if (!qword_1EA2DEB60)
  {
    sub_1C2538888(255, (unint64_t *)&qword_1EBB6E940, (unint64_t *)&qword_1EBB6EEB8);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DEB60);
    }
  }
}

uint64_t sub_1C2538BB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2538C10(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1C2538888(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2538C6C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C2402FE4(*a1, **(double **)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_1C2538CA0@<X0>(void *a1@<X8>)
{
  return sub_1C2538A9C(*(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16), *(void *)(v1 + 32), a1);
}

uint64_t sub_1C2538CC0@<X0>(void *a1@<X8>)
{
  return sub_1C2538CA0(a1);
}

HealthRecordsUI::FeedItemKind_optional __swiftcall FeedItemKind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C25508C0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 18;
  if (v3 < 0x12) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static FeedItemKind.allCases.getter()
{
  return &unk_1F1D8F3A0;
}

uint64_t sub_1C2538D94()
{
  return sub_1C23D8B34();
}

uint64_t sub_1C2538DA0()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2538E08()
{
  FeedItemKind.rawValue.getter();
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2538E6C()
{
  return sub_1C2550A10();
}

HealthRecordsUI::FeedItemKind_optional sub_1C2538ED0(Swift::String *a1)
{
  return FeedItemKind.init(rawValue:)(*a1);
}

unint64_t sub_1C2538EDC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = FeedItemKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C2538F04(void *a1@<X8>)
{
  *a1 = &unk_1F1D8F3A0;
}

HealthRecordsUI::FeedItemKind_optional __swiftcall FeedItemKind.init(feedItemIdentifier:)(Swift::String feedItemIdentifier)
{
  uint64_t v2 = qword_1F1D8F3B0;
  uint64_t v8 = v1;
  if (qword_1F1D8F3B0)
  {
    unint64_t v3 = &byte_1F1D8F3C0;
    while (1)
    {
      char v5 = *v3++;
      char v4 = v5;
      sub_1C25503A0();
      swift_bridgeObjectRelease();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      sub_1C254F5A0();
      char v6 = sub_1C254F610();
      swift_bridgeObjectRelease();
      if (v6) {
        break;
      }
      if (!--v2) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    char v4 = 18;
  }
  result.value = swift_bridgeObjectRelease();
  char *v8 = v4;
  return result;
}

uint64_t static FeedItemContextChange.deleteFeedItems(of:from:)@<X0>(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  __swift_project_boxed_opaque_existential_1Tm(a2, a2[3]);
  sub_1C2539598(a1, (uint64_t)v6);
  return sub_1C25397D0((uint64_t)v6, a3);
}

uint64_t FeedItemContext.previousFeedItems(of:)()
{
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  FeedItemKind.rawValue.getter();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  unint64_t v0 = (void *)sub_1C254CFD0();
  uint64_t v1 = sub_1C254CFC0();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t static FeedItemContextChange.deleteFeedItems(of:matching:from:)@<X0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1C2539408(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C253982C, a3);
}

uint64_t static FeedItemContextChange.deleteFeedItems(of:excluding:from:)@<X0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1C2539408(a1, a2, sub_1C2539A60, a3);
}

uint64_t sub_1C2539408@<X0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t (*a3)(uint64_t, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  __swift_project_boxed_opaque_existential_1Tm(a2, a2[3]);
  uint64_t v7 = FeedItemContext.previousFeedItems(of:)();
  swift_bridgeObjectRetain();
  uint64_t v8 = a3(v7, a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = 0;
  *(unsigned char *)(a4 + 32) = 32;
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FeedItemContext.deleteFeedItems(of:)(HealthRecordsUI::FeedItemKind of)
{
  char v1 = *(unsigned char *)of;
  sub_1C23EAFA8(0, &qword_1EA2E53D0, MEMORY[0x1E4F67380], MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CD90;
  uint64_t v3 = v2 + 32;
  char v4 = v1;
  sub_1C2539598(&v4, (uint64_t)v5);
  sub_1C25397D0((uint64_t)v5, v3);
  sub_1C254CFA0();
  swift_bridgeObjectRelease();
}

uint64_t sub_1C2539598@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = sub_1C254CF90();
  uint64_t v4 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  char v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v30 = *a1;
  uint64_t v7 = FeedItemContext.previousFeedItems(of:)();
  int64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v25 = a2;
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1C2274764(0, v8, 0);
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v9 = v4 + 16;
    uint64_t v11 = *(unsigned __int8 *)(v9 + 64);
    v24[1] = v7;
    uint64_t v12 = v7 + ((v11 + 32) & ~v11);
    uint64_t v26 = *(void *)(v9 + 56);
    uint64_t v27 = v10;
    uint64_t v13 = (void (**)(char *, uint64_t))(v9 - 8);
    do
    {
      uint64_t v14 = v28;
      uint64_t v15 = v9;
      v27(v6, v12, v28);
      uint64_t v16 = sub_1C254CF70();
      uint64_t v18 = v17;
      (*v13)(v6, v14);
      uint64_t v19 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C2274764(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v29;
      }
      unint64_t v21 = *(void *)(v19 + 16);
      unint64_t v20 = *(void *)(v19 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1C2274764(v20 > 1, v21 + 1, 1);
        uint64_t v19 = v29;
      }
      *(void *)(v19 + 16) = v21 + 1;
      uint64_t v22 = v19 + 16 * v21;
      *(void *)(v22 + 32) = v16;
      *(void *)(v22 + 40) = v18;
      v12 += v26;
      --v8;
      uint64_t v9 = v15;
    }
    while (v8);
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v25;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 32;
  return result;
}

uint64_t sub_1C25397D0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C253982C(uint64_t a1, void *a2)
{
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    sub_1C254CF90();
    uint64_t v3 = a2[2];
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v22 = a2 + 7;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v23 = a2;
    while (1)
    {
      uint64_t v6 = sub_1C254CF70();
      uint64_t v8 = v7;
      if (v3)
      {
        uint64_t v9 = v6;
        BOOL v10 = a2[4] == v6 && a2[5] == v7;
        if (v10 || (uint64_t result = sub_1C2550870(), (result & 1) != 0))
        {
LABEL_11:
          swift_bridgeObjectRelease();
          uint64_t v12 = sub_1C254CF70();
          uint64_t v14 = v13;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = sub_1C226BFC0(0, v5[2] + 1, 1, v5);
          }
          unint64_t v16 = v5[2];
          unint64_t v15 = v5[3];
          if (v16 >= v15 >> 1) {
            uint64_t v5 = sub_1C226BFC0((void *)(v15 > 1), v16 + 1, 1, v5);
          }
          v5[2] = v16 + 1;
          uint64_t v17 = &v5[2 * v16];
          v17[4] = v12;
          void v17[5] = v14;
        }
        else
        {
          if (v3 != 1)
          {
            uint64_t v18 = v22;
            uint64_t v19 = 1;
            while (1)
            {
              uint64_t v20 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                break;
              }
              if (*(v18 - 1) == v9 && *v18 == v8) {
                goto LABEL_11;
              }
              uint64_t result = sub_1C2550870();
              if (result) {
                goto LABEL_11;
              }
              v18 += 2;
              ++v19;
              if (v20 == v3) {
                goto LABEL_26;
              }
            }
            __break(1u);
            return result;
          }
LABEL_26:
          swift_bridgeObjectRelease();
        }
        a2 = v23;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (++v4 == v24)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C2539A60(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = *(void *)(a1 + 16);
  if (v24)
  {
    sub_1C254CF90();
    uint64_t v3 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v22 = (void *)(a2 + 56);
    uint64_t v23 = a2;
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v6 = sub_1C254CF70();
      uint64_t v8 = v7;
      if (!v3) {
        goto LABEL_20;
      }
      uint64_t v9 = v6;
      if (*(void *)(v23 + 32) != v6 || *(void *)(v23 + 40) != v7)
      {
        uint64_t result = sub_1C2550870();
        if ((result & 1) == 0) {
          break;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
LABEL_4:
      if (++v4 == v24)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
    }
    if (v3 != 1)
    {
      uint64_t v12 = v22;
      uint64_t v13 = 1;
      while (1)
      {
        uint64_t v14 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (*(v12 - 1) == v9 && *v12 == v8) {
          goto LABEL_3;
        }
        uint64_t result = sub_1C2550870();
        if (result) {
          goto LABEL_3;
        }
        v12 += 2;
        ++v13;
        if (v14 == v3) {
          goto LABEL_20;
        }
      }
      __break(1u);
      return result;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1C254CF70();
    uint64_t v18 = v17;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = sub_1C226BFC0(0, v5[2] + 1, 1, v5);
    }
    unint64_t v20 = v5[2];
    unint64_t v19 = v5[3];
    if (v20 >= v19 >> 1) {
      uint64_t v5 = sub_1C226BFC0((void *)(v19 > 1), v20 + 1, 1, v5);
    }
    v5[2] = v20 + 1;
    unint64_t v21 = &v5[2 * v20];
    v21[4] = v16;
    v21[5] = v18;
    goto LABEL_4;
  }
  return MEMORY[0x1E4FBC860];
}

unint64_t sub_1C2539C88()
{
  unint64_t result = qword_1EA2E53D8;
  if (!qword_1EA2E53D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E53D8);
  }
  return result;
}

unint64_t sub_1C2539CE0()
{
  unint64_t result = qword_1EA2E53E0;
  if (!qword_1EA2E53E0)
  {
    sub_1C23EAFA8(255, &qword_1EA2E53E8, (uint64_t)&type metadata for FeedItemKind, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E53E0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FeedItemKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeedItemKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2539EB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for UserDomainConceptListViewController()
{
  uint64_t result = qword_1EA2E5410;
  if (!qword_1EA2E5410) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2539F2C()
{
  return swift_initClassMetadata2();
}

id sub_1C2539F94(unsigned __int8 *a1, uint64_t a2, void *a3)
{
  int v5 = *a1;
  v3[qword_1EA2E53F0] = v5;
  *(void *)&v3[qword_1EA2E53F8] = a2;
  uint64_t v6 = qword_1EBB6EF30;
  BOOL v7 = v3;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1EBB6FB90;
  id v9 = objc_msgSend(a3, sel_healthStore);
  id v10 = objc_msgSend(v9, sel_profileIdentifier);

  uint64_t v63 = *(void *)(v8 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v11);
  sub_1C254CEE0();
  sub_1C254E460();
  sub_1C253BA28((unint64_t *)&qword_1EBB6F240, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();

  swift_release();
  *(void *)&v7[qword_1EA2E5400] = v64;
  uint64_t v12 = a2;
  switch(a2)
  {
    case 0:
      sub_1C254D110();
      LOBYTE(v64) = v5;
      id v13 = objc_msgSend(a3, sel_healthStore);
      id v14 = objc_msgSend(v13, sel_profileIdentifier);

      unint64_t v15 = (void *)_s14HealthPlatform8FeedItemC0A9RecordsUIE029predicateForUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0N0OSg_AA06SourceP0OtFZ_0((unsigned __int8 *)&v64);
      sub_1C21ACA3C();
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1C255DBA0;
      *(void *)(v16 + 32) = v15;
      id v60 = v15;
      id v17 = objc_msgSend(a3, sel_healthStore);
      id v18 = objc_msgSend(v17, (SEL)&selRef_setTitle_);

      uint64_t v59 = sub_1C23E8940(v18);
      uint64_t v20 = v19;
      sub_1C22EEE20();
      sub_1C253BA70(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1C255CDA0;
      uint64_t v22 = sub_1C254D0F0();
      uint64_t v24 = v23;
      uint64_t v25 = MEMORY[0x1E4FBB1A0];
      *(void *)(v21 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v26 = sub_1C220D950();
      *(void *)(v21 + 32) = v22;
      *(void *)(v21 + 40) = v24;
      *(void *)(v21 + 96) = v25;
      *(void *)(v21 + 104) = v26;
      *(void *)(v21 + 64) = v26;
      *(void *)(v21 + 72) = v59;
      *(void *)(v21 + 80) = v20;
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C254F9A0();

      uint64_t v12 = a2;
      swift_bridgeObjectRelease();
      *(void *)(v16 + 40) = v27;
      LOBYTE(v64) = v5;
      id v28 = objc_msgSend(a3, sel_healthStore);
      id v29 = objc_msgSend(v28, sel_profileIdentifier);

      id v30 = _s14HealthPlatform8FeedItemC0A9RecordsUIE022predicateForNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0L0OSg_AA06SourceN0OtFZ_0((unsigned __int8 *)&v64);
      *(void *)(v16 + 48) = v30;
      LOBYTE(v64) = v5;
      id v31 = objc_msgSend(a3, sel_healthStore);
      id v32 = objc_msgSend(v31, sel_profileIdentifier);

      id v33 = _s14HealthPlatform8FeedItemC0A9RecordsUIE037predicateForRemovedCategoryNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD07DisplayJ0V0N0OSg_AA06SourceP0OtFZ_0((unsigned __int8 *)&v64);
      *(void *)(v16 + 56) = v33;
      uint64_t v64 = v16;
      sub_1C254F730();
      id v34 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v35 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v34);

      goto LABEL_12;
    case 1:
      LOBYTE(v64) = v5;
      id v39 = objc_msgSend(a3, sel_healthStore);
      id v40 = objc_msgSend(v39, sel_profileIdentifier);

      id v41 = (void *)_s14HealthPlatform8FeedItemC0A9RecordsUIE046predicateForUserDomainConceptEducationAbstractC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0P0OSg_AA06SourceR0OtFZ_0((unsigned __int8 *)&v64);
      sub_1C21ACA3C();
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1C255CD80;
      *(void *)(v42 + 32) = v41;
      LOBYTE(v64) = v5;
      id v43 = v41;
      id v44 = objc_msgSend(a3, sel_healthStore);
      id v45 = objc_msgSend(v44, sel_profileIdentifier);

      id v46 = _s14HealthPlatform8FeedItemC0A9RecordsUIE022predicateForNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0L0OSg_AA06SourceN0OtFZ_0((unsigned __int8 *)&v64);
      *(void *)(v42 + 40) = v46;
      LOBYTE(v64) = v5;
      id v47 = objc_msgSend(a3, sel_healthStore);
      id v48 = objc_msgSend(v47, sel_profileIdentifier);

      id v49 = _s14HealthPlatform8FeedItemC0A9RecordsUIE037predicateForRemovedCategoryNavigationC5Items12categoryKind13sourceProfileSo11NSPredicateCAD07DisplayJ0V0N0OSg_AA06SourceP0OtFZ_0((unsigned __int8 *)&v64);
      *(void *)(v42 + 48) = v49;
      uint64_t v64 = v42;
      sub_1C254F730();
      sub_1C22EEE20();
      unint64_t v50 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v35 = objc_msgSend(self, sel_orPredicateWithSubpredicates_, v50);

      goto LABEL_12;
    case 2:
      if (v5 != 2) {
        goto LABEL_14;
      }
      if (qword_1EBB6EF40 == -1) {
        goto LABEL_10;
      }
      goto LABEL_13;
    case 3:
      if (v5 != 2) {
        goto LABEL_14;
      }
      if (qword_1EBB6EF40 == -1) {
        goto LABEL_10;
      }
LABEL_13:
      swift_once();
LABEL_10:
      id v36 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      LOBYTE(v64) = 2;
      id v37 = objc_msgSend(a3, sel_healthStore);
      id v38 = objc_msgSend(v37, sel_profileIdentifier);

      id v35 = (id)_s14HealthPlatform8FeedItemC0A9RecordsUIE029predicateForUserDomainConceptC5Items12categoryKind13sourceProfileSo11NSPredicateCAD15DisplayCategoryV0N0OSg_AA06SourceP0OtFZ_0((unsigned __int8 *)&v64);
LABEL_12:
      *(void *)&v7[qword_1EA2E5408] = v12;

      *(void *)&v7[qword_1EA2DF3F0] = v35;
      *(void *)&v7[qword_1EA2DF3F8] = MEMORY[0x1E4FBC860];
      *(void *)&v7[qword_1EA2DF3E8] = a3;
      id v51 = objc_allocWithZone(MEMORY[0x1E4FB15C0]);
      id v52 = v35;
      id v53 = a3;
      id v54 = objc_msgSend(v51, sel_init);
      v62.receiver = v7;
      v62.super_class = (Class)type metadata accessor for FeedItemListViewController();
      id v55 = objc_msgSendSuper2(&v62, sel_initWithCollectionViewLayout_, v54);

      id v56 = v55;
      id v57 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v56, sel_setTitle_, v57);

      return v56;
    default:
LABEL_14:
      sub_1C25505F0();
      __break(1u);
      JUMPOUT(0x1C253A8D8);
  }
}

void sub_1C253A8E8(void *a1)
{
  v3.receiver = a1;
  v3.super_class = (Class)swift_getObjectType();
  id v1 = v3.receiver;
  objc_msgSendSuper2(&v3, sel_viewDidLoad);
  if ((*(void *)((unsigned char *)v1 + qword_1EA2E53F8) & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    id v2 = objc_msgSend(v1, sel_navigationItem, v3.receiver, v3.super_class);
    objc_msgSend(v2, sel_setLargeTitleDisplayMode_, 2);

    id v1 = v2;
  }
}

void sub_1C253A984(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  unsigned int v4 = v5.receiver;
  objc_msgSendSuper2(&v5, sel_viewDidAppear_, a3);
  if (v4[qword_1EA2E53F0] == 2)
  {
    if (qword_1EBB6D840 != -1) {
      swift_once();
    }
    sub_1C23CDD28(0, 0);
  }
}

id sub_1C253AA3C(int a1, char a2)
{
  objc_super v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = sub_1C254CD90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C253B9D0();
  *(void *)&double v12 = MEMORY[0x1F4188790](v11 - 8).n128_u64[0];
  id v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57.receiver = v3;
  v57.super_class = ObjectType;
  objc_msgSendSuper2(&v57, sel_setEditing_animated_, a1 & 1, a2 & 1, v12);
  id result = objc_msgSend(v3, sel_collectionView);
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v16 = result;
  objc_msgSend(result, sel_setEditing_, a1 & 1);

  id result = objc_msgSend(v3, sel_collectionView);
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v17 = result;
  objc_msgSend(result, sel_setAllowsSelection_, 1);

  id result = objc_msgSend(v3, sel_collectionView);
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  id v18 = result;
  objc_msgSend(result, sel_setAllowsMultipleSelection_, a1 & 1);

  id result = objc_msgSend(v3, sel_collectionView);
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v19 = result;
  objc_msgSend(result, sel_setAllowsMultipleSelectionDuringEditing_, a1 & 1);

  id v43 = v3;
  id result = objc_msgSend(v3, sel_collectionView);
  if (!result)
  {
LABEL_31:
    __break(1u);
    return result;
  }
  uint64_t v20 = result;
  id v21 = objc_msgSend(result, sel_indexPathsForVisibleItems);

  uint64_t v22 = sub_1C254F710();
  uint64_t v23 = *(void *)(v22 + 16);
  uint64_t v42 = v22;
  if (v23)
  {
    int v41 = a1;
    uint64_t v24 = v8 + 16;
    unint64_t v50 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
    unint64_t v25 = v22 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v45 = *(void *)(v8 + 72);
    id v47 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    id v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    id v44 = (void (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    id v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v40[1] = (v8 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    unint64_t v26 = v43;
    id v46 = v10;
    while (1)
    {
      v50(v14, v25, v7);
      uint64_t v27 = *v49;
      (*v49)(v14, 0, 1, v7);
      if ((*v48)(v14, 1, v7) == 1) {
        return (id)swift_bridgeObjectRelease_n();
      }
      id v28 = v14;
      id v29 = v14;
      uint64_t v30 = v7;
      (*v47)(v10, v29, v7);
      id result = objc_msgSend(v26, sel_collectionView);
      if (!result)
      {
        __break(1u);
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      id v31 = result;
      id v32 = (void *)sub_1C254CD30();
      id v33 = objc_msgSend(v31, sel_cellForItemAtIndexPath_, v32);

      uint64_t v7 = v30;
      if (v33)
      {
        sub_1C254D2E0();
        if (swift_dynamicCastClass())
        {
          uint64_t v34 = v24;
          id result = (id)sub_1C254D2D0();
          if (!result) {
            goto LABEL_26;
          }
          id v35 = result;
          uint64_t v36 = sub_1C254E170();
          uint64_t v38 = v37;

          if (v36
            && (uint64_t v51 = v36,
                uint64_t v52 = v38,
                sub_1C2270AE4(0, &qword_1EA2E5420),
                sub_1C2270AE4(0, &qword_1EA2DFD08),
                (swift_dynamicCast() & 1) != 0))
          {
            uint64_t v24 = v34;
            uint64_t v7 = v30;
            if (*((void *)&v54 + 1))
            {
              sub_1C21F44EC(&v53, (uint64_t)v56);
              __swift_project_boxed_opaque_existential_1Tm(v56, v56[3]);
              uint64_t v24 = v34;
              uint64_t v7 = v30;
              sub_1C254D810();

              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v56);
LABEL_21:
              unint64_t v26 = v43;
              goto LABEL_9;
            }
          }
          else
          {
            uint64_t v55 = 0;
            long long v53 = 0u;
            long long v54 = 0u;
            uint64_t v24 = v34;
            uint64_t v7 = v30;
          }

          sub_1C253B948((uint64_t)&v53);
          goto LABEL_21;
        }
      }
LABEL_9:
      id v10 = v46;
      (*v44)(v46, v7);
      v25 += v45;
      --v23;
      id v14 = v28;
      if (!v23)
      {
        v27(v28, 1, 1, v7);
        return (id)swift_bridgeObjectRelease_n();
      }
    }
  }
  id v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  swift_bridgeObjectRetain();
  v39(v14, 1, 1, v7);
  return (id)swift_bridgeObjectRelease_n();
}

void sub_1C253AFC0(void *a1, uint64_t a2, int a3, char a4)
{
  id v6 = a1;
  sub_1C253AA3C(a3, a4);
}

uint64_t sub_1C253B01C(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = sub_1C254CD90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CD40();
  id v11 = a3;
  id v12 = a4;
  id v13 = a1;
  sub_1C253B7F8(v11, v12);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C253B134@<X0>(uint64_t *a1@<X8>)
{
  id v3 = *(id *)&v1[qword_1EA2E53F8];
  switch((unint64_t)v3)
  {
    case 0uLL:
      char v4 = v1[qword_1EA2E53F0];
      objc_super v5 = *(void **)&v1[qword_1EA2DF3E8];
      id v3 = *(id *)&v1[qword_1EA2DF3F0];
      id v6 = objc_msgSend(v5, sel_healthStore);
      id v7 = objc_msgSend(v6, sel_profileIdentifier);

      sub_1C254FB30();
      id v8 = objc_msgSend(v5, sel_healthStore);
      id v9 = objc_msgSend(v1, sel_collectionView);
      if (!v9)
      {
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        v41[0] = 0;
        v41[1] = 0xE000000000000000;
        sub_1C25503A0();
        sub_1C254F5A0();
        *(void *)&v40[0] = v3;
        type metadata accessor for HRUserDomainConceptListType(0);
        sub_1C25504F0();
        sub_1C254F5A0();
        sub_1C25505F0();
        __break(1u);
        JUMPOUT(0x1C253B774);
      }
      id v10 = v9;
      uint64_t v11 = type metadata accessor for UserDomainConceptLatestViewDataSourceProvider();
      uint64_t v12 = swift_allocObject();
      sub_1C21F4424((uint64_t)v41, (uint64_t)v40);
      *(unsigned char *)(v12 + 80) = 0;
      swift_unknownObjectWeakInit();
      *(unsigned char *)(v12 + 16) = v4;
      *(void *)(v12 + 24) = v3;
      *(void *)(v12 + 32) = v7;
      sub_1C21F44EC(v40, v12 + 40);
      *(void *)(v12 + 88) = v8;
      swift_unknownObjectWeakAssign();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
      a1[3] = v11;
      id v13 = (unint64_t *)&unk_1EA2E5440;
      id v14 = type metadata accessor for UserDomainConceptLatestViewDataSourceProvider;
      break;
    case 1uLL:
      char v31 = v1[qword_1EA2E53F0];
      id v32 = *(void **)&v1[qword_1EA2DF3E8];
      id v3 = *(id *)&v1[qword_1EA2DF3F0];
      id v33 = objc_msgSend(v32, sel_healthStore);
      id v34 = objc_msgSend(v33, sel_profileIdentifier);

      sub_1C254FB30();
      id v35 = objc_msgSend(v32, sel_healthStore);
      id v36 = objc_msgSend(v1, sel_collectionView);
      if (!v36) {
        goto LABEL_14;
      }
      uint64_t v37 = v36;
      uint64_t v38 = type metadata accessor for UserDomainConceptAlphabeticalViewDataSourceProvider();
      uint64_t v12 = swift_allocObject();
      sub_1C21F4424((uint64_t)v41, (uint64_t)v40);
      *(unsigned char *)(v12 + 80) = 0;
      swift_unknownObjectWeakInit();
      *(unsigned char *)(v12 + 16) = v31;
      *(void *)(v12 + 24) = v3;
      *(void *)(v12 + 32) = v34;
      sub_1C21F44EC(v40, v12 + 40);
      *(void *)(v12 + 88) = v35;
      swift_unknownObjectWeakAssign();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
      a1[3] = v38;
      id v13 = (unint64_t *)&unk_1EA2E5438;
      id v14 = type metadata accessor for UserDomainConceptAlphabeticalViewDataSourceProvider;
      break;
    case 2uLL:
      char v15 = v1[qword_1EA2E53F0];
      uint64_t v16 = *(void **)&v1[qword_1EA2DF3E8];
      id v3 = *(id *)&v1[qword_1EA2DF3F0];
      id v17 = objc_msgSend(v16, sel_healthStore);
      id v18 = objc_msgSend(v17, sel_profileIdentifier);

      sub_1C254FB30();
      id v19 = objc_msgSend(v16, sel_healthStore);
      id v20 = objc_msgSend(v1, sel_collectionView);
      if (!v20) {
        goto LABEL_12;
      }
      id v21 = v20;
      uint64_t v22 = type metadata accessor for UserDomainConceptOlderViewDataSourceProvider();
      uint64_t v12 = swift_allocObject();
      sub_1C21F4424((uint64_t)v41, (uint64_t)v40);
      *(unsigned char *)(v12 + 80) = 0;
      swift_unknownObjectWeakInit();
      *(unsigned char *)(v12 + 16) = v15;
      *(void *)(v12 + 24) = v3;
      *(void *)(v12 + 32) = v18;
      sub_1C21F44EC(v40, v12 + 40);
      *(void *)(v12 + 88) = v19;
      swift_unknownObjectWeakAssign();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
      a1[3] = v22;
      id v13 = (unint64_t *)&unk_1EA2E5428;
      id v14 = type metadata accessor for UserDomainConceptOlderViewDataSourceProvider;
      break;
    case 3uLL:
      char v23 = v1[qword_1EA2E53F0];
      uint64_t v24 = *(void **)&v1[qword_1EA2DF3E8];
      id v3 = *(id *)&v1[qword_1EA2DF3F0];
      id v25 = objc_msgSend(v24, sel_healthStore);
      id v26 = objc_msgSend(v25, sel_profileIdentifier);

      sub_1C254FB30();
      id v27 = objc_msgSend(v24, sel_healthStore);
      id v28 = objc_msgSend(v1, sel_collectionView);
      if (!v28) {
        goto LABEL_13;
      }
      id v29 = v28;
      uint64_t v30 = type metadata accessor for UserDomainConceptOtherViewDataSourceProvider();
      uint64_t v12 = swift_allocObject();
      sub_1C21F4424((uint64_t)v41, (uint64_t)v40);
      *(unsigned char *)(v12 + 80) = 0;
      swift_unknownObjectWeakInit();
      *(unsigned char *)(v12 + 16) = v23;
      *(void *)(v12 + 24) = v3;
      *(void *)(v12 + 32) = v26;
      sub_1C21F44EC(v40, v12 + 40);
      *(void *)(v12 + 88) = v27;
      swift_unknownObjectWeakAssign();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
      a1[3] = v30;
      id v13 = (unint64_t *)&unk_1EA2E5430;
      id v14 = type metadata accessor for UserDomainConceptOtherViewDataSourceProvider;
      break;
    default:
      goto LABEL_15;
  }
  uint64_t result = sub_1C253BA28(v13, (void (*)(uint64_t))v14);
  a1[4] = result;
  *a1 = v12;
  return result;
}

uint64_t sub_1C253B784()
{
  return swift_release();
}

uint64_t sub_1C253B794()
{
  return swift_release();
}

uint64_t sub_1C253B7A4()
{
  return type metadata accessor for UserDomainConceptListViewController();
}

uint64_t sub_1C253B7AC()
{
  return swift_retain();
}

void sub_1C253B7C0(void *a1@<X8>)
{
  *a1 = *(void *)(*v1 + qword_1EA2E5408);
}

BOOL sub_1C253B7D8()
{
  return (*(void *)(*v0 + qword_1EA2E53F8) & 0xFFFFFFFFFFFFFFFELL) == 2;
}

uint64_t sub_1C253B7F8(void *a1, void *a2)
{
  sub_1C254D2E0();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    id v5 = a2;
    uint64_t result = sub_1C254D2D0();
    if (result)
    {
      id v6 = (void *)result;
      uint64_t v7 = sub_1C254E170();
      uint64_t v9 = v8;

      if (v7
        && (sub_1C2270AE4(0, &qword_1EA2E5420), sub_1C2270AE4(0, &qword_1EA2DFD08), (swift_dynamicCast() & 1) != 0))
      {
        if (*((void *)&v11 + 1))
        {
          sub_1C21F44EC(&v10, (uint64_t)v13);
          __swift_project_boxed_opaque_existential_1Tm(v13, v13[3]);
          objc_msgSend(a1, sel_isEditing, v7, v9);
          sub_1C254D810();

          return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
        }
      }
      else
      {
        uint64_t v12 = 0;
        long long v10 = 0u;
        long long v11 = 0u;
      }

      return sub_1C253B948((uint64_t)&v10);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1C253B948(uint64_t a1)
{
  sub_1C253BA70(0, &qword_1EA2DFD10, &qword_1EA2DFD08, MEMORY[0x1E4F66438], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C253B9D0()
{
  if (!qword_1EA2E14B0)
  {
    sub_1C254CD90();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E14B0);
    }
  }
}

uint64_t sub_1C253BA28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C253BA70(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C2270AE4(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t MedicalRecordTimelineUnknownItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C253BB0C()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  char v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  strcpy((char *)v9, "UnknownItem.");
  BYTE5(v9[1]) = 0;
  HIWORD(v9[1]) = -5120;
  sub_1C254F5A0();
  uint64_t v6 = v9[0];
  uint64_t v5 = v9[1];
  id v7 = objc_msgSend(*(id *)(v0 + 32), sel_UUID);
  sub_1C254CB20();

  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v9[0] = v6;
  v9[1] = v5;
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9[0];
}

void sub_1C253BC78()
{
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 32);
  sub_1C254FF80();
}

uint64_t MedicalRecordTimelineUnknownItem.deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineUnknownItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C253BD98()
{
  sub_1C25509C0();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 32);
  sub_1C254FF80();

  return sub_1C2550A10();
}

uint64_t sub_1C253BE38()
{
  return sub_1C253BD98();
}

void sub_1C253BE5C()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  id v2 = *(id *)(v1 + 32);
  sub_1C254FF80();
}

uint64_t sub_1C253BF08()
{
  sub_1C25509C0();
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  id v2 = *(id *)(v1 + 32);
  sub_1C254FF80();

  return sub_1C2550A10();
}

uint64_t sub_1C253BFA8()
{
  return sub_1C253BB0C();
}

uint64_t sub_1C253BFCC(uint64_t *a1, uint64_t *a2)
{
  return _s15HealthRecordsUI32MedicalRecordTimelineUnknownItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

id sub_1C253BFD8(double a1, double a2, double a3, double a4)
{
  sub_1C230C7E4(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  long long v11 = (char *)&v27 - v10;
  uint64_t v12 = sub_1C254E690();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  char v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = &v4[OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_item];
  *(_OWORD *)uint64_t v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((void *)v16 + 4) = 0;
  id v17 = &v4[OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_sectionContext];
  uint64_t v18 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  id v19 = (objc_class *)type metadata accessor for MedicalRecordTimelineUnknownItemCell();
  v27.receiver = v4;
  v27.super_class = v19;
  id v20 = objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C254CDB0();
  id v21 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C254FE70();

  uint64_t v22 = self;
  id v23 = v20;
  id v24 = objc_msgSend(v22, sel_currentTraitCollection);
  sub_1C254E660();
  sub_1C254E6D0();
  sub_1C24FCA3C((uint64_t)v15);
  sub_1C254E6C0();
  uint64_t v25 = sub_1C254E710();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 0, 1, v25);
  MEMORY[0x1C8758250](v11);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

  return v23;
}

id sub_1C253C2C4(void *a1)
{
  sub_1C230C7E4(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v23 - v4;
  uint64_t v6 = sub_1C254E690();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &v1[OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_item];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  long long v11 = &v1[OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_sectionContext];
  uint64_t v12 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (objc_class *)type metadata accessor for MedicalRecordTimelineUnknownItemCell();
  v23.receiver = v1;
  v23.super_class = v13;
  id v14 = objc_msgSendSuper2(&v23, sel_initWithCoder_, a1);
  id v15 = v14;
  if (v14)
  {
    id v16 = v14;
    sub_1C254CDB0();
    id v17 = (id)*MEMORY[0x1E4F39EA8];
    sub_1C254FE70();

    uint64_t v18 = self;
    id v19 = v16;
    id v20 = objc_msgSend(v18, sel_currentTraitCollection);
    sub_1C254E660();
    sub_1C254E6D0();
    sub_1C24FCA3C((uint64_t)v9);
    sub_1C254E6C0();
    uint64_t v21 = sub_1C254E710();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v5, 0, 1, v21);
    MEMORY[0x1C8758250](v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v15;
}

uint64_t sub_1C253C5B0(uint64_t a1, void *a2)
{
  sub_1C2227014(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_item;
  swift_beginAccess();
  sub_1C2232E74((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C253C624();
  return sub_1C2227100((uint64_t)v5);
}

id sub_1C253C624()
{
  uint64_t v1 = sub_1C254E560();
  uint64_t v37 = *(void *)(v1 - 8);
  uint64_t v38 = (void *)v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C230C7E4(0, &qword_1EA2DE9F0, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  id v35 = (char *)&v32 - v5;
  uint64_t v6 = sub_1C254E600();
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254E5A0();
  uint64_t v34 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C254E890();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v16, (uint64_t)v40);
  if (v41)
  {
    uint64_t v33 = v6;
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    type metadata accessor for MedicalRecordTimelineUnknownItem();
    if (swift_dynamicCast())
    {
      uint64_t v17 = v39;
      uint64_t v38 = v0;
      MEMORY[0x1C87582A0]();
      uint64_t v37 = v17;
      swift_bridgeObjectRetain();
      sub_1C254E860();
      id result = objc_msgSend(self, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E4FB28C8], *MEMORY[0x1E4FB09B8]);
      if (result)
      {
        id v19 = (void (*)(uint64_t *, void))sub_1C254E7A0();
        sub_1C254E770();
        v19(v40, 0);
        id v20 = objc_msgSend(self, sel_labelColor);
        uint64_t v21 = (void (*)(uint64_t *, void))sub_1C254E7A0();
        sub_1C254E780();
        v21(v40, 0);
        uint64_t v41 = v12;
        uint64_t v42 = MEMORY[0x1E4FB0F88];
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v40);
        (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 16))(boxed_opaque_existential_1, v15, v12);
        MEMORY[0x1C8758230](v40);
        sub_1C230C7E4(0, &qword_1EA2DE9D8, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
        sub_1C254E620();
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
        uint64_t v23 = v34;
        (*(void (**)(char *, void, uint64_t))(v34 + 104))(v11, *MEMORY[0x1E4FB0E18], v9);
        uint64_t v24 = sub_1C254E5B0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v35, 1, 1, v24);
        sub_1C254E5F0();
        sub_1C254E5C0();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v33);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v9);
        sub_1C254FD80();
        swift_release();
        return (id)(*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      }
      else
      {
        __break(1u);
      }
      return result;
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v40);
  }
  sub_1C254E510();
  id v25 = v0;
  id v26 = sub_1C254E550();
  os_log_type_t v27 = sub_1C254FA20();
  if (os_log_type_enabled(v26, v27))
  {
    id v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v39 = v29;
    *(_DWORD *)id v28 = 136446210;
    sub_1C2227014(v16, (uint64_t)v40);
    sub_1C2253E44();
    uint64_t v30 = sub_1C254F510();
    v40[0] = sub_1C21AD354(v30, v31, &v39);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v26, v27, "Incorrect view model for MedicalRecordTimelineUnknownItem: %{public}s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v29, -1, -1);
    MEMORY[0x1C875A0B0](v28, -1, -1);
  }
  else
  {
  }
  return (id)(*(uint64_t (**)(char *, void *))(v37 + 8))(v3, v38);
}

uint64_t sub_1C253CD70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C253CDC4(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C253C624();
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C253CE34(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C253CE94;
}

uint64_t sub_1C253CE94(uint64_t a1, char a2)
{
  return sub_1C253D598(a1, a2, (uint64_t (*)(uint64_t))sub_1C253C624);
}

void sub_1C253CF98(uint64_t a1, void *a2)
{
}

uint64_t sub_1C253CFA0(uint64_t a1, void *a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66300];
  sub_1C230C7E4(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1C230C848(a1, (uint64_t)&v10 - v6);
  uint64_t v8 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_sectionContext;
  swift_beginAccess();
  sub_1C225F20C((uint64_t)v7, v8);
  swift_endAccess();
  sub_1C253D0AC();
  return sub_1C230C8DC((uint64_t)v7, &qword_1EA2DF2E0, v4);
}

uint64_t sub_1C253D0AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CD90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C230C7E4(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = sub_1C254D370();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_sectionContext;
  swift_beginAccess();
  sub_1C230C848(v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_1C230C8DC((uint64_t)v8, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_1C254D360();
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_1C25503A0();
  uint64_t v15 = sub_1C254F470();
  uint64_t v20 = v2;
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v22 = v15;
  unint64_t v23 = v17;
  sub_1C254F5A0();
  uint64_t v21 = sub_1C254CD80();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v21 = sub_1C254CD70();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v18);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1C253D440@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_sectionContext;
  swift_beginAccess();
  return sub_1C230C848(v3, a1);
}

uint64_t sub_1C253D494(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_sectionContext;
  swift_beginAccess();
  sub_1C225F20C(a1, v3);
  swift_endAccess();
  sub_1C253D0AC();
  return sub_1C230C8DC(a1, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
}

uint64_t (*sub_1C253D520(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C253D580;
}

uint64_t sub_1C253D580(uint64_t a1, char a2)
{
  return sub_1C253D598(a1, a2, (uint64_t (*)(uint64_t))sub_1C253D0AC);
}

uint64_t sub_1C253D598(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

id MedicalRecordTimelineUnknownItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineUnknownItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C253D670(uint64_t a1, void *a2)
{
}

uint64_t _s15HealthRecordsUI32MedicalRecordTimelineUnknownItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (!v2 && (sub_1C2550870() & 1) == 0) {
    return 0;
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
  return sub_1C254FF70() & 1;
}

void sub_1C253D718(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v3, (uint64_t)v8);
  if (v8[3])
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    type metadata accessor for MedicalRecordTimelineUnknownItem();
    uint64_t v4 = swift_dynamicCast();
    if (v4)
    {
      if (qword_1EBB6EF30 != -1) {
        uint64_t v4 = swift_once();
      }
      MEMORY[0x1F4188790](v4);
      sub_1C254CEE0();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
      sub_1C253DDCC((unint64_t *)&qword_1EBB6F240, 255, MEMORY[0x1E4F66F68]);
      swift_retain();
      sub_1C254E1D0();
      swift_release();
      uint64_t v5 = (void *)v8[0];
      if (qword_1EBB6D858 != -1) {
        swift_once();
      }
      id v6 = *(id *)(v7 + 32);
      sub_1C2452E50(v6, a1, v5);
      swift_release();
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v8);
  }
}

uint64_t type metadata accessor for MedicalRecordTimelineUnknownItemCell()
{
  uint64_t result = qword_1EA2E5458;
  if (!qword_1EA2E5458) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C253D998(uint64_t a1, uint64_t a2)
{
  return sub_1C253DDCC(&qword_1EA2E5450, a2, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineUnknownItem);
}

uint64_t type metadata accessor for MedicalRecordTimelineUnknownItem()
{
  return self;
}

uint64_t sub_1C253DA04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a2);
}

uint64_t sub_1C253DA60@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI36MedicalRecordTimelineUnknownItemCell_sectionContext;
  swift_beginAccess();
  return sub_1C230C848(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineUnknownItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineUnknownItem);
}

uint64_t dispatch thunk of MedicalRecordTimelineUnknownItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MedicalRecordTimelineUnknownItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MedicalRecordTimelineUnknownItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_1C253DB40()
{
  return type metadata accessor for MedicalRecordTimelineUnknownItemCell();
}

void sub_1C253DB48()
{
  sub_1C230C7E4(319, &qword_1EA2DF2E0, MEMORY[0x1E4F66300], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedicalRecordTimelineUnknownItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineUnknownItemCell);
}

uint64_t dispatch thunk of MedicalRecordTimelineUnknownItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelineUnknownItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineUnknownItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineUnknownItemCell.didSelectCell(_:in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordTimelineUnknownItemCell.deselectionBehavior.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordTimelineUnknownItemCell.sectionContext.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalRecordTimelineUnknownItemCell.sectionContext.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicalRecordTimelineUnknownItemCell.sectionContext.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t sub_1C253DDCC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C253DEE4()
{
  sub_1C254CEE0();
  sub_1C21A8A28();
  sub_1C21A89AC();
  swift_retain();
  sub_1C254E1D0();
  swift_release();
  return v1;
}

void sub_1C253DF90(void *a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_primaryProfile);
  sub_1C21AAB84(v2, v6);
  uint64_t v3 = v6[0];
  uint64_t v4 = (void *)v6[1];
  uint64_t v5 = (void *)v6[4];
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  *a1 = v3;
}

id sub_1C253E088()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___HRProfileManager_currentProfile);
  swift_beginAccess();
  id v2 = *v1;
  return v2;
}

void sub_1C253E140(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR___HRProfileManager_currentProfile);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
}

void sub_1C253E194(void **a1, void *a2)
{
  id v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR___HRProfileManager_currentProfile);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = v2;
  id v5 = v2;
}

uint64_t (*sub_1C253E1F8())()
{
  return j__swift_endAccess;
}

id sub_1C253E254()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ProfileManager()), sel_init);
  qword_1EBB6FB90 = (uint64_t)result;
  return result;
}

id ProfileManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id ProfileManager.init()()
{
  uint64_t v1 = MEMORY[0x1E4FBC868];
  *(void *)&v0[OBJC_IVAR___HRProfileManager_profileCache] = MEMORY[0x1E4FBC868];
  id v2 = &v0[OBJC_IVAR___HRProfileManager_profileObjectsCache];
  *(void *)&v0[OBJC_IVAR___HRProfileManager_profileObjectsCache] = v1;
  uint64_t v3 = OBJC_IVAR___HRProfileManager_lock;
  sub_1C254CEE0();
  swift_allocObject();
  uint64_t v4 = v0;
  *(void *)&v0[v3] = sub_1C254CED0();
  id v5 = objc_msgSend(self, sel_primaryProfile);
  id v6 = objc_msgSend(self, sel_userProfileWithProfileIdentifier_, v5);
  uint64_t v7 = (void **)&v4[OBJC_IVAR___HRProfileManager_currentProfile];
  *(void *)&v4[OBJC_IVAR___HRProfileManager_currentProfile] = v6;
  swift_beginAccess();
  id v8 = v5;
  sub_1C253EEA0((uint64_t)v6, v8);
  swift_endAccess();

  swift_beginAccess();
  uint64_t v9 = *v7;
  id v10 = v8;
  sub_1C253EF54(v9, v16);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *(void *)v2;
  *(void *)id v2 = 0x8000000000000000;
  sub_1C2366B54(v16, v10, isUniquelyReferenced_nonNull_native);
  *(void *)id v2 = v15;

  swift_bridgeObjectRelease();
  swift_endAccess();

  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for ProfileManager();
  id v12 = objc_msgSendSuper2(&v14, sel_init);

  return v12;
}

uint64_t sub_1C253E518()
{
  return swift_release();
}

void sub_1C253E5A4(uint64_t a1, void *a2)
{
  sub_1C21AAB84(a2, v8);
  uint64_t v3 = (void *)v8[0];
  uint64_t v4 = (void *)v8[1];
  id v5 = (void *)v8[4];
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  id v6 = (void **)(a1 + OBJC_IVAR___HRProfileManager_currentProfile);
  swift_beginAccess();
  uint64_t v7 = *v6;
  *id v6 = v3;
}

uint64_t sub_1C253E708()
{
  sub_1C254CEE0();
  sub_1C21A8A28();
  sub_1C21A89AC();
  swift_retain();
  sub_1C254E1D0();
  swift_release();
  return v1;
}

void sub_1C253E7B4(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_profileIdentifier);
  sub_1C21AAB84(v3, v7);
  uint64_t v4 = v7[0];
  id v5 = (void *)v7[1];
  id v6 = (void *)v7[4];
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  *a2 = v4;
}

void sub_1C253EA24(void *a1@<X1>, void *a2@<X8>)
{
  sub_1C21AAB84(a1, v7);
  id v3 = (void *)v7[0];
  uint64_t v4 = (void *)v7[1];
  uint64_t v5 = v7[2];
  id v6 = (void *)v7[4];
  swift_release();
  swift_release();

  swift_release();
  *a2 = v5;
}

void sub_1C253EAA8(void *a1@<X1>, void *a2@<X8>)
{
  sub_1C21AAB84(a1, v6);
  id v3 = v6[1];
  id v4 = v6[4];
  id v5 = v6[6];

  swift_release();
  swift_release();
  swift_release();

  *a2 = v5;
}

uint64_t sub_1C253EB30()
{
  return swift_release();
}

void sub_1C253EBBC(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_profileIdentifier);
  id v3 = objc_msgSend(objc_allocWithZone((Class)HRProfile), sel_initWithHealthStore_profileIdentifier_, v1, v2);

  sub_1C253EC54(v3);
}

void sub_1C253EC54(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(a1, sel_healthStore);
  id v5 = objc_msgSend(v4, sel_profileIdentifier);

  swift_beginAccess();
  id v6 = v5;
  id v7 = a1;
  sub_1C253EEA0((uint64_t)v7, v6);
  swift_endAccess();

  sub_1C253EF54(v7, &v16);
  id v8 = (void *)v16;
  uint64_t v9 = v17;
  id v10 = (uint64_t *)(v2 + OBJC_IVAR___HRProfileManager_profileObjectsCache);
  swift_beginAccess();
  id v11 = v6;
  id v12 = v8;
  swift_retain();
  swift_retain();
  id v13 = v9;
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *v10;
  uint64_t *v10 = 0x8000000000000000;
  sub_1C2366B54(&v16, v11, isUniquelyReferenced_nonNull_native);
  uint64_t *v10 = v15;

  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
}

id ProfileManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProfileManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C253EEA0(uint64_t a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_1C25502A0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *id v3 = sub_1C24ABD94(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v3;
  *id v3 = 0x8000000000000000;
  sub_1C2366CD8(a1, a2, isUniquelyReferenced_nonNull_native);
  *id v3 = v10;
  return swift_bridgeObjectRelease();
}

void sub_1C253EF54(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = a1;
  uint64_t v4 = sub_1C2497FA0(objc_msgSend(v3, sel_healthStore));
  sub_1C254E4E0();
  id v5 = objc_msgSend(v3, sel_healthStore);
  uint64_t v6 = (void *)sub_1C254E4D0();
  sub_1C254E460();
  id v7 = objc_msgSend(v3, sel_healthStore);
  uint64_t v8 = sub_1C254E3E0();

  id v9 = v6;
  id v10 = objc_msgSend(v3, sel_healthStore);
  type metadata accessor for UserDomainConceptDataProvider();
  id v11 = (void *)swift_allocObject();
  uint64_t v12 = MEMORY[0x1E4FBC868];
  v11[2] = MEMORY[0x1E4FBC868];
  v11[3] = v12;
  v11[4] = v10;
  id v13 = objc_msgSend(v3, sel_healthStore);
  type metadata accessor for AccountStateProvider();
  swift_allocObject();
  uint64_t v14 = sub_1C251165C((uint64_t)v13);

  *a2 = v3;
  a2[1] = v4;
  a2[2] = v8;
  a2[3] = v9;
  a2[4] = v11;
  a2[5] = v14;
}

void sub_1C253F0A8()
{
  sub_1C253E5A4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1C253F0B0()
{
  sub_1C253EBBC(*(void **)(v0 + 16));
}

id sub_1C253F0B8@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  id v3 = (void **)(*a1 + OBJC_IVAR___HRProfileManager_currentProfile);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for ProfileManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProfileManager);
}

uint64_t dispatch thunk of ProfileManager.primaryProfile.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ProfileManager.currentProfile.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ProfileManager.currentProfile.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ProfileManager.currentProfile.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ProfileManager.switchCurrentProfile(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ProfileManager.test_switchCurrentProfile(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t destroy for ProfileManager.CachableProfileManagerObjects(id *a1)
{
  swift_release();
  swift_release();

  swift_release();
  return swift_release();
}

void *initializeWithCopy for ProfileManager.CachableProfileManagerObjects(void *a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = *(void **)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  id v7 = v3;
  swift_retain();
  swift_retain();
  id v8 = v5;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ProfileManager.CachableProfileManagerObjects(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  id v7 = *(void **)(a2 + 24);
  id v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ProfileManager.CachableProfileManagerObjects(uint64_t a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();
  swift_release();
  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  swift_release();
  *(_OWORD *)(a1 + 32) = a2[2];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ProfileManager.CachableProfileManagerObjects()
{
  return &type metadata for ProfileManager.CachableProfileManagerObjects;
}

id sub_1C253F4BC(void *a1)
{
  return sub_1C253F4DC(a1, &OBJC_IVAR____TtC15HealthRecordsUI22AllergyRecordFormatter_store, sub_1C23F6364);
}

id sub_1C253F4DC(void *a1, void *a2, uint64_t (*a3)(id))
{
  id v5 = *(void **)(v3 + *a2);
  id v6 = a1;
  id v7 = v5;
  uint64_t v8 = a3(v6);
  unint64_t v10 = v9;

  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    id v12 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v12, sel_setDisplayItemType_, 15);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v13 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v14 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setTitle_, v14, 0xE000000000000000);

    uint64_t v15 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setSubtitle_, v15);

    objc_msgSend(v12, sel_setSeparatorStyle_, 0);
    objc_msgSend(v12, sel_setSeparatorHidden_, 0);
    objc_msgSend(v12, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

id sub_1C253F6E8(void *a1)
{
  return sub_1C253F7E8(a1, &OBJC_IVAR____TtC15HealthRecordsUI27ClinicalNoteRecordFormatter_store, (uint64_t (*)(id))sub_1C23F6370);
}

id sub_1C253F708(void *a1)
{
  return sub_1C253F7E8(a1, &OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestReportFormatter_store, (uint64_t (*)(id))sub_1C23F6370);
}

id sub_1C253F728(void *a1)
{
  return sub_1C253F7E8(a1, &OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store, (uint64_t (*)(id))sub_1C23F6370);
}

id sub_1C253F748(void *a1)
{
  return sub_1C253F7E8(a1, &OBJC_IVAR____TtC15HealthRecordsUI25MedicationRecordFormatter_store, (uint64_t (*)(id))sub_1C23F6370);
}

id sub_1C253F768(void *a1)
{
  return sub_1C253F7E8(a1, &OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store, (uint64_t (*)(id))sub_1C23F6370);
}

id sub_1C253F788(void *a1)
{
  return sub_1C253F7E8(a1, &OBJC_IVAR___HRMedicationDispenseFormatter_store, sub_1C23F6594);
}

id sub_1C253F7A8(void *a1)
{
  return sub_1C253F7E8(a1, &OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store, sub_1C23F6594);
}

id sub_1C253F7C8(void *a1)
{
  return sub_1C253F7E8(a1, &OBJC_IVAR____TtC15HealthRecordsUI23CoverageRecordFormatter_store, (uint64_t (*)(id))sub_1C23F6370);
}

id sub_1C253F7E8(void *a1, void *a2, uint64_t (*a3)(id))
{
  id v5 = *(void **)(v3 + *a2);
  id v6 = a1;
  id v7 = v5;
  uint64_t v8 = a3(v6);
  unint64_t v10 = v9;

  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    id v12 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v12, sel_setDisplayItemType_, 15);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v13 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v14 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setTitle_, v14, 0xE000000000000000);

    uint64_t v15 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setSubtitle_, v15);

    objc_msgSend(v12, sel_setSeparatorStyle_, 0);
    objc_msgSend(v12, sel_setSeparatorHidden_, 0);
    objc_msgSend(v12, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

id ProcedureRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  id v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id ProcedureRecordFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_store);
}

uint64_t ProcedureRecordFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_context);
}

id ProcedureRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for ProcedureRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for ProcedureRecordFormatter()
{
  return self;
}

unint64_t sub_1C253FAEC(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_context);
  if (v2 == 1)
  {
    return sub_1C253FEFC(a1);
  }
  else if (v2)
  {
    unint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C253FB70(a1);
  }
  return result;
}

uint64_t sub_1C253FB70(void *a1)
{
  sub_1C224F4C8(0, (unint64_t *)&qword_1EA2DF0E8, (uint64_t (*)(uint64_t))sub_1C224F494, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2571510;
  unint64_t v4 = sub_1C224F52C();
  id v5 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_store);
  id v6 = a1;
  uint64_t v7 = sub_1C23F657C(v6);

  uint64_t v8 = Array<A>.newlineJoined.getter(v7);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *(void *)(inited + 32) = sub_1C2387944(v8, v10, v4);
  *(void *)(inited + 40) = sub_1C2540A8C(v6);
  *(void *)(inited + 48) = sub_1C2540BAC(v6);
  id v11 = v6;
  id v12 = v5;
  uint64_t v13 = sub_1C23F6558(v11);

  uint64_t v14 = Array<A>.newlineJoined.getter(v13);
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_1C23873A0(v14, v16);
  *(void *)(inited + 64) = sub_1C2540DDC(v11);
  id v17 = v11;
  uint64_t v18 = sub_1C23F65AC(v17);

  uint64_t v19 = Array<A>.newlineJoined.getter(v18);
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  *(void *)(inited + 72) = sub_1C2387948(v19, v21);
  id v22 = v17;
  uint64_t v23 = sub_1C23F65B8(v22);

  uint64_t v24 = Array<A>.newlineJoined.getter(v23);
  unint64_t v26 = v25;
  swift_bridgeObjectRelease();
  *(void *)(inited + 80) = sub_1C2387B28(v24, v26);
  *(void *)(inited + 88) = sub_1C253F7E8(v22, &OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_store, (uint64_t (*)(id))sub_1C23F6370);
  id v27 = objc_msgSend(v22, sel_performers);
  if (v27)
  {
    uint64_t v28 = sub_1C254F710();

    id v27 = (id)Array<A>.newlineJoined.getter(v28);
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v30 = 0;
  }
  *(void *)(inited + 96) = sub_1C2387D08((uint64_t)v27, v30);
  *(void *)(inited + 104) = sub_1C253F4DC(v22, &OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_store, sub_1C23F6364);
  id v31 = v22;
  uint64_t v32 = sub_1C23F65C4(v31);

  uint64_t v33 = Array<A>.newlineJoined.getter(v32);
  unint64_t v35 = v34;
  swift_bridgeObjectRelease();
  *(void *)(inited + 112) = sub_1C2387EE8(v33, v35);
  *(void *)(inited + 120) = sub_1C243F974(v31);
  sub_1C254F730();
  uint64_t v40 = MEMORY[0x1E4FBC860];
  for (uint64_t i = 32; i != 128; i += 8)
  {
    uint64_t v37 = *(void **)(inited + i);
    if (v37)
    {
      id v38 = v37;
      MEMORY[0x1C8757C00]();
      if (*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }
  }
  swift_bridgeObjectRelease();
  return v40;
}

unint64_t sub_1C253FEFC(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = MEMORY[0x1E4FBC860];
  unint64_t v63 = MEMORY[0x1E4FBC860];
  id v5 = sub_1C2540A8C(a1);
  if (v5)
  {
    id v6 = v5;
    sub_1C224F52C();
    id v7 = v6;
    id v8 = a1;
    uint64_t v9 = sub_1C23F65B8(v8);

    uint64_t v10 = Array<A>.newlineJoined.getter(v9);
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    id v13 = sub_1C2387B28(v10, v12);
    unint64_t v62 = v4;
    id v14 = v7;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
    if (v13)
    {
      id v15 = v13;
      MEMORY[0x1C8757C00]();
      if (*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }

    sub_1C22723E8(v62);
    unint64_t v4 = v63;
  }
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v54 > 1) {
      goto LABEL_15;
    }
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_15;
  }
  id v16 = sub_1C253F7E8(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_store, (uint64_t (*)(id))sub_1C23F6370);
  if (v16)
  {
    id v17 = v16;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    unint64_t v4 = v63;
  }
LABEL_15:
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v55 > 1) {
      goto LABEL_21;
    }
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_21;
  }
  sub_1C224F52C();
  uint64_t v18 = *(void **)(v2 + OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_store);
  id v19 = a1;
  id v20 = v18;
  uint64_t v21 = sub_1C23F6558(v19);

  uint64_t v22 = Array<A>.newlineJoined.getter(v21);
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  id v25 = sub_1C23873A0(v22, v24);
  if (v25)
  {
    id v26 = v25;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    unint64_t v4 = v63;
  }
LABEL_21:
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v56 > 1) {
      goto LABEL_27;
    }
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_27;
  }
  id v27 = sub_1C2540DDC(a1);
  if (v27)
  {
    id v28 = v27;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    unint64_t v4 = v63;
  }
LABEL_27:
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v57 > 1) {
      goto LABEL_33;
    }
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_33;
  }
  sub_1C224F52C();
  id v29 = a1;
  uint64_t v30 = sub_1C23F65AC(v29);

  uint64_t v31 = Array<A>.newlineJoined.getter(v30);
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  id v34 = sub_1C2387948(v31, v33);
  if (v34)
  {
    id v35 = v34;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    unint64_t v4 = v63;
  }
LABEL_33:
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v58 > 1) {
      goto LABEL_42;
    }
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_42;
  }
  id v36 = objc_msgSend(a1, sel_performers, v62);
  if (v36)
  {
    uint64_t v37 = sub_1C254F710();

    id v36 = (id)Array<A>.newlineJoined.getter(v37);
    unint64_t v39 = v38;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v39 = 0;
  }
  sub_1C224F52C();
  id v40 = sub_1C2387D08((uint64_t)v36, v39);
  if (v40)
  {
    id v41 = v40;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    unint64_t v4 = v63;
  }
LABEL_42:
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v59 > 1) {
      goto LABEL_48;
    }
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_48;
  }
  id v42 = sub_1C253F4DC(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_store, sub_1C23F6364);
  if (v42)
  {
    id v43 = v42;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    unint64_t v4 = v63;
  }
LABEL_48:
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v60 > 1) {
      goto LABEL_54;
    }
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_54;
  }
  sub_1C224F52C();
  id v44 = a1;
  uint64_t v45 = sub_1C23F65C4(v44);

  uint64_t v46 = Array<A>.newlineJoined.getter(v45);
  unint64_t v48 = v47;
  swift_bridgeObjectRelease();
  id v49 = sub_1C2387EE8(v46, v48);
  if (v49)
  {
    id v50 = v49;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    unint64_t v4 = v63;
  }
LABEL_54:
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v61 > 1) {
      return v4;
    }
  }
  else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    return v4;
  }
  uint64_t v51 = (void *)sub_1C243F974(a1);
  if (v51)
  {
    id v52 = v51;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    return v63;
  }
  return v4;
}

id ProcedureRecordFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ProcedureRecordFormatter.init()()
{
}

id ProcedureRecordFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProcedureRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C25408A4()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_store);
}

uint64_t sub_1C25408B8()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_context);
}

id sub_1C25408CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = (objc_class *)type metadata accessor for ProcedureRecordFormatter();
  id v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

unint64_t sub_1C2540940(void *a1)
{
  uint64_t v2 = *(void *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI24ProcedureRecordFormatter_context);
  if (v2 == 1) {
    return sub_1C253FEFC(a1);
  }
  if (!v2) {
    return sub_1C253FB70(a1);
  }
  unint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

unint64_t sub_1C25409B0(uint64_t a1)
{
  unint64_t result = sub_1C25409D8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C25409D8()
{
  unint64_t result = qword_1EA2E5498;
  if (!qword_1EA2E5498)
  {
    type metadata accessor for ProcedureRecordFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E5498);
  }
  return result;
}

uint64_t method lookup function for ProcedureRecordFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProcedureRecordFormatter);
}

uint64_t dispatch thunk of ProcedureRecordFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ProcedureRecordFormatter.displayItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

id sub_1C2540A8C(void *a1)
{
  if (!objc_msgSend(a1, sel_notPerformed)) {
    return 0;
  }
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();

  sub_1C224F52C();
  swift_bridgeObjectRetain();
  id v5 = sub_1C2389A40(v2, v4);
  swift_bridgeObjectRelease();
  return v5;
}

id sub_1C2540BAC(void *a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C224F52C();
  id v6 = objc_msgSend(a1, sel_executionStartDate);
  id v7 = objc_msgSend(a1, sel_executionEndDate);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  void v18[2] = v3;
  v18[3] = v5;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  void v17[2] = v3;
  v17[3] = v5;
  MEMORY[0x1F4188790](v9);
  void v16[2] = v3;
  _OWORD v16[3] = v5;
  id v10 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v11 = sub_1C254F470();
  uint64_t v13 = v12;

  id v14 = sub_1C2388D90(v6, v7, sub_1C2287CA0, (uint64_t)v18, sub_1C22659DC, (uint64_t)v17, (void (*)(id))sub_1C2287CA0, (uint64_t)v16, v11, v13);
  swift_bridgeObjectRelease();
  return v14;
}

id sub_1C2540DDC(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1C23F65A0(v1);
  unint64_t v4 = v3;

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    id v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    uint64_t v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

uint64_t type metadata accessor for WalletIntegrationDataSource()
{
  uint64_t result = qword_1EA2E54C0;
  if (!qword_1EA2E54C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2541014()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C2541078(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_1C254F2D0();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1C2541124()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254F230();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v6 = *(void **)(v0 + qword_1EA2E54B0);
  if (!v6) {
    return;
  }
  id v32 = v6;
  id v7 = objc_msgSend(v32, sel_mainRecord);

  if (v7)
  {
    uint64_t v31 = v3;
    uint64_t v8 = *(void *)(v1 + qword_1EA2E54A0);
    uint64_t v9 = *(void **)(v8 + OBJC_IVAR___HRMedicalRecordFormatter_store);
    uint64_t v10 = *(void *)(v8 + OBJC_IVAR___HRMedicalRecordFormatter_context);
    uint64_t v11 = (objc_class *)type metadata accessor for SignedClinicalDataRecordFormatter();
    uint64_t v12 = (char *)objc_allocWithZone(v11);
    *(void *)&v12[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_store] = v9;
    *(void *)&v12[OBJC_IVAR____TtC15HealthRecordsUI33SignedClinicalDataRecordFormatter_context] = v10;
    v34.receiver = v12;
    v34.super_class = v11;
    id v13 = v9;
    id v14 = objc_msgSendSuper2(&v34, sel_init);
    unint64_t v15 = sub_1C23F7C5C(v32);

    id v16 = v32;
    unint64_t v17 = sub_1C2543F10(v15, v16);
    swift_bridgeObjectRelease();

    uint64_t v33 = MEMORY[0x1E4FBC860];
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1C2550620();
      if (v18) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v18)
      {
LABEL_5:
        if (v18 < 1) {
          goto LABEL_32;
        }
        id v32 = v16;
        uint64_t v19 = 0;
        while (1)
        {
          if ((v17 & 0xC000000000000001) != 0)
          {
            if (*(unsigned char *)(MEMORY[0x1C87588E0](v19, v17) + 16)) {
              goto LABEL_13;
            }
          }
          else
          {
            uint64_t v20 = *(void *)(v17 + 8 * v19 + 32);
            swift_retain();
            if (*(unsigned char *)(v20 + 16))
            {
LABEL_13:
              swift_release();
              goto LABEL_8;
            }
          }
          sub_1C2550460();
          sub_1C25504A0();
          sub_1C25504B0();
          sub_1C2550470();
LABEL_8:
          if (v18 == ++v19)
          {
            swift_bridgeObjectRelease();
            id v16 = v32;
            uint64_t v21 = v33;
            if (v33 < 0)
            {
LABEL_30:
              swift_bridgeObjectRetain();
              uint64_t v23 = sub_1C2550620();
              swift_release();
              goto LABEL_23;
            }
LABEL_21:
            if ((v21 & 0x4000000000000000) != 0) {
              goto LABEL_30;
            }
            uint64_t v23 = *(void *)(v21 + 16);
LABEL_23:
            swift_release();
            *(unsigned char *)(v1 + qword_1EA2E54A8) = v23 != 0;
            sub_1C254D9D0();
            sub_1C22023A4();
            uint64_t *v5 = sub_1C254FC70();
            uint64_t v24 = v31;
            (*(void (**)(uint64_t *, void, uint64_t))(v31 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
            char v25 = sub_1C254F260();
            (*(void (**)(uint64_t *, uint64_t))(v24 + 8))(v5, v2);
            if (v25)
            {
              sub_1C228B77C(v17);
              swift_bridgeObjectRelease();
              sub_1C254DA30();
              swift_bridgeObjectRelease();
              type metadata accessor for WalletIntegrationDataSource();
              char v26 = sub_1C254D6E0();
              uint64_t v27 = qword_1EA2E54B8;
              int v28 = *(unsigned __int8 *)(v1 + qword_1EA2E54B8);
              *(unsigned char *)(v1 + qword_1EA2E54B8) = (v26 & 1) == 0;
              if (((v26 & 1) == 0) == v28)
              {
              }
              else
              {
                id v29 = objc_msgSend(self, sel_defaultCenter);
                uint64_t v30 = *MEMORY[0x1E4FB2730];
                objc_msgSend(v29, sel_removeObserver_name_object_, v1, *MEMORY[0x1E4FB2730], 0);
                if (*(unsigned char *)(v1 + v27) == 1) {
                  objc_msgSend(v29, sel_addObserver_selector_name_object_, v1, sel_didEnterForeground_, v30, 0);
                }
              }
              return;
            }
            __break(1u);
LABEL_32:
            __break(1u);
            return;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x1E4FBC860];
    if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
      goto LABEL_30;
    }
    goto LABEL_21;
  }
  uint64_t v22 = v32;
}

uint64_t sub_1C25415B8()
{
  uint64_t v0 = sub_1C254C580();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254C540();
  swift_retain();
  sub_1C2541124();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1C25416A0()
{
}

void sub_1C25416D0()
{
  uint64_t v1 = *(void **)(v0 + qword_1EA2E54B0);
}

uint64_t sub_1C2541710()
{
  uint64_t v0 = sub_1C254DA50();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2541770()
{
  return type metadata accessor for WalletIntegrationDataSource();
}

uint64_t sub_1C2541778()
{
  return sub_1C2544324();
}

uint64_t sub_1C25417A0()
{
  return sub_1C254E160();
}

uint64_t sub_1C25417FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C254F470() == a1 && v10 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      a3[3] = sub_1C254D3D0();
      a3[4] = sub_1C25444EC(&qword_1EA2DE998, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1C254D3C0();
    }
  }
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v14 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  v15[0] = 0x74497265746F6F46;
  v15[1] = 0xEB000000005F6D65;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  a3[3] = sub_1C254DEA0();
  a3[4] = sub_1C25444EC(&qword_1EA2DE9A0, MEMORY[0x1E4F665E8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1C254DE90();
}

uint64_t sub_1C2541ACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C25417FC(a1, a2, a3);
}

uint64_t sub_1C2541AE4(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 64) = a1;
  *(void *)(v7 + 72) = a2;
  *(void *)(v7 + 80) = a3;
  sub_1C2201F2C();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C255CDA0;
  *(void *)(v13 + 32) = sub_1C254F470();
  *(void *)(v13 + 40) = v14;
  strcpy((char *)(v13 + 48), "WalletButton");
  *(unsigned char *)(v13 + 61) = 0;
  *(_WORD *)(v13 + 62) = -5120;
  id v15 = a3;
  id v16 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v17 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v17)
  {
    uint64_t v18 = sub_1C254F470();
    uint64_t v20 = v19;
  }
  else
  {

    uint64_t v18 = 0;
    uint64_t v20 = 0;
  }
  *(unsigned char *)(v7 + 16) = a4 & 1;
  *(void *)(v7 + 24) = a5;
  *(void *)(v7 + 32) = a6;
  *(void *)(v7 + 40) = a7;
  *(void *)(v7 + 48) = v18;
  *(void *)(v7 + 56) = v20;
  return v7;
}

void sub_1C2541C14(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v42 = *v2;
  uint64_t v6 = sub_1C254E560();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v41 - v10;
  sub_1C2544998(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = sub_1C254C900();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v19 = v3[9];
  if (v19)
  {
    uint64_t v20 = v3[8];
    swift_bridgeObjectRetain();
    sub_1C254C8F0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      sub_1C23FAA9C((uint64_t)v14);
      sub_1C254E510();
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1C254E550();
      os_log_type_t v22 = sub_1C254FA20();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        uint64_t v46 = v41;
        *(_DWORD *)uint64_t v23 = 136446466;
        uint64_t v45 = v42;
        swift_getMetatypeMetadata();
        uint64_t v24 = sub_1C254F4F0();
        uint64_t v45 = sub_1C21AD354(v24, v25, &v46);
        sub_1C2550120();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2082;
        swift_bridgeObjectRetain();
        uint64_t v45 = sub_1C21AD354(v20, v19, &v46);
        sub_1C2550120();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C21A1000, v21, v22, "%{public}s: Cannot create wallet URL from context string %{public}s, unable to open Wallet", (uint8_t *)v23, 0x16u);
        uint64_t v26 = v41;
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v26, -1, -1);
        MEMORY[0x1C875A0B0](v23, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v44);
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
      sub_1C2543480((uint64_t)v18);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
  }
  else
  {
    uint64_t v41 = a1;
    if (*((unsigned char *)v3 + 16) == 1)
    {
      sub_1C254E510();
      swift_retain_n();
      uint64_t v27 = sub_1C254E550();
      os_log_type_t v28 = sub_1C254FA40();
      if (os_log_type_enabled(v27, v28))
      {
        id v29 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        uint64_t v46 = v30;
        *(_DWORD *)id v29 = 136446210;
        uint64_t v45 = v42;
        swift_getMetatypeMetadata();
        uint64_t v31 = sub_1C254F4F0();
        uint64_t v45 = sub_1C21AD354(v31, v32, &v46);
        sub_1C2550120();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C21A1000, v27, v28, "%{public}s: Adding pass to Wallet", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v30, -1, -1);
        MEMORY[0x1C875A0B0](v29, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v44);
      uint64_t v33 = a2;
      objc_super v34 = (void *)v41;
      type metadata accessor for ButtonCell();
      id v35 = (void *)swift_dynamicCastClass();
      if (v35)
      {
        id v36 = v34;
        sub_1C252DA3C(1);
      }
      uint64_t v37 = swift_allocObject();
      swift_weakInit();
      unint64_t v38 = (void *)swift_allocObject();
      v38[2] = v37;
      void v38[3] = v35;
      v38[4] = a2;
      id v39 = v35;
      id v40 = v33;
      swift_retain();
      sub_1C2542CE0((uint64_t)sub_1C254498C, (uint64_t)v38, 0.5);

      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_1C2542280(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint8_t *a5)
{
  uint64_t v68 = a1;
  unint64_t v69 = a5;
  uint64_t v65 = a2;
  uint64_t v6 = sub_1C254E560();
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v63 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v64 = (char *)&v62 - v9;
  sub_1C2544998(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v62 - v11;
  uint64_t v13 = sub_1C254C900();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C254F230();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (uint64_t *)((char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C22023A4();
  *uint64_t v20 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FBCBF0], v17);
  char v21 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) == 0)
  {
    __break(1u);
LABEL_28:
    swift_once();
LABEL_20:
    id v56 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    id v57 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v58 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    uint64_t v59 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    if (v16) {
      uint64_t v60 = (void *)sub_1C254C810();
    }
    else {
      uint64_t v60 = 0;
    }
    id v61 = objc_msgSend(self, sel_basicAlertControllerWithTitle_message_internalError_, v58, v59, v60);

    objc_msgSend(v20, sel_presentViewController_animated_completion_, v61, 1, 0);
    return swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v23 = (uint64_t *)result;
  uint64_t v20 = (uint64_t *)v69;
  if (a4)
  {
    sub_1C254FD80();
    id v24 = sub_1C252D074();
    uint64_t v25 = OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_nonBusyTitleLabelColor;
    uint64_t v26 = *(void **)(a4 + OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_nonBusyTitleLabelColor);
    if (v26)
    {
      id v27 = *(id *)(a4 + OBJC_IVAR____TtC15HealthRecordsUI10ButtonCell_nonBusyTitleLabelColor);
    }
    else
    {
      id v28 = sub_1C252D074();
      id v27 = objc_msgSend(v28, sel_textColor);

      uint64_t v20 = (uint64_t *)v69;
      uint64_t v26 = 0;
    }
    id v29 = v26;
    objc_msgSend(v24, sel_setTextColor_, v27);

    uint64_t v30 = *(void **)(a4 + v25);
    *(void *)(a4 + v25) = 0;
  }
  type metadata accessor for MedicalRecordDetailViewController(0);
  if (swift_dynamicCastClass())
  {
    uint64_t v31 = v20;
    swift_retain();
    if (sub_1C2523620())
    {
      sub_1C2541124();

      swift_release();
    }
    else
    {
    }
    swift_release();
  }
  sub_1C2544878(v68, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1C23FAA9C((uint64_t)v12);
    unint64_t v32 = v64;
    sub_1C254E510();
    swift_retain();
    uint64_t v16 = v65;
    uint64_t v33 = v65;
    swift_retain();
    objc_super v34 = v16;
    id v35 = sub_1C254E550();
    os_log_type_t v36 = sub_1C254FA20();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v71 = v38;
      *(_DWORD *)uint64_t v37 = 136446466;
      uint64_t v70 = *v23;
      swift_getMetatypeMetadata();
      uint64_t v39 = sub_1C254F4F0();
      uint64_t v70 = sub_1C21AD354(v39, v40, &v71);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      uint64_t v70 = (uint64_t)v16;
      uint64_t v41 = v16;
      uint64_t v42 = v16;
      sub_1C2544998(0, (unint64_t *)&unk_1EBB6F530, (uint64_t (*)(uint64_t))sub_1C2206F9C, MEMORY[0x1E4FBB718]);
      sub_1C25508F0();
      id v43 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v44 = sub_1C254F4F0();
      unint64_t v46 = v45;

      uint64_t v47 = v44;
      uint64_t v16 = v65;
      uint64_t v70 = sub_1C21AD354(v47, v46, &v71);
      sub_1C2550120();
      uint64_t v20 = (uint64_t *)v69;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v35, v36, "%{public}s: Failed to add pass to Wallet with error: %s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v38, -1, -1);
      MEMORY[0x1C875A0B0](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v66 + 8))(v64, v67);
    }
    else
    {
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v66 + 8))(v32, v67);
    }
    if (qword_1EA2DD680 == -1) {
      goto LABEL_20;
    }
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  unint64_t v48 = v63;
  sub_1C254E510();
  swift_retain_n();
  id v49 = sub_1C254E550();
  os_log_type_t v50 = sub_1C254FA40();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v71 = v52;
    *(_DWORD *)uint64_t v51 = 136446210;
    uint64_t v53 = *v23;
    unint64_t v69 = v51 + 4;
    uint64_t v70 = v53;
    swift_getMetatypeMetadata();
    uint64_t v54 = sub_1C254F4F0();
    uint64_t v70 = sub_1C21AD354(v54, v55, &v71);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v49, v50, "%{public}s: Added pass to Wallet", v51, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v52, -1, -1);
    MEMORY[0x1C875A0B0](v51, -1, -1);

    (*(void (**)(char *, uint64_t))(v66 + 8))(v63, v67);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v48, v67);
  }
  sub_1C2543480((uint64_t)v16);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1C2542CE0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v5 = sub_1C254F220();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - v10;
  type metadata accessor for SignedClinicalDataWalletHandler();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = *(void **)(v3 + 80);
  sub_1C254F210();
  MEMORY[0x1C8757760](v8, a3);
  os_log_type_t v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22(v8, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v15 = (v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v12;
  *(void *)(v16 + 24) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v16 + v14, v8, v5);
  uint64_t v17 = (void *)(v16 + v15);
  uint64_t v18 = v24;
  *uint64_t v17 = v23;
  v17[1] = v18;
  swift_retain();
  id v19 = v13;
  swift_retain();
  sub_1C22E4440(v19, (void (*)(uint64_t))sub_1C2544780, v16);
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v22)(v11, v5);
}

uint64_t sub_1C2542F00(unint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a5;
  uint64_t v34 = a6;
  uint64_t v37 = a4;
  id v32 = a3;
  uint64_t v7 = sub_1C254F1C0();
  uint64_t v38 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254F200();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2544998(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = swift_allocBox();
  uint64_t v18 = v17;
  uint64_t v19 = sub_1C254C900();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  if (a1 > 4)
  {
    id v24 = (id)a1;
  }
  else
  {
    uint64_t v21 = 1 << a1;
    a1 = 0;
    if ((v21 & 0x19) == 0)
    {
      id v22 = objc_msgSend(v32, sel_mainRecord);
      if (v22)
      {
        uint64_t v23 = v22;
        sub_1C254E3C0();
        swift_allocObject();
        sub_1C254E3B0();
        sub_1C254E350();

        swift_release();
      }
      else
      {
        v20((uint64_t)v15, 1, 1, v19);
      }
      sub_1C24EB334((uint64_t)v15, v18);
      a1 = 0;
    }
  }
  sub_1C22023A4();
  uint64_t v25 = (void *)sub_1C254FC70();
  uint64_t v26 = (void *)swift_allocObject();
  uint64_t v27 = v34;
  void v26[2] = v33;
  v26[3] = v27;
  v26[4] = v16;
  v26[5] = a1;
  aBlock[4] = sub_1C254486C;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_12_2;
  id v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v29 = (id)a1;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C25444EC((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C2544998(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C8758120](v37, v12, v9, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
  return swift_release();
}

uint64_t sub_1C2543388(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C2544998(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = swift_projectBox();
  swift_beginAccess();
  sub_1C2544878(v9, (uint64_t)v8);
  a1(v8, a4);
  return sub_1C23FAA9C((uint64_t)v8);
}

void sub_1C2543480(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v34 = (void *)*v2;
  uint64_t v4 = sub_1C254C900();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v36 = v6;
  uint64_t v37 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_1C254E560();
  uint64_t v39 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E510();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v38 = a1;
  uint64_t v35 = v13;
  v13(v9, a1, v4);
  swift_retain_n();
  uint64_t v14 = sub_1C254E550();
  os_log_type_t v15 = sub_1C254FA40();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v32 = v10;
    uint64_t v17 = v16;
    uint64_t v31 = swift_slowAlloc();
    aBlock[0] = v31;
    *(_DWORD *)uint64_t v17 = 136446466;
    uint64_t v40 = (uint64_t)v34;
    swift_getMetatypeMetadata();
    uint64_t v34 = v2;
    uint64_t v18 = sub_1C254F4F0();
    uint64_t v33 = v5;
    uint64_t v40 = sub_1C21AD354(v18, v19, aBlock);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    sub_1C25444EC(&qword_1EA2DF020, MEMORY[0x1E4F276F0]);
    uint64_t v20 = sub_1C2550810();
    uint64_t v40 = sub_1C21AD354(v20, v21, aBlock);
    uint64_t v5 = v33;
    uint64_t v2 = v34;
    sub_1C2550120();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    _os_log_impl(&dword_1C21A1000, v14, v15, "%{public}s: Opening URL %{public}s", (uint8_t *)v17, 0x16u);
    uint64_t v22 = v31;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v22, -1, -1);
    MEMORY[0x1C875A0B0](v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v32);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v10);
  }
  id v23 = objc_msgSend(self, sel_defaultWorkspace);
  if (v23)
  {
    id v24 = v23;
    uint64_t v25 = v38;
    uint64_t v26 = (void *)sub_1C254C870();
    uint64_t v27 = v37;
    v35(v37, v25, v4);
    unint64_t v28 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v2;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v29 + v28, v27, v4);
    aBlock[4] = (uint64_t)sub_1C2544600;
    aBlock[5] = v29;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C2541078;
    aBlock[3] = (uint64_t)&block_descriptor_82;
    uint64_t v30 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v24, sel_openURL_configuration_completionHandler_, v26, 0, v30);
    _Block_release(v30);
  }
}

void sub_1C25439A0(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = sub_1C254C900();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1C254E560();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2)
  {
    id v15 = a2;
    sub_1C254E510();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
    id v16 = a2;
    swift_retain();
    id v17 = a2;
    swift_retain();
    uint64_t v18 = sub_1C254E550();
    os_log_type_t v19 = sub_1C254FA20();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v37 = v12;
      uint64_t v22 = v21;
      uint64_t v35 = swift_slowAlloc();
      uint64_t v38 = v35;
      *(_DWORD *)uint64_t v22 = 136446722;
      os_log_t v34 = v18;
      uint64_t v39 = *a3;
      swift_getMetatypeMetadata();
      int v33 = v20;
      uint64_t v23 = sub_1C254F4F0();
      uint64_t v36 = v11;
      uint64_t v39 = sub_1C21AD354(v23, v24, &v38);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      sub_1C25444EC(&qword_1EA2DF020, MEMORY[0x1E4F276F0]);
      uint64_t v25 = sub_1C2550810();
      uint64_t v39 = sub_1C21AD354(v25, v26, &v38);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
      *(_WORD *)(v22 + 22) = 2082;
      uint64_t v39 = (uint64_t)a2;
      id v27 = a2;
      sub_1C2206F9C();
      uint64_t v28 = sub_1C254F4F0();
      uint64_t v39 = sub_1C21AD354(v28, v29, &v38);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      os_log_t v30 = v34;
      _os_log_impl(&dword_1C21A1000, v34, (os_log_type_t)v33, "%{public}s: Failed to open URL %{public}s with error: %{public}s", (uint8_t *)v22, 0x20u);
      uint64_t v31 = v35;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v31, -1, -1);
      MEMORY[0x1C875A0B0](v22, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v14, v36);
    }
    else
    {

      swift_release_n();
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);

      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }
}

void sub_1C2543DF8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 80);
}

uint64_t sub_1C2543E28()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WalletIntegrationItem()
{
  return self;
}

void sub_1C2543EA4(uint64_t a1, void *a2)
{
}

uint64_t sub_1C2543EC8()
{
  return sub_1C25444EC(&qword_1EA2E54D0, (void (*)(uint64_t))type metadata accessor for WalletIntegrationDataSource);
}

uint64_t sub_1C2543F10(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = a1;
  uint64_t v30 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1C2550620())
  {
    unint64_t v6 = v4 & 0xC000000000000001;
    uint64_t v7 = 4;
    uint64_t v8 = &selRef_addSubview_;
    uint64_t v26 = v5;
    unint64_t v27 = v4;
    uint64_t v24 = v3;
    unint64_t v25 = v4 & 0xC000000000000001;
    while (1)
    {
      uint64_t v3 = v7 - 4;
      id v9 = v6 ? (id)MEMORY[0x1C87588E0](v7 - 4, v4) : *(id *)(v4 + 8 * v7);
      uint64_t v10 = v9;
      uint64_t v11 = v7 - 3;
      if (__OFADD__(v3, 1)) {
        break;
      }
      if ([v9 v8[237]] == (id)12)
      {
        id v12 = objc_msgSend(v10, sel_contextString);
        if (v12)
        {
          uint64_t v13 = v12;
          uint64_t v29 = sub_1C254F470();
          uint64_t v15 = v14;
        }
        else
        {
          uint64_t v29 = 0;
          uint64_t v15 = 0;
        }
        char v16 = objc_msgSend(v10, sel_actionEnabled, v24);
        id v17 = objc_msgSend(v10, sel_title);
        if (v17)
        {
          uint64_t v18 = v17;
          uint64_t v19 = sub_1C254F470();
          uint64_t v21 = v20;
        }
        else
        {
          uint64_t v19 = 0;
          uint64_t v21 = 0;
        }
        id v22 = objc_msgSend(v10, sel_attributedTitle);
        type metadata accessor for WalletIntegrationItem();
        swift_allocObject();
        sub_1C2541AE4(v29, v15, a2, v16, v19, v21, (uint64_t)v22);

        MEMORY[0x1C8757C00]();
        if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();
        uint64_t v5 = v26;
        unint64_t v4 = v27;
        unint64_t v6 = v25;
        uint64_t v8 = &selRef_addSubview_;
      }
      else
      {
      }
      ++v7;
      if (v11 == v5)
      {
        swift_bridgeObjectRelease();
        return v30;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C254418C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v2 + qword_1EA2E54A8) = 0;
  *(void *)(v2 + qword_1EA2E54B0) = 0;
  *(unsigned char *)(v2 + qword_1EA2E54B8) = 0;
  *(void *)(v2 + qword_1EA2E54A0) = a1;
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  id v8 = a1;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "MutableArray<");
  HIWORD(v10[1]) = -4864;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  return sub_1C254D9F0();
}

uint64_t sub_1C2544324()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254DB50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v17 - v7;
  sub_1C254DAE0();
  sub_1C254DA80();
  id v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_absoluteDimension_, 15.0);
  sub_1C254DAD0();
  id v12 = objc_msgSend(v10, sel_absoluteDimension_, 0.0);
  sub_1C254DAB0();
  if ((*(unsigned char *)(v1 + qword_1EA2E54A8) & 1) == 0)
  {
    id v13 = objc_msgSend(v10, sel_absoluteDimension_, 15.0);
    sub_1C254DAC0();
    id v14 = objc_msgSend(v10, sel_absoluteDimension_, 0.0);
    sub_1C254DAA0();
  }
  uint64_t v15 = sub_1C254DB40();
  v9(v8, v2);
  return v15;
}

uint64_t sub_1C25444EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2544534()
{
  uint64_t v1 = sub_1C254C900();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_1C2544600(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_1C254C900() - 8);
  uint64_t v6 = *(uint64_t **)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  sub_1C25439A0(a1, a2, v6, v7);
}

uint64_t block_destroy_helper_78()
{
  return swift_release();
}

uint64_t sub_1C254468C()
{
  uint64_t v1 = sub_1C254F220();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C2544780(unint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1C254F220() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  unint64_t v6 = *(void **)(v1 + 24);
  uint64_t v7 = v1 + v4;
  id v8 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  return sub_1C2542F00(a1, v5, v6, v7, v9, v10);
}

uint64_t sub_1C2544824()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C254486C()
{
  return sub_1C2543388(*(void (**)(char *, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1C2544878(uint64_t a1, uint64_t a2)
{
  sub_1C2544998(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C254490C()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2544944()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C254498C(uint64_t a1, char *a2)
{
  return sub_1C2542280(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(uint8_t **)(v2 + 32));
}

void sub_1C2544998(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_1C2544A04()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_labelColor);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v2, sel_setFont_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  objc_msgSend(v2, sel_setTextColor_, v1);

  id v3 = objc_msgSend(v0, sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v3);

  id v4 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB2988], 1024);
  objc_msgSend(v2, sel_setFont_, v4);

  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

uint64_t sub_1C2544BE4()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR___HRConceptTitleTableHeaderView_title);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

id sub_1C2544CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___HRConceptTitleTableHeaderView_title);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  return sub_1C2544DB0();
}

id sub_1C2544D38(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  id v4 = (void *)(*a2 + OBJC_IVAR___HRConceptTitleTableHeaderView_title);
  swift_beginAccess();
  void *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_1C2544DB0();
}

id sub_1C2544DB0()
{
  id v1 = *(void **)(v0 + OBJC_IVAR___HRConceptTitleTableHeaderView_titleLabel);
  uint64_t v2 = (void *)(v0 + OBJC_IVAR___HRConceptTitleTableHeaderView_title);
  swift_beginAccess();
  if (v2[1])
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  objc_msgSend(v1, sel_setText_, v3);

  if (v2[1])
  {
    uint64_t v4 = *v2 & 0xFFFFFFFFFFFFLL;
    unint64_t v5 = v2[1];
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v4;
  }
  return objc_msgSend(v1, sel_setHidden_, v6 == 0);
}

id (*sub_1C2544EA4(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2544F04;
}

id sub_1C2544F04(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2544DB0();
  }
  return result;
}

id ConceptTitleTableHeaderView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *ConceptTitleTableHeaderView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR___HRConceptTitleTableHeaderView_titleLabel;
  uint64_t v10 = v4;
  *(void *)&v4[v9] = sub_1C2544A04();
  id v11 = &v10[OBJC_IVAR___HRConceptTitleTableHeaderView_title];
  *(void *)id v11 = 0;
  *((void *)v11 + 1) = 0;

  v16.receiver = v10;
  v16.super_class = (Class)type metadata accessor for ConceptTitleTableHeaderView();
  id v12 = (char *)objc_msgSendSuper2(&v16, sel_initWithFrame_, a1, a2, a3, a4);
  id v13 = *(void **)&v12[OBJC_IVAR___HRConceptTitleTableHeaderView_titleLabel];
  id v14 = v12;
  objc_msgSend(v14, sel_addSubview_, v13);
  objc_msgSend(v13, sel_hk_alignConstraintsWithView_, v14);

  return v14;
}

uint64_t type metadata accessor for ConceptTitleTableHeaderView()
{
  return self;
}

id ConceptTitleTableHeaderView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConceptTitleTableHeaderView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2545180@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___HRConceptTitleTableHeaderView_title);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for ConceptTitleTableHeaderView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConceptTitleTableHeaderView);
}

uint64_t dispatch thunk of ConceptTitleTableHeaderView.title.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ConceptTitleTableHeaderView.title.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ConceptTitleTableHeaderView.title.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

void __swiftcall EducationPreviewViewControllerProviding.makeEducationPreviewViewController()(UIViewController_optional *__return_ptr retstr)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  unint64_t v5 = (void *)(*(uint64_t (**)(void))(v2 + 8))();
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = objc_msgSend(v5, sel_educationContent);
    if (v7 && (v8 = v7, BOOL v9 = sub_1C25453B4(), v8, v9))
    {
      double v10 = (*(double (**)(uint64_t, uint64_t))(v3 + 16))(v4, v3);
      id v11 = objc_allocWithZone((Class)type metadata accessor for EducationPreviewViewController());
      sub_1C2545A98(v6, v10);
    }
    else
    {
    }
  }
}

BOOL sub_1C25453B4()
{
  uint64_t v0 = sub_1C234F90C(1, 1);
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = sub_1C23506E4(v0);
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      uint64_t v3 = v1 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1C21F4424(v3, (uint64_t)&v12);
        uint64_t v4 = v13;
        uint64_t v5 = v14;
        __swift_project_boxed_opaque_existential_1Tm(&v12, v13);
        uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 48))(v4, v5);
        unint64_t v8 = v7;
        swift_bridgeObjectRelease();
        uint64_t v9 = HIBYTE(v8) & 0xF;
        if ((v8 & 0x2000000000000000) == 0) {
          uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
        }
        if (v9) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v12);
        v3 += 40;
        if (!--v2)
        {
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      sub_1C21F44EC(&v12, (uint64_t)&v15);
    }
    else
    {
LABEL_9:
      uint64_t v17 = 0;
      long long v15 = 0u;
      long long v16 = 0u;
    }
    swift_bridgeObjectRelease();
    BOOL v10 = *((void *)&v16 + 1) != 0;
    sub_1C254650C((uint64_t)&v15);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

uint64_t type metadata accessor for EducationPreviewViewController()
{
  return self;
}

void sub_1C254551C()
{
  qword_1EA303EA8 = 0x4079000000000000;
}

void sub_1C254552C()
{
  qword_1EA303EB0 = 0x4030000000000000;
}

void sub_1C254553C()
{
  qword_1EA303EB8 = 0x4038000000000000;
}

id sub_1C254554C()
{
  return sub_1C25457DC(&OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController____lazy_storage___conceptTitleLabel, (uint64_t (*)(void))sub_1C254556C);
}

id sub_1C254556C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  id result = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB2990], 1024);
  if (result)
  {
    uint64_t v2 = result;
    objc_msgSend(v0, sel_setFont_, result);

    LODWORD(v3) = 1148846080;
    objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 1, v3);
    objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
    objc_msgSend(v0, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB27B8]);
    LODWORD(v4) = 1132068864;
    objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 1, v4);
    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1C2545688()
{
  return sub_1C25457DC(&OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController____lazy_storage___educationContentLabel, (uint64_t (*)(void))sub_1C25456A8);
}

id sub_1C25456A8()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setNumberOfLines_, 10);
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v0, sel_setFont_, v1);

  LODWORD(v2) = 1144750080;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 1, v2);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB27B8]);
  LODWORD(v3) = 1132068864;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 1, v3);
  return v0;
}

id sub_1C25457BC()
{
  return sub_1C25457DC(&OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController____lazy_storage___attributionLabel, (uint64_t (*)(void))sub_1C254583C);
}

id sub_1C25457DC(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  double v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2();
    unint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    double v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C254583C()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v0, sel_setFont_, v1);

  LODWORD(v2) = 1148846080;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 1, v2);
  id v3 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v3);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB27B8]);
  LODWORD(v4) = 1148846080;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 1, v4);
  LODWORD(v5) = 1132068864;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 1, v5);
  return v0;
}

id sub_1C25459B0()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController____lazy_storage___stackView;
  double v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController____lazy_storage___stackView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController____lazy_storage___stackView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1C60]), sel_init);
    objc_msgSend(v4, sel_setAxis_, 1);
    objc_msgSend(v4, sel_setDistribution_, 0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    LODWORD(v5) = 1132068864;
    objc_msgSend(v4, sel_setContentCompressionResistancePriority_forAxis_, 0, v5);
    LODWORD(v6) = 1144750080;
    objc_msgSend(v4, sel_setContentCompressionResistancePriority_forAxis_, 1, v6);
    unint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    double v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1C2545A98(void *a1, double a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController____lazy_storage___conceptTitleLabel] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController____lazy_storage___educationContentLabel] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController____lazy_storage___attributionLabel] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController____lazy_storage___stackView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController_userConcept] = a1;
  *(double *)&v2[OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController_preferredWidth] = a2;
  double v5 = &v2[OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController_educationContentProviding];
  *((void *)v5 + 3) = sub_1C23AD004();
  *((void *)v5 + 4) = &protocol witness table for HKMedicalUserDomainConcept;
  *(void *)double v5 = a1;
  v13.receiver = v2;
  v13.super_class = (Class)type metadata accessor for EducationPreviewViewController();
  id v6 = a1;
  id v7 = objc_msgSendSuper2(&v13, sel_initWithNibName_bundle_, 0, 0);
  sub_1C2546120();
  uint64_t v8 = qword_1EA2DD978;
  id v9 = v7;
  if (v8 != -1) {
    swift_once();
  }
  double v10 = *(double *)&qword_1EA303EA8;
  if (*(double *)&qword_1EA303EA8 >= a2) {
    double v10 = a2;
  }
  double v11 = sub_1C2545DF8(v10);
  objc_msgSend(v9, sel_setPreferredContentSize_, v11, v13.receiver, v13.super_class);

  return v9;
}

void sub_1C2545C84()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for EducationPreviewViewController();
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    double v2 = v1;
    id v3 = objc_msgSend(self, sel_systemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

    sub_1C2545FA4();
    id v4 = sub_1C25459B0();
    id v5 = objc_msgSend(v0, sel_view);
    if (qword_1EA2DD980 != -1) {
      swift_once();
    }
    objc_msgSend(v4, sel_hk_alignConstraintsWithView_insets_, v5, *(double *)&qword_1EA303EB0, *(double *)&qword_1EA303EB0, *(double *)&qword_1EA303EB0, *(double *)&qword_1EA303EB0);
  }
  else
  {
    __break(1u);
  }
}

double sub_1C2545DF8(double a1)
{
  uint64_t v2 = v1;
  if (qword_1EA2DD980 != -1) {
    swift_once();
  }
  double v4 = a1 - (*(double *)&qword_1EA303EB0 + *(double *)&qword_1EA303EB0);
  double v5 = *(double *)(MEMORY[0x1E4FB2C68] + 8);
  id v6 = sub_1C254554C();
  objc_msgSend(v6, sel_systemLayoutSizeFittingSize_, v4, v5);

  id v7 = sub_1C2545688();
  objc_msgSend(v7, sel_systemLayoutSizeFittingSize_, v4, v5);
  double v9 = v8;

  if (qword_1EA2DD988 != -1) {
    swift_once();
  }
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController_educationContentProviding + 24);
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController_educationContentProviding + 32);
  __swift_project_boxed_opaque_existential_1Tm((void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController_educationContentProviding), v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 72))(v10, v11);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    id v14 = sub_1C25457BC();
    objc_msgSend(v14, sel_systemLayoutSizeFittingSize_, v4, v5);
  }
  return v9;
}

void sub_1C2545FA4()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    id v3 = v2;
    id v4 = sub_1C25459B0();
    objc_msgSend(v3, sel_addSubview_, v4);

    id v5 = sub_1C25459B0();
    id v6 = sub_1C254554C();
    objc_msgSend(v5, sel_addArrangedSubview_, v6);

    id v7 = sub_1C25459B0();
    id v8 = sub_1C2545688();
    objc_msgSend(v7, sel_addArrangedSubview_, v8);

    uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController_educationContentProviding + 24];
    uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController_educationContentProviding
                       + 32];
    __swift_project_boxed_opaque_existential_1Tm(&v1[OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController_educationContentProviding], v9);
    (*(void (**)(uint64_t, uint64_t))(v10 + 72))(v9, v10);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    if (v12)
    {
      id v13 = sub_1C25459B0();
      id v14 = sub_1C25457BC();
      objc_msgSend(v13, sel_addArrangedSubview_, v14);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1C2546120()
{
  uint64_t v1 = v0;
  id v2 = sub_1C254554C();
  id v3 = objc_msgSend(self, sel_mainBundle);
  id v4 = objc_msgSend(v3, sel_preferredLocalizations);

  uint64_t v5 = sub_1C254F710();
  HKMedicalUserDomainConcept.localizedOntologyPreferredName(given:)((Swift::OpaquePointer)v5);
  swift_bridgeObjectRelease();
  id v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setText_, v6);

  id v7 = sub_1C2545688();
  id v8 = (void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController_educationContentProviding);
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController_educationContentProviding + 24);
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController_educationContentProviding + 32);
  __swift_project_boxed_opaque_existential_1Tm((void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30EducationPreviewViewController_educationContentProviding), v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  if (v11)
  {
    uint64_t v12 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  objc_msgSend(v7, sel_setText_, v12);

  id v13 = sub_1C25457BC();
  uint64_t v14 = v8[3];
  uint64_t v15 = v8[4];
  __swift_project_boxed_opaque_existential_1Tm(v8, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 72))(v14, v15);
  if (v16)
  {
    id v17 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v17 = 0;
  }
  objc_msgSend(v13, sel_setText_, v17);
}

id EducationPreviewViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    id v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void EducationPreviewViewController.init(nibName:bundle:)()
{
}

id EducationPreviewViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EducationPreviewViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of EducationPreviewViewControllerProviding.userConcept.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EducationPreviewViewControllerProviding.preferredWidth.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EducationPreviewViewControllerProviding.makeEducationPreviewViewController()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t method lookup function for EducationPreviewViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EducationPreviewViewController);
}

uint64_t sub_1C254650C(uint64_t a1)
{
  sub_1C2546568();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C2546568()
{
  if (!qword_1EA2E48A0)
  {
    sub_1C24E89C8();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E48A0);
    }
  }
}

uint64_t sub_1C25465C0(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a1;
  uint64_t v4 = sub_1C254F1C0();
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C254F200();
  uint64_t v7 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254F230();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (uint64_t *)((char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v2 + 32);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t, __n128))(v11 + 104))(v14, *MEMORY[0x1E4FBCBD8], v10, v12);
  id v23 = v15;
  LOBYTE(v15) = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v14, v10);
  if (v15)
  {
    id v17 = (void *)swift_allocObject();
    uint64_t v18 = v22;
    void v17[2] = v2;
    v17[3] = v18;
    void v17[4] = a2;
    aBlock[4] = sub_1C2546E64;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_83;
    uint64_t v19 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_1C254F1E0();
    uint64_t v26 = MEMORY[0x1E4FBC860];
    uint64_t v20 = (void (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C23DFFD4((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    sub_1C2546EC8(0, (unint64_t *)&qword_1EBB6FF30, v20);
    sub_1C2546E78((unint64_t *)&qword_1EBB6FF40, (unint64_t *)&qword_1EBB6FF30, v20);
    sub_1C2550200();
    MEMORY[0x1C87581B0](0, v9, v6, v19);
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1C2546968()
{
  if (_xpc_runtime_is_app_sandboxed())
  {
    type metadata accessor for SearchIndexController();
    swift_allocObject();
    uint64_t result = sub_1C25469B4();
  }
  else
  {
    uint64_t result = 0;
  }
  qword_1EBB719C8 = (uint64_t)result;
  return result;
}

void *sub_1C25469B4()
{
  uint64_t v9 = sub_1C254FC60();
  uint64_t v1 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C254FC00();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1C254F200();
  MEMORY[0x1F4188790](v5 - 8);
  v0[2] = 0xD000000000000014;
  v0[3] = 0x80000001C258C1E0;
  v8[1] = sub_1C22023A4();
  sub_1C254F1E0();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  id v6 = (void (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C23DFFD4((unint64_t *)&qword_1EBB6FF88, MEMORY[0x1E4FBCC10]);
  sub_1C2546EC8(0, &qword_1EBB6FF50, v6);
  sub_1C2546E78((unint64_t *)&qword_1EBB6FF58, &qword_1EBB6FF50, v6);
  sub_1C2550200();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v9);
  v0[4] = sub_1C254FCB0();
  v0[5] = 0;
  return v0;
}

id sub_1C2546C28()
{
  uint64_t v1 = *(void **)(v0 + 40);
  if (v1)
  {
    id v2 = *(id *)(v0 + 40);
  }
  else
  {
    id v3 = (void *)*MEMORY[0x1E4F28340];
    id v4 = objc_allocWithZone(MEMORY[0x1E4F23818]);
    swift_bridgeObjectRetain();
    id v5 = v3;
    id v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v7 = objc_msgSend(v4, sel_initWithName_protectionClass_, v6, v5);

    uint64_t v8 = *(void **)(v0 + 40);
    *(void *)(v0 + 40) = v7;
    id v2 = v7;

    uint64_t v1 = 0;
  }
  id v9 = v1;
  return v2;
}

void sub_1C2546CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = sub_1C2546C28();
  v7[4] = a2;
  void v7[5] = a3;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  _OWORD v7[2] = sub_1C2306718;
  v7[3] = &block_descriptor_4_1;
  id v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_deleteAllSearchableItemsWithCompletionHandler_, v6);
  _Block_release(v6);
}

uint64_t sub_1C2546DB8()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SearchIndexController()
{
  return self;
}

uint64_t sub_1C2546E24()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C2546E64()
{
  sub_1C2546CF0(v0[2], v0[3], v0[4]);
}

uint64_t block_destroy_helper_79()
{
  return swift_release();
}

uint64_t sub_1C2546E78(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2546EC8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2546EC8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C254F7A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

double CGPoint.rounded(_:toScale:)()
{
  sub_1C254CDC0();
  double v1 = v0;
  sub_1C254CDC0();
  return v1;
}

double CGPoint.rounded(_:toScaleOf:)(int a1, id a2)
{
  id v3 = objc_msgSend(a2, sel_traitCollection);
  sub_1C254CDD0();
  double v5 = v4;

  id v6 = objc_msgSend(a2, sel_traitCollection);
  sub_1C254CDD0();

  return v5;
}

{
  double v3;
  double v4;

  objc_msgSend(a2, sel_displayScale);
  sub_1C254CDC0();
  double v4 = v3;
  objc_msgSend(a2, sel_displayScale);
  sub_1C254CDC0();
  return v4;
}

CGPoint __swiftcall CGPoint.scaled(for:)(UIFont a1)
{
  double v2 = v1;
  -[objc_class _scaledValueForValue:](a1.super.isa, sel__scaledValueForValue_);
  double v5 = v4;
  [(objc_class *)a1.super.isa _scaledValueForValue:v2];
  double v7 = v6;
  double v8 = v5;
  result.y = v7;
  result.x = v8;
  return result;
}

uint64_t type metadata accessor for MedicalAttachmentDataSource()
{
  uint64_t result = qword_1EA2E5548;
  if (!qword_1EA2E5548) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2547140()
{
  uint64_t result = type metadata accessor for PresentationContext(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C254720C(uint64_t a1)
{
  v2[20] = a1;
  v2[21] = v1;
  v2[22] = *v1;
  uint64_t v3 = sub_1C254E560();
  v2[23] = v3;
  v2[24] = *(void *)(v3 - 8);
  v2[25] = swift_task_alloc();
  uint64_t v4 = sub_1C254CB40();
  v2[26] = v4;
  v2[27] = *(void *)(v4 - 8);
  v2[28] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2547350, 0, 0);
}

uint64_t sub_1C2547350()
{
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void **)(*(void *)(v0 + 168) + qword_1EA2E5530);
  id v5 = objc_msgSend(*(id *)(v0 + 160), sel_UUID);
  sub_1C254CB20();

  uint64_t v6 = sub_1C254CB00();
  *(void *)(v0 + 232) = v6;
  double v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 240) = v7;
  *(void *)(v0 + 248) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v1, v3);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1C25474C4;
  uint64_t v8 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1C24D5F28;
  *(void *)(v0 + 104) = &block_descriptor_5;
  *(void *)(v0 + 112) = v8;
  objc_msgSend(v4, sel_triggerAttachmentRetryForMedicalRecordWithIdentifier_completion_, v6, v0 + 80);
  return MEMORY[0x1F41881E8](v0 + 16);
}

uint64_t sub_1C25474C4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 256) = v1;
  if (v1) {
    uint64_t v2 = sub_1C2547648;
  }
  else {
    uint64_t v2 = sub_1C25475D4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C25475D4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2547648()
{
  uint64_t v42 = v0;
  uint64_t v1 = v0;
  uint64_t v3 = v0 + 20;
  uint64_t v2 = (void *)v0[20];
  uint64_t v4 = (void *)v3[12];
  id v5 = (void *)v3[9];
  swift_willThrow();

  sub_1C254E510();
  swift_retain();
  id v6 = v2;
  id v7 = v4;
  swift_retain();
  id v8 = v6;
  id v9 = v4;
  uint64_t v10 = sub_1C254E550();
  os_log_type_t v11 = sub_1C254FA20();
  if (os_log_type_enabled(v10, v11))
  {
    __n128 v12 = (void *)v1[32];
    os_log_t v34 = (void (*)(uint64_t, uint64_t))v1[30];
    os_log_type_t type = v11;
    uint64_t v13 = v1[28];
    uint64_t v33 = v1[26];
    uint64_t v38 = v1[24];
    uint64_t v39 = v1[23];
    uint64_t v40 = v1[25];
    log = v10;
    uint64_t v14 = v1[22];
    uint64_t v15 = (void *)v1[20];
    uint64_t v16 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    v41[0] = v35;
    *(_DWORD *)uint64_t v16 = 136315650;
    v1[15] = v14;
    swift_getMetatypeMetadata();
    uint64_t v17 = sub_1C254F4F0();
    v1[16] = sub_1C21AD354(v17, v18, v41);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v16 + 12) = 2080;
    id v19 = objc_msgSend(v15, sel_UUID);
    sub_1C254CB20();

    sub_1C2549EF0((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v20 = sub_1C2550810();
    unint64_t v22 = v21;
    v34(v13, v33);
    v1[17] = sub_1C21AD354(v20, v22, v41);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    *(_WORD *)(v16 + 22) = 2080;
    v1[18] = v12;
    id v23 = v12;
    sub_1C2206F9C();
    uint64_t v24 = sub_1C254F4F0();
    v1[19] = sub_1C21AD354(v24, v25, v41);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, log, type, "%s: Failed to retry document for record %s: %s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v35, -1, -1);
    MEMORY[0x1C875A0B0](v16, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v39);
  }
  else
  {
    uint64_t v26 = (void *)v1[32];
    uint64_t v28 = v1[24];
    uint64_t v27 = v1[25];
    uint64_t v29 = v1[23];
    uint64_t v30 = (void *)v1[20];

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v1[1];
  return v31();
}

uint64_t sub_1C2547A4C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v26 = a5;
  sub_1C2549CEC(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v28 = (char *)&v25 - v11;
  uint64_t v12 = sub_1C254CB40();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v6 + qword_1EA2E5540) = 0;
  *(void *)(v6 + qword_1EA303EC0) = 0;
  *(void *)(v6 + qword_1EA303EC8) = 0;
  *(void *)(v6 + qword_1EA2E5520) = a1;
  type metadata accessor for MedicalAttachmentSectionProvider();
  uint64_t v16 = (void *)swift_allocObject();
  v16[7] = 0;
  swift_unknownObjectWeakInit();
  unsigned char v16[8] = 0;
  void v16[2] = a1;
  id v27 = a1;
  swift_retain();
  _OWORD v16[3] = sub_1C23EC264();
  void v16[4] = v17;
  v16[5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AC18]), sel_initWithHealthStore_, a2);
  v16[7] = v26;
  swift_unknownObjectWeakAssign();
  *(void *)(v6 + qword_1EA2E5528) = v16;
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67718]), sel_initWithHealthStore_, a2);
  *(void *)(v6 + qword_1EA2E5530) = v18;
  sub_1C2549F98(a3, v6 + qword_1EA2E5538, type metadata accessor for PresentationContext);
  swift_release();
  v29[0] = 0;
  v29[1] = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v29, "MutableArray<");
  HIWORD(v29[1]) = -4864;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v19 = sub_1C254D9F0();
  uint64_t v20 = sub_1C254F840();
  uint64_t v21 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v28, 1, 1, v20);
  unint64_t v22 = (void *)swift_allocObject();
  v22[2] = 0;
  v22[3] = 0;
  v22[4] = v19;
  swift_retain_n();
  sub_1C24D0A0C(v21, (uint64_t)&unk_1EA2E5578, (uint64_t)v22);
  swift_release();
  uint64_t v23 = sub_1C2548C60();

  swift_unknownObjectRelease();
  swift_release();
  sub_1C2549F38(a3, type metadata accessor for PresentationContext);
  *(void *)(v19 + qword_1EA303EC8) = v23;
  swift_release();
  return v19;
}

uint64_t sub_1C2547E44()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C2223E3C;
  return sub_1C2547ED4();
}

uint64_t sub_1C2547ED4()
{
  v1[7] = v0;
  v1[8] = *v0;
  uint64_t v2 = sub_1C254CB40();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v3 = sub_1C254E560();
  v1[12] = v3;
  v1[13] = *(void *)(v3 - 8);
  v1[14] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2548018, 0, 0);
}

uint64_t sub_1C2548018()
{
  v0[15] = *(void *)(v0[7] + qword_1EA2E5528);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[16] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C25480B8;
  return sub_1C23EC488();
}

uint64_t sub_1C25480B8(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[17] = a1;
  v4[18] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1C2548498, 0, 0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v4[19] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_1C254823C;
    return sub_1C23EDD5C(a1);
  }
}

uint64_t sub_1C254823C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C2548878;
  }
  else
  {
    *(void *)(v4 + 168) = a1;
    uint64_t v5 = sub_1C2548364;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C2548364()
{
  sub_1C254F820();
  *(void *)(v0 + 176) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C25483F8, v2, v1);
}

uint64_t sub_1C25483F8()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[17];
  swift_release();
  sub_1C2548EC0(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C2548498()
{
  os_log_t v34 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = (void *)v0[18];
  sub_1C254E510();
  swift_retain_n();
  id v3 = v2;
  swift_retain();
  id v4 = v2;
  uint64_t v5 = sub_1C254E550();
  os_log_type_t v6 = sub_1C254FA20();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v30 = v0[13];
    uint64_t v31 = v0[12];
    uint64_t v32 = v0[14];
    os_log_type_t type = v6;
    uint64_t v7 = v0[11];
    uint64_t v26 = v0[10];
    uint64_t v8 = v0[8];
    uint64_t v25 = v0[9];
    log = v5;
    uint64_t v9 = v0[7];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v33 = v27;
    *(_DWORD *)uint64_t v10 = 136315650;
    v0[2] = v8;
    swift_getMetatypeMetadata();
    uint64_t v11 = sub_1C254F4F0();
    v0[3] = sub_1C21AD354(v11, v12, &v33);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    id v13 = objc_msgSend(*(id *)(v9 + qword_1EA2E5520), sel_UUID);
    sub_1C254CB20();

    sub_1C2549EF0((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v14 = sub_1C2550810();
    unint64_t v16 = v15;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v7, v25);
    v1[4] = sub_1C21AD354(v14, v16, &v33);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 22) = 2080;
    v1[5] = v2;
    id v17 = v2;
    sub_1C2206F9C();
    uint64_t v18 = sub_1C254F4F0();
    v1[6] = sub_1C21AD354(v18, v19, &v33);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, log, type, "%s: Failed to fetch document for record %s: %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v27, -1, -1);
    MEMORY[0x1C875A0B0](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v31);
  }
  else
  {
    uint64_t v21 = v0[13];
    uint64_t v20 = v0[14];
    uint64_t v22 = v0[12];

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v1[1];
  return v23();
}

uint64_t sub_1C2548878()
{
  os_log_t v34 = v0;
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)v0[20];
  sub_1C254E510();
  swift_retain_n();
  id v3 = v2;
  swift_retain();
  id v4 = v2;
  uint64_t v5 = sub_1C254E550();
  os_log_type_t v6 = sub_1C254FA20();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v30 = v0[13];
    uint64_t v31 = v0[12];
    uint64_t v32 = v0[14];
    os_log_type_t type = v6;
    uint64_t v7 = v0[11];
    uint64_t v26 = v0[10];
    uint64_t v8 = v0[8];
    uint64_t v25 = v0[9];
    log = v5;
    uint64_t v9 = v0[7];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v33 = v27;
    *(_DWORD *)uint64_t v10 = 136315650;
    v0[2] = v8;
    swift_getMetatypeMetadata();
    uint64_t v11 = sub_1C254F4F0();
    v0[3] = sub_1C21AD354(v11, v12, &v33);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    id v13 = objc_msgSend(*(id *)(v9 + qword_1EA2E5520), sel_UUID);
    sub_1C254CB20();

    sub_1C2549EF0((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v14 = sub_1C2550810();
    unint64_t v16 = v15;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v7, v25);
    v1[4] = sub_1C21AD354(v14, v16, &v33);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 22) = 2080;
    v1[5] = v2;
    id v17 = v2;
    sub_1C2206F9C();
    uint64_t v18 = sub_1C254F4F0();
    v1[6] = sub_1C21AD354(v18, v19, &v33);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, log, type, "%s: Failed to fetch document for record %s: %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v27, -1, -1);
    MEMORY[0x1C875A0B0](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v31);
  }
  else
  {
    uint64_t v21 = v0[13];
    uint64_t v20 = v0[14];
    uint64_t v22 = v0[12];

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v1[1];
  return v23();
}

uint64_t sub_1C2548C60()
{
  sub_1C2549CEC(0, (unint64_t *)&unk_1EA2E5580, (uint64_t (*)(uint64_t))sub_1C23B655C, MEMORY[0x1E4F1AC70]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v18 - v4;
  uint64_t v6 = qword_1EA303EC0;
  if (*(void *)((char *)v0 + qword_1EA303EC0)) {
    return swift_retain();
  }
  uint64_t v8 = (objc_class *)type metadata accessor for DownloadableAttachmentStateChangeListener();
  uint64_t v9 = (char *)objc_allocWithZone(v8);
  uint64_t v10 = &v9[OBJC_IVAR____TtC15HealthRecordsUI41DownloadableAttachmentStateChangeListener__latestChange];
  uint64_t v20 = 0;
  sub_1C23B655C(0);
  swift_retain();
  uint64_t v11 = v9;
  sub_1C254EB30();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v5, v2);
  unint64_t v12 = (uint64_t (**)(void *))&v11[OBJC_IVAR____TtC15HealthRecordsUI41DownloadableAttachmentStateChangeListener_handler];
  *unint64_t v12 = sub_1C2549D50;
  v12[1] = v0;
  swift_retain();

  v19.receiver = v11;
  v19.super_class = v8;
  id v13 = objc_msgSendSuper2(&v19, sel_init);
  swift_release();
  uint64_t v14 = *(void **)((char *)v0 + v6);
  *(void *)((char *)v0 + v6) = v13;
  id v15 = v13;

  objc_msgSend(*(id *)((char *)v0 + qword_1EA2E5530), sel_addClinicalDocumentStateChangeListener_, v15);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v15;
  type metadata accessor for CancellationToken();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  *(void *)(result + 24) = sub_1C2549DD0;
  *(void *)(result + 32) = v17;
  return result;
}

uint64_t sub_1C2548EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v59 = a2;
  uint64_t v3 = type metadata accessor for AttachmentContext();
  uint64_t v58 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v57 = (uint64_t)&v51 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v51 - v9;
  uint64_t v11 = type metadata accessor for PresentationContext(0);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22682A0();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C254CB40();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C254DA10();
  uint64_t v22 = qword_1EA2E5540;
  if ((*(unsigned char *)(v2 + qword_1EA2E5540) & 1) == 0)
  {
    uint64_t v55 = v3;
    id v56 = v20;
    sub_1C2549F98(v2 + qword_1EA2E5538, (uint64_t)v13, type metadata accessor for PresentationContext);
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    if (v23(v13, 1, v17) == 1)
    {
      sub_1C2549F38((uint64_t)v13, type metadata accessor for PresentationContext);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
      return sub_1C2549F38((uint64_t)v16, (uint64_t (*)(void))sub_1C22682A0);
    }
    uint64_t v51 = v22;
    uint64_t v52 = v10;
    uint64_t v53 = v2;
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v24(v16, v13, v17);
    uint64_t v54 = v18;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
    if (v23(v16, 1, v17) == 1) {
      return sub_1C2549F38((uint64_t)v16, (uint64_t (*)(void))sub_1C22682A0);
    }
    uint64_t v25 = v56;
    v24(v56, v16, v17);
    uint64_t v26 = *(void *)(v59 + 16);
    uint64_t v27 = v54;
    uint64_t v28 = v17;
    if (v26)
    {
      uint64_t v29 = v59 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
      uint64_t v30 = *(void *)(v58 + 72);
      swift_bridgeObjectRetain();
      uint64_t v32 = (uint64_t)v52;
      uint64_t v31 = v53;
      while (1)
      {
        sub_1C2549F98(v29, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
        if (sub_1C254CB10()) {
          break;
        }
        sub_1C2549F38((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
        v29 += v30;
        if (!--v26)
        {
          swift_bridgeObjectRelease();
          return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v25, v17);
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v33 = v57;
      sub_1C254A000((uint64_t)v5, v57);
      sub_1C254A000(v33, v32);
      uint64_t v34 = MEMORY[0x1C875A200](*(void *)(v31 + qword_1EA2E5528) + 48);
      if (v34)
      {
        uint64_t v35 = (void *)v34;
        sub_1C21ACA3C();
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = xmmword_1C255CEB0;
        uint64_t v37 = (uint64_t *)(v32 + *(int *)(v55 + 24));
        uint64_t v38 = *v37;
        unint64_t v39 = v37[1];
        uint64_t v40 = (objc_class *)type metadata accessor for QLItemSingleDataProvider();
        uint64_t v41 = (char *)objc_allocWithZone(v40);
        uint64_t v42 = (uint64_t *)&v41[OBJC_IVAR____TtC15HealthRecordsUI24QLItemSingleDataProvider_data];
        *uint64_t v42 = v38;
        v42[1] = v39;
        sub_1C2205E14(v38, v39);
        v61.receiver = v41;
        v61.super_class = v40;
        id v43 = objc_msgSendSuper2(&v61, sel_init);
        sub_1C254E2A0();
        id v44 = objc_allocWithZone(MEMORY[0x1E4F3A648]);
        swift_bridgeObjectRetain();
        unint64_t v45 = (void *)sub_1C254F430();
        uint64_t v27 = v54;
        swift_bridgeObjectRelease();
        unint64_t v46 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        id v47 = objc_msgSend(v44, sel_initWithDataProvider_contentType_previewTitle_, v43, v45, v46);

        *(void *)(v36 + 32) = v47;
        uint64_t v60 = v36;
        uint64_t v31 = v53;
        sub_1C254F730();
        id v48 = objc_allocWithZone(MEMORY[0x1E4F3A650]);
        sub_1C2232920();
        id v49 = (void *)sub_1C254F700();
        swift_bridgeObjectRelease();
        id v50 = objc_msgSend(v48, sel_initWithPreviewItems_, v49);

        uint64_t v25 = v56;
        objc_msgSend(v35, sel_presentViewController_animated_completion_, v50, 1, 0);
        swift_unknownObjectRelease();
      }
      sub_1C2549F38(v32, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v25, v28);
      *(unsigned char *)(v31 + v51) = 1;
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v25, v17);
    }
  }
  return result;
}

uint64_t sub_1C2549500(void *a1, uint64_t a2)
{
  sub_1C2549CEC(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = sub_1C254CB40();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v12 = MEMORY[0x1F4188790](v11).n128_u64[0];
  uint64_t v14 = (char *)&v21 - v13;
  id v15 = objc_msgSend(a1, sel_medicalRecordIdentifier, v12);
  sub_1C254CB20();

  id v16 = objc_msgSend(*(id *)(a2 + qword_1EA2E5520), sel_UUID);
  sub_1C254CB20();

  LOBYTE(v16) = sub_1C254CB10();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, v7);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v17)(v14, v7);
  if (v16)
  {
    uint64_t v19 = sub_1C254F840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v6, 1, 1, v19);
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = a2;
    swift_retain();
    sub_1C24D0A0C((uint64_t)v6, (uint64_t)&unk_1EA2E55A0, (uint64_t)v20);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C254976C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    objc_msgSend(*(id *)(result + qword_1EA2E5530), sel_removeClinicalDocumentStateChangeListener_, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C25497E0()
{
  swift_release();
  sub_1C2549F38(v0 + qword_1EA2E5538, type metadata accessor for PresentationContext);

  return swift_release();
}

uint64_t sub_1C2549874()
{
  uint64_t v1 = *(void *)(v0 + qword_1EA303EC8);
  if (v1)
  {
    swift_beginAccess();
    if ((*(unsigned char *)(v1 + 16) & 1) == 0)
    {
      *(unsigned char *)(v1 + 16) = 1;
      swift_beginAccess();
      uint64_t v2 = *(void (**)(uint64_t))(v1 + 24);
      swift_retain();
      uint64_t v3 = swift_retain();
      v2(v3);
      swift_release();
      swift_release();
    }
  }
  uint64_t v4 = sub_1C254DA50();

  swift_release();
  sub_1C2549F38(v4 + qword_1EA2E5538, type metadata accessor for PresentationContext);

  swift_release();
  return v4;
}

uint64_t sub_1C25499A0()
{
  sub_1C2549874();
  return swift_deallocClassInstance();
}

void sub_1C25499F4()
{
}

uint64_t sub_1C2549A24()
{
  return type metadata accessor for MedicalAttachmentDataSource();
}

uint64_t sub_1C2549A30()
{
  return sub_1C254E160();
}

uint64_t sub_1C2549AA8()
{
  return sub_1C2549EF0(&qword_1EA2E5558, (void (*)(uint64_t))type metadata accessor for MedicalAttachmentDataSource);
}

void *sub_1C2549AF0(uint64_t a1)
{
  uint64_t v2 = sub_1C254DB50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DAE0();
  uint64_t v6 = (void *)sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (!a1)
  {
    objc_msgSend(v6, sel_contentInsets);
    objc_msgSend(v6, sel_setContentInsets_, 10.0);
  }
  objc_msgSend(v6, sel_contentInsets);
  objc_msgSend(v6, sel_setContentInsets_);
  return v6;
}

uint64_t sub_1C2549C18()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C2223E3C;
  uint64_t v2 = (void *)swift_task_alloc();
  void v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C2223E3C;
  return sub_1C2547ED4();
}

void sub_1C2549CEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2549D50(void *a1)
{
  return sub_1C2549500(a1, v1);
}

uint64_t sub_1C2549D58()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2549D90()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2549DD0()
{
  return sub_1C254976C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t objectdestroyTm_15()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2549E1C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C222399C;
  uint64_t v2 = (void *)swift_task_alloc();
  void v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C2223E3C;
  return sub_1C2547ED4();
}

uint64_t sub_1C2549EF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2549F38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2549F98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C254A000(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttachmentContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_1C254C3E0()
{
  return MEMORY[0x1F40E3038]();
}

uint64_t sub_1C254C3F0()
{
  return MEMORY[0x1F40E3060]();
}

uint64_t sub_1C254C400()
{
  return MEMORY[0x1F40E3070]();
}

uint64_t sub_1C254C410()
{
  return MEMORY[0x1F40E3080]();
}

uint64_t sub_1C254C420()
{
  return MEMORY[0x1F40E3098]();
}

uint64_t sub_1C254C430()
{
  return MEMORY[0x1F40E30A8]();
}

uint64_t sub_1C254C440()
{
  return MEMORY[0x1F40E30C0]();
}

uint64_t sub_1C254C450()
{
  return MEMORY[0x1F40E3128]();
}

uint64_t sub_1C254C460()
{
  return MEMORY[0x1F40E3150]();
}

uint64_t sub_1C254C470()
{
  return MEMORY[0x1F40E3160]();
}

uint64_t sub_1C254C480()
{
  return MEMORY[0x1F40E3298]();
}

uint64_t sub_1C254C490()
{
  return MEMORY[0x1F40E3368]();
}

uint64_t sub_1C254C4A0()
{
  return MEMORY[0x1F40E3420]();
}

uint64_t sub_1C254C4B0()
{
  return MEMORY[0x1F411D688]();
}

uint64_t sub_1C254C4C0()
{
  return MEMORY[0x1F40E34A0]();
}

uint64_t sub_1C254C4D0()
{
  return MEMORY[0x1F40E34C0]();
}

uint64_t sub_1C254C4E0()
{
  return MEMORY[0x1F40E34D0]();
}

uint64_t sub_1C254C4F0()
{
  return MEMORY[0x1F40E34E8]();
}

uint64_t sub_1C254C500()
{
  return MEMORY[0x1F40E34F8]();
}

uint64_t sub_1C254C510()
{
  return MEMORY[0x1F40E3508]();
}

uint64_t sub_1C254C520()
{
  return MEMORY[0x1F40E3530]();
}

uint64_t sub_1C254C530()
{
  return MEMORY[0x1F40E3540]();
}

uint64_t sub_1C254C540()
{
  return MEMORY[0x1F40E3550]();
}

uint64_t sub_1C254C550()
{
  return MEMORY[0x1F40E3560]();
}

uint64_t sub_1C254C560()
{
  return MEMORY[0x1F40E3568]();
}

uint64_t sub_1C254C570()
{
  return MEMORY[0x1F40E3590]();
}

uint64_t sub_1C254C580()
{
  return MEMORY[0x1F40E35A8]();
}

uint64_t sub_1C254C590()
{
  return MEMORY[0x1F40E35C0]();
}

uint64_t sub_1C254C5A0()
{
  return MEMORY[0x1F40E35C8]();
}

uint64_t sub_1C254C5B0()
{
  return MEMORY[0x1F40E35D8]();
}

uint64_t sub_1C254C5C0()
{
  return MEMORY[0x1F40E3668]();
}

uint64_t sub_1C254C5D0()
{
  return MEMORY[0x1F40E36B8]();
}

uint64_t sub_1C254C5E0()
{
  return MEMORY[0x1F40E36C8]();
}

uint64_t sub_1C254C5F0()
{
  return MEMORY[0x1F40E36E8]();
}

uint64_t sub_1C254C600()
{
  return MEMORY[0x1F40E3708]();
}

uint64_t sub_1C254C610()
{
  return MEMORY[0x1F40E3750]();
}

uint64_t sub_1C254C620()
{
  return MEMORY[0x1F40E37B8]();
}

uint64_t sub_1C254C630()
{
  return MEMORY[0x1F40E37E0]();
}

uint64_t sub_1C254C640()
{
  return MEMORY[0x1F40E3800]();
}

uint64_t sub_1C254C650()
{
  return MEMORY[0x1F40E3818]();
}

uint64_t sub_1C254C660()
{
  return MEMORY[0x1F40E38D0]();
}

uint64_t sub_1C254C670()
{
  return MEMORY[0x1F40E38E8]();
}

uint64_t sub_1C254C680()
{
  return MEMORY[0x1F40E38F8]();
}

uint64_t sub_1C254C690()
{
  return MEMORY[0x1F40E3938]();
}

uint64_t sub_1C254C6A0()
{
  return MEMORY[0x1F40E3970]();
}

uint64_t sub_1C254C6B0()
{
  return MEMORY[0x1F40E3988]();
}

uint64_t sub_1C254C6C0()
{
  return MEMORY[0x1F40E39A0]();
}

uint64_t sub_1C254C6D0()
{
  return MEMORY[0x1F40E3A10]();
}

uint64_t sub_1C254C6E0()
{
  return MEMORY[0x1F40E3A28]();
}

uint64_t sub_1C254C6F0()
{
  return MEMORY[0x1F40E3A58]();
}

uint64_t sub_1C254C700()
{
  return MEMORY[0x1F40E3A90]();
}

uint64_t sub_1C254C710()
{
  return MEMORY[0x1F40E3A98]();
}

uint64_t sub_1C254C720()
{
  return MEMORY[0x1F40E3AC0]();
}

uint64_t sub_1C254C730()
{
  return MEMORY[0x1F40E3F58]();
}

uint64_t sub_1C254C740()
{
  return MEMORY[0x1F40E42C8]();
}

uint64_t sub_1C254C750()
{
  return MEMORY[0x1F40E42F0]();
}

uint64_t sub_1C254C760()
{
  return MEMORY[0x1F40E4368]();
}

uint64_t sub_1C254C770()
{
  return MEMORY[0x1F40E43C0]();
}

uint64_t sub_1C254C780()
{
  return MEMORY[0x1F40E43D0]();
}

uint64_t sub_1C254C7D0()
{
  return MEMORY[0x1F40E44C8]();
}

uint64_t sub_1C254C800()
{
  return MEMORY[0x1F40E44F8]();
}

uint64_t sub_1C254C810()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_1C254C820()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_1C254C830()
{
  return MEMORY[0x1F40E46D0]();
}

uint64_t sub_1C254C840()
{
  return MEMORY[0x1F40E48F8]();
}

uint64_t sub_1C254C850()
{
  return MEMORY[0x1F40E4908]();
}

uint64_t sub_1C254C860()
{
  return MEMORY[0x1F40E4970]();
}

uint64_t sub_1C254C870()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_1C254C880()
{
  return MEMORY[0x1F40E4A50]();
}

uint64_t sub_1C254C890()
{
  return MEMORY[0x1F40E4A68]();
}

uint64_t sub_1C254C8A0()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_1C254C8B0()
{
  return MEMORY[0x1F40E4A80]();
}

uint64_t sub_1C254C8C0()
{
  return MEMORY[0x1F40E4AA0]();
}

uint64_t sub_1C254C8D0()
{
  return MEMORY[0x1F40E4AC0]();
}

uint64_t sub_1C254C8E0()
{
  return MEMORY[0x1F40E4B00]();
}

uint64_t sub_1C254C8F0()
{
  return MEMORY[0x1F40E4B20]();
}

uint64_t sub_1C254C900()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_1C254C910()
{
  return MEMORY[0x1F40E4C30]();
}

uint64_t sub_1C254C920()
{
  return MEMORY[0x1F40E4C40]();
}

uint64_t sub_1C254C930()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_1C254C940()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_1C254C950()
{
  return MEMORY[0x1F40E4ED0]();
}

uint64_t sub_1C254C960()
{
  return MEMORY[0x1F40E4F68]();
}

uint64_t sub_1C254C970()
{
  return MEMORY[0x1F40E4F78]();
}

uint64_t sub_1C254C980()
{
  return MEMORY[0x1F40E4FB8]();
}

uint64_t sub_1C254C990()
{
  return MEMORY[0x1F40E4FD0]();
}

uint64_t sub_1C254C9A0()
{
  return MEMORY[0x1F40E4FD8]();
}

uint64_t sub_1C254C9B0()
{
  return MEMORY[0x1F40E4FF0]();
}

uint64_t sub_1C254C9C0()
{
  return MEMORY[0x1F40E5058]();
}

uint64_t sub_1C254C9D0()
{
  return MEMORY[0x1F40E5088]();
}

uint64_t sub_1C254C9E0()
{
  return MEMORY[0x1F411D698]();
}

uint64_t sub_1C254C9F0()
{
  return MEMORY[0x1F411D6A0]();
}

uint64_t sub_1C254CA00()
{
  return MEMORY[0x1F411D6A8]();
}

uint64_t sub_1C254CA10()
{
  return MEMORY[0x1F411D6B0]();
}

uint64_t sub_1C254CA20()
{
  return MEMORY[0x1F411D6B8]();
}

uint64_t sub_1C254CA30()
{
  return MEMORY[0x1F40E50E0]();
}

uint64_t sub_1C254CA40()
{
  return MEMORY[0x1F40E5158]();
}

uint64_t sub_1C254CA50()
{
  return MEMORY[0x1F40E5188]();
}

uint64_t sub_1C254CA60()
{
  return MEMORY[0x1F40E5198]();
}

uint64_t sub_1C254CA70()
{
  return MEMORY[0x1F40E51A8]();
}

uint64_t sub_1C254CA80()
{
  return MEMORY[0x1F40E52E0]();
}

uint64_t sub_1C254CA90()
{
  return MEMORY[0x1F40E52F0]();
}

uint64_t sub_1C254CAA0()
{
  return MEMORY[0x1F40E5320]();
}

uint64_t sub_1C254CAB0()
{
  return MEMORY[0x1F40E5358]();
}

uint64_t sub_1C254CAC0()
{
  return MEMORY[0x1F40E5378]();
}

uint64_t sub_1C254CAD0()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_1C254CAE0()
{
  return MEMORY[0x1F40E53A0]();
}

uint64_t sub_1C254CAF0()
{
  return MEMORY[0x1F40E53B0]();
}

uint64_t sub_1C254CB00()
{
  return MEMORY[0x1F40E53C8]();
}

uint64_t sub_1C254CB10()
{
  return MEMORY[0x1F40E53E8]();
}

uint64_t sub_1C254CB20()
{
  return MEMORY[0x1F40E53F8]();
}

uint64_t sub_1C254CB30()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_1C254CB40()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_1C254CB50()
{
  return MEMORY[0x1F40E5500]();
}

uint64_t sub_1C254CB60()
{
  return MEMORY[0x1F40E5510]();
}

uint64_t sub_1C254CB70()
{
  return MEMORY[0x1F40E55D0]();
}

uint64_t sub_1C254CB80()
{
  return MEMORY[0x1F40E5648]();
}

uint64_t sub_1C254CB90()
{
  return MEMORY[0x1F40E56B0]();
}

uint64_t sub_1C254CBA0()
{
  return MEMORY[0x1F40E56C8]();
}

uint64_t sub_1C254CBB0()
{
  return MEMORY[0x1F40E5718]();
}

uint64_t sub_1C254CBC0()
{
  return MEMORY[0x1F40E5728]();
}

uint64_t sub_1C254CBD0()
{
  return MEMORY[0x1F40E5890]();
}

uint64_t sub_1C254CBE0()
{
  return MEMORY[0x1F40E58A8]();
}

uint64_t sub_1C254CBF0()
{
  return MEMORY[0x1F40E58B0]();
}

uint64_t sub_1C254CC00()
{
  return MEMORY[0x1F40E58D0]();
}

uint64_t sub_1C254CC10()
{
  return MEMORY[0x1F40E5960]();
}

uint64_t sub_1C254CC20()
{
  return MEMORY[0x1F40E5978]();
}

uint64_t sub_1C254CC30()
{
  return MEMORY[0x1F40E59E0]();
}

uint64_t sub_1C254CC40()
{
  return MEMORY[0x1F40E5A18]();
}

uint64_t sub_1C254CC50()
{
  return MEMORY[0x1F40E5A40]();
}

uint64_t sub_1C254CC60()
{
  return MEMORY[0x1F40E5A58]();
}

uint64_t sub_1C254CC70()
{
  return MEMORY[0x1F40E5A98]();
}

uint64_t sub_1C254CC80()
{
  return MEMORY[0x1F40E5AB8]();
}

uint64_t sub_1C254CC90()
{
  return MEMORY[0x1F40E5AC8]();
}

uint64_t sub_1C254CCA0()
{
  return MEMORY[0x1F40E5AE0]();
}

uint64_t sub_1C254CCB0()
{
  return MEMORY[0x1F40E5AF0]();
}

uint64_t sub_1C254CCC0()
{
  return MEMORY[0x1F40E5B18]();
}

uint64_t sub_1C254CCD0()
{
  return MEMORY[0x1F40E5BA0]();
}

uint64_t sub_1C254CCE0()
{
  return MEMORY[0x1F40E5C38]();
}

uint64_t sub_1C254CCF0()
{
  return MEMORY[0x1F40E5CA8]();
}

uint64_t sub_1C254CD00()
{
  return MEMORY[0x1F40E5D20]();
}

uint64_t sub_1C254CD10()
{
  return MEMORY[0x1F40E5D28]();
}

uint64_t sub_1C254CD20()
{
  return MEMORY[0x1F40E5D70]();
}

uint64_t sub_1C254CD30()
{
  return MEMORY[0x1F40E5E68]();
}

uint64_t sub_1C254CD40()
{
  return MEMORY[0x1F40E5EA0]();
}

uint64_t sub_1C254CD50()
{
  return MEMORY[0x1F4165708]();
}

uint64_t sub_1C254CD60()
{
  return MEMORY[0x1F4165718]();
}

uint64_t sub_1C254CD70()
{
  return MEMORY[0x1F4165748]();
}

uint64_t sub_1C254CD80()
{
  return MEMORY[0x1F4165760]();
}

uint64_t sub_1C254CD90()
{
  return MEMORY[0x1F40E5EF0]();
}

uint64_t sub_1C254CDA0()
{
  return MEMORY[0x1F40D9648]();
}

uint64_t sub_1C254CDB0()
{
  return MEMORY[0x1F411E0D0]();
}

uint64_t sub_1C254CDC0()
{
  return MEMORY[0x1F411E0F0]();
}

uint64_t sub_1C254CDD0()
{
  return MEMORY[0x1F411E0F8]();
}

uint64_t sub_1C254CDE0()
{
  return MEMORY[0x1F411E100]();
}

uint64_t sub_1C254CDF0()
{
  return MEMORY[0x1F411FDA0]();
}

uint64_t sub_1C254CE00()
{
  return MEMORY[0x1F411FDA8]();
}

uint64_t sub_1C254CE10()
{
  return MEMORY[0x1F411FE40]();
}

uint64_t sub_1C254CE30()
{
  return MEMORY[0x1F411FE70]();
}

uint64_t sub_1C254CE40()
{
  return MEMORY[0x1F411FE80]();
}

uint64_t sub_1C254CE50()
{
  return MEMORY[0x1F411FEA0]();
}

uint64_t sub_1C254CE60()
{
  return MEMORY[0x1F411FEA8]();
}

uint64_t sub_1C254CE70()
{
  return MEMORY[0x1F411FEC0]();
}

uint64_t sub_1C254CE80()
{
  return MEMORY[0x1F411FEC8]();
}

uint64_t sub_1C254CE90()
{
  return MEMORY[0x1F411FED0]();
}

uint64_t sub_1C254CEA0()
{
  return MEMORY[0x1F411FED8]();
}

uint64_t sub_1C254CEB0()
{
  return MEMORY[0x1F411FF10]();
}

uint64_t sub_1C254CEC0()
{
  return MEMORY[0x1F411FF18]();
}

uint64_t sub_1C254CED0()
{
  return MEMORY[0x1F411FF20]();
}

uint64_t sub_1C254CEE0()
{
  return MEMORY[0x1F411FF28]();
}

uint64_t sub_1C254CEF0()
{
  return MEMORY[0x1F411FF68]();
}

uint64_t sub_1C254CF00()
{
  return MEMORY[0x1F4120000]();
}

uint64_t sub_1C254CF10()
{
  return MEMORY[0x1F4120038]();
}

uint64_t sub_1C254CF20()
{
  return MEMORY[0x1F411D6C0]();
}

uint64_t sub_1C254CF30()
{
  return MEMORY[0x1F411E110]();
}

uint64_t sub_1C254CF40()
{
  return MEMORY[0x1F4120090]();
}

uint64_t sub_1C254CF50()
{
  return MEMORY[0x1F41200D8]();
}

uint64_t sub_1C254CF70()
{
  return MEMORY[0x1F4120108]();
}

uint64_t sub_1C254CF80()
{
  return MEMORY[0x1F4120180]();
}

uint64_t sub_1C254CF90()
{
  return MEMORY[0x1F41201B8]();
}

uint64_t sub_1C254CFA0()
{
  return MEMORY[0x1F4120208]();
}

uint64_t sub_1C254CFB0()
{
  return MEMORY[0x1F4120210]();
}

uint64_t sub_1C254CFC0()
{
  return MEMORY[0x1F4120228]();
}

uint64_t sub_1C254CFD0()
{
  return MEMORY[0x1F4120230]();
}

uint64_t sub_1C254CFE0()
{
  return MEMORY[0x1F4120460]();
}

uint64_t sub_1C254CFF0()
{
  return MEMORY[0x1F4120468]();
}

uint64_t sub_1C254D000()
{
  return MEMORY[0x1F4120540]();
}

uint64_t sub_1C254D010()
{
  return MEMORY[0x1F4120548]();
}

uint64_t sub_1C254D020()
{
  return MEMORY[0x1F4120550]();
}

uint64_t sub_1C254D030()
{
  return MEMORY[0x1F4120558]();
}

uint64_t sub_1C254D040()
{
  return MEMORY[0x1F4120700]();
}

uint64_t sub_1C254D050()
{
  return MEMORY[0x1F4120710]();
}

uint64_t sub_1C254D060()
{
  return MEMORY[0x1F4120A10]();
}

uint64_t sub_1C254D070()
{
  return MEMORY[0x1F4120A18]();
}

uint64_t sub_1C254D080()
{
  return MEMORY[0x1F4120AA0]();
}

uint64_t sub_1C254D090()
{
  return MEMORY[0x1F4120AB8]();
}

uint64_t sub_1C254D0A0()
{
  return MEMORY[0x1F4120E18]();
}

uint64_t sub_1C254D0B0()
{
  return MEMORY[0x1F4120E20]();
}

uint64_t sub_1C254D0C0()
{
  return MEMORY[0x1F4120E28]();
}

uint64_t sub_1C254D0D0()
{
  return MEMORY[0x1F4120E38]();
}

uint64_t sub_1C254D0E0()
{
  return MEMORY[0x1F4120B38]();
}

uint64_t sub_1C254D0F0()
{
  return MEMORY[0x1F4120BC0]();
}

uint64_t sub_1C254D100()
{
  return MEMORY[0x1F4120BD8]();
}

uint64_t sub_1C254D110()
{
  return MEMORY[0x1F4120BE0]();
}

uint64_t sub_1C254D120()
{
  return MEMORY[0x1F411D850]();
}

uint64_t sub_1C254D130()
{
  return MEMORY[0x1F411D858]();
}

uint64_t sub_1C254D140()
{
  return MEMORY[0x1F411D918]();
}

uint64_t sub_1C254D160()
{
  return MEMORY[0x1F411D960]();
}

uint64_t sub_1C254D170()
{
  return MEMORY[0x1F411D968]();
}

uint64_t sub_1C254D180()
{
  return MEMORY[0x1F411DB00]();
}

uint64_t sub_1C254D190()
{
  return MEMORY[0x1F411DB08]();
}

uint64_t sub_1C254D1A0()
{
  return MEMORY[0x1F411DCF0]();
}

uint64_t sub_1C254D1B0()
{
  return MEMORY[0x1F411DD68]();
}

uint64_t sub_1C254D1C0()
{
  return MEMORY[0x1F4121098]();
}

uint64_t sub_1C254D1D0()
{
  return MEMORY[0x1F41210A0]();
}

uint64_t sub_1C254D1E0()
{
  return MEMORY[0x1F411CF10]();
}

uint64_t sub_1C254D1F0()
{
  return MEMORY[0x1F411CF18]();
}

uint64_t sub_1C254D200()
{
  return MEMORY[0x1F411CF20]();
}

uint64_t sub_1C254D210()
{
  return MEMORY[0x1F411CF28]();
}

uint64_t sub_1C254D220()
{
  return MEMORY[0x1F411E120]();
}

uint64_t sub_1C254D230()
{
  return MEMORY[0x1F411E130]();
}

uint64_t sub_1C254D240()
{
  return MEMORY[0x1F411E138]();
}

uint64_t sub_1C254D250()
{
  return MEMORY[0x1F411E140]();
}

uint64_t sub_1C254D260()
{
  return MEMORY[0x1F411E148]();
}

uint64_t sub_1C254D280()
{
  return MEMORY[0x1F411E158]();
}

uint64_t sub_1C254D290()
{
  return MEMORY[0x1F411E160]();
}

uint64_t sub_1C254D2A0()
{
  return MEMORY[0x1F411E168]();
}

uint64_t sub_1C254D2C0()
{
  return MEMORY[0x1F411E1A0]();
}

uint64_t sub_1C254D2D0()
{
  return MEMORY[0x1F411E1D8]();
}

uint64_t sub_1C254D2E0()
{
  return MEMORY[0x1F411E1E0]();
}

uint64_t sub_1C254D2F0()
{
  return MEMORY[0x1F411E1E8]();
}

uint64_t sub_1C254D300()
{
  return MEMORY[0x1F411E1F0]();
}

uint64_t sub_1C254D310()
{
  return MEMORY[0x1F411E200]();
}

uint64_t sub_1C254D320()
{
  return MEMORY[0x1F411E210]();
}

uint64_t sub_1C254D330()
{
  return MEMORY[0x1F411E220]();
}

uint64_t sub_1C254D340()
{
  return MEMORY[0x1F411E258]();
}

uint64_t sub_1C254D350()
{
  return MEMORY[0x1F411E270]();
}

uint64_t sub_1C254D360()
{
  return MEMORY[0x1F411E278]();
}

uint64_t sub_1C254D370()
{
  return MEMORY[0x1F411E280]();
}

uint64_t sub_1C254D380()
{
  return MEMORY[0x1F411E288]();
}

uint64_t sub_1C254D390()
{
  return MEMORY[0x1F411E2B8]();
}

uint64_t sub_1C254D3A0()
{
  return MEMORY[0x1F411E2C0]();
}

uint64_t sub_1C254D3B0()
{
  return MEMORY[0x1F411E2C8]();
}

uint64_t sub_1C254D3C0()
{
  return MEMORY[0x1F411E2D0]();
}

uint64_t sub_1C254D3D0()
{
  return MEMORY[0x1F411E2D8]();
}

uint64_t sub_1C254D3E0()
{
  return MEMORY[0x1F411E2F0]();
}

uint64_t sub_1C254D3F0()
{
  return MEMORY[0x1F411E2F8]();
}

uint64_t sub_1C254D400()
{
  return MEMORY[0x1F411E300]();
}

uint64_t sub_1C254D410()
{
  return MEMORY[0x1F411E308]();
}

uint64_t sub_1C254D420()
{
  return MEMORY[0x1F411E310]();
}

uint64_t sub_1C254D430()
{
  return MEMORY[0x1F411E318]();
}

uint64_t sub_1C254D440()
{
  return MEMORY[0x1F411E320]();
}

uint64_t sub_1C254D450()
{
  return MEMORY[0x1F411E348]();
}

uint64_t sub_1C254D460()
{
  return MEMORY[0x1F411E350]();
}

uint64_t sub_1C254D470()
{
  return MEMORY[0x1F411E360]();
}

uint64_t sub_1C254D480()
{
  return MEMORY[0x1F411E368]();
}

uint64_t sub_1C254D490()
{
  return MEMORY[0x1F411E370]();
}

uint64_t sub_1C254D4A0()
{
  return MEMORY[0x1F411E378]();
}

uint64_t sub_1C254D4B0()
{
  return MEMORY[0x1F411E380]();
}

uint64_t sub_1C254D4C0()
{
  return MEMORY[0x1F411E388]();
}

uint64_t sub_1C254D4D0()
{
  return MEMORY[0x1F411E390]();
}

uint64_t sub_1C254D4E0()
{
  return MEMORY[0x1F411E3A8]();
}

uint64_t sub_1C254D4F0()
{
  return MEMORY[0x1F411E3B0]();
}

uint64_t sub_1C254D500()
{
  return MEMORY[0x1F411E3B8]();
}

uint64_t sub_1C254D510()
{
  return MEMORY[0x1F411E3C0]();
}

uint64_t sub_1C254D520()
{
  return MEMORY[0x1F411E3C8]();
}

uint64_t sub_1C254D530()
{
  return MEMORY[0x1F411E3D0]();
}

uint64_t sub_1C254D540()
{
  return MEMORY[0x1F411E3D8]();
}

uint64_t sub_1C254D550()
{
  return MEMORY[0x1F411E3E0]();
}

uint64_t sub_1C254D560()
{
  return MEMORY[0x1F411E400]();
}

uint64_t sub_1C254D570()
{
  return MEMORY[0x1F411E408]();
}

uint64_t sub_1C254D580()
{
  return MEMORY[0x1F411E410]();
}

uint64_t sub_1C254D590()
{
  return MEMORY[0x1F411E418]();
}

uint64_t sub_1C254D5A0()
{
  return MEMORY[0x1F411E420]();
}

uint64_t sub_1C254D5B0()
{
  return MEMORY[0x1F411E428]();
}

uint64_t sub_1C254D5C0()
{
  return MEMORY[0x1F411E430]();
}

uint64_t sub_1C254D5D0()
{
  return MEMORY[0x1F411E438]();
}

uint64_t sub_1C254D5E0()
{
  return MEMORY[0x1F411E440]();
}

uint64_t sub_1C254D5F0()
{
  return MEMORY[0x1F411E448]();
}

uint64_t sub_1C254D600()
{
  return MEMORY[0x1F411E450]();
}

uint64_t sub_1C254D610()
{
  return MEMORY[0x1F411E458]();
}

uint64_t sub_1C254D620()
{
  return MEMORY[0x1F411E460]();
}

uint64_t sub_1C254D630()
{
  return MEMORY[0x1F411E468]();
}

uint64_t sub_1C254D640()
{
  return MEMORY[0x1F411E470]();
}

uint64_t sub_1C254D650()
{
  return MEMORY[0x1F411E480]();
}

uint64_t sub_1C254D660()
{
  return MEMORY[0x1F411E488]();
}

uint64_t sub_1C254D670()
{
  return MEMORY[0x1F411E490]();
}

uint64_t sub_1C254D680()
{
  return MEMORY[0x1F411E498]();
}

uint64_t sub_1C254D690()
{
  return MEMORY[0x1F411E4A0]();
}

uint64_t sub_1C254D6A0()
{
  return MEMORY[0x1F411E4A8]();
}

uint64_t sub_1C254D6B0()
{
  return MEMORY[0x1F411E4B0]();
}

uint64_t sub_1C254D6C0()
{
  return MEMORY[0x1F411E4C0]();
}

uint64_t sub_1C254D6D0()
{
  return MEMORY[0x1F411E4C8]();
}

uint64_t sub_1C254D6E0()
{
  return MEMORY[0x1F411E4D0]();
}

uint64_t sub_1C254D6F0()
{
  return MEMORY[0x1F411E4D8]();
}

uint64_t sub_1C254D700()
{
  return MEMORY[0x1F411E4E0]();
}

uint64_t sub_1C254D710()
{
  return MEMORY[0x1F411E4F0]();
}

uint64_t sub_1C254D720()
{
  return MEMORY[0x1F411E4F8]();
}

uint64_t sub_1C254D730()
{
  return MEMORY[0x1F411E508]();
}

uint64_t sub_1C254D740()
{
  return MEMORY[0x1F411E510]();
}

uint64_t sub_1C254D750()
{
  return MEMORY[0x1F411E518]();
}

uint64_t sub_1C254D760()
{
  return MEMORY[0x1F411E520]();
}

uint64_t sub_1C254D770()
{
  return MEMORY[0x1F411E528]();
}

uint64_t sub_1C254D780()
{
  return MEMORY[0x1F411E530]();
}

uint64_t sub_1C254D790()
{
  return MEMORY[0x1F411E538]();
}

uint64_t sub_1C254D7A0()
{
  return MEMORY[0x1F411E548]();
}

uint64_t sub_1C254D7B0()
{
  return MEMORY[0x1F411E550]();
}

uint64_t sub_1C254D7C0()
{
  return MEMORY[0x1F411E558]();
}

uint64_t sub_1C254D7D0()
{
  return MEMORY[0x1F411E560]();
}

uint64_t sub_1C254D7E0()
{
  return MEMORY[0x1F411E568]();
}

uint64_t sub_1C254D7F0()
{
  return MEMORY[0x1F411E5B8]();
}

uint64_t sub_1C254D800()
{
  return MEMORY[0x1F411E5D8]();
}

uint64_t sub_1C254D810()
{
  return MEMORY[0x1F411E5E0]();
}

uint64_t sub_1C254D820()
{
  return MEMORY[0x1F411E5F8]();
}

uint64_t sub_1C254D830()
{
  return MEMORY[0x1F411E600]();
}

uint64_t sub_1C254D840()
{
  return MEMORY[0x1F411E608]();
}

uint64_t sub_1C254D850()
{
  return MEMORY[0x1F411E610]();
}

uint64_t sub_1C254D860()
{
  return MEMORY[0x1F411E618]();
}

uint64_t sub_1C254D870()
{
  return MEMORY[0x1F411E620]();
}

uint64_t sub_1C254D880()
{
  return MEMORY[0x1F411E628]();
}

uint64_t sub_1C254D890()
{
  return MEMORY[0x1F411E630]();
}

uint64_t sub_1C254D8A0()
{
  return MEMORY[0x1F411E638]();
}

uint64_t sub_1C254D8B0()
{
  return MEMORY[0x1F411E640]();
}

uint64_t sub_1C254D8C0()
{
  return MEMORY[0x1F411E648]();
}

uint64_t sub_1C254D8D0()
{
  return MEMORY[0x1F411E650]();
}

uint64_t sub_1C254D8E0()
{
  return MEMORY[0x1F411E658]();
}

uint64_t sub_1C254D8F0()
{
  return MEMORY[0x1F411E660]();
}

uint64_t sub_1C254D900()
{
  return MEMORY[0x1F411E668]();
}

uint64_t sub_1C254D910()
{
  return MEMORY[0x1F411E670]();
}

uint64_t sub_1C254D920()
{
  return MEMORY[0x1F411E678]();
}

uint64_t sub_1C254D930()
{
  return MEMORY[0x1F411E698]();
}

uint64_t sub_1C254D940()
{
  return MEMORY[0x1F411E6A0]();
}

uint64_t sub_1C254D950()
{
  return MEMORY[0x1F411E6A8]();
}

uint64_t sub_1C254D960()
{
  return MEMORY[0x1F411E6B8]();
}

uint64_t sub_1C254D970()
{
  return MEMORY[0x1F411E6C0]();
}

uint64_t sub_1C254D980()
{
  return MEMORY[0x1F411E6C8]();
}

uint64_t sub_1C254D990()
{
  return MEMORY[0x1F411E6D0]();
}

uint64_t sub_1C254D9A0()
{
  return MEMORY[0x1F411E6D8]();
}

uint64_t sub_1C254D9B0()
{
  return MEMORY[0x1F411E6E0]();
}

uint64_t sub_1C254D9C0()
{
  return MEMORY[0x1F411E700]();
}

uint64_t sub_1C254D9D0()
{
  return MEMORY[0x1F411E710]();
}

uint64_t sub_1C254D9E0()
{
  return MEMORY[0x1F411E720]();
}

uint64_t sub_1C254D9F0()
{
  return MEMORY[0x1F411E730]();
}

uint64_t sub_1C254DA00()
{
  return MEMORY[0x1F411E738]();
}

uint64_t sub_1C254DA10()
{
  return MEMORY[0x1F411E740]();
}

uint64_t sub_1C254DA20()
{
  return MEMORY[0x1F411E748]();
}

uint64_t sub_1C254DA30()
{
  return MEMORY[0x1F411E758]();
}

uint64_t sub_1C254DA40()
{
  return MEMORY[0x1F411E788]();
}

uint64_t sub_1C254DA50()
{
  return MEMORY[0x1F411E790]();
}

uint64_t sub_1C254DA60()
{
  return MEMORY[0x1F411E798]();
}

uint64_t sub_1C254DA70()
{
  return MEMORY[0x1F411E7A8]();
}

uint64_t sub_1C254DA80()
{
  return MEMORY[0x1F411E7B8]();
}

uint64_t sub_1C254DA90()
{
  return MEMORY[0x1F411E7C0]();
}

uint64_t sub_1C254DAA0()
{
  return MEMORY[0x1F411E7C8]();
}

uint64_t sub_1C254DAB0()
{
  return MEMORY[0x1F411E7D0]();
}

uint64_t sub_1C254DAC0()
{
  return MEMORY[0x1F411E7D8]();
}

uint64_t sub_1C254DAD0()
{
  return MEMORY[0x1F411E7E8]();
}

uint64_t sub_1C254DAE0()
{
  return MEMORY[0x1F411E7F0]();
}

uint64_t sub_1C254DAF0()
{
  return MEMORY[0x1F411E800]();
}

uint64_t sub_1C254DB00()
{
  return MEMORY[0x1F411E810]();
}

uint64_t sub_1C254DB10()
{
  return MEMORY[0x1F411E820]();
}

uint64_t sub_1C254DB20()
{
  return MEMORY[0x1F411E828]();
}

uint64_t sub_1C254DB30()
{
  return MEMORY[0x1F411E830]();
}

uint64_t sub_1C254DB40()
{
  return MEMORY[0x1F411E838]();
}

uint64_t sub_1C254DB50()
{
  return MEMORY[0x1F411E840]();
}

uint64_t sub_1C254DB60()
{
  return MEMORY[0x1F411E848]();
}

uint64_t sub_1C254DB70()
{
  return MEMORY[0x1F411E850]();
}

uint64_t sub_1C254DB80()
{
  return MEMORY[0x1F411E858]();
}

uint64_t sub_1C254DB90()
{
  return MEMORY[0x1F411E860]();
}

uint64_t sub_1C254DBA0()
{
  return MEMORY[0x1F411E890]();
}

uint64_t sub_1C254DBB0()
{
  return MEMORY[0x1F411E8A8]();
}

uint64_t sub_1C254DBC0()
{
  return MEMORY[0x1F411E8B0]();
}

uint64_t sub_1C254DBD0()
{
  return MEMORY[0x1F411E8B8]();
}

uint64_t sub_1C254DBE0()
{
  return MEMORY[0x1F411E8C0]();
}

uint64_t sub_1C254DBF0()
{
  return MEMORY[0x1F411E8C8]();
}

uint64_t sub_1C254DC00()
{
  return MEMORY[0x1F411E8D0]();
}

uint64_t sub_1C254DC10()
{
  return MEMORY[0x1F411E918]();
}

uint64_t sub_1C254DC20()
{
  return MEMORY[0x1F411E920]();
}

uint64_t sub_1C254DC30()
{
  return MEMORY[0x1F411E928]();
}

uint64_t sub_1C254DC40()
{
  return MEMORY[0x1F411E930]();
}

uint64_t sub_1C254DC50()
{
  return MEMORY[0x1F411E958]();
}

uint64_t sub_1C254DC60()
{
  return MEMORY[0x1F411E970]();
}

uint64_t sub_1C254DC70()
{
  return MEMORY[0x1F411E978]();
}

uint64_t sub_1C254DC80()
{
  return MEMORY[0x1F411E980]();
}

uint64_t sub_1C254DC90()
{
  return MEMORY[0x1F411E988]();
}

uint64_t sub_1C254DCA0()
{
  return MEMORY[0x1F411E990]();
}

uint64_t sub_1C254DCB0()
{
  return MEMORY[0x1F411E998]();
}

uint64_t sub_1C254DCC0()
{
  return MEMORY[0x1F411E9A0]();
}

uint64_t sub_1C254DCD0()
{
  return MEMORY[0x1F411E9A8]();
}

uint64_t sub_1C254DCE0()
{
  return MEMORY[0x1F411E9B0]();
}

uint64_t sub_1C254DCF0()
{
  return MEMORY[0x1F411E9B8]();
}

uint64_t sub_1C254DD00()
{
  return MEMORY[0x1F411E9C0]();
}

uint64_t sub_1C254DD10()
{
  return MEMORY[0x1F411EA08]();
}

uint64_t sub_1C254DD20()
{
  return MEMORY[0x1F411EA10]();
}

uint64_t sub_1C254DD30()
{
  return MEMORY[0x1F411EA38]();
}

uint64_t sub_1C254DD40()
{
  return MEMORY[0x1F411EA40]();
}

uint64_t sub_1C254DD50()
{
  return MEMORY[0x1F411EA48]();
}

uint64_t sub_1C254DD60()
{
  return MEMORY[0x1F411EA50]();
}

uint64_t sub_1C254DD70()
{
  return MEMORY[0x1F411EA70]();
}

uint64_t sub_1C254DD80()
{
  return MEMORY[0x1F411EA78]();
}

uint64_t sub_1C254DD90()
{
  return MEMORY[0x1F411EA80]();
}

uint64_t sub_1C254DDA0()
{
  return MEMORY[0x1F411EA98]();
}

uint64_t sub_1C254DDB0()
{
  return MEMORY[0x1F411EAA8]();
}

uint64_t sub_1C254DDC0()
{
  return MEMORY[0x1F411EAB0]();
}

uint64_t sub_1C254DDD0()
{
  return MEMORY[0x1F411EAC0]();
}

uint64_t sub_1C254DDE0()
{
  return MEMORY[0x1F411EAC8]();
}

uint64_t sub_1C254DDF0()
{
  return MEMORY[0x1F411EAD0]();
}

uint64_t sub_1C254DE00()
{
  return MEMORY[0x1F411EAD8]();
}

uint64_t sub_1C254DE10()
{
  return MEMORY[0x1F411EAE0]();
}

uint64_t sub_1C254DE20()
{
  return MEMORY[0x1F411EAE8]();
}

uint64_t sub_1C254DE30()
{
  return MEMORY[0x1F411EAF0]();
}

uint64_t sub_1C254DE40()
{
  return MEMORY[0x1F411EAF8]();
}

uint64_t sub_1C254DE50()
{
  return MEMORY[0x1F411EB00]();
}

uint64_t sub_1C254DE60()
{
  return MEMORY[0x1F411EB08]();
}

uint64_t sub_1C254DE70()
{
  return MEMORY[0x1F411EB10]();
}

uint64_t sub_1C254DE80()
{
  return MEMORY[0x1F411EB38]();
}

uint64_t sub_1C254DE90()
{
  return MEMORY[0x1F411EB48]();
}

uint64_t sub_1C254DEA0()
{
  return MEMORY[0x1F411EB50]();
}

uint64_t sub_1C254DEB0()
{
  return MEMORY[0x1F411EB58]();
}

uint64_t sub_1C254DEC0()
{
  return MEMORY[0x1F411EB60]();
}

uint64_t sub_1C254DED0()
{
  return MEMORY[0x1F411EB68]();
}

uint64_t sub_1C254DEE0()
{
  return MEMORY[0x1F411EB70]();
}

uint64_t sub_1C254DEF0()
{
  return MEMORY[0x1F411EB88]();
}

uint64_t sub_1C254DF00()
{
  return MEMORY[0x1F411EB90]();
}

uint64_t sub_1C254DF10()
{
  return MEMORY[0x1F411EBA0]();
}

uint64_t sub_1C254DF20()
{
  return MEMORY[0x1F411EBB0]();
}

uint64_t sub_1C254DF30()
{
  return MEMORY[0x1F411EBB8]();
}

uint64_t sub_1C254DF40()
{
  return MEMORY[0x1F411EBC0]();
}

uint64_t sub_1C254DF50()
{
  return MEMORY[0x1F411EBD8]();
}

uint64_t sub_1C254DF60()
{
  return MEMORY[0x1F411EBE0]();
}

uint64_t sub_1C254DF70()
{
  return MEMORY[0x1F411EBE8]();
}

uint64_t sub_1C254DF80()
{
  return MEMORY[0x1F411EBF0]();
}

uint64_t sub_1C254DF90()
{
  return MEMORY[0x1F411EC20]();
}

uint64_t sub_1C254DFA0()
{
  return MEMORY[0x1F411EC28]();
}

uint64_t sub_1C254DFB0()
{
  return MEMORY[0x1F411EC30]();
}

uint64_t sub_1C254DFC0()
{
  return MEMORY[0x1F411EC48]();
}

uint64_t sub_1C254DFD0()
{
  return MEMORY[0x1F411EC58]();
}

uint64_t sub_1C254DFE0()
{
  return MEMORY[0x1F411EC60]();
}

uint64_t sub_1C254DFF0()
{
  return MEMORY[0x1F411EC68]();
}

uint64_t sub_1C254E000()
{
  return MEMORY[0x1F411EC70]();
}

uint64_t sub_1C254E010()
{
  return MEMORY[0x1F411EC78]();
}

uint64_t sub_1C254E020()
{
  return MEMORY[0x1F411EC80]();
}

uint64_t sub_1C254E030()
{
  return MEMORY[0x1F411EC98]();
}

uint64_t sub_1C254E040()
{
  return MEMORY[0x1F411ECC8]();
}

uint64_t sub_1C254E050()
{
  return MEMORY[0x1F411ECD0]();
}

uint64_t sub_1C254E060()
{
  return MEMORY[0x1F411ECE0]();
}

uint64_t sub_1C254E070()
{
  return MEMORY[0x1F411ECE8]();
}

uint64_t sub_1C254E080()
{
  return MEMORY[0x1F411ECF0]();
}

uint64_t sub_1C254E090()
{
  return MEMORY[0x1F411ECF8]();
}

uint64_t sub_1C254E0A0()
{
  return MEMORY[0x1F411ED00]();
}

uint64_t sub_1C254E0B0()
{
  return MEMORY[0x1F411ED08]();
}

uint64_t sub_1C254E0C0()
{
  return MEMORY[0x1F411ED10]();
}

uint64_t sub_1C254E0D0()
{
  return MEMORY[0x1F411ED18]();
}

uint64_t sub_1C254E0E0()
{
  return MEMORY[0x1F411ED20]();
}

uint64_t sub_1C254E0F0()
{
  return MEMORY[0x1F411ED38]();
}

uint64_t sub_1C254E100()
{
  return MEMORY[0x1F411ED48]();
}

uint64_t sub_1C254E110()
{
  return MEMORY[0x1F411ED50]();
}

uint64_t sub_1C254E120()
{
  return MEMORY[0x1F411ED58]();
}

uint64_t sub_1C254E130()
{
  return MEMORY[0x1F411ED70]();
}

uint64_t sub_1C254E140()
{
  return MEMORY[0x1F411ED80]();
}

uint64_t sub_1C254E150()
{
  return MEMORY[0x1F411ED88]();
}

uint64_t sub_1C254E160()
{
  return MEMORY[0x1F411ED90]();
}

uint64_t sub_1C254E170()
{
  return MEMORY[0x1F411EDA8]();
}

uint64_t sub_1C254E180()
{
  return MEMORY[0x1F411EDB0]();
}

uint64_t sub_1C254E190()
{
  return MEMORY[0x1F411EDC8]();
}

uint64_t sub_1C254E1A0()
{
  return MEMORY[0x1F411EDD0]();
}

uint64_t sub_1C254E1B0()
{
  return MEMORY[0x1F411EDD8]();
}

uint64_t sub_1C254E1C0()
{
  return MEMORY[0x1F411EDE0]();
}

uint64_t sub_1C254E1D0()
{
  return MEMORY[0x1F411F028]();
}

uint64_t sub_1C254E1E0()
{
  return MEMORY[0x1F411F030]();
}

uint64_t sub_1C254E1F0()
{
  return MEMORY[0x1F411F100]();
}

uint64_t sub_1C254E200()
{
  return MEMORY[0x1F411F108]();
}

uint64_t sub_1C254E210()
{
  return MEMORY[0x1F411F110]();
}

uint64_t sub_1C254E220()
{
  return MEMORY[0x1F411F118]();
}

uint64_t sub_1C254E230()
{
  return MEMORY[0x1F411F120]();
}

uint64_t sub_1C254E240()
{
  return MEMORY[0x1F4120F68]();
}

uint64_t sub_1C254E250()
{
  return MEMORY[0x1F4120F88]();
}

uint64_t sub_1C254E260()
{
  return MEMORY[0x1F41210D8]();
}

uint64_t sub_1C254E270()
{
  return MEMORY[0x1F41210E0]();
}

uint64_t sub_1C254E280()
{
  return MEMORY[0x1F41210E8]();
}

uint64_t sub_1C254E290()
{
  return MEMORY[0x1F41210F0]();
}

uint64_t sub_1C254E2A0()
{
  return MEMORY[0x1F4187858]();
}

uint64_t sub_1C254E2B0()
{
  return MEMORY[0x1F41878C8]();
}

uint64_t sub_1C254E2D0()
{
  return MEMORY[0x1F41878F8]();
}

uint64_t sub_1C254E2E0()
{
  return MEMORY[0x1F4187910]();
}

uint64_t sub_1C254E2F0()
{
  return MEMORY[0x1F4187920]();
}

uint64_t sub_1C254E300()
{
  return MEMORY[0x1F4187958]();
}

uint64_t sub_1C254E310()
{
  return MEMORY[0x1F41879A0]();
}

uint64_t sub_1C254E320()
{
  return MEMORY[0x1F41879E0]();
}

uint64_t sub_1C254E330()
{
  return MEMORY[0x1F4187A08]();
}

uint64_t sub_1C254E340()
{
  return MEMORY[0x1F4187A18]();
}

uint64_t sub_1C254E350()
{
  return MEMORY[0x1F4121398]();
}

uint64_t sub_1C254E360()
{
  return MEMORY[0x1F41213A0]();
}

uint64_t sub_1C254E370()
{
  return MEMORY[0x1F41213A8]();
}

uint64_t sub_1C254E380()
{
  return MEMORY[0x1F41213B0]();
}

uint64_t sub_1C254E390()
{
  return MEMORY[0x1F41213B8]();
}

uint64_t sub_1C254E3A0()
{
  return MEMORY[0x1F41213C0]();
}

uint64_t sub_1C254E3B0()
{
  return MEMORY[0x1F41213C8]();
}

uint64_t sub_1C254E3C0()
{
  return MEMORY[0x1F41213D0]();
}

uint64_t sub_1C254E3D0()
{
  return MEMORY[0x1F41213D8]();
}

uint64_t sub_1C254E3E0()
{
  return MEMORY[0x1F4121140]();
}

uint64_t sub_1C254E3F0()
{
  return MEMORY[0x1F4121150]();
}

uint64_t sub_1C254E400()
{
  return MEMORY[0x1F4121158]();
}

uint64_t sub_1C254E410()
{
  return MEMORY[0x1F4121160]();
}

uint64_t sub_1C254E420()
{
  return MEMORY[0x1F4121168]();
}

uint64_t sub_1C254E430()
{
  return MEMORY[0x1F4121170]();
}

uint64_t sub_1C254E440()
{
  return MEMORY[0x1F4121178]();
}

uint64_t sub_1C254E450()
{
  return MEMORY[0x1F4121180]();
}

uint64_t sub_1C254E460()
{
  return MEMORY[0x1F4121188]();
}

uint64_t sub_1C254E470()
{
  return MEMORY[0x1F4121190]();
}

uint64_t sub_1C254E480()
{
  return MEMORY[0x1F4121198]();
}

uint64_t sub_1C254E490()
{
  return MEMORY[0x1F41211A0]();
}

uint64_t sub_1C254E4A0()
{
  return MEMORY[0x1F41211A8]();
}

uint64_t sub_1C254E4B0()
{
  return MEMORY[0x1F41211B0]();
}

uint64_t sub_1C254E4C0()
{
  return MEMORY[0x1F41211B8]();
}

uint64_t sub_1C254E4D0()
{
  return MEMORY[0x1F41211D0]();
}

uint64_t sub_1C254E4E0()
{
  return MEMORY[0x1F41211D8]();
}

uint64_t sub_1C254E4F0()
{
  return MEMORY[0x1F4120BF0]();
}

uint64_t sub_1C254E500()
{
  return MEMORY[0x1F4120BF8]();
}

uint64_t sub_1C254E510()
{
  return MEMORY[0x1F4120C08]();
}

uint64_t sub_1C254E520()
{
  return MEMORY[0x1F4120C38]();
}

uint64_t sub_1C254E530()
{
  return MEMORY[0x1F4120C68]();
}

uint64_t sub_1C254E540()
{
  return MEMORY[0x1F411F160]();
}

uint64_t sub_1C254E550()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_1C254E560()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_1C254E570()
{
  return MEMORY[0x1F4165770]();
}

uint64_t sub_1C254E580()
{
  return MEMORY[0x1F4165778]();
}

uint64_t sub_1C254E590()
{
  return MEMORY[0x1F41658C8]();
}

uint64_t sub_1C254E5A0()
{
  return MEMORY[0x1F4165900]();
}

uint64_t sub_1C254E5B0()
{
  return MEMORY[0x1F4165918]();
}

uint64_t sub_1C254E5C0()
{
  return MEMORY[0x1F4165958]();
}

uint64_t sub_1C254E5D0()
{
  return MEMORY[0x1F4165960]();
}

uint64_t sub_1C254E5E0()
{
  return MEMORY[0x1F4165968]();
}

uint64_t sub_1C254E5F0()
{
  return MEMORY[0x1F4165988]();
}

uint64_t sub_1C254E600()
{
  return MEMORY[0x1F4165990]();
}

uint64_t sub_1C254E610()
{
  return MEMORY[0x1F41659B0]();
}

uint64_t sub_1C254E620()
{
  return MEMORY[0x1F41659C8]();
}

uint64_t sub_1C254E630()
{
  return MEMORY[0x1F4165A48]();
}

uint64_t sub_1C254E640()
{
  return MEMORY[0x1F4165BC8]();
}

uint64_t sub_1C254E650()
{
  return MEMORY[0x1F4165BD8]();
}

uint64_t sub_1C254E660()
{
  return MEMORY[0x1F4165BE8]();
}

uint64_t sub_1C254E670()
{
  return MEMORY[0x1F4165BF8]();
}

uint64_t sub_1C254E680()
{
  return MEMORY[0x1F4165C00]();
}

uint64_t sub_1C254E690()
{
  return MEMORY[0x1F4165C28]();
}

uint64_t sub_1C254E6A0()
{
  return MEMORY[0x1F4165C30]();
}

uint64_t sub_1C254E6B0()
{
  return MEMORY[0x1F4165C38]();
}

uint64_t sub_1C254E6C0()
{
  return MEMORY[0x1F4165CC8]();
}

uint64_t sub_1C254E6D0()
{
  return MEMORY[0x1F4165CD0]();
}

uint64_t sub_1C254E6E0()
{
  return MEMORY[0x1F4165D08]();
}

uint64_t sub_1C254E6F0()
{
  return MEMORY[0x1F4165D18]();
}

uint64_t sub_1C254E700()
{
  return MEMORY[0x1F4165D28]();
}

uint64_t sub_1C254E710()
{
  return MEMORY[0x1F4165D30]();
}

uint64_t sub_1C254E720()
{
  return MEMORY[0x1F4165D58]();
}

uint64_t sub_1C254E730()
{
  return MEMORY[0x1F4165D80]();
}

uint64_t sub_1C254E740()
{
  return MEMORY[0x1F4165D88]();
}

uint64_t sub_1C254E750()
{
  return MEMORY[0x1F4165DB8]();
}

uint64_t sub_1C254E760()
{
  return MEMORY[0x1F4165DD8]();
}

uint64_t sub_1C254E770()
{
  return MEMORY[0x1F4165DE0]();
}

uint64_t sub_1C254E780()
{
  return MEMORY[0x1F4165DF0]();
}

uint64_t sub_1C254E790()
{
  return MEMORY[0x1F4165E08]();
}

uint64_t sub_1C254E7A0()
{
  return MEMORY[0x1F4165E28]();
}

uint64_t sub_1C254E7B0()
{
  return MEMORY[0x1F4165E30]();
}

uint64_t sub_1C254E7C0()
{
  return MEMORY[0x1F4165E50]();
}

uint64_t sub_1C254E7D0()
{
  return MEMORY[0x1F4165E88]();
}

uint64_t sub_1C254E7E0()
{
  return MEMORY[0x1F4165EA8]();
}

uint64_t sub_1C254E7F0()
{
  return MEMORY[0x1F4165EB0]();
}

uint64_t sub_1C254E800()
{
  return MEMORY[0x1F4165ED0]();
}

uint64_t sub_1C254E810()
{
  return MEMORY[0x1F4165EE0]();
}

uint64_t sub_1C254E820()
{
  return MEMORY[0x1F4165EF0]();
}

uint64_t sub_1C254E830()
{
  return MEMORY[0x1F4165F00]();
}

uint64_t sub_1C254E840()
{
  return MEMORY[0x1F4165F20]();
}

uint64_t sub_1C254E850()
{
  return MEMORY[0x1F4165F28]();
}

uint64_t sub_1C254E860()
{
  return MEMORY[0x1F4165F30]();
}

uint64_t sub_1C254E870()
{
  return MEMORY[0x1F4165F40]();
}

uint64_t sub_1C254E880()
{
  return MEMORY[0x1F4165F60]();
}

uint64_t sub_1C254E890()
{
  return MEMORY[0x1F4165F68]();
}

uint64_t sub_1C254E8A0()
{
  return MEMORY[0x1F4166050]();
}

uint64_t sub_1C254E8B0()
{
  return MEMORY[0x1F4166070]();
}

uint64_t sub_1C254E8C0()
{
  return MEMORY[0x1F4166158]();
}

uint64_t sub_1C254E8D0()
{
  return MEMORY[0x1F4166160]();
}

uint64_t sub_1C254E8E0()
{
  return MEMORY[0x1F41663F0]();
}

uint64_t sub_1C254E8F0()
{
  return MEMORY[0x1F40D6610]();
}

uint64_t sub_1C254E900()
{
  return MEMORY[0x1F40D6658]();
}

uint64_t sub_1C254E910()
{
  return MEMORY[0x1F40D66A8]();
}

uint64_t sub_1C254E920()
{
  return MEMORY[0x1F40D66F8]();
}

uint64_t sub_1C254E930()
{
  return MEMORY[0x1F40D6728]();
}

uint64_t sub_1C254E940()
{
  return MEMORY[0x1F40D67E8]();
}

uint64_t sub_1C254E950()
{
  return MEMORY[0x1F40D67F8]();
}

uint64_t sub_1C254E960()
{
  return MEMORY[0x1F40D6810]();
}

uint64_t sub_1C254E970()
{
  return MEMORY[0x1F40D6818]();
}

uint64_t sub_1C254E980()
{
  return MEMORY[0x1F40D6850]();
}

uint64_t sub_1C254E990()
{
  return MEMORY[0x1F40D6860]();
}

uint64_t sub_1C254E9A0()
{
  return MEMORY[0x1F40D6890]();
}

uint64_t sub_1C254E9B0()
{
  return MEMORY[0x1F40D68A0]();
}

uint64_t sub_1C254E9C0()
{
  return MEMORY[0x1F40D68E0]();
}

uint64_t sub_1C254E9D0()
{
  return MEMORY[0x1F40D6908]();
}

uint64_t sub_1C254E9E0()
{
  return MEMORY[0x1F40D6918]();
}

uint64_t sub_1C254E9F0()
{
  return MEMORY[0x1F40D6940]();
}

uint64_t sub_1C254EA00()
{
  return MEMORY[0x1F40D6950]();
}

uint64_t sub_1C254EA10()
{
  return MEMORY[0x1F40D6960]();
}

uint64_t sub_1C254EA20()
{
  return MEMORY[0x1F40F7D68]();
}

uint64_t sub_1C254EA30()
{
  return MEMORY[0x1F40D69E0]();
}

uint64_t sub_1C254EA40()
{
  return MEMORY[0x1F40D6A08]();
}

uint64_t sub_1C254EA50()
{
  return MEMORY[0x1F40D6A20]();
}

uint64_t sub_1C254EA60()
{
  return MEMORY[0x1F40D6A28]();
}

uint64_t sub_1C254EA70()
{
  return MEMORY[0x1F40D6A40]();
}

uint64_t sub_1C254EA80()
{
  return MEMORY[0x1F40D6A50]();
}

uint64_t sub_1C254EA90()
{
  return MEMORY[0x1F40D6A68]();
}

uint64_t sub_1C254EAA0()
{
  return MEMORY[0x1F40D6A78]();
}

uint64_t sub_1C254EAB0()
{
  return MEMORY[0x1F40D6AF0]();
}

uint64_t sub_1C254EAC0()
{
  return MEMORY[0x1F40D6B10]();
}

uint64_t sub_1C254EAD0()
{
  return MEMORY[0x1F40D6B18]();
}

uint64_t sub_1C254EAE0()
{
  return MEMORY[0x1F40D6B30]();
}

uint64_t sub_1C254EAF0()
{
  return MEMORY[0x1F40D6B48]();
}

uint64_t sub_1C254EB00()
{
  return MEMORY[0x1F40D6B68]();
}

uint64_t sub_1C254EB10()
{
  return MEMORY[0x1F40D6B70]();
}

uint64_t sub_1C254EB20()
{
  return MEMORY[0x1F40D6B78]();
}

uint64_t sub_1C254EB30()
{
  return MEMORY[0x1F40D6B80]();
}

uint64_t sub_1C254EB40()
{
  return MEMORY[0x1F40D6B88]();
}

uint64_t sub_1C254EB50()
{
  return MEMORY[0x1F40D6B90]();
}

uint64_t sub_1C254EB60()
{
  return MEMORY[0x1F40D6B98]();
}

uint64_t sub_1C254EB70()
{
  return MEMORY[0x1F40D6BA0]();
}

uint64_t sub_1C254EB80()
{
  return MEMORY[0x1F40D6BA8]();
}

uint64_t sub_1C254EB90()
{
  return MEMORY[0x1F40D6BB8]();
}

uint64_t sub_1C254EBA0()
{
  return MEMORY[0x1F411DEE8]();
}

uint64_t sub_1C254EBB0()
{
  return MEMORY[0x1F411F168]();
}

uint64_t sub_1C254EBC0()
{
  return MEMORY[0x1F40D6BD8]();
}

uint64_t sub_1C254EBD0()
{
  return MEMORY[0x1F40D6BE0]();
}

uint64_t sub_1C254EBE0()
{
  return MEMORY[0x1F40D6BF8]();
}

uint64_t sub_1C254EBF0()
{
  return MEMORY[0x1F40D6C10]();
}

uint64_t sub_1C254EC00()
{
  return MEMORY[0x1F40D6C50]();
}

uint64_t sub_1C254EC10()
{
  return MEMORY[0x1F40D6C98]();
}

uint64_t sub_1C254EC20()
{
  return MEMORY[0x1F40D6CC0]();
}

uint64_t sub_1C254EC30()
{
  return MEMORY[0x1F40D6CF8]();
}

uint64_t sub_1C254EC40()
{
  return MEMORY[0x1F40D6D30]();
}

uint64_t sub_1C254EC50()
{
  return MEMORY[0x1F40D6D40]();
}

uint64_t sub_1C254EC60()
{
  return MEMORY[0x1F40D6D60]();
}

uint64_t sub_1C254EC70()
{
  return MEMORY[0x1F40D6D80]();
}

uint64_t sub_1C254EC80()
{
  return MEMORY[0x1F40D6D90]();
}

uint64_t sub_1C254EC90()
{
  return MEMORY[0x1F40D6D98]();
}

uint64_t sub_1C254ECA0()
{
  return MEMORY[0x1F40D6DA8]();
}

uint64_t sub_1C254ECB0()
{
  return MEMORY[0x1F40D6DF0]();
}

uint64_t sub_1C254ECC0()
{
  return MEMORY[0x1F40D6E18]();
}

uint64_t sub_1C254ECD0()
{
  return MEMORY[0x1F40D6E40]();
}

uint64_t sub_1C254ECE0()
{
  return MEMORY[0x1F40F7E80]();
}

uint64_t sub_1C254ECF0()
{
  return MEMORY[0x1F40F7F50]();
}

uint64_t sub_1C254ED00()
{
  return MEMORY[0x1F40F7F60]();
}

uint64_t sub_1C254ED10()
{
  return MEMORY[0x1F40F84B8]();
}

uint64_t sub_1C254ED20()
{
  return MEMORY[0x1F40F84E8]();
}

uint64_t sub_1C254ED30()
{
  return MEMORY[0x1F40F8630]();
}

uint64_t sub_1C254ED40()
{
  return MEMORY[0x1F40F86E8]();
}

uint64_t sub_1C254ED50()
{
  return MEMORY[0x1F40F8770]();
}

uint64_t sub_1C254ED60()
{
  return MEMORY[0x1F40F87A8]();
}

uint64_t sub_1C254ED70()
{
  return MEMORY[0x1F40F87F0]();
}

uint64_t sub_1C254ED80()
{
  return MEMORY[0x1F40F8C00]();
}

uint64_t sub_1C254ED90()
{
  return MEMORY[0x1F40F90C8]();
}

uint64_t sub_1C254EDA0()
{
  return MEMORY[0x1F40F90E0]();
}

uint64_t sub_1C254EDB0()
{
  return MEMORY[0x1F40F9280]();
}

uint64_t sub_1C254EDC0()
{
  return MEMORY[0x1F40F9298]();
}

uint64_t sub_1C254EDD0()
{
  return MEMORY[0x1F40F9470]();
}

uint64_t sub_1C254EDE0()
{
  return MEMORY[0x1F40F9480]();
}

uint64_t sub_1C254EDF0()
{
  return MEMORY[0x1F40F9550]();
}

uint64_t sub_1C254EE00()
{
  return MEMORY[0x1F40F9568]();
}

uint64_t sub_1C254EE10()
{
  return MEMORY[0x1F40F98C0]();
}

uint64_t sub_1C254EE20()
{
  return MEMORY[0x1F40F9A60]();
}

uint64_t sub_1C254EE30()
{
  return MEMORY[0x1F40F9A90]();
}

uint64_t sub_1C254EE40()
{
  return MEMORY[0x1F40F9A98]();
}

uint64_t sub_1C254EE50()
{
  return MEMORY[0x1F40F9AB0]();
}

uint64_t sub_1C254EE60()
{
  return MEMORY[0x1F40F9AB8]();
}

uint64_t sub_1C254EE70()
{
  return MEMORY[0x1F40F9AD0]();
}

uint64_t sub_1C254EE80()
{
  return MEMORY[0x1F40F9AD8]();
}

uint64_t sub_1C254EE90()
{
  return MEMORY[0x1F40F9CD8]();
}

uint64_t sub_1C254EEA0()
{
  return MEMORY[0x1F40F9CE8]();
}

uint64_t sub_1C254EEB0()
{
  return MEMORY[0x1F40F9E10]();
}

uint64_t sub_1C254EEC0()
{
  return MEMORY[0x1F40F9E40]();
}

uint64_t sub_1C254EED0()
{
  return MEMORY[0x1F40F9FA8]();
}

uint64_t sub_1C254EEE0()
{
  return MEMORY[0x1F40FA6C8]();
}

uint64_t sub_1C254EEF0()
{
  return MEMORY[0x1F40FA6D0]();
}

uint64_t sub_1C254EF00()
{
  return MEMORY[0x1F40FABE0]();
}

uint64_t sub_1C254EF10()
{
  return MEMORY[0x1F40FAD98]();
}

uint64_t sub_1C254EF20()
{
  return MEMORY[0x1F40FADC0]();
}

uint64_t sub_1C254EF30()
{
  return MEMORY[0x1F40FAE68]();
}

uint64_t sub_1C254EF40()
{
  return MEMORY[0x1F40FAF00]();
}

uint64_t sub_1C254EF50()
{
  return MEMORY[0x1F40FAF80]();
}

uint64_t sub_1C254EF60()
{
  return MEMORY[0x1F40FB078]();
}

uint64_t sub_1C254EF70()
{
  return MEMORY[0x1F40FB130]();
}

uint64_t sub_1C254EF80()
{
  return MEMORY[0x1F40FB1E0]();
}

uint64_t sub_1C254EF90()
{
  return MEMORY[0x1F40FB1F0]();
}

uint64_t sub_1C254EFA0()
{
  return MEMORY[0x1F40FB310]();
}

uint64_t sub_1C254EFB0()
{
  return MEMORY[0x1F40FB3B0]();
}

uint64_t sub_1C254EFC0()
{
  return MEMORY[0x1F40FB460]();
}

uint64_t sub_1C254EFD0()
{
  return MEMORY[0x1F40FB4D8]();
}

uint64_t sub_1C254EFE0()
{
  return MEMORY[0x1F40FB4E0]();
}

uint64_t sub_1C254EFF0()
{
  return MEMORY[0x1F40FB530]();
}

uint64_t sub_1C254F000()
{
  return MEMORY[0x1F40FB558]();
}

uint64_t sub_1C254F010()
{
  return MEMORY[0x1F40FB580]();
}

uint64_t sub_1C254F020()
{
  return MEMORY[0x1F40FB5D0]();
}

uint64_t sub_1C254F030()
{
  return MEMORY[0x1F40FB5D8]();
}

uint64_t sub_1C254F040()
{
  return MEMORY[0x1F40FB918]();
}

uint64_t sub_1C254F050()
{
  return MEMORY[0x1F40FB920]();
}

uint64_t sub_1C254F060()
{
  return MEMORY[0x1F40FBA50]();
}

uint64_t sub_1C254F070()
{
  return MEMORY[0x1F40FBA60]();
}

uint64_t sub_1C254F080()
{
  return MEMORY[0x1F40FC450]();
}

uint64_t sub_1C254F090()
{
  return MEMORY[0x1F40FC498]();
}

uint64_t sub_1C254F0A0()
{
  return MEMORY[0x1F40FC530]();
}

uint64_t sub_1C254F0B0()
{
  return MEMORY[0x1F40FC568]();
}

uint64_t sub_1C254F0C0()
{
  return MEMORY[0x1F40FC5E8]();
}

uint64_t sub_1C254F0D0()
{
  return MEMORY[0x1F40FC6F0]();
}

uint64_t sub_1C254F0E0()
{
  return MEMORY[0x1F40FC700]();
}

uint64_t sub_1C254F0F0()
{
  return MEMORY[0x1F40FC708]();
}

uint64_t sub_1C254F100()
{
  return MEMORY[0x1F40FC780]();
}

uint64_t sub_1C254F110()
{
  return MEMORY[0x1F40FC7A0]();
}

uint64_t sub_1C254F120()
{
  return MEMORY[0x1F40FC7D0]();
}

uint64_t sub_1C254F130()
{
  return MEMORY[0x1F40FC8C8]();
}

uint64_t sub_1C254F140()
{
  return MEMORY[0x1F40FC9B8]();
}

uint64_t sub_1C254F150()
{
  return MEMORY[0x1F40FC9D0]();
}

uint64_t sub_1C254F160()
{
  return MEMORY[0x1F40FC9E0]();
}

uint64_t sub_1C254F170()
{
  return MEMORY[0x1F40FCA38]();
}

uint64_t sub_1C254F180()
{
  return MEMORY[0x1F40FCA48]();
}

uint64_t sub_1C254F190()
{
  return MEMORY[0x1F40FCA58]();
}

uint64_t sub_1C254F1A0()
{
  return MEMORY[0x1F4186C60]();
}

uint64_t sub_1C254F1B0()
{
  return MEMORY[0x1F4186C98]();
}

uint64_t sub_1C254F1C0()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_1C254F1D0()
{
  return MEMORY[0x1F4186CE0]();
}

uint64_t sub_1C254F1E0()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_1C254F1F0()
{
  return MEMORY[0x1F4186D18]();
}

uint64_t sub_1C254F200()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_1C254F210()
{
  return MEMORY[0x1F4186E28]();
}

uint64_t sub_1C254F220()
{
  return MEMORY[0x1F4186E60]();
}

uint64_t sub_1C254F230()
{
  return MEMORY[0x1F4186EF8]();
}

uint64_t sub_1C254F240()
{
  return MEMORY[0x1F4186F08]();
}

uint64_t sub_1C254F250()
{
  return MEMORY[0x1F4186F18]();
}

uint64_t sub_1C254F260()
{
  return MEMORY[0x1F4186F40]();
}

uint64_t sub_1C254F270()
{
  return MEMORY[0x1F4121480]();
}

uint64_t sub_1C254F280()
{
  return MEMORY[0x1F40E7808]();
}

uint64_t sub_1C254F290()
{
  return MEMORY[0x1F40E7818]();
}

uint64_t sub_1C254F2A0()
{
  return MEMORY[0x1F40E7820]();
}

uint64_t sub_1C254F2B0()
{
  return MEMORY[0x1F40E7828]();
}

uint64_t sub_1C254F2C0()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_1C254F2D0()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_1C254F2E0()
{
  return MEMORY[0x1F4183318]();
}

uint64_t sub_1C254F2F0()
{
  return MEMORY[0x1F4183320]();
}

uint64_t sub_1C254F300()
{
  return MEMORY[0x1F4183358]();
}

uint64_t sub_1C254F310()
{
  return MEMORY[0x1F41833C0]();
}

uint64_t sub_1C254F320()
{
  return MEMORY[0x1F41833C8]();
}

uint64_t sub_1C254F330()
{
  return MEMORY[0x1F41834A0]();
}

uint64_t sub_1C254F340()
{
  return MEMORY[0x1F41834A8]();
}

uint64_t sub_1C254F350()
{
  return MEMORY[0x1F41834F8]();
}

uint64_t sub_1C254F360()
{
  return MEMORY[0x1F4183500]();
}

uint64_t sub_1C254F370()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_1C254F380()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_1C254F390()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1C254F3A0()
{
  return MEMORY[0x1F411F180]();
}

uint64_t sub_1C254F3B0()
{
  return MEMORY[0x1F4183740]();
}

uint64_t sub_1C254F3C0()
{
  return MEMORY[0x1F4183748]();
}

uint64_t sub_1C254F3D0()
{
  return MEMORY[0x1F4183750]();
}

uint64_t sub_1C254F3E0()
{
  return MEMORY[0x1F4183758]();
}

uint64_t sub_1C254F3F0()
{
  return MEMORY[0x1F4183760]();
}

uint64_t sub_1C254F400()
{
  return MEMORY[0x1F4183768]();
}

uint64_t sub_1C254F410()
{
  return MEMORY[0x1F4183808]();
}

uint64_t sub_1C254F420()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1C254F430()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1C254F440()
{
  return MEMORY[0x1F40E61A0]();
}

uint64_t sub_1C254F450()
{
  return MEMORY[0x1F40E61B8]();
}

uint64_t sub_1C254F460()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_1C254F470()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1C254F480()
{
  return MEMORY[0x1F40E61E8]();
}

uint64_t sub_1C254F490()
{
  return MEMORY[0x1F40E61F8]();
}

uint64_t sub_1C254F4A0()
{
  return MEMORY[0x1F40E6208]();
}

uint64_t sub_1C254F4B0()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_1C254F4C0()
{
  return MEMORY[0x1F40E6268]();
}

uint64_t sub_1C254F4D0()
{
  return MEMORY[0x1F40E6298]();
}

uint64_t sub_1C254F4E0()
{
  return MEMORY[0x1F40E62A0]();
}

uint64_t sub_1C254F4F0()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1C254F500()
{
  return MEMORY[0x1F4183898]();
}

uint64_t sub_1C254F510()
{
  return MEMORY[0x1F41838A0]();
}

uint64_t sub_1C254F520()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t sub_1C254F530()
{
  return MEMORY[0x1F411DF00]();
}

uint64_t sub_1C254F540()
{
  return MEMORY[0x1F411EE18]();
}

uint64_t sub_1C254F550()
{
  return MEMORY[0x1F411EE20]();
}

uint64_t sub_1C254F560()
{
  return MEMORY[0x1F4183958]();
}

uint64_t sub_1C254F570()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1C254F580()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_1C254F590()
{
  return MEMORY[0x1F4183A08]();
}

uint64_t sub_1C254F5A0()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1C254F5B0()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1C254F5C0()
{
  return MEMORY[0x1F4183A88]();
}

uint64_t sub_1C254F5D0()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t sub_1C254F5E0()
{
  return MEMORY[0x1F4183AA8]();
}

uint64_t sub_1C254F5F0()
{
  return MEMORY[0x1F4183AB0]();
}

uint64_t sub_1C254F600()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t sub_1C254F610()
{
  return MEMORY[0x1F4183B30]();
}

uint64_t sub_1C254F620()
{
  return MEMORY[0x1F4183B90]();
}

uint64_t sub_1C254F630()
{
  return MEMORY[0x1F4183BA0]();
}

uint64_t sub_1C254F640()
{
  return MEMORY[0x1F4183BA8]();
}

uint64_t sub_1C254F650()
{
  return MEMORY[0x1F411DF18]();
}

uint64_t sub_1C254F660()
{
  return MEMORY[0x1F4183BB8]();
}

uint64_t sub_1C254F670()
{
  return MEMORY[0x1F40D6E68]();
}

uint64_t sub_1C254F680()
{
  return MEMORY[0x1F4183BE8]();
}

uint64_t sub_1C254F690()
{
  return MEMORY[0x1F4183C18]();
}

uint64_t sub_1C254F6A0()
{
  return MEMORY[0x1F4183CE0]();
}

uint64_t sub_1C254F6B0()
{
  return MEMORY[0x1F4183D80]();
}

uint64_t sub_1C254F6C0()
{
  return MEMORY[0x1F4183D98]();
}

uint64_t sub_1C254F6D0()
{
  return MEMORY[0x1F4183DF8]();
}

uint64_t sub_1C254F6E0()
{
  return MEMORY[0x1F4183E10]();
}

uint64_t sub_1C254F6F0()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_1C254F700()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1C254F710()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_1C254F720()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_1C254F730()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_1C254F760()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_1C254F770()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_1C254F780()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1C254F790()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_1C254F7A0()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_1C254F7B0()
{
  return MEMORY[0x1F4183FF0]();
}

uint64_t sub_1C254F7C0()
{
  return MEMORY[0x1F40E6388]();
}

uint64_t sub_1C254F7D0()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_1C254F7E0()
{
  return MEMORY[0x1F4187C00]();
}

uint64_t sub_1C254F7F0()
{
  return MEMORY[0x1F4187C08]();
}

uint64_t sub_1C254F800()
{
  return MEMORY[0x1F4187C10]();
}

uint64_t sub_1C254F810()
{
  return MEMORY[0x1F4187C98]();
}

uint64_t sub_1C254F820()
{
  return MEMORY[0x1F4187CA0]();
}

uint64_t sub_1C254F830()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_1C254F840()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_1C254F860()
{
  return MEMORY[0x1F40E63C8]();
}

uint64_t sub_1C254F870()
{
  return MEMORY[0x1F4184008]();
}

uint64_t sub_1C254F880()
{
  return MEMORY[0x1F411DF38]();
}

uint64_t sub_1C254F8A0()
{
  return MEMORY[0x1F40E6408]();
}

uint64_t sub_1C254F8B0()
{
  return MEMORY[0x1F40E6410]();
}

uint64_t sub_1C254F8C0()
{
  return MEMORY[0x1F40E6428]();
}

uint64_t sub_1C254F8E0()
{
  return MEMORY[0x1F40E6430]();
}

uint64_t sub_1C254F8F0()
{
  return MEMORY[0x1F40E6458]();
}

uint64_t sub_1C254F900()
{
  return MEMORY[0x1F4184100]();
}

uint64_t sub_1C254F910()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_1C254F920()
{
  return MEMORY[0x1F4184178]();
}

uint64_t sub_1C254F930()
{
  return MEMORY[0x1F4184180]();
}

uint64_t sub_1C254F940()
{
  return MEMORY[0x1F41841D0]();
}

uint64_t sub_1C254F950()
{
  return MEMORY[0x1F40E6468]();
}

uint64_t sub_1C254F960()
{
  return MEMORY[0x1F40E6478]();
}

uint64_t sub_1C254F970()
{
  return MEMORY[0x1F41842C0]();
}

uint64_t sub_1C254F980()
{
  return MEMORY[0x1F41845A0]();
}

uint64_t sub_1C254F990()
{
  return MEMORY[0x1F41845B0]();
}

uint64_t sub_1C254F9A0()
{
  return MEMORY[0x1F40E6508]();
}

uint64_t sub_1C254F9B0()
{
  return MEMORY[0x1F40D9698]();
}

uint64_t sub_1C254F9C0()
{
  return MEMORY[0x1F40D96A8]();
}

uint64_t sub_1C254F9D0()
{
  return MEMORY[0x1F40D96B0]();
}

uint64_t sub_1C254F9E0()
{
  return MEMORY[0x1F40D96C0]();
}

uint64_t sub_1C254F9F0()
{
  return MEMORY[0x1F411EEA0]();
}

uint64_t sub_1C254FA00()
{
  return MEMORY[0x1F41886C0]();
}

uint64_t sub_1C254FA10()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_1C254FA20()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_1C254FA30()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_1C254FA40()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_1C254FA50()
{
  return MEMORY[0x1F40E7958]();
}

uint64_t sub_1C254FA60()
{
  return MEMORY[0x1F40E7960]();
}

uint64_t sub_1C254FA70()
{
  return MEMORY[0x1F4120D80]();
}

uint64_t sub_1C254FA80()
{
  return MEMORY[0x1F4120D88]();
}

uint64_t sub_1C254FA90()
{
  return MEMORY[0x1F41664E8]();
}

uint64_t sub_1C254FAA0()
{
  return MEMORY[0x1F411F280]();
}

uint64_t sub_1C254FAB0()
{
  return MEMORY[0x1F411F290]();
}

uint64_t sub_1C254FAC0()
{
  return MEMORY[0x1F4120DA0]();
}

uint64_t sub_1C254FAD0()
{
  return MEMORY[0x1F411EEA8]();
}

uint64_t sub_1C254FAE0()
{
  return MEMORY[0x1F411EEB0]();
}

uint64_t sub_1C254FAF0()
{
  return MEMORY[0x1F411EEB8]();
}

uint64_t sub_1C254FB00()
{
  return MEMORY[0x1F411EEC0]();
}

uint64_t sub_1C254FB10()
{
  return MEMORY[0x1F411EEC8]();
}

uint64_t sub_1C254FB20()
{
  return MEMORY[0x1F411EED0]();
}

uint64_t sub_1C254FB30()
{
  return MEMORY[0x1F411EED8]();
}

uint64_t sub_1C254FB40()
{
  return MEMORY[0x1F411EEE0]();
}

uint64_t sub_1C254FB50()
{
  return MEMORY[0x1F411EEE8]();
}

uint64_t sub_1C254FB60()
{
  return MEMORY[0x1F411EEF0]();
}

uint64_t sub_1C254FB70()
{
  return MEMORY[0x1F4166598]();
}

uint64_t sub_1C254FB80()
{
  return MEMORY[0x1F41214A8]();
}

uint64_t sub_1C254FB90()
{
  return MEMORY[0x1F40E79D8]();
}

uint64_t sub_1C254FBA0()
{
  return MEMORY[0x1F41210F8]();
}

uint64_t _sSo17HKClinicalGatewayC15HealthRecordsUIE29supportsSharingToProviderObjCSbvg_0()
{
  return MEMORY[0x1F4121100]();
}

uint64_t sub_1C254FBC0()
{
  return MEMORY[0x1F411EEF8]();
}

uint64_t sub_1C254FBD0()
{
  return MEMORY[0x1F4186FA0]();
}

uint64_t sub_1C254FBE0()
{
  return MEMORY[0x1F4186FB0]();
}

uint64_t sub_1C254FBF0()
{
  return MEMORY[0x1F4186FC0]();
}

uint64_t sub_1C254FC00()
{
  return MEMORY[0x1F4186FD8]();
}

uint64_t sub_1C254FC10()
{
  return MEMORY[0x1F4186FF0]();
}

uint64_t sub_1C254FC20()
{
  return MEMORY[0x1F4187040]();
}

uint64_t sub_1C254FC30()
{
  return MEMORY[0x1F4187048]();
}

uint64_t sub_1C254FC40()
{
  return MEMORY[0x1F4187058]();
}

uint64_t sub_1C254FC50()
{
  return MEMORY[0x1F4187088]();
}

uint64_t sub_1C254FC60()
{
  return MEMORY[0x1F41870A0]();
}

uint64_t sub_1C254FC70()
{
  return MEMORY[0x1F41870B8]();
}

uint64_t sub_1C254FC80()
{
  return MEMORY[0x1F41870C0]();
}

uint64_t sub_1C254FC90()
{
  return MEMORY[0x1F41870D8]();
}

uint64_t sub_1C254FCA0()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_1C254FCB0()
{
  return MEMORY[0x1F4187100]();
}

uint64_t sub_1C254FCC0()
{
  return MEMORY[0x1F4187110]();
}

uint64_t sub_1C254FCD0()
{
  return MEMORY[0x1F41665C8]();
}

uint64_t sub_1C254FCE0()
{
  return MEMORY[0x1F41214B0]();
}

uint64_t sub_1C254FD00()
{
  return MEMORY[0x1F40E6798]();
}

uint64_t sub_1C254FD10()
{
  return MEMORY[0x1F40E67A0]();
}

uint64_t sub_1C254FD20()
{
  return MEMORY[0x1F4166658]();
}

uint64_t sub_1C254FD30()
{
  return MEMORY[0x1F4166660]();
}

uint64_t sub_1C254FD40()
{
  return MEMORY[0x1F4166668]();
}

uint64_t sub_1C254FD50()
{
  return MEMORY[0x1F4166688]();
}

uint64_t sub_1C254FD60()
{
  return MEMORY[0x1F4120DB8]();
}

uint64_t sub_1C254FD70()
{
  return MEMORY[0x1F40D7070]();
}

uint64_t sub_1C254FD80()
{
  return MEMORY[0x1F41666C0]();
}

uint64_t sub_1C254FD90()
{
  return MEMORY[0x1F41666C8]();
}

uint64_t sub_1C254FDA0()
{
  return MEMORY[0x1F411EF08]();
}

uint64_t sub_1C254FDB0()
{
  return MEMORY[0x1F41213E0]();
}

uint64_t sub_1C254FDC0()
{
  return MEMORY[0x1F41213E8]();
}

uint64_t sub_1C254FDD0()
{
  return MEMORY[0x1F41213F0]();
}

uint64_t sub_1C254FDE0()
{
  return MEMORY[0x1F41213F8]();
}

uint64_t sub_1C254FDF0()
{
  return MEMORY[0x1F4121400]();
}

uint64_t sub_1C254FE00()
{
  return MEMORY[0x1F4121408]();
}

uint64_t sub_1C254FE10()
{
  return MEMORY[0x1F411EF10]();
}

uint64_t sub_1C254FE20()
{
  return MEMORY[0x1F41214F8]();
}

uint64_t sub_1C254FE30()
{
  return MEMORY[0x1F40E67E8]();
}

uint64_t sub_1C254FE40()
{
  return MEMORY[0x1F40E67F8]();
}

uint64_t sub_1C254FE50()
{
  return MEMORY[0x1F411EF18]();
}

uint64_t sub_1C254FE60()
{
  return MEMORY[0x1F4166780]();
}

uint64_t sub_1C254FE70()
{
  return MEMORY[0x1F411EF20]();
}

uint64_t sub_1C254FE80()
{
  return MEMORY[0x1F411EF30]();
}

uint64_t sub_1C254FE90()
{
  return MEMORY[0x1F411EF38]();
}

uint64_t sub_1C254FEA0()
{
  return MEMORY[0x1F41667D8]();
}

uint64_t sub_1C254FEB0()
{
  return MEMORY[0x1F41667E8]();
}

uint64_t sub_1C254FEC0()
{
  return MEMORY[0x1F40E6840]();
}

uint64_t sub_1C254FED0()
{
  return MEMORY[0x1F411EF50]();
}

uint64_t sub_1C254FEE0()
{
  return MEMORY[0x1F411EF58]();
}

uint64_t sub_1C254FEF0()
{
  return MEMORY[0x1F411EF60]();
}

uint64_t sub_1C254FF00()
{
  return MEMORY[0x1F411EF68]();
}

uint64_t sub_1C254FF10()
{
  return MEMORY[0x1F411EF70]();
}

uint64_t sub_1C254FF20()
{
  return MEMORY[0x1F4166818]();
}

uint64_t sub_1C254FF30()
{
  return MEMORY[0x1F40E68E8]();
}

uint64_t sub_1C254FF40()
{
  return MEMORY[0x1F40E68F8]();
}

uint64_t sub_1C254FF50()
{
  return MEMORY[0x1F40E6910]();
}

uint64_t sub_1C254FF60()
{
  return MEMORY[0x1F41874A8]();
}

uint64_t sub_1C254FF70()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_1C254FF80()
{
  return MEMORY[0x1F41874D0]();
}

uint64_t sub_1C254FF90()
{
  return MEMORY[0x1F41874E0]();
}

uint64_t sub_1C254FFA0()
{
  return MEMORY[0x1F40E6928]();
}

uint64_t sub_1C254FFB0()
{
  return MEMORY[0x1F4166838]();
}

uint64_t sub_1C254FFC0()
{
  return MEMORY[0x1F411EF78]();
}

uint64_t sub_1C254FFD0()
{
  return MEMORY[0x1F4166888]();
}

uint64_t sub_1C254FFE0()
{
  return MEMORY[0x1F41668A0]();
}

uint64_t sub_1C254FFF0()
{
  return MEMORY[0x1F41668B0]();
}

uint64_t sub_1C2550000()
{
  return MEMORY[0x1F41668E0]();
}

uint64_t sub_1C2550010()
{
  return MEMORY[0x1F41668F0]();
}

uint64_t sub_1C2550020()
{
  return MEMORY[0x1F4166900]();
}

uint64_t sub_1C2550030()
{
  return MEMORY[0x1F4166950]();
}

uint64_t sub_1C2550040()
{
  return MEMORY[0x1F4166998]();
}

uint64_t sub_1C2550050()
{
  return MEMORY[0x1F41669C0]();
}

uint64_t sub_1C2550060()
{
  return MEMORY[0x1F41669C8]();
}

uint64_t sub_1C2550070()
{
  return MEMORY[0x1F41669D8]();
}

uint64_t sub_1C2550080()
{
  return MEMORY[0x1F41669E8]();
}

uint64_t sub_1C2550090()
{
  return MEMORY[0x1F41669F0]();
}

uint64_t sub_1C25500A0()
{
  return MEMORY[0x1F4166A28]();
}

uint64_t sub_1C25500B0()
{
  return MEMORY[0x1F4166A38]();
}

uint64_t sub_1C25500C0()
{
  return MEMORY[0x1F4166A50]();
}

uint64_t sub_1C25500D0()
{
  return MEMORY[0x1F40E6A98]();
}

uint64_t sub_1C25500E0()
{
  return MEMORY[0x1F40E6AB0]();
}

uint64_t sub_1C25500F0()
{
  return MEMORY[0x1F40E6AF0]();
}

uint64_t sub_1C2550100()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_1C2550110()
{
  return MEMORY[0x1F41847A0]();
}

uint64_t sub_1C2550120()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_1C2550130()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_1C2550140()
{
  return MEMORY[0x1F40E6C18]();
}

uint64_t sub_1C2550150()
{
  return MEMORY[0x1F40E6C50]();
}

uint64_t sub_1C2550160()
{
  return MEMORY[0x1F40E6C68]();
}

uint64_t sub_1C2550170()
{
  return MEMORY[0x1F40E6C80]();
}

uint64_t sub_1C2550180()
{
  return MEMORY[0x1F40E6CA0]();
}

uint64_t sub_1C2550190()
{
  return MEMORY[0x1F40E6CC8]();
}

uint64_t sub_1C25501A0()
{
  return MEMORY[0x1F40E6CE8]();
}

uint64_t sub_1C25501B0()
{
  return MEMORY[0x1F40E6D58]();
}

uint64_t sub_1C25501C0()
{
  return MEMORY[0x1F41876A8]();
}

uint64_t sub_1C25501D0()
{
  return MEMORY[0x1F4184958]();
}

uint64_t sub_1C25501E0()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_1C2550200()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_1C2550210()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_1C2550220()
{
  return MEMORY[0x1F4184B28]();
}

uint64_t sub_1C2550230()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t sub_1C2550240()
{
  return MEMORY[0x1F4184B58]();
}

uint64_t sub_1C2550250()
{
  return MEMORY[0x1F4184B60]();
}

uint64_t sub_1C2550260()
{
  return MEMORY[0x1F4184B68]();
}

uint64_t sub_1C2550270()
{
  return MEMORY[0x1F4184B78]();
}

uint64_t sub_1C2550280()
{
  return MEMORY[0x1F4184B80]();
}

uint64_t sub_1C2550290()
{
  return MEMORY[0x1F4184B88]();
}

uint64_t sub_1C25502A0()
{
  return MEMORY[0x1F4184B90]();
}

uint64_t sub_1C25502B0()
{
  return MEMORY[0x1F4184BA8]();
}

uint64_t sub_1C25502C0()
{
  return MEMORY[0x1F4184BB0]();
}

uint64_t sub_1C25502D0()
{
  return MEMORY[0x1F4184BC0]();
}

uint64_t sub_1C25502E0()
{
  return MEMORY[0x1F4184BC8]();
}

uint64_t sub_1C25502F0()
{
  return MEMORY[0x1F4184BD0]();
}

uint64_t sub_1C2550300()
{
  return MEMORY[0x1F4184BD8]();
}

uint64_t sub_1C2550310()
{
  return MEMORY[0x1F4184C18]();
}

uint64_t sub_1C2550320()
{
  return MEMORY[0x1F4184C20]();
}

uint64_t sub_1C2550330()
{
  return MEMORY[0x1F4184C38]();
}

uint64_t sub_1C2550340()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_1C2550350()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_1C2550360()
{
  return MEMORY[0x1F4184CA0]();
}

uint64_t sub_1C2550370()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_1C2550380()
{
  return MEMORY[0x1F4184CB0]();
}

uint64_t sub_1C2550390()
{
  return MEMORY[0x1F4184CC0]();
}

uint64_t sub_1C25503A0()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1C25503B0()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_1C25503C0()
{
  return MEMORY[0x1F4184D70]();
}

uint64_t sub_1C25503D0()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_1C25503E0()
{
  return MEMORY[0x1F4184D88]();
}

uint64_t sub_1C25503F0()
{
  return MEMORY[0x1F4184DA0]();
}

uint64_t sub_1C2550400()
{
  return MEMORY[0x1F4184DD0]();
}

uint64_t sub_1C2550410()
{
  return MEMORY[0x1F4184DE8]();
}

uint64_t sub_1C2550420()
{
  return MEMORY[0x1F4184DF0]();
}

uint64_t sub_1C2550430()
{
  return MEMORY[0x1F4184E38]();
}

uint64_t sub_1C2550440()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1C2550450()
{
  return MEMORY[0x1F4184EA8]();
}

uint64_t sub_1C2550460()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_1C2550470()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_1C2550480()
{
  return MEMORY[0x1F4184EE8]();
}

uint64_t sub_1C2550490()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_1C25504A0()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_1C25504B0()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_1C25504C0()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t sub_1C25504D0()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t sub_1C25504E0()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t sub_1C25504F0()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_1C2550500()
{
  return MEMORY[0x1F4185068]();
}

uint64_t sub_1C2550510()
{
  return MEMORY[0x1F41851F0]();
}

uint64_t sub_1C2550520()
{
  return MEMORY[0x1F41851F8]();
}

uint64_t sub_1C2550530()
{
  return MEMORY[0x1F4185208]();
}

uint64_t sub_1C2550540()
{
  return MEMORY[0x1F4185210]();
}

uint64_t sub_1C2550550()
{
  return MEMORY[0x1F4185228]();
}

uint64_t sub_1C2550560()
{
  return MEMORY[0x1F4185230]();
}

uint64_t sub_1C2550570()
{
  return MEMORY[0x1F4185238]();
}

uint64_t sub_1C2550580()
{
  return MEMORY[0x1F4185240]();
}

uint64_t sub_1C2550590()
{
  return MEMORY[0x1F4185258]();
}

uint64_t sub_1C25505A0()
{
  return MEMORY[0x1F4185260]();
}

uint64_t sub_1C25505B0()
{
  return MEMORY[0x1F4185270]();
}

uint64_t sub_1C25505C0()
{
  return MEMORY[0x1F4185278]();
}

uint64_t sub_1C25505D0()
{
  return MEMORY[0x1F4185290]();
}

uint64_t sub_1C25505E0()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_1C25505F0()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1C2550600()
{
  return MEMORY[0x1F41852A8]();
}

uint64_t sub_1C2550610()
{
  return MEMORY[0x1F41852B0]();
}

uint64_t sub_1C2550620()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_1C2550630()
{
  return MEMORY[0x1F4185358]();
}

uint64_t sub_1C2550640()
{
  return MEMORY[0x1F4185360]();
}

uint64_t sub_1C2550650()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1C2550660()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1C2550670()
{
  return MEMORY[0x1F4185378]();
}

uint64_t sub_1C2550680()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1C2550690()
{
  return MEMORY[0x1F4185388]();
}

uint64_t sub_1C25506A0()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_1C25506B0()
{
  return MEMORY[0x1F4185450]();
}

uint64_t sub_1C25506C0()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_1C25506D0()
{
  return MEMORY[0x1F41854D8]();
}

uint64_t sub_1C25506E0()
{
  return MEMORY[0x1F41854E0]();
}

uint64_t sub_1C25506F0()
{
  return MEMORY[0x1F41854F8]();
}

uint64_t sub_1C2550700()
{
  return MEMORY[0x1F4185528]();
}

uint64_t sub_1C2550710()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_1C2550720()
{
  return MEMORY[0x1F4185570]();
}

uint64_t sub_1C2550730()
{
  return MEMORY[0x1F4185588]();
}

uint64_t sub_1C2550740()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_1C2550750()
{
  return MEMORY[0x1F41855E0]();
}

uint64_t sub_1C2550760()
{
  return MEMORY[0x1F41855F0]();
}

uint64_t sub_1C2550770()
{
  return MEMORY[0x1F4185608]();
}

uint64_t sub_1C2550780()
{
  return MEMORY[0x1F4185628]();
}

uint64_t sub_1C2550790()
{
  return MEMORY[0x1F4185658]();
}

uint64_t sub_1C25507A0()
{
  return MEMORY[0x1F4185690]();
}

uint64_t sub_1C25507B0()
{
  return MEMORY[0x1F4185698]();
}

uint64_t sub_1C25507C0()
{
  return MEMORY[0x1F41856B0]();
}

uint64_t sub_1C25507D0()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_1C25507E0()
{
  return MEMORY[0x1F4185710]();
}

uint64_t sub_1C25507F0()
{
  return MEMORY[0x1F4185730]();
}

uint64_t sub_1C2550800()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_1C2550810()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1C2550820()
{
  return MEMORY[0x1F4185768]();
}

uint64_t sub_1C2550840()
{
  return MEMORY[0x1F41859A8]();
}

uint64_t sub_1C2550850()
{
  return MEMORY[0x1F41859C8]();
}

uint64_t sub_1C2550860()
{
  return MEMORY[0x1F4185A30]();
}

uint64_t sub_1C2550870()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1C2550880()
{
  return MEMORY[0x1F4185A88]();
}

uint64_t sub_1C2550890()
{
  return MEMORY[0x1F4185B20]();
}

uint64_t sub_1C25508A0()
{
  return MEMORY[0x1F4185B90]();
}

uint64_t sub_1C25508B0()
{
  return MEMORY[0x1F4185B98]();
}

uint64_t sub_1C25508C0()
{
  return MEMORY[0x1F4185D10]();
}

uint64_t sub_1C25508E0()
{
  return MEMORY[0x1F4185D40]();
}

uint64_t sub_1C25508F0()
{
  return MEMORY[0x1F4185D68]();
}

uint64_t sub_1C2550900()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_1C2550910()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1C2550940()
{
  return MEMORY[0x1F40E6E30]();
}

uint64_t sub_1C2550950()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_1C2550960()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_1C2550970()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_1C2550980()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_1C2550990()
{
  return MEMORY[0x1F4185E90]();
}

uint64_t sub_1C25509A0()
{
  return MEMORY[0x1F4185E98]();
}

uint64_t sub_1C25509B0()
{
  return MEMORY[0x1F4185EA8]();
}

uint64_t sub_1C25509C0()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1C25509D0()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1C25509E0()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_1C25509F0()
{
  return MEMORY[0x1F4185EE0]();
}

uint64_t sub_1C2550A00()
{
  return MEMORY[0x1F4185EE8]();
}

uint64_t sub_1C2550A10()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1C2550A20()
{
  return MEMORY[0x1F40D6E78]();
}

uint64_t sub_1C2550A30()
{
  return MEMORY[0x1F4185F68]();
}

uint64_t sub_1C2550A40()
{
  return MEMORY[0x1F4185FB8]();
}

uint64_t sub_1C2550A50()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_1C2550A60()
{
  return MEMORY[0x1F4185FE0]();
}

uint64_t sub_1C2550A70()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t sub_1C2550AA0()
{
  return MEMORY[0x1F4186318]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1F41138B8]();
}

Boolean CFStringTransform(CFMutableStringRef string, CFRange *range, CFStringRef transform, Boolean reverse)
{
  return MEMORY[0x1F40D86C0](string, range, transform, reverse);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97D0](retstr, sx, sy);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return (const CGFloat *)MEMORY[0x1F40D9A00](color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9AF8]();
}

void CGContextClosePath(CGContextRef c)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

CGDataConsumerRef CGDataConsumerCreateWithCFData(CFMutableDataRef data)
{
  return (CGDataConsumerRef)MEMORY[0x1F40DA2C0](data);
}

void CGImageRelease(CGImageRef image)
{
}

void CGPDFContextBeginPage(CGContextRef context, CFDictionaryRef pageInfo)
{
}

void CGPDFContextClose(CGContextRef context)
{
}

CGContextRef CGPDFContextCreate(CGDataConsumerRef consumer, const CGRect *mediaBox, CFDictionaryRef auxiliaryInfo)
{
  return (CGContextRef)MEMORY[0x1F40DABC0](consumer, mediaBox, auxiliaryInfo);
}

void CGPDFContextEndPage(CGContextRef context)
{
}

CGPoint CGPointApplyAffineTransform(CGPoint point, CGAffineTransform *t)
{
  MEMORY[0x1F40DB1F8](t, (__n128)point, *(__n128 *)&point.y);
  result.y = v3;
  result.x = v2;
  return result;
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return MEMORY[0x1F40DB228]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, (__n128)point, *(__n128 *)&point.y);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB248]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x1F40DB250]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  MEMORY[0x1F40DB268]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  MEMORY[0x1F40DB270]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  MEMORY[0x1F40DB298]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x1F40DB2A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  MEMORY[0x1F40DB2B8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

uint64_t HKClinicalSharingUserStatusToString()
{
  return MEMORY[0x1F4121108]();
}

uint64_t HKCreateSerialDispatchQueue()
{
  return MEMORY[0x1F40E7BA0]();
}

uint64_t HKDateFormatterFromTemplate()
{
  return MEMORY[0x1F4121528]();
}

uint64_t HKDiagnosticStringFromDate()
{
  return MEMORY[0x1F40E7C58]();
}

uint64_t HKDiagnosticTestResultCategoryFromNSString()
{
  return MEMORY[0x1F40E7C70]();
}

uint64_t HKDispatchAsyncOnGlobalConcurrentQueue()
{
  return MEMORY[0x1F40E7C78]();
}

uint64_t HKErrorTableViewCell()
{
  return MEMORY[0x1F4121558]();
}

uint64_t HKGraphSeriesDataBlockPathMaximumX()
{
  return MEMORY[0x1F4121570]();
}

uint64_t HKGraphSeriesDataBlockPathMinimumX()
{
  return MEMORY[0x1F4121578]();
}

uint64_t HKGraphSeriesDataPointPathInRangeInclusive()
{
  return MEMORY[0x1F4121580]();
}

uint64_t HKHealthKeyColor()
{
  return MEMORY[0x1F4121588]();
}

uint64_t HKHealthKitFrameworkBundle()
{
  return MEMORY[0x1F40E7D10]();
}

uint64_t HKHealthRecordsCurrentEnvironment()
{
  return MEMORY[0x1F4121110]();
}

uint64_t HKHealthRecordsNameForEnvironment()
{
  return MEMORY[0x1F4121118]();
}

uint64_t HKHealthRecordsSetEnvironment()
{
  return MEMORY[0x1F4121120]();
}

uint64_t HKHealthUIFrameworkBundle()
{
  return MEMORY[0x1F41215A0]();
}

uint64_t HKIntegerFormatter()
{
  return MEMORY[0x1F41215A8]();
}

uint64_t HKMedicalRecordAllSupportedCategoryTypes()
{
  return MEMORY[0x1F40E7E00]();
}

uint64_t HKMostRecentSampleEndDateText()
{
  return MEMORY[0x1F41215C8]();
}

uint64_t HKProviderServiceMaximumCompatibleAPIVersion()
{
  return MEMORY[0x1F4121128]();
}

uint64_t HKSafeObject()
{
  return MEMORY[0x1F40E7EE8]();
}

uint64_t HKSensitiveLogItem()
{
  return MEMORY[0x1F40E7F00]();
}

uint64_t HKStringFromBool()
{
  return MEMORY[0x1F40E7FD0]();
}

uint64_t HKStringFromOntologyShardSettings()
{
  return MEMORY[0x1F40E8000]();
}

uint64_t HKUIContentSizeCategoryMin()
{
  return MEMORY[0x1F4121608]();
}

uint64_t HKUIEqualCGFloats()
{
  return MEMORY[0x1F4121618]();
}

uint64_t HKUIJoinAttributedStringsForLocale()
{
  return MEMORY[0x1F4121620]();
}

uint64_t HKUIJoinStringsForAutomationIdentifier()
{
  return MEMORY[0x1F4121628]();
}

uint64_t HKUIMidDate()
{
  return MEMORY[0x1F4121648]();
}

uint64_t HKUIOnePixel()
{
  return MEMORY[0x1F4121668]();
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x1F40E7248](directory, domainMask, expandTilde);
}

uint64_t NSStringFromAccountStateChangeType()
{
  return MEMORY[0x1F4121130]();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1F40E7280](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1F40E72B0](aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1F40E72C8]();
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return MEMORY[0x1F40F6DD8](attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return MEMORY[0x1F40F6DE0](query, result);
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return (CFTypeRef)MEMORY[0x1F40F7138](task, entitlement, error);
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return (SecTaskRef)MEMORY[0x1F40F7160](allocator);
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return MEMORY[0x1F4166BA0](category);
}

void UIGraphicsBeginPDFContextToData(NSMutableData *data, CGRect bounds, NSDictionary *documentInfo)
{
}

void UIGraphicsBeginPDFPage(void)
{
}

void UIGraphicsEndPDFContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return (CGContextRef)MEMORY[0x1F4166C48]();
}

CGRect UIGraphicsGetPDFContextBounds(void)
{
  MEMORY[0x1F4166C58]();
  result.size.height = v3;
  result.size.width = v2;
  result.origin.y = v1;
  result.origin.x = v0;
  return result;
}

void UIGraphicsPopContext(void)
{
}

void UIGraphicsPushContext(CGContextRef context)
{
}

uint64_t UIRectCenteredIntegralRect()
{
  return MEMORY[0x1F4166E18]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _HKInitializeLogging()
{
  return MEMORY[0x1F40E81B8]();
}

NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, id firstValue, ...)
{
  return (NSDictionary *)MEMORY[0x1F40E7328](commaSeparatedKeysString, firstValue);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

{
  return MEMORY[0x1F41813D0]();
}

{
  return MEMORY[0x1F41813F0]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1F4186370]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x1F4186398]();
}

uint64_t _xpc_runtime_is_app_sandboxed()
{
  return MEMORY[0x1F40CA1D8]();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1F40CBA60](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1F40CBA88]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1F40CBC30](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1F40CBC40](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1F40CBC50](dsema, timeout);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB90](count, size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1F40CCCE8](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

{
  MEMORY[0x1F4181668](context);
}

{
  return (void *)MEMORY[0x1F4181670]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1F4181680](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1F4181718](object, key);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1F4181748](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1F41818D0](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1F4181A28](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1F4181A30](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181A40](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1F4186478]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1F4188200]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1F4188218]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1F4188220]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1F41864C0]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x1F41864C8]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1F41864D0]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x1F41864F0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1F4186550]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1F4186580]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x1F4186588]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x1F4186590]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getFunctionTypeMetadata0()
{
  return MEMORY[0x1F41865C0]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1F41865F0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassFromObject()
{
  return MEMORY[0x1F4186600]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1F4186618]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x1F4186620]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1F4186638]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1F4186648]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1F4186658]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1F4186690]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1F41866A0]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1F41866F8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1F4186730]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1F41867D8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1F41867F8]();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return MEMORY[0x1F4186818]();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return MEMORY[0x1F4186820]();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return MEMORY[0x1F4186828]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1F4186840]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x1F4186848]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x1F4186850]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1F4186868]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x1F4186870]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x1F4186878]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1F41868B8]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1F41868C0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1F41868C8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1F41868E8]();
}

vImage_Error vImageAlphaBlend_ARGB8888(const vImage_Buffer *srcTop, const vImage_Buffer *srcBottom, const vImage_Buffer *dest, vImage_Flags flags)
{
  return MEMORY[0x1F40D2238](srcTop, srcBottom, dest, *(void *)&flags);
}

vImage_Error vImageBufferFill_ARGB8888(const vImage_Buffer *dest, const Pixel_8888 color, vImage_Flags flags)
{
  return MEMORY[0x1F40D2278](dest, color, *(void *)&flags);
}

vImage_Error vImageBuffer_InitWithCGImage(vImage_Buffer *buf, vImage_CGImageFormat *format, const CGFloat *backgroundColor, CGImageRef image, vImage_Flags flags)
{
  return MEMORY[0x1F40D22B8](buf, format, backgroundColor, image, *(void *)&flags);
}

CGImageRef vImageCreateCGImageFromBuffer(const vImage_Buffer *buf, const vImage_CGImageFormat *format, void (__cdecl *callback)(void *, void *), void *userData, vImage_Flags flags, vImage_Error *error)
{
  return (CGImageRef)MEMORY[0x1F40D2860](buf, format, callback, userData, *(void *)&flags, error);
}