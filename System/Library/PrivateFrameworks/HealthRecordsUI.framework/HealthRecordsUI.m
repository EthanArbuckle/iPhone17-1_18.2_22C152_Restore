uint64_t getEnumTagSinglePayload for AccountStateChange(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t getEnumTagSinglePayload for HealthRecordsSupportedChange(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

id static ProfileManager.shared.getter()
{
  if (qword_1EBB6EF30 != -1) {
    swift_once();
  }
  v0 = (void *)qword_1EBB6FB90;
  return v0;
}

void sub_1C21A4CE4(void *a1@<X8>)
{
  sub_1C21A8638(*(void **)(v1 + 24), a1);
}

void sub_1C21A4CF0(void *a1@<X8>)
{
  sub_1C21A7FDC(*(void **)(v1 + 24), a1);
}

uint64_t dispatch thunk of ProfileManager.profile(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

void sub_1C21A4D2C(void *a1@<X8>)
{
  sub_1C21A750C(*(void **)(v1 + 24), a1);
}

uint64_t sub_1C21A4D34(uint64_t a1)
{
  return sub_1C21A8904(a1, (void (*)(void))sub_1C21A8A28);
}

id sub_1C21A4D60(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  v3 = *a2;
  return v3;
}

unsigned char *sub_1C21A4DAC(unsigned char *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t dispatch thunk of OnboardingTileAppearanceManager.notificationPublisher(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t CategoryCountDataProvider.init(healthStore:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_1C21A4DE4()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_1C21A4DF4(void *a1@<X8>)
{
  sub_1C21A65CC(*(void **)(v1 + 24), a1);
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *result = *a2;
  return result;
}

uint64_t ClinicalPublisherFactory.init(with:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0A0]), sel_initWithHealthStore_, a1);
  return v1;
}

uint64_t type metadata accessor for CategoryCountDataProvider()
{
  return self;
}

uint64_t CategoryCountDataProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t AccountStatusSummaryTileSettingsManager.init(healthStore:)(void *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC868];
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = v2;
  id v3 = a1;
  sub_1C21A6E94();

  return v1;
}

uint64_t OnboardingTileAppearanceManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1C21A4F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    v5 = result;
    unsigned int v6 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v6
      && (sub_1C224FCC8(),
          v7 = (void *)sub_1C254FA70(),
          v8 = (void *)sub_1C254F430(),
          unsigned int v9 = objc_msgSend(v7, sel_hk_keyExists_, v8),
          v7,
          v8,
          v9))
    {
      v10 = (void *)sub_1C254FA70();
      v11 = (void *)sub_1C254F430();
      id v12 = objc_msgSend(v10, sel_integerForKey_, v11);

      return v12;
    }
    else
    {
      return (id)a3;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HKClinicalAccountStore.requiresOnboardingPublisher()()
{
  sub_1C21AD02C();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(swift_allocObject() + 16) = v0;
  sub_1C21AD0C0();
  sub_1C21A51E0(&qword_1EBB6F418, (void (*)(uint64_t))sub_1C21AD0C0);
  id v6 = v0;
  sub_1C254EB10();
  sub_1C21A51E0(&qword_1EBB6F428, (void (*)(uint64_t))sub_1C21AD02C);
  uint64_t v7 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_1C21A51E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C21A5228(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, void, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2511BD0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t RecordKindDataProvider.init(healthStore:)(uint64_t a1)
{
  v10[0] = a1;
  uint64_t v2 = sub_1C254FC60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254FC00();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1C254F200();
  MEMORY[0x1F4188790](v7 - 8);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  sub_1C254F1E0();
  v10[1] = MEMORY[0x1E4FBC860];
  sub_1C21ACD00();
  sub_1C21ACF14(0, &qword_1EBB6FF50, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C21ACDC4();
  sub_1C2550200();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC58], v2);
  uint64_t v8 = sub_1C254FCB0();
  *(void *)(v1 + 16) = v10[0];
  *(void *)(v1 + 24) = v8;
  return v1;
}

uint64_t type metadata accessor for OnboardingTileAppearanceManager()
{
  return self;
}

uint64_t destroy for BrowseCategory(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_1C254CB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    sub_1C21FD4EC();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C21A556C()
{
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  OnboardingViewIdentifier.stringIdentifier.getter();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254FAA0();
  swift_bridgeObjectRelease();
  sub_1C21AD128();
  sub_1C21A588C((unint64_t *)&qword_1EBB6DCC0, (void (*)(uint64_t))sub_1C21AD128);
  uint64_t v0 = sub_1C254EBC0();
  swift_release();
  return v0;
}

uint64_t sub_1C21A567C()
{
  sub_1C21AD2B8();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  uint64_t v8 = 0x6F626E4F2E494843;
  unint64_t v9 = 0xEF2E676E69647261;
  OnboardingViewIdentifier.stringIdentifier.getter();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1C254FAA0();
  swift_bridgeObjectRelease();
  uint64_t v8 = v5;
  sub_1C21AD128();
  sub_1C21A588C((unint64_t *)&qword_1EBB6DCC0, (void (*)(uint64_t))sub_1C21AD128);
  sub_1C254EC00();
  swift_release();
  sub_1C21A588C(&qword_1EBB6DC78, (void (*)(uint64_t))sub_1C21AD2B8);
  uint64_t v6 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_1C21A588C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C21A58D4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C24F6C6C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ProfileManager()
{
  return self;
}

uint64_t UserDomainConceptDataProvider.recordChangePublisher(for:categories:since:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t v73 = v4;
  uint64_t v6 = *(void *)(v4 + 16);
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1C21A6470(a1, a2);
    if (v8)
    {
      uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v72 = a2;
  id aBlock = a4;
  sub_1C236FA90();
  swift_allocObject();
  id v10 = a4;
  v71 = (void *)sub_1C254EAA0();
  uint64_t v11 = MEMORY[0x1E4FBC870];
  uint64_t v97 = MEMORY[0x1E4FBC870];
  uint64_t v78 = *(void *)(a3 + 16);
  if (!v78)
  {
LABEL_45:
    sub_1C23609D8(v11);
    swift_bridgeObjectRelease();
    id v57 = v10;
    if (!a4) {
      id v57 = objc_msgSend(self, sel_latestAnchor);
    }
    id v58 = objc_allocWithZone(MEMORY[0x1E4F2ABF0]);
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    id v59 = v10;
    id v60 = v57;
    swift_retain();
    v61 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    v94 = sub_1C236FB24;
    v95 = v71;
    id aBlock = (id)MEMORY[0x1E4F143A8];
    unint64_t v91 = 1107296256;
    v92 = sub_1C2364E24;
    v93 = &block_descriptor_39;
    v62 = _Block_copy(&aBlock);
    id v63 = objc_msgSend(v58, sel_initWithQueryDescriptors_anchor_limit_resultsHandler_, v61, v60, 0, v62);

    _Block_release(v62);
    swift_release();
    v94 = sub_1C236FB24;
    v95 = v71;
    id aBlock = (id)MEMORY[0x1E4F143A8];
    unint64_t v91 = 1107296256;
    v92 = sub_1C2364E24;
    v93 = &block_descriptor_55_0;
    v64 = _Block_copy(&aBlock);
    swift_retain();
    sub_1C223E0BC((uint64_t)sub_1C236FB24);
    swift_release();
    objc_msgSend(v63, sel_setUpdateHandler_, v64);
    _Block_release(v64);
    swift_release();
    objc_msgSend(*(id *)(v73 + 32), sel_executeQuery_, v63);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v65 = v63;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v97 = *(void *)(v73 + 24);
    *(void *)(v73 + 24) = 0x8000000000000000;
    sub_1C2366460((uint64_t)v65, a1, v72, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_1C24AF710, (void (*)(void))sub_1C227CE60, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C24F6DDC);
    *(void *)(v73 + 24) = v97;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    id aBlock = v71;
    sub_1C21A6D6C(&qword_1EBB6DCB0, (void (*)(uint64_t))sub_1C236FA90);
    uint64_t v9 = sub_1C254EBC0();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    char v67 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v97 = *(void *)(v73 + 16);
    *(void *)(v73 + 16) = 0x8000000000000000;
    sub_1C2365EB8(v9, a1, v72, v67);
    *(void *)(v73 + 16) = v97;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();

    swift_release();
    return v9;
  }
  id v80 = self;
  swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  id v77 = v10;
  while (1)
  {
    uint64_t v81 = v12;
    uint64_t v13 = *(unsigned __int8 *)(a3 + 32 + v12);
    id v14 = objc_msgSend(v80, sel_supportedRecordCategoriesByCategoryType);
    if (v14) {
      break;
    }
    v19 = (void *)MEMORY[0x1E4FBC868];
    if (!*(void *)(MEMORY[0x1E4FBC868] + 16)) {
      goto LABEL_28;
    }
LABEL_26:
    uint64_t v41 = sub_1C21A93C4(v13);
    if (v42)
    {
      uint64_t v43 = v19[7] + 72 * v41;
      v44 = *(void **)(v43 + 8);
      v45 = *(void **)(v43 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v46 = v45;
      id v47 = v44;
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    id v48 = objc_msgSend(v80, sel_unknownRecordCategory);
    if (!v48) {
      goto LABEL_53;
    }
    sub_1C21AA50C(v48, (uint64_t)&aBlock);
    id v47 = (id)v91;
    id v46 = v96;
LABEL_30:
    id v49 = objc_msgSend(v46, sel_sampleTypes);
    if (!v49)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_8;
    }
    v50 = v49;
    sub_1C21AB51C(0, &qword_1EBB6FF78);
    unint64_t v51 = sub_1C254F710();

    if (v51 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (v52)
      {
LABEL_33:
        if (v52 < 1) {
          goto LABEL_52;
        }
        if ((v51 & 0xC000000000000001) != 0)
        {
          for (uint64_t i = 0; i != v52; ++i)
          {
            v54 = (void *)MEMORY[0x1C87588E0](i, v51);
            sub_1C23682EC(&aBlock, v54);
          }
        }
        else
        {
          for (uint64_t j = 0; j != v52; ++j)
          {
            v56 = *(void **)(v51 + 8 * j + 32);
            sub_1C23682EC(&aBlock, v56);
          }
        }
      }
    }
    else
    {
      uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v52) {
        goto LABEL_33;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v12 = v81 + 1;
    swift_bridgeObjectRelease();
    id v10 = v77;
    if (v81 + 1 == v78)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = v97;
      goto LABEL_45;
    }
  }
  v15 = v14;
  unsigned int v79 = v13;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FFC0);
  sub_1C21A818C((unint64_t *)&qword_1EBB6F990, (unint64_t *)&qword_1EBB70030);
  unint64_t v16 = sub_1C254F2D0();

  sub_1C21AA128(v16);
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  if (!*(void *)(v18 + 16))
  {
    v19 = (void *)MEMORY[0x1E4FBC868];
    swift_bridgeObjectRetain();
LABEL_25:
    swift_bridgeObjectRelease_n();
    uint64_t v13 = v79;
    if (!v19[2]) {
      goto LABEL_28;
    }
    goto LABEL_26;
  }
  sub_1C21A95CC();
  v19 = (void *)sub_1C2550680();
  uint64_t v20 = *(void *)(v18 + 16);
  v89 = v19;
  swift_bridgeObjectRetain();
  uint64_t v84 = v20;
  if (!v20) {
    goto LABEL_25;
  }
  uint64_t v21 = 0;
  unint64_t v22 = 0;
  uint64_t v83 = v18;
  while (v22 < *(void *)(v18 + 16))
  {
    long long v86 = *(_OWORD *)(v18 + v21 + 80);
    long long v87 = *(_OWORD *)(v18 + v21 + 96);
    char v23 = *(unsigned char *)(v18 + v21 + 40);
    uint64_t v24 = *(unsigned __int8 *)(v18 + v21 + 32);
    uint64_t v26 = *(void *)(v18 + v21 + 64);
    uint64_t v25 = *(void *)(v18 + v21 + 72);
    v27 = *(void **)(v18 + v21 + 48);
    uint64_t v28 = *(void *)(v18 + v21 + 56);
    id v85 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v29 = *((id *)&v87 + 1);
    if (!v27) {
      goto LABEL_25;
    }
    v82 = v29;
    unint64_t v30 = sub_1C21A93C4(v24);
    uint64_t v32 = v19[2];
    BOOL v33 = (v31 & 1) == 0;
    BOOL v34 = __OFADD__(v32, v33);
    uint64_t v35 = v32 + v33;
    if (v34) {
      goto LABEL_50;
    }
    char v36 = v31;
    if (v19[3] < v35)
    {
      sub_1C2279214(v35, 1);
      v19 = v89;
      unint64_t v30 = sub_1C21A93C4(v24);
      if ((v36 & 1) != (v37 & 1)) {
        goto LABEL_56;
      }
    }
    if (v36) {
      goto LABEL_54;
    }
    v19[(v30 >> 6) + 8] |= 1 << v30;
    *(unsigned char *)(v19[6] + v30) = v24;
    uint64_t v38 = v19[7] + 72 * v30;
    *(unsigned char *)uint64_t v38 = v23;
    *(void *)(v38 + 8) = v85;
    *(void *)(v38 + 16) = v28;
    *(void *)(v38 + 24) = v26;
    *(void *)(v38 + 32) = v25;
    *(_OWORD *)(v38 + 40) = v86;
    *(_OWORD *)(v38 + 56) = v87;
    uint64_t v39 = v19[2];
    BOOL v34 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v34) {
      goto LABEL_51;
    }
    ++v22;
    v19[2] = v40;
    v21 += 80;
    uint64_t v18 = v83;
    if (v84 == v22) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  v69 = (void *)swift_allocError();
  swift_willThrow();
  id v88 = v69;
  id v70 = v69;
  sub_1C2206F9C();
  if (swift_dynamicCast())
  {
    id aBlock = 0;
    unint64_t v91 = 0xE000000000000000;
    sub_1C25503A0();
    sub_1C254F5A0();
    sub_1C25504F0();
    sub_1C254F5A0();
    sub_1C25505F0();
    __break(1u);
LABEL_56:
    sub_1C2550910();
    __break(1u);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_1C21A6470(uint64_t a1, uint64_t a2)
{
  sub_1C25509C0();
  sub_1C254F570();
  uint64_t v4 = sub_1C2550A10();
  return sub_1C21A64E8(a1, a2, v4);
}

unint64_t sub_1C21A64E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1C2550870() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1C2550870() & 1) == 0);
    }
  }
  return v6;
}

void sub_1C21A65CC(void *a1@<X1>, void *a2@<X8>)
{
  sub_1C21AAB84(a1, v6);
  uint64_t v3 = (void *)v6[0];
  uint64_t v4 = (void *)v6[1];
  uint64_t v5 = v6[4];
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  *a2 = v5;
}

uint64_t sub_1C21A6654(char *a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  sub_1C21A6830();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *a1;
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = a2;
  *(unsigned char *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = v4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1C2370498;
  *(void *)(v15 + 24) = v14;
  sub_1C21A692C(0, &qword_1EBB6F008, &qword_1EBB6F028, (unint64_t *)&qword_1EBB6EFF0, 0x1E4F2B1B8);
  sub_1C21A68B4();
  swift_retain();
  sub_1C254EB10();
  sub_1C21A6D6C(&qword_1EBB6F010, (void (*)(uint64_t))sub_1C21A6830);
  uint64_t v16 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v16;
}

void sub_1C21A6830()
{
  if (!qword_1EBB6F018)
  {
    sub_1C21A692C(255, &qword_1EBB6F008, &qword_1EBB6F028, (unint64_t *)&qword_1EBB6EFF0, 0x1E4F2B1B8);
    sub_1C21A68B4();
    unint64_t v0 = sub_1C254EB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F018);
    }
  }
}

unint64_t sub_1C21A68B4()
{
  unint64_t result = qword_1EBB6F000;
  if (!qword_1EBB6F000)
  {
    sub_1C21A692C(255, &qword_1EBB6F008, &qword_1EBB6F028, (unint64_t *)&qword_1EBB6EFF0, 0x1E4F2B1B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F000);
  }
  return result;
}

void sub_1C21A692C(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_1C236F478(255, a3, a4, a5, MEMORY[0x1E4FBB320]);
    sub_1C2206F9C();
    unint64_t v6 = sub_1C254EAE0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C21A69BC(void *a1, void *a2)
{
  sub_1C21ACF78();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AD1C8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v25 = v10;
  uint64_t v26 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v24 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = (void *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a1;
  v13[4] = v2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1C2370494;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C21A6DF8(0, &qword_1EBB6DCF8, MEMORY[0x1E4F1AC28]);
  sub_1C21A6DB4(&qword_1EBB6DCF0, &qword_1EBB6DCF8, v15);
  id v16 = a2;
  id v17 = a1;
  swift_retain();
  sub_1C254EB10();
  sub_1C21A6D6C(&qword_1EBB6DD20, (void (*)(uint64_t))sub_1C21ACF78);
  uint64_t v18 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v27 = v18;
  v19 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C21A6DF8(0, &qword_1EBB6DCA0, MEMORY[0x1E4F1AAE0]);
  sub_1C21ACD78(0, &qword_1EBB6DD58, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB718]);
  sub_1C21A6DB4(&qword_1EBB6DC98, &qword_1EBB6DCA0, v19);
  uint64_t v20 = v24;
  sub_1C254EC40();
  swift_release();
  sub_1C21A6D6C(&qword_1EBB6DC88, (void (*)(uint64_t))sub_1C21AD1C8);
  uint64_t v21 = v25;
  uint64_t v22 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v21);
  return v22;
}

uint64_t sub_1C21A6D6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C21A6DB4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C21A6DF8(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C21A6DF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_1C21ACD78(255, &qword_1EBB6DD60, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_1C2206F9C();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C21A6E94()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C254E560();
  uint64_t v4 = *(void *)(v3 - 8);
  ((void (*)(void))MEMORY[0x1F4188790])();
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  unint64_t v8 = (void *)sub_1C254F430();
  id v9 = objc_msgSend(v7, sel_initWithSuiteName_, v8);

  if (v9)
  {
    id v10 = objc_msgSend(v9, sel_dictionaryRepresentation);
    uint64_t v11 = sub_1C254F2D0();

    if (*(void *)(v11 + 16))
    {
      sub_1C254E510();
      swift_retain_n();
      uint64_t v12 = sub_1C254E550();
      os_log_type_t v13 = sub_1C254FA40();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        uint64_t v26 = v2;
        uint64_t v15 = (uint8_t *)v14;
        uint64_t v16 = swift_slowAlloc();
        uint64_t v24 = v16;
        uint64_t v25 = v4;
        *(_DWORD *)uint64_t v15 = 136446210;
        v23[1] = v15 + 4;
        uint64_t v27 = *v1;
        uint64_t v28 = v16;
        sub_1C21AD428();
        uint64_t v17 = sub_1C254F4F0();
        uint64_t v27 = sub_1C21AD354(v17, v18, &v28);
        sub_1C2550120();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C21A1000, v12, v13, "[%{public}s] Migrating account status summary tile dismissal states", v15, 0xCu);
        uint64_t v19 = v24;
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v19, -1, -1);
        uint64_t v20 = v15;
        uint64_t v2 = v26;
        MEMORY[0x1C875A0B0](v20, -1, -1);

        uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v6, v3);
      }
      else
      {

        swift_release_n();
        uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      }
      MEMORY[0x1F4188790](v21);
      v23[-2] = v1;
      v23[-1] = v2;
      sub_1C21A9874(v11, (void (*)(uint64_t, uint64_t, unsigned char *))sub_1C21A9B60);
      swift_bridgeObjectRelease();
      uint64_t v22 = (void *)sub_1C254F430();
      objc_msgSend(v9, sel_hk_removeObjectsForKeysWithPrefix_, v22);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
}

unint64_t FeedItemKind.identifierPrefix.getter()
{
  return 0xD000000000000016;
}

unint64_t FeedItemKind.rawValue.getter()
{
  unint64_t result = 0x756F636341646461;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x53746E756F636361;
      break;
    case 2:
      unint64_t result = 0x41676E6972616873;
      break;
    case 3:
      unint64_t result = 0x726F63655277656ELL;
      break;
    case 4:
      unint64_t result = 0x7362614C77656ELL;
      break;
    case 5:
      unint64_t result = 0x694B64726F636572;
      break;
    case 6:
      unint64_t result = 0x79726F6765746163;
      break;
    case 7:
      unint64_t result = 6513781;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0x6867696C68676968;
      break;
    case 0xA:
      unint64_t result = 0x6E53646572616873;
      break;
    case 0xB:
      unint64_t result = 0x696472616F626E6FLL;
      break;
    case 0xC:
      unint64_t result = 7367028;
      break;
    case 0xD:
      unint64_t result = 0x697461676976616ELL;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000019;
      break;
    case 0xF:
      unint64_t result = 0x656D686361747461;
      break;
    case 0x10:
      unint64_t result = 0x72616265646973;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1C21A750C(void *a1@<X1>, void *a2@<X8>)
{
  sub_1C21AAB84(a1, v6);
  uint64_t v3 = v6[0];
  uint64_t v4 = (void *)v6[1];
  uint64_t v5 = (void *)v6[4];
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  *a2 = v3;
}

uint64_t OnboardingTileAppearanceManager.init(store:)(void *a1)
{
  *(void *)(v1 + 16) = a1;
  id v3 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  id v4 = a1;
  uint64_t v5 = (void *)sub_1C254F430();
  id v6 = objc_msgSend(v3, sel_initWithCategory_domainName_healthStore_, 0, v5, v4);

  *(void *)(v1 + 24) = v6;
  return v1;
}

id HealthRecordsSupportedStateChangeListener.init(handler:)(uint64_t a1, uint64_t a2)
{
  sub_1C21A78B8(0, (unint64_t *)&unk_1EBB6FA38, MEMORY[0x1E4F1AC70]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v16 - v8;
  id v10 = &v2[OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener__latestChange];
  uint64_t v17 = 0;
  char v18 = 0;
  sub_1C21A77E4();
  uint64_t v11 = v2;
  sub_1C254EB30();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v9, v6);
  uint64_t v12 = &v11[OBJC_IVAR____TtC15HealthRecordsUI41HealthRecordsSupportedStateChangeListener_handler];
  *(void *)uint64_t v12 = a1;
  *((void *)v12 + 1) = a2;
  swift_retain();

  os_log_type_t v13 = (objc_class *)type metadata accessor for HealthRecordsSupportedStateChangeListener();
  v16.receiver = v11;
  v16.super_class = v13;
  id v14 = objc_msgSendSuper2(&v16, sel_init);
  swift_release();
  return v14;
}

uint64_t type metadata accessor for HealthRecordsSupportedStateChangeListener()
{
  uint64_t result = qword_1EBB6F9F0;
  if (!qword_1EBB6F9F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C21A77E4()
{
  if (!qword_1EBB6F9D0)
  {
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F9D0);
    }
  }
}

uint64_t sub_1C21A783C()
{
  return swift_endAccess();
}

void sub_1C21A78B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C21A77E4();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t OnboardingViewIdentifier.stringIdentifier.getter()
{
  uint64_t v1 = v0;
  unint64_t v2 = 0x79726F6765746163;
  uint64_t v3 = type metadata accessor for OnboardingViewIdentifier();
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  id v9 = (char *)v17 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v17 - v10;
  uint64_t v12 = sub_1C254CB40();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21A7F2C(v1, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() >= 2)
  {
    sub_1C21A7F2C(v1, (uint64_t)v9);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        return v2;
      case 3u:
        unint64_t v2 = 0x54636972656E6567;
        break;
      case 4u:
        unint64_t v2 = 0x656C69547362616CLL;
        break;
      case 5u:
        unint64_t v2 = 0x616470557362616CLL;
        break;
      default:
        unint64_t v2 = 0xD000000000000011;
        sub_1C21AD548((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
        break;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v17[0] = 0;
    v17[1] = 0xE000000000000000;
    sub_1C21A7F2C(v1, (uint64_t)v6);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 4u:
      case 5u:
        break;
      default:
        sub_1C21AD548((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
        break;
    }
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    return v17[0];
  }
  return v2;
}

void sub_1C21A7D38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(self, sel_defaultCenter);
  sub_1C21A7F2C(a1, (uint64_t)v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
      break;
    default:
      sub_1C21AD548((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
      break;
  }
  uint64_t v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  sub_1C254FD10();
}

uint64_t sub_1C21A7F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OnboardingViewIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for OnboardingViewIdentifier()
{
  uint64_t result = qword_1EBB6DB18;
  if (!qword_1EBB6DB18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C21A7FDC(void *a1@<X1>, void *a2@<X8>)
{
  sub_1C21AAB84(a1, v7);
  uint64_t v3 = (void *)v7[0];
  uint64_t v4 = (void *)v7[1];
  id v5 = (void *)v7[4];
  uint64_t v6 = v7[5];
  swift_release();

  swift_release();
  swift_release();

  *a2 = v6;
}

uint64_t sub_1C21A8060(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v6 = a4;
  id v9 = *(void (**)(id, void *, uint64_t, void *))(a1 + 32);
  if (a4)
  {
    sub_1C21AB51C(0, &qword_1EBB6FF78);
    sub_1C21AB51C(0, &qword_1EBB6F980);
    sub_1C21A818C((unint64_t *)&qword_1EBB6FF80, &qword_1EBB6FF78);
    uint64_t v6 = sub_1C254F2D0();
  }
  swift_retain();
  id v10 = a2;
  id v11 = a3;
  id v12 = a5;
  v9(v10, a3, v6, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1C21A8180(id a1)
{
}

uint64_t sub_1C21A818C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C21AB51C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C21A81DC(int a1, void *a2, int a3, void *a4)
{
  sub_1C21A81E4(a1, a2, a3, a4, *(void (**)(id, BOOL))(v4 + 16));
}

void sub_1C21A81E4(int a1, void *a2, int a3, id a4, void (*a5)(id, BOOL))
{
  id v7 = a4;
  if (!a4)
  {
    id v9 = a2;
    id v7 = a2;
  }
  id v10 = a4;
  a5(v7, a4 != 0);
  sub_1C21A8180(v7);
}

id AccountStateChangeListener.init(handler:)(uint64_t a1, uint64_t a2)
{
  id v2 = sub_1C21A829C(a1, a2);
  swift_release();
  return v2;
}

id sub_1C21A829C(uint64_t a1, uint64_t a2)
{
  sub_1C21A85D8(0, &qword_1EBB6FA48, MEMORY[0x1E4F1AC70]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v16 - v8;
  id v10 = &v2[OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener__latestChange];
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  sub_1C21A8504();
  id v11 = v2;
  sub_1C254EB30();
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v9, v6);
  uint64_t v12 = OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_changePublisher;
  sub_1C21A842C();
  swift_allocObject();
  *(void *)&v11[v12] = sub_1C254EA50();
  uint64_t v13 = &v11[OBJC_IVAR____TtC15HealthRecordsUI26AccountStateChangeListener_handler];
  *(void *)uint64_t v13 = a1;
  *((void *)v13 + 1) = a2;
  swift_retain();

  uint64_t v14 = (objc_class *)type metadata accessor for AccountStateChangeListener();
  v17.receiver = v11;
  v17.super_class = v14;
  return objc_msgSendSuper2(&v17, sel_init);
}

void sub_1C21A842C()
{
  if (!qword_1EBB6F1D0)
  {
    sub_1C2200144(255, (unint64_t *)&qword_1EBB6FA00, (uint64_t)&type metadata for AccountStateChange, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C254EA60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F1D0);
    }
  }
}

uint64_t type metadata accessor for AccountStateChangeListener()
{
  uint64_t result = qword_1EBB6FA18;
  if (!qword_1EBB6FA18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C21A8504()
{
  if (!qword_1EBB6FA00)
  {
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6FA00);
    }
  }
}

uint64_t sub_1C21A855C()
{
  return swift_endAccess();
}

void sub_1C21A85D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C21A8504();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C21A8638(void *a1@<X1>, void *a2@<X8>)
{
  sub_1C21AAB84(a1, v7);
  uint64_t v3 = (void *)v7[0];
  uint64_t v4 = (void *)v7[1];
  uint64_t v5 = v7[3];
  uint64_t v6 = (void *)v7[4];
  swift_release();
  swift_release();

  swift_release();
  *a2 = v5;
}

uint64_t HKHealthStore.addObserver(following:sampleTypes:handler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  id v9 = objc_allocWithZone(MEMORY[0x1E4F2B8A0]);
  sub_1C21AB51C(0, &qword_1EBB6FF78);
  swift_bridgeObjectRetain();
  id v10 = a1;
  swift_retain();
  id v11 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  v19[4] = sub_1C21A81DC;
  v19[5] = v8;
  v19[0] = MEMORY[0x1E4F143A8];
  v19[1] = 1107296256;
  v19[2] = sub_1C21A8060;
  v19[3] = &block_descriptor_22;
  uint64_t v12 = _Block_copy(v19);
  id v13 = objc_msgSend(v9, sel_initWithTypes_anchor_resultsHandler_, v11, v10, v12);

  _Block_release(v12);
  swift_release();
  id v14 = v13;
  uint64_t v15 = (void *)sub_1C254F430();
  objc_msgSend(v14, sel_setDebugIdentifier_, v15);

  objc_msgSend(v4, sel_executeQuery_, v14);
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(void *)(v17 + 24) = v14;
  type metadata accessor for CancellationToken();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  *(void *)(result + 24) = sub_1C227475C;
  *(void *)(result + 32) = v17;
  return result;
}

uint64_t type metadata accessor for CancellationToken()
{
  return self;
}

uint64_t sub_1C21A8904(uint64_t a1, void (*a2)(void))
{
  sub_1C254CEE0();
  a2(0);
  sub_1C21A89AC();
  swift_retain();
  sub_1C254E1D0();
  swift_release();
  return v4;
}

unint64_t sub_1C21A89AC()
{
  unint64_t result = qword_1EBB6F240;
  if (!qword_1EBB6F240)
  {
    sub_1C254CEE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F240);
  }
  return result;
}

uint64_t type metadata accessor for UserDomainConceptDataProvider()
{
  return self;
}

unint64_t sub_1C21A8A28()
{
  unint64_t result = qword_1EBB70038;
  if (!qword_1EBB70038)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB70038);
  }
  return result;
}

void destroy for DisplayCategory(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 64);
}

id BrowseCategory.queryDescriptors.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v36[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (unsigned __int8 *)&v36[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21A9698(v1, (uint64_t)v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1C21FD4EC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v3 + 32))(v5, v8, v2);
      id v21 = objc_msgSend(self, sel_medicalRecordTypes);
      sub_1C21AB51C(0, &qword_1EBB6FF78);
      unint64_t v22 = sub_1C254F710();

      MEMORY[0x1F4188790](v23);
      *(&v35 - 2) = (uint64_t)v5;
      uint64_t v10 = sub_1C2268544((void (*)(uint64_t *__return_ptr, id *))sub_1C2268C24, (uint64_t)(&v35 - 4), v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return (id)v10;
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
      return (id)v10;
    case 4:
      id v24 = objc_msgSend(self, sel_medicalRecordTypes);
      sub_1C21AB51C(0, &qword_1EBB6FF78);
      unint64_t v25 = sub_1C254F710();

      if (!(v25 >> 62))
      {
        uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v26) {
          goto LABEL_9;
        }
LABEL_20:
        swift_bridgeObjectRelease();
        return (id)v10;
      }
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (!v26) {
        goto LABEL_20;
      }
LABEL_9:
      v36[0] = v10;
      id result = (id)sub_1C2550490();
      if ((v26 & 0x8000000000000000) == 0)
      {
        uint64_t v27 = self;
        uint64_t v28 = 0;
        do
        {
          if ((v25 & 0xC000000000000001) != 0) {
            id v29 = (id)MEMORY[0x1C87588E0](v28, v25);
          }
          else {
            id v29 = *(id *)(v25 + 8 * v28 + 32);
          }
          unint64_t v30 = v29;
          ++v28;
          id v31 = objc_msgSend(v27, sel_queryDescriptorWithSampleType_, v29);

          sub_1C2550460();
          sub_1C25504A0();
          sub_1C25504B0();
          sub_1C2550470();
        }
        while (v26 != v28);
        uint64_t v10 = v36[0];
        goto LABEL_20;
      }
      __break(1u);
LABEL_24:
      __break(1u);
      return result;
    case 8:
      sub_1C21ACA3C();
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1C255CEB0;
      sub_1C21AB51C(0, &qword_1EBB6E5E0);
      BOOL v33 = (void *)MEMORY[0x1C8757F60]((id)*MEMORY[0x1E4F29A80]);
      id v34 = objc_msgSend(self, sel_queryDescriptorWithSampleType_, v33);

      *(void *)(v32 + 32) = v34;
      v36[0] = v32;
      sub_1C254F730();
      return (id)v36[0];
    default:
      uint64_t v12 = *v8;
      unint64_t v13 = sub_1C21A9468();
      if (*(void *)(v13 + 16) && (uint64_t v14 = sub_1C21A93C4(v12), (v15 & 1) != 0))
      {
        uint64_t v16 = (void *)(*(void *)(v13 + 56) + 72 * v14);
        uint64_t v17 = (void *)v16[1];
        uint64_t v10 = v16[6];
        uint64_t v18 = (void *)v16[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v19 = v18;
        id v20 = v17;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        id result = objc_msgSend(self, sel_unknownRecordCategory);
        if (!result) {
          goto LABEL_24;
        }
        sub_1C21AA50C(result, (uint64_t)v36);
        id v20 = (id)v36[1];
        uint64_t v10 = v36[6];
        id v19 = (id)v36[8];
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return (id)v10;
  }
}

void sub_1C21A8FF0(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = a1;
  uint64_t v31 = *(void *)(a1 + 16);
  if (!v31)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  while (1)
  {
    if (v6 >= *(void *)(v3 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_1C2550910();
      __break(1u);
      goto LABEL_24;
    }
    long long v36 = *(_OWORD *)(v3 + v5 + 80);
    long long v37 = *(_OWORD *)(v3 + v5 + 96);
    char v7 = *(unsigned char *)(v3 + v5 + 40);
    uint64_t v8 = *(unsigned __int8 *)(v3 + v5 + 32);
    uint64_t v9 = *(void *)(v3 + v5 + 64);
    uint64_t v33 = *(void *)(v3 + v5 + 72);
    uint64_t v10 = *(void **)(v3 + v5 + 48);
    uint64_t v11 = *(void *)(v3 + v5 + 56);
    id v34 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v12 = *((id *)&v37 + 1);
    if (!v10) {
      goto LABEL_18;
    }
    id v29 = v12;
    uint64_t v32 = v9;
    unint64_t v13 = (void *)*a3;
    unint64_t v15 = sub_1C21A93C4(v8);
    uint64_t v16 = v13[2];
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      goto LABEL_21;
    }
    char v19 = v14;
    if (v13[3] < v18) {
      break;
    }
    if (a2)
    {
      if (v14) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1C24AD59C();
      if (v19) {
        goto LABEL_16;
      }
    }
LABEL_12:
    unint64_t v22 = (void *)*a3;
    *(void *)(*a3 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(unsigned char *)(v22[6] + v15) = v8;
    uint64_t v23 = v22[7] + 72 * v15;
    *(unsigned char *)uint64_t v23 = v7;
    *(void *)(v23 + 8) = v34;
    *(void *)(v23 + 16) = v11;
    *(void *)(v23 + 24) = v32;
    *(void *)(v23 + 32) = v33;
    *(_OWORD *)(v23 + 40) = v36;
    *(_OWORD *)(v23 + 56) = v37;
    uint64_t v24 = v22[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_22;
    }
    ++v6;
    v22[2] = v26;
    v5 += 80;
    a2 = 1;
    uint64_t v3 = a1;
    if (v31 == v6) {
      goto LABEL_18;
    }
  }
  sub_1C2279214(v18, a2 & 1);
  uint64_t v20 = sub_1C21A93C4(v8);
  if ((v19 & 1) != (v21 & 1)) {
    goto LABEL_23;
  }
  unint64_t v15 = v20;
  if ((v19 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v27 = (void *)swift_allocError();
  swift_willThrow();
  id v28 = v27;
  sub_1C2206F9C();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  sub_1C25503A0();
  sub_1C254F5A0();
  sub_1C25504F0();
  sub_1C254F5A0();
  sub_1C25505F0();
  __break(1u);
}

unint64_t sub_1C21A935C(unsigned __int8 a1)
{
  sub_1C25509C0();
  sub_1C25509D0();
  uint64_t v2 = sub_1C2550A10();
  return sub_1C21A93C8(a1, v2);
}

unint64_t sub_1C21A93C8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1C21A9468()
{
  id v0 = objc_msgSend(self, sel_supportedRecordCategoriesByCategoryType);
  if (v0)
  {
    uint64_t v1 = v0;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FFC0);
    sub_1C21A9630();
    unint64_t v2 = sub_1C254F2D0();

    sub_1C21AA128(v2);
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    if (*(void *)(v4 + 16))
    {
      sub_1C21A95CC();
      uint64_t v5 = sub_1C2550680();
    }
    else
    {
      uint64_t v5 = MEMORY[0x1E4FBC868];
    }
    uint64_t v9 = v5;
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_1C21A8FF0(v8, 1, &v9);
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    return sub_1C220615C(v6);
  }
}

void sub_1C21A95CC()
{
  if (!qword_1EBB6F9A0)
  {
    sub_1C2206AA8();
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F9A0);
    }
  }
}

unint64_t sub_1C21A9630()
{
  unint64_t result = qword_1EBB6F990;
  if (!qword_1EBB6F990)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB70030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F990);
  }
  return result;
}

uint64_t sub_1C21A9698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseCategory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *initializeWithCopy for BrowseCategory(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C254CB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    sub_1C21FD4EC();
    uint64_t v8 = *(int *)(v7 + 48);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v11;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1C21A9874(uint64_t a1, void (*a2)(uint64_t, uint64_t, unsigned char *))
{
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v7) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v20 + 8 * v15);
    ++v9;
    if (!v16)
    {
      int64_t v9 = v15 + 1;
      if (v15 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v20 + 8 * v9);
      if (!v16)
      {
        int64_t v9 = v15 + 2;
        if (v15 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v20 + 8 * v9);
        if (!v16)
        {
          int64_t v9 = v15 + 3;
          if (v15 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v16 = *(void *)(v20 + 8 * v9);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    id v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    sub_1C21A9A38(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v19);
    v18[0] = v13;
    v18[1] = v14;
    swift_bridgeObjectRetain();
    a2(v13, v14, v19);
    uint64_t result = sub_1C21A9A94((uint64_t)v18);
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v7) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v20 + 8 * v17);
  if (v16)
  {
    int64_t v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v20 + 8 * v9);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C21A9A38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C21A9A94(uint64_t a1)
{
  sub_1C21A9AF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C21A9AF0()
{
  if (!qword_1EBB6E5D8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB6E5D8);
    }
  }
}

uint64_t sub_1C21A9B60(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1C21A9B68(a1, a2, a3, *(uint64_t **)(v3 + 16));
}

uint64_t sub_1C21A9B68(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  v53[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_1C254E560();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790]();
  id v49 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C254E290();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C254CAD0();
  uint64_t v50 = *(void *)(v15 - 8);
  uint64_t v51 = v15;
  MEMORY[0x1F4188790]();
  int64_t v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C254F610();
  if (result)
  {
    sub_1C21A9A38(a3, (uint64_t)v53);
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      uint64_t v47 = v9;
      uint64_t v48 = v8;
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_1C254F580();
      unint64_t v20 = sub_1C2236F1C(v19, a1, a2);
      uint64_t v22 = v21;
      uint64_t v24 = v23;
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      uint64_t v27 = MEMORY[0x1C8757A30](v20, v22, v24, v26);
      unint64_t v29 = v28;
      swift_bridgeObjectRelease();
      sub_1C254C950();
      (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E4F67688], v11);
      id v30 = sub_1C24F4B6C();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      uint64_t v31 = (void *)sub_1C254CA50();
      uint64_t v32 = (void *)sub_1C254F430();
      v53[0] = 0;
      LODWORD(v24) = objc_msgSend(v30, sel_setDate_forKey_error_, v31, v32, v53);

      id v33 = v53[0];
      if (v24)
      {
        (*(void (**)(char *, uint64_t))(v50 + 8))(v17, v51);
        return swift_bridgeObjectRelease();
      }
      else
      {
        id v34 = v33;
        uint64_t v35 = (void *)sub_1C254C820();

        swift_willThrow();
        long long v36 = v49;
        sub_1C254E510();
        swift_retain_n();
        swift_bridgeObjectRetain();
        long long v37 = sub_1C254E550();
        os_log_type_t v38 = sub_1C254FA20();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          uint64_t v40 = (void *)swift_slowAlloc();
          v45 = v40;
          *(_DWORD *)uint64_t v39 = 136446466;
          v44[1] = v39 + 4;
          uint64_t v52 = *a4;
          v53[0] = v40;
          sub_1C21AD428();
          id v46 = v35;
          uint64_t v41 = sub_1C254F4F0();
          uint64_t v52 = sub_1C21AD354(v41, v42, (uint64_t *)v53);
          sub_1C2550120();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v39 + 12) = 2082;
          swift_bridgeObjectRetain();
          uint64_t v52 = sub_1C21AD354(v27, v29, (uint64_t *)v53);
          sub_1C2550120();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C21A1000, v37, v38, "[%{public}s] Failed to migrate account status summary tile dismissal for: %{public}s", (uint8_t *)v39, 0x16u);
          uint64_t v43 = v45;
          swift_arrayDestroy();
          MEMORY[0x1C875A0B0](v43, -1, -1);
          MEMORY[0x1C875A0B0](v39, -1, -1);
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
        }

        (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v48);
        return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v17, v51);
      }
    }
  }
  return result;
}

void sub_1C21AA128(unint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v36 = 0;
    uint64_t v1 = 0;
    unint64_t v2 = 0;
    unint64_t v3 = sub_1C2550520() | 0x8000000000000000;
  }
  else
  {
    uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v1 = ~v4;
    unint64_t v36 = a1 + 64;
    uint64_t v5 = -v4;
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v2 = v6 & *(void *)(a1 + 64);
    unint64_t v3 = a1;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v35 = (unint64_t)(v1 + 64) >> 6;
  id v34 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    uint64_t v8 = v7;
    if ((v3 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v11 = sub_1C25505B0();
    if (!v11) {
      goto LABEL_38;
    }
    uint64_t v13 = v12;
    uint64_t v40 = v11;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = (id)v37[0];
    swift_unknownObjectRelease();
    uint64_t v40 = v13;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FFC0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v15 = (id)v37[0];
    swift_unknownObjectRelease();
    if (!v14) {
      goto LABEL_38;
    }
LABEL_31:
    id v21 = objc_msgSend(v14, sel_integerValue);
    if ((unint64_t)v21 <= 0xA)
    {
      char v22 = (char)v21;
      id v23 = v15;
      sub_1C21AA50C(v23, (uint64_t)v37);

      char v31 = v37[0];
      uint64_t v24 = v37[1];
      uint64_t v25 = v37[2];
      uint64_t v29 = v37[4];
      uint64_t v30 = v37[3];
      long long v32 = v39;
      long long v33 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v34 = sub_1C21AB9D8(0, v34[2] + 1, 1, v34);
      }
      unint64_t v27 = v34[2];
      unint64_t v26 = v34[3];
      if (v27 >= v26 >> 1) {
        id v34 = sub_1C21AB9D8((void *)(v26 > 1), v27 + 1, 1, v34);
      }
      v34[2] = v27 + 1;
      unint64_t v28 = &v34[10 * v27];
      *((unsigned char *)v28 + 32) = v22;
      *((unsigned char *)v28 + 40) = v31;
      v28[6] = v24;
      v28[7] = v25;
      v28[8] = v30;
      v28[9] = v29;
      *((_OWORD *)v28 + 5) = v33;
      *((_OWORD *)v28 + 6) = v32;
    }
    else
    {
    }
  }
  if (v2)
  {
    unint64_t v9 = __clz(__rbit64(v2));
    v2 &= v2 - 1;
    unint64_t v10 = v9 | (v7 << 6);
LABEL_30:
    uint64_t v19 = 8 * v10;
    unint64_t v20 = *(void **)(*(void *)(v3 + 56) + v19);
    id v14 = *(id *)(*(void *)(v3 + 48) + v19);
    id v15 = v20;
    if (!v14) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
  int64_t v16 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v16 >= v35) {
      goto LABEL_38;
    }
    unint64_t v17 = *(void *)(v36 + 8 * v16);
    ++v7;
    if (!v17)
    {
      uint64_t v7 = v8 + 2;
      if (v8 + 2 >= v35) {
        goto LABEL_38;
      }
      unint64_t v17 = *(void *)(v36 + 8 * v7);
      if (!v17)
      {
        uint64_t v7 = v8 + 3;
        if (v8 + 3 >= v35) {
          goto LABEL_38;
        }
        unint64_t v17 = *(void *)(v36 + 8 * v7);
        if (!v17)
        {
          uint64_t v7 = v8 + 4;
          if (v8 + 4 >= v35) {
            goto LABEL_38;
          }
          unint64_t v17 = *(void *)(v36 + 8 * v7);
          if (!v17)
          {
            uint64_t v7 = v8 + 5;
            if (v8 + 5 >= v35) {
              goto LABEL_38;
            }
            unint64_t v17 = *(void *)(v36 + 8 * v7);
            if (!v17)
            {
              uint64_t v18 = v8 + 6;
              while (v35 != v18)
              {
                unint64_t v17 = *(void *)(v36 + 8 * v18++);
                if (v17)
                {
                  uint64_t v7 = v18 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              sub_1C21ABD08();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v2 = (v17 - 1) & v17;
    unint64_t v10 = __clz(__rbit64(v17)) + (v7 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

void sub_1C21AA50C(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = a1;
  id v28 = objc_msgSend(v3, sel_categoryType);
  id v4 = objc_msgSend(v3, sel_categoryMetricColors);
  id v5 = objc_msgSend(v4, sel_keyColor);

  if (!v5) {
    id v5 = objc_msgSend(self, sel_secondaryLabelColor);
  }
  id v6 = objc_msgSend(v3, sel_displayImageName);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C254F470();
    uint64_t v24 = v9;
    uint64_t v26 = v8;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v26 = 0;
  }
  id v10 = objc_msgSend(v3, sel_displayName, v24, v26);
  uint64_t v11 = sub_1C254F470();
  uint64_t v13 = v12;

  id v14 = objc_msgSend(v3, sel_sampleTypes);
  if (v14)
  {
    sub_1C21AB51C(0, &qword_1EBB6FF78);
    unint64_t v15 = sub_1C254F710();

    id v16 = v3;
    uint64_t v17 = sub_1C21AA8C8(v15, v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
  }
  id v18 = objc_msgSend(v3, sel_sampleTypes);
  if (v18)
  {
    uint64_t v19 = v18;
    sub_1C21AB51C(0, &qword_1EBB6FF78);
    unint64_t v20 = sub_1C254F710();

    id v21 = v3;
    uint64_t v22 = sub_1C21AA760(v20, v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  if ((unint64_t)v28 >= 0xB) {
    char v23 = 0;
  }
  else {
    char v23 = (char)v28;
  }

  *(unsigned char *)a2 = v23;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v27;
  *(void *)(a2 + 24) = v25;
  *(void *)(a2 + 32) = v11;
  *(void *)(a2 + 40) = v13;
  *(void *)(a2 + 48) = v17;
  *(void *)(a2 + 56) = v22;
  *(void *)(a2 + 64) = v3;
}

uint64_t sub_1C21AA760(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v5) {
      break;
    }
    uint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2550490();
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v7 = 0;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x1C87588E0](v7, a1);
      }
      else {
        id v8 = *(id *)(a1 + 8 * v7 + 32);
      }
      uint64_t v9 = v8;
      id v10 = v8;
      sub_1C21AAFE0(&v10, a2, &v11);

      if (v2) {
        return swift_release();
      }
      ++v7;
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      if (v5 == v7) {
        return v12;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C21AA8C8(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2550490();
    if ((v3 & 0x8000000000000000) == 0)
    {
      uint64_t v5 = 0;
      while (1)
      {
        if (v3 == v5)
        {
          __break(1u);
          goto LABEL_25;
        }
        if ((a1 & 0xC000000000000001) != 0) {
          id v7 = (id)MEMORY[0x1C87588E0](v5, a1);
        }
        else {
          id v7 = *(id *)(a1 + 8 * v5 + 32);
        }
        id v8 = v7;
        id v9 = objc_msgSend(a2, sel_additionalPredicatesForCategory);
        if (!v9) {
          goto LABEL_8;
        }
        id v10 = v9;
        sub_1C21AB51C(0, &qword_1EBB6FF78);
        sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
        sub_1C21AB970();
        uint64_t v11 = sub_1C254F2D0();

        if ((v11 & 0xC000000000000001) != 0)
        {
          id v12 = v8;
          if (sub_1C25505A0())
          {
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v6 = v16;
            swift_unknownObjectRelease();
LABEL_21:

            swift_bridgeObjectRelease();
            goto LABEL_9;
          }
        }
        else
        {
          if (!*(void *)(v11 + 16)) {
            goto LABEL_7;
          }
          id v12 = v8;
          unint64_t v13 = sub_1C245733C((uint64_t)v12);
          if (v14)
          {
            id v6 = *(id *)(*(void *)(v11 + 56) + 8 * v13);
            goto LABEL_21;
          }
        }

LABEL_7:
        swift_bridgeObjectRelease();
LABEL_8:
        id v6 = 0;
LABEL_9:
        ++v5;
        objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B3D0]), sel_initWithSampleType_predicate_, v8, v6);

        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
        if (v3 == v5) {
          return v17;
        }
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C21AAB84@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  id v6 = (uint64_t *)(v2 + OBJC_IVAR___HRProfileManager_profileCache);
  swift_beginAccess();
  uint64_t v7 = *v6;
  id v8 = a1;
  swift_bridgeObjectRetain();
  id v9 = sub_1C21AAE48(v8, v7);

  swift_bridgeObjectRelease();
  if (!v9) {
    id v9 = objc_msgSend(self, sel_userProfileWithProfileIdentifier_, v8);
  }
  uint64_t v10 = *v6;
  id v11 = v8;
  swift_bridgeObjectRetain();
  id v12 = sub_1C21AAE48(v11, v10);

  swift_bridgeObjectRelease();
  if (!v12)
  {
    swift_beginAccess();
    id v13 = v11;
    sub_1C253EEA0((uint64_t)v9, v13);
    swift_endAccess();
  }
  uint64_t v30 = v9;
  char v14 = (uint64_t *)(v3 + OBJC_IVAR___HRProfileManager_profileObjectsCache);
  swift_beginAccess();
  uint64_t v15 = *v14;
  id v16 = v11;
  swift_bridgeObjectRetain();
  sub_1C21AAE70((uint64_t)v16, v15, v32);
  uint64_t v17 = (void *)v32[0];
  uint64_t v18 = v32[1];
  uint64_t v19 = v32[2];
  unint64_t v20 = (void *)v32[3];
  uint64_t v22 = v32[4];
  uint64_t v21 = v32[5];

  swift_bridgeObjectRelease();
  sub_1C21AAF24((uint64_t)v32, (uint64_t)v36);
  if (!v36[0])
  {
    sub_1C253EF54(v30, v33);
    uint64_t v22 = v33[4];
    uint64_t v21 = v33[5];
    uint64_t v19 = v33[2];
    unint64_t v20 = (void *)v33[3];
    uint64_t v17 = (void *)v33[0];
    uint64_t v18 = v33[1];
  }
  *(void *)&long long v37 = v17;
  *((void *)&v37 + 1) = v18;
  uint64_t v38 = v19;
  long long v39 = v20;
  uint64_t v40 = v22;
  uint64_t v41 = v21;
  uint64_t v23 = *v14;
  id v24 = v16;
  swift_bridgeObjectRetain();
  sub_1C21AAE70((uint64_t)v24, v23, v34);

  swift_bridgeObjectRelease();
  sub_1C21AB8BC((uint64_t)v34);
  uint64_t result = sub_1C21AAF24((uint64_t)v34, (uint64_t)v35);
  if (!v35[0])
  {
    swift_beginAccess();
    id v26 = v24;
    id v27 = v17;
    swift_retain();
    swift_retain();
    id v28 = v20;
    swift_retain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = *v14;
    *char v14 = 0x8000000000000000;
    sub_1C2366B54(&v37, v26, isUniquelyReferenced_nonNull_native);
    *char v14 = v31;

    swift_bridgeObjectRelease();
    uint64_t result = swift_endAccess();
  }
  *a2 = v30;
  a2[1] = v17;
  a2[2] = v18;
  a2[3] = v19;
  a2[4] = v20;
  a2[5] = v22;
  a2[6] = v21;
  return result;
}

void *sub_1C21AAE48(void *a1, uint64_t a2)
{
  return sub_1C21AB2D0(a1, a2, (uint64_t (*)(void))sub_1C21AB3B8, (unint64_t *)&qword_1EBB70038);
}

uint64_t sub_1C21AAE70@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (uint64_t result = sub_1C21AB3B8(result), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void *)(a2 + 56) + 48 * result;
    id v8 = *(id *)v6;
    uint64_t v7 = *(void *)(v6 + 8);
    uint64_t v9 = *(void *)(v6 + 16);
    uint64_t v10 = *(void **)(v6 + 24);
    uint64_t v11 = *(void *)(v6 + 32);
    uint64_t v12 = *(void *)(v6 + 40);
    id v13 = *(id *)v6;
    swift_retain();
    swift_retain();
    id v14 = v10;
    swift_retain();
    uint64_t result = swift_retain();
  }
  else
  {
    id v8 = 0;
    uint64_t v7 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  *a3 = v8;
  a3[1] = v7;
  a3[2] = v9;
  a3[3] = v10;
  a3[4] = v11;
  a3[5] = v12;
  return result;
}

uint64_t sub_1C21AAF24(uint64_t a1, uint64_t a2)
{
  sub_1C21AAF88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C21AAF88()
{
  if (!qword_1EBB6EFF8)
  {
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6EFF8);
    }
  }
}

void sub_1C21AAFE0(void **a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  char v5 = *a1;
  sub_1C21AB73C(0, (unint64_t *)&qword_1EBB70058, (uint64_t (*)(uint64_t))sub_1C22E400C, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
  id v7 = v5;
  id v8 = objc_msgSend(a2, sel_additionalPredicatesForCategory);
  if (v8)
  {
    uint64_t v9 = v8;
    sub_1C21AB51C(0, &qword_1EBB6FF78);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
    sub_1C21AB970();
    uint64_t v10 = sub_1C254F2D0();

    id v11 = v7;
    uint64_t v12 = sub_1C21ABB68(v11, v10);
    swift_bridgeObjectRelease();
    *(void *)(inited + 32) = v12;
  }
  else
  {
    *(void *)(inited + 32) = 0;
  }
  *(void *)(inited + 40) = objc_msgSend(self, sel_predicateForMedicalRecordWithState_, 0);
  sub_1C254F730();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  id v13 = *(void **)(inited + 32);
  if (v13)
  {
    id v14 = v13;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v15 = *(void **)(inited + 40);
  if (v15)
  {
    id v16 = v15;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  swift_bridgeObjectRelease();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  uint64_t v17 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v17);

  id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B3D0]), sel_initWithSampleType_predicate_, v7, v18);
  *a3 = v19;
}

void *sub_1C21AB2D0(void *a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v9 = a3();
      if (v10)
      {
        id v8 = *(void **)(*(void *)(a2 + 56) + 8 * v9);
        id v11 = v8;
        return v8;
      }
    }
    return 0;
  }
  id v6 = a1;
  uint64_t v7 = sub_1C25505A0();

  if (!v7) {
    return 0;
  }
  sub_1C21AB51C(0, a4);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v8 = v13;
  swift_unknownObjectRelease();
  return v8;
}

unint64_t sub_1C21AB3B8(uint64_t a1)
{
  uint64_t v2 = sub_1C254FF60();
  return sub_1C21AB408(a1, v2, &qword_1EBB6FFA0);
}

unint64_t sub_1C21AB408(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1C21AB51C(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_1C254FF70();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_1C254FF70();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_1C21AB51C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1C21AB558(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C21AB5BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C21AB620(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C21AB684(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C21AB6D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C21AB73C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C21AB7A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C21AB7F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C21AB858(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C21AB8BC(uint64_t a1)
{
  return a1;
}

void *sub_1C21AB8F4(void *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (result)
  {

    swift_release();
    swift_release();

    swift_release();
    return (void *)swift_release();
  }
  return result;
}

unint64_t sub_1C21AB970()
{
  unint64_t result = qword_1EBB6FF80;
  if (!qword_1EBB6FF80)
  {
    sub_1C21AB51C(255, &qword_1EBB6FF78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6FF80);
  }
  return result;
}

void *sub_1C21AB9D8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C21ABAF8();
      id v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C21ABB90(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_1C21ABAF8()
{
  if (!qword_1EBB6F9C0)
  {
    sub_1C21ABCB4(255, &qword_1EBB6F590);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F9C0);
    }
  }
}

void *sub_1C21ABB68(void *a1, uint64_t a2)
{
  return sub_1C21AB2D0(a1, a2, (uint64_t (*)(void))sub_1C245733C, (unint64_t *)&qword_1EBB6FF60);
}

uint64_t sub_1C21ABB90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      sub_1C21ABCB4(0, &qword_1EBB6F590);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

void sub_1C21ABCB4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C21ABD08()
{
  return swift_release();
}

uint64_t static BrowseCategory.hiddenWhenEmpty.getter()
{
  sub_1C21ACA98(0, &qword_1EBB6FA58, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = *(void *)(type metadata accessor for BrowseCategory() - 8);
  unint64_t v1 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CD90;
  swift_storeEnumTagMultiPayload();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C255CD90;
  *(unsigned char *)(v3 + v1) = 8;
  swift_storeEnumTagMultiPayload();
  sub_1C21ABEDC(v3);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255CD90;
  *(unsigned char *)(v4 + v1) = 9;
  swift_storeEnumTagMultiPayload();
  sub_1C21ABEDC(v4);
  return v2;
}

uint64_t sub_1C21ABEDC(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_1C21AC490(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(type metadata accessor for BrowseCategory() - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C21AC08C(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    id v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C21AC374(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  id v19 = (void *)swift_allocObject();
  size_t v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_1C25505E0();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C227092C(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

uint64_t type metadata accessor for BrowseCategory()
{
  uint64_t result = qword_1EBB6FAE8;
  if (!qword_1EBB6FAE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C21AC374(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C21AC3D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550820();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C21AC42C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C21AC490(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C21AC08C(a1, a2, a3, a4, &qword_1EBB6FA58, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t (*)(void))type metadata accessor for BrowseCategory, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_43(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_45(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_46(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_47(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_49(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_51(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_52(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_53(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_55(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_56(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_57(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_59(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_61(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_62(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_63(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_65(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_66(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_67(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_69(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_71(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_72(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_73(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_75(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_76(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_77(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_79(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void sub_1C21ACA3C()
{
  if (!qword_1EBB6F4E0)
  {
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F4E0);
    }
  }
}

void sub_1C21ACA98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C21ACAFC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1C2550130();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1C23734E8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1C2550440();
  if (!v8)
  {
    sub_1C25505E0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1C25506A0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

id static NSNotificationName.accountStatusSummaryTileShouldReset.getter()
{
  return sub_1C21A4D60(&qword_1EBB6E600, (void **)&qword_1EBB6E5F0);
}

id static NSNotificationName.accountStatusSummaryTileDidDismiss.getter()
{
  return sub_1C21A4D60(&qword_1EBB6DE28, (void **)&qword_1EBB6E5E8);
}

unint64_t sub_1C21ACD00()
{
  unint64_t result = qword_1EBB6FF88;
  if (!qword_1EBB6FF88)
  {
    sub_1C254FC00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6FF88);
  }
  return result;
}

id static NSUserDefaults.numberOfMonthsForFrequentLabCutoff.getter()
{
  return sub_1C21A4F30(0xD000000000000029, 0x80000001C2577960, 3);
}

void sub_1C21ACD78(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C21ACDC4()
{
  unint64_t result = qword_1EBB6FF58;
  if (!qword_1EBB6FF58)
  {
    sub_1C21ACEB0(255, &qword_1EBB6FF50, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6FF58);
  }
  return result;
}

void sub_1C21ACE4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C21ACEB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C21ACF14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C21ACF78()
{
  if (!qword_1EBB6DD28)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
    sub_1C21A6DF8(255, &qword_1EBB6DCF8, MEMORY[0x1E4F1AC28]);
    sub_1C21A6DB4(&qword_1EBB6DCF0, &qword_1EBB6DCF8, v0);
    unint64_t v1 = sub_1C254EB20();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB6DD28);
    }
  }
}

void sub_1C21AD02C()
{
  if (!qword_1EBB6F430)
  {
    sub_1C21AD0C0();
    sub_1C21A51E0(&qword_1EBB6F418, (void (*)(uint64_t))sub_1C21AD0C0);
    unint64_t v0 = sub_1C254EB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F430);
    }
  }
}

void sub_1C21AD0C0()
{
  if (!qword_1EBB6F420)
  {
    unint64_t v0 = sub_1C254EAE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F420);
    }
  }
}

void sub_1C21AD128()
{
  if (!qword_1EBB6DCC8)
  {
    sub_1C221EDFC(255, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    sub_1C2206F9C();
    unint64_t v0 = sub_1C254EAE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6DCC8);
    }
  }
}

void sub_1C21AD1C8()
{
  if (!qword_1EBB6DC90)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C21A6DF8(255, &qword_1EBB6DCA0, MEMORY[0x1E4F1AAE0]);
    sub_1C21ACD78(255, &qword_1EBB6DD58, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB718]);
    sub_1C21A6DB4(&qword_1EBB6DC98, &qword_1EBB6DCA0, v0);
    unint64_t v1 = sub_1C254E940();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB6DC90);
    }
  }
}

void sub_1C21AD2B8()
{
  if (!qword_1EBB6DC80)
  {
    sub_1C21AD128();
    sub_1C21A588C((unint64_t *)&qword_1EBB6DCC0, (void (*)(uint64_t))sub_1C21AD128);
    unint64_t v0 = sub_1C254E930();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6DC80);
    }
  }
}

uint64_t sub_1C21AD354(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1C21ACAFC(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1C21A9A38((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1C21A9A38((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

unint64_t sub_1C21AD428()
{
  unint64_t result = qword_1EBB6E5D0;
  if (!qword_1EBB6E5D0)
  {
    type metadata accessor for AccountStatusSummaryTileSettingsManager();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB6E5D0);
  }
  return result;
}

uint64_t type metadata accessor for AccountStatusSummaryTileSettingsManager()
{
  return self;
}

uint64_t dispatch thunk of OnboardingTileAppearanceManager.lastDismissedDatePublisher(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of OnboardingTileAppearanceManager.shouldShowOnboardingTile(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeRecordExistsPublisher(with:medicalType:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeAllUserDomainConceptsPublisher(for:limit:filteringLowUtilityConcepts:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of AccountStateChangeListener.$latestChange.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t sub_1C21AD548(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C21AD5A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C21AD608(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t type metadata accessor for ClinicalPublisherFactory()
{
  return self;
}

uint64_t type metadata accessor for RecordKindDataProvider()
{
  return self;
}

uint64_t CancellationToken.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t CancellationToken.init(cancelBlock:)(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return v2;
}

ValueMetadata *type metadata accessor for DisplayCategory.Kind()
{
  return &type metadata for DisplayCategory.Kind;
}

uint64_t dispatch thunk of ProfileManager.udcChangeProvider(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t sub_1C21AD6E4(uint64_t a1)
{
  return sub_1C21A8904(a1, MEMORY[0x1E4F67810]);
}

uint64_t dispatch thunk of ProfileManager.udcDataProvider(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t sub_1C21AD744(uint64_t a1)
{
  return sub_1C21A8904(a1, (void (*)(void))type metadata accessor for UserDomainConceptDataProvider);
}

uint64_t dispatch thunk of ProfileManager.pinnedLabsManager(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t sub_1C21AD7A4(uint64_t a1)
{
  return sub_1C21A8904(a1, MEMORY[0x1E4F677E8]);
}

ValueMetadata *type metadata accessor for FeedItemKind()
{
  return &type metadata for FeedItemKind;
}

uint64_t dispatch thunk of HealthRecordsSupportedStateChangeListener.$latestChange.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

void sub_1C21B1498(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C21B1810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_1C21B1A04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_6(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_7(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_1C21B4F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C21C85EC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1C21C86FC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id HBXBundle()
{
  uint64_t v0 = (void *)HBXBundle___ClassBundle;
  if (!HBXBundle___ClassBundle)
  {
    uint64_t v1 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    uint64_t v2 = (void *)HBXBundle___ClassBundle;
    HBXBundle___ClassBundle = v1;

    uint64_t v0 = (void *)HBXBundle___ClassBundle;
  }
  return v0;
}

id HKHealthRecordsUIFrameworkBundle()
{
  uint64_t v0 = (void *)HKHealthRecordsUIFrameworkBundle___ClassBundle;
  if (!HKHealthRecordsUIFrameworkBundle___ClassBundle)
  {
    uint64_t v1 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    uint64_t v2 = (void *)HKHealthRecordsUIFrameworkBundle___ClassBundle;
    HKHealthRecordsUIFrameworkBundle___ClassBundle = v1;

    uint64_t v0 = (void *)HKHealthRecordsUIFrameworkBundle___ClassBundle;
  }
  return v0;
}

void sub_1C21CBE70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_1C21CCEDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C21CD208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void sub_1C21CD410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C21CDC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void OUTLINED_FUNCTION_0_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

uint64_t OUTLINED_FUNCTION_1_0()
{
  return v0;
}

void sub_1C21D1DEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id HRWDAsUserActivityResponder(void *a1)
{
  id v1 = a1;
  if ([(id)objc_opt_class() conformsToProtocol:&unk_1F1DCC858])
  {
    id v2 = v1;
  }
  else
  {
    id v2 = +[HRWDEmptyUserActivityResponder emptyUserActivityResponder];
  }
  uint64_t v3 = v2;

  return v3;
}

uint64_t _ConceptsOfRecordsAreDefinedAndEqual(void *a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = [a1 primaryConcept];
  unint64_t v5 = [v4 groupByConcept];

  uint64_t v6 = [v3 primaryConcept];

  uint64_t v7 = [v6 groupByConcept];

  if (v5) {
    uint64_t v8 = [v5 isEqual:v7];
  }
  else {
    uint64_t v8 = 0;
  }

  return v8;
}

void sub_1C21D4044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C21D4180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C21D42D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void sub_1C21D442C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C21D455C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C21D4AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 176), 8);
  _Block_object_dispose((const void *)(v31 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1C21D6150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1C21D95EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C21D9768(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

uint64_t HRFeatureFlagShowLanguageOfPreferredName()
{
  return MEMORY[0x1F40C9FB0]("HealthRecords", "show_concept_preferred_name_language");
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void sub_1C21DBE8C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_1C21DC8D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1C21DCEAC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_1C21E3F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void sub_1C21E4E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 208), 8);
  _Block_object_dispose((const void *)(v33 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1C21E531C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1C21E5A64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1C21E8964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void CategoryRecordKind.categoryKind.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t CategoryRecordKind.conceptId.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t CategoryRecordKind.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CategoryRecordKind.meaningfulDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CategoryRecordKind() + 28);
  return sub_1C21EA654(v3, a1);
}

uint64_t type metadata accessor for CategoryRecordKind()
{
  uint64_t result = qword_1EBB6F678;
  if (!qword_1EBB6F678) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C21EA654(uint64_t a1, uint64_t a2)
{
  sub_1C21EA6B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C21EA6B8()
{
  if (!qword_1EBB6F550)
  {
    sub_1C254CAD0();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F550);
    }
  }
}

uint64_t CategoryRecordKind.hash(into:)()
{
  uint64_t v1 = sub_1C254CAD0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C25509D0();
  sub_1C2550A00();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for CategoryRecordKind();
  sub_1C21EA654(v0 + *(int *)(v8 + 28), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1) {
    return sub_1C25509E0();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_1C25509E0();
  sub_1C21ECB8C(&qword_1EA2DD9B0, MEMORY[0x1E4F27928]);
  sub_1C254F380();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t CategoryRecordKind.hashValue.getter()
{
  uint64_t v1 = sub_1C254CAD0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C25509C0();
  sub_1C25509D0();
  sub_1C2550A00();
  sub_1C254F570();
  uint64_t v8 = type metadata accessor for CategoryRecordKind();
  sub_1C21EA654(v0 + *(int *)(v8 + 28), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1C25509E0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1C25509E0();
    sub_1C21ECB8C(&qword_1EA2DD9B0, MEMORY[0x1E4F27928]);
    sub_1C254F380();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_1C2550A10();
}

uint64_t sub_1C21EAB18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CAD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C25509D0();
  sub_1C2550A00();
  sub_1C254F570();
  sub_1C21EA654(v2 + *(int *)(a2 + 28), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
    return sub_1C25509E0();
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  sub_1C25509E0();
  sub_1C21ECB8C(&qword_1EA2DD9B0, MEMORY[0x1E4F27928]);
  sub_1C254F380();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C21EAD00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CAD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C25509C0();
  sub_1C25509D0();
  sub_1C2550A00();
  sub_1C254F570();
  sub_1C21EA654(v2 + *(int *)(a2 + 28), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1C25509E0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_1C25509E0();
    sub_1C21ECB8C(&qword_1EA2DD9B0, MEMORY[0x1E4F27928]);
    sub_1C254F380();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_1C2550A10();
}

uint64_t sub_1C21EAF08()
{
  return MEMORY[0x1F40E63F0](*v0);
}

uint64_t sub_1C21EAF10(uint64_t a1, uint64_t a2)
{
  int v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x1C8757DB0](a1, &v6);
  char v4 = v7;
  int v5 = v6;
  if (v7) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_1C21EAF64(uint64_t a1, uint64_t a2)
{
  int v7 = 0;
  char v8 = 1;
  char v3 = MEMORY[0x1C8757DC0](a1, &v7);
  char v4 = v8;
  int v5 = v7;
  if (v8) {
    int v5 = 0;
  }
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_1C21EAFBC(float *a1@<X8>)
{
  *a1 = MEMORY[0x1C8757DD0]();
}

id sub_1C21EAFE4()
{
  return *v0;
}

uint64_t sub_1C21EAFEC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1C21EAFF4(uint64_t a1, uint64_t a2)
{
  return sub_1C21EC550(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1C21EB020(uint64_t a1)
{
  uint64_t v2 = sub_1C21ECB8C(&qword_1EA2DDE68, type metadata accessor for ASWebAuthenticationSessionError);
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1C21EB08C(uint64_t a1)
{
  uint64_t v2 = sub_1C21ECB8C(&qword_1EA2DDE68, type metadata accessor for ASWebAuthenticationSessionError);
  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1C21EB0FC(uint64_t a1)
{
  uint64_t v2 = sub_1C21ECB8C(&qword_1EA2DDEA0, type metadata accessor for ASWebAuthenticationSessionError);
  return MEMORY[0x1F40E4480](a1, v2);
}

void *sub_1C21EB170@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1C21EB184(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1C21EB198(void *result)
{
  *v1 &= *result;
  return result;
}

void sub_1C21EB1AC(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1C21EB1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

uint64_t sub_1C21EB1CC(uint64_t a1)
{
  uint64_t v2 = sub_1C21ECB8C(&qword_1EA2DDEC8, type metadata accessor for HKError);
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1C21EB238(uint64_t a1)
{
  uint64_t v2 = sub_1C21ECB8C(&qword_1EA2DDEC8, type metadata accessor for HKError);
  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1C21EB2A4(uint64_t a1)
{
  uint64_t v2 = sub_1C21ECB8C(&qword_1EA2DDEF8, type metadata accessor for HKError);
  return MEMORY[0x1F40E4480](a1, v2);
}

BOOL sub_1C21EB310(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

uint64_t sub_1C21EB340()
{
  return sub_1C25509D0();
}

void *sub_1C21EB36C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1C21EB380@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_1C21EB394@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1C21EB3C0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1C21EB3E4(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1C21EB3F8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1C21EB40C(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1C21EB420(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1C21EB434(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1C21EB448()
{
  return *v0 == 0;
}

void *sub_1C21EB458(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_1C21EB46C(uint64_t a1, id *a2)
{
  uint64_t result = sub_1C254F450();
  *a2 = 0;
  return result;
}

uint64_t sub_1C21EB4E4(uint64_t a1, id *a2)
{
  char v3 = sub_1C254F460();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1C21EB564@<X0>(uint64_t *a1@<X8>)
{
  sub_1C254F470();
  uint64_t v2 = sub_1C254F430();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C21EB5A8()
{
  return sub_1C2550A10();
}

uint64_t sub_1C21EB5F0()
{
  return sub_1C2550A10();
}

uint64_t sub_1C21EB634()
{
  return sub_1C254F470();
}

uint64_t sub_1C21EB644(uint64_t a1)
{
  uint64_t v2 = sub_1C21ECB8C(&qword_1EA2DDEF8, type metadata accessor for HKError);
  return MEMORY[0x1F40E44F0](a1, v2);
}

uint64_t sub_1C21EB6B0(uint64_t a1)
{
  uint64_t v2 = sub_1C21ECB8C(&qword_1EA2DDEF8, type metadata accessor for HKError);
  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_1C21EB71C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C21ECB8C(&qword_1EA2DDEF8, type metadata accessor for HKError);
  id v5 = a1;
  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_1C21EB7AC()
{
  id v1 = *v0;
  uint64_t v2 = sub_1C254FF90();

  return v2;
}

uint64_t sub_1C21EB7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C21ECB8C(&qword_1EA2DDEF8, type metadata accessor for HKError);
  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

void *sub_1C21EB864@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1C21EB874(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1C21EB884()
{
  return sub_1C254F470();
}

uint64_t sub_1C21EB894(uint64_t a1)
{
  uint64_t v2 = sub_1C21ECB8C(&qword_1EA2DDEA0, type metadata accessor for ASWebAuthenticationSessionError);
  return MEMORY[0x1F40E44F0](a1, v2);
}

uint64_t sub_1C21EB900(uint64_t a1)
{
  uint64_t v2 = sub_1C21ECB8C(&qword_1EA2DDEA0, type metadata accessor for ASWebAuthenticationSessionError);
  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_1C21EB96C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C21ECB8C(&qword_1EA2DDEA0, type metadata accessor for ASWebAuthenticationSessionError);
  id v5 = a1;
  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_1C21EB9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C21ECB8C(&qword_1EA2DDEA0, type metadata accessor for ASWebAuthenticationSessionError);
  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

uint64_t sub_1C21EBA78()
{
  return sub_1C2550A10();
}

void *sub_1C21EBAD8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C21EBAE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1C21EDEEC(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_DWORD *sub_1C21EBB24@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_1C21EBB34@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_1C21EBB40()
{
  return sub_1C25506B0();
}

uint64_t sub_1C21EBBFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C21ECB8C(&qword_1EA2DDEF8, type metadata accessor for HKError);
  return MEMORY[0x1F40E44B8](a1, a2, a3, v6);
}

BOOL sub_1C21EBC80(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C21EBC98()
{
  sub_1C21ECB8C(&qword_1EA2DDC88, type metadata accessor for CIImageRepresentationOption);
  sub_1C21ECB8C(&qword_1EA2DDC90, type metadata accessor for CIImageRepresentationOption);
  return sub_1C25506B0();
}

uint64_t sub_1C21EBD54()
{
  sub_1C21ECB8C(&qword_1EA2DDC58, type metadata accessor for TextStyle);
  sub_1C21ECB8C(&qword_1EA2DDC60, type metadata accessor for TextStyle);
  return sub_1C25506B0();
}

uint64_t sub_1C21EBE10()
{
  sub_1C21ECB8C((unint64_t *)&qword_1EA2E4470, type metadata accessor for Key);
  sub_1C21ECB8C(&qword_1EA2DDF40, type metadata accessor for Key);
  return sub_1C25506B0();
}

uint64_t sub_1C21EBECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C21ECB8C(&qword_1EA2DDEA0, type metadata accessor for ASWebAuthenticationSessionError);
  return MEMORY[0x1F40E44B8](a1, a2, a3, v6);
}

uint64_t sub_1C21EBF50()
{
  sub_1C21ECB8C(&qword_1EA2DDF28, type metadata accessor for AttributeName);
  sub_1C21ECB8C((unint64_t *)&unk_1EA2DDF30, type metadata accessor for AttributeName);
  return sub_1C25506B0();
}

uint64_t sub_1C21EC00C()
{
  sub_1C21ECB8C(&qword_1EA2DDF18, type metadata accessor for FeatureKey);
  sub_1C21ECB8C(&qword_1EA2DDF20, type metadata accessor for FeatureKey);
  return sub_1C25506B0();
}

uint64_t sub_1C21EC0C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C254F470();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C21EC0F4()
{
  sub_1C21ECB8C(&qword_1EA2DDF08, type metadata accessor for ActivityType);
  sub_1C21ECB8C(&qword_1EA2DDF10, type metadata accessor for ActivityType);
  return sub_1C25506B0();
}

uint64_t sub_1C21EC1B0()
{
  sub_1C21ECB8C(&qword_1EA2DDF68, type metadata accessor for DocumentReadingOptionKey);
  sub_1C21ECB8C(&qword_1EA2DDF70, type metadata accessor for DocumentReadingOptionKey);
  return sub_1C25506B0();
}

uint64_t sub_1C21EC26C()
{
  sub_1C21ECB8C(&qword_1EA2DDF58, type metadata accessor for DocumentType);
  sub_1C21ECB8C(&qword_1EA2DDF60, type metadata accessor for DocumentType);
  return sub_1C25506B0();
}

uint64_t sub_1C21EC328()
{
  sub_1C21ECB8C(&qword_1EA2DDC78, type metadata accessor for HKOntologyShardIdentifier);
  sub_1C21ECB8C(&qword_1EA2DDC80, type metadata accessor for HKOntologyShardIdentifier);
  return sub_1C25506B0();
}

uint64_t sub_1C21EC3E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C254F430();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C21EC42C()
{
  sub_1C21ECB8C(&qword_1EA2DDC68, type metadata accessor for HKOntologyShardSchemaType);
  sub_1C21ECB8C(&qword_1EA2DDC70, type metadata accessor for HKOntologyShardSchemaType);
  return sub_1C25506B0();
}

uint64_t sub_1C21EC4E8()
{
  return MEMORY[0x1F41840D0](*v0);
}

uint64_t sub_1C21EC4F0()
{
  return sub_1C25509F0();
}

void sub_1C21EC524()
{
}

uint64_t sub_1C21EC538(uint64_t a1, uint64_t a2)
{
  return sub_1C21EC550(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1C21EC550(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1C254F470();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C21EC594()
{
  sub_1C254F470();
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C21EC5E8()
{
  sub_1C254F470();
  sub_1C25509C0();
  sub_1C254F570();
  uint64_t v0 = sub_1C2550A10();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_1C21EC65C(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C21EC670()
{
  uint64_t v0 = sub_1C254F470();
  uint64_t v2 = v1;
  if (v0 == sub_1C254F470() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C2550870();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL _s15HealthRecordsUI18CategoryRecordKindV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1C254CAD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EDF24();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EA6B8();
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  unint64_t v18 = (char *)&v34 - v17;
  MEMORY[0x1F4188790](v16);
  size_t v20 = (char *)&v34 - v19;
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2 || a1[1] != a2[1]) {
    return 0;
  }
  if (a1[2] == a2[2] && a1[3] == a2[3] || (v21 = sub_1C2550870(), BOOL result = 0, (v21 & 1) != 0))
  {
    int64_t v35 = v7;
    uint64_t v23 = v4;
    uint64_t v24 = v5;
    uint64_t v25 = type metadata accessor for CategoryRecordKind();
    sub_1C21EA654((uint64_t)a1 + *(int *)(v25 + 28), (uint64_t)v20);
    uint64_t v26 = *(int *)(v25 + 28);
    uint64_t v27 = v24;
    uint64_t v28 = v23;
    sub_1C21EA654((uint64_t)a2 + v26, (uint64_t)v18);
    uint64_t v29 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_1C21EA654((uint64_t)v20, (uint64_t)v11);
    sub_1C21EA654((uint64_t)v18, v29);
    uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    if (v30((uint64_t)v11, 1, v23) == 1)
    {
      sub_1C21EDF88((uint64_t)v18, (uint64_t (*)(void))sub_1C21EA6B8);
      sub_1C21EDF88((uint64_t)v20, (uint64_t (*)(void))sub_1C21EA6B8);
      if (v30(v29, 1, v23) == 1)
      {
        sub_1C21EDF88((uint64_t)v11, (uint64_t (*)(void))sub_1C21EA6B8);
        return 1;
      }
    }
    else
    {
      sub_1C21EA654((uint64_t)v11, (uint64_t)v15);
      if (v30(v29, 1, v23) != 1)
      {
        uint64_t v31 = v35;
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v35, v29, v28);
        sub_1C21ECB8C(&qword_1EA2DDD00, MEMORY[0x1E4F27928]);
        char v32 = sub_1C254F420();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v27 + 8);
        v33(v31, v28);
        sub_1C21EDF88((uint64_t)v18, (uint64_t (*)(void))sub_1C21EA6B8);
        sub_1C21EDF88((uint64_t)v20, (uint64_t (*)(void))sub_1C21EA6B8);
        v33(v15, v28);
        sub_1C21EDF88((uint64_t)v11, (uint64_t (*)(void))sub_1C21EA6B8);
        return (v32 & 1) != 0;
      }
      sub_1C21EDF88((uint64_t)v18, (uint64_t (*)(void))sub_1C21EA6B8);
      sub_1C21EDF88((uint64_t)v20, (uint64_t (*)(void))sub_1C21EA6B8);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v23);
    }
    sub_1C21EDF88((uint64_t)v11, (uint64_t (*)(void))sub_1C21EDF24);
    return 0;
  }
  return result;
}

uint64_t sub_1C21ECB44()
{
  return sub_1C21ECB8C((unint64_t *)&unk_1EA2DD9B8, (void (*)(uint64_t))type metadata accessor for CategoryRecordKind);
}

uint64_t sub_1C21ECB8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for CategoryRecordKind(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = a2[3];
    uint64_t v5 = *(int *)(a3 + 28);
    uint64_t v6 = (void *)(a1 + v5);
    int v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1C254CAD0();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    if (v10(v7, 1, v8))
    {
      sub_1C21EA6B8();
      memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for CategoryRecordKind(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    int v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for CategoryRecordKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  swift_bridgeObjectRetain();
  if (v9(v6, 1, v7))
  {
    sub_1C21EA6B8();
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithCopy for CategoryRecordKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1C254CAD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1C21EA6B8();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for CategoryRecordKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1C21EA6B8();
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for CategoryRecordKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1C254CAD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1C21EA6B8();
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for CategoryRecordKind(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C21ED3C0);
}

uint64_t sub_1C21ED3C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C21EA6B8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for CategoryRecordKind(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C21ED484);
}

uint64_t sub_1C21ED484(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    sub_1C21EA6B8();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C21ED52C()
{
  sub_1C21EA6B8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void type metadata accessor for HKMedicalRecordState(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for DisplayCategory(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C21ED650(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C21ED670(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for HRUserDomainConceptListType(uint64_t a1)
{
}

void type metadata accessor for TextStyle(uint64_t a1)
{
}

void type metadata accessor for HKTimeScope(uint64_t a1)
{
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for HKConceptIndexManagerState(uint64_t a1)
{
}

void type metadata accessor for HKDateFormatUtilitiesDateTemplate(uint64_t a1)
{
}

uint64_t _s9YearRangeVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s9YearRangeVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for HKOntologyShardSchemaType(uint64_t a1)
{
}

void type metadata accessor for HKOntologyShardIdentifier(uint64_t a1)
{
}

void type metadata accessor for HKClinicalAccountState(uint64_t a1)
{
}

void type metadata accessor for CGContext(uint64_t a1)
{
}

void type metadata accessor for HKClinicalAccountStateChangeType(uint64_t a1)
{
}

void type metadata accessor for WDOnboardingFunnelContext(uint64_t a1)
{
}

void type metadata accessor for HKMedicalRecordCategoryType(uint64_t a1)
{
}

void type metadata accessor for HKClinicalOnboardingOptions(uint64_t a1)
{
}

void type metadata accessor for HRBrandImageManagerFetchOptions(uint64_t a1)
{
}

void type metadata accessor for HKClinicalIngestionState(uint64_t a1)
{
}

void type metadata accessor for CIImageRepresentationOption(uint64_t a1)
{
}

uint64_t sub_1C21ED874()
{
  return sub_1C21ECB8C(&qword_1EA2DDB40, type metadata accessor for CIImageRepresentationOption);
}

uint64_t sub_1C21ED8BC()
{
  return sub_1C21ECB8C(&qword_1EA2DDB48, type metadata accessor for CIImageRepresentationOption);
}

uint64_t sub_1C21ED904()
{
  return sub_1C21ECB8C(&qword_1EA2DDB50, type metadata accessor for HRBrandImageManagerFetchOptions);
}

uint64_t sub_1C21ED94C()
{
  return sub_1C21ECB8C(&qword_1EA2DDB58, type metadata accessor for HRBrandImageManagerFetchOptions);
}

uint64_t sub_1C21ED994()
{
  return sub_1C21ECB8C(&qword_1EA2DDB60, type metadata accessor for HRBrandImageManagerFetchOptions);
}

uint64_t sub_1C21ED9DC()
{
  return sub_1C21ECB8C(&qword_1EA2DDB68, type metadata accessor for HRBrandImageManagerFetchOptions);
}

uint64_t sub_1C21EDA24()
{
  return sub_1C21ECB8C(&qword_1EA2DDB70, type metadata accessor for HKClinicalOnboardingOptions);
}

uint64_t sub_1C21EDA6C()
{
  return sub_1C21ECB8C(&qword_1EA2DDB78, type metadata accessor for HKClinicalOnboardingOptions);
}

uint64_t sub_1C21EDAB4()
{
  return sub_1C21ECB8C(&qword_1EA2DDB80, type metadata accessor for HKClinicalOnboardingOptions);
}

uint64_t sub_1C21EDAFC()
{
  return sub_1C21ECB8C(&qword_1EA2DDB88, type metadata accessor for HKClinicalOnboardingOptions);
}

uint64_t sub_1C21EDB44()
{
  return sub_1C21ECB8C(&qword_1EA2DDB90, type metadata accessor for HKClinicalAccountState);
}

uint64_t sub_1C21EDB8C()
{
  return sub_1C21ECB8C(&qword_1EA2DDB98, type metadata accessor for HKOntologyShardIdentifier);
}

uint64_t sub_1C21EDBD4()
{
  return sub_1C21ECB8C(&qword_1EA2DDBA0, type metadata accessor for HKOntologyShardIdentifier);
}

uint64_t sub_1C21EDC1C()
{
  return sub_1C21ECB8C(&qword_1EA2DDBA8, type metadata accessor for HKOntologyShardIdentifier);
}

uint64_t sub_1C21EDC64()
{
  return sub_1C21ECB8C(&qword_1EA2DDBB0, type metadata accessor for HKOntologyShardSchemaType);
}

uint64_t sub_1C21EDCAC()
{
  return sub_1C21ECB8C(&qword_1EA2DDBB8, type metadata accessor for HKOntologyShardSchemaType);
}

uint64_t sub_1C21EDCF4()
{
  return sub_1C21ECB8C(&qword_1EA2DDBC0, type metadata accessor for HKOntologyShardSchemaType);
}

uint64_t sub_1C21EDD3C()
{
  return sub_1C21ECB8C(&qword_1EA2DDBC8, type metadata accessor for HKTimeScope);
}

uint64_t sub_1C21EDD84()
{
  return sub_1C21ECB8C(&qword_1EA2DDBD0, type metadata accessor for TextStyle);
}

uint64_t sub_1C21EDDCC()
{
  return sub_1C21ECB8C(&qword_1EA2DDBD8, type metadata accessor for TextStyle);
}

uint64_t sub_1C21EDE14()
{
  return sub_1C21ECB8C(&qword_1EA2DDBE0, type metadata accessor for TextStyle);
}

uint64_t sub_1C21EDE5C()
{
  return sub_1C21ECB8C(&qword_1EA2DDBE8, type metadata accessor for HKMedicalRecordState);
}

uint64_t sub_1C21EDEA4()
{
  return sub_1C21ECB8C(&qword_1EA2DDBF0, type metadata accessor for CIImageRepresentationOption);
}

uint64_t sub_1C21EDEEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  unint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void sub_1C21EDF24()
{
  if (!qword_1EA2DDCF8)
  {
    sub_1C21EA6B8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DDCF8);
    }
  }
}

uint64_t sub_1C21EDF88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for CFError(uint64_t a1)
{
}

void type metadata accessor for ASWebAuthenticationSessionError(uint64_t a1)
{
}

void type metadata accessor for ActivityType(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for HKError(uint64_t a1)
{
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

void type metadata accessor for HKSignedClinicalDataGroupOptions(uint64_t a1)
{
}

void type metadata accessor for DocumentType(uint64_t a1)
{
}

void type metadata accessor for DocumentReadingOptionKey(uint64_t a1)
{
}

void type metadata accessor for HKClinicalSharingMultiDeviceStatus(uint64_t a1)
{
}

void type metadata accessor for HKClinicalSharingUserStatus(uint64_t a1)
{
}

void type metadata accessor for HKClinicalAccountDeletionReason(uint64_t a1)
{
}

void type metadata accessor for WDMedicalRecordDisplayItemType(uint64_t a1)
{
}

void type metadata accessor for UITraitEnvironmentLayoutDirection(uint64_t a1)
{
}

uint64_t sub_1C21EE150()
{
  return sub_1C21ECB8C(&qword_1EA2DDD98, type metadata accessor for WDMedicalRecordDisplayItemType);
}

uint64_t sub_1C21EE198()
{
  return sub_1C21ECB8C(&qword_1EA2DDDA0, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_1C21EE1E0()
{
  return sub_1C21ECB8C(&qword_1EA2DDDA8, type metadata accessor for DocumentReadingOptionKey);
}

uint64_t sub_1C21EE228()
{
  return sub_1C21ECB8C(&qword_1EA2DDDB0, type metadata accessor for DocumentType);
}

uint64_t sub_1C21EE270()
{
  return sub_1C21ECB8C(&qword_1EA2DDDB8, type metadata accessor for DocumentType);
}

uint64_t sub_1C21EE2B8()
{
  return sub_1C21ECB8C(&qword_1EA2DDDC0, type metadata accessor for DocumentType);
}

uint64_t sub_1C21EE300()
{
  return sub_1C21ECB8C(&qword_1EA2DDDC8, type metadata accessor for HKSignedClinicalDataGroupOptions);
}

uint64_t sub_1C21EE348()
{
  return sub_1C21ECB8C(&qword_1EA2DDDD0, type metadata accessor for HKSignedClinicalDataGroupOptions);
}

uint64_t sub_1C21EE390()
{
  return sub_1C21ECB8C(&qword_1EA2DDDD8, type metadata accessor for HKSignedClinicalDataGroupOptions);
}

uint64_t sub_1C21EE3D8()
{
  return sub_1C21ECB8C(&qword_1EA2DDDE0, type metadata accessor for HKSignedClinicalDataGroupOptions);
}

uint64_t sub_1C21EE420()
{
  return sub_1C21ECB8C(&qword_1EA2DDDE8, type metadata accessor for UILayoutPriority);
}

uint64_t sub_1C21EE468()
{
  return sub_1C21ECB8C(&qword_1EA2DDDF0, type metadata accessor for UILayoutPriority);
}

uint64_t sub_1C21EE4B0()
{
  return sub_1C21ECB8C(&qword_1EA2DDDF8, type metadata accessor for UILayoutPriority);
}

uint64_t sub_1C21EE4F8()
{
  return sub_1C21ECB8C(&qword_1EA2DDE00, type metadata accessor for HKError);
}

uint64_t sub_1C21EE540()
{
  return sub_1C21ECB8C(&qword_1EA2DDE08, type metadata accessor for HKError);
}

uint64_t sub_1C21EE588()
{
  return sub_1C21ECB8C(&qword_1EA2DDE10, type metadata accessor for Key);
}

uint64_t sub_1C21EE5D0()
{
  return sub_1C21ECB8C(&qword_1EA2DDE18, type metadata accessor for Key);
}

uint64_t sub_1C21EE618()
{
  return sub_1C21ECB8C(&qword_1EA2DDE20, type metadata accessor for AttributeName);
}

uint64_t sub_1C21EE660()
{
  return sub_1C21ECB8C(&qword_1EA2DDE28, type metadata accessor for AttributeName);
}

uint64_t sub_1C21EE6A8()
{
  return sub_1C21ECB8C(&qword_1EA2DDE30, type metadata accessor for FeatureKey);
}

uint64_t sub_1C21EE6F0()
{
  return sub_1C21ECB8C(&qword_1EA2DDE38, type metadata accessor for FeatureKey);
}

uint64_t sub_1C21EE738()
{
  return sub_1C21ECB8C(&qword_1EA2DDE40, type metadata accessor for ActivityType);
}

uint64_t sub_1C21EE780()
{
  return sub_1C21ECB8C(&qword_1EA2DDE48, type metadata accessor for ActivityType);
}

uint64_t sub_1C21EE7C8()
{
  return sub_1C21ECB8C(&qword_1EA2DDE50, type metadata accessor for ActivityType);
}

uint64_t sub_1C21EE810()
{
  return sub_1C21ECB8C(&qword_1EA2DDE58, type metadata accessor for ASWebAuthenticationSessionError);
}

uint64_t sub_1C21EE858()
{
  return sub_1C21ECB8C(&qword_1EA2DDE60, type metadata accessor for ASWebAuthenticationSessionError);
}

uint64_t sub_1C21EE8A0()
{
  return sub_1C21ECB8C(&qword_1EA2DDE68, type metadata accessor for ASWebAuthenticationSessionError);
}

uint64_t sub_1C21EE8E8()
{
  return sub_1C21ECB8C(&qword_1EA2DDE70, type metadata accessor for ASWebAuthenticationSessionError);
}

uint64_t sub_1C21EE930()
{
  return sub_1C21ECB8C(&qword_1EA2DDE78, type metadata accessor for ASWebAuthenticationSessionError);
}

uint64_t sub_1C21EE978()
{
  return sub_1C21ECB8C(&qword_1EA2DDE80, _s3__C4CodeOMa_0);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
}

uint64_t sub_1C21EE9D4()
{
  return sub_1C21ECB8C(&qword_1EA2DDE88, _s3__C4CodeOMa_0);
}

unint64_t sub_1C21EEA20()
{
  unint64_t result = qword_1EA2DDE90;
  if (!qword_1EA2DDE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DDE90);
  }
  return result;
}

uint64_t sub_1C21EEA74()
{
  return sub_1C21ECB8C(&qword_1EA2DDE98, _s3__C4CodeOMa_0);
}

uint64_t sub_1C21EEABC()
{
  return sub_1C21ECB8C(&qword_1EA2DDEA0, type metadata accessor for ASWebAuthenticationSessionError);
}

uint64_t sub_1C21EEB04()
{
  return sub_1C21ECB8C(&qword_1EA2DDEA8, type metadata accessor for UIUserInterfaceSizeClass);
}

uint64_t sub_1C21EEB4C()
{
  return sub_1C21ECB8C(&qword_1EA2DDEB0, type metadata accessor for AttributeName);
}

uint64_t sub_1C21EEB94()
{
  return sub_1C21ECB8C(&qword_1EA2DDEB8, type metadata accessor for FeatureKey);
}

uint64_t sub_1C21EEBDC()
{
  return sub_1C21ECB8C(&qword_1EA2DDEC0, type metadata accessor for Key);
}

uint64_t sub_1C21EEC24()
{
  return sub_1C21ECB8C(&qword_1EA2DDEC8, type metadata accessor for HKError);
}

uint64_t sub_1C21EEC6C()
{
  return sub_1C21ECB8C(&qword_1EA2DDED0, type metadata accessor for HKError);
}

uint64_t sub_1C21EECB4()
{
  return sub_1C21ECB8C(&qword_1EA2DDED8, type metadata accessor for HKError);
}

uint64_t sub_1C21EECFC()
{
  return sub_1C21ECB8C(&qword_1EA2DDEE0, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_1C21EED58()
{
  return sub_1C21ECB8C(&qword_1EA2DDEE8, type metadata accessor for Code);
}

uint64_t sub_1C21EEDA0()
{
  return sub_1C21ECB8C(&qword_1EA2DDEF0, type metadata accessor for Code);
}

uint64_t sub_1C21EEDE8()
{
  return sub_1C21ECB8C(&qword_1EA2DDEF8, type metadata accessor for HKError);
}

uint64_t sub_1C21EEE30()
{
  return sub_1C21ECB8C(&qword_1EA2DDF00, type metadata accessor for DocumentReadingOptionKey);
}

void type metadata accessor for HKOntologyShardState(uint64_t a1)
{
}

void sub_1C21EEE8C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

id SingleValueAnnotationViewDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id SingleValueAnnotationViewDataSource.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_constraints] = MEMORY[0x1E4FBC860];
  id v1 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  uint64_t v2 = v0;
  id v3 = objc_msgSend(v1, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_valueLabel] = v3;
  LOBYTE(v16) = 1;
  id v4 = objc_allocWithZone((Class)type metadata accessor for RecordRangeView());
  id v5 = RecordRangeView.init(style:)((char *)&v16);
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_referenceRangeView] = v5;
  sub_1C21F0F44(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255CD70;
  *(void *)(v6 + 32) = v3;
  *(void *)(v6 + 40) = v5;
  uint64_t v16 = v6;
  sub_1C254F730();
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
  id v8 = v3;
  id v9 = v5;
  uint64_t v10 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v7, sel_initWithArrangedSubviews_, v10);

  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_valueRangeGroup] = v11;
  objc_msgSend(v11, sel_setAxis_, 1);
  objc_msgSend(v11, sel_setAlignment_, 0);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v12 = v11;
  LODWORD(v13) = 1132068864;
  objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 0, v13);

  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for SingleValueAnnotationViewDataSource();
  return objc_msgSendSuper2(&v15, sel_init);
}

id sub_1C21EF1B0()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_valueRangeGroup);
}

void sub_1C21EF1D0(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C21F0B44(a1, (uint64_t)v2);
  (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v2) + 0x100))(a1);
  id v4 = self;
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_constraints;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_deactivateConstraints_, v6);

  sub_1C21F0F44(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C255CD80;
  id v8 = *(void **)((char *)v2 + OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_referenceRangeView);
  id v9 = objc_msgSend(v8, sel_widthAnchor);
  uint64_t v10 = *(void **)((char *)v2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_dateGroup);
  id v11 = objc_msgSend(v10, sel_superview);
  if (v11)
  {
    id v12 = v11;
    objc_msgSend(v11, sel_intrinsicContentSize);
    double v14 = v13;
  }
  else
  {
    objc_msgSend(v10, sel_intrinsicContentSize);
    double v14 = v15;
  }
  id v16 = objc_msgSend(v9, sel_constraintGreaterThanOrEqualToConstant_, v14);

  *(void *)(v7 + 32) = v16;
  id v17 = objc_msgSend(v8, sel_leadingAnchor);
  unint64_t v18 = *(void **)((char *)v2 + OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_valueRangeGroup);
  id v19 = objc_msgSend(v18, sel_leadingAnchor);
  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v19);

  *(void *)(v7 + 40) = v20;
  id v21 = objc_msgSend(v8, sel_trailingAnchor);
  id v22 = objc_msgSend(v18, sel_trailingAnchor);
  id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_, v22);

  *(void *)(v7 + 48) = v23;
  sub_1C254F730();
  *(void *)((char *)v2 + v5) = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v24 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v24);
}

void sub_1C21EF55C()
{
  sub_1C21F1AF0();
  id v2 = v1;
  sub_1C2424EA8(v1);
  (*(void (**)(id))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))(v2);
}

void sub_1C21EF604(void *a1)
{
  id v3 = objc_msgSend(a1, sel_valueString);
  if (v3)
  {

    id v4 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_valueLabel);
    objc_msgSend(v4, sel_setHidden_, 0);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    id v5 = a1;
    uint64_t v6 = (void *)sub_1C254FE50();
    uint64_t v7 = (void *)sub_1C254FE50();
    id v9 = sub_1C21EFF3C(v6, v7);

    objc_msgSend(v4, sel_setAttributedText_, v9);
  }
  else
  {
    id v8 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI35SingleValueAnnotationViewDataSource_valueLabel);
    objc_msgSend(v8, sel_setHidden_, 1);
  }
}

uint64_t sub_1C21EF78C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(uint64_t, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v4) + 0xB0))(a3, a4);
  sub_1C21EF894(a1, (void (*)(void))type metadata accessor for SingleValueChartData);
  (*(void (**)(void))((*v6 & *v4) + 0x118))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C21EF864(unint64_t a1)
{
  return sub_1C21EFA90(a1);
}

uint64_t sub_1C21EF870(unint64_t a1)
{
  return sub_1C21EFA90(a1);
}

uint64_t sub_1C21EF87C(unint64_t a1)
{
  return sub_1C21EF894(a1, (void (*)(void))type metadata accessor for MedicalRecordChartPoint);
}

uint64_t sub_1C21EF894(unint64_t a1, void (*a2)(void))
{
  uint64_t v3 = a1;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1C2550490();
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1C87588E0](i, v3);
        uint64_t v6 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        a2(0);
        if (!swift_dynamicCastClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
        if (v6 == v4) {
          return v11;
        }
      }
      __break(1u);
    }
    else
    {
      for (uint64_t j = 0; ; ++j)
      {
        uint64_t v8 = j + 1;
        if (__OFADD__(j, 1)) {
          break;
        }
        a2(0);
        uint64_t v9 = swift_dynamicCastClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v3 = v9;
        swift_unknownObjectRetain();
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
        if (v8 == v4) {
          return v11;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1C2550620();
    swift_bridgeObjectRelease();
    sub_1C2550490();
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1C21EFA84(unint64_t a1)
{
  return sub_1C21EFA90(a1);
}

uint64_t sub_1C21EFA90(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1C2550490();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1C87588E0](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        uint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1C2550620();
    swift_bridgeObjectRelease();
    sub_1C2550490();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  return v12;
}

void sub_1C21EFDB8(unint64_t a1)
{
  if (a1) {
    uint64_t v1 = Array<A>.referenceRangeViewData()(a1);
  }
  else {
    uint64_t v1 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67BE8]), sel_init);
  }
  uint64_t v2 = v1;
  uint64_t v3 = v1;
  sub_1C2424EA8(v2);
}

uint64_t sub_1C21EFE3C()
{
  return swift_bridgeObjectRelease();
}

id SingleValueAnnotationViewDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SingleValueAnnotationViewDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C21EFF3C(void *a1, void *a2)
{
  id v5 = objc_msgSend(v2, sel_valueString);
  if (!v5) {
    goto LABEL_8;
  }
  uint64_t v6 = v5;
  uint64_t v7 = sub_1C254F470();
  unint64_t v9 = v8;

  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    sub_1C21F0F90();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
    unint64_t v42 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(inited + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    *(void *)(inited + 40) = a1;
    id v43 = a1;
    id v44 = v42;
    sub_1C2203C38(inited);
    id v45 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v46 = (void *)sub_1C254F430();
LABEL_10:
    type metadata accessor for Key(0);
    sub_1C21F1054();
    id v40 = (id)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(v45, sel_initWithString_attributes_, v46, v40);

    goto LABEL_11;
  }
  id v11 = objc_msgSend(v2, sel_unitString);
  if (!v11)
  {
    sub_1C21F0F90();
    uint64_t v47 = swift_initStackObject();
    *(_OWORD *)(v47 + 16) = xmmword_1C255CD90;
    uint64_t v48 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v47 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v47 + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    *(void *)(v47 + 40) = a1;
    id v49 = a1;
    id v50 = v48;
    sub_1C2203C38(v47);
    id v45 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v46 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v12 = v11;
  sub_1C254F470();

  sub_1C21F0F90();
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C255CD90;
  double v14 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(v13 + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v53 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  *(void *)(v13 + 64) = v53;
  *(void *)(v13 + 40) = a1;
  id v15 = a1;
  swift_bridgeObjectRetain();
  id v52 = v14;
  sub_1C2203C38(v13);
  id v16 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
  id v17 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C21F1054();
  unint64_t v18 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);
  swift_bridgeObjectRelease();

  uint64_t v20 = swift_initStackObject();
  id v21 = (void **)MEMORY[0x1E4FB0710];
  *(_OWORD *)(v20 + 16) = xmmword_1C255CD90;
  id v22 = *v21;
  *(void *)(v20 + 32) = *v21;
  id v23 = objc_allocWithZone(NSNumber);
  id v24 = v22;
  id v25 = objc_msgSend(v23, sel_initWithDouble_, 2.0);
  *(void *)(v20 + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
  *(void *)(v20 + 40) = v25;
  sub_1C2203C38(v20);
  id v26 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v27 = (void *)sub_1C254F430();
  uint64_t v28 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

  objc_msgSend(v19, sel_appendAttributedString_, v29);
  uint64_t v30 = swift_initStackObject();
  *(_OWORD *)(v30 + 16) = xmmword_1C255CDA0;
  *(void *)(v30 + 32) = v52;
  *(void *)(v30 + 40) = a2;
  uint64_t v31 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(v30 + 64) = v53;
  *(void *)(v30 + 72) = v31;
  char v32 = self;
  id v33 = v52;
  id v34 = a2;
  id v35 = v31;
  id v36 = objc_msgSend(v32, sel_secondaryLabelColor);
  *(void *)(v30 + 104) = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
  *(void *)(v30 + 80) = v36;
  sub_1C2203C38(v30);
  id v37 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v38 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  long long v39 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v40 = objc_msgSend(v37, sel_initWithString_attributes_, v38, v39);

  objc_msgSend(v19, sel_appendAttributedString_, v40);
LABEL_11:

  return v19;
}

id sub_1C21F04A8(void *a1, void *a2)
{
  sub_1C21F0EBC(v2 + 56, (uint64_t)v51);
  sub_1C21F0EBC((uint64_t)v51, (uint64_t)&v52);
  if (!v53) {
    goto LABEL_7;
  }
  uint64_t v5 = HIBYTE(v53) & 0xF;
  if ((v53 & 0x2000000000000000) == 0) {
    uint64_t v5 = v52 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    sub_1C21F0EBC(v2 + 72, (uint64_t)v50);
    sub_1C21F0EBC((uint64_t)v50, (uint64_t)v54);
    if (v54[1])
    {
      sub_1C21F0F90();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
      uint64_t v7 = (void *)*MEMORY[0x1E4FB06F8];
      *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
      uint64_t v49 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
      *(void *)(inited + 64) = v49;
      *(void *)(inited + 40) = a1;
      sub_1C21F10AC((uint64_t)v51);
      id v8 = a1;
      sub_1C21F10AC((uint64_t)v51);
      sub_1C21F10AC((uint64_t)v50);
      id v48 = v7;
      sub_1C2203C38(inited);
      id v9 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
      uint64_t v10 = (void *)sub_1C254F430();
      sub_1C21F10D8((uint64_t)v51);
      type metadata accessor for Key(0);
      sub_1C21F1054();
      id v11 = (void *)sub_1C254F2C0();
      swift_bridgeObjectRelease();
      id v12 = objc_msgSend(v9, sel_initWithString_attributes_, v10, v11);

      sub_1C21F10D8((uint64_t)v51);
      uint64_t v13 = swift_initStackObject();
      double v14 = (void **)MEMORY[0x1E4FB0710];
      *(_OWORD *)(v13 + 16) = xmmword_1C255CD90;
      id v15 = *v14;
      *(void *)(v13 + 32) = *v14;
      id v16 = objc_allocWithZone(NSNumber);
      id v17 = v15;
      id v18 = objc_msgSend(v16, sel_initWithDouble_, 2.0);
      *(void *)(v13 + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
      *(void *)(v13 + 40) = v18;
      sub_1C2203C38(v13);
      id v19 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      uint64_t v20 = (void *)sub_1C254F430();
      id v21 = (void *)sub_1C254F2C0();
      swift_bridgeObjectRelease();
      id v22 = objc_msgSend(v19, sel_initWithString_attributes_, v20, v21);

      objc_msgSend(v12, sel_appendAttributedString_, v22);
      uint64_t v23 = swift_initStackObject();
      *(_OWORD *)(v23 + 16) = xmmword_1C255CDA0;
      *(void *)(v23 + 32) = v48;
      *(void *)(v23 + 40) = a2;
      id v24 = (void *)*MEMORY[0x1E4FB0700];
      *(void *)(v23 + 64) = v49;
      *(void *)(v23 + 72) = v24;
      id v25 = self;
      id v26 = v48;
      id v27 = a2;
      id v28 = v24;
      id v29 = objc_msgSend(v25, sel_secondaryLabelColor);
      *(void *)(v23 + 104) = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
      *(void *)(v23 + 80) = v29;
      sub_1C2203C38(v23);
      id v30 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      uint64_t v31 = (void *)sub_1C254F430();
      sub_1C21F10D8((uint64_t)v50);
      char v32 = (void *)sub_1C254F2C0();
      swift_bridgeObjectRelease();
      id v33 = objc_msgSend(v30, sel_initWithString_attributes_, v31, v32);

      objc_msgSend(v12, sel_appendAttributedString_, v33);
    }
    else
    {
      sub_1C21F0F90();
      uint64_t v42 = swift_initStackObject();
      *(_OWORD *)(v42 + 16) = xmmword_1C255CD90;
      id v43 = (void *)*MEMORY[0x1E4FB06F8];
      *(void *)(v42 + 32) = *MEMORY[0x1E4FB06F8];
      *(void *)(v42 + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
      *(void *)(v42 + 40) = a1;
      id v44 = a1;
      sub_1C21F10AC((uint64_t)v51);
      id v45 = v43;
      sub_1C2203C38(v42);
      id v46 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
      uint64_t v47 = (void *)sub_1C254F430();
      sub_1C21F10D8((uint64_t)v51);
      type metadata accessor for Key(0);
      sub_1C21F1054();
      id v33 = (id)sub_1C254F2C0();
      swift_bridgeObjectRelease();
      id v12 = objc_msgSend(v46, sel_initWithString_attributes_, v47, v33);
    }
  }
  else
  {
LABEL_7:
    if (*(unsigned char *)(v2 + 100))
    {
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v34 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();
    }
    sub_1C21F0F90();
    uint64_t v35 = swift_initStackObject();
    *(_OWORD *)(v35 + 16) = xmmword_1C255CD90;
    id v36 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v35 + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(v35 + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    *(void *)(v35 + 40) = a1;
    id v37 = a1;
    id v38 = v36;
    sub_1C2203C38(v35);
    id v39 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v40 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1C21F1054();
    id v33 = (id)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v39, sel_initWithString_attributes_, v40, v33);
  }
  return v12;
}

uint64_t type metadata accessor for SingleValueAnnotationViewDataSource()
{
  return self;
}

void sub_1C21F0B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_monthYearLabel);
  id v5 = (id)HKDateFormatterFromTemplate();
  if (!v5) {
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  }
  uint64_t v6 = (void *)sub_1C254CA50();
  id v7 = objc_msgSend(v5, sel_stringFromDate_, v6);

  if (!v7)
  {
    sub_1C254F470();
    id v7 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v4, sel_setText_, v7);

  id v8 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI37MedicalRecordAnnotationViewDataSource_timeLabel);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_hasTime) == 1)
  {
    id v9 = (id)HKDateFormatterFromTemplate();
    if (!v9) {
      id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
    }
    uint64_t v10 = (void *)sub_1C254CA50();
    id v11 = objc_msgSend(v9, sel_stringFromDate_, v10);

    sub_1C254F470();
    id v12 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v12 = 0;
  }
  objc_msgSend(v8, sel_setText_, v12);
}

uint64_t method lookup function for SingleValueAnnotationViewDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SingleValueAnnotationViewDataSource);
}

uint64_t dispatch thunk of SingleValueAnnotationViewDataSource.update(using:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of SingleValueAnnotationViewDataSource.updateReferenceRange(using:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of SingleValueAnnotationViewDataSource.updateValueLabel(using:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of SingleValueAnnotationViewDataSource.update(using:valueRange:dateRange:timeScope:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of SingleValueAnnotationViewDataSource.updateValue(using:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

unint64_t sub_1C21F0E64()
{
  unint64_t result = qword_1EA2DE028;
  if (!qword_1EA2DE028)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DE028);
  }
  return result;
}

uint64_t sub_1C21F0EBC(uint64_t a1, uint64_t a2)
{
  sub_1C21F0F44(0, (unint64_t *)&qword_1EA2DE090, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C21F0F44(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C21F0F90()
{
  if (!qword_1EA2E4460)
  {
    sub_1C21F0FE8();
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E4460);
    }
  }
}

void sub_1C21F0FE8()
{
  if (!qword_1EA2DE0A0)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DE0A0);
    }
  }
}

unint64_t sub_1C21F1054()
{
  unint64_t result = qword_1EA2E4470;
  if (!qword_1EA2E4470)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E4470);
  }
  return result;
}

uint64_t sub_1C21F10AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C21F10D8(uint64_t a1)
{
  return a1;
}

char *Array<A>.referenceRangeViewData()(unint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67BE8]), sel_init);
  Array<A>.minMaxValuesAndUnit()(a1, (uint64_t)&v35);
  uint64_t v3 = v39;
  if (v36 & 1) != 0 || (v38)
  {
    objc_msgSend(v2, sel_setValueString_, 0);
    if (!v3) {
      goto LABEL_34;
    }
  }
  else
  {
    double v4 = v37;
    id v5 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v35);
    id v6 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v4);
    id v7 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v5, v6);

    HKValueRange<>.valueDisplayString(style:)(1);
    if (v8)
    {
      id v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v9 = 0;
    }
    objc_msgSend(v2, sel_setValueString_, v9);

    if (!v3)
    {
LABEL_34:
      objc_msgSend(v2, sel_setUnitString_, 0);
      if (a1 >> 62) {
        goto LABEL_35;
      }
LABEL_10:
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v13) {
        goto LABEL_36;
      }
      goto LABEL_11;
    }
  }
  id v10 = v3;
  sub_1C2530B74(v10);
  if (v11)
  {
    id v12 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v12 = 0;
  }
  objc_msgSend(v2, sel_setUnitString_, v12);

  if (!(a1 >> 62)) {
    goto LABEL_10;
  }
LABEL_35:
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C2550620();
  if (!v13)
  {
LABEL_36:
    uint64_t v28 = 0;
    id v19 = 0;
LABEL_37:
    swift_bridgeObjectRelease();

    objc_msgSend(v2, sel_setUseOutOfRangeValueColor_, v28);
    return (char *)v2;
  }
LABEL_11:
  uint64_t v14 = 0;
  unint64_t v15 = a1 & 0xC000000000000001;
  uint64_t v30 = v13;
  unint64_t v31 = a1 + 32;
  id v16 = &unk_1EA303000;
  unint64_t v29 = a1 & 0xC000000000000001;
  id v33 = v3;
  id v34 = v2;
  unint64_t v32 = a1;
  while (1)
  {
    unint64_t result = v15 ? (char *)MEMORY[0x1C87588E0](v14, a1) : (char *)*(id *)(v31 + 8 * v14);
    id v19 = result;
    if (__OFADD__(v14++, 1)) {
      break;
    }
    if (result[v16[224]] == 1)
    {
      id v17 = *(id *)&result[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_chartableQuantitySet];
      id v21 = objc_msgSend(v17, sel_quantities);
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E21B0);
      unint64_t v22 = sub_1C254F710();

      if (v22 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v23 = sub_1C2550620();
        swift_bridgeObjectRelease();
        if (v23)
        {
LABEL_21:
          uint64_t v24 = 4;
          while (1)
          {
            unint64_t result = (v22 & 0xC000000000000001) != 0
                   ? (char *)MEMORY[0x1C87588E0](v24 - 4, v22)
                   : (char *)*(id *)(v22 + 8 * v24);
            id v25 = result;
            uint64_t v26 = v24 - 3;
            if (__OFADD__(v24 - 4, 1)) {
              break;
            }
            unsigned int v27 = objc_msgSend(result, sel_isInRange);

            if (!v27)
            {
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              uint64_t v28 = 1;
              uint64_t v3 = v33;
              id v2 = v34;
              goto LABEL_37;
            }
            ++v24;
            if (v26 == v23) {
              goto LABEL_28;
            }
          }
          __break(1u);
          break;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v23) {
          goto LABEL_21;
        }
      }
LABEL_28:
      swift_bridgeObjectRelease_n();

      uint64_t v3 = v33;
      id v2 = v34;
      a1 = v32;
      unint64_t v15 = v29;
      uint64_t v13 = v30;
      id v16 = (void *)&unk_1EA303000;
    }
    else
    {
      id v17 = result;
    }

    if (v14 == v13) {
      goto LABEL_36;
    }
  }
  __break(1u);
  return result;
}

id SingleValueChartData.chartableQuantitySet.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_chartableQuantitySet);
}

uint64_t SingleValueChartData.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_date;
  uint64_t v4 = sub_1C254CAD0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t SingleValueChartData.dateFormat.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_dateFormat);
}

uint64_t SingleValueChartData.hasTime.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_hasTime);
}

uint64_t SingleValueChartData.partOfOutOfRangeSeries.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_partOfOutOfRangeSeries);
}

id SingleValueChartData.__allocating_init(chartableQuantitySet:date:dateFormat:hasTime:partOfOutOfRangeSeries:)(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  id v11 = objc_allocWithZone(v5);
  return SingleValueChartData.init(chartableQuantitySet:date:dateFormat:hasTime:partOfOutOfRangeSeries:)(a1, a2, a3, a4, a5);
}

id SingleValueChartData.init(chartableQuantitySet:date:dateFormat:hasTime:partOfOutOfRangeSeries:)(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_chartableQuantitySet] = a1;
  id v11 = &v5[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_date];
  uint64_t v12 = sub_1C254CAD0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a2, v12);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_dateFormat] = a3;
  v5[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_hasTime] = a4;
  v5[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_partOfOutOfRangeSeries] = a5;
  v39.receiver = v5;
  v39.super_class = (Class)type metadata accessor for SingleValueChartData();
  id v14 = a1;
  id v15 = objc_msgSendSuper2(&v39, sel_init);
  id v16 = objc_msgSend(v14, sel_quantities);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E21B0);
  id v17 = (id *)sub_1C254F710();

  if (!((unint64_t)v17 >> 62))
  {
    unint64_t v18 = *(void *)(((unint64_t)v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_17;
  }
LABEL_3:
  if (((unint64_t)v17 & 0xC000000000000001) != 0)
  {
LABEL_18:
    id v19 = (id)MEMORY[0x1C87588E0](0, v17);
    goto LABEL_6;
  }
  if (!*(void *)(((unint64_t)v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_20;
  }
  id v19 = v17[4];
LABEL_6:
  uint64_t v20 = v19;
  uint64_t v38 = a2;
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v20, sel_quantity);

  id v17 = (id *)objc_msgSend(v21, sel__unit);
  objc_msgSend(v15, sel_setUnit_, v17);
  id v15 = v15;
  id v22 = objc_msgSend(v14, sel_quantities);
  unint64_t v18 = sub_1C254F710();

  if (!(v18 >> 62))
  {
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_8;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_22;
  }
LABEL_20:
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v37) {
    goto LABEL_21;
  }
LABEL_8:
  if ((v18 & 0xC000000000000001) != 0)
  {
LABEL_22:
    id v23 = (id)MEMORY[0x1C87588E0](0, v18);
    goto LABEL_11;
  }
  if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_24;
  }
  id v23 = *(id *)(v18 + 32);
LABEL_11:
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_doubleValue);
  double v26 = v25;

  objc_msgSend(v15, sel_setValue_, v26);
  id v27 = v15;
  objc_msgSend(v14, sel_minValueForUnit_, v17);
  objc_msgSend(v27, sel_setMinValue_);

  id v28 = v27;
  objc_msgSend(v14, sel_maxValueForUnit_, v17);
  objc_msgSend(v28, sel_setMaxValue_);

  id v15 = v28;
  id v29 = objc_msgSend(v14, sel_quantities);
  unint64_t v30 = sub_1C254F710();

  if (!(v30 >> 62))
  {
    uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_13;
  }
LABEL_24:
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_1C2550620();
  swift_bridgeObjectRelease();
LABEL_13:
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setRecordCount_, v31);

  id v32 = v15;
  id v33 = objc_msgSend(v14, sel_quantities);
  unint64_t v34 = sub_1C254F710();

  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  objc_msgSend(v32, sel_setRepresentsRange_, v35 > 1);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v38, v12);
  return v32;
}

void sub_1C21F1AF0()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67BE8]), sel_init);
  objc_msgSend(v0, sel_value);
  id v4 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v3);
  objc_msgSend(v2, sel_setValue_, v4);

  id v5 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_chartableQuantitySet];
  id v6 = objc_msgSend(v5, sel_quantities);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E21B0);
  unint64_t v7 = sub_1C254F710();

  if (!(v7 >> 62))
  {
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v49) {
    goto LABEL_38;
  }
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v8 = (id)MEMORY[0x1C87588E0](0, v7);
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_41;
    }
    id v8 = *(id *)(v7 + 32);
  }
  id v9 = v8;
  swift_bridgeObjectRelease();
  if ((objc_msgSend(v1, sel_representsRange) & 1) == 0)
  {
    id v23 = objc_msgSend(v9, sel_originalCodedQuantity);
    uint64_t v24 = v23;
    if (v23)
    {
      id v25 = objc_msgSend(v23, sel_displayString);

      sub_1C254F470();
      uint64_t v24 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setValueString_, v24);

    id v26 = objc_msgSend(v9, sel_rangeLow);
    objc_msgSend(v2, sel_setRangeLow_, v26);

    id v27 = objc_msgSend(v9, sel_originalRangeLowCodedQuantity);
    id v28 = v27;
    if (v27)
    {
      id v29 = objc_msgSend(v27, sel_displayString);

      sub_1C254F470();
      id v28 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setRangeLowString_, v28);

    id v30 = objc_msgSend(v9, sel_rangeHigh);
    objc_msgSend(v2, sel_setRangeHigh_, v30);

    id v31 = objc_msgSend(v9, sel_originalRangeHighCodedQuantity);
    id v32 = v31;
    if (v31)
    {
      id v33 = objc_msgSend(v31, sel_displayString);

      sub_1C254F470();
      id v32 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v2, sel_setRangeHighString_, v32);

    id v34 = objc_msgSend(v9, sel_originalCodedQuantity);
    if (v34)
    {
      uint64_t v35 = v34;
      id v36 = objc_msgSend(v34, sel_unitCoding);

      if (v36)
      {
        sub_1C25309A4(v36);
        if (v37)
        {
          uint64_t v38 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v38 = 0;
        }
        objc_msgSend(v2, sel_setUnitString_, v38);

        goto LABEL_34;
      }
    }
    id v39 = objc_msgSend(v1, sel_unit);
    if (v39)
    {
      id v40 = v39;
      sub_1C2530B74(v39);
      uint64_t v42 = v41;

      if (v42)
      {
        id v43 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v43 = 0;
      }
      objc_msgSend(v2, sel_setUnitString_, v43);
      goto LABEL_33;
    }
    goto LABEL_42;
  }
  id v10 = objc_msgSend(v9, sel_quantity);
  id v11 = objc_msgSend(v10, sel__unit);

  objc_msgSend(v5, sel_minValueForUnit_, v11);
  double v13 = v12;

  id v14 = objc_msgSend(v9, sel_quantity);
  id v15 = objc_msgSend(v14, sel__unit);

  objc_msgSend(v5, sel_maxValueForUnit_, v15);
  double v17 = v16;

  id v18 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v13);
  id v19 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v17);
  id v20 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v18, v19);

  HKValueRange<>.valueDisplayString(style:)(1);
  if (v21)
  {
    id v22 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v22 = 0;
  }
  objc_msgSend(v2, sel_setValueString_, v22);

  if (v1[OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_partOfOutOfRangeSeries] == 1) {
    char v44 = HKChartableCodedQuantitySet.hasOutOfRangeQuantities.getter();
  }
  else {
    char v44 = 0;
  }
  objc_msgSend(v2, sel_setUseOutOfRangeValueColor_, v44 & 1);
  id v45 = objc_msgSend(v1, sel_unit);
  if (v45)
  {
    id v46 = v45;
    sub_1C2530B74(v45);
    uint64_t v48 = v47;

    if (v48)
    {
      id v43 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v43 = 0;
    }
    objc_msgSend(v2, sel_setUnitString_, v43);

LABEL_33:
LABEL_34:

    return;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

id SingleValueChartData.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SingleValueChartData.init()()
{
}

id SingleValueChartData.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SingleValueChartData();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C21F22B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_date;
  uint64_t v4 = sub_1C254CAD0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1C21F232C()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_dateFormat);
}

uint64_t sub_1C21F233C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_hasTime);
}

uint64_t sub_1C21F234C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20SingleValueChartData_partOfOutOfRangeSeries);
}

void Array<A>.minMaxValuesAndUnit()(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = sub_1C254E560();
  uint64_t v4 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  char v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1C2550620();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1C2550620();
    unint64_t v6 = v30;
    if (v29 >= 2)
    {
      if (!v30) {
        goto LABEL_45;
      }
      if (v30 >= 1) {
        goto LABEL_3;
      }
      __break(1u);
    }
  }
  else
  {
    unint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6 > 1)
    {
LABEL_3:
      uint64_t v39 = a2;
      id v7 = 0;
      uint64_t v8 = 0;
      unint64_t v9 = a1 & 0xC000000000000001;
      uint64_t v41 = (void (**)(char *, uint64_t))(v4 + 8);
      unint64_t v42 = v6;
      double v10 = 1.79769313e308;
      double v11 = -1.79769313e308;
      double v12 = &selRef_setUnsupportedSearchResults_;
      double v13 = &selRef_setActionTitle_;
      unint64_t v40 = a1 & 0xC000000000000001;
      while (1)
      {
        if (v9)
        {
          double v17 = MEMORY[0x1C87588E0](v8, a1);
          if (!v7) {
            goto LABEL_4;
          }
        }
        else
        {
          double v17 = *(id *)(a1 + 8 * v8 + 32);
          if (!v7)
          {
LABEL_4:
            id v7 = objc_msgSend(v17, v12[159], v39);
LABEL_5:
            objc_msgSend(v17, v13[131], v39);
            if (v14 < v10) {
              double v10 = v14;
            }
            [v17 maxValue];
            double v16 = v15;

            if (v11 <= v16) {
              double v11 = v16;
            }
            goto LABEL_9;
          }
        }
        id v18 = v7;
        id v19 = [v17 v12[159]];
        if (!v19)
        {

          goto LABEL_5;
        }
        id v20 = v19;
        uint64_t v21 = v12;
        sub_1C21AB51C(0, (unint64_t *)&unk_1EA2DE0C0);
        if (sub_1C254FF70())
        {

          double v13 = &selRef_setActionTitle_;
          goto LABEL_5;
        }
        id v22 = v44;
        sub_1C254E4F0();
        id v23 = sub_1C254E550();
        os_log_type_t v24 = sub_1C254FA20();
        if (os_log_type_enabled(v23, v24))
        {
          unint64_t v25 = a1;
          id v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v26 = 0;
          _os_log_impl(&dword_1C21A1000, v23, v24, "Cannot concatenate SingleValueChartData with different units, skipping one entry", v26, 2u);
          id v27 = v26;
          a1 = v25;
          id v22 = v44;
          MEMORY[0x1C875A0B0](v27, -1, -1);
          id v28 = v17;
        }
        else
        {
          id v28 = v23;
          id v23 = v20;
          id v20 = v18;
          id v18 = v17;
        }
        unint64_t v9 = v40;

        (*v41)(v22, v43);
        unint64_t v6 = v42;
        double v12 = v21;
        double v13 = &selRef_setActionTitle_;
LABEL_9:
        if (v6 == ++v8)
        {
          swift_bridgeObjectRelease();
          a2 = v39;
          goto LABEL_41;
        }
      }
    }
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    id v7 = 0;
    char v36 = 1;
    double v10 = 0.0;
    double v11 = 0.0;
LABEL_42:
    *(double *)a2 = v10;
    *(unsigned char *)(a2 + 8) = v36;
    *(double *)(a2 + 16) = v11;
    *(unsigned char *)(a2 + 24) = v36;
    *(void *)(a2 + 32) = v7;
    return;
  }
  unint64_t v31 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0)
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v32 = *(id *)(a1 + 32);
      goto LABEL_31;
    }
    __break(1u);
LABEL_45:
    swift_bridgeObjectRelease();
    id v7 = 0;
    double v10 = 1.79769313e308;
    double v11 = -1.79769313e308;
    goto LABEL_41;
  }
  id v32 = (id)MEMORY[0x1C87588E0](0, a1);
LABEL_31:
  id v33 = v32;
  swift_bridgeObjectRelease();
  objc_msgSend(v33, sel_minValue);
  double v10 = v34;

  if (v31)
  {
    swift_bridgeObjectRetain();
    id v35 = (id)MEMORY[0x1C87588E0](0, a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_47;
    }
    id v35 = *(id *)(a1 + 32);
  }
  objc_msgSend(v35, sel_maxValue);
  double v11 = v37;

  if (v31)
  {
    swift_bridgeObjectRetain();
    id v38 = (id)MEMORY[0x1C87588E0](0, a1);
    swift_bridgeObjectRelease();
LABEL_40:
    id v7 = objc_msgSend(v38, sel_unit);

LABEL_41:
    char v36 = 0;
    goto LABEL_42;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v38 = *(id *)(a1 + 32);
    goto LABEL_40;
  }
LABEL_47:
  __break(1u);
}

uint64_t type metadata accessor for SingleValueChartData()
{
  uint64_t result = qword_1EA2DE130;
  if (!qword_1EA2DE130) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C21F287C()
{
  return type metadata accessor for SingleValueChartData();
}

uint64_t sub_1C21F2884()
{
  uint64_t result = sub_1C254CAD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SingleValueChartData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SingleValueChartData);
}

uint64_t dispatch thunk of SingleValueChartData.__allocating_init(chartableQuantitySet:date:dateFormat:hasTime:partOfOutOfRangeSeries:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SingleValueChartData.referenceRangeViewData()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

unint64_t sub_1C21F299C()
{
  return 0xD000000000000014;
}

id LoadingTableViewCell.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id LoadingTableViewCell.init()()
{
  id v1 = (void *)sub_1C254F430();
  id v2 = objc_msgSend(v0, sel_initWithStyle_reuseIdentifier_, 0, v1);

  return v2;
}

id LoadingTableViewCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a3)
  {
    unint64_t v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id LoadingTableViewCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_containerView;
  id v7 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  uint64_t v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_init);
  uint64_t v9 = OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_spinner;
  *(void *)&v8[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);

  if (a3)
  {
    double v10 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    double v10 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for LoadingTableViewCell();
  id v11 = objc_msgSendSuper2(&v14, sel_initWithStyle_reuseIdentifier_, a1, v10);

  id v12 = v11;
  sub_1C21F2E14();

  return v12;
}

uint64_t type metadata accessor for LoadingTableViewCell()
{
  return self;
}

id LoadingTableViewCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id LoadingTableViewCell.init(coder:)(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_containerView;
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1EB0]);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_spinner;
  *(void *)&v5[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for LoadingTableViewCell();
  id v7 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);
  id v8 = v7;
  if (v7)
  {
    id v9 = v7;
    sub_1C21F2E14();
  }
  return v8;
}

id sub_1C21F2DE4()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_spinner), sel_startAnimating);
}

id sub_1C21F2DFC()
{
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_spinner), sel_stopAnimating);
}

void sub_1C21F2E14()
{
  id v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_containerView];
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v3 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v3, sel_addSubview_, v2);

  id v4 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI20LoadingTableViewCell_spinner];
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v2, sel_addSubview_, v4);
  objc_msgSend(v4, sel_setHidesWhenStopped_, 0);
  objc_msgSend(v4, sel_startAnimating);
  id v5 = objc_msgSend(v1, sel_contentView);
  id v6 = objc_msgSend(v5, sel_heightAnchor);

  id v7 = objc_msgSend(v6, sel_constraintGreaterThanOrEqualToConstant_, *MEMORY[0x1E4FB2F30]);
  LODWORD(v8) = 1132068864;
  objc_msgSend(v7, sel_setPriority_, v8);
  unint64_t v42 = self;
  sub_1C21ACA3C();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CE50;
  *(void *)(v9 + 32) = v7;
  id v41 = v7;
  id v10 = objc_msgSend(v2, sel_centerXAnchor);
  id v11 = objc_msgSend(v1, sel_contentView);
  id v12 = objc_msgSend(v11, (SEL)&selRef_firstBaselineAnchor);

  id v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v12);
  *(void *)(v9 + 40) = v13;
  id v14 = objc_msgSend(v2, sel_centerYAnchor);
  id v15 = objc_msgSend(v1, sel_contentView);
  id v16 = objc_msgSend(v15, sel_centerYAnchor);

  id v17 = objc_msgSend(v14, (SEL)&selRef_characterAtIndex_ + 6, v16);
  *(void *)(v9 + 48) = v17;
  id v18 = objc_msgSend(v2, sel_leadingAnchor);
  id v19 = objc_msgSend(v1, sel_contentView);
  id v20 = objc_msgSend(v19, sel_leadingAnchor);

  id v21 = objc_msgSend(v18, sel_constraintGreaterThanOrEqualToSystemSpacingAfterAnchor_multiplier_, v20, 1.0);
  *(void *)(v9 + 56) = v21;
  id v22 = objc_msgSend(v1, sel_contentView);
  id v23 = objc_msgSend(v22, sel_trailingAnchor);

  id v24 = objc_msgSend(v1, sel_contentView);
  id v25 = objc_msgSend(v24, sel_trailingAnchor);

  id v26 = objc_msgSend(v23, sel_constraintGreaterThanOrEqualToSystemSpacingAfterAnchor_multiplier_, v25, 1.0);
  *(void *)(v9 + 64) = v26;
  id v27 = objc_msgSend(v2, sel_topAnchor);
  id v28 = objc_msgSend(v1, sel_contentView);
  id v29 = objc_msgSend(v28, sel_topAnchor);

  id v30 = objc_msgSend(v27, sel_constraintGreaterThanOrEqualToSystemSpacingBelowAnchor_multiplier_, v29, 1.0);
  *(void *)(v9 + 72) = v30;
  id v31 = objc_msgSend(v1, sel_contentView);
  id v32 = objc_msgSend(v31, sel_bottomAnchor);

  id v33 = objc_msgSend(v2, sel_bottomAnchor);
  id v34 = objc_msgSend(v32, sel_constraintGreaterThanOrEqualToSystemSpacingBelowAnchor_multiplier_, v33, 1.0);

  *(void *)(v9 + 80) = v34;
  id v35 = objc_msgSend(v4, sel_centerXAnchor);
  id v36 = objc_msgSend(v2, sel_centerXAnchor);
  id v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);

  *(void *)(v9 + 88) = v37;
  id v38 = objc_msgSend(v4, sel_centerYAnchor);
  id v39 = objc_msgSend(v2, sel_centerYAnchor);
  id v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

  *(void *)(v9 + 96) = v40;
  sub_1C254F730();
  sub_1C21F34D4();
  id v43 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_activateConstraints_, v43);
}

id LoadingTableViewCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LoadingTableViewCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for LoadingTableViewCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LoadingTableViewCell);
}

uint64_t dispatch thunk of static LoadingTableViewCell.reuseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of LoadingTableViewCell.willDisplay()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of LoadingTableViewCell.didEndDisplaying()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

unint64_t sub_1C21F34D4()
{
  unint64_t result = qword_1EA2DE020;
  if (!qword_1EA2DE020)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DE020);
  }
  return result;
}

uint64_t sub_1C21F3630()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1C21F3668()
{
  uint64_t v1 = v0;
  sub_1C25509E0();
  objc_super v2 = *(void **)(v0 + 8);
  if (v2)
  {
    sub_1C25509E0();
    id v3 = v2;
    sub_1C254FF80();

    id v4 = *(void **)(v1 + 16);
    if (v4) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1C25509E0();
    id v6 = *(void **)(v1 + 24);
    if (v6) {
      goto LABEL_4;
    }
LABEL_7:
    sub_1C25509E0();
    return sub_1C25509E0();
  }
  sub_1C25509E0();
  id v4 = *(void **)(v0 + 16);
  if (!v4) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1C25509E0();
  id v5 = v4;
  sub_1C254FF80();

  id v6 = *(void **)(v1 + 24);
  if (!v6) {
    goto LABEL_7;
  }
LABEL_4:
  sub_1C25509E0();
  id v7 = v6;
  sub_1C254FF80();

  return sub_1C25509E0();
}

uint64_t sub_1C21F3764()
{
  return sub_1C2550A10();
}

uint64_t sub_1C21F37A8()
{
  return sub_1C2550A10();
}

uint64_t sub_1C21F37E4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  char v6 = *(unsigned char *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  char v8 = *(unsigned char *)(a2 + 32);
  return sub_1C21FD930((unsigned __int8 *)v5, (unsigned __int8 *)v7) & 1;
}

uint64_t sub_1C21F3830(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  id v4 = (void *)(*a2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle);
  swift_beginAccess();
  *id v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C21F389C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C21F38F4(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C21F3954())()
{
  return j_j__swift_endAccess;
}

id sub_1C21F39B0()
{
  uint64_t v1 = OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___contentStatusView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___contentStatusView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___contentStatusView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_allocWithZone((Class)type metadata accessor for ContentStatusView());
    id v6 = ContentStatusView.init(title:subtitle:)(0, 0, 0, 0);
    id v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1C21F3A34()
{
  return sub_1C21F3A7C(&OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___clinicalAccountStore, (SEL *)&selRef_healthStore, (Class *)0x1E4F67710, (SEL *)&selRef_initWithHealthStore_);
}

id sub_1C21F3A58()
{
  return sub_1C21F3A7C(&OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataProvider, (SEL *)&selRef_healthRecordsStore, (Class *)off_1E644A2A8, (SEL *)&selRef_initWithHealthRecordsStore_);
}

id sub_1C21F3A7C(uint64_t *a1, SEL *a2, Class *a3, SEL *a4)
{
  uint64_t v5 = *a1;
  id v6 = *(void **)(v4 + *a1);
  if (v6)
  {
    id v7 = *(id *)(v4 + *a1);
  }
  else
  {
    id v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v4
                                                                + OBJC_IVAR___HRMedicalRecordTimelineViewController_profile), *a2));
    id v11 = objc_msgSend(objc_allocWithZone(*a3), *a4, v10);

    id v12 = *(void **)(v4 + v5);
    *(void *)(v4 + v5) = v11;
    id v7 = v11;

    id v6 = 0;
  }
  id v13 = v6;
  return v7;
}

uint64_t sub_1C21F3B20()
{
  uint64_t v1 = OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___accountStateProvider;
  if (*(void *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___accountStateProvider))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___accountStateProvider);
  }
  else
  {
    uint64_t v3 = v0;
    if (qword_1EBB6EF30 != -1) {
      swift_once();
    }
    id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR___HRMedicalRecordTimelineViewController_profile), sel_healthStore));
    id v5 = objc_msgSend(v4, sel_profileIdentifier);

    MEMORY[0x1F4188790](v6);
    sub_1C254CEE0();
    type metadata accessor for AccountStateProvider();
    sub_1C2200960((unint64_t *)&qword_1EBB6F240, MEMORY[0x1E4F66F68]);
    swift_retain();
    sub_1C254E1D0();

    swift_release();
    uint64_t v2 = v8;
    *(void *)(v3 + v1) = v8;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_1C21F3CF4()
{
  uint64_t v1 = OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSourceProvider;
  if (*(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSourceProvider])
  {
    uint64_t v2 = *(void **)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSourceProvider];
  }
  else
  {
    uint64_t v2 = sub_1C21F3D5C(v0);
    *(void *)&v0[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_1C21F3D5C(unsigned char *a1)
{
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v16 - v3;
  BOOL v5 = *(void *)&a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_conceptIdentifier] != 0;
  uint64_t v6 = *(void **)&a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_profile];
  sub_1C21F4914((uint64_t)&a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId], (uint64_t)&v16 - v3);
  id v7 = *(void **)&a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept];
  uint64_t v8 = *(void **)&a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider];
  id v9 = v8;
  id v10 = v6;
  id v11 = v7;
  id v12 = sub_1C21F3A58();
  long long v13 = *(_OWORD *)&a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState + 16];
  long long v17 = *(_OWORD *)&a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState];
  long long v18 = v13;
  char v19 = a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState + 32];
  sub_1C21FFF78((uint64_t)&v17 + 8, (uint64_t)&v20, (uint64_t)&qword_1EA2DE390, (uint64_t)&unk_1EA2DE380, 0x1E4F2ADE8, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C21FFF20);
  sub_1C21FFF78((uint64_t)&v18, (uint64_t)&v21, (uint64_t)&qword_1EA2DE398, (uint64_t)&qword_1EA2DE378, 0x1E4F2ADD8, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C21FFF20);
  sub_1C21FFF78((uint64_t)&v18 + 8, (uint64_t)&v22, (uint64_t)&unk_1EA2DE3A0, (uint64_t)&qword_1EBB6FFC0, (uint64_t)off_1E644A2C0, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C21FFF20);
  long long v16 = xmmword_1C255CE90;
  type metadata accessor for MedicalRecordTimelineDataSourceProvider();
  swift_allocObject();
  sub_1C21FFFEC(&v20);
  sub_1C21FFFEC(&v21);
  sub_1C21FFFEC(&v22);
  id v14 = a1;
  return sub_1C24A6644(v10, (uint64_t)v4, v7, v5, v8, v12, &v17, (uint64_t *)&v16, a1);
}

uint64_t sub_1C21F3F98()
{
  uint64_t v1 = OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSource;
  if (*(void *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSource))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSource);
  }
  else
  {
    uint64_t v3 = v0;
    sub_1C21F3CF4();
    type metadata accessor for MedicalRecordTimelineDataSourceProvider();
    sub_1C2200960((unint64_t *)&unk_1EA2DE450, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineDataSourceProvider);
    uint64_t v2 = sub_1C254DFD0();
    swift_release();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_1C21F4078(long long *a1, void *a2)
{
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientView);
  swift_beginAccess();
  id v4 = *v3;
  long long v5 = *a1;
  *(_OWORD *)uint64_t v3 = *a1;
  id v6 = (id)v5;
}

id sub_1C21F40E4()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientView);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = *v1;
  return v2;
}

void sub_1C21F4138(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientView;
  swift_beginAccess();
  id v6 = *(void **)v5;
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
}

uint64_t (*sub_1C21F4198())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C21F41F8(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void *)(*a2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientSubscriber);
  swift_beginAccess();
  void *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C21F4264()
{
  return swift_retain();
}

uint64_t sub_1C21F42B0(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientSubscriber);
  swift_beginAccess();
  void *v3 = a1;
  return swift_release();
}

uint64_t (*sub_1C21F4304())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C21F4360(uint64_t a1, void *a2)
{
  sub_1C21F4424(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientColorProvider;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1C21F44EC(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1C21F43D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientColorProvider;
  swift_beginAccess();
  return sub_1C21F4424(v3, a1);
}

uint64_t sub_1C21F4424(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C21F4488(long long *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientColorProvider;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1C21F44EC(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1C21F44EC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t (*sub_1C21F4504())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C21F45D8()
{
  uint64_t v1 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v1);
  long long v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v17 - v5;
  uint64_t v7 = sub_1C254CB40();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21F4914(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1C22001C4((uint64_t)v6, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = sub_1C254F540();
    uint64_t v18 = v11;
    sub_1C254F5A0();
    sub_1C25178E0();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t v12 = v17;
    sub_1C21FE8D0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    sub_1C21FD4EC();
    id v14 = &v3[*(int *)(v13 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v3, v10, v7);
    *(void *)id v14 = 0;
    *((void *)v14 + 1) = 0xE000000000000000;
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = sub_1C254F540();
    uint64_t v18 = v15;
    sub_1C254F5A0();
    sub_1C25178E0();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t v12 = v17;
    sub_1C21FE8D0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v12;
}

uint64_t sub_1C21F4914(uint64_t a1, uint64_t a2)
{
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *MedicalRecordTimelineViewController.__allocating_init(profile:category:accountId:conceptIdentifier:userDomainConcept:highlightedRecordId:displayingRemovedRecords:preloadedRemovedRecords:predicatePerSampleType:showExportButton:)(void *a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, int a7, void *a8, unsigned int (*a9)(uint64_t, uint64_t, uint64_t), char a10)
{
  id v18 = objc_allocWithZone(v10);
  char v19 = sub_1C21FDDB8(a1, a2, a3, a4, a5, a6, a8, a9, a10);

  return v19;
}

char *MedicalRecordTimelineViewController.init(profile:category:accountId:conceptIdentifier:userDomainConcept:highlightedRecordId:displayingRemovedRecords:preloadedRemovedRecords:predicatePerSampleType:showExportButton:)(void *a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8, unsigned int (*a9)(uint64_t, uint64_t, uint64_t), unsigned __int8 a10)
{
  uint64_t v11 = sub_1C21FDDB8(a1, a2, a3, a4, a5, a6, a8, a9, a10);

  return v11;
}

unsigned char *MedicalRecordTimelineViewController.__allocating_init(profile:)(void *a1)
{
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v20[-v7];
  uint64_t v9 = sub_1C254CB40();
  id v10 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(v5, 1, 1, v9);
  uint64_t v11 = *(uint64_t (**)(id, void))(v1 + 960);
  id v12 = a1;
  uint64_t v13 = (unsigned char *)v11(v12, 0);
  v13[OBJC_IVAR___HRMedicalRecordTimelineViewController_showGradientBackgroundForAllRecordsRoom] = 1;
  id v14 = self;
  uint64_t v15 = v13;
  id v16 = objc_msgSend(v14, sel_systemBlueColor);
  id v17 = objc_msgSend(v16, sel_colorWithAlphaComponent_, 0.5);

  uint64_t v22 = sub_1C254DD80();
  uint64_t v23 = MEMORY[0x1E4F665A0];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v21);
  sub_1C254DD70();

  uint64_t v18 = (uint64_t)&v15[OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientColorProvider];
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v18);
  sub_1C21F44EC(&v21, v18);
  swift_endAccess();

  return v15;
}

uint64_t MedicalRecordTimelineViewController.__allocating_init(profile:category:predicatePerSampleType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  id v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v12 = (char *)&v17 - v11;
  uint64_t v13 = sub_1C254CB40();
  id v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(v10, 1, 1, v13);
  char v16 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, void, void, char *, void, void, uint64_t, char))(v3 + 960))(a1, a2, v12, 0, 0, v10, 0, 0, a3, v16);
}

uint64_t MedicalRecordTimelineViewController.__allocating_init(profile:accountId:)(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a1;
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v17 - v8;
  objc_allocWithZone(v2);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = sub_1C254CB40();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a2, v11);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v13(v9, 0, 1, v11);
  v13(v7, 1, 1, v11);
  char v16 = 1;
  uint64_t v14 = (*(uint64_t (**)(uint64_t, void, char *, void, void, char *, void, void, void, char))(ObjectType + 960))(v18, 0, v9, 0, 0, v7, 0, 0, 0, v16);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a2, v11);
  swift_deallocPartialClassInstance();
  return v14;
}

uint64_t MedicalRecordTimelineViewController.init(profile:accountId:)(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a1;
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = sub_1C254CB40();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v8, a2, v10);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v12(v8, 0, 1, v10);
  v12(v6, 1, 1, v10);
  char v15 = 1;
  uint64_t v13 = (*(uint64_t (**)(uint64_t, void, char *, void, void, char *, void, void, void, char))(ObjectType + 960))(v17, 0, v8, 0, 0, v6, 0, 0, 0, v15);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  swift_deallocPartialClassInstance();
  return v13;
}

uint64_t MedicalRecordTimelineViewController.__allocating_init(profile:conceptIdentifier:category:highlightedRecordId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = MEMORY[0x1E4F27990];
  uint64_t v10 = MEMORY[0x1E4FBB718];
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v21 - v15;
  uint64_t v17 = sub_1C254CB40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_1C21F4914(a4, (uint64_t)v14);
  char v20 = 0;
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, void, char *, void, void, void, char))(v4 + 960))(a1, a3, v16, a2, 0, v14, 0, 0, 0, v20);
  sub_1C22001C4(a4, (uint64_t)&qword_1EA2DEFF0, v9, v10, (uint64_t (*)(void))sub_1C21AB558);
  return v18;
}

uint64_t MedicalRecordTimelineViewController.__allocating_init(profile:userDomainConcept:category:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v17 - v11;
  uint64_t v13 = sub_1C254CB40();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(v10, 1, 1, v13);
  char v16 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, void, uint64_t, char *, void, void, void, char))(v3 + 960))(a1, a3, v12, 0, a2, v10, 0, 0, 0, v16);
}

uint64_t MedicalRecordTimelineViewController.__allocating_init(profile:preloadedRemovedRecords:)(uint64_t a1, uint64_t a2)
{
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = sub_1C254CB40();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12(v8, 1, 1, v11);
  char v14 = 0;
  return (*(uint64_t (**)(uint64_t, void, char *, void, void, char *, uint64_t, uint64_t, void, char))(v2 + 960))(a1, 0, v10, 0, 0, v8, 1, a2, 0, v14);
}

uint64_t MedicalRecordTimelineViewController.__allocating_init(forRemovedRecordWithProfile:category:)(uint64_t a1, uint64_t a2)
{
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = sub_1C254CB40();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12(v8, 1, 1, v11);
  char v14 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, void, void, char *, uint64_t, void, void, char))(v2 + 960))(a1, a2, v10, 0, 0, v8, 1, 0, 0, v14);
}

id MedicalRecordTimelineViewController.__deallocating_deinit()
{
  sub_1C21F8D2C();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C21F5E7C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v50 = (uint64_t)&v49 - v4;
  uint64_t v5 = sub_1C254D320();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_account];
  if (v9)
  {
    id v10 = v9;
    sub_1C21F3CF4();
    swift_retain();
    swift_release();
    uint64_t v52 = v9;
    id v11 = v10;
    sub_1C254EA70();

    swift_release();
  }
  uint64_t v12 = (objc_class *)type metadata accessor for MedicalRecordTimelineViewController();
  v53.receiver = v0;
  v53.super_class = v12;
  uint64_t v51 = v12;
  objc_msgSendSuper2(&v53, sel_viewDidLoad);
  sub_1C21F3F98();
  sub_1C254DCE0();
  uint64_t v13 = (void *)sub_1C254D650();
  swift_release();
  id result = objc_msgSend(v0, sel_collectionView);
  if (!result)
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v15 = result;
  objc_msgSend(result, sel_setCollectionViewLayout_animated_, v13, 0);

  sub_1C22F45DC();
  id result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  char v16 = result;
  uint64_t v17 = ObjectType;
  objc_msgSend(result, sel_setPreservesSuperviewLayoutMargins_, 1);

  id result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v18 = result;
  objc_msgSend(result, sel_setAlwaysBounceVertical_, 1);

  id v19 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v19, sel__setSupportsTwoLineLargeTitles_, 1);

  id result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  char v20 = result;
  sub_1C254FB40();
  uint64_t v21 = (void *)sub_1C254D310();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v20, sel_setBackgroundColor_, v21);

  id result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v22 = result;
  objc_msgSend(result, sel_setSelfSizingInvalidation_, 2);

  sub_1C21F3F98();
  id result = objc_msgSend(v1, sel_collectionView);
  if (!result)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  uint64_t v23 = result;
  uint64_t v24 = v17;
  type metadata accessor for DataSourceObserver();
  uint64_t v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  id v26 = (void *)sub_1C254D620();
  swift_retain();
  objc_msgSend(v26, sel_registerObserver_, v25);

  swift_release();
  swift_release();

  *(void *)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_observer] = v25;
  swift_release();
  if (*(void *)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_userDomainConcept]
    || *(void *)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept])
  {
    goto LABEL_11;
  }
  if (*(void *)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_conceptIdentifier])
  {
    objc_msgSend(v1, sel_setTitle_, 0);
    id v39 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v39, sel_setLargeTitleDisplayMode_, 2);
LABEL_33:

    goto LABEL_12;
  }
  unint64_t v40 = *(void *)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_preloadedRemovedRecords];
  if (v40)
  {
    if (v40 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v48 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (v48 > 0) {
        goto LABEL_30;
      }
    }
    else if (*(uint64_t *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0)
    {
LABEL_30:
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v41 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      id v39 = (id)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v39);
      goto LABEL_33;
    }
  }
  if (v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_isDisplayingRemovedRecords] == 1) {
    goto LABEL_30;
  }
  unint64_t v42 = *(void **)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_category];
  if (v42)
  {
    id v43 = v42;
    id v44 = objc_msgSend(v43, sel_displayName);
    if (!v44)
    {
      sub_1C254F470();
      id v44 = (id)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v1, sel_setTitle_, v44);
  }
  else
  {
    uint64_t v45 = v50;
    sub_1C21F4914((uint64_t)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId], v50);
    uint64_t v46 = sub_1C254CB40();
    int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v45, 1, v46);
    sub_1C22001C4(v45, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
    if (v47 != 1) {
LABEL_11:
    }
      objc_msgSend(v1, sel_setTitle_, 0);
  }
LABEL_12:
  id v27 = &v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle];
  swift_beginAccess();
  if (*((void *)v27 + 1))
  {
    swift_bridgeObjectRetain();
    id v28 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setTitle_, v28);
  }
  id v29 = objc_msgSend(v1, sel_title);
  if (!v29)
  {
    if (sub_1C21FE6F0()) {
      goto LABEL_18;
    }
    id v30 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v30, sel_setLargeTitleDisplayMode_, 2);

    id v31 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v31, sel__setManualScrollEdgeAppearanceEnabled_, 0);

    id v32 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v32, sel__setAutoScrollEdgeTransitionDistance_, 8.0);

    id v29 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v29, sel__setManualScrollEdgeAppearanceEnabled_, 1);
  }

LABEL_18:
  sub_1C21F9A04();
  sub_1C21F83D4();
  sub_1C21F91D8(0);
  if (v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_showGradientBackgroundForAllRecordsRoom] == 1)
  {
    sub_1C2200960(&qword_1EA2DE1D0, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineViewController);
    sub_1C254DD50();
    id result = objc_msgSend(v1, sel_collectionView);
    if (result)
    {
      id v33 = result;
      id v34 = objc_msgSend(self, sel_clearColor);
      objc_msgSend(v33, sel_setBackgroundColor_, v34);

      goto LABEL_21;
    }
LABEL_48:
    __break(1u);
    return result;
  }
LABEL_21:
  id v35 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EA2DD788 != -1) {
    swift_once();
  }
  objc_msgSend(v35, sel_addObserver_selector_name_object_, v1, sel_reloadDataWithNotification_, qword_1EA2E28A0, 0);

  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DE1B0, (uint64_t (*)(uint64_t))sub_1C21FE7D8, MEMORY[0x1E4FBBE00]);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1C255CD90;
  uint64_t v37 = sub_1C254F270();
  uint64_t v38 = sub_1C2200960(&qword_1EA2DE1C8, MEMORY[0x1E4F678F8]);
  *(void *)(v36 + 32) = v37;
  *(void *)(v36 + 40) = v38;
  *(void *)(swift_allocObject() + 16) = v24;
  sub_1C254FB70();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return (id)swift_release();
}

void sub_1C21F6920(void *a1)
{
  id v2 = objc_msgSend(a1, sel_traitCollection);
  sub_1C254FCE0();

  sub_1C254FB80();
  sub_1C254FE20();
  sub_1C21F3F98();
  sub_1C254DCD0();
  swift_release();
  id v3 = objc_msgSend(a1, sel_collectionView);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_collectionViewLayout);

    objc_msgSend(v5, sel_invalidateLayout);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C21F6A54(char a1)
{
  id v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for MedicalRecordTimelineViewController();
  objc_msgSendSuper2(&v9, sel_viewIsAppearing_, a1 & 1);
  id v4 = objc_msgSend(v2, sel_traitCollection);
  sub_1C254FCE0();

  sub_1C254FB80();
  uint64_t result = sub_1C254FE20();
  if (*((unsigned char *)v2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_showGradientBackgroundForAllRecordsRoom) == 1)
  {
    uint64_t v6 = (uint64_t)v2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientColorProvider;
    swift_beginAccess();
    sub_1C21F4424(v6, (uint64_t)v8);
    __swift_project_boxed_opaque_existential_1Tm(v8, v8[3]);
    id v7 = objc_msgSend(v2, sel_traitCollection);
    sub_1C254D920();

    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  }
  return result;
}

uint64_t sub_1C21F6CBC()
{
  uint64_t v1 = v0;
  uint64_t v15 = MEMORY[0x1E4FBCC28];
  uint64_t v14 = MEMORY[0x1E4FBB718];
  sub_1C21AB558(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)&v14 - v3;
  uint64_t v17 = sub_1C21A842C;
  char v16 = sub_1C2200190;
  sub_1C2200704(0, (unint64_t *)&qword_1EA2DE3C0, (void (*)(uint64_t))sub_1C21A842C, (void (*)(void))sub_1C2200190);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  objc_super v9 = (char *)&v14 - v8;
  uint64_t v10 = *(void *)(sub_1C21F3B20() + 24);
  swift_retain();
  swift_release();
  uint64_t v19 = v10;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v18 = (id)sub_1C254FC70();
  uint64_t v11 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  sub_1C21A842C();
  sub_1C2200190();
  sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
  sub_1C254EC70();
  sub_1C22001C4((uint64_t)v4, (uint64_t)&qword_1EBB6F4A0, v15, v14, (uint64_t (*)(void))sub_1C21AB558);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C2200884((unint64_t *)&unk_1EA2DE3D8, (unint64_t *)&qword_1EA2DE3C0, (void (*)(uint64_t))v17, (void (*)(void))v16);
  uint64_t v12 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(void *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_accountStateCancellable) = v12;
  return swift_release();
}

void sub_1C21F6FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  if (*(void *)a1)
  {
    id v4 = *(void **)(a1 + 8);
    uint64_t v3 = *(void *)(a1 + 16);
    uint64_t v5 = a2 + 16;
    swift_beginAccess();
    uint64_t v6 = MEMORY[0x1C875A200](v5);
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      id v8 = v2;
      MedicalRecordTimelineViewController.accountStateDidChange(account:changeType:)(v4, v3);
      sub_1C220022C(v2, v4);
    }
  }
}

void MedicalRecordTimelineViewController.accountStateDidChange(account:changeType:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v148 = a2;
  uint64_t v150 = v3;
  uint64_t ObjectType = swift_getObjectType();
  sub_1C21FE83C();
  uint64_t v7 = v6;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v138 = (uint64_t)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v137 = (uint64_t)&v130 - v10;
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  v144 = (char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v145 = (uint64_t)&v130 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v132 = (uint64_t)&v130 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v141 = (uint64_t)&v130 - v18;
  uint64_t v19 = sub_1C254CB40();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v130 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_1C254E560();
  uint64_t v23 = *(void *)(v149 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v149);
  v134 = (char *)&v130 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  v136 = (char *)&v130 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  v133 = (char *)&v130 - v29;
  MEMORY[0x1F4188790](v28);
  id v31 = (char *)&v130 - v30;
  sub_1C254E510();
  id v32 = a1;
  id v33 = sub_1C254E550();
  os_log_type_t v34 = sub_1C254FA10();
  LODWORD(v140) = v34;
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v36 = &selRef_addSubview_;
  uint64_t v146 = v20;
  uint64_t v147 = v19;
  uint64_t v142 = v23;
  uint64_t v143 = v7;
  v139 = v22;
  uint64_t v135 = ObjectType;
  if (v35)
  {
    uint64_t v37 = swift_slowAlloc();
    v131 = (void *)swift_slowAlloc();
    v152[0] = v131;
    *(_DWORD *)uint64_t v37 = 136446722;
    uint64_t v38 = sub_1C2550AA0();
    uint64_t v151 = sub_1C21AD354(v38, v39, (uint64_t *)v152);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2082;
    id v40 = objc_msgSend(v32, sel_identifier);
    sub_1C254CB20();

    sub_1C2200960((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v41 = sub_1C2550810();
    unint64_t v43 = v42;
    (*(void (**)(char *, uint64_t))(v146 + 8))(v22, v19);
    uint64_t v151 = sub_1C21AD354(v41, v43, (uint64_t *)v152);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 22) = 2082;
    id v44 = (id)NSStringFromAccountStateChangeType();
    uint64_t v45 = sub_1C254F470();
    unint64_t v47 = v46;

    uint64_t v20 = v146;
    uint64_t v48 = v149;
    uint64_t v151 = sub_1C21AD354(v45, v47, (uint64_t *)v152);
    uint64_t v36 = &selRef_addSubview_;
    sub_1C2550120();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v33, (os_log_type_t)v140, "%{public}s got notified that account %{public}s was changed with type %{public}s", (uint8_t *)v37, 0x20u);
    uint64_t v49 = v131;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v49, -1, -1);
    uint64_t v50 = v37;
    uint64_t v51 = v142;
    MEMORY[0x1C875A0B0](v50, -1, -1);

    uint64_t v52 = *(void (**)(char *, uint64_t))(v51 + 8);
    objc_super v53 = v31;
    uint64_t v54 = v48;
  }
  else
  {

    uint64_t v52 = *(void (**)(char *, uint64_t))(v23 + 8);
    objc_super v53 = v31;
    uint64_t v54 = v149;
  }
  v140 = v52;
  v52(v53, v54);
  v55 = v32;
  uint64_t v57 = (uint64_t)v144;
  uint64_t v56 = v145;
  uint64_t v58 = v148;
  uint64_t v59 = v150 + OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId;
  id v60 = [v32 v36[378]];
  v61 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56);
  v62 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v58 == 3)
  {
    uint64_t v63 = v141;
    sub_1C254CB20();

    uint64_t v64 = v147;
    (*v61)(v63, 0, 1, v147);
    uint64_t v65 = v137;
    uint64_t v66 = v137 + *(int *)(v143 + 48);
    sub_1C21F4914(v59, v137);
    sub_1C21F4914(v63, v66);
    char v67 = *v62;
    if ((*v62)(v65, 1, v64) == 1)
    {
      sub_1C22001C4(v63, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
      if (v67(v66, 1, v64) == 1)
      {
        sub_1C22001C4(v65, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
LABEL_22:
        v94 = v133;
        sub_1C254E510();
        id v95 = v55;
        v96 = sub_1C254E550();
        os_log_type_t v97 = sub_1C254FA00();
        if (os_log_type_enabled(v96, v97))
        {
          uint64_t v98 = swift_slowAlloc();
          v99 = (void *)swift_slowAlloc();
          v152[0] = v99;
          *(_DWORD *)uint64_t v98 = 136446466;
          uint64_t v100 = sub_1C2550AA0();
          uint64_t v151 = sub_1C21AD354(v100, v101, (uint64_t *)v152);
          sub_1C2550120();
          swift_bridgeObjectRelease();
          *(_WORD *)(v98 + 12) = 2082;
          uint64_t v148 = v98 + 14;
          id v102 = objc_msgSend(v95, sel_identifier);
          v103 = v139;
          sub_1C254CB20();

          sub_1C2200960((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
          uint64_t v104 = v147;
          uint64_t v105 = sub_1C2550810();
          unint64_t v107 = v106;
          (*(void (**)(char *, uint64_t))(v146 + 8))(v103, v104);
          uint64_t v151 = sub_1C21AD354(v105, v107, (uint64_t *)v152);
          sub_1C2550120();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C21A1000, v96, v97, "%{public}s account %{public}s was deleted, popping timeline view controller for the account", (uint8_t *)v98, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C875A0B0](v99, -1, -1);
          MEMORY[0x1C875A0B0](v98, -1, -1);

          v108 = v133;
        }
        else
        {

          v108 = v94;
        }
        v140(v108, v149);
        sub_1C21FC584();
        sub_1C21F3CF4();
        swift_retain();
        swift_release();
        v152[0] = 0;
        sub_1C254EA70();
        swift_release();
        sub_1C21FA194(1);
        return;
      }
    }
    else
    {
      uint64_t v72 = v132;
      sub_1C21F4914(v65, v132);
      if (v67(v66, 1, v64) != 1)
      {
        v89 = v139;
        (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v139, v66, v64);
        sub_1C2200960((unint64_t *)&qword_1EA2DE1E8, MEMORY[0x1E4F27990]);
        LODWORD(v145) = sub_1C254F420();
        uint64_t v148 = (uint64_t)v55;
        v90 = *(void (**)(char *, uint64_t))(v20 + 8);
        v90(v89, v64);
        uint64_t v91 = MEMORY[0x1E4F27990];
        uint64_t v92 = v65;
        uint64_t v93 = MEMORY[0x1E4FBB718];
        sub_1C22001C4(v141, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
        v90((char *)v72, v64);
        v55 = (void *)v148;
        sub_1C22001C4(v92, (uint64_t)&qword_1EA2DEFF0, v91, v93, (uint64_t (*)(void))sub_1C21AB558);
        if (v145) {
          goto LABEL_22;
        }
        goto LABEL_14;
      }
      sub_1C22001C4(v141, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v72, v64);
    }
    sub_1C21FE8D0(v65, (uint64_t (*)(void))sub_1C21FE83C);
LABEL_14:
    uint64_t v73 = v136;
    sub_1C254E510();
    id v74 = v55;
    v75 = sub_1C254E550();
    os_log_type_t v76 = sub_1C254FA00();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc();
      uint64_t v78 = (void *)swift_slowAlloc();
      v152[0] = v78;
      *(_DWORD *)uint64_t v77 = 136446466;
      uint64_t v79 = sub_1C2550AA0();
      uint64_t v151 = sub_1C21AD354(v79, v80, (uint64_t *)v152);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v77 + 12) = 2082;
      uint64_t v148 = v77 + 14;
      id v81 = objc_msgSend(v74, sel_identifier);
      v82 = v139;
      sub_1C254CB20();

      sub_1C2200960((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
      uint64_t v83 = v147;
      uint64_t v84 = sub_1C2550810();
      unint64_t v86 = v85;
      (*(void (**)(char *, uint64_t))(v146 + 8))(v82, v83);
      uint64_t v151 = sub_1C21AD354(v84, v86, (uint64_t *)v152);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v75, v76, "%{public}s account %{public}s was deleted, reloading data", (uint8_t *)v77, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v78, -1, -1);
      MEMORY[0x1C875A0B0](v77, -1, -1);

      long long v87 = v136;
    }
    else
    {

      long long v87 = v73;
    }
    v140(v87, v149);
    sub_1C21F3CF4();
    swift_retain();
    swift_release();
    sub_1C254EA80();
    swift_release();
    id v88 = v152[0];
    objc_msgSend(v152[0], sel_reload);

    return;
  }
  sub_1C254CB20();

  uint64_t v68 = v147;
  (*v61)(v56, 0, 1, v147);
  uint64_t v69 = v138;
  uint64_t v70 = v138 + *(int *)(v143 + 48);
  sub_1C21F4914(v59, v138);
  sub_1C21F4914(v56, v70);
  v71 = *v62;
  if ((*v62)(v69, 1, v68) != 1)
  {
    sub_1C21F4914(v69, v57);
    if (v71(v70, 1, v68) != 1)
    {
      v109 = v139;
      (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v139, v70, v68);
      sub_1C2200960((unint64_t *)&qword_1EA2DE1E8, MEMORY[0x1E4F27990]);
      LODWORD(v148) = sub_1C254F420();
      v110 = *(void (**)(char *, uint64_t))(v20 + 8);
      v110(v109, v68);
      uint64_t v111 = MEMORY[0x1E4F27990];
      uint64_t v112 = v69;
      uint64_t v113 = MEMORY[0x1E4FBB718];
      sub_1C22001C4(v145, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
      v110((char *)v57, v68);
      sub_1C22001C4(v112, (uint64_t)&qword_1EA2DEFF0, v111, v113, (uint64_t (*)(void))sub_1C21AB558);
      if ((v148 & 1) == 0) {
        return;
      }
      goto LABEL_25;
    }
    sub_1C22001C4(v145, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v57, v68);
LABEL_18:
    sub_1C21FE8D0(v69, (uint64_t (*)(void))sub_1C21FE83C);
    return;
  }
  sub_1C22001C4(v56, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
  if (v71(v70, 1, v68) != 1) {
    goto LABEL_18;
  }
  sub_1C22001C4(v69, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
LABEL_25:
  v114 = v134;
  sub_1C254E510();
  id v115 = v55;
  v116 = sub_1C254E550();
  os_log_type_t v117 = sub_1C254FA00();
  if (os_log_type_enabled(v116, v117))
  {
    uint64_t v118 = swift_slowAlloc();
    v119 = (void *)swift_slowAlloc();
    v152[0] = v119;
    *(_DWORD *)uint64_t v118 = 136446466;
    uint64_t v120 = sub_1C2550AA0();
    uint64_t v151 = sub_1C21AD354(v120, v121, (uint64_t *)v152);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v118 + 12) = 2082;
    uint64_t v148 = v118 + 14;
    id v122 = objc_msgSend(v115, sel_identifier);
    v123 = v139;
    sub_1C254CB20();

    sub_1C2200960((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
    uint64_t v124 = v147;
    uint64_t v125 = sub_1C2550810();
    unint64_t v127 = v126;
    (*(void (**)(char *, uint64_t))(v146 + 8))(v123, v124);
    uint64_t v151 = sub_1C21AD354(v125, v127, (uint64_t *)v152);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v116, v117, "%{public}s account %{public}s was changed, reloading account details", (uint8_t *)v118, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v119, -1, -1);
    MEMORY[0x1C875A0B0](v118, -1, -1);

    v128 = v134;
  }
  else
  {

    v128 = v114;
  }
  v140(v128, v149);
  id v129 = v115;
  sub_1C21FDAA8(v115);
}

uint64_t sub_1C21F83D4()
{
  uint64_t v1 = v0;
  sub_1C2200400();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  uint64_t v44 = v3;
  MEMORY[0x1F4188790](v2);
  unint64_t v42 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C220051C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v5);
  unint64_t v39 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x1E4FBCC28];
  uint64_t v45 = MEMORY[0x1E4FBB718];
  sub_1C21AB558(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v36 = sub_1C22007E0;
  BOOL v35 = sub_1C2200848;
  sub_1C2200704(0, (unint64_t *)&unk_1EA2DE418, (void (*)(uint64_t))sub_1C22007E0, (void (*)(void))sub_1C2200848);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  uint64_t v38 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v34 - v13;
  sub_1C21F6CBC();
  id v15 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                              + OBJC_IVAR___HRMedicalRecordTimelineViewController_profile), sel_healthStore));
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AD38]), sel_initWithHealthStore_delegate_, v15, v1);

  uint64_t v17 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncObserver);
  *(void *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncObserver) = v16;

  uint64_t v18 = sub_1C21F3CF4()[5];
  swift_retain();
  swift_release();
  uint64_t v52 = v18;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v51 = (id)sub_1C254FC70();
  uint64_t v48 = sub_1C254FC20();
  uint64_t v19 = *(void *)(v48 - 8);
  unint64_t v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v20 = v19 + 56;
  v47(v10, 1, 1, v48);
  uint64_t v34 = v20;
  sub_1C22007E0();
  sub_1C2200848();
  uint64_t v49 = sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
  sub_1C254EC70();
  unint64_t v46 = sub_1C21AB558;
  uint64_t v21 = v45;
  sub_1C22001C4((uint64_t)v10, (uint64_t)&qword_1EBB6F4A0, v50, v45, (uint64_t (*)(void))sub_1C21AB558);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C2200884(&qword_1EA2DE430, (unint64_t *)&unk_1EA2DE418, (void (*)(uint64_t))v36, (void (*)(void))v35);
  uint64_t v22 = v37;
  uint64_t v23 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v22);
  *(void *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_queryReturnedCancellable) = v23;
  swift_release();
  uint64_t v24 = *(void *)(sub_1C21F3B20() + 32);
  swift_retain();
  swift_release();
  uint64_t v52 = v24;
  id v51 = (id)sub_1C254FC70();
  v47(v10, 1, 1, v48);
  sub_1C2200638(0, (unint64_t *)&qword_1EBB6F1F0, (unint64_t *)&qword_1EBB6F208, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalIngestionState);
  sub_1C22006B4(&qword_1EA2DE410, (unint64_t *)&qword_1EBB6F1F0, (unint64_t *)&qword_1EBB6F208, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalIngestionState);
  uint64_t v25 = v39;
  sub_1C254EC70();
  uint64_t v26 = v50;
  sub_1C22001C4((uint64_t)v10, (uint64_t)&qword_1EBB6F4A0, v50, v21, (uint64_t (*)(void))v46);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C2200960(&qword_1EA2DE438, (void (*)(uint64_t))sub_1C220051C);
  uint64_t v27 = v40;
  uint64_t v28 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v27);
  *(void *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionStateCancellable) = v28;
  swift_release();
  uint64_t v29 = *(void *)(sub_1C21F3B20() + 40);
  swift_retain();
  swift_release();
  uint64_t v52 = v29;
  id v51 = (id)sub_1C254FC70();
  v47(v10, 1, 1, v48);
  sub_1C2200638(0, &qword_1EBB6F200, &qword_1EBB6F228, (uint64_t (*)(uint64_t))type metadata accessor for HKConceptIndexManagerState);
  sub_1C22006B4(&qword_1EA2DE400, &qword_1EBB6F200, &qword_1EBB6F228, (uint64_t (*)(uint64_t))type metadata accessor for HKConceptIndexManagerState);
  uint64_t v30 = v42;
  sub_1C254EC70();
  sub_1C22001C4((uint64_t)v10, (uint64_t)&qword_1EBB6F4A0, v26, v45, (uint64_t (*)(void))v46);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C2200960(&qword_1EA2DE440, (void (*)(uint64_t))sub_1C2200400);
  uint64_t v31 = v43;
  uint64_t v32 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v31);
  *(void *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerStateCancellable) = v32;
  return swift_release();
}

void sub_1C21F8BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C875A200](v2);
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_1C21F91D8(0);
  }
}

void sub_1C21F8C34(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *a1;
  char v5 = *((unsigned char *)a1 + 8);
  uint64_t v6 = a2 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C875A200](v6);
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    uint64_t v9 = v7 + *a3;
    uint64_t v10 = *(void *)v9;
    char v11 = *(unsigned char *)(v9 + 8);
    *(void *)uint64_t v9 = v4;
    *(unsigned char *)(v9 + 8) = v5;
    if (v5)
    {
      if (v11)
      {
LABEL_11:

        return;
      }
    }
    else
    {
      if (v4 != v10) {
        char v11 = 1;
      }
      if ((v11 & 1) == 0) {
        goto LABEL_11;
      }
    }
    sub_1C21F91D8(0);
    if ((*(unsigned char *)(v9 + 8) & 1) == 0 && *(void *)v9 == 1)
    {
      objc_msgSend(self, sel_cancelPreviousPerformRequestsWithTarget_selector_object_, v8, sel_reloadData, 0);
      objc_msgSend(v8, sel_performSelector_withObject_afterDelay_, sel_reloadData, 0, 1.25);
    }
    goto LABEL_11;
  }
}

void sub_1C21F8D2C()
{
  if (*(void *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_accountStateCancellable))
  {
    swift_retain();
    sub_1C254EA00();
    swift_release();
  }
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncObserver);
  *(void *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncObserver) = 0;

  if (*(void *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_queryReturnedCancellable))
  {
    swift_retain();
    sub_1C254EA00();
    swift_release();
  }
  if (*(void *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionStateCancellable))
  {
    swift_retain();
    sub_1C254EA00();
    swift_release();
  }
  if (*(void *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerStateCancellable))
  {
    swift_retain();
    sub_1C254EA00();
    swift_release();
  }
}

BOOL sub_1C21F8E08()
{
  sub_1C21F3CF4();
  swift_retain();
  swift_release();
  sub_1C254EA80();
  swift_release();
  if (v2 != 1
    || (*(unsigned char *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive) & 1) != 0
    || (*(unsigned char *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState + 8) & 1) == 0
    && *(void *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState) == 3)
  {
    return 1;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerState + 8)) {
    return 0;
  }
  return *(void *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerState) == 2;
}

void sub_1C21F8F24()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider);
  if (v6)
  {
    id v15 = v6;
    if (objc_msgSend(v15, sel_loadingNextPage))
    {
      id v7 = v15;
    }
    else
    {
      sub_1C254E510();
      uint64_t v8 = sub_1C254E550();
      os_log_type_t v9 = sub_1C254FA00();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        uint64_t v11 = swift_slowAlloc();
        uint64_t v17 = v11;
        *(_DWORD *)uint64_t v10 = 136446210;
        uint64_t v12 = sub_1C2550AA0();
        uint64_t v16 = sub_1C21AD354(v12, v13, &v17);
        sub_1C2550120();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C21A1000, v8, v9, "%{public}s requesting next page of data", v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v11, -1, -1);
        MEMORY[0x1C875A0B0](v10, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      objc_msgSend(v15, sel_requestDataOfNextPage);
      objc_msgSend(v15, sel_setLoadingNextPage_, 1);
    }
  }
}

id sub_1C21F91D8(char a1)
{
  swift_getObjectType();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_cancelPreviousPerformRequestsWithTarget_selector_object_, v1, sel_updateSystemStatusView, 0);
  if ((a1 & 1) == 0)
  {
    uint64_t v4 = OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider;
    char v5 = *(void **)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider];
    if (v5)
    {
      id v6 = objc_msgSend(v5, sel_numberOfGroups);
      if (sub_1C21F8E08())
      {
        if (v6) {
          goto LABEL_8;
        }
        goto LABEL_12;
      }
      if (v6) {
        goto LABEL_19;
      }
    }
    else if (sub_1C21F8E08())
    {
LABEL_12:
      if ((v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_isDisplayingRemovedRecords] & 1) == 0)
      {
        if (*(void *)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_category])
        {
          uint64_t v10 = *(void **)&v1[v4];
          if (v10)
          {
            if ((uint64_t)objc_msgSend(v10, sel_numOfRemovedRecords) > 0)
            {
LABEL_8:
              id v7 = (char *)sub_1C21F39B0();
              objc_msgSend(*(id *)&v7[OBJC_IVAR___HRContentStatusView_spinnerView], sel_stopAnimating);
              objc_msgSend(v7, sel_setNeedsLayout);

              id result = objc_msgSend(v1, sel_collectionView);
              if (result)
              {
                uint64_t v8 = result;
                objc_msgSend(result, sel_setBackgroundView_, 0);

                id result = objc_msgSend(v1, sel_collectionView);
                if (result)
                {
                  os_log_type_t v9 = result;
                  objc_msgSend(result, sel_setScrollEnabled_, 1);

                  sub_1C21F3CF4();
                  swift_retain();
                  swift_release();
LABEL_40:
                  sub_1C254EA70();
                  return (id)swift_release();
                }
                goto LABEL_47;
              }
              goto LABEL_45;
            }
          }
        }
      }
      uint64_t v11 = (char *)sub_1C21F39B0();
      objc_msgSend(*(id *)&v11[OBJC_IVAR___HRContentStatusView_spinnerView], sel_startAnimating);
      objc_msgSend(v11, sel_setNeedsLayout);

      uint64_t v12 = (char *)sub_1C21F39B0();
      unint64_t v13 = &v12[OBJC_IVAR___HRContentStatusView_subtitle];
      swift_beginAccess();
      *(void *)unint64_t v13 = 0;
      *((void *)v13 + 1) = 0;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void **)&v12[OBJC_IVAR___HRContentStatusView_subtitleLabel];
      if (*((void *)v13 + 1))
      {
        swift_bridgeObjectRetain();
        id v15 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v15 = 0;
      }
      objc_msgSend(v14, sel_setText_, v15);

      objc_msgSend(v12, sel_setNeedsLayout);
      id result = objc_msgSend(v1, sel_collectionView);
      if (result)
      {
        uint64_t v30 = result;
        id v31 = sub_1C21F39B0();
        objc_msgSend(v30, sel_setBackgroundView_, v31);

        id result = objc_msgSend(v1, sel_collectionView);
        if (result)
        {
          uint64_t v32 = result;
          objc_msgSend(result, sel_setScrollEnabled_, 0);

          sub_1C21F3CF4();
          swift_retain();
          swift_release();
          goto LABEL_40;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_43;
    }
    if ((v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_isDisplayingRemovedRecords] & 1) != 0
      || !*(void *)&v1[OBJC_IVAR___HRMedicalRecordTimelineViewController_category]
      || (uint64_t v19 = *(void **)&v1[v4]) == 0
      || (uint64_t)objc_msgSend(v19, sel_numOfRemovedRecords) <= 0)
    {
      uint64_t v20 = (char *)sub_1C21F39B0();
      objc_msgSend(*(id *)&v20[OBJC_IVAR___HRContentStatusView_spinnerView], sel_stopAnimating);
      objc_msgSend(v20, sel_setNeedsLayout);

      uint64_t v21 = (char *)sub_1C21F39B0();
      uint64_t v22 = (void *)sub_1C254F430();
      id v23 = (id)HBXLocalizedString(v22);

      uint64_t v24 = sub_1C254F470();
      uint64_t v26 = v25;

      uint64_t v27 = (uint64_t *)&v21[OBJC_IVAR___HRContentStatusView_title];
      swift_beginAccess();
      uint64_t *v27 = v24;
      v27[1] = v26;
      swift_bridgeObjectRelease();
      uint64_t v28 = *(void **)&v21[OBJC_IVAR___HRContentStatusView_titleLabel];
      if (v27[1])
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v29 = 0;
      }
      objc_msgSend(v28, sel_setText_, v29);

      objc_msgSend(v21, sel_setNeedsLayout);
      id v33 = (char *)sub_1C21F39B0();
      uint64_t v34 = &v33[OBJC_IVAR___HRContentStatusView_subtitle];
      swift_beginAccess();
      *(void *)uint64_t v34 = 0;
      *((void *)v34 + 1) = 0;
      swift_bridgeObjectRelease();
      BOOL v35 = *(void **)&v33[OBJC_IVAR___HRContentStatusView_subtitleLabel];
      if (*((void *)v34 + 1))
      {
        swift_bridgeObjectRetain();
        uint64_t v36 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v36 = 0;
      }
      objc_msgSend(v35, sel_setText_, v36);

      objc_msgSend(v33, sel_setNeedsLayout);
      id result = objc_msgSend(v1, sel_collectionView);
      if (!result)
      {
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      uint64_t v37 = result;
      id v38 = sub_1C21F39B0();
      objc_msgSend(v37, sel_setBackgroundView_, v38);

      id result = objc_msgSend(v1, sel_collectionView);
      if (!result)
      {
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      uint64_t v18 = result;
      objc_msgSend(result, sel_setScrollEnabled_, 0);
LABEL_39:

      sub_1C21F3CF4();
      swift_retain();
      swift_release();
      goto LABEL_40;
    }
LABEL_19:
    uint64_t v16 = (char *)sub_1C21F39B0();
    objc_msgSend(*(id *)&v16[OBJC_IVAR___HRContentStatusView_spinnerView], sel_stopAnimating);
    objc_msgSend(v16, sel_setNeedsLayout);

    id result = objc_msgSend(v1, sel_collectionView);
    if (!result)
    {
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    uint64_t v17 = result;
    objc_msgSend(result, sel_setBackgroundView_, 0);

    id result = objc_msgSend(v1, sel_collectionView);
    if (!result)
    {
LABEL_48:
      __break(1u);
      return result;
    }
    uint64_t v18 = result;
    objc_msgSend(result, sel_setScrollEnabled_, 1);
    goto LABEL_39;
  }
  return objc_msgSend(v1, sel_performSelector_withObject_afterDelay_, sel_updateSystemStatusView, v1, 0.25);
}

void sub_1C21F98B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_profile];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_account];
  uint64_t v4 = (objc_class *)type metadata accessor for PDFConfigurationViewController();
  id v5 = objc_allocWithZone(v4);
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  objc_allocWithZone(v4);
  id v6 = v3;
  id v7 = PDFConfigurationViewController.init(profile:account:category:)(v2, v3, (uint64_t *)v9);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B70]), sel_initWithRootViewController_, v7);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v8, 1, 0);
}

void sub_1C21F9A04()
{
  uint64_t v1 = v0;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  if (*((unsigned char *)v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_showExportButton) == 1)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v2 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v3 = type metadata accessor for MedicalRecordTimelineViewController();
    uint64_t v23 = v3;
    v22[0] = v0;
    id v4 = v0;
    id v5 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    if (v3)
    {
      id v6 = __swift_project_boxed_opaque_existential_1Tm(v22, v3);
      uint64_t v7 = *(void *)(v3 - 8);
      MEMORY[0x1F4188790](v6);
      os_log_type_t v9 = (char *)&v22[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v7 + 16))(v9);
      uint64_t v10 = sub_1C2550860();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v3);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
    }
    else
    {
      uint64_t v10 = 0;
    }
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithTitle_style_target_action_, v5, 0, v10, sel_didTapExportPDFButton);

    swift_unknownObjectRelease();
    id v12 = v11;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v13 = objc_msgSend(self, sel_sharedBehavior);
  if (v13)
  {
    uint64_t v14 = v13;
    unsigned int v15 = objc_msgSend(v13, sel_isAppleInternalInstall);

    if (v15)
    {
      uint64_t v23 = type metadata accessor for MedicalRecordTimelineViewController();
      v22[0] = v1;
      id v16 = v1;
      id v17 = _sSo15UIBarButtonItemC15HealthRecordsUIE014makeTapToRadarC06target6actionABSgypSg_10ObjectiveC8SelectorVSgtFZ_0((uint64_t)v22, (uint64_t)sel_tapToRadarWithSender_);
      sub_1C22001C4((uint64_t)v22, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2200144);
      if (v17)
      {
        id v18 = v17;
        MEMORY[0x1C8757C00]();
        if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();
      }
    }
    id v19 = objc_msgSend(v1, sel_navigationItem);
    sub_1C21AB51C(0, &qword_1EA2DE448);
    uint64_t v20 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setRightBarButtonItems_animated_, v20, 1);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C21F9F3C(void *a1)
{
  id v2 = v1;
  if (objc_msgSend(a1, sel_object))
  {
    sub_1C25501E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  uint64_t v3 = MEMORY[0x1E4FBC840] + 8;
  sub_1C21FFF78((uint64_t)v8, (uint64_t)v9, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C2200144);
  if (!v10)
  {
    sub_1C22001C4((uint64_t)v9, (uint64_t)&qword_1EBB6EF00, v3, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2200144);
LABEL_9:
    sub_1C21FA194(1);
    return;
  }
  type metadata accessor for MedicalRecordTimelineViewController();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_9;
  }
  id v4 = v2;
  id v5 = v7;
  char v6 = sub_1C254FF70();

  if ((v6 & 1) == 0) {
    goto LABEL_9;
  }
}

void sub_1C21FA194(char a1)
{
  if (a1)
  {
    sub_1C21F3CF4();
    swift_retain();
    swift_release();
    sub_1C254EA80();
    swift_release();
    if (v1)
    {
      objc_msgSend(v1, sel_setShouldClearPagingCacheOnNextReload_, 1);
    }
  }
  sub_1C21F3CF4();
  swift_retain();
  swift_release();
  sub_1C254EA80();
  swift_release();
  objc_msgSend(v1, sel_reload);
}

uint64_t sub_1C21FA264()
{
  uint64_t v1 = v0;
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v130 = (uint64_t)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v131 = (uint64_t)&v123 - v5;
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  unint64_t v127 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v129 = (char *)&v123 - v10;
  id v11 = *(void **)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_category);
  BOOL v12 = v11 != 0;
  sub_1C254F470();
  id v13 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_initWithKey_ascending_, v14, 0);

  uint64_t v132 = v7;
  uint64_t v133 = v6;
  if (v11 && (id v16 = objc_msgSend(v11, sel_additionalPredicatesForCategory)) != 0)
  {
    id v17 = v16;
    sub_1C21AB51C(0, &qword_1EBB6FF78);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
    sub_1C22000E8((unint64_t *)&qword_1EBB6FF80, &qword_1EBB6FF78);
    uint64_t v18 = sub_1C254F2D0();
  }
  else
  {
    uint64_t v18 = 0;
  }
  unint64_t v19 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_additionalPredicatesPerSampleType);
  id v135 = v15;
  uint64_t v136 = v1;
  BOOL v134 = v12;
  if (!v19)
  {
    uint64_t v141 = v18;
    goto LABEL_65;
  }
  if ((v19 & 0xC000000000000001) != 0)
  {
    uint64_t v20 = sub_1C2550520();
    uint64_t v139 = 0;
    uint64_t v21 = 0;
    unint64_t v22 = 0;
    unint64_t v23 = v20 | 0x8000000000000000;
  }
  else
  {
    uint64_t v24 = -1 << *(unsigned char *)(v19 + 32);
    uint64_t v21 = ~v24;
    uint64_t v25 = *(void *)(v19 + 64);
    uint64_t v139 = v19 + 64;
    uint64_t v26 = -v24;
    if (v26 < 64) {
      uint64_t v27 = ~(-1 << v26);
    }
    else {
      uint64_t v27 = -1;
    }
    unint64_t v22 = v27 & v25;
    unint64_t v23 = v19;
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  uint64_t v128 = v21;
  uint64_t v137 = v23 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v138 = (unint64_t)(v21 + 64) >> 6;
  uint64_t v126 = MEMORY[0x1E4FBC838] + 8;
  long long v125 = xmmword_1C255CD70;
LABEL_14:
  unint64_t v29 = v18 & 0xC000000000000001;
  uint64_t v30 = (void *)(v18 & 0xFFFFFFFFFFFFFF8);
  if (v18 < 0) {
    uint64_t v30 = (void *)v18;
  }
  id v140 = v30;
  uint64_t v141 = v18;
  while (1)
  {
    uint64_t v31 = v28;
    if ((v23 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v34 = sub_1C25505B0();
    if (!v34) {
      goto LABEL_64;
    }
    uint64_t v36 = v35;
    uint64_t v142 = v34;
    sub_1C21AB51C(0, &qword_1EBB6FF78);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v37 = v143;
    swift_unknownObjectRelease();
    uint64_t v142 = v36;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v38 = v143;
    swift_unknownObjectRelease();
    if (!v37) {
      goto LABEL_64;
    }
LABEL_40:
    uint64_t v18 = v141;
    if (!v141)
    {

      goto LABEL_14;
    }
    if (v29)
    {
      id v44 = v37;
      uint64_t v45 = sub_1C25505A0();
      if (!v45) {
        goto LABEL_17;
      }
      uint64_t v142 = v45;
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v46 = v143;
      swift_unknownObjectRelease();

      if (v46) {
        goto LABEL_48;
      }
    }
    else if (*(void *)(v141 + 16))
    {
      unint64_t v47 = sub_1C245733C((uint64_t)v37);
      if ((v48 & 1) == 0)
      {
LABEL_17:

        goto LABEL_18;
      }
      id v46 = *(id *)(*(void *)(v18 + 56) + 8 * v47);

      if (v46)
      {
LABEL_48:
        sub_1C2200144(0, (unint64_t *)&qword_1EBB6F4E0, v126, MEMORY[0x1E4FBBE00]);
        uint64_t v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = v125;
        *(void *)(v49 + 32) = v38;
        *(void *)(v49 + 40) = v46;
        uint64_t v143 = (void *)v49;
        sub_1C254F730();
        sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
        id v50 = v37;
        id v51 = v38;
        id v124 = v46;
        uint64_t v52 = (void *)sub_1C254F700();
        swift_bridgeObjectRelease();
        id v53 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v52);

        if (v29)
        {
          uint64_t v54 = (uint64_t)v140;
          uint64_t v55 = sub_1C25502A0();
          if (!__OFADD__(v55, 1))
          {
            id v56 = v51;
            uint64_t v18 = sub_1C24AB664(v54, v55 + 1);
            goto LABEL_53;
          }
LABEL_77:
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          sub_1C21AB51C(0, &qword_1EBB6FF78);
          uint64_t result = sub_1C2550910();
          __break(1u);
          return result;
        }
        id v56 = v51;
LABEL_53:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v143 = (void *)v18;
        unint64_t v58 = sub_1C245733C((uint64_t)v50);
        uint64_t v60 = v18;
        unint64_t v61 = v58;
        uint64_t v62 = *(void *)(v60 + 16);
        BOOL v63 = (v59 & 1) == 0;
        uint64_t v64 = v62 + v63;
        if (!__OFADD__(v62, v63))
        {
          char v65 = v59;
          if (*(void *)(v60 + 24) >= v64)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1C24AD578();
            }
          }
          else
          {
            sub_1C22791F0(v64, isUniquelyReferenced_nonNull_native);
            unint64_t v66 = sub_1C245733C((uint64_t)v50);
            if ((v65 & 1) != (v67 & 1)) {
              goto LABEL_79;
            }
            unint64_t v61 = v66;
          }
          uint64_t v68 = v56;
          uint64_t v69 = v143;
          if (v65)
          {
            uint64_t v70 = v143[7];

            *(void *)(v70 + 8 * v61) = v53;
            uint64_t v18 = (uint64_t)v69;
          }
          else
          {
            v143[(v61 >> 6) + 8] |= 1 << v61;
            *(void *)(v69[6] + 8 * v61) = v50;
            *(void *)(v69[7] + 8 * v61) = v53;
            uint64_t v71 = v69[2];
            BOOL v72 = __OFADD__(v71, 1);
            uint64_t v73 = v71 + 1;
            if (v72) {
              goto LABEL_78;
            }
            uint64_t v18 = (uint64_t)v69;
            v69[2] = v73;
            id v74 = v50;
          }

          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
LABEL_76:
        __break(1u);
        goto LABEL_77;
      }
    }
LABEL_18:
  }
  if (v22)
  {
    unint64_t v32 = __clz(__rbit64(v22));
    v22 &= v22 - 1;
    unint64_t v33 = v32 | (v28 << 6);
    goto LABEL_39;
  }
  int64_t v39 = v28 + 1;
  if (__OFADD__(v28, 1))
  {
    __break(1u);
    goto LABEL_76;
  }
  if (v39 >= v138) {
    goto LABEL_64;
  }
  unint64_t v40 = *(void *)(v139 + 8 * v39);
  ++v28;
  if (v40) {
    goto LABEL_38;
  }
  uint64_t v28 = v31 + 2;
  if (v31 + 2 >= v138) {
    goto LABEL_64;
  }
  unint64_t v40 = *(void *)(v139 + 8 * v28);
  if (v40) {
    goto LABEL_38;
  }
  uint64_t v28 = v31 + 3;
  if (v31 + 3 >= v138) {
    goto LABEL_64;
  }
  unint64_t v40 = *(void *)(v139 + 8 * v28);
  if (v40) {
    goto LABEL_38;
  }
  uint64_t v28 = v31 + 4;
  if (v31 + 4 >= v138) {
    goto LABEL_64;
  }
  unint64_t v40 = *(void *)(v139 + 8 * v28);
  if (v40)
  {
LABEL_38:
    unint64_t v22 = (v40 - 1) & v40;
    unint64_t v33 = __clz(__rbit64(v40)) + (v28 << 6);
LABEL_39:
    uint64_t v42 = 8 * v33;
    uint64_t v43 = *(void **)(*(void *)(v23 + 56) + v42);
    id v37 = *(id *)(*(void *)(v23 + 48) + v42);
    id v38 = v43;
    if (!v37) {
      goto LABEL_64;
    }
    goto LABEL_40;
  }
  uint64_t v41 = v31 + 5;
  while (v138 != v41)
  {
    unint64_t v40 = *(void *)(v139 + 8 * v41++);
    if (v40)
    {
      uint64_t v28 = v41 - 1;
      goto LABEL_38;
    }
  }
LABEL_64:
  sub_1C21ABD08();
  uint64_t v1 = v136;
LABEL_65:
  v75 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_userDomainConcept);
  os_log_type_t v76 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_profile);
  uint64_t v78 = v132;
  uint64_t v77 = v133;
  if (v75)
  {
    uint64_t v79 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_preloadedRemovedRecords);
    char v80 = *(unsigned char *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_isDisplayingRemovedRecords);
    swift_bridgeObjectRetain();
    id v140 = v75;
    id v81 = v76;
    id v82 = sub_1C21FAF84();
    uint64_t v83 = v131;
    sub_1C21F4914(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId, v131);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v83, 1, v77) == 1)
    {
      sub_1C22001C4(v83, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
      id v84 = 0;
    }
    else
    {
      uint64_t v92 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 32);
      uint64_t v139 = v79;
      id v93 = v82;
      id v94 = v81;
      char v95 = v80;
      v96 = v129;
      v92(v129, v83, v77);
      os_log_type_t v97 = self;
      uint64_t v98 = (void *)sub_1C254CB00();
      id v84 = objc_msgSend(v97, sel_predicateForRecordsFromClinicalAccountIdentifier_, v98);

      v99 = v96;
      char v80 = v95;
      id v81 = v94;
      id v82 = v93;
      uint64_t v79 = v139;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v99, v77);
    }
    sub_1C2200144(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v100 = swift_allocObject();
    *(_OWORD *)(v100 + 16) = xmmword_1C255CEB0;
    unint64_t v101 = v135;
    *(void *)(v100 + 32) = v135;
    uint64_t v143 = (void *)v100;
    sub_1C254F730();
    uint64_t v102 = (uint64_t)v143;
    id v103 = objc_allocWithZone((Class)WDMedicalRecordDisplayItemProvider);
    uint64_t v104 = v141;
    swift_bridgeObjectRetain();
    id v105 = v101;
    id v106 = sub_1C21FD558(v81, v75, v79, v80, v134, (uint64_t)v82, v84, v104, v102, (SEL *)&selRef_initWithProfile_userDomainConcept_preloadedRemovedRecords_removedRecordsOnly_displayItemOptions_sampleTypes_filter_additionalPredicates_sortDescriptors_);
    unint64_t v107 = *(void **)(v136 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider);
    *(void *)(v136 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider) = v106;
  }
  else
  {
    unint64_t v85 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept);
    uint64_t v86 = *(void *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_preloadedRemovedRecords);
    char v87 = *(unsigned char *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_isDisplayingRemovedRecords);
    swift_bridgeObjectRetain();
    id v88 = v76;
    id v89 = v85;
    id v140 = sub_1C21FAF84();
    uint64_t v90 = v130;
    sub_1C21F4914(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId, v130);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v90, 1, v77) == 1)
    {
      sub_1C22001C4(v90, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
      id v91 = 0;
    }
    else
    {
      v108 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 32);
      uint64_t v139 = v86;
      v109 = v85;
      id v110 = v88;
      char v111 = v87;
      uint64_t v112 = v127;
      v108(v127, v90, v77);
      uint64_t v113 = self;
      v114 = (void *)sub_1C254CB00();
      id v91 = objc_msgSend(v113, sel_predicateForRecordsFromClinicalAccountIdentifier_, v114);

      id v115 = v112;
      char v87 = v111;
      id v88 = v110;
      unint64_t v85 = v109;
      uint64_t v86 = v139;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v115, v77);
    }
    sub_1C2200144(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v116 = swift_allocObject();
    *(_OWORD *)(v116 + 16) = xmmword_1C255CEB0;
    unint64_t v101 = v135;
    *(void *)(v116 + 32) = v135;
    uint64_t v143 = (void *)v116;
    sub_1C254F730();
    uint64_t v117 = (uint64_t)v143;
    id v118 = objc_allocWithZone((Class)WDMedicalRecordDisplayItemProvider);
    uint64_t v119 = v141;
    swift_bridgeObjectRetain();
    id v120 = v101;
    id v121 = sub_1C21FD558(v88, v85, v86, v87, v134, (uint64_t)v140, v91, v119, v117, (SEL *)&selRef_initWithProfile_ontologyConcept_preloadedRemovedRecords_removedRecordsOnly_displayItemOptions_sampleTypes_filter_additionalPredicates_sortDescriptors_);
    unint64_t v107 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider);
    *(void *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider) = v121;
  }

  return swift_bridgeObjectRelease();
}

id sub_1C21FAF84()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_additionalPredicatesPerSampleType);
  if (v1)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      unint64_t v2 = sub_1C25502A0();
    }
    else {
      unint64_t v2 = *(void *)(v1 + 16);
    }
    uint64_t v7 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return (id)v7;
    }
    uint64_t v33 = MEMORY[0x1E4FBC860];
    sub_1C2550490();
    uint64_t v30 = sub_1C24BBA64(v1);
    uint64_t v31 = v8;
    char v32 = v9 & 1;
    if ((v2 & 0x8000000000000000) == 0)
    {
      do
      {
        while (1)
        {
          uint64_t v16 = v30;
          uint64_t v17 = v31;
          char v18 = v32;
          sub_1C241DFCC(v29, v30, v31, v32, v1);

          sub_1C2550460();
          sub_1C25504A0();
          sub_1C25504B0();
          id result = (id)sub_1C2550470();
          if ((v1 & 0xC000000000000001) != 0) {
            break;
          }
          sub_1C21FD790(v16, v17, v18, v1);
          uint64_t v11 = v10;
          uint64_t v13 = v12;
          char v15 = v14;
          sub_1C220012C(v16, v17, v18);
          uint64_t v30 = v11;
          uint64_t v31 = v13;
          char v32 = v15 & 1;
          if (!--v2) {
            goto LABEL_18;
          }
        }
        if ((v18 & 1) == 0) {
          goto LABEL_38;
        }
        if (sub_1C2550540()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_1C2200018();
        uint64_t v20 = (void (*)(id *, void))sub_1C254F310();
        sub_1C25505D0();
        v20(v29, 0);
        --v2;
      }
      while (v2);
LABEL_18:
      sub_1C220012C(v30, v31, v32);
      return (id)v33;
    }
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR___HRMedicalRecordTimelineViewController_category);
  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_sampleTypes);
    if (v4)
    {

      id v5 = objc_msgSend(v3, sel_sampleTypes);
      if (!v5) {
        return 0;
      }
      uint64_t v6 = v5;
      sub_1C21AB51C(0, &qword_1EBB6FF78);
      uint64_t v7 = sub_1C254F710();

      return (id)v7;
    }
  }
  id result = objc_msgSend(self, sel_allSupportedSampleTypes);
  if (result)
  {
    uint64_t v21 = result;
    sub_1C21AB51C(0, &qword_1EBB6FF78);
    unint64_t v2 = sub_1C254F710();

    v29[0] = (id)MEMORY[0x1E4FBC860];
    if (!(v2 >> 62))
    {
      uint64_t v22 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v22)
      {
LABEL_35:
        swift_bridgeObjectRelease();
        return (id)MEMORY[0x1E4FBC860];
      }
      goto LABEL_22;
    }
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v22) {
      goto LABEL_35;
    }
LABEL_22:
    id result = self;
    if (v22 >= 1)
    {
      unint64_t v23 = result;
      for (uint64_t i = 0; i != v22; ++i)
      {
        if ((v2 & 0xC000000000000001) != 0) {
          id v25 = (id)MEMORY[0x1C87588E0](i, v2);
        }
        else {
          id v25 = *(id *)(v2 + 8 * i + 32);
        }
        uint64_t v26 = v25;
        id v27 = objc_msgSend(v23, sel_unknownRecordType, v29[0]);
        char v28 = sub_1C254FF70();

        if (v28)
        {
        }
        else
        {
          sub_1C2550460();
          sub_1C25504A0();
          sub_1C25504B0();
          sub_1C2550470();
        }
      }
      swift_bridgeObjectRelease();
      return v29[0];
    }
    __break(1u);
LABEL_38:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1C21FB398()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_conceptIdentifier];
  if (v1)
  {
    id v7 = v1;
    if (objc_msgSend(v7, sel_isInMemory))
    {
      id v2 = objc_msgSend(v0, sel_navigationController);
      if (v2)
      {
        uint64_t v3 = v2;
      }
    }
    else
    {
      id v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_profile], sel_conceptStore);
      uint64_t v5 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_1C21FFEC4;
      aBlock[5] = v5;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C23CC220;
      aBlock[3] = &block_descriptor_100;
      uint64_t v6 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v4, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, v7, 1, v6);
      _Block_release(v6);
    }
  }
}

uint64_t sub_1C21FB538(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254F1C0();
  uint64_t v19 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C254F200();
  uint64_t v9 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v12 = (void *)sub_1C254FC70();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a2;
  v13[4] = a1;
  aBlock[4] = sub_1C21FFF14;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_106;
  char v14 = _Block_copy(aBlock);
  swift_retain();
  id v15 = a2;
  id v16 = a1;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C2200960((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C21AB558(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

void sub_1C21FB840(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v25 - v7;
  swift_beginAccess();
  uint64_t v9 = (char *)MEMORY[0x1C875A200](a1 + 16);
  if (v9)
  {
    uint64_t v10 = v9;
    if (a2 || !a3)
    {
      id v23 = objc_msgSend(v9, sel_navigationController);
      if (v23)
      {
        uint64_t v24 = v23;
      }
    }
    else
    {
      uint64_t v11 = OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept;
      uint64_t v12 = *(void **)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept];
      *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept] = a3;
      id v13 = a3;

      sub_1C21F4914((uint64_t)&v10[OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId], (uint64_t)v8);
      uint64_t v14 = sub_1C254CB40();
      LOBYTE(v12) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v8, 1, v14) != 1;
      sub_1C22001C4((uint64_t)v8, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
      id v15 = *(void **)&v10[OBJC_IVAR___HRMedicalRecordTimelineViewController_conceptIdentifier];
      id v16 = *(void **)&v10[v11];
      uint64_t v17 = *(void **)&v10[OBJC_IVAR___HRMedicalRecordTimelineViewController_category];
      char v18 = v10[OBJC_IVAR___HRMedicalRecordTimelineViewController_isDisplayingRemovedRecords];
      v27[0] = (char)v12;
      char v28 = v15;
      unint64_t v29 = v16;
      uint64_t v30 = v17;
      char v31 = v18;
      id v19 = v17;
      id v20 = v15;
      id v21 = v16;
      sub_1C21FDC3C((uint64_t)v27);

      sub_1C21F3CF4();
      swift_retain();
      swift_release();
      id v26 = a3;
      sub_1C254EA70();
      swift_release();
      sub_1C21FA264();
      sub_1C21F3CF4();
      swift_retain();
      swift_release();
      id v26 = *(id *)&v10[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider];
      id v22 = v26;
      sub_1C254EA70();

      swift_release();
    }
  }
}

void sub_1C21FBB2C(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1C254CB40();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  id v6 = sub_1C21F3A34();
  uint64_t v7 = (void *)sub_1C254CB00();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v10 + v9, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  *(void *)(v10 + ((v5 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
  aBlock[4] = sub_1C21FFBB8;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23447F8;
  aBlock[3] = &block_descriptor_6;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v6, sel_fetchAccountWithIdentifier_completion_, v7, v11);
  _Block_release(v11);
}

uint64_t sub_1C21FBD3C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a2;
  uint64_t v26 = a5;
  uint64_t v29 = sub_1C254F1C0();
  uint64_t v32 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  char v28 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254F200();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C254CB40();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v12);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v27 = sub_1C254FC70();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v12);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  id v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = a3;
  *((void *)v16 + 3) = a1;
  uint64_t v17 = v25;
  *((void *)v16 + 4) = v25;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v16[v15], (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  *(void *)&v16[(v14 + v15 + 7) & 0xFFFFFFFFFFFFFFF8] = v26;
  aBlock[4] = sub_1C21FFD58;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_96;
  char v18 = _Block_copy(aBlock);
  swift_retain();
  id v19 = a1;
  id v20 = v17;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C2200960((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C21AB558(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  id v22 = v28;
  uint64_t v21 = v29;
  sub_1C2550200();
  id v23 = (void *)v27;
  MEMORY[0x1C87581B0](0, v11, v22, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v11, v31);
}

void sub_1C21FC128(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1C254CB40();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v36[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_1C254E560();
  uint64_t v41 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v16 = &v36[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x1C875A200](a1 + 16);
  if (v17)
  {
    char v18 = (void *)v17;
    uint64_t v40 = v14;
    id v19 = a2;
    sub_1C21FDAA8(a2);

    if (a3)
    {
      id v20 = a3;
      sub_1C254E510();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
      id v21 = a3;
      id v22 = a3;
      id v23 = sub_1C254E550();
      os_log_type_t v24 = sub_1C254FA20();
      int v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        uint64_t v42 = v39;
        *(_DWORD *)uint64_t v26 = 136315650;
        os_log_t v38 = v23;
        uint64_t v43 = a5;
        swift_getMetatypeMetadata();
        int v37 = v25;
        uint64_t v27 = sub_1C254F4F0();
        uint64_t v43 = sub_1C21AD354(v27, v28, &v42);
        sub_1C2550120();
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2080;
        sub_1C2200960((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
        uint64_t v29 = sub_1C2550810();
        uint64_t v43 = sub_1C21AD354(v29, v30, &v42);
        sub_1C2550120();
        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
        *(_WORD *)(v26 + 22) = 2080;
        uint64_t v43 = (uint64_t)a3;
        id v31 = a3;
        sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
        uint64_t v32 = sub_1C254F4F0();
        uint64_t v43 = sub_1C21AD354(v32, v33, &v42);
        sub_1C2550120();
        swift_bridgeObjectRelease();

        os_log_t v34 = v38;
        _os_log_impl(&dword_1C21A1000, v38, (os_log_type_t)v37, "%s: failed to fetch account %s: %s", (uint8_t *)v26, 0x20u);
        uint64_t v35 = v39;
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v35, -1, -1);
        MEMORY[0x1C875A0B0](v26, -1, -1);
      }
      else
      {

        (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
      }
      (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v16, v40);
    }
    else
    {
    }
  }
}

void sub_1C21FC584()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void (***)(char *, uint64_t))(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_navigationController);
  id v7 = objc_msgSend(v6, sel_topViewController);

  if (v7)
  {
    sub_1C21AB51C(0, &qword_1EA2DE3F0);
    id v8 = v1;
    id v9 = v7;
    char v10 = sub_1C254FF70();

    if (v10)
    {
      uint64_t v11 = (void (**)(char *, uint64_t))objc_msgSend(v8, sel_navigationController);
      if (!v11) {
        return;
      }
      uint64_t v36 = v11;

      goto LABEL_17;
    }
  }
  id v12 = objc_msgSend(v1, sel_navigationController);
  if (!v12) {
    return;
  }
  uint64_t v13 = v12;
  id v14 = objc_msgSend(v12, sel_viewControllers);
  sub_1C21AB51C(0, &qword_1EA2DE3F0);
  unint64_t v15 = sub_1C254F710();

  sub_1C252EBF4((uint64_t)v1, v15);
  uint64_t v17 = v16;
  LOBYTE(v14) = v18;
  swift_bridgeObjectRelease();
  if (v14) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = v17;
  }
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v17 = v21 & ~(v21 >> 63);
  id v22 = objc_msgSend(v13, sel_viewControllers);
  unint64_t v23 = sub_1C254F710();

  if (v23 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C2550620();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_12:
  swift_bridgeObjectRelease();
  if (v17 >= v24)
  {
    sub_1C254E510();
    uint64_t v29 = sub_1C254E550();
    os_log_type_t v30 = sub_1C254FA00();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v36 = v3;
      id v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v38 = v32;
      *(_DWORD *)id v31 = 136446210;
      uint64_t v33 = sub_1C2550AA0();
      uint64_t v37 = sub_1C21AD354(v33, v34, &v38);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v29, v30, "%{public}s tried popping myself from navigation stack but couldn't find me", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v32, -1, -1);
      MEMORY[0x1C875A0B0](v31, -1, -1);

      v36[1](v5, v2);
    }
    else
    {

      v3[1](v5, v2);
    }
    return;
  }
  id v25 = objc_msgSend(v13, sel_viewControllers);
  uint64_t v26 = sub_1C254F710();

  if ((v26 & 0xC000000000000001) != 0)
  {
    uint64_t v27 = (void (**)(char *, uint64_t))MEMORY[0x1C87588E0](v17, v26);
  }
  else
  {
    if ((unint64_t)v17 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    uint64_t v27 = (void (**)(char *, uint64_t))*(id *)(v26 + 8 * v17 + 32);
  }
  uint64_t v36 = v27;
  swift_bridgeObjectRelease();

LABEL_17:
  unint64_t v28 = v36;
}

void sub_1C21FCB18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  id v6 = (char *)qword_1EBB6E968;
  id v7 = *(void **)(v3 + OBJC_IVAR___HRMedicalRecordTimelineViewController_category);
  id v8 = *(void **)(v3 + OBJC_IVAR___HRMedicalRecordTimelineViewController_conceptIdentifier);
  if (v7)
  {
    sub_1C21AA50C(v7, (uint64_t)&aBlock);
    char v9 = aBlock;
    char v10 = (void *)v17;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_5:
      uint64_t v11 = *(void **)&v6[OBJC_IVAR___CHRAnalyticsManager_conceptStore];
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v6;
      *(void *)(v12 + 24) = a1;
      *(void *)(v12 + 32) = a2;
      *(void *)(v12 + 40) = 0;
      *(unsigned char *)(v12 + 48) = v9;
      BOOL v20 = sub_1C22003F0;
      uint64_t v21 = v12;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v17 = 1107296256;
      char v18 = sub_1C23CC220;
      uint64_t v19 = &block_descriptor_137;
      uint64_t v13 = _Block_copy(&aBlock);
      id v14 = v8;
      unint64_t v15 = v6;
      swift_release();
      objc_msgSend(v11, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, v14, 0, v13);
      _Block_release(v13);

      return;
    }
  }
  else
  {
    char v9 = 11;
    if (v8) {
      goto LABEL_5;
    }
  }
  LOBYTE(aBlock) = v9;
  sub_1C23CD65C(a1, a2, 0, (char *)&aBlock, 0);
}

id MedicalRecordTimelineViewController.__allocating_init(collectionViewLayout:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCollectionViewLayout_, a1);

  return v3;
}

void MedicalRecordTimelineViewController.init(collectionViewLayout:)()
{
}

id MedicalRecordTimelineViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    id v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void MedicalRecordTimelineViewController.init(nibName:bundle:)()
{
}

void MedicalRecordTimelineViewController.didUpdateVisibleValueRange(_:changeContext:)(uint64_t a1, uint64_t a2)
{
  if (a2 == 1) {
    sub_1C21FCB18(3, 18);
  }
}

void MedicalRecordTimelineViewController.didUpdateSeries(withNewValueRange:)(uint64_t a1)
{
  if (!a1)
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_chartLoaded) == 1) {
      sub_1C21FCB18(3, 18);
    }
    else {
      *(unsigned char *)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_chartLoaded) = 1;
    }
  }
}

void MedicalRecordTimelineViewController.configureDisplayTypes(_:timeScope:stackOffset:)()
{
}

uint64_t MedicalRecordTimelineViewController.ingestionStateDidUpdate(clinicalIngestionStore:state:)(uint64_t a1, uint64_t a2)
{
  return sub_1C21FE930(a2);
}

char *sub_1C21FD034(char *result, uint64_t a2)
{
  uint64_t v2 = result;
  id v3 = &result[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState];
  uint64_t v4 = *(void *)&result[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState];
  char v5 = result[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState + 8];
  *(void *)id v3 = a2;
  v3[8] = 0;
  if ((v5 & 1) != 0 || v4 != a2)
  {
    id result = (char *)sub_1C21F91D8(0);
    if ((v3[8] & 1) == 0 && *(void *)v3 == 1)
    {
      objc_msgSend(self, sel_cancelPreviousPerformRequestsWithTarget_selector_object_, v2, sel_reloadData, 0);
      return (char *)objc_msgSend(v2, sel_performSelector_withObject_afterDelay_, sel_reloadData, 0, 1.25);
    }
  }
  return result;
}

uint64_t MedicalRecordTimelineViewController.cloudSyncObserver(_:syncDidStartWith:)(uint64_t a1, void *a2)
{
  return sub_1C21FEC1C(a2);
}

uint64_t sub_1C21FD174(unsigned char *a1, id a2)
{
  uint64_t result = (uint64_t)objc_msgSend(a2, sel_isFinished);
  uint64_t v4 = OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive;
  int v5 = a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive];
  a1[OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive] = result ^ 1;
  if (result == v5)
  {
    uint64_t result = (uint64_t)sub_1C21F91D8(0);
    if (a1[v4] != 1)
    {
      objc_msgSend(self, sel_cancelPreviousPerformRequestsWithTarget_selector_object_, a1, sel_reloadData, 0);
      return (uint64_t)objc_msgSend(a1, sel_performSelector_withObject_afterDelay_, sel_reloadData, 0, 1.25);
    }
  }
  return result;
}

uint64_t MedicalRecordTimelineViewController.cloudSyncObserver(_:syncFailedWithError:)()
{
  return sub_1C21FEF0C((uint64_t)&unk_1F1D8FE48, (uint64_t)sub_1C22009DC, (uint64_t)&block_descriptor_119);
}

uint64_t MedicalRecordTimelineViewController.cloudSyncObserverSyncCompleted(_:)()
{
  return sub_1C21FEF0C((uint64_t)&unk_1F1D8FDF8, (uint64_t)sub_1C2200314, (uint64_t)&block_descriptor_113);
}

unsigned char *sub_1C21FD3B8(unsigned char *result)
{
  uint64_t v1 = OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive;
  int v2 = result[OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive];
  result[OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive] = 0;
  if (v2 == 1)
  {
    id v3 = result;
    uint64_t result = sub_1C21F91D8(0);
    if (*((unsigned char *)v3 + v1) != 1)
    {
      objc_msgSend(self, sel_cancelPreviousPerformRequestsWithTarget_selector_object_, v3, sel_reloadData, 0);
      return objc_msgSend(v3, sel_performSelector_withObject_afterDelay_, sel_reloadData, 0, 1.25);
    }
  }
  return result;
}

void sub_1C21FD4EC()
{
  if (!qword_1EA2E3980)
  {
    sub_1C254CB40();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E3980);
    }
  }
}

id sub_1C21FD558(void *a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, SEL *a10)
{
  if (a3)
  {
    sub_1C21AB51C(0, &qword_1EBB6F978);
    unint64_t v23 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    if (a6)
    {
LABEL_3:
      sub_1C21AB51C(0, &qword_1EBB6FF78);
      char v18 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    unint64_t v23 = 0;
    if (a6) {
      goto LABEL_3;
    }
  }
  char v18 = 0;
LABEL_6:
  if (!a8)
  {
    uint64_t v19 = 0;
    if (a9) {
      goto LABEL_8;
    }
LABEL_10:
    BOOL v20 = 0;
    goto LABEL_11;
  }
  sub_1C21AB51C(0, &qword_1EBB6FF78);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  sub_1C22000E8((unint64_t *)&qword_1EBB6FF80, &qword_1EBB6FF78);
  uint64_t v19 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  if (!a9) {
    goto LABEL_10;
  }
LABEL_8:
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  BOOL v20 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
LABEL_11:
  id v21 = objc_msgSend(v10, *a10, a1, a2, v23, a4 & 1, a5, v18, a7, v19, v20);

  return v21;
}

void sub_1C21FD790(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || -(-1 << *(unsigned char *)(a4 + 32)) <= a1)
    {
      __break(1u);
    }
    else if ((*(void *)(a4 + 64 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a1))
    {
      if (*(_DWORD *)(a4 + 36) == a2)
      {
        sub_1C2550220();
        return;
      }
      goto LABEL_12;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (sub_1C2550550() != *(_DWORD *)(a4 + 36))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1C2550560();
  sub_1C2200138(a1, a2, 1);
  sub_1C21AB51C(0, &qword_1EBB6FF78);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
  sub_1C245733C((uint64_t)v8);
  char v7 = v6;

  if (v7)
  {
    sub_1C2550530();
    sub_1C2550580();
    sub_1C220012C(a1, a2, 1);
    swift_unknownObjectRelease();
    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_1C21FD930(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if ((*a1 ^ *a2)) {
    goto LABEL_2;
  }
  char v6 = (void *)*((void *)a1 + 1);
  char v7 = (void *)*((void *)a2 + 1);
  if (v6)
  {
    if (!v7) {
      goto LABEL_2;
    }
    sub_1C21AB51C(0, (unint64_t *)&unk_1EA2DE380);
    id v8 = v7;
    id v9 = v6;
    char v10 = sub_1C254FF70();

    if ((v10 & 1) == 0) {
      goto LABEL_2;
    }
  }
  else if (v7)
  {
    goto LABEL_2;
  }
  uint64_t v11 = (void *)*((void *)a1 + 2);
  uint64_t v12 = (void *)*((void *)a2 + 2);
  if (v11)
  {
    if (!v12) {
      goto LABEL_2;
    }
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE378);
    id v13 = v12;
    id v14 = v11;
    char v15 = sub_1C254FF70();

    if ((v15 & 1) == 0) {
      goto LABEL_2;
    }
  }
  else if (v12)
  {
    goto LABEL_2;
  }
  uint64_t v16 = (void *)*((void *)a1 + 3);
  uint64_t v17 = (void *)*((void *)a2 + 3);
  if (v16)
  {
    if (v17)
    {
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FFC0);
      id v18 = v17;
      id v19 = v16;
      char v20 = sub_1C254FF70();

      if (v20) {
        goto LABEL_19;
      }
    }
  }
  else if (!v17)
  {
LABEL_19:
    char v2 = ((a1[32] & 1) == 0) ^ a2[32];
    return v2 & 1;
  }
LABEL_2:
  char v2 = 0;
  return v2 & 1;
}

uint64_t sub_1C21FDAA8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254F230();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (uint64_t *)((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = OBJC_IVAR___HRMedicalRecordTimelineViewController_account;
  id v9 = *(void **)(v2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_account);
  *(void *)(v2 + OBJC_IVAR___HRMedicalRecordTimelineViewController_account) = a1;
  id v10 = a1;

  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t *v7 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  LOBYTE(a1) = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (a1)
  {
    sub_1C21F3CF4();
    swift_retain();
    swift_release();
    id v14 = *(id *)(v2 + v8);
    id v12 = v14;
    sub_1C254EA70();

    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C21FDC3C(uint64_t a1)
{
  sub_1C21FFF78(a1 + 8, (uint64_t)&v16, (uint64_t)&qword_1EA2DE390, (uint64_t)&unk_1EA2DE380, 0x1E4F2ADE8, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C21FFF20);
  sub_1C21FFF78(a1 + 16, (uint64_t)&v15, (uint64_t)&qword_1EA2DE398, (uint64_t)&qword_1EA2DE378, 0x1E4F2ADD8, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C21FFF20);
  sub_1C21FFF78(a1 + 24, (uint64_t)&v14, (uint64_t)&unk_1EA2DE3A0, (uint64_t)&qword_1EBB6FFC0, (uint64_t)off_1E644A2C0, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C21FFF20);
  uint64_t v3 = v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState + 8);
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState + 16);
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState + 24);
  *(unsigned char *)(v3 + 32) = *(unsigned char *)(a1 + 32);
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v7;
  sub_1C21FFFEC(&v16);
  sub_1C21FFFEC(&v15);
  sub_1C21FFFEC(&v14);

  sub_1C21F3CF4();
  swift_retain();
  swift_release();
  uint64_t v8 = *(void **)(v3 + 8);
  id v9 = *(void **)(v3 + 16);
  id v10 = *(id *)(v3 + 24);
  id v11 = v8;
  id v12 = v9;
  sub_1C254EA70();

  return swift_release();
}

char *sub_1C21FDDB8(void *a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, void *a7, unsigned int (*a8)(uint64_t, uint64_t, uint64_t), unsigned __int8 a9)
{
  BOOL v72 = a8;
  uint64_t v69 = a5;
  uint64_t v70 = a7;
  uint64_t v66 = a6;
  LODWORD(v71) = a9;
  sub_1C21AB558(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v73 = (char *)&v63 - v15;
  uint64_t v68 = sub_1C254CB40();
  uint64_t v16 = *(void *)(v68 - 8);
  MEMORY[0x1F4188790](v68);
  BOOL v63 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = &v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle];
  *id v18 = 0;
  v18[1] = 0;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider] = 0;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_observer] = 0;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_account] = 0;
  uint64_t v19 = OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept] = 0;
  v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_chartLoaded] = 0;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___contentStatusView] = 0;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___clinicalAccountStore] = 0;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataProvider] = 0;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___accountStateProvider] = 0;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSourceProvider] = 0;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSource] = 0;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncObserver] = 0;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_queryReturnedCancellable] = 0;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_accountStateCancellable] = 0;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionStateCancellable] = 0;
  *(void *)&v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerStateCancellable] = 0;
  char v20 = &v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState];
  *(void *)char v20 = 0;
  v20[8] = 1;
  id v21 = &v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerState];
  *(void *)id v21 = 0;
  v21[8] = 1;
  id v22 = &v9[OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientView];
  sub_1C254D800();
  id v23 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v24 = v9;
  id v25 = objc_msgSend(v23, sel_init);
  uint64_t v26 = MEMORY[0x1E4F66430];
  *id v22 = v25;
  v22[1] = v26;
  v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_showGradientBackgroundForAllRecordsRoom] = 0;
  *(void *)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientSubscriber] = 0;
  *(void *)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_profile] = a1;
  *(void *)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_category] = a2;
  uint64_t v67 = a3;
  sub_1C21F4914(a3, (uint64_t)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_accountId]);
  *(void *)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_conceptIdentifier] = a4;
  uint64_t v27 = v69;
  *(void *)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_userDomainConcept] = v69;
  *(void *)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_additionalPredicatesPerSampleType] = v72;
  unint64_t v28 = v70;
  LOBYTE(v23) = v70 != 0;
  v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_isDisplayingRemovedRecords] = v70 != 0;
  v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_showExportButton] = v71;
  v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncActive] = 0;
  *(void *)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_preloadedRemovedRecords] = v28;
  uint64_t v64 = v16;
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  uint64_t v71 = v16 + 48;
  BOOL v72 = v29;
  uint64_t v30 = a3;
  uint64_t v31 = v68;
  BOOL v32 = v29(v30, 1, v68) != 1;
  uint64_t v33 = *(void **)&v9[v19];
  unint64_t v34 = &v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayState];
  *unint64_t v34 = v32;
  *((void *)v34 + 1) = a4;
  *((void *)v34 + 2) = v33;
  *((void *)v34 + 3) = a2;
  v34[32] = (char)v23;
  uint64_t v35 = self;
  id v36 = v33;
  id v37 = a2;
  uint64_t v70 = a4;
  id v38 = a4;
  uint64_t v39 = v31;
  id v65 = v38;
  id v40 = v37;
  id v41 = a1;
  id v42 = v27;
  uint64_t v43 = v67;
  id v44 = objc_msgSend(v35, sel_clearColor);
  uint64_t v76 = sub_1C254DD80();
  uint64_t v77 = MEMORY[0x1E4F665A0];
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v75);
  sub_1C254DD70();
  sub_1C21F44EC(&v75, (uint64_t)&v24[OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientColorProvider]);

  id v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB15C0]), sel_init);
  id v46 = (objc_class *)type metadata accessor for MedicalRecordTimelineViewController();
  v74.receiver = v24;
  v74.super_class = v46;
  id v47 = objc_msgSendSuper2(&v74, sel_initWithCollectionViewLayout_, v45);

  char v48 = (char *)v47;
  sub_1C21F3B20();
  swift_retain();
  swift_release();
  sub_1C254EA80();
  swift_release();
  char v49 = BYTE8(v75);
  id v50 = &v48[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState];
  *(void *)id v50 = v75;
  v50[8] = v49;
  sub_1C21F3B20();
  swift_retain();
  uint64_t v51 = (uint64_t)v73;
  swift_release();
  sub_1C254EA80();
  swift_release();
  uint64_t v52 = v75;
  char v53 = BYTE8(v75);
  if ((unint64_t)v75 <= 1) {
    uint64_t v54 = 1;
  }
  else {
    uint64_t v54 = v75;
  }
  if (!BYTE8(v75)) {
    uint64_t v52 = v54;
  }
  uint64_t v55 = &v48[OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerState];
  *(void *)uint64_t v55 = v52;
  v55[8] = v53;
  sub_1C21F4914(v43, v51);
  if (v72(v51, 1, v31) == 1)
  {
    sub_1C22001C4(v51, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
  }
  else
  {
    id v56 = v42;
    uint64_t v58 = (uint64_t)v63;
    uint64_t v57 = v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v63, v51, v39);
    sub_1C21FBB2C(v58);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v58, v39);
    id v42 = v56;
  }
  uint64_t v59 = v66;
  if (v70)
  {
    sub_1C21FB398();

    id v40 = v65;
  }
  else
  {
    sub_1C21FA264();
  }

  uint64_t v60 = MEMORY[0x1E4F27990];
  uint64_t v61 = MEMORY[0x1E4FBB718];
  sub_1C22001C4(v59, (uint64_t)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21AB558);
  sub_1C22001C4(v43, (uint64_t)&qword_1EA2DEFF0, v60, v61, (uint64_t (*)(void))sub_1C21AB558);
  return v48;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t type metadata accessor for MedicalRecordTimelineViewController()
{
  uint64_t result = qword_1EA2DE298;
  if (!qword_1EA2DE298) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for DataSourceObserver()
{
  return self;
}

void sub_1C21FE544()
{
  uint64_t v1 = &v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle];
  *uint64_t v1 = 0;
  v1[1] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_displayItemProvider] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_observer] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_account] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_ontologyConcept] = 0;
  v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_chartLoaded] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___contentStatusView] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___clinicalAccountStore] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataProvider] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___accountStateProvider] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSourceProvider] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController____lazy_storage___dataSource] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_cloudSyncObserver] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_queryReturnedCancellable] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_accountStateCancellable] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionStateCancellable] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerStateCancellable] = 0;
  uint64_t v2 = &v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
  uint64_t v3 = &v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerState];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;
  uint64_t v4 = &v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientView];
  sub_1C254D800();
  id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v6 = MEMORY[0x1E4F66430];
  *uint64_t v4 = v5;
  v4[1] = v6;
  v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_showGradientBackgroundForAllRecordsRoom] = 0;
  *(void *)&v0[OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientSubscriber] = 0;

  sub_1C25505F0();
  __break(1u);
}

uint64_t sub_1C21FE6F0()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (!v1) {
    return 0;
  }
  uint64_t v2 = sub_1C254F470();
  uint64_t v4 = v3;

  if (v2 == 0xD000000000000015 && v4 == 0x80000001C2574D20)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
}

unint64_t sub_1C21FE7D8()
{
  unint64_t result = qword_1EA2E3580;
  if (!qword_1EA2E3580)
  {
    sub_1C21FFE74(255, &qword_1EA2DE1C0);
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E3580);
  }
  return result;
}

uint64_t sub_1C21FE824()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C21FE834(void *a1)
{
}

void sub_1C21FE83C()
{
  if (!qword_1EA2DE1D8)
  {
    sub_1C21AB558(255, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DE1D8);
    }
  }
}

uint64_t sub_1C21FE8D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C21FE930(uint64_t a1)
{
  uint64_t v3 = sub_1C254F1C0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254F200();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v11 = (void *)sub_1C254FC70();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v1;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_1C22003B0;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_131;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v1;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C2200960((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C21AB558(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C21FEC1C(void *a1)
{
  uint64_t v3 = sub_1C254F1C0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C254F200();
  uint64_t v7 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v10 = (void *)sub_1C254FC70();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_1C2200370;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_125;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = v1;
  id v14 = a1;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C2200960((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C21AB558(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v9, v6, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v17);
}

uint64_t sub_1C21FEF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = a3;
  uint64_t v5 = sub_1C254F1C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C254F200();
  uint64_t v9 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v12 = (void *)sub_1C254FC70();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v3;
  aBlock[4] = a2;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = v17;
  id v14 = _Block_copy(aBlock);
  id v15 = v3;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C2200960((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C21AB558(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

uint64_t sub_1C21FF1E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

id sub_1C21FF244@<X0>(void *a1@<X0>, long long *a2@<X8>)
{
  uint64_t v3 = (long long *)(*a1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientView);
  swift_beginAccess();
  long long v4 = *v3;
  *a2 = *v3;
  return (id)v4;
}

uint64_t sub_1C21FF2B0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientSubscriber);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_1C21FF30C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR___HRMedicalRecordTimelineViewController_gradientColorProvider;
  swift_beginAccess();
  return sub_1C21F4424(v3, a2);
}

uint64_t sub_1C21FF368()
{
  return type metadata accessor for MedicalRecordTimelineViewController();
}

void sub_1C21FF370()
{
  sub_1C21AB558(319, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedicalRecordTimelineViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineViewController);
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.overrideTitle.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.overrideTitle.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.overrideTitle.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientView.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x358))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientView.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x360))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientView.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x368))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientSubscriber.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x388))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientSubscriber.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x390))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientSubscriber.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x398))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientColorProvider.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3A0))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientColorProvider.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3A8))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.gradientColorProvider.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3B0))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.sidebarSelectionIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3B8))();
}

uint64_t dispatch thunk of MedicalRecordTimelineViewController.__allocating_init(profile:category:accountId:conceptIdentifier:userDomainConcept:highlightedRecordId:displayingRemovedRecords:preloadedRemovedRecords:predicatePerSampleType:showExportButton:)()
{
  return (*(uint64_t (**)(void))(v0 + 960))();
}

void destroy for MedicalRecordTimelineViewController.DisplayState(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
}

uint64_t initializeWithCopy for MedicalRecordTimelineViewController.DisplayState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void **)(a2 + 8);
  long long v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

uint64_t assignWithCopy for MedicalRecordTimelineViewController.DisplayState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v4 = *(void **)(a1 + 8);
  uint64_t v5 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v5;
  id v6 = v5;

  id v7 = *(void **)(a1 + 16);
  id v8 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v8;
  id v9 = v8;

  uint64_t v10 = *(void **)(a1 + 24);
  uint64_t v11 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v11;
  id v12 = v11;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MedicalRecordTimelineViewController.DisplayState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;

  long long v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicalRecordTimelineViewController.DisplayState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicalRecordTimelineViewController.DisplayState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicalRecordTimelineViewController.DisplayState()
{
  return &type metadata for MedicalRecordTimelineViewController.DisplayState;
}

unint64_t sub_1C21FFA54()
{
  unint64_t result = qword_1EA2DE368;
  if (!qword_1EA2DE368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DE368);
  }
  return result;
}

uint64_t sub_1C21FFAA8()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C21FFAE0()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C21FFBB8(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_1C254CB40() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C21FBD3C(a1, a2, v7, v2 + v6, v8);
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_1C21FFC70()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1C21FFD58()
{
  uint64_t v1 = *(void *)(sub_1C254CB40() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0[2];
  uint64_t v4 = (void *)v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v6 = *(void *)((char *)v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1C21FC128(v3, v4, v5, (uint64_t)v0 + v2, v6);
}

unint64_t sub_1C21FFDEC()
{
  unint64_t result = qword_1EBB6FF40;
  if (!qword_1EBB6FF40)
  {
    sub_1C21AB558(255, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6FF40);
  }
  return result;
}

uint64_t sub_1C21FFE74(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1C21FFEC4(void *a1, void *a2)
{
  return sub_1C21FB538(a1, a2, v2);
}

uint64_t sub_1C21FFECC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C21FFF14()
{
  sub_1C21FB840(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1C21FFF20(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C21AB51C(255, a3);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C21FFF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

id *sub_1C21FFFEC(id *a1)
{
  id v2 = *a1;
  return a1;
}

void sub_1C2200018()
{
  if (!qword_1EA2DE3B0)
  {
    sub_1C21AB51C(255, &qword_1EBB6FF78);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF60);
    sub_1C22000E8((unint64_t *)&qword_1EBB6FF80, &qword_1EBB6FF78);
    unint64_t v0 = sub_1C254F320();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE3B0);
    }
  }
}

uint64_t sub_1C22000E8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C21AB51C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C220012C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2200138(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1C2200144(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C2200190()
{
  return sub_1C2200960((unint64_t *)&unk_1EA2DE3C8, (void (*)(uint64_t))sub_1C21A842C);
}

uint64_t sub_1C22001C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_1C2200224(uint64_t a1)
{
  sub_1C21F6FEC(a1, v1);
}

void sub_1C220022C(void *a1, void *a2)
{
  if (a1)
  {
  }
}

void sub_1C220026C(void *a1@<X8>)
{
  sub_1C253EAA8(*(void **)(v1 + 24), a1);
}

void sub_1C2200274()
{
  if (!qword_1EA2DE3E8)
  {
    unint64_t v0 = sub_1C254E8B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE3E8);
    }
  }
}

uint64_t sub_1C22002DC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

unsigned char *sub_1C2200314()
{
  return sub_1C21FD3B8(*(unsigned char **)(v0 + 16));
}

uint64_t sub_1C2200330()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2200370()
{
  return sub_1C21FD174(*(unsigned char **)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_1C2200378()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

char *sub_1C22003B0()
{
  return sub_1C21FD034(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C22003B8()
{
  return MEMORY[0x1F4186498](v0, 49, 7);
}

void sub_1C22003F0(void *a1, uint64_t a2)
{
  sub_1C23CD3FC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned char *)(v2 + 48));
}

void sub_1C2200400()
{
  if (!qword_1EA2DE3F8)
  {
    sub_1C2200638(255, &qword_1EBB6F200, &qword_1EBB6F228, (uint64_t (*)(uint64_t))type metadata accessor for HKConceptIndexManagerState);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    sub_1C22006B4(&qword_1EA2DE400, &qword_1EBB6F200, &qword_1EBB6F228, (uint64_t (*)(uint64_t))type metadata accessor for HKConceptIndexManagerState);
    sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
    unint64_t v0 = sub_1C254E9B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE3F8);
    }
  }
}

void sub_1C220051C()
{
  if (!qword_1EA2DE408)
  {
    sub_1C2200638(255, (unint64_t *)&qword_1EBB6F1F0, (unint64_t *)&qword_1EBB6F208, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalIngestionState);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    sub_1C22006B4(&qword_1EA2DE410, (unint64_t *)&qword_1EBB6F1F0, (unint64_t *)&qword_1EBB6F208, (uint64_t (*)(uint64_t))type metadata accessor for HKClinicalIngestionState);
    sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
    unint64_t v0 = sub_1C254E9B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE408);
    }
  }
}

void sub_1C2200638(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C21AB558(255, a3, a4, MEMORY[0x1E4FBB718]);
    unint64_t v5 = sub_1C254EA90();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C22006B4(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2200638(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2200704(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    a4();
    sub_1C22000E8((unint64_t *)&qword_1EBB6F4B0, (unint64_t *)&qword_1EBB6FF90);
    unint64_t v6 = sub_1C254E9B0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C22007E0()
{
  if (!qword_1EBB6F410)
  {
    unint64_t v0 = sub_1C254EA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F410);
    }
  }
}

uint64_t sub_1C2200848()
{
  return sub_1C2200960(&qword_1EA2DE428, (void (*)(uint64_t))sub_1C22007E0);
}

void sub_1C220087C(uint64_t a1)
{
  sub_1C21F8BDC(a1, v1);
}

uint64_t sub_1C2200884(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2200704(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C22008D4(uint64_t *a1)
{
  sub_1C21F8C34(a1, v1, &OBJC_IVAR___HRMedicalRecordTimelineViewController_ingestionState);
}

void sub_1C22008F8(uint64_t *a1)
{
  sub_1C21F8C34(a1, v1, &OBJC_IVAR___HRMedicalRecordTimelineViewController_indexManagerState);
}

void *__swift_project_boxed_opaque_existential_1Tm(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_1C2200960(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2200A7C()
{
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for CategorySelectionViewController();
  objc_msgSendSuper2(&v11, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_tableView);
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v2 = v1;
  type metadata accessor for TextWithIconCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unint64_t v4 = (void *)sub_1C254F430();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v4);

  id v5 = objc_msgSend(v0, sel_tableView);
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v6 = v5;
  type metadata accessor for HeaderWithRightAlignedButton();
  uint64_t v7 = swift_getObjCClassFromMetadata();
  uint64_t v8 = (void *)sub_1C254F430();
  objc_msgSend(v6, sel_registerClass_forHeaderFooterViewReuseIdentifier_, v7, v8);

  id v9 = objc_msgSend(v0, sel_tableView);
  if (!v9)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v10 = v9;
  if (qword_1EA2DD430 != -1) {
    swift_once();
  }
  objc_msgSend(v10, sel_setSectionHeaderTopPadding_, *(double *)&qword_1EA2DE460);
}

char *sub_1C2200C78(void *a1, unint64_t a2)
{
  uint64_t v5 = v2;
  uint64_t v8 = (void *)sub_1C254F430();
  id v9 = (void *)sub_1C254CD30();
  id v10 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v8, v9);

  type metadata accessor for TextWithIconCell();
  objc_super v11 = (char *)swift_dynamicCastClassUnconditional();
  uint64_t v12 = *(void *)(v5 + OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_allCategories);
  uint64_t v13 = (void *)a2;
  unint64_t v14 = sub_1C254CD60();
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v14 >= *(void *)(v12 + 16))
  {
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t v3 = (uint64_t)sub_1C226BFC0(0, *(void *)(v3 + 16) + 1, 1, (void *)v3);
    goto LABEL_24;
  }
  uint64_t v15 = v12 + 72 * v14;
  long long v16 = *(_OWORD *)(v15 + 80);
  uint64_t v17 = *(void *)(v15 + 96);
  long long v18 = *(_OWORD *)(v15 + 48);
  v53[2] = *(_OWORD *)(v15 + 64);
  long long v19 = *(_OWORD *)(v15 + 32);
  uint64_t v54 = v17;
  v53[3] = v16;
  v53[0] = v19;
  v53[1] = v18;
  char v20 = (uint64_t *)(v5 + OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_selectedCategories);
  swift_beginAccess();
  uint64_t v21 = *v20;
  swift_bridgeObjectRetain();
  sub_1C2201A54((uint64_t)v53);
  sub_1C24F1A34((unsigned __int8 *)v53, v21);
  LOBYTE(v5) = v22;
  swift_bridgeObjectRelease();
  id v23 = sub_1C23C3528();
  uint64_t v24 = (void *)sub_1C254F430();
  objc_msgSend(v23, sel_setText_, v24);

  id v25 = sub_1C23C348C();
  objc_msgSend(v25, sel_setAccessibilityIgnoresInvertColors_, 1);

  unint64_t v26 = DisplayCategory.Kind.hkDisplayCategory.getter();
  if (v26)
  {
    uint64_t v27 = (void *)v26;
    id v28 = sub_1C23C348C();
    id v29 = objc_msgSend(v27, sel_systemImageName);
    sub_1C254F470();

    uint64_t v30 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(self, sel_systemImageNamed_, v30);

    if (v31)
    {
      id v32 = objc_msgSend(v27, sel_multiColorImageConfiguration);
      if (!v32) {
        id v32 = objc_msgSend(self, sel_configurationPreferringMulticolor);
      }
      id v33 = objc_msgSend(v31, sel_imageByApplyingSymbolConfiguration_, v32);
    }
    else
    {
      id v33 = 0;
    }
    objc_msgSend(v28, sel_setImage_, v33);
  }
  id v10 = v10;
  if (v5) {
    id v34 = sub_1C2224870();
  }
  else {
    id v34 = sub_1C2224894();
  }
  uint64_t v35 = v34;
  objc_msgSend(v11, sel_setAccessoryView_, v34);

  sub_1C2201F2C();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C255D0E0;
  *(void *)(v3 + 32) = 0x6F6974704F464450;
  *(void *)(v3 + 40) = 0xEA0000000000736ELL;
  strcpy((char *)(v3 + 48), "CategoryCell");
  *(unsigned char *)(v3 + 61) = 0;
  *(_WORD *)(v3 + 62) = -5120;
  sub_1C254CD60();
  sub_1C2201F84();
  *(void *)(v3 + 64) = sub_1C25501D0();
  *(void *)(v3 + 72) = v36;
  id v37 = (void *)sub_1C254F700();
  id v38 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v38)
  {
    uint64_t v39 = sub_1C254F470();
    uint64_t v41 = v40;
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v41 = 0;
  }
  id v42 = (uint64_t *)&v11[OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell_baseAccessibilityIdentifier];
  *id v42 = v39;
  v42[1] = v41;
  swift_bridgeObjectRelease();
  sub_1C23C360C();
  id v43 = objc_msgSend(v11, sel_accessoryView);
  if (!v43)
  {
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  uint64_t v13 = v43;
  if (v5) {
    uint64_t v4 = 0x64657463656C6553;
  }
  else {
    uint64_t v4 = 0x7463656C65736544;
  }
  if (v5) {
    a2 = 0xE800000000000000;
  }
  else {
    a2 = 0xEA00000000006465;
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_37;
  }
LABEL_24:
  unint64_t v45 = *(void *)(v3 + 16);
  unint64_t v44 = *(void *)(v3 + 24);
  if (v45 >= v44 >> 1) {
    uint64_t v3 = (uint64_t)sub_1C226BFC0((void *)(v44 > 1), v45 + 1, 1, (void *)v3);
  }
  *(void *)(v3 + 16) = v45 + 1;
  uint64_t v46 = v3 + 16 * v45;
  *(void *)(v46 + 32) = v4;
  *(void *)(v46 + 40) = a2;
  swift_bridgeObjectRelease();
  id v47 = (void *)sub_1C254F700();
  id v48 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v13, sel_setAccessibilityIdentifier_, v48);
  swift_bridgeObjectRelease();

LABEL_28:
  id v49 = v10;
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  if (v5)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
  }
  else if (qword_1EBB6EF40 != -1)
  {
    swift_once();
  }
  id v50 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v51 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setAccessibilityLabel_, v51, 0xE000000000000000);
  sub_1C2201ABC((uint64_t)v53);

  return v11;
}

unint64_t sub_1C22014C4(void *a1)
{
  uint64_t v3 = (void *)sub_1C254CD30();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v3, 1);

  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_allCategories);
  unint64_t result = sub_1C254CD60();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result >= *(void *)(v4 + 16))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v6 = v4 + 72 * result;
  v34[0] = *(_OWORD *)(v6 + 32);
  long long v7 = *(_OWORD *)(v6 + 48);
  long long v8 = *(_OWORD *)(v6 + 64);
  long long v9 = *(_OWORD *)(v6 + 80);
  uint64_t v35 = *(void *)(v6 + 96);
  v34[2] = v8;
  v34[3] = v9;
  v34[1] = v7;
  id v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_selectedCategories);
  swift_beginAccess();
  uint64_t v11 = *v10;
  sub_1C2201A54((uint64_t)v34);
  swift_bridgeObjectRetain();
  sub_1C24F1A34((unsigned __int8 *)v34, v11);
  char v13 = v12;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (v13)
  {
    sub_1C22BB30C((unsigned __int8 *)v34, (uint64_t)&v25);
    uint64_t v14 = v25;
    uint64_t v15 = v26;
    uint64_t v16 = v27;
    uint64_t v17 = v28;
    uint64_t v18 = v29;
    uint64_t v19 = v30;
    uint64_t v20 = v31;
    uint64_t v21 = v32;
    char v22 = v33;
    swift_endAccess();
    sub_1C2201B28(v14, v15, v16, v17, v18, v19, v20, v21, v22);
  }
  else
  {
    sub_1C2201A54((uint64_t)v34);
    sub_1C2366E18((uint64_t)&v25, (unsigned __int8 *)v34);
    id v23 = v26;
    uint64_t v24 = v33;
    swift_endAccess();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  sub_1C220184C();
  return sub_1C2201ABC((uint64_t)v34);
}

char *sub_1C22017A8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_selectedCategories;
  swift_beginAccess();
  if (*(void *)(*(void *)v1 + 16) == *(void *)(*(void *)(v0
                                                                  + OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_allCategories)
                                                      + 16))
  {
    *(void *)uint64_t v1 = MEMORY[0x1E4FBC870];
  }
  else
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C24919F0(v2);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
  }
  swift_bridgeObjectRelease();
  return sub_1C220184C();
}

char *sub_1C220184C()
{
  unint64_t result = (char *)objc_msgSend(v0, sel_tableView);
  if (result)
  {
    uint64_t v2 = result;
    objc_msgSend(result, sel_reloadData);

    unint64_t result = (char *)MEMORY[0x1C875A200](&v0[OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_delegate]);
    if (result)
    {
      uint64_t v3 = result;
      uint64_t v4 = &v0[OBJC_IVAR____TtC15HealthRecordsUI31CategorySelectionViewController_selectedCategories];
      swift_beginAccess();
      *(void *)(*(void *)&v3[OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource] + 72) = *(void *)v4;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C233B114();
      swift_bridgeObjectRelease();
      return (char *)swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1C220198C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CategorySelectionViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for CategorySelectionViewController()
{
  return self;
}

void sub_1C2201A44()
{
  qword_1EA2DE460 = 0x4028000000000000;
}

uint64_t sub_1C2201A54(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = v3;
  id v5 = v2;
  return a1;
}

uint64_t sub_1C2201ABC(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + 8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C2201B28(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  if (a2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2201BA4(void *a1)
{
  objc_super v2 = (void *)sub_1C254F430();
  id v3 = objc_msgSend(a1, sel_dequeueReusableHeaderFooterViewWithIdentifier_, v2);

  if (!v3) {
    return 0;
  }
  type metadata accessor for HeaderWithRightAlignedButton();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v5 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C254C730();
    uint64_t v8 = v7;
    swift_bridgeObjectRelease();

    long long v9 = (uint64_t *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText);
    swift_beginAccess();
    *long long v9 = v6;
    v9[1] = v8;
    swift_bridgeObjectRelease();
    id v10 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel);
    if (v9[1])
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = 0;
    }
    objc_msgSend(v10, sel_setText_, v11, 0xE000000000000000);

    swift_beginAccess();
    id v12 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C254C730();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();

    uint64_t v16 = (uint64_t *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText);
    swift_beginAccess();
    *uint64_t v16 = v13;
    v16[1] = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C254FFC0();
    swift_bridgeObjectRelease();
    uint64_t v17 = (_OWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier);
    swift_beginAccess();
    *uint64_t v17 = xmmword_1C255D0F0;
    swift_bridgeObjectRelease();
    sub_1C242C9BC();
    uint64_t v18 = v4 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate;
    swift_beginAccess();
    *(void *)(v18 + 8) = &off_1F1D8FF78;
    swift_unknownObjectWeakAssign();
  }
  else
  {
  }
  return v4;
}

void sub_1C2201F2C()
{
  if (!qword_1EBB6FA60)
  {
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6FA60);
    }
  }
}

unint64_t sub_1C2201F84()
{
  unint64_t result = qword_1EBB6FF20;
  if (!qword_1EBB6FF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6FF20);
  }
  return result;
}

uint64_t sub_1C2201FD8(uint64_t a1)
{
  return a1;
}

uint64_t Box.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  Box.init(value:)(a1);
  return v2;
}

char *Box.init(value:)(uint64_t a1)
{
  uint64_t v12 = *(void *)v1;
  uint64_t v13 = a1;
  uint64_t v11 = sub_1C254FC60();
  uint64_t v2 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C254F200();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1C254FC00();
  MEMORY[0x1F4188790](v6);
  v10[1] = sub_1C22023A4();
  uint64_t v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C2202898(0, &qword_1EBB6EEE0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C255CD90;
  sub_1C254FBF0();
  uint64_t v14 = v8;
  sub_1C2202850((unint64_t *)&qword_1EBB6FF88, MEMORY[0x1E4FBCC10]);
  sub_1C2202898(0, &qword_1EBB6FF50, v7, MEMORY[0x1E4FBB320]);
  sub_1C22023E4((unint64_t *)&qword_1EBB6FF58, &qword_1EBB6FF50, v7);
  sub_1C2550200();
  sub_1C254F1E0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FBCC58], v11);
  *((void *)v1 + 2) = sub_1C254FCB0();
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v12 + 80) - 8) + 32))(&v1[*(void *)(*(void *)v1 + 96)], v13);
  return v1;
}

unint64_t sub_1C22023A4()
{
  unint64_t result = qword_1EBB6FF90;
  if (!qword_1EBB6FF90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB6FF90);
  }
  return result;
}

uint64_t sub_1C22023E4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2202898(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Box.read<A>(with:)()
{
  return sub_1C254FC90();
}

uint64_t sub_1C22024A4(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)a3 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v10 = v9 + *(void *)(v8 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
  a1(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C22025E8()
{
  return sub_1C22024A4(*(void (**)(char *))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t Box.write<A>(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a4;
  uint64_t v7 = sub_1C254F1C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C2202898(0, &qword_1EBB6EED8, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C255CD90;
  sub_1C254F1B0();
  uint64_t v22 = v12;
  sub_1C2202850((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C2202898(0, (unint64_t *)&qword_1EBB6FF30, v11, MEMORY[0x1E4FBB320]);
  sub_1C22023E4((unint64_t *)&qword_1EBB6FF40, (unint64_t *)&qword_1EBB6FF30, v11);
  sub_1C2550200();
  uint64_t v18 = a3;
  uint64_t v19 = v15;
  uint64_t v20 = v16;
  uint64_t v21 = v5;
  sub_1C254FC80();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C2202850(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2202898(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C22028FC()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40) + *(void *)(**(void **)(v0 + 40) + 96);
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

id *Box.deinit()
{
  uint64_t v1 = *v0;

  (*(void (**)(char *))(*(void *)(v1[10] - 8) + 8))((char *)v0 + *((void *)*v0 + 12));
  return v0;
}

uint64_t Box.__deallocating_deinit()
{
  Box.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2202A68()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for Box()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for Box(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Box);
}

uint64_t dispatch thunk of Box.__allocating_init(value:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C2202B80(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1C2206F14();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = MEMORY[0x1F4188790](v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_1C22062B0(a3, (uint64_t)sub_1C2207084, v11);
  return swift_release();
}

uint64_t sub_1C2202CC0(id a1, char a2)
{
  if (a2)
  {
    id v3 = a1;
    sub_1C2206F14();
    return sub_1C254F7E0();
  }
  else
  {
    sub_1C2206F14();
    swift_bridgeObjectRetain();
    return sub_1C254F7F0();
  }
}

void CIImage.createUIImage(dimension:)(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254E560();
  uint64_t v40 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v7, sel_scale);
  double v9 = v8;

  objc_msgSend(v2, sel_extent);
  CGFloat v11 = v9 * (a1 / v10);
  objc_msgSend(v2, sel_extent);
  CGAffineTransformMakeScale(&v42, v11, v9 * (a1 / v12));
  id v13 = objc_msgSend(v2, sel_imageByApplyingTransform_, &v42);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1E018]), sel_initWithOptions_, 0);
  uint64_t v15 = *MEMORY[0x1E4F1E2F0];
  CGColorSpaceRef DeviceRGB = CGColorSpaceCreateDeviceRGB();
  sub_1C2204F70(MEMORY[0x1E4FBC860], (void (*)(void))sub_1C22083A8, &qword_1EA2DE5E8, type metadata accessor for CIImageRepresentationOption, (uint64_t (*)(uint64_t))sub_1C245738C);
  type metadata accessor for CIImageRepresentationOption(0);
  sub_1C2207D90(&qword_1EA2DDC88, type metadata accessor for CIImageRepresentationOption);
  uint64_t v17 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v14, sel_PNGRepresentationOfImage_format_colorSpace_options_, v13, v15, DeviceRGB, v17);

  if (v18)
  {
    uint64_t v19 = sub_1C254C940();
    unint64_t v21 = v20;

    id v22 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
    sub_1C2205E14(v19, v21);
    id v23 = (void *)sub_1C254C930();
    id v24 = objc_msgSend(v22, sel_initWithData_scale_, v23, v9);
    sub_1C2205E6C(v19, v21);

    if (v24)
    {
      sub_1C2205E6C(v19, v21);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1C254E510();
    id v25 = v2;
    unint64_t v26 = sub_1C254E550();
    uint64_t v27 = sub_1C254FA20();
    if (os_log_type_enabled(v26, (os_log_type_t)v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(void *)&v42.a = v38;
      uint64_t v39 = v4;
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v36 = v28 + 4;
      id v37 = v28;
      id v29 = v25;
      id v30 = objc_msgSend(v29, sel_description);
      uint64_t v31 = sub_1C254F470();
      unint64_t v33 = v32;

      uint64_t v41 = sub_1C21AD354(v31, v33, (uint64_t *)&v42);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      id v34 = v37;
      _os_log_impl(&dword_1C21A1000, v26, (os_log_type_t)v27, "%s: failed to create QR code image data", v37, 0xCu);
      uint64_t v35 = v38;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v35, -1, -1);
      MEMORY[0x1C875A0B0](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v39);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v4);
    }
  }
}

void sub_1C2203204(void *a1, void (*a2)(id, uint64_t), uint64_t a3)
{
  v78[2] = *MEMORY[0x1E4F143B8];
  uint64_t v70 = sub_1C254E560();
  uint64_t v6 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v73 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1C254F4E0();
  double v8 = *(void **)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  objc_super v74 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = (void *)sub_1C254F430();
  id v11 = objc_msgSend(self, sel_filterWithName_, v10);

  if (!v11)
  {
    unint64_t v44 = self;
    unint64_t v45 = (void *)sub_1C254F430();
    id v46 = objc_msgSend(v44, sel_hk_error_description_, 3, v45);

    swift_willThrow();
LABEL_28:
    id v57 = v46;
    a2(v46, 1);

    return;
  }
  double v12 = (void *)sub_1C254F430();
  uint64_t v13 = (uint64_t)" CIFilter for CIQRCodeGenerator";
  id v14 = (void *)sub_1C254F430();
  objc_msgSend(v11, sel_setValue_forKey_, v12, v14);

  id v77 = 0;
  v78[0] = MEMORY[0x1E4FBC860];
  id v15 = objc_msgSend(a1, sel_orderedSegmentsWithError_, &v77);
  id v16 = v77;
  if (!v15)
  {
    id v47 = v77;
    swift_bridgeObjectRelease();
    id v48 = v11;
    id v46 = (id)sub_1C254C820();

    swift_willThrow();
    goto LABEL_28;
  }
  uint64_t v17 = v15;
  sub_1C21AB51C(0, &qword_1EA2DE538);
  unint64_t v18 = sub_1C254F710();
  id v19 = v16;

  uint64_t v64 = a3;
  id v65 = a2;
  if (v18 >> 62) {
    goto LABEL_30;
  }
  uint64_t v21 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  for (unint64_t i = v18; v21; unint64_t i = v18)
  {
    uint64_t v71 = (void (**)(char *, uint64_t))(v8 + 1);
    unint64_t v72 = i & 0xC000000000000001;
    uint64_t v68 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v23 = 4;
    *(void *)&long long v20 = 134217984;
    long long v66 = v20;
    unint64_t v67 = v13 | 0x8000000000000000;
    unint64_t v69 = i;
    while (1)
    {
      uint64_t v6 = v23 - 4;
      if (!v72) {
        break;
      }
      id v24 = (id)MEMORY[0x1C87588E0](v23 - 4, i);
      uint64_t v13 = v23 - 3;
      if (__OFADD__(v6, 1)) {
        goto LABEL_29;
      }
LABEL_11:
      id v76 = v24;
      id v25 = objc_msgSend(v24, sel_fullQRCodeValue, v64);
      sub_1C254F470();

      unint64_t v26 = v74;
      sub_1C254F4D0();
      uint64_t v27 = sub_1C254F480();
      unint64_t v29 = v28;
      swift_bridgeObjectRelease();
      (*v71)(v26, v75);
      if (v29 >> 60 == 15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v53 = self;
        uint64_t v54 = (void *)sub_1C254F430();
        id v55 = objc_msgSend(v53, sel_hk_error_description_, 3, v54);
        id v56 = v11;
        id v46 = v55;

        swift_willThrow();
        goto LABEL_27;
      }
      id v30 = (void *)sub_1C254C930();
      uint64_t v31 = (void *)sub_1C254F430();
      objc_msgSend(v11, sel_setValue_forKey_, v30, v31);

      id v32 = objc_msgSend(v11, sel_outputImage);
      if (!v32) {
        goto LABEL_25;
      }
      id v33 = v32;
      objc_msgSend(v33, sel_extent);
      if (v34 <= 105.0)
      {
      }
      else
      {
        uint64_t v35 = v11;
        sub_1C254E510();
        uint64_t v36 = v33;
        id v37 = sub_1C254E550();
        os_log_type_t v38 = sub_1C254FA10();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          *(_DWORD *)uint64_t v39 = v66;
          [v36 extent];
          *(void *)(v39 + 4) = v40;

          _os_log_impl(&dword_1C21A1000, v37, v38, "Generated QR code is larger than v22 (%f), re-generating with \"L\" correction level", (uint8_t *)v39, 0xCu);
          MEMORY[0x1C875A0B0](v39, -1, -1);
        }
        else
        {

          id v37 = v36;
        }

        (*v68)(v73, v70);
        uint64_t v41 = (void *)sub_1C254F430();
        CGAffineTransform v42 = (void *)sub_1C254F430();
        objc_msgSend(v35, sel_setValue_forKey_, v41, v42);

        id v11 = v35;
        id v33 = objc_msgSend(v35, sel_outputImage);

        unint64_t i = v69;
        if (!v33)
        {
LABEL_25:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v49 = self;
          id v50 = (void *)sub_1C254F430();
          id v51 = objc_msgSend(v49, sel_hk_error_description_, 3, v50);
          uint64_t v52 = v11;
          id v46 = v51;

          swift_willThrow();
          sub_1C22071AC(v27, v29);

LABEL_27:
          a2 = v65;
          goto LABEL_28;
        }
      }
      id v43 = v33;
      double v8 = v78;
      MEMORY[0x1C8757C00]();
      unint64_t v18 = *(void *)((v78[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v18 >= *(void *)((v78[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();

      sub_1C22071AC(v27, v29);
      ++v23;
      if (v13 == v21) {
        goto LABEL_31;
      }
    }
    id v24 = *(id *)(i + 8 * v23);
    uint64_t v13 = v23 - 3;
    if (!__OFADD__(v6, 1)) {
      goto LABEL_11;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
LABEL_31:
  swift_bridgeObjectRelease();
  uint64_t v58 = (void *)v78[0];
  if (v78[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v60 = sub_1C2550620();
    swift_bridgeObjectRelease();
    uint64_t v59 = v65;
    if (v60) {
      goto LABEL_33;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    uint64_t v61 = self;
    uint64_t v62 = (void *)sub_1C254F430();
    id v63 = objc_msgSend(v61, sel_hk_error_description_, 3, v62);

    v59(v63, 1);
    goto LABEL_36;
  }
  uint64_t v59 = v65;
  if (!*(void *)((v78[0] & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_35;
  }
LABEL_33:
  v59(v58, 0);
  swift_bridgeObjectRelease();
LABEL_36:
}

uint64_t sub_1C2203AEC()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1C2203AFC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2207AB4(0, (unint64_t *)&qword_1EA2DE558);
  uint64_t v2 = (void *)sub_1C2550680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C21A6470(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    double v12 = (void *)(v2[7] + 16 * result);
    *double v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2203C38(uint64_t a1)
{
  return sub_1C2204F70(a1, (void (*)(void))sub_1C2206AFC, (unint64_t *)&qword_1EA2DE0A0, type metadata accessor for Key, (uint64_t (*)(uint64_t))sub_1C24572A8);
}

unint64_t sub_1C2203C80(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C22077A4();
  uint64_t v2 = (void *)sub_1C2550680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C2207838(v4, (uint64_t)&v17, (uint64_t (*)(void))sub_1C22078A0);
    uint64_t v5 = v17;
    uint64_t v6 = v18;
    unint64_t result = sub_1C21A6470(v17, v18);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v9 = v5;
    v9[1] = v6;
    uint64_t v10 = v2[7] + 72 * result;
    *(_OWORD *)uint64_t v10 = v19;
    long long v11 = v20;
    long long v12 = v21;
    long long v13 = v22;
    *(void *)(v10 + 64) = v23;
    *(_OWORD *)(v10 + 32) = v12;
    *(_OWORD *)(v10 + 48) = v13;
    *(_OWORD *)(v10 + 16) = v11;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 88;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2203DD8(uint64_t a1)
{
  sub_1C2207C04(0, &qword_1EBB6E810, MEMORY[0x1E4F27990], (void (*)(uint64_t))sub_1C2207934);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v27 - v5;
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2207998();
  uint64_t v7 = sub_1C2550680();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = &v6[*(int *)(v3 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v27[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C2207A44(v13, (uint64_t)v6, &qword_1EBB6E810, MEMORY[0x1E4F27990], (void (*)(uint64_t))sub_1C2207934);
    unint64_t result = sub_1C24573D8((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_1C254CB40();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    uint64_t v20 = v8[7] + 72 * v17;
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v10;
    long long v21 = *((_OWORD *)v10 + 1);
    long long v22 = *((_OWORD *)v10 + 2);
    long long v23 = *((_OWORD *)v10 + 3);
    *(void *)(v20 + 64) = *((void *)v10 + 8);
    *(_OWORD *)(v20 + 32) = v22;
    *(_OWORD *)(v20 + 48) = v23;
    *(_OWORD *)(v20 + 16) = v21;
    uint64_t v24 = v8[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v26;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C220403C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2206080();
  uint64_t v2 = (void *)sub_1C2550680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *(v4 - 4);
    uint64_t v6 = *(v4 - 3);
    uint64_t v7 = (void *)*(v4 - 2);
    char v8 = (void *)*(v4 - 1);
    uint64_t v9 = *v4;
    id v10 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = v7;
    unint64_t result = sub_1C24574AC(v5, v6, v7, v8);
    if (v13) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v14 = (uint64_t *)(v2[6] + 32 * result);
    *uint64_t v14 = v5;
    v14[1] = v6;
    v14[2] = (uint64_t)v7;
    v14[3] = (uint64_t)v8;
    *(void *)(v2[7] + 8 * result) = v9;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v2[2] = v17;
    v4 += 5;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C220417C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2205FFC();
  uint64_t v2 = (void *)sub_1C2550680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C21A6470(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2204294(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2206E60(0, &qword_1EA2DE500, &qword_1EA2DE508, 0x1E4F2B1B0, &qword_1EA2DE510);
  uint64_t v2 = (void *)sub_1C2550680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1C24575D0((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C22043BC(uint64_t a1)
{
  sub_1C22082D8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2208340();
  uint64_t v7 = sub_1C2550680();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (char *)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C2207838(v13, (uint64_t)v6, (uint64_t (*)(void))sub_1C22082D8);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_1C21A6470(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_1C254CB40();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C22045C0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2207AB4(0, (unint64_t *)&qword_1EA2DE540);
  uint64_t v2 = sub_1C2550680();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C22071C0(v6, (uint64_t)&v15, &qword_1EA2DF000);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1C21A6470(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1C2206B9C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C220472C(uint64_t a1)
{
  sub_1C2208448(0, &qword_1EA2DE548, MEMORY[0x1E4F27990]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v28 - v5;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C220722C();
  uint64_t v7 = sub_1C2550680();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  char v10 = &v6[*(int *)(v3 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v28[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C2206C4C(v13, (uint64_t)v6, &qword_1EA2DE548, MEMORY[0x1E4F27990]);
    unint64_t result = sub_1C24573D8((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_1C254CB40();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    uint64_t v20 = v8[7] + 48 * v17;
    uint64_t v21 = *((void *)v10 + 3);
    char v22 = v10[32];
    uint64_t v23 = *((void *)v10 + 5);
    long long v24 = *(_OWORD *)(v10 + 8);
    *(unsigned char *)uint64_t v20 = *v10;
    *(_OWORD *)(v20 + 8) = v24;
    *(void *)(v20 + 24) = v21;
    *(unsigned char *)(v20 + 32) = v22;
    *(void *)(v20 + 40) = v23;
    uint64_t v25 = v8[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v27;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2204984(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2207AB4(0, &qword_1EA2DE5A0);
  uint64_t v2 = sub_1C2550680();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C22071C0(v6, (uint64_t)v15, (unint64_t *)&qword_1EA2DEFD0);
    unint64_t result = sub_1C2457670((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1C2206B9C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2204AF4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2208034();
  uint64_t v2 = (void *)sub_1C2550680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1C24572A8((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2204BFC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2206E60(0, (unint64_t *)&qword_1EA2DE518, &qword_1EBB6FF78, 0x1E4F2B448, (unint64_t *)&qword_1EBB6FF80);
  uint64_t v2 = (void *)sub_1C2550680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1C245733C((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2204D24(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2207E3C();
  uint64_t v2 = (void *)sub_1C2550680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1C2457620((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2204E2C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2206CBC();
  uint64_t v2 = (void *)sub_1C2550680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_1C245738C();
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2204F28(uint64_t a1)
{
  return sub_1C2204F70(a1, (void (*)(void))sub_1C2206BAC, &qword_1EA2DE4D8, type metadata accessor for AttributeName, (uint64_t (*)(uint64_t))sub_1C245738C);
}

unint64_t sub_1C2204F70(uint64_t a1, void (*a2)(void), unint64_t *a3, void (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v9 = sub_1C2550680();
  uint64_t v10 = (void *)v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v10;
  }
  uint64_t v12 = v9 + 64;
  uint64_t v13 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C2206C4C(v13, (uint64_t)&v20, a3, a4);
    uint64_t v14 = v20;
    unint64_t result = a5(v20);
    if (v16) {
      break;
    }
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v10[6] + 8 * result) = v14;
    unint64_t result = (unint64_t)sub_1C2206B9C(&v21, (_OWORD *)(v10[7] + 32 * result));
    uint64_t v17 = v10[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    void v10[2] = v19;
    v13 += 40;
    if (!--v11)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C22050C4(uint64_t a1)
{
  return sub_1C220594C(a1, &qword_1EA2DE488, (unint64_t *)&qword_1EBB70030);
}

unint64_t sub_1C22050E0(uint64_t a1)
{
  return sub_1C220594C(a1, &qword_1EA2DE480, (unint64_t *)&qword_1EA2DE010);
}

unint64_t sub_1C22050FC(uint64_t a1)
{
  sub_1C2208448(0, (unint64_t *)&qword_1EBB6F570, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)v23 - v5;
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C220823C();
  uint64_t v7 = sub_1C2550680();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C2206C4C(v13, (uint64_t)v6, (unint64_t *)&qword_1EBB6F570, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
    unint64_t result = sub_1C2457874((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for BrowseCategory();
    unint64_t result = sub_1C2207DD8((uint64_t)v6, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C220530C(uint64_t a1)
{
  sub_1C22080F0();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2208178();
  uint64_t v7 = sub_1C2550680();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C2207838(v13, (uint64_t)v6, (uint64_t (*)(void))sub_1C22080F0);
    unint64_t result = sub_1C2457874((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for BrowseCategory();
    unint64_t result = sub_1C2207DD8((uint64_t)v6, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C22054EC(uint64_t a1)
{
  sub_1C2207EF8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2207F78();
  uint64_t v7 = sub_1C2550680();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C2207838(v13, (uint64_t)v6, (uint64_t (*)(void))sub_1C2207EF8);
    unint64_t result = sub_1C24573D8((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_1C254CB40();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v6[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C22056E4(uint64_t a1)
{
  sub_1C2207C04(0, qword_1EBB6E8B8, (void (*)(uint64_t))type metadata accessor for BrowseCategory, (void (*)(uint64_t))sub_1C2207C80);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)v27 - v5;
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2207CE4();
  uint64_t v7 = sub_1C2550680();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = &v6[*(int *)(v3 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v27[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C2207A44(v13, (uint64_t)v6, qword_1EBB6E8B8, (void (*)(uint64_t))type metadata accessor for BrowseCategory, (void (*)(uint64_t))sub_1C2207C80);
    unint64_t result = sub_1C2457874((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for BrowseCategory();
    unint64_t result = sub_1C2207DD8((uint64_t)v6, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17);
    uint64_t v20 = v8[7] + 72 * v17;
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v10;
    long long v21 = *((_OWORD *)v10 + 1);
    long long v22 = *((_OWORD *)v10 + 2);
    long long v23 = *((_OWORD *)v10 + 3);
    *(void *)(v20 + 64) = *((void *)v10 + 8);
    *(_OWORD *)(v20 + 32) = v22;
    *(_OWORD *)(v20 + 48) = v23;
    *(_OWORD *)(v20 + 16) = v21;
    uint64_t v24 = v8[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v26;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2205930(uint64_t a1)
{
  return sub_1C220594C(a1, &qword_1EBB6EEC8, (unint64_t *)&qword_1EBB6F510);
}

unint64_t sub_1C220594C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2205EE8(0, a2, a3);
  uint64_t v4 = (void *)sub_1C2550680();
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain();
  id v6 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v7 = (uint64_t)*(v6 - 2);
    uint64_t v8 = (uint64_t)*(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain();
    id v10 = v9;
    unint64_t result = sub_1C21A6470(v7, v8);
    if (v12) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v4[6] + 16 * result);
    *uint64_t v13 = v7;
    v13[1] = v8;
    *(void *)(v4[7] + 8 * result) = v10;
    uint64_t v14 = v4[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2205A64(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2205F50();
  uint64_t v2 = (void *)sub_1C2550680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1C245738C(v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1C2205B6C(uint64_t a1)
{
  if (*(void *)(a1 + 16) && (sub_1C22072C8(), uint64_t v2 = (void *)sub_1C2550680(), (v3 = *(void *)(a1 + 16)) != 0))
  {
    swift_retain();
    uint64_t v4 = (void *)(a1 + 104);
    while (1)
    {
      id v6 = (void *)*(v4 - 8);
      uint64_t v5 = *(v4 - 7);
      uint64_t v7 = *(v4 - 4);
      uint64_t v8 = *(v4 - 3);
      uint64_t v9 = *(v4 - 2);
      uint64_t v10 = (void *)*(v4 - 1);
      uint64_t v11 = *v4;
      LOBYTE(v22) = *((unsigned char *)v4 - 72);
      *((void *)&v22 + 1) = v6;
      *(void *)long long v23 = v5;
      *(_OWORD *)&v23[8] = *((_OWORD *)v4 - 3);
      *(void *)&v23[24] = v7;
      *(void *)&long long v24 = v8;
      *((void *)&v24 + 1) = v9;
      BOOL v25 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v12 = v10;
      id v13 = v6;
      sub_1C24578FC(&v22);
      if (v15) {
        break;
      }
      *(void *)((char *)v2 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v14;
      uint64_t v16 = v2[6] + 72 * v14;
      long long v17 = v24;
      *(_OWORD *)(v16 + 32) = *(_OWORD *)&v23[16];
      *(_OWORD *)(v16 + 48) = v17;
      *(void *)(v16 + 64) = v25;
      long long v18 = *(_OWORD *)v23;
      *(_OWORD *)uint64_t v16 = v22;
      *(_OWORD *)(v16 + 16) = v18;
      *(void *)(v2[7] + 8 * v14) = v11;
      uint64_t v19 = v2[2];
      BOOL v20 = __OFADD__(v19, 1);
      uint64_t v21 = v19 + 1;
      if (v20) {
        goto LABEL_10;
      }
      v4 += 10;
      v2[2] = v21;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1C2205CEC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2206E60(0, &qword_1EA2DE560, (unint64_t *)&qword_1EA2E39D0, 0x1E4F2AF60, &qword_1EA2DE568);
  uint64_t v2 = (void *)sub_1C2550680();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1C2457B2C((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1C2205E14(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1C2205E6C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t type metadata accessor for SignedClinicalDataQRCodeGenerator()
{
  return self;
}

void sub_1C2205EE8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C21AB51C(255, a3);
    unint64_t v4 = sub_1C2550690();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2205F50()
{
  if (!qword_1EA2DE490)
  {
    type metadata accessor for DocumentReadingOptionKey(255);
    type metadata accessor for DocumentType(255);
    sub_1C2207D90(&qword_1EA2DDF68, type metadata accessor for DocumentReadingOptionKey);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE490);
    }
  }
}

void sub_1C2205FFC()
{
  if (!qword_1EA2DE498)
  {
    sub_1C2207158(255, &qword_1EA2DE4A0, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE498);
    }
  }
}

void sub_1C2206080()
{
  if (!qword_1EA2DE4A8)
  {
    sub_1C2207158(255, &qword_1EA2DE4A0, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1C2206108();
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE4A8);
    }
  }
}

unint64_t sub_1C2206108()
{
  unint64_t result = qword_1EA2DE4B0;
  if (!qword_1EA2DE4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DE4B0);
  }
  return result;
}

unint64_t sub_1C220615C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1C21A95CC();
    uint64_t v3 = (void *)sub_1C2550680();
    for (unint64_t i = (_OWORD *)(a1 + 96); ; i += 5)
    {
      unsigned __int8 v5 = *((unsigned char *)i - 64);
      char v6 = *((unsigned char *)i - 56);
      uint64_t v8 = (void *)*((void *)i - 6);
      uint64_t v7 = *((void *)i - 5);
      uint64_t v9 = *((void *)i - 4);
      uint64_t v10 = *((void *)i - 3);
      long long v19 = *(i - 1);
      long long v20 = *i;
      unint64_t result = sub_1C21A93C4(v5);
      if (v12) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      uint64_t v13 = v3[7] + 72 * result;
      *(unsigned char *)uint64_t v13 = v6;
      *(void *)(v13 + 8) = v8;
      *(void *)(v13 + 16) = v7;
      *(void *)(v13 + 24) = v9;
      *(void *)(v13 + 32) = v10;
      *(_OWORD *)(v13 + 40) = v19;
      *(_OWORD *)(v13 + 56) = v20;
      uint64_t v14 = v3[2];
      BOOL v15 = __OFADD__(v14, 1);
      uint64_t v16 = v14 + 1;
      if (v15) {
        goto LABEL_10;
      }
      v3[2] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v17 = *((id *)&v20 + 1);
      id v18 = v8;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

uint64_t sub_1C22062B0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v4 = sub_1C254F1C0();
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C254F200();
  uint64_t v7 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254F1D0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCB28], v10);
  uint64_t v14 = (void *)sub_1C254FCC0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  BOOL v15 = (void *)swift_allocObject();
  uint64_t v16 = v22;
  uint64_t v17 = v23;
  _OWORD v15[2] = a1;
  v15[3] = v16;
  v15[4] = v17;
  aBlock[4] = sub_1C2207144;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_7;
  id v18 = _Block_copy(aBlock);
  id v19 = a1;
  swift_retain();
  sub_1C254F1E0();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1C2207D90((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C2207158(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v9, v6, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
  return swift_release();
}

unint64_t sub_1C2206654(double *a1)
{
  return sub_1C220668C(a1, &qword_1EA2DE590, &qword_1EBB6EEA8, (uint64_t)off_1E6449E10);
}

unint64_t sub_1C2206670(double *a1)
{
  return sub_1C220668C(a1, &qword_1EA2DE578, (unint64_t *)&qword_1EBB6EEB8, 0x1E4FB1818);
}

unint64_t sub_1C220668C(double *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v4 = *((void *)a1 + 2);
  if (!v4) {
    return MEMORY[0x1E4FBC868];
  }
  sub_1C22076D4(0, a2, a3, a4, MEMORY[0x1E4FBBD58]);
  char v6 = (void *)sub_1C2550680();
  double v7 = a1[4];
  uint64_t v8 = (void *)*((void *)a1 + 5);
  unint64_t result = sub_1C2457390(v7);
  if (v10)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v20 = v8;
    return (unint64_t)v6;
  }
  uint64_t v11 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = 8 * result;
    *(double *)(v6[6] + v12) = v7;
    *(void *)(v6[7] + v12) = v8;
    uint64_t v13 = v6[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      break;
    }
    v6[2] = v15;
    if (!--v4) {
      goto LABEL_8;
    }
    uint64_t v16 = v11 + 2;
    double v7 = *(v11 - 1);
    uint64_t v17 = *(void **)v11;
    id v18 = v8;
    unint64_t result = sub_1C2457390(v7);
    uint64_t v11 = v16;
    uint64_t v8 = v17;
    if (v19) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1C22067A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  sub_1C2206D58();
  uint64_t v3 = (void *)sub_1C2550680();
  uint64_t v4 = *(void *)(a1 + 32);
  long long v16 = *(_OWORD *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 56);
  unint64_t result = sub_1C2457790(v4);
  long long v7 = v16;
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = (uint64_t *)(a1 + 64);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    uint64_t v10 = v3[7] + 24 * result;
    *(_OWORD *)uint64_t v10 = v7;
    *(void *)(v10 + 16) = v5;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    BOOL v14 = v9 + 4;
    uint64_t v4 = *v9;
    long long v17 = *(_OWORD *)(v9 + 1);
    uint64_t v5 = v9[3];
    swift_unknownObjectRetain();
    unint64_t result = sub_1C2457790(v4);
    uint64_t v9 = v14;
    long long v7 = v17;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1C22068CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  sub_1C22069CC();
  uint64_t v3 = (void *)sub_1C2550680();
  LOBYTE(v4) = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_1C21A93C4(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v8 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    BOOL v12 = v8 + 2;
    uint64_t v4 = *((unsigned __int8 *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C21A93C4(v4);
    char v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

void sub_1C22069CC()
{
  if (!qword_1EA2DE4B8)
  {
    sub_1C2206A50(255, (unint64_t *)&qword_1EA2DE4C0, &qword_1EBB6F978);
    sub_1C2206AA8();
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE4B8);
    }
  }
}

void sub_1C2206A50(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C21AB51C(255, a3);
    unint64_t v4 = sub_1C254F7A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C2206AA8()
{
  unint64_t result = qword_1EBB6F580;
  if (!qword_1EBB6F580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F580);
  }
  return result;
}

void sub_1C2206AFC()
{
  if (!qword_1EA2DE4C8)
  {
    type metadata accessor for Key(255);
    sub_1C2207D90((unint64_t *)&qword_1EA2E4470, type metadata accessor for Key);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE4C8);
    }
  }
}

_OWORD *sub_1C2206B9C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1C2206BAC()
{
  if (!qword_1EA2DE4D0)
  {
    type metadata accessor for AttributeName(255);
    sub_1C2207D90(&qword_1EA2DDF28, type metadata accessor for AttributeName);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE4D0);
    }
  }
}

uint64_t sub_1C2206C4C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C2208448(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C2206CBC()
{
  if (!qword_1EA2DE4E0)
  {
    type metadata accessor for FeatureKey(255);
    sub_1C2207D90(&qword_1EA2DDF18, type metadata accessor for FeatureKey);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE4E0);
    }
  }
}

void sub_1C2206D58()
{
  if (!qword_1EA2DE4E8)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_1C2206E04();
    sub_1C2207D90(&qword_1EA2DE4F8, type metadata accessor for UIUserInterfaceSizeClass);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE4E8);
    }
  }
}

unint64_t sub_1C2206E04()
{
  unint64_t result = qword_1EA2DE4F0;
  if (!qword_1EA2DE4F0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DE4F0);
  }
  return result;
}

void sub_1C2206E60(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_1C21AB51C(255, a3);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF60);
    sub_1C21A818C(a5, a3);
    unint64_t v8 = sub_1C2550690();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2206F14()
{
  if (!qword_1EA2DE520)
  {
    sub_1C2206A50(255, (unint64_t *)&qword_1EA2DE528, (unint64_t *)&qword_1EA2DE530);
    sub_1C2206F9C();
    unint64_t v0 = sub_1C254F800();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE520);
    }
  }
}

unint64_t sub_1C2206F9C()
{
  unint64_t result = qword_1EBB70060;
  if (!qword_1EBB70060)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB70060);
  }
  return result;
}

uint64_t sub_1C2206FF4()
{
  sub_1C2206F14();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C2207084(void *a1, char a2)
{
  char v3 = a2 & 1;
  sub_1C2206F14();
  return sub_1C2202CC0(a1, v3);
}

uint64_t sub_1C2207104()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C2207144()
{
  sub_1C2203204(*(void **)(v0 + 16), *(void (**)(id, uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

void sub_1C2207158(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C254F7A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C22071AC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1C2205E6C(a1, a2);
  }
  return a1;
}

uint64_t sub_1C22071C0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1C2207B04(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C220722C()
{
  if (!qword_1EA2DE550)
  {
    sub_1C254CB40();
    sub_1C2207D90((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE550);
    }
  }
}

void sub_1C22072C8()
{
  if (!qword_1EBB6F4D0)
  {
    sub_1C220732C();
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F4D0);
    }
  }
}

unint64_t sub_1C220732C()
{
  unint64_t result = qword_1EBB6FBA0;
  if (!qword_1EBB6FBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6FBA0);
  }
  return result;
}

unint64_t sub_1C2207380(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1C2207B64();
    char v3 = (void *)sub_1C2550680();
    for (uint64_t i = a1 + 56; ; i += 80)
    {
      uint64_t v20 = v1;
      uint64_t v5 = *(void *)(i - 24);
      uint64_t v6 = *(void *)(i - 16);
      uint64_t v7 = *(void *)(i - 8);
      char v8 = *(unsigned char *)i;
      uint64_t v9 = *(void *)(i + 24);
      uint64_t v21 = *(void **)(i + 16);
      uint64_t v22 = *(void **)(i + 8);
      uint64_t v10 = *(void *)(i + 32);
      uint64_t v11 = *(void *)(i + 40);
      BOOL v12 = *(void **)(i + 48);
      unint64_t result = sub_1C24576B4(v5, v6, v7, *(unsigned char *)i);
      if (v14) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v15 = v3[6] + 32 * result;
      *(void *)uint64_t v15 = v5;
      *(void *)(v15 + 8) = v6;
      *(void *)(v15 + 16) = v7;
      *(unsigned char *)(v15 + 24) = v8;
      long long v16 = (void *)(v3[7] + 48 * result);
      unint64_t result = (unint64_t)v22;
      *long long v16 = v22;
      v16[1] = v21;
      v16[2] = v9;
      v16[3] = v10;
      v16[4] = v11;
      v16[5] = v12;
      uint64_t v17 = v3[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v3[2] = v19;
      sub_1C2207BC8(v22, v21, v9, v10, v11, v12);
      uint64_t v1 = v20 - 1;
      if (v20 == 1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_1C22074CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1C220761C();
    char v3 = (void *)sub_1C2550680();
    for (uint64_t i = (void **)(a1 + 104); ; i += 10)
    {
      uint64_t v21 = v1;
      uint64_t v5 = (uint64_t)*(i - 9);
      uint64_t v6 = (uint64_t)*(i - 8);
      uint64_t v7 = (uint64_t)*(i - 7);
      char v8 = *((unsigned char *)i - 48);
      char v9 = *((unsigned char *)i - 40);
      uint64_t v11 = (uint64_t)*(i - 4);
      uint64_t v10 = (uint64_t)*(i - 3);
      uint64_t v23 = (uint64_t)*(i - 2);
      char v22 = *((unsigned char *)i - 8);
      BOOL v12 = *i;
      unint64_t result = sub_1C24576B4(v5, v6, v7, v8);
      if (v14) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v15 = v3[6] + 32 * result;
      *(void *)uint64_t v15 = v5;
      *(void *)(v15 + 8) = v6;
      *(void *)(v15 + 16) = v7;
      *(unsigned char *)(v15 + 24) = v8;
      uint64_t v16 = v3[7] + 48 * result;
      *(unsigned char *)uint64_t v16 = v9;
      *(void *)(v16 + 8) = v11;
      *(void *)(v16 + 16) = v10;
      *(void *)(v16 + 24) = v23;
      *(unsigned char *)(v16 + 32) = v22;
      *(void *)(v16 + 40) = v12;
      uint64_t v17 = v3[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v3[2] = v19;
      id v20 = v12;
      uint64_t v1 = v21 - 1;
      if (v21 == 1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

void sub_1C220761C()
{
  if (!qword_1EA2DE570)
  {
    sub_1C2207680();
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE570);
    }
  }
}

unint64_t sub_1C2207680()
{
  unint64_t result = qword_1EBB6E828;
  if (!qword_1EBB6E828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6E828);
  }
  return result;
}

void sub_1C22076D4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, void, uint64_t, unint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C21AB51C(255, a3);
    unint64_t v9 = sub_1C2207750();
    unint64_t v10 = a5(a1, MEMORY[0x1E4FBC958], v8, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C2207750()
{
  unint64_t result = qword_1EBB6E818;
  if (!qword_1EBB6E818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6E818);
  }
  return result;
}

void sub_1C22077A4()
{
  if (!qword_1EA2DE580)
  {
    sub_1C22076D4(255, (unint64_t *)&qword_1EBB6E940, (unint64_t *)&qword_1EBB6EEB8, 0x1E4FB1818, (uint64_t (*)(uint64_t, void, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE580);
    }
  }
}

uint64_t sub_1C2207838(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C22078A0()
{
  if (!qword_1EA2DE588)
  {
    sub_1C22076D4(255, (unint64_t *)&qword_1EBB6E940, (unint64_t *)&qword_1EBB6EEB8, 0x1E4FB1818, (uint64_t (*)(uint64_t, void, uint64_t, unint64_t))type metadata accessor for UnboundedCache);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DE588);
    }
  }
}

void sub_1C2207934()
{
  if (!qword_1EBB6E958)
  {
    sub_1C2207680();
    unint64_t v0 = type metadata accessor for UnboundedCache();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6E958);
    }
  }
}

void sub_1C2207998()
{
  if (!qword_1EA2DE598)
  {
    sub_1C254CB40();
    sub_1C2207934();
    sub_1C2207D90((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE598);
    }
  }
}

uint64_t sub_1C2207A44(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(uint64_t))
{
  sub_1C2207C04(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_1C2207AB4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C2550690();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1C2207B04(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C2207B64()
{
  if (!qword_1EA2DE5A8)
  {
    sub_1C2207680();
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE5A8);
    }
  }
}

id sub_1C2207BC8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if ((a5 & 0x8000000000000000) == 0)
  {
    id v8 = a2;
    a6 = a1;
    uint64_t v6 = vars8;
  }
  return a6;
}

void sub_1C2207C04(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C2207C80()
{
  if (!qword_1EBB6E948)
  {
    sub_1C2207680();
    unint64_t v0 = type metadata accessor for UnboundedCache();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6E948);
    }
  }
}

void sub_1C2207CE4()
{
  if (!qword_1EA2DE5B0)
  {
    type metadata accessor for BrowseCategory();
    sub_1C2207C80();
    sub_1C2207D90(&qword_1EBB6FAD8, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE5B0);
    }
  }
}

uint64_t sub_1C2207D90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2207DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseCategory();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C2207E3C()
{
  if (!qword_1EA2DE5B8)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB70030);
    sub_1C21AB51C(255, (unint64_t *)&unk_1EA2E33F0);
    sub_1C21A818C((unint64_t *)&qword_1EBB6F990, (unint64_t *)&qword_1EBB70030);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE5B8);
    }
  }
}

void sub_1C2207EF8()
{
  if (!qword_1EBB6D9D8[0])
  {
    sub_1C254CB40();
    sub_1C21AB51C(255, &qword_1EBB6F030);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, qword_1EBB6D9D8);
    }
  }
}

void sub_1C2207F78()
{
  if (!qword_1EA2DE5C0)
  {
    sub_1C254CB40();
    sub_1C21AB51C(255, &qword_1EBB6F030);
    sub_1C2207D90((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE5C0);
    }
  }
}

void sub_1C2208034()
{
  if (!qword_1EA2DE5C8)
  {
    type metadata accessor for Key(255);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB70010);
    sub_1C2207D90((unint64_t *)&qword_1EA2E4470, type metadata accessor for Key);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE5C8);
    }
  }
}

void sub_1C22080F0()
{
  if (!qword_1EBB6D8B8)
  {
    type metadata accessor for BrowseCategory();
    sub_1C2206A50(255, (unint64_t *)&qword_1EBB6D8C8, &qword_1EBB6EF58);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB6D8B8);
    }
  }
}

void sub_1C2208178()
{
  if (!qword_1EBB6D8D0)
  {
    type metadata accessor for BrowseCategory();
    sub_1C2206A50(255, (unint64_t *)&qword_1EBB6D8C8, &qword_1EBB6EF58);
    sub_1C2207D90(&qword_1EBB6FAD8, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6D8D0);
    }
  }
}

void sub_1C220823C()
{
  if (!qword_1EBB6F998)
  {
    type metadata accessor for BrowseCategory();
    sub_1C2207D90(&qword_1EBB6FAD8, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F998);
    }
  }
}

void sub_1C22082D8()
{
  if (!qword_1EA2DE5D0)
  {
    sub_1C254CB40();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DE5D0);
    }
  }
}

void sub_1C2208340()
{
  if (!qword_1EA2DE5D8)
  {
    sub_1C254CB40();
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE5D8);
    }
  }
}

void sub_1C22083A8()
{
  if (!qword_1EA2DE5E0)
  {
    type metadata accessor for CIImageRepresentationOption(255);
    sub_1C2207D90(&qword_1EA2DDC88, type metadata accessor for CIImageRepresentationOption);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE5E0);
    }
  }
}

void sub_1C2208448(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionViewController(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DE6C0);
}

uint64_t sub_1C22084D4()
{
  return swift_initClassMetadata2();
}

void sub_1C2208550()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2DE5F0 = v1;
  *(void *)algn_1EA2DE5F8 = v3;
}

void sub_1C2208628()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2DE600 = v1;
  *(void *)algn_1EA2DE608 = v3;
}

void sub_1C2208700()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2DE610 = v1;
  *(void *)algn_1EA2DE618 = v3;
}

void sub_1C22087D8()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2DE620 = v1;
  *(void *)algn_1EA2DE628 = v3;
}

void sub_1C22088B0()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2DE630 = v1;
  *(void *)algn_1EA2DE638 = v3;
}

void sub_1C2208988()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2DE640 = v1;
  *(void *)algn_1EA2DE648 = v3;
}

void sub_1C2208A60()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2DE650 = v1;
  *(void *)algn_1EA2DE658 = v3;
}

void sub_1C2208B38()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2DE660 = v1;
  *(void *)algn_1EA2DE668 = v3;
}

void sub_1C2208C10()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2DE670 = v1;
  *(void *)algn_1EA2DE678 = v3;
}

id sub_1C2208CE8()
{
  uint64_t v1 = qword_1EA2DE6A8;
  uint64_t v2 = *(void **)(v0 + qword_1EA2DE6A8);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2DE6A8);
  }
  else
  {
    if (qword_1EA2DD4A8 != -1) {
      swift_once();
    }
    id v4 = objc_msgSend(objc_allocWithZone((Class)WDBrandLogoView), sel_initWithSize_, *(double *)&qword_1EA2DEA28);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2208DB4()
{
  uint64_t v1 = qword_1EA2DE6B0;
  uint64_t v2 = *(void **)(v0 + qword_1EA2DE6B0);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2DE6B0);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_linkButton);
    if (qword_1EA2DD458 != -1) {
      swift_once();
    }
    uint64_t v5 = (void *)sub_1C254F430();
    objc_msgSend(v4, sel_setTitle_forState_, v5, 0);

    objc_msgSend(v4, sel_addTarget_action_forControlEvents_, v0, sel_dontShareButtonTapped_, 64);
    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C2208EB4()
{
  uint64_t v1 = qword_1EA2DE6B8;
  uint64_t v2 = *(void **)(v0 + qword_1EA2DE6B8);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2DE6B8);
  }
  else
  {
    id v4 = sub_1C2208F18(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2208F18(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_accessoryButton);
  id v3 = self;
  id v4 = v2;
  id v5 = objc_msgSend(v3, sel_systemBlueColor);
  objc_msgSend(v4, sel_setTintColor_, v5);

  if (qword_1EA2DD448 != -1) {
    swift_once();
  }
  id v6 = (void *)sub_1C254F430();
  objc_msgSend(v4, sel_setTitle_forState_, v6, 0);

  objc_msgSend(v4, sel_addTarget_action_forControlEvents_, a1, sel_learnMoreTapped_, 64);
  return v4;
}

char *sub_1C2209038(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = sub_1C254E150();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v51 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  BOOL v12 = (char *)&v50 - v11;
  uint64_t v13 = qword_1EA2DE698;
  uint64_t v14 = qword_1EBB6D898;
  uint64_t v15 = v3;
  if (v14 != -1) {
    swift_once();
  }
  *(void *)&v3[v13] = qword_1EBB6EB60;
  *(void *)&v15[qword_1EA2DE6A0] = 0;
  *(void *)&v15[qword_1EA2DE6A8] = 0;
  *(void *)&v15[qword_1EA2DE6B0] = 0;
  *(void *)&v15[qword_1EA2DE6B8] = 0;
  *(void *)&v15[qword_1EA2DE680] = a1;
  *(void *)&v15[qword_1EA2DE688] = a2;
  *(void *)&v15[qword_1EA2DE690] = a3;
  swift_retain();
  uint64_t v16 = a1;
  id v52 = a2;
  swift_bridgeObjectRetain();

  id v53 = v16;
  id v17 = objc_msgSend(*(id *)&v16[OBJC_IVAR___WDClinicalAccountOnboardingSession_profile], sel_healthStore);
  id v18 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionConfirmationViewController(0));
  type metadata accessor for ClinicalSharingOnboardingSelectedDataTypesDataSource();
  swift_allocObject();
  uint64_t v19 = (char *)v18;
  id v20 = v17;
  *(void *)&v19[qword_1EA2DE6D0] = sub_1C229EC3C(v20, a3);

  swift_retain();
  uint64_t v21 = (void *)sub_1C254E0E0();

  char v22 = *(void (**)(char *, void, uint64_t))(v8 + 104);
  v22(v12, *MEMORY[0x1E4F666E0], v7);
  uint64_t result = (char *)objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v24 = result;
    unsigned int v25 = objc_msgSend(result, sel_isiPad);

    if (v25)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
      v22(v12, *MEMORY[0x1E4F666D8], v7);
    }
    uint64_t v26 = qword_1EA2DD438;
    uint64_t v27 = v21;
    if (v26 != -1) {
      swift_once();
    }
    uint64_t v28 = qword_1EA2DD440;
    swift_bridgeObjectRetain();
    if (v28 != -1) {
      swift_once();
    }
    uint64_t v29 = v8;
    id v30 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    id v50 = v12;
    v30(v51, v12, v7);
    swift_bridgeObjectRetain();
    uint64_t v31 = (char *)(id)sub_1C254E140();
    sub_1C2209780();
    id v32 = sub_1C2208CE8();
    id v51 = v27;
    id v33 = v52;
    id v34 = objc_msgSend(v52, sel_title);
    uint64_t v35 = sub_1C254F470();
    uint64_t v37 = v36;

    swift_beginAccess();
    swift_beginAccess();
    swift_retain();
    id v38 = sub_1C2538408(v35, v37, 60.0);
    swift_endAccess();
    swift_endAccess();
    swift_release();
    id v39 = objc_msgSend(v38, sel_scaledToTargetSize_, 60.0, 60.0);
    swift_bridgeObjectRelease();

    objc_msgSend(v32, sel_setImage_, v39);
    id v40 = objc_msgSend(*(id *)(*(void *)&v31[qword_1EA2DE680] + OBJC_IVAR___WDClinicalAccountOnboardingSession_profile), sel_healthStore);
    id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0A0]), sel_initWithHealthStore_, v40);

    id v42 = objc_msgSend(objc_allocWithZone((Class)WDClinicalSourcesDataProvider), sel_initWithHealthRecordsStore_, v41);
    id v43 = sub_1C2208CE8();
    objc_msgSend(v43, sel_fetchBrandable_dataProvider_, v33, v42);

    uint64_t v44 = qword_1EA2DD450;
    unint64_t v45 = v31;
    if (v44 != -1) {
      swift_once();
    }
    sub_1C254E050();

    id v46 = objc_msgSend(v45, sel_buttonTray);
    id v47 = sub_1C2208DB4();
    objc_msgSend(v46, sel_addButton_, v47);

    id v48 = objc_msgSend(v45, sel_headerView);
    id v49 = sub_1C2208EB4();
    objc_msgSend(v48, sel_addAccessoryButton_, v49);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v50, v7);
    return v45;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C22096CC(void *a1)
{
  v3.receiver = a1;
  v3.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionViewController(0);
  uint64_t v1 = (char *)v3.receiver;
  objc_msgSendSuper2(&v3, sel_viewDidLoad);
  if (*(void *)(*(void *)&v1[qword_1EA2DE680] + OBJC_IVAR___WDClinicalAccountOnboardingSession_context) == 2)
  {
    id v2 = objc_msgSend(v1, sel_navigationItem, v3.receiver, v3.super_class);
    objc_msgSend(v2, sel_setRightBarButtonItem_, 0);
  }
  sub_1C2209A34();
}

void sub_1C2209780()
{
  id v1 = objc_msgSend(v0, sel_headerView);
  id v2 = objc_msgSend(v1, sel_customIconContainerView);

  if (v2)
  {
    objc_msgSend(v2, sel_setClipsToBounds_, 0);
    id v3 = sub_1C2208CE8();
    objc_msgSend(v2, sel_addSubview_, v3);

    id v4 = sub_1C2208CE8();
    id v5 = objc_msgSend(v4, sel_widthAnchor);

    if (qword_1EA2DD4A8 != -1) {
      swift_once();
    }
    id v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, *(double *)&qword_1EA2DEA28);

    objc_msgSend(v6, sel_setActive_, 1);
    id v7 = sub_1C2208CE8();
    id v8 = objc_msgSend(v7, sel_heightAnchor);

    id v9 = objc_msgSend(v8, sel_constraintEqualToConstant_, *(double *)&qword_1EA2DEA28);
    objc_msgSend(v9, sel_setActive_, 1);

    id v10 = sub_1C2208CE8();
    id v11 = objc_msgSend(v10, sel_centerXAnchor);

    id v12 = objc_msgSend(v2, sel_centerXAnchor);
    id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

    objc_msgSend(v13, sel_setActive_, 1);
    id v14 = sub_1C2208CE8();
    id v15 = objc_msgSend(v14, sel_centerYAnchor);

    id v16 = objc_msgSend(v2, sel_centerYAnchor);
    id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

    objc_msgSend(v17, sel_setActive_, 1);
  }
}

void sub_1C2209A34()
{
  sub_1C2201F2C();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C255CDA0;
  *(void *)(v1 + 32) = sub_1C254F470();
  *(void *)(v1 + 40) = v2;
  strcpy((char *)(v1 + 48), "ChosenToShare");
  *(_WORD *)(v1 + 62) = -4864;
  id v3 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v4)
  {
    uint64_t v5 = sub_1C254F470();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = objc_msgSend(v0, sel_navigationItem, 2, 4);
  id v9 = objc_msgSend(v8, sel_leftBarButtonItem);

  if (v9)
  {
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v29;
    if (!v7)
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    *(void *)(v10 + 32) = v5;
    *(void *)(v10 + 40) = v7;
    *(void *)(v10 + 48) = 1801675074;
    *(void *)(v10 + 56) = 0xE400000000000000;
    swift_bridgeObjectRetain();
    id v11 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v12 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v12);
  }
  id v13 = objc_msgSend(v0, sel_navigationItem);
  id v14 = objc_msgSend(v13, sel_rightBarButtonItem);

  if (v14)
  {
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = v29;
    if (!v7)
    {
LABEL_18:
      __break(1u);
      return;
    }
    *(void *)(v15 + 32) = v5;
    *(void *)(v15 + 40) = v7;
    *(void *)(v15 + 48) = 0x6C65636E6143;
    *(void *)(v15 + 56) = 0xE600000000000000;
    swift_bridgeObjectRetain();
    id v16 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v17 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v14, sel_setAccessibilityIdentifier_, v17);
  }
  id v18 = sub_1C2208EB4();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = v29;
  if (!v7)
  {
    __break(1u);
    goto LABEL_16;
  }
  *(void *)(v19 + 32) = v5;
  *(void *)(v19 + 40) = v7;
  *(void *)(v19 + 48) = 0x726F4D6E7261654CLL;
  *(void *)(v19 + 56) = 0xE900000000000065;
  swift_bridgeObjectRetain();
  id v20 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v21 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v18, sel_setAccessibilityIdentifier_, v21);
  id v22 = sub_1C2208DB4();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v29;
  *(void *)(v23 + 32) = v5;
  *(void *)(v23 + 40) = v7;
  *(void *)(v23 + 48) = 0x72616853746E6F44;
  *(void *)(v23 + 56) = 0xE900000000000065;
  swift_bridgeObjectRetain();
  uint64_t v24 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v25 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v22, sel_setAccessibilityIdentifier_, v25);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v29;
  *(void *)(v26 + 32) = v5;
  *(void *)(v26 + 40) = v7;
  *(void *)(v26 + 48) = 0x6572616853;
  *(void *)(v26 + 56) = 0xE500000000000000;
  uint64_t v27 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v28 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1C254F470();

  sub_1C254E040();
  swift_bridgeObjectRelease();
}

void sub_1C2209E94()
{
  uint64_t v1 = *(void **)&v0[qword_1EA2DE680];
  uint64_t v2 = *(void **)&v0[qword_1EA2DE688];
  uint64_t v3 = *(void *)&v0[qword_1EA2DE690];
  id v4 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingOnboardingSharingHealthDataViewController());
  uint64_t v5 = v1;
  id v6 = v2;
  swift_bridgeObjectRetain();
  id v7 = sub_1C2460888(v5, v6, v3);
  id v8 = objc_msgSend(v0, sel_navigationController);
  if (v8)
  {
    id v9 = v8;
    objc_msgSend(v8, sel_pushViewController_animated_, v7, 1);
  }
  uint64_t v10 = *(void **)&v5[OBJC_IVAR___WDClinicalAccountOnboardingSession_sharingClient];
  id v11 = (void *)sub_1C254F430();
  sub_1C22CC2DC(*(void *)&v5[OBJC_IVAR___WDClinicalAccountOnboardingSession_context]);
  id v12 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  v14[4] = nullsub_1;
  v14[5] = 0;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  v14[2] = sub_1C22AE944;
  v14[3] = &block_descriptor_8;
  id v13 = _Block_copy(v14);
  objc_msgSend(v10, sel_submitOnboardingAnalyticsForStepIdentifier_context_completion_, v11, v12, v13);
  _Block_release(v13);
}

uint64_t sub_1C220A050(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C220A704(a1, a2, a3, (void (*)(uint64_t))sub_1C2209E94);
}

void sub_1C220A068()
{
  if (qword_1EA2DD460 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EA2DD468;
  swift_bridgeObjectRetain();
  if (v1 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v2, v3, 1);

  if (qword_1EA2DD470 != -1) {
    swift_once();
  }
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  id v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  v12[4] = sub_1C220AE28;
  v12[5] = v5;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1C224DAAC;
  uint64_t v12[3] = &block_descriptor_5;
  id v7 = _Block_copy(v12);
  swift_release();
  id v8 = self;
  id v9 = objc_msgSend(v8, sel_actionWithTitle_style_handler_, v6, 2, v7);
  _Block_release(v7);
  swift_release();

  if (qword_1EA2DD478 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v8, sel_actionWithTitle_style_handler_, v10, 0, 0);

  objc_msgSend(v4, sel_addAction_, v9);
  objc_msgSend(v4, sel_addAction_, v11);
  objc_msgSend(v0, sel_presentViewController_animated_completion_, v4, 1, 0);
}

void sub_1C220A3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = (void *)MEMORY[0x1C875A200](v2);
  if (v3)
  {
    id v4 = v3;
    objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);
  }
}

uint64_t sub_1C220A404(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C220A704(a1, a2, a3, (void (*)(uint64_t))sub_1C220A068);
}

void sub_1C220A41C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1C254E560();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (void *)sub_1C254F430();
  id v16 = objc_msgSend(self, sel_presenterForPrivacySplashWithIdentifier_, v7);

  if (v16)
  {
    objc_msgSend(v16, sel_setPresentingViewController_, v1);
    objc_msgSend(v16, sel_present);
    id v8 = v16;
  }
  else
  {
    sub_1C254E510();
    id v9 = sub_1C254E550();
    os_log_type_t v10 = sub_1C254FA20();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      id v16 = (id)swift_slowAlloc();
      id v17 = v16;
      *(_DWORD *)uint64_t v11 = 136446466;
      uint64_t v18 = ObjectType;
      swift_getMetatypeMetadata();
      uint64_t v12 = sub_1C254F4F0();
      uint64_t v18 = sub_1C21AD354(v12, v13, (uint64_t *)&v17);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2082;
      uint64_t v18 = sub_1C21AD354(0xD00000000000001ELL, 0x80000001C2575530, (uint64_t *)&v17);
      sub_1C2550120();
      _os_log_impl(&dword_1C21A1000, v9, v10, "[%{public}s]: Could not show privacy splash for %{public}s", (uint8_t *)v11, 0x16u);
      id v14 = v16;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v14, -1, -1);
      MEMORY[0x1C875A0B0](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1C220A6EC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C220A704(a1, a2, a3, (void (*)(uint64_t))sub_1C220A41C);
}

uint64_t sub_1C220A704(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v6 = a1;
  sub_1C25501E0();
  uint64_t v7 = swift_unknownObjectRelease();
  a4(v7);

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v9);
}

void sub_1C220A778()
{
}

void sub_1C220A7A8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  uint64_t v1 = *(void **)(v0 + qword_1EA2DE6B8);
}

id sub_1C220A848()
{
  return sub_1C220AD34(type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionViewController);
}

void sub_1C220A860(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  uint64_t v2 = *(void **)(a1 + qword_1EA2DE6B8);
}

uint64_t sub_1C220A90C()
{
  return type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionViewController(0);
}

uint64_t type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionConfirmationViewController(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DE6D8);
}

uint64_t sub_1C220A934(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C220A96C()
{
  return swift_initClassMetadata2();
}

void sub_1C220A9BC()
{
}

void sub_1C220AA18()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionConfirmationViewController(0);
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(self, sel_systemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

    id v4 = objc_msgSend(v0, sel_collectionView);
    if (v4)
    {
      uint64_t v5 = v4;
      objc_msgSend(v4, sel_setPreservesSuperviewLayoutMargins_, 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C220AAF8(void *a1)
{
  id v1 = a1;
  sub_1C220AA18();
}

void sub_1C220AB40()
{
  id v1 = v0;
  sub_1C254E100();
  uint64_t v2 = (void (*)(void))sub_1C254E110();
  v2();
  id v3 = objc_msgSend(v0, sel_collectionView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v4 = v3;
  sub_1C254DFE0();
  sub_1C254FAF0();

  id v5 = objc_msgSend(v1, sel_collectionView);
  if (!v5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  objc_super v6 = v5;
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  sub_1C220AD90();
  sub_1C254FAD0();

  id v7 = objc_msgSend(v1, sel_collectionView);
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v8 = v7;
  sub_1C254D4E0();
  sub_1C254FAD0();

  id v9 = objc_msgSend(v1, sel_collectionView);
  if (!v9)
  {
LABEL_11:
    __break(1u);
    return;
  }
  sub_1C254DBB0();
  sub_1C254FAF0();
}

void sub_1C220ACA8()
{
}

void sub_1C220ACD8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C220AD0C()
{
  return swift_release();
}

id sub_1C220AD1C()
{
  return sub_1C220AD34(type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionConfirmationViewController);
}

id sub_1C220AD34(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1C220AD74()
{
  return swift_release();
}

uint64_t sub_1C220AD84()
{
  return type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionConfirmationViewController(0);
}

unint64_t sub_1C220AD90()
{
  unint64_t result = qword_1EA2DE6E8;
  if (!qword_1EA2DE6E8)
  {
    type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DE6E8);
  }
  return result;
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1C220ADF0()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C220AE28(uint64_t a1)
{
  sub_1C220A3A0(a1, v1);
}

uint64_t sub_1C220AE94()
{
  uint64_t v1 = v0;
  v59.receiver = v0;
  v59.super_class = (Class)type metadata accessor for SignedClinicalDataMultiRecordViewController();
  objc_msgSendSuper2(&v59, sel_viewDidLoad);
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  objc_super v3 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v3, 0xE000000000000000);

  id v4 = objc_msgSend(v0, sel_tableView);
  if (!v4)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  id v5 = v4;
  objc_msgSend(v4, sel_setAllowsSelection_, 0);

  id v6 = objc_msgSend(v0, sel_tableView);
  if (!v6)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  id v7 = v6;
  type metadata accessor for RecordPrimaryTitleCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v9 = (void *)sub_1C254F430();
  objc_msgSend(v7, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v9);

  id v10 = objc_msgSend(v1, sel_tableView);
  if (!v10)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v11 = v10;
  type metadata accessor for RecordDetailItemCell();
  uint64_t v12 = swift_getObjCClassFromMetadata();
  unint64_t v13 = (void *)sub_1C254F430();
  objc_msgSend(v11, sel_registerClass_forCellReuseIdentifier_, v12, v13);

  id v14 = objc_msgSend(v1, sel_tableView);
  if (v14)
  {
    uint64_t v15 = v14;
    type metadata accessor for RecordReferenceRangeCell();
    uint64_t v16 = swift_getObjCClassFromMetadata();
    id v17 = (void *)sub_1C254F430();
    objc_msgSend(v15, sel_registerClass_forCellReuseIdentifier_, v16, v17);

    unint64_t v18 = *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_medicalRecords];
    if ((v18 & 0x8000000000000000) != 0 || (v18 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v19 = (uint64_t)sub_1C228F9D8(v18);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = v18 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
    }
    aBlock[0] = v19;
    sub_1C220C620(aBlock);
    swift_bridgeObjectRelease();
    uint64_t v20 = aBlock[0];
    if (aBlock[0] < 0 || (aBlock[0] & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1C2550620();
      swift_release();
      if (v21) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v21 = *(void *)(aBlock[0] + 16);
      if (v21)
      {
LABEL_13:
        if (v21 >= 1)
        {
          uint64_t v22 = 0;
          unint64_t v53 = v20 & 0xC000000000000001;
          id v54 = *(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_profile];
          uint64_t v55 = v21;
          uint64_t v51 = v20;
          id v52 = v1;
          do
          {
            if (v53) {
              id v23 = (id)MEMORY[0x1C87588E0](v22, v20);
            }
            else {
              id v23 = *(id *)(v20 + 8 * v22 + 32);
            }
            uint64_t v24 = v23;
            uint64_t v25 = swift_allocObject();
            *(void *)(v25 + 16) = MEMORY[0x1E4FBC860];
            uint64_t v26 = (void *)(v25 + 16);
            id v27 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
            id v28 = objc_msgSend(v24, sel_meaningfulDateTitle);
            uint64_t v29 = sub_1C254F470();
            unint64_t v31 = v30;

            objc_msgSend(v27, sel_setDisplayItemType_, 4);
            id v32 = objc_msgSend(v24, sel_preferredDisplayName);
            objc_msgSend(v27, sel_setTitle_, v32);

            uint64_t v33 = HIBYTE(v31) & 0xF;
            if ((v31 & 0x2000000000000000) == 0) {
              uint64_t v33 = v29 & 0xFFFFFFFFFFFFLL;
            }
            id v57 = v24;
            if (v33)
            {
              uint64_t v56 = v25;
              if (qword_1EBB6EF40 != -1) {
                swift_once();
              }
              id v34 = (id)qword_1EBB6FBC8;
              swift_bridgeObjectRetain();
              sub_1C254C730();
              swift_bridgeObjectRelease();

              sub_1C220DA8C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
              uint64_t v35 = swift_allocObject();
              *(_OWORD *)(v35 + 16) = xmmword_1C255CDA0;
              uint64_t v36 = MEMORY[0x1E4FBB1A0];
              *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
              unint64_t v37 = sub_1C220D950();
              *(void *)(v35 + 64) = v37;
              *(void *)(v35 + 32) = v29;
              *(void *)(v35 + 40) = v31;
              id v38 = objc_msgSend(v24, sel_meaningfulDateString, 0xE000000000000000);
              uint64_t v39 = sub_1C254F470();
              uint64_t v41 = v40;

              *(void *)(v35 + 96) = v36;
              *(void *)(v35 + 104) = v37;
              *(void *)(v35 + 72) = v39;
              *(void *)(v35 + 80) = v41;
              sub_1C254F4B0();
              swift_bridgeObjectRelease();
              uint64_t v20 = v51;
              uint64_t v1 = v52;
              uint64_t v25 = v56;
            }
            else
            {
              swift_bridgeObjectRelease();
              id v42 = objc_msgSend(v24, sel_meaningfulDateString);
              sub_1C254F470();
            }
            id v43 = (void *)sub_1C254F430();
            swift_bridgeObjectRelease();
            objc_msgSend(v27, sel_setSubtitle_, v43);

            swift_beginAccess();
            id v44 = v27;
            MEMORY[0x1C8757C00]();
            if (*(void *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C254F760();
            }
            ++v22;
            sub_1C254F790();
            sub_1C254F730();
            swift_endAccess();
            id v45 = objc_msgSend(v54, sel_healthRecordsStore);
            id v46 = objc_msgSend(v54, sel_conceptStore);
            uint64_t v47 = swift_allocObject();
            *(void *)(v47 + 16) = v25;
            *(void *)(v47 + 24) = v1;
            aBlock[4] = (uint64_t)sub_1C220D9E4;
            aBlock[5] = v47;
            aBlock[0] = MEMORY[0x1E4F143A8];
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_1C2238754;
            aBlock[3] = (uint64_t)&block_descriptor_9;
            id v48 = _Block_copy(aBlock);
            swift_retain();
            id v49 = v1;
            swift_release();
            objc_msgSend(v57, sel_fetchDetailItemsWithHealthRecordsStore_conceptStore_completion_, v45, v46, v48);
            _Block_release(v48);

            swift_release();
          }
          while (v55 != v22);
          return swift_release();
        }
        __break(1u);
        goto LABEL_33;
      }
    }
    return swift_release();
  }
LABEL_36:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_1C220B698(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4 = sub_1C254F1C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254F200();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v12 = swift_bridgeObjectRetain();
  sub_1C22723E8(v12);
  swift_endAccess();
  swift_beginAccess();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  swift_bridgeObjectRetain();
  unint64_t v13 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_displayItemGroupWithDisplayItems_, v13);

  if (v14)
  {
    uint64_t v15 = &a3[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_displayGroups];
    uint64_t v16 = swift_beginAccess();
    MEMORY[0x1C8757C00](v16);
    if (*(void *)((*(void *)v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v15 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      sub_1C254F760();
    sub_1C254F790();
    sub_1C254F730();
    swift_endAccess();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    id v17 = (void *)sub_1C254FC70();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a3;
    aBlock[4] = sub_1C220DA2C;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_12;
    uint64_t v19 = _Block_copy(aBlock);
    uint64_t v20 = a3;
    swift_release();
    sub_1C254F1E0();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1C220DA34();
    sub_1C220DA8C(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C21FFDEC();
    sub_1C2550200();
    MEMORY[0x1C87581B0](0, v11, v7, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C220BA74(void *a1)
{
  id v1 = objc_msgSend(a1, sel_tableView);
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v1, sel_reloadData);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C220BCB8(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = sub_1C254CD80();
  uint64_t v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_displayGroups);
  unint64_t v10 = swift_beginAccess();
  uint64_t v11 = *v9;
  if ((v11 & 0xC000000000000001) == 0)
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v12 = *(id *)(v11 + 8 * v8 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  id v12 = (id)MEMORY[0x1C87588E0](v8, v11);
  swift_bridgeObjectRelease();
LABEL_5:
  id v13 = objc_msgSend(v12, sel_displayItems);

  if (!v13)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  uint64_t v11 = sub_1C254F710();

  unint64_t v10 = sub_1C254CD60();
  if ((v11 & 0xC000000000000001) != 0)
  {
LABEL_28:
    id v14 = (id)MEMORY[0x1C87588E0](v10, v11);
    goto LABEL_10;
  }
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v10 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  id v14 = *(id *)(v11 + 8 * v10 + 32);
LABEL_10:
  id v15 = v14;
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v15, sel_displayItemType);
  if (v16 == (id)15)
  {
    uint64_t v25 = (void *)sub_1C254F430();
    uint64_t v26 = (void *)sub_1C254CD30();
    id v27 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v25, v26);

    type metadata accessor for RecordDetailItemCell();
    uint64_t v28 = swift_dynamicCastClassUnconditional();
    id v29 = *(id *)(v28 + OBJC_IVAR____TtC15HealthRecordsUI20RecordDetailItemCell_titleLabel);
    id v30 = objc_msgSend(v15, sel_title);
    objc_msgSend(v29, sel_setText_, v30);

    id v23 = *(id *)(v28 + OBJC_IVAR____TtC15HealthRecordsUI20RecordDetailItemCell_bodyLabel);
    id v24 = objc_msgSend(v15, sel_subtitle);
    goto LABEL_15;
  }
  if (v16 == (id)6)
  {
    id v32 = (void *)sub_1C254F430();
    uint64_t v33 = (void *)sub_1C254CD30();
    id v34 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v32, v33);

    type metadata accessor for RecordReferenceRangeCell();
    uint64_t v35 = swift_dynamicCastClassUnconditional();
    id v36 = objc_msgSend(v15, sel_chartValueWithRange);
    unint64_t v37 = (void **)(v35 + OBJC_IVAR____TtC15HealthRecordsUI24RecordReferenceRangeCell_valueInRange);
    swift_beginAccess();
    id v38 = *v37;
    *unint64_t v37 = v36;
    id v39 = v36;

    sub_1C2535008();
    id v31 = v15;
    id v15 = v39;
    goto LABEL_17;
  }
  if (v16 == (id)4)
  {
    id v17 = (void *)sub_1C254F430();
    uint64_t v18 = (void *)sub_1C254CD30();
    id v19 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v17, v18);

    type metadata accessor for RecordPrimaryTitleCell();
    uint64_t v20 = swift_dynamicCastClassUnconditional();
    id v21 = *(id *)(v20 + OBJC_IVAR____TtC15HealthRecordsUI22RecordPrimaryTitleCell_recordTitleLabel);
    id v22 = objc_msgSend(v15, sel_title);
    objc_msgSend(v21, sel_setText_, v22);

    id v23 = *(id *)(v20 + OBJC_IVAR____TtC15HealthRecordsUI22RecordPrimaryTitleCell_recordDateLabel);
    id v24 = objc_msgSend(v15, sel_subtitle);
LABEL_15:
    id v31 = v24;
    objc_msgSend(v23, sel_setText_, v31);

LABEL_17:
LABEL_24:

    return;
  }
  sub_1C254E510();
  id v15 = v15;
  uint64_t v40 = sub_1C254E550();
  os_log_type_t v41 = sub_1C254FA20();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    v53[0] = v50;
    *(_DWORD *)uint64_t v42 = 136315394;
    uint64_t v51 = v5;
    uint64_t v43 = sub_1C2550AA0();
    uint64_t v54 = sub_1C21AD354(v43, v44, v53);
    uint64_t v52 = ObjectType;
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2048;
    id v45 = objc_msgSend(v15, sel_displayItemType);

    uint64_t v54 = (uint64_t)v45;
    sub_1C2550120();

    _os_log_impl(&dword_1C21A1000, v40, v41, "[%s]: displayItemType %ld not supported", (uint8_t *)v42, 0x16u);
    uint64_t v46 = v50;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v46, -1, -1);
    MEMORY[0x1C875A0B0](v42, -1, -1);

    (*(void (**)(char *, uint64_t))(v51 + 8))(v7, v4);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v48 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v48)
  {
    sub_1C254F470();
    id v48 = (NSString *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  id v49 = (id)HKErrorTableViewCell();

  if (v49) {
    goto LABEL_24;
  }
LABEL_32:
  __break(1u);
}

id sub_1C220C56C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignedClinicalDataMultiRecordViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SignedClinicalDataMultiRecordViewController()
{
  return self;
}

uint64_t sub_1C220C620(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C23F5310();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C220C69C(v6);
  return sub_1C2550470();
}

void sub_1C220C69C(uint64_t *a1)
{
  uint64_t v138 = sub_1C254CAD0();
  uint64_t v2 = *(void *)(v138 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v138);
  uint64_t v137 = (char *)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v136 = (char *)&v123 - v5;
  uint64_t v6 = a1[1];
  uint64_t v7 = sub_1C2550800();
  if (v7 >= v6)
  {
    if (v6 < 0) {
      goto LABEL_133;
    }
    if (v6) {
      sub_1C220D0DC(0, v6, 1, a1);
    }
    return;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_141;
  }
  uint64_t v128 = v7;
  id v124 = a1;
  if (v6 < 2)
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v141 = MEMORY[0x1E4FBC860];
    uint64_t v133 = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      unint64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_100:
      uint64_t v114 = v134;
      if (v14 >= 2)
      {
        uint64_t v115 = *v124;
        do
        {
          unint64_t v116 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_128;
          }
          if (!v115) {
            goto LABEL_140;
          }
          uint64_t v117 = v11;
          id v118 = v11 + 32;
          uint64_t v119 = *(void *)&v11[16 * v116 + 32];
          uint64_t v120 = *(void *)&v11[16 * v14 + 24];
          sub_1C220D348((void **)(v115 + 8 * v119), (id *)(v115 + 8 * *(void *)&v118[16 * v14 - 16]), (id *)(v115 + 8 * v120), v133);
          if (v114) {
            break;
          }
          if (v120 < v119) {
            goto LABEL_129;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v117 = sub_1C23F321C((uint64_t)v117);
          }
          if (v116 >= *((void *)v117 + 2)) {
            goto LABEL_130;
          }
          id v121 = &v117[16 * v116 + 32];
          *(void *)id v121 = v119;
          *((void *)v121 + 1) = v120;
          unint64_t v122 = *((void *)v117 + 2);
          if (v14 > v122) {
            goto LABEL_131;
          }
          uint64_t v11 = v117;
          memmove(&v117[16 * v14 + 16], &v117[16 * v14 + 32], 16 * (v122 - v14));
          *((void *)v117 + 2) = v122 - 1;
          unint64_t v14 = v122 - 1;
        }
        while (v122 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(void *)((v141 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C254F730();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1C21AB51C(0, &qword_1EBB6F978);
    uint64_t v10 = sub_1C254F780();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    uint64_t v133 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v141 = v10;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  id v135 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v125 = v13 - 8;
  uint64_t v126 = v13 + 16;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v130 = (void *)v6;
  uint64_t v139 = v13;
  while (1)
  {
    uint64_t v15 = v12++;
    uint64_t v131 = v15;
    if (v12 < v6)
    {
      id v16 = *(void **)(v13 + 8 * v15);
      id v17 = *(id *)(v13 + 8 * v12);
      id v129 = v17;
      id v18 = v16;
      id v19 = objc_msgSend(v17, sel_sortDate);
      id v20 = objc_msgSend(v19, sel_date);

      id v21 = v136;
      sub_1C254CA80();

      id v22 = objc_msgSend(v18, sel_sortDate);
      uint64_t v15 = v131;
      id v23 = objc_msgSend(v22, sel_date);

      id v24 = v137;
      sub_1C254CA80();

      uint64_t v6 = (uint64_t)v130;
      LODWORD(v140) = sub_1C254CA60();
      uint64_t v25 = (char *)*v135;
      uint64_t v26 = v24;
      uint64_t v27 = v138;
      (*v135)(v26, v138);
      uint64_t v132 = v25;
      ((void (*)(char *, uint64_t))v25)(v21, v27);

      uint64_t v12 = v15 + 2;
      if (v15 + 2 < v6)
      {
        unint64_t v127 = v11;
        uint64_t v28 = (id *)(v126 + 8 * v15);
        while (1)
        {
          id v29 = *(v28 - 1);
          id v30 = *v28;
          id v31 = v29;
          id v32 = objc_msgSend(v30, sel_sortDate);
          id v33 = objc_msgSend(v32, sel_date);

          id v34 = v136;
          sub_1C254CA80();

          id v35 = objc_msgSend(v31, sel_sortDate);
          id v36 = objc_msgSend(v35, sel_date);

          unint64_t v37 = v137;
          sub_1C254CA80();

          LODWORD(v35) = sub_1C254CA60();
          id v38 = v37;
          uint64_t v39 = v138;
          uint64_t v40 = (void (*)(char *, uint64_t))v132;
          ((void (*)(char *, uint64_t))v132)(v38, v138);
          v40(v34, v39);

          if ((v140 ^ v35)) {
            break;
          }
          ++v12;
          ++v28;
          uint64_t v6 = (uint64_t)v130;
          if (v130 == (void *)v12)
          {
            uint64_t v12 = (uint64_t)v130;
            uint64_t v11 = v127;
            goto LABEL_22;
          }
        }
        uint64_t v11 = v127;
        uint64_t v6 = (uint64_t)v130;
LABEL_22:
        uint64_t v15 = v131;
      }
      uint64_t v13 = v139;
      if (v140)
      {
        if (v12 < v15) {
          goto LABEL_134;
        }
        if (v15 < v12)
        {
          os_log_type_t v41 = (uint64_t *)(v125 + 8 * v12);
          uint64_t v42 = v12;
          uint64_t v43 = v15;
          unint64_t v44 = (uint64_t *)(v139 + 8 * v15);
          do
          {
            if (v43 != --v42)
            {
              if (!v13) {
                goto LABEL_139;
              }
              uint64_t v45 = *v44;
              uint64_t *v44 = *v41;
              *os_log_type_t v41 = v45;
            }
            ++v43;
            --v41;
            ++v44;
          }
          while (v43 < v42);
        }
      }
    }
    if (v12 < v6)
    {
      if (__OFSUB__(v12, v15)) {
        goto LABEL_132;
      }
      if (v12 - v15 < v128) {
        break;
      }
    }
LABEL_50:
    if (v12 < v15) {
      goto LABEL_127;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C23F277C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v63 = *((void *)v11 + 2);
    unint64_t v62 = *((void *)v11 + 3);
    unint64_t v14 = v63 + 1;
    uint64_t v13 = v139;
    if (v63 >= v62 >> 1)
    {
      uint64_t v113 = sub_1C23F277C((char *)(v62 > 1), v63 + 1, 1, v11);
      uint64_t v13 = v139;
      uint64_t v11 = v113;
    }
    *((void *)v11 + 2) = v14;
    uint64_t v64 = v11 + 32;
    id v65 = &v11[16 * v63 + 32];
    *(void *)id v65 = v15;
    *((void *)v65 + 1) = v12;
    if (v63)
    {
      while (1)
      {
        unint64_t v66 = v14 - 1;
        if (v14 >= 4)
        {
          uint64_t v71 = &v64[16 * v14];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_116;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_117;
          }
          unint64_t v78 = v14 - 2;
          uint64_t v79 = &v64[16 * v14 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_119;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_122;
          }
          if (v83 >= v74)
          {
            unint64_t v101 = &v64[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_126;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_87;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v95 = *((void *)v11 + 4);
            uint64_t v96 = *((void *)v11 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_81;
          }
          uint64_t v68 = *((void *)v11 + 4);
          uint64_t v67 = *((void *)v11 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_118;
        }
        unint64_t v78 = v14 - 2;
        id v84 = &v64[16 * v14 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_121;
        }
        uint64_t v90 = &v64[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_124;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_125;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_87:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v89) {
          goto LABEL_120;
        }
        os_log_type_t v97 = &v64[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_123;
        }
        if (v100 < v88) {
          goto LABEL_14;
        }
LABEL_89:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v14)
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        if (!v13) {
          goto LABEL_138;
        }
        id v106 = v11;
        unint64_t v107 = &v64[16 * v105];
        uint64_t v108 = *(void *)v107;
        v109 = &v64[16 * v66];
        uint64_t v110 = *((void *)v109 + 1);
        uint64_t v111 = v134;
        sub_1C220D348((void **)(v13 + 8 * *(void *)v107), (id *)(v13 + 8 * *(void *)v109), (id *)(v13 + 8 * v110), v133);
        uint64_t v134 = v111;
        if (v111) {
          goto LABEL_111;
        }
        if (v110 < v108) {
          goto LABEL_113;
        }
        if (v66 > *((void *)v106 + 2)) {
          goto LABEL_114;
        }
        *(void *)unint64_t v107 = v108;
        *(void *)&v64[16 * v105 + 8] = v110;
        unint64_t v112 = *((void *)v106 + 2);
        if (v66 >= v112) {
          goto LABEL_115;
        }
        uint64_t v11 = v106;
        unint64_t v14 = v112 - 1;
        memmove(&v64[16 * v66], v109 + 16, 16 * (v112 - 1 - v66));
        *((void *)v106 + 2) = v112 - 1;
        uint64_t v13 = v139;
        if (v112 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_14:
    uint64_t v6 = (uint64_t)v130;
    if (v12 >= (uint64_t)v130) {
      goto LABEL_100;
    }
  }
  if (__OFADD__(v15, v128)) {
    goto LABEL_135;
  }
  if (v15 + v128 >= v6) {
    id v46 = (id)v6;
  }
  else {
    id v46 = (id)(v15 + v128);
  }
  if ((uint64_t)v46 >= v15)
  {
    if ((id)v12 != v46)
    {
      unint64_t v127 = v11;
      uint64_t v47 = (char *)(v125 + 8 * v12);
      id v129 = v46;
      do
      {
        id v48 = *(void **)(v13 + 8 * v12);
        uint64_t v132 = v47;
        while (1)
        {
          id v49 = *(void **)v47;
          id v50 = v48;
          id v140 = v50;
          id v51 = v49;
          id v52 = objc_msgSend(v50, sel_sortDate);
          id v53 = objc_msgSend(v52, sel_date);

          uint64_t v54 = v136;
          sub_1C254CA80();

          id v55 = objc_msgSend(v51, sel_sortDate);
          id v56 = objc_msgSend(v55, sel_date);

          id v57 = v137;
          sub_1C254CA80();

          LOBYTE(v55) = sub_1C254CA60();
          uint64_t v58 = *v135;
          objc_super v59 = v57;
          uint64_t v60 = v138;
          (*v135)(v59, v138);
          v58(v54, v60);

          if ((v55 & 1) == 0) {
            break;
          }
          uint64_t v13 = v139;
          if (!v139) {
            goto LABEL_137;
          }
          uint64_t v61 = *(void *)v47;
          id v48 = (void *)*((void *)v47 + 1);
          *(void *)uint64_t v47 = v48;
          *((void *)v47 + 1) = v61;
          v47 -= 8;
          if (v12 == ++v15) {
            goto LABEL_43;
          }
        }
        uint64_t v13 = v139;
LABEL_43:
        ++v12;
        uint64_t v15 = v131;
        uint64_t v47 = v132 + 8;
      }
      while ((id)v12 != v129);
      uint64_t v12 = (uint64_t)v129;
      uint64_t v11 = v127;
    }
    goto LABEL_50;
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  sub_1C25505E0();
  __break(1u);
}

void sub_1C220D0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v31 = a1;
  uint64_t v36 = sub_1C254CAD0();
  uint64_t v7 = MEMORY[0x1F4188790](v36);
  id v35 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v34 = (char *)&v29 - v10;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v11 = *a4;
    id v33 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v37 = v11;
    uint64_t v12 = v11 + 8 * a3 - 8;
LABEL_5:
    uint64_t v13 = *(void **)(v37 + 8 * a3);
    uint64_t v14 = v31;
    uint64_t v32 = v12;
    uint64_t v38 = a3;
    while (1)
    {
      uint64_t v15 = *(void **)v12;
      id v16 = v13;
      id v17 = v15;
      id v18 = objc_msgSend(v16, sel_sortDate);
      id v19 = objc_msgSend(v18, sel_date);

      id v20 = v34;
      sub_1C254CA80();

      id v21 = objc_msgSend(v17, sel_sortDate);
      id v22 = objc_msgSend(v21, sel_date);

      id v23 = v35;
      sub_1C254CA80();

      LOBYTE(v21) = sub_1C254CA60();
      id v24 = *v33;
      uint64_t v25 = v23;
      uint64_t v26 = v36;
      (*v33)(v25, v36);
      v24(v20, v26);
      uint64_t v27 = v38;

      if ((v21 & 1) == 0)
      {
LABEL_4:
        a3 = v27 + 1;
        uint64_t v12 = v32 + 8;
        if (a3 == v30) {
          return;
        }
        goto LABEL_5;
      }
      if (!v37) {
        break;
      }
      uint64_t v28 = *(void **)v12;
      uint64_t v13 = *(void **)(v12 + 8);
      *(void *)uint64_t v12 = v13;
      *(void *)(v12 + 8) = v28;
      v12 -= 8;
      if (v27 == ++v14) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C220D348(void **a1, id *a2, id *a3, void **a4)
{
  uint64_t v62 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v62 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v62);
  uint64_t v61 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  objc_super v59 = a3;
  uint64_t v60 = (char *)&v53 - v11;
  uint64_t v12 = (char *)a2 - (char *)a1;
  uint64_t v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0) {
    uint64_t v13 = (char *)a2 - (char *)a1;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v15 = (char *)a3 - (char *)a2;
  uint64_t v16 = v15 / 8;
  unint64_t v63 = a1;
  unint64_t v66 = a1;
  id v65 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7) {
      goto LABEL_43;
    }
    if (a4 != a2 || &a2[v16] <= a4) {
      memmove(a4, a2, 8 * v16);
    }
    id v33 = &a4[v16];
    uint64_t v64 = v33;
    unint64_t v66 = a2;
    if (v15 < 8 || v63 >= a2) {
      goto LABEL_42;
    }
    uint64_t v54 = (void (**)(char *, uint64_t))(v8 + 8);
    id v55 = a4;
    id v34 = v59 - 1;
    id v35 = a2;
    while (1)
    {
      uint64_t v58 = v33;
      objc_super v59 = v34 + 1;
      uint64_t v38 = *--v33;
      uint64_t v37 = v38;
      uint64_t v39 = *--v35;
      uint64_t v40 = v37;
      id v57 = (void (**)(char *, uint64_t))v40;
      id v41 = v39;
      id v56 = v41;
      id v42 = objc_msgSend(v40, sel_sortDate);
      id v43 = objc_msgSend(v42, sel_date);

      unint64_t v44 = v60;
      sub_1C254CA80();

      id v45 = objc_msgSend(v41, sel_sortDate);
      id v46 = objc_msgSend(v45, sel_date);

      uint64_t v47 = v61;
      sub_1C254CA80();

      LOBYTE(v45) = sub_1C254CA60();
      id v48 = *v54;
      id v49 = v47;
      uint64_t v50 = v62;
      (*v54)(v49, v62);
      v48(v44, v50);

      if (v45) {
        break;
      }
      uint64_t v64 = v33;
      if (v59 < v58 || v34 >= v58)
      {
        *id v34 = *v33;
        id v35 = a2;
        goto LABEL_30;
      }
      unint64_t v51 = (unint64_t)v55;
      uint64_t v36 = v63;
      if (v59 != v58) {
        *id v34 = *v33;
      }
      id v35 = a2;
      if ((unint64_t)v33 <= v51) {
        goto LABEL_42;
      }
LABEL_31:
      --v34;
      a2 = v35;
      if (v35 <= v36) {
        goto LABEL_42;
      }
    }
    id v33 = v58;
    if (v59 != a2 || v34 >= a2) {
      *id v34 = *v35;
    }
    unint64_t v66 = v35;
LABEL_30:
    uint64_t v36 = v63;
    if (v33 <= v55) {
      goto LABEL_42;
    }
    goto LABEL_31;
  }
  if (v12 >= -7)
  {
    id v17 = v63;
    if (a4 != v63 || &v63[v14] <= a4) {
      memmove(a4, v63, 8 * v14);
    }
    uint64_t v58 = &a4[v14];
    uint64_t v64 = v58;
    if (v12 >= 8 && a2 < v59)
    {
      id v57 = (void (**)(char *, uint64_t))(v8 + 8);
      do
      {
        unint64_t v63 = v17;
        id v18 = *a4;
        id v19 = *a2;
        id v20 = v18;
        id v21 = a4;
        id v22 = objc_msgSend(v19, sel_sortDate);
        id v23 = objc_msgSend(v22, sel_date);

        id v24 = v60;
        sub_1C254CA80();

        id v25 = objc_msgSend(v20, sel_sortDate);
        id v26 = objc_msgSend(v25, sel_date);

        uint64_t v27 = v61;
        sub_1C254CA80();

        LOBYTE(v25) = sub_1C254CA60();
        uint64_t v28 = *v57;
        uint64_t v29 = v27;
        uint64_t v30 = v62;
        (*v57)(v29, v62);
        v28(v24, v30);

        if (v25)
        {
          unint64_t v31 = (unint64_t)(a2 + 1);
          uint64_t v32 = v63;
          a4 = v21;
          if (v63 < a2 || (unint64_t)v63 >= v31 || v63 != a2) {
            *unint64_t v63 = *a2;
          }
        }
        else
        {
          uint64_t v32 = v63;
          if (v63 != v21) {
            *unint64_t v63 = *v21;
          }
          a4 = v21 + 1;
          id v65 = v21 + 1;
          unint64_t v31 = (unint64_t)a2;
        }
        id v17 = v32 + 1;
        unint64_t v66 = v17;
        if (a4 >= v58) {
          break;
        }
        a2 = (id *)v31;
      }
      while (v31 < (unint64_t)v59);
    }
LABEL_42:
    sub_1C23F2978(&v66, &v65, &v64);
    return 1;
  }
LABEL_43:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C220D8C0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

unint64_t sub_1C220D8F8()
{
  unint64_t result = qword_1EBB6F540;
  if (!qword_1EBB6F540)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB6F540);
  }
  return result;
}

unint64_t sub_1C220D950()
{
  unint64_t result = qword_1EBB6F500;
  if (!qword_1EBB6F500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F500);
  }
  return result;
}

uint64_t sub_1C220D9A4()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C220D9E4(uint64_t a1)
{
  sub_1C220B698(a1, *(void *)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_1C220D9F4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C220DA2C()
{
  sub_1C220BA74(*(void **)(v0 + 16));
}

unint64_t sub_1C220DA34()
{
  unint64_t result = qword_1EBB6FF10;
  if (!qword_1EBB6FF10)
  {
    sub_1C254F1C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6FF10);
  }
  return result;
}

void sub_1C220DA8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t dispatch thunk of ClinicalSharingSelectedDataTypesDelegate.selectedItemsDidUpdate(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for ClinicalSharingDataTypeSelectionViewController(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DE748);
}

uint64_t sub_1C220DB2C()
{
  return swift_initClassMetadata2();
}

void sub_1C220DB80()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2DE710 = v1;
  *(void *)algn_1EA2DE718 = v3;
}

void sub_1C220DC58()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2DE720 = v1;
  *(void *)algn_1EA2DE728 = v3;
}

void sub_1C220DD30()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for ClinicalSharingDataTypeSelectionViewController(0);
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

    objc_msgSend(v0, sel_setModalInPresentation_, 1);
    if (*(void *)(*(void *)&v0[qword_1EA2DE730] + OBJC_IVAR___WDClinicalAccountOnboardingSession_context) == 2)
    {
      id v4 = objc_msgSend(v0, sel_navigationItem);
      objc_msgSend(v4, sel_setRightBarButtonItem_, 0);
    }
    sub_1C220E0F8();
  }
  else
  {
    __break(1u);
  }
}

void sub_1C220DE48(void *a1)
{
  id v1 = a1;
  sub_1C220DD30();
}

void sub_1C220DE90()
{
  id v1 = v0;
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C2491AD0(v2);
  swift_bridgeObjectRelease();
  size_t v4 = sub_1C228F9F0(v3);
  swift_bridgeObjectRelease();
  objc_super v5 = *(void **)&v1[qword_1EA2DE730];
  uint64_t v6 = *(void **)&v1[qword_1EA2DE738];
  id v7 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingThingsToKnowViewController());
  unint64_t v8 = v5;
  id v9 = v6;
  sub_1C2238080(v8, v9, v4);
  uint64_t v11 = v10;

  objc_msgSend(v1, sel_showViewController_sender_, v11, 0);
  uint64_t v12 = *(void **)&v8[OBJC_IVAR___WDClinicalAccountOnboardingSession_sharingClient];
  uint64_t v13 = (void *)sub_1C254F430();
  sub_1C22CC2DC(*(void *)&v8[OBJC_IVAR___WDClinicalAccountOnboardingSession_context]);
  uint64_t v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  aBlock[4] = nullsub_1;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C22AE944;
  aBlock[3] = &block_descriptor_10;
  uint64_t v15 = _Block_copy(aBlock);
  objc_msgSend(v12, sel_submitOnboardingAnalyticsForStepIdentifier_context_completion_, v13, v14, v15);
  _Block_release(v15);
}

uint64_t sub_1C220E098(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_1C25501E0();
  swift_unknownObjectRelease();
  sub_1C220DE90();

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v4);
}

void sub_1C220E0F8()
{
  sub_1C2201F2C();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C255CDA0;
  *(void *)(v1 + 32) = sub_1C254F470();
  *(void *)(v1 + 40) = v2;
  strcpy((char *)(v1 + 48), "ChooseTopics");
  *(unsigned char *)(v1 + 61) = 0;
  *(_WORD *)(v1 + 62) = -5120;
  uint64_t v3 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v4)
  {
    uint64_t v5 = sub_1C254F470();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = objc_msgSend(v0, sel_navigationItem, 2, 4);
  id v9 = objc_msgSend(v8, sel_backBarButtonItem);

  if (v9)
  {
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v21;
    if (!v7)
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    *(void *)(v10 + 32) = v5;
    *(void *)(v10 + 40) = v7;
    *(void *)(v10 + 48) = 1801675074;
    *(void *)(v10 + 56) = 0xE400000000000000;
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v12 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v12);
  }
  id v13 = objc_msgSend(v0, sel_navigationItem);
  id v14 = objc_msgSend(v13, sel_rightBarButtonItem);

  if (v14)
  {
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = v21;
    if (!v7)
    {
LABEL_18:
      __break(1u);
      return;
    }
    *(void *)(v15 + 32) = v5;
    *(void *)(v15 + 40) = v7;
    *(void *)(v15 + 48) = 0x6C65636E6143;
    *(void *)(v15 + 56) = 0xE600000000000000;
    swift_bridgeObjectRetain();
    uint64_t v16 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v17 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v14, sel_setAccessibilityIdentifier_, v17);
  }
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = v21;
  if (!v7)
  {
    __break(1u);
    goto LABEL_16;
  }
  *(void *)(v18 + 32) = v5;
  *(void *)(v18 + 40) = v7;
  *(void *)(v18 + 48) = 1954047310;
  *(void *)(v18 + 56) = 0xE400000000000000;
  id v19 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v20 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v20)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1C254F470();

  sub_1C254E040();
  swift_bridgeObjectRelease();
}

void sub_1C220E42C()
{
}

void sub_1C220E45C()
{
  uint64_t v1 = *(void **)(v0 + qword_1EA2DE740);
}

id sub_1C220E4AC()
{
  return sub_1C220EE34(type metadata accessor for ClinicalSharingDataTypeSelectionViewController);
}

void sub_1C220E4C4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + qword_1EA2DE740);
}

uint64_t sub_1C220E520()
{
  return type metadata accessor for ClinicalSharingDataTypeSelectionViewController(0);
}

uint64_t type metadata accessor for ClinicalSharingOnboardingSelectDataTypesViewController(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DE768);
}

uint64_t sub_1C220E548()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C220E5A4(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(v1 + qword_1EA2DE740) + qword_1EA2DE758) + qword_1EA2E0070);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(v3 + 16) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C24F27D4(v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C220E644(char a1)
{
  swift_retain();
  sub_1C22B5CD4((a1 & 1) == 0);
  return swift_release();
}

void sub_1C220E6A4(char *a1, uint64_t a2, void *a3)
{
  *(void *)&a1[qword_1EA2DE760] = MEMORY[0x1E4FBC860];
  id v4 = a3;

  sub_1C25505F0();
  __break(1u);
}

void sub_1C220E724()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ClinicalSharingOnboardingSelectDataTypesViewController(0);
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(self, sel_systemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

    id v4 = objc_msgSend(v0, sel_collectionView);
    if (v4)
    {
      uint64_t v5 = v4;
      objc_msgSend(v4, sel_setPreservesSuperviewLayoutMargins_, 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C220E804(void *a1)
{
  id v1 = a1;
  sub_1C220E724();
}

void sub_1C220E84C()
{
  id v1 = v0;
  sub_1C254E100();
  uint64_t v2 = (void (*)(void))sub_1C254E110();
  v2();
  id v3 = objc_msgSend(v0, sel_collectionView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v4 = v3;
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  sub_1C220F094((unint64_t *)&qword_1EA2DE6E8, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell);
  sub_1C254FAD0();

  id v5 = objc_msgSend(v1, sel_collectionView);
  if (!v5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  objc_super v6 = v5;
  sub_1C254DBB0();
  sub_1C254FAF0();

  id v7 = objc_msgSend(v1, sel_collectionView);
  if (!v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v8 = v7;
  type metadata accessor for TextItemCell();
  sub_1C220F094(&qword_1EA2DE790, (void (*)(uint64_t))type metadata accessor for TextItemCell);
  sub_1C254FAD0();

  id v9 = objc_msgSend(v1, sel_collectionView);
  if (!v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = v9;
  type metadata accessor for TurnOnAllDataTypesCell();
  sub_1C220F094(&qword_1EA2DE798, (void (*)(uint64_t))type metadata accessor for TurnOnAllDataTypesCell);
  sub_1C254FAD0();

  id v11 = objc_msgSend(v1, sel_collectionView);
  if (!v11)
  {
LABEL_13:
    __break(1u);
    return;
  }
  sub_1C254D230();
  sub_1C254FAE0();
}

void sub_1C220EA90(void *a1)
{
  uint64_t v2 = (void *)sub_1C254CD30();
  objc_msgSend(a1, sel_deselectItemAtIndexPath_animated_, v2, 1);

  id v3 = (void *)sub_1C254CD30();
  id v4 = objc_msgSend(a1, sel_cellForItemAtIndexPath_, v3);

  if (v4)
  {
    sub_1C254E0D0();
    sub_1C254DCE0();
    sub_1C254D6D0();
    swift_release();
    sub_1C21F4424((uint64_t)v11, (uint64_t)v8);
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    sub_1C21FFE74(0, &qword_1EA2DE778);
    if (swift_dynamicCast())
    {
      id v5 = v6;
LABEL_6:
      sub_1C21F44EC(v5, (uint64_t)v10);
      __swift_project_boxed_opaque_existential_1Tm(v10, v10[3]);
      sub_1C254D8A0();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
      return;
    }
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    sub_1C220EF90((uint64_t)v6);
    *(void *)&v6[0] = v4;
    sub_1C220F054();
    id v4 = v4;
    if (swift_dynamicCast())
    {
      id v5 = v8;
      goto LABEL_6;
    }
    uint64_t v9 = 0;
    memset(v8, 0, sizeof(v8));

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    sub_1C220EF90((uint64_t)v8);
  }
}

uint64_t sub_1C220EC7C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C254CD90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CD40();
  id v9 = a3;
  id v10 = a1;
  sub_1C220EA90(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1C220ED78()
{
}

void sub_1C220EDA8(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C220EDDC()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

id sub_1C220EE1C()
{
  return sub_1C220EE34(type metadata accessor for ClinicalSharingOnboardingSelectDataTypesViewController);
}

id sub_1C220EE34(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1C220EE74()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C220EEC0()
{
  return type metadata accessor for ClinicalSharingOnboardingSelectDataTypesViewController(0);
}

uint64_t sub_1C220EEC8(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + qword_1EA2DE758) + qword_1EA2E0070);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(v3 + 16) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C24F27D4(v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C220EF5C(char a1)
{
  return sub_1C22B5CD4((a1 & 1) == 0);
}

uint64_t sub_1C220EF90(uint64_t a1)
{
  sub_1C220EFEC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C220EFEC()
{
  if (!qword_1EA2DE780)
  {
    sub_1C21FFE74(255, &qword_1EA2DE778);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE780);
    }
  }
}

unint64_t sub_1C220F054()
{
  unint64_t result = qword_1EA2DE788;
  if (!qword_1EA2DE788)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DE788);
  }
  return result;
}

uint64_t sub_1C220F094(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1C220F0DC(char *a1, void *a2)
{
  uint64_t v5 = sub_1C254E150();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v11 = (char *)&v32 - v10;
  *(void *)&v2[qword_1EA2DE730] = a1;
  *(void *)&v2[qword_1EA2DE738] = a2;
  uint64_t v12 = *(void **)&a1[OBJC_IVAR___WDClinicalAccountOnboardingSession_profile];
  id v13 = v2;
  id v14 = a1;
  id v15 = a2;
  id v16 = objc_msgSend(v12, sel_healthStore);
  id v17 = (char *)objc_allocWithZone((Class)type metadata accessor for ClinicalSharingOnboardingSelectDataTypesViewController(0));
  *(void *)&v17[qword_1EA2DE760] = MEMORY[0x1E4FBC860];
  type metadata accessor for ClinicalSharingOnboardingSelectWhatToShareDataSource();
  swift_allocObject();
  uint64_t v18 = v17;
  id v19 = v16;
  *(void *)&v18[qword_1EA2DE758] = sub_1C22B5108(v19, 0, 0, 0, 0);

  swift_retain();
  uint64_t v20 = sub_1C254E0E0();

  uint64_t v21 = qword_1EA2DE740;
  *(void *)&v13[qword_1EA2DE740] = v20;

  id v22 = *(void (**)(char *, void, uint64_t))(v6 + 104);
  v22(v11, *MEMORY[0x1E4F666E0], v5);
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    id v24 = result;
    unsigned int v25 = objc_msgSend(result, sel_isiPad);

    if (v25)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      v22(v11, *MEMORY[0x1E4F666D8], v5);
    }
    uint64_t v26 = qword_1EA2DD480;
    id v27 = *(id *)&v13[v21];
    if (v26 != -1) {
      swift_once();
    }
    uint64_t v28 = qword_1EA2DD488;
    swift_bridgeObjectRetain();
    if (v28 != -1) {
      swift_once();
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    swift_bridgeObjectRetain();
    id v29 = (id)sub_1C254E140();
    id result = objc_msgSend(v29, sel_view);
    if (result)
    {
      uint64_t v30 = result;
      id v31 = objc_msgSend(self, sel_systemBackgroundColor);
      objc_msgSend(v30, sel_setBackgroundColor_, v31);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return v29;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t dispatch thunk of UDCItem.viewData.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of UDCItem.healthStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of UDCItem.init(viewData:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

void *sub_1C220F4F8(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v16 = *(void *)(a3 + 16);
  if (!v16) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = a3;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v15 = v4;
  do
  {
    char v28 = *(unsigned char *)(v4 + v5 + 32);
    a1(&v21, &v28);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    uint64_t v8 = v22;
    if (v22)
    {
      uint64_t v9 = v21;
      uint64_t v10 = v23;
      uint64_t v11 = v24;
      char v20 = v26;
      uint64_t v18 = v25;
      uint64_t v19 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_1C226C2B8(0, v6[2] + 1, 1, v6);
      }
      unint64_t v13 = v6[2];
      unint64_t v12 = v6[3];
      if (v13 >= v12 >> 1) {
        uint64_t v6 = sub_1C226C2B8((void *)(v12 > 1), v13 + 1, 1, v6);
      }
      _OWORD v6[2] = v13 + 1;
      uint64_t v7 = &v6[7 * v13];
      v7[4] = v9;
      void v7[5] = v8;
      void v7[6] = v10;
      v7[7] = v11;
      v7[8] = v18;
      *((unsigned char *)v7 + 72) = v20;
      v7[10] = v19;
      uint64_t v4 = v15;
    }
    ++v5;
  }
  while (v16 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C220F68C@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v4 = sub_1C254E560();
  uint64_t v54 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254C780();
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 32);
  sub_1C22199C0(0, &qword_1EA2DE7A0, (uint64_t)&_s13HealthKitDataVN, (uint64_t (*)(void, uint64_t))_s7PDFDataVMa);
  uint64_t v12 = a1 + *(int *)(v11 + 28);
  uint64_t v60 = v10;
  uint64_t v61 = v12;
  uint64_t v57 = v12;
  unint64_t v13 = sub_1C220F4F8((void (*)(uint64_t *__return_ptr, char *))sub_1C221020C, (uint64_t)v59, (uint64_t)&unk_1F1D8E218);
  id v14 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v15 = sub_1C2203AFC(MEMORY[0x1E4FBC860]);
  uint64_t v16 = sub_1C2216D88(v14, v15, (uint64_t)v13, (void (*)(uint64_t *__return_ptr, id *, void *))sub_1C2216B90);
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v16 + 16))
  {
    uint64_t v52 = v18;
    uint64_t v54 = v2;
    uint64_t v19 = *(void **)a1;
    sub_1C254C770();
    id v20 = objc_msgSend(v19, sel_firstName);
    sub_1C254F470();

    sub_1C254C740();
    id v21 = objc_msgSend(v19, sel_lastName);
    sub_1C254F470();

    sub_1C254C750();
    uint64_t v22 = self;
    uint64_t v23 = (void *)sub_1C254C760();
    id v24 = objc_msgSend(v22, sel_localizedStringFromPersonNameComponents_style_options_, v23, 2, 0);

    uint64_t v25 = sub_1C254F470();
    unint64_t v27 = v26;

    uint64_t v28 = HIBYTE(v27) & 0xF;
    if ((v27 & 0x2000000000000000) == 0) {
      uint64_t v28 = v25 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v53 = v16;
    if (!v28)
    {
      swift_bridgeObjectRelease();
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v29 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      unint64_t v50 = 0xE000000000000000;
      uint64_t v25 = sub_1C254C730();
      unint64_t v27 = v30;
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v9, v56);
    uint64_t v31 = v57;
    uint64_t v56 = sub_1C2216FEC(*(void **)a1, v57);
    uint64_t v33 = v32;
    MEMORY[0x1F4188790](v56);
    unint64_t v50 = a1;
    uint64_t v37 = sub_1C239193C((void *(*)(uint64_t *__return_ptr, void *))sub_1C2217774, (uint64_t)(&v51 - 4), v34, v35, v36);
    uint64_t v39 = v38;
    sub_1C22199C0(0, &qword_1EA2DE7A8, (uint64_t)&_s13FormattedDataVN, (uint64_t (*)(void, uint64_t))_s7PDFDataVMa);
    uint64_t v41 = v40;
    id v42 = v58;
    sub_1C22177F8(v31, (uint64_t)v58 + *(int *)(v40 + 28));
    *id v42 = v25;
    v42[1] = v27;
    v42[2] = v56;
    v42[3] = v33;
    v42[4] = (uint64_t)v37;
    v42[5] = v39;
    uint64_t v43 = v52;
    v42[6] = v53;
    v42[7] = v43;
    return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v42, 0, 1, v41);
  }
  else
  {
    uint64_t v45 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C254E510();
    id v46 = sub_1C254E550();
    os_log_type_t v47 = sub_1C254FA00();
    if (os_log_type_enabled(v46, v47))
    {
      id v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v48 = 0;
      _os_log_impl(&dword_1C21A1000, v46, v47, "[PDF]: The input data either had no supported sections or all of the supported sections were empty.", v48, 2u);
      MEMORY[0x1C875A0B0](v48, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v4);
    sub_1C22199C0(0, &qword_1EA2DE7A8, (uint64_t)&_s13FormattedDataVN, (uint64_t (*)(void, uint64_t))_s7PDFDataVMa);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v58, 1, 1, v49);
  }
}

void sub_1C220FC6C(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint8_t **a4@<X8>)
{
  uint64_t v8 = sub_1C254E560();
  uint64_t v63 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v53 - v12;
  uint64_t v14 = *a1;
  if (!*(void *)(a2 + 16)) {
    goto LABEL_18;
  }
  uint64_t v15 = sub_1C21A93C4(v14);
  if ((v16 & 1) == 0) {
    goto LABEL_18;
  }
  unint64_t v17 = *(void *)(*(void *)(a2 + 56) + 8 * v15);
  if (!(v17 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  if (!sub_1C2550620())
  {
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_18:
    sub_1C254E510();
    os_log_type_t v47 = sub_1C254E550();
    os_log_type_t v48 = sub_1C254FA00();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v61 = v8;
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v65 = v50;
      uint64_t v62 = a4;
      *(_DWORD *)uint64_t v49 = 136315138;
      LOBYTE(v64) = v14;
      uint64_t v51 = sub_1C254F4F0();
      uint64_t v64 = sub_1C21AD354(v51, v52, &v65);
      a4 = v62;
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v47, v48, "[PDF]: There are no records for this category: %s", v49, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v50, -1, -1);
      MEMORY[0x1C875A0B0](v49, -1, -1);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v11, v61);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v63 + 8))(v11, v8);
    }
    goto LABEL_21;
  }
LABEL_5:
  LOBYTE(v65) = v14;
  unint64_t v19 = DisplayCategory.Kind.systemImageName.getter();
  if (v20)
  {
    id v21 = v20;
    uint64_t v60 = (uint8_t *)v19;
    unint64_t v22 = sub_1C21A9468();
    if (*(void *)(v22 + 16))
    {
      uint64_t v23 = sub_1C21A93C4(v14);
      if (v24)
      {
        uint64_t v61 = v8;
        uint64_t v62 = a4;
        uint64_t v25 = (void *)(*(void *)(v22 + 56) + 72 * v23);
        unint64_t v26 = (void *)v25[1];
        uint64_t v27 = v25[3];
        uint64_t v54 = (uint8_t *)v25[4];
        uint64_t v28 = (uint8_t *)v25[5];
        uint64_t v29 = v25[7];
        id v58 = (id)v25[8];
        id v59 = v26;
        uint64_t v56 = v27;
        swift_bridgeObjectRetain();
        uint64_t v57 = v28;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v55 = v29;
        swift_bridgeObjectRetain();
        id v58 = v58;
        id v30 = v59;
        swift_bridgeObjectRelease();
        LOBYTE(v65) = v14;
        uint64_t v31 = sub_1C2210228(a3, &v65);
        if (v31)
        {
          uint64_t v32 = (uint64_t)v31;
          uint64_t v63 = v31(v17);
          unsigned __int8 v34 = v33;
          char v36 = v35;
          sub_1C221794C(v32);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          uint64_t v37 = v62;
          void *v62 = v60;
          v37[1] = v21;
          uint64_t v38 = v57;
          v37[2] = v54;
          v37[3] = v38;
          v37[4] = (uint8_t *)v63;
          void v37[5] = (uint8_t *)v34;
          v37[6] = v36;
          return;
        }
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        uint64_t v8 = v61;
        a4 = v62;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_12:
  sub_1C254E510();
  uint64_t v39 = sub_1C254E550();
  os_log_type_t v40 = sub_1C254FA00();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v61 = v8;
    uint64_t v41 = swift_slowAlloc();
    uint64_t v62 = a4;
    id v42 = (uint8_t *)v41;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v65 = v43;
    *(_DWORD *)id v42 = 136315138;
    uint64_t v60 = v42 + 4;
    LOBYTE(v64) = v14;
    uint64_t v44 = sub_1C254F4F0();
    uint64_t v64 = sub_1C21AD354(v44, v45, &v65);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v39, v40, "[PDF]: This kind of category is not supported: %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v43, -1, -1);
    id v46 = v42;
    a4 = v62;
    MEMORY[0x1C875A0B0](v46, -1, -1);

    (*(void (**)(char *, uint64_t))(v63 + 8))(v13, v61);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v63 + 8))(v13, v8);
  }
LABEL_21:
  a4[6] = 0;
  *((_OWORD *)a4 + 1) = 0u;
  *((_OWORD *)a4 + 2) = 0u;
  *(_OWORD *)a4 = 0u;
}

void sub_1C221020C(unsigned __int8 *a1@<X0>, uint8_t **a2@<X8>)
{
  sub_1C220FC6C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t (*sub_1C2210228(uint64_t a1, unsigned char *a2))(uint64_t a1)
{
  uint64_t v4 = _s13ConfigurationVMa();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = 0;
  switch(*a2)
  {
    case 1:
    case 4:
    case 5:
    case 6:
      sub_1C22177F8(a1, (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v11 = v10 + v6;
      uint64_t v12 = swift_allocObject();
      unint64_t v13 = (v11 & 0xFFFFFFFFFFFFFFF8) + v12;
      sub_1C22179D4((uint64_t)v8, v12 + v10);
      *(unsigned char *)(v12 + v11) = 1;
      *(void *)(v13 + 8) = sub_1C2210804;
      *(void *)(v13 + 16) = 0;
      uint64_t v14 = (uint64_t (**)())(v12 + (((v11 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v14 = sub_1C2210940;
      v14[1] = 0;
      uint64_t v15 = sub_1C2217B74;
      goto LABEL_7;
    case 2:
      char v16 = *(void **)(a1 + *(int *)(v7 + 44));
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v16;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = sub_1C2217A50;
      *(void *)(v18 + 24) = v17;
      sub_1C22177F8(a1, (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v19 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v20 = v19 + v6;
      uint64_t v21 = swift_allocObject();
      unint64_t v22 = (v20 & 0xFFFFFFFFFFFFFFF8) + v21;
      sub_1C22179D4((uint64_t)v8, v21 + v19);
      *(unsigned char *)(v21 + v20) = 1;
      *(void *)(v22 + 8) = sub_1C2217A90;
      *(void *)(v22 + 16) = v18;
      uint64_t v23 = (uint64_t (**)())(v21 + (((v20 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v23 = sub_1C22107CC;
      v23[1] = 0;
      id v24 = v16;
      uint64_t v15 = sub_1C2217AEC;
      goto LABEL_7;
    case 3:
      uint64_t v25 = *(void **)(a1 + *(int *)(v7 + 44));
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v25;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = sub_1C2217B04;
      *(void *)(v27 + 24) = v26;
      sub_1C22177F8(a1, (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v28 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v29 = v28 + v6;
      uint64_t v30 = swift_allocObject();
      unint64_t v31 = (v29 & 0xFFFFFFFFFFFFFFF8) + v30;
      sub_1C22179D4((uint64_t)v8, v30 + v28);
      *(unsigned char *)(v30 + v29) = 1;
      *(void *)(v31 + 8) = sub_1C2217B0C;
      *(void *)(v31 + 16) = v27;
      uint64_t v32 = (uint64_t (**)())(v30 + (((v29 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v32 = sub_1C22107B0;
      v32[1] = 0;
      id v33 = v25;
      uint64_t v15 = sub_1C2217B58;
      goto LABEL_7;
    case 7:
      sub_1C22177F8(a1, (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v34 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v35 = v34 + v6;
      uint64_t v36 = swift_allocObject();
      sub_1C22179D4((uint64_t)v8, v36 + v34);
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = sub_1C2217D58;
      *(void *)(v37 + 24) = v36;
      sub_1C22177F8(a1, (uint64_t)v8);
      uint64_t v38 = swift_allocObject();
      unint64_t v39 = (v35 & 0xFFFFFFFFFFFFFFF8) + v38;
      sub_1C22179D4((uint64_t)v8, v38 + v34);
      *(unsigned char *)(v38 + v35) = 0;
      *(void *)(v39 + 8) = sub_1C2217DD8;
      *(void *)(v39 + 16) = v37;
      os_log_type_t v40 = (uint64_t (**)())(v38 + (((v35 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8));
      *os_log_type_t v40 = sub_1C2210794;
      v40[1] = 0;
      uint64_t v15 = sub_1C221802C;
      goto LABEL_7;
    case 0xA:
      uint64_t v41 = *(void **)(a1 + *(int *)(v7 + 52));
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v41;
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = sub_1C2217994;
      *(void *)(v43 + 24) = v42;
      sub_1C22177F8(a1, (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
      unint64_t v44 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v45 = v44 + v6;
      uint64_t v46 = swift_allocObject();
      unint64_t v47 = (v45 & 0xFFFFFFFFFFFFFFF8) + v46;
      sub_1C22179D4((uint64_t)v8, v46 + v44);
      *(unsigned char *)(v46 + v45) = 1;
      *(void *)(v47 + 8) = sub_1C221799C;
      *(void *)(v47 + 16) = v43;
      os_log_type_t v48 = (uint64_t (**)())(v46 + (((v45 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8));
      *os_log_type_t v48 = sub_1C22107E8;
      v48[1] = 0;
      id v49 = v41;
      uint64_t v15 = sub_1C2217A38;
LABEL_7:
      id result = v15;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2210794()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C22107B0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C22107CC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C22107E8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2210804@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C254C4A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_preferredDisplayName);
  uint64_t v9 = sub_1C254F470();
  uint64_t v11 = v10;

  v16[0] = v9;
  v16[1] = v11;
  sub_1C254C490();
  sub_1C2218914();
  uint64_t v12 = sub_1C2550160();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v12;
  a2[1] = v14;
  return result;
}

uint64_t sub_1C2210940()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C221095C(unint64_t a1, uint64_t a2, int a3, void (*a4)(void *), void (*a5)(void *), uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v57 = a7;
  id v58 = a6;
  uint64_t v12 = _s13ConfigurationVMa();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v12 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v55 - v16;
  sub_1C22177F8(a2, (uint64_t)&v55 - v16);
  uint64_t v59 = (uint64_t)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22177F8((uint64_t)v17, v59);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v19 = (v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  int v65 = a3;
  *(unsigned char *)(v20 + 16) = a3;
  sub_1C22179D4((uint64_t)v17, v20 + v18);
  uint64_t v21 = (void (**)(void *))(v20 + v19);
  unint64_t v66 = a4;
  *uint64_t v21 = a4;
  v21[1] = a5;
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n();
  if (v22)
  {
    while (1)
    {
      uint64_t v76 = MEMORY[0x1E4FBC860];
      uint64_t result = sub_1C2274894(0, v22 & ~(v22 >> 63), 0);
      if (v22 < 0) {
        break;
      }
      uint64_t v56 = v20;
      uint64_t v20 = 0;
      uint64_t v24 = v76;
      unint64_t v62 = a1 & 0xC000000000000001;
      uint64_t v61 = &v74;
      uint64_t v25 = &selRef_setUnsupportedSearchResults_;
      uint64_t v26 = &selRef_setUnsupportedSearchResults_;
      unint64_t v64 = a1;
      uint64_t v63 = v22;
      uint64_t v60 = a5;
      while (v22 != v20)
      {
        if (v62) {
          id v27 = (id)MEMORY[0x1C87588E0](v20, a1);
        }
        else {
          id v27 = *(id *)(a1 + 8 * v20 + 32);
        }
        unint64_t v28 = v27;
        uint64_t v29 = (void *)MEMORY[0x1C87594F0]();
        id v30 = [v28 v25[53]];
        id v31 = [v30 v26[52]];

        id v32 = objc_msgSend(v31, sel_bundleIdentifier);
        uint64_t v33 = sub_1C254F470();
        uint64_t v35 = v34;

        uint64_t v73 = v33;
        if (v65)
        {
          uint64_t v36 = sub_1C2218168(v28, v59);
          uint64_t v71 = v37;
          uint64_t v72 = v36;
          uint64_t v70 = v38;
          int v69 = v39 & 1;
          swift_bridgeObjectRetain();
          uint64_t v67 = v35;
          uint64_t v68 = v33;
        }
        else
        {
          uint64_t v71 = 0;
          uint64_t v72 = 0;
          uint64_t v70 = 0;
          uint64_t v67 = 0;
          uint64_t v68 = 0;
          int v69 = 1;
        }
        v66(v28);
        id v40 = [v28 v25[53]];
        uint64_t v41 = v26;
        id v42 = [v40 v26[52]];

        id v43 = objc_msgSend(v42, sel_name);
        uint64_t v44 = sub_1C254F470();
        uint64_t v46 = v45;

        uint64_t v47 = v74;
        long long v48 = v75;
        uint64_t v76 = v24;
        unint64_t v50 = *(void *)(v24 + 16);
        unint64_t v49 = *(void *)(v24 + 24);
        if (v50 >= v49 >> 1)
        {
          long long v55 = v75;
          sub_1C2274894(v49 > 1, v50 + 1, 1);
          long long v48 = v55;
          uint64_t v24 = v76;
        }
        ++v20;
        *(void *)(v24 + 16) = v50 + 1;
        uint64_t v51 = v24 + 104 * v50;
        uint64_t v52 = v71;
        *(void *)(v51 + 32) = v72;
        *(void *)(v51 + 40) = v52;
        *(void *)(v51 + 48) = v70;
        *(unsigned char *)(v51 + 56) = v69;
        uint64_t v53 = v67;
        *(void *)(v51 + 64) = v68;
        *(void *)(v51 + 72) = v53;
        *(void *)(v51 + 80) = v47;
        *(_OWORD *)(v51 + 88) = v48;
        *(void *)(v51 + 104) = v73;
        *(void *)(v51 + 112) = v35;
        *(void *)(v51 + 120) = v44;
        *(void *)(v51 + 128) = v46;
        uint64_t v22 = v63;
        a5 = v60;
        a1 = v64;
        uint64_t v25 = &selRef_setUnsupportedSearchResults_;
        uint64_t v26 = v41;
        if (v63 == v20)
        {
          swift_release();
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_17:
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (!v22) {
        goto LABEL_18;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_release();
    uint64_t v24 = MEMORY[0x1E4FBC860];
LABEL_19:
    sub_1C221810C(v59);
    swift_release();
    sub_1C221252C(v24);
    uint64_t v54 = v58();
    swift_bridgeObjectRelease();
    sub_1C2212C6C(v24);
    swift_bridgeObjectRelease();
    return v54;
  }
  return result;
}

uint64_t sub_1C2210E70(unint64_t a1, uint64_t a2, int a3, void (*a4)(void *), void (*a5)(void *), uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v66 = a7;
  uint64_t v67 = a6;
  uint64_t v12 = _s13ConfigurationVMa();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v12 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v63 - v16;
  sub_1C22177F8(a2, (uint64_t)&v63 - v16);
  uint64_t v69 = (uint64_t)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22177F8((uint64_t)v17, v69);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v19 = (v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  int v75 = a3;
  *(unsigned char *)(v20 + 16) = a3;
  sub_1C22179D4((uint64_t)v17, v20 + v18);
  uint64_t v68 = v20;
  uint64_t v21 = (void (**)(void *))(v20 + v19);
  uint64_t v76 = a4;
  *uint64_t v21 = a4;
  v21[1] = a5;
  if (!(a1 >> 62))
  {
    uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    if (v22) {
      goto LABEL_3;
    }
LABEL_17:
    swift_release();
    uint64_t v25 = MEMORY[0x1E4FBC860];
LABEL_18:
    sub_1C221810C(v69);
    swift_release();
    sub_1C2212678(v25);
    uint64_t v61 = v25;
    uint64_t v62 = v67();
    swift_bridgeObjectRelease();
    sub_1C2212D68(v61);
    swift_bridgeObjectRelease();
    return v62;
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_17;
  }
LABEL_3:
  uint64_t v98 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C22748F4(0, v22 & ~(v22 >> 63), 0);
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = 0;
    unint64_t v73 = a1 & 0xC000000000000001;
    uint64_t v25 = v98;
    uint64_t v72 = v91;
    uint64_t v71 = v22 - 1;
    uint64_t v26 = &selRef_setUnsupportedSearchResults_;
    id v27 = &selRef_setUnsupportedSearchResults_;
    unint64_t v70 = a1;
    uint64_t v74 = a5;
    while (1)
    {
      uint64_t v87 = v24;
      uint64_t v28 = v25;
      id v29 = v73 ? (id)MEMORY[0x1C87588E0]() : *(id *)(a1 + 8 * v24 + 32);
      id v30 = v29;
      id v31 = (void *)MEMORY[0x1C87594F0]();
      id v32 = [v30 v26[53]];
      id v33 = [v32 v27[52]];

      id v34 = objc_msgSend(v33, sel_bundleIdentifier);
      uint64_t v35 = sub_1C254F470();
      uint64_t v37 = v36;

      uint64_t v86 = v35;
      uint64_t v85 = v37;
      if (v75)
      {
        uint64_t v84 = sub_1C2218168(v30, v69);
        uint64_t v83 = v38;
        uint64_t v82 = v39;
        int v79 = v40 & 1;
        swift_bridgeObjectRetain();
        uint64_t v81 = v35;
        uint64_t v80 = v37;
      }
      else
      {
        uint64_t v84 = 0;
        uint64_t v83 = 0;
        uint64_t v82 = 0;
        uint64_t v81 = 0;
        uint64_t v80 = 0;
        int v79 = 1;
      }
      v76(v30);
      id v41 = [v30 v26[53]];
      id v42 = [v41 v27[52]];

      id v43 = objc_msgSend(v42, sel_name);
      uint64_t v78 = sub_1C254F470();
      uint64_t v77 = v44;

      uint64_t v45 = v91[0];
      uint64_t v46 = v91[1];
      uint64_t v48 = v91[2];
      uint64_t v47 = v92;
      uint64_t v49 = v93;
      uint64_t v50 = v94;
      uint64_t v51 = v95;
      uint64_t v52 = v96;
      uint64_t v25 = v28;
      unint64_t v54 = *(void *)(v28 + 16);
      unint64_t v53 = *(void *)(v28 + 24);
      char v55 = v97;
      uint64_t v98 = v25;
      if (v54 >= v53 >> 1)
      {
        uint64_t v65 = v91[0];
        uint64_t v64 = v92;
        sub_1C22748F4(v53 > 1, v54 + 1, 1);
        uint64_t v47 = v64;
        uint64_t v45 = v65;
        uint64_t v25 = v98;
      }
      char v89 = v79;
      *(void *)(v25 + 16) = v54 + 1;
      uint64_t v56 = v25 + 152 * v54;
      uint64_t v57 = v83;
      *(void *)(v56 + 32) = v84;
      *(void *)(v56 + 40) = v57;
      *(void *)(v56 + 48) = v82;
      *(unsigned char *)(v56 + 56) = v89;
      LODWORD(v57) = v90[0];
      *(_DWORD *)(v56 + 60) = *(_DWORD *)((char *)v90 + 3);
      *(_DWORD *)(v56 + 57) = v57;
      uint64_t v58 = v80;
      *(void *)(v56 + 64) = v81;
      *(void *)(v56 + 72) = v58;
      *(void *)(v56 + 80) = v45;
      *(void *)(v56 + 88) = v46;
      *(void *)(v56 + 96) = v48;
      *(void *)(v56 + 104) = v47;
      *(void *)(v56 + 112) = v49;
      *(void *)(v56 + 120) = v50;
      *(void *)(v56 + 128) = v51;
      *(void *)(v56 + 136) = v52;
      *(unsigned char *)(v56 + 144) = v55;
      LODWORD(v58) = *(_DWORD *)v88;
      *(_DWORD *)(v56 + 148) = *(_DWORD *)&v88[3];
      *(_DWORD *)(v56 + 145) = v58;
      uint64_t v59 = v85;
      *(void *)(v56 + 152) = v86;
      *(void *)(v56 + 160) = v59;
      uint64_t v60 = v77;
      *(void *)(v56 + 168) = v78;
      *(void *)(v56 + 176) = v60;
      if (v71 == v87) {
        break;
      }
      uint64_t v24 = v87 + 1;
      a1 = v70;
      uint64_t v26 = &selRef_setUnsupportedSearchResults_;
      id v27 = &selRef_setUnsupportedSearchResults_;
    }
    swift_release();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2211488(unint64_t a1, uint64_t a2, int a3, void (*a4)(void *), void (*a5)(void *), uint64_t (*a6)(void), uint64_t a7)
{
  v61[1] = a7;
  uint64_t v62 = a6;
  uint64_t v12 = _s13ConfigurationVMa();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v12 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v61 - v16;
  sub_1C22177F8(a2, (uint64_t)v61 - v16);
  uint64_t v64 = (uint64_t)v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22177F8((uint64_t)v17, v64);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v19 = (v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  int v70 = a3;
  *(unsigned char *)(v20 + 16) = a3;
  sub_1C22179D4((uint64_t)v17, v20 + v18);
  uint64_t v63 = v20;
  uint64_t v21 = (void (**)(void *))(v20 + v19);
  uint64_t v71 = a4;
  *uint64_t v21 = a4;
  v21[1] = a5;
  if (!(a1 >> 62))
  {
    uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    if (v22) {
      goto LABEL_3;
    }
LABEL_17:
    swift_release();
    uint64_t v25 = MEMORY[0x1E4FBC860];
LABEL_18:
    sub_1C221810C(v64);
    swift_release();
    sub_1C2212814(v25);
    uint64_t v59 = v25;
    uint64_t v60 = v62();
    swift_bridgeObjectRelease();
    sub_1C2212E64(v59);
    swift_bridgeObjectRelease();
    return v60;
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_17;
  }
LABEL_3:
  uint64_t v86 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C2274954(0, v22 & ~(v22 >> 63), 0);
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = 0;
    unint64_t v68 = a1 & 0xC000000000000001;
    uint64_t v25 = v86;
    uint64_t v67 = v85;
    uint64_t v66 = v22 - 1;
    uint64_t v26 = &selRef_setUnsupportedSearchResults_;
    id v27 = &selRef_setUnsupportedSearchResults_;
    unint64_t v65 = a1;
    uint64_t v69 = a5;
    while (1)
    {
      uint64_t v81 = v24;
      uint64_t v82 = v25;
      id v28 = v68 ? (id)MEMORY[0x1C87588E0]() : *(id *)(a1 + 8 * v24 + 32);
      id v29 = v28;
      id v30 = (void *)MEMORY[0x1C87594F0]();
      id v31 = [v29 v26[53]];
      id v32 = [v31 v27[52]];

      id v33 = objc_msgSend(v32, sel_bundleIdentifier);
      uint64_t v34 = sub_1C254F470();
      uint64_t v36 = v35;

      uint64_t v80 = v34;
      uint64_t v79 = v36;
      if (v70)
      {
        uint64_t v78 = sub_1C2218168(v29, v64);
        uint64_t v77 = v37;
        uint64_t v76 = v38;
        int v73 = v39 & 1;
        swift_bridgeObjectRetain();
        uint64_t v75 = v34;
        uint64_t v74 = v36;
      }
      else
      {
        uint64_t v78 = 0;
        uint64_t v77 = 0;
        uint64_t v76 = 0;
        uint64_t v75 = 0;
        uint64_t v74 = 0;
        int v73 = 1;
      }
      v71(v29);
      id v40 = [v29 v26[53]];
      id v41 = [v40 v27[52]];

      id v42 = objc_msgSend(v41, sel_name);
      uint64_t v43 = sub_1C254F470();
      uint64_t v72 = v44;

      uint64_t v46 = v85[0];
      uint64_t v45 = v85[1];
      uint64_t v47 = v85[2];
      uint64_t v48 = v85[3];
      uint64_t v49 = v85[4];
      uint64_t v50 = v85[5];
      uint64_t v25 = v82;
      uint64_t v86 = v82;
      unint64_t v52 = *(void *)(v82 + 16);
      unint64_t v51 = *(void *)(v82 + 24);
      if (v52 >= v51 >> 1)
      {
        sub_1C2274954(v51 > 1, v52 + 1, 1);
        uint64_t v25 = v86;
      }
      char v83 = v73;
      *(void *)(v25 + 16) = v52 + 1;
      uint64_t v53 = v25 + (v52 << 7);
      uint64_t v54 = v77;
      *(void *)(v53 + 32) = v78;
      *(void *)(v53 + 40) = v54;
      *(void *)(v53 + 48) = v76;
      *(unsigned char *)(v53 + 56) = v83;
      LODWORD(v54) = v84[0];
      *(_DWORD *)(v53 + 60) = *(_DWORD *)((char *)v84 + 3);
      *(_DWORD *)(v53 + 57) = v54;
      uint64_t v55 = v74;
      *(void *)(v53 + 64) = v75;
      *(void *)(v53 + 72) = v55;
      *(void *)(v53 + 80) = v46;
      *(void *)(v53 + 88) = v45;
      *(void *)(v53 + 96) = v47;
      *(void *)(v53 + 104) = v48;
      *(void *)(v53 + 112) = v49;
      *(void *)(v53 + 120) = v50;
      uint64_t v56 = v81;
      uint64_t v57 = v79;
      *(void *)(v53 + 128) = v80;
      *(void *)(v53 + 136) = v57;
      uint64_t v58 = v72;
      *(void *)(v53 + 144) = v43;
      *(void *)(v53 + 152) = v58;
      if (v66 == v56) {
        break;
      }
      uint64_t v24 = v56 + 1;
      a1 = v65;
      uint64_t v26 = &selRef_setUnsupportedSearchResults_;
      id v27 = &selRef_setUnsupportedSearchResults_;
    }
    swift_release();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2211A24(unint64_t a1, uint64_t a2, int a3, void (*a4)(void *), void (*a5)(void *), uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v59 = a7;
  uint64_t v60 = a6;
  uint64_t v12 = _s13ConfigurationVMa();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v12 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v58 - v16;
  sub_1C22177F8(a2, (uint64_t)&v58 - v16);
  uint64_t v61 = (uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22177F8((uint64_t)v17, v61);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v19 = (v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  int v67 = a3;
  *(unsigned char *)(v20 + 16) = a3;
  sub_1C22179D4((uint64_t)v17, v20 + v18);
  uint64_t v21 = (void (**)(void *))(v20 + v19);
  unint64_t v68 = a4;
  *uint64_t v21 = a4;
  v21[1] = a5;
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n();
  if (v22)
  {
    while (1)
    {
      uint64_t v77 = MEMORY[0x1E4FBC860];
      uint64_t result = sub_1C22749B4(0, v22 & ~(v22 >> 63), 0);
      if (v22 < 0) {
        break;
      }
      uint64_t v58 = v20;
      uint64_t v20 = 0;
      uint64_t v24 = v77;
      unint64_t v63 = a1 & 0xC000000000000001;
      uint64_t v62 = v76;
      uint64_t v25 = &selRef_setUnsupportedSearchResults_;
      uint64_t v26 = &selRef_setUnsupportedSearchResults_;
      unint64_t v65 = a1;
      uint64_t v64 = v22;
      uint64_t v66 = a5;
      while (v22 != v20)
      {
        uint64_t v27 = v24;
        if (v63) {
          id v28 = (id)MEMORY[0x1C87588E0](v20, a1);
        }
        else {
          id v28 = *(id *)(a1 + 8 * v20 + 32);
        }
        id v30 = v28;
        id v31 = (void *)MEMORY[0x1C87594F0](v28, v29);
        id v32 = objc_msgSend(v30, v25[53], v58, v59);
        id v33 = [v32 v26[52]];

        id v34 = objc_msgSend(v33, sel_bundleIdentifier);
        uint64_t v35 = sub_1C254F470();
        uint64_t v37 = v36;

        uint64_t v75 = v35;
        if (v67)
        {
          uint64_t v38 = sub_1C2218168(v30, v61);
          uint64_t v73 = v39;
          uint64_t v74 = v38;
          uint64_t v72 = v40;
          int v71 = v41 & 1;
          swift_bridgeObjectRetain();
          uint64_t v69 = v37;
          uint64_t v70 = v35;
        }
        else
        {
          uint64_t v73 = 0;
          uint64_t v74 = 0;
          uint64_t v72 = 0;
          uint64_t v69 = 0;
          uint64_t v70 = 0;
          int v71 = 1;
        }
        v68(v30);
        id v42 = [v30 v25[53]];
        uint64_t v43 = v26;
        id v44 = [v42 v26[52]];

        id v45 = objc_msgSend(v44, sel_name);
        uint64_t v46 = sub_1C254F470();
        uint64_t v48 = v47;

        uint64_t v50 = v76[0];
        uint64_t v49 = v76[1];
        uint64_t v24 = v27;
        uint64_t v77 = v27;
        unint64_t v51 = *(void *)(v27 + 16);
        unint64_t v52 = *(void *)(v24 + 24);
        if (v51 >= v52 >> 1)
        {
          sub_1C22749B4(v52 > 1, v51 + 1, 1);
          uint64_t v24 = v77;
        }
        ++v20;
        *(void *)(v24 + 16) = v51 + 1;
        uint64_t v53 = v24 + 96 * v51;
        uint64_t v54 = v73;
        *(void *)(v53 + 32) = v74;
        *(void *)(v53 + 40) = v54;
        *(void *)(v53 + 48) = v72;
        *(unsigned char *)(v53 + 56) = v71;
        uint64_t v55 = v69;
        *(void *)(v53 + 64) = v70;
        *(void *)(v53 + 72) = v55;
        *(void *)(v53 + 80) = v50;
        *(void *)(v53 + 88) = v49;
        *(void *)(v53 + 96) = v75;
        *(void *)(v53 + 104) = v37;
        *(void *)(v53 + 112) = v46;
        *(void *)(v53 + 120) = v48;
        uint64_t v22 = v64;
        a5 = v66;
        a1 = v65;
        uint64_t v25 = &selRef_setUnsupportedSearchResults_;
        uint64_t v26 = v43;
        if (v64 == v20)
        {
          swift_release();
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_17:
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (!v22) {
        goto LABEL_18;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_release();
    uint64_t v24 = MEMORY[0x1E4FBC860];
LABEL_19:
    sub_1C221810C(v61);
    swift_release();
    sub_1C2212984(v24);
    uint64_t v56 = v24;
    uint64_t v57 = v60();
    swift_bridgeObjectRelease();
    sub_1C2212F60(v56);
    swift_bridgeObjectRelease();
    return v57;
  }
  return result;
}

uint64_t sub_1C2211F2C(unint64_t a1, uint64_t a2, int a3, void (*a4)(void *), void (*a5)(void *), uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v65 = a7;
  uint64_t v66 = a6;
  uint64_t v12 = _s13ConfigurationVMa();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x1F4188790](v12 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v63 - v16;
  sub_1C22177F8(a2, (uint64_t)&v63 - v16);
  uint64_t v68 = (uint64_t)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22177F8((uint64_t)v17, v68);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v19 = (v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  int v74 = a3;
  *(unsigned char *)(v20 + 16) = a3;
  sub_1C22179D4((uint64_t)v17, v20 + v18);
  uint64_t v67 = v20;
  uint64_t v21 = (void (**)(void *))(v20 + v19);
  uint64_t v75 = a4;
  *uint64_t v21 = a4;
  v21[1] = a5;
  if (!(a1 >> 62))
  {
    uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    if (v22) {
      goto LABEL_3;
    }
LABEL_17:
    swift_release();
    uint64_t v25 = MEMORY[0x1E4FBC860];
LABEL_18:
    sub_1C221810C(v68);
    swift_release();
    sub_1C2212AB4(v25);
    uint64_t v61 = v25;
    uint64_t v62 = v66();
    swift_bridgeObjectRelease();
    sub_1C221305C(v61);
    swift_bridgeObjectRelease();
    return v62;
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_17;
  }
LABEL_3:
  uint64_t v91 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C2274A14(0, v22 & ~(v22 >> 63), 0);
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = 0;
    unint64_t v72 = a1 & 0xC000000000000001;
    uint64_t v25 = v91;
    int v71 = v89;
    uint64_t v70 = v22 - 1;
    uint64_t v26 = &selRef_setUnsupportedSearchResults_;
    uint64_t v27 = &selRef_setUnsupportedSearchResults_;
    unint64_t v69 = a1;
    uint64_t v73 = a5;
    while (1)
    {
      uint64_t v86 = v24;
      uint64_t v28 = v25;
      id v29 = v72 ? (id)MEMORY[0x1C87588E0]() : *(id *)(a1 + 8 * v24 + 32);
      id v30 = v29;
      id v31 = (void *)MEMORY[0x1C87594F0]();
      id v32 = [v30 v26[53]];
      id v33 = [v32 v27[52]];

      id v34 = objc_msgSend(v33, sel_bundleIdentifier);
      uint64_t v35 = sub_1C254F470();
      uint64_t v37 = v36;

      uint64_t v85 = v35;
      uint64_t v84 = v37;
      if (v74)
      {
        uint64_t v83 = sub_1C2218168(v30, v68);
        uint64_t v82 = v38;
        uint64_t v81 = v39;
        int v78 = v40 & 1;
        swift_bridgeObjectRetain();
        uint64_t v80 = v35;
        uint64_t v79 = v37;
      }
      else
      {
        uint64_t v83 = 0;
        uint64_t v82 = 0;
        uint64_t v81 = 0;
        uint64_t v80 = 0;
        uint64_t v79 = 0;
        int v78 = 1;
      }
      v75(v30);
      id v41 = [v30 v26[53]];
      id v42 = [v41 v27[52]];

      id v43 = objc_msgSend(v42, sel_name);
      uint64_t v77 = sub_1C254F470();
      uint64_t v76 = v44;

      uint64_t v45 = v89[0];
      uint64_t v46 = v89[1];
      uint64_t v48 = v89[2];
      uint64_t v47 = v89[3];
      uint64_t v49 = v89[4];
      uint64_t v50 = v89[5];
      uint64_t v51 = v89[6];
      uint64_t v52 = v89[7];
      uint64_t v25 = v28;
      unint64_t v53 = *(void *)(v28 + 16);
      unint64_t v54 = *(void *)(v25 + 24);
      long long v55 = v90;
      uint64_t v91 = v25;
      if (v53 >= v54 >> 1)
      {
        uint64_t v64 = v89[0];
        long long v63 = v90;
        sub_1C2274A14(v54 > 1, v53 + 1, 1);
        long long v55 = v63;
        uint64_t v45 = v64;
        uint64_t v25 = v91;
      }
      char v87 = v78;
      *(void *)(v25 + 16) = v53 + 1;
      uint64_t v56 = v25 + 160 * v53;
      uint64_t v57 = v82;
      *(void *)(v56 + 32) = v83;
      *(void *)(v56 + 40) = v57;
      *(void *)(v56 + 48) = v81;
      *(unsigned char *)(v56 + 56) = v87;
      LODWORD(v57) = v88[0];
      *(_DWORD *)(v56 + 60) = *(_DWORD *)((char *)v88 + 3);
      *(_DWORD *)(v56 + 57) = v57;
      uint64_t v58 = v79;
      *(void *)(v56 + 64) = v80;
      *(void *)(v56 + 72) = v58;
      *(void *)(v56 + 80) = v45;
      *(void *)(v56 + 88) = v46;
      *(void *)(v56 + 96) = v48;
      *(void *)(v56 + 104) = v47;
      *(void *)(v56 + 112) = v49;
      *(void *)(v56 + 120) = v50;
      *(void *)(v56 + 128) = v51;
      *(void *)(v56 + 136) = v52;
      *(_OWORD *)(v56 + 144) = v55;
      uint64_t v59 = v84;
      *(void *)(v56 + 160) = v85;
      *(void *)(v56 + 168) = v59;
      uint64_t v60 = v76;
      *(void *)(v56 + 176) = v77;
      *(void *)(v56 + 184) = v60;
      if (v70 == v86) {
        break;
      }
      uint64_t v24 = v86 + 1;
      a1 = v69;
      uint64_t v26 = &selRef_setUnsupportedSearchResults_;
      uint64_t v27 = &selRef_setUnsupportedSearchResults_;
    }
    swift_release();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C221252C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C2274874(0, v1, 0);
    uint64_t v2 = v18;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      char v7 = *((unsigned char *)v4 + 8);
      uint64_t v8 = v4[3];
      uint64_t v15 = v4[2];
      uint64_t v16 = *(v4 - 2);
      uint64_t v14 = v4[4];
      long long v17 = *(_OWORD *)(v4 + 5);
      unint64_t v9 = *(void *)(v18 + 16);
      unint64_t v10 = *(void *)(v18 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1) {
        sub_1C2274874(v10 > 1, v9 + 1, 1);
      }
      *(void *)(v18 + 16) = v9 + 1;
      unint64_t v11 = v18 + 72 * v9;
      *(void *)(v11 + 32) = v16;
      *(void *)(v11 + 40) = v5;
      *(void *)(v11 + 48) = v6;
      *(unsigned char *)(v11 + 56) = v7;
      *(void *)(v11 + 64) = v15;
      *(void *)(v11 + 72) = v8;
      *(void *)(v11 + 80) = v14;
      *(_OWORD *)(v11 + 88) = v17;
      v4 += 13;
      --v1;
    }
    while (v1);
  }
  uint64_t v12 = sub_1C22133BC(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C2212678(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1C22748D4(0, v1, 0);
    uint64_t v2 = v26;
    uint64_t v4 = (uint64_t *)(a1 + 72);
    do
    {
      uint64_t v22 = *(v4 - 4);
      uint64_t v23 = *(v4 - 5);
      uint64_t v21 = *(v4 - 3);
      char v20 = *((unsigned char *)v4 - 16);
      uint64_t v5 = *v4;
      uint64_t v6 = v4[2];
      uint64_t v18 = v4[1];
      uint64_t v19 = *(v4 - 1);
      uint64_t v7 = v4[4];
      uint64_t v8 = v4[6];
      uint64_t v16 = v4[5];
      uint64_t v17 = v4[3];
      uint64_t v9 = v4[8];
      uint64_t v15 = v4[7];
      char v24 = *((unsigned char *)v4 + 72);
      unint64_t v11 = *(void *)(v26 + 16);
      unint64_t v10 = *(void *)(v26 + 24);
      int64_t v25 = v11 + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11 >= v10 >> 1) {
        sub_1C22748D4(v10 > 1, v25, 1);
      }
      *(void *)(v26 + 16) = v25;
      unint64_t v12 = v26 + 120 * v11;
      *(void *)(v12 + 32) = v23;
      *(void *)(v12 + 40) = v22;
      *(void *)(v12 + 48) = v21;
      *(unsigned char *)(v12 + 56) = v20;
      *(void *)(v12 + 64) = v19;
      *(void *)(v12 + 72) = v5;
      *(void *)(v12 + 80) = v18;
      *(void *)(v12 + 88) = v6;
      *(void *)(v12 + 96) = v17;
      *(void *)(v12 + 104) = v7;
      *(void *)(v12 + 112) = v16;
      *(void *)(v12 + 120) = v8;
      *(void *)(v12 + 128) = v15;
      *(void *)(v12 + 136) = v9;
      v4 += 19;
      *(unsigned char *)(v12 + 144) = v24;
      --v1;
    }
    while (v1);
  }
  uint64_t v13 = sub_1C22136B0(v2);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1C2212814(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1C2274934(0, v1, 0);
    uint64_t v2 = v22;
    uint64_t v4 = (void *)(a1 + 64);
    do
    {
      uint64_t v19 = *(v4 - 3);
      uint64_t v20 = *(v4 - 4);
      uint64_t v18 = *(v4 - 2);
      char v17 = *((unsigned char *)v4 - 8);
      uint64_t v5 = v4[1];
      uint64_t v6 = v4[3];
      uint64_t v15 = v4[2];
      uint64_t v16 = *v4;
      uint64_t v7 = v4[5];
      uint64_t v14 = v4[4];
      uint64_t v8 = v4[7];
      uint64_t v21 = v4[6];
      unint64_t v9 = *(void *)(v22 + 16);
      unint64_t v10 = *(void *)(v22 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1) {
        sub_1C2274934(v10 > 1, v9 + 1, 1);
      }
      *(void *)(v22 + 16) = v9 + 1;
      unint64_t v11 = v22 + 96 * v9;
      *(void *)(v11 + 32) = v20;
      *(void *)(v11 + 40) = v19;
      *(void *)(v11 + 48) = v18;
      *(unsigned char *)(v11 + 56) = v17;
      *(void *)(v11 + 64) = v16;
      *(void *)(v11 + 72) = v5;
      *(void *)(v11 + 80) = v15;
      *(void *)(v11 + 88) = v6;
      *(void *)(v11 + 96) = v14;
      *(void *)(v11 + 104) = v7;
      v4 += 16;
      *(void *)(v11 + 112) = v21;
      *(void *)(v11 + 120) = v8;
      --v1;
    }
    while (v1);
  }
  uint64_t v12 = sub_1C2213A18(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C2212984(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C2274994(0, v1, 0);
    uint64_t v2 = v18;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      char v15 = *((unsigned char *)v4 + 8);
      uint64_t v7 = v4[3];
      uint64_t v14 = v4[2];
      uint64_t v8 = v4[5];
      uint64_t v16 = *(v4 - 2);
      uint64_t v17 = v4[4];
      unint64_t v9 = *(void *)(v18 + 16);
      unint64_t v10 = *(void *)(v18 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1) {
        sub_1C2274994(v10 > 1, v9 + 1, 1);
      }
      *(void *)(v18 + 16) = v9 + 1;
      unint64_t v11 = v18 + (v9 << 6);
      *(void *)(v11 + 32) = v16;
      *(void *)(v11 + 40) = v5;
      *(void *)(v11 + 48) = v6;
      *(unsigned char *)(v11 + 56) = v15;
      *(void *)(v11 + 64) = v14;
      *(void *)(v11 + 72) = v7;
      v4 += 12;
      *(void *)(v11 + 80) = v17;
      *(void *)(v11 + 88) = v8;
      --v1;
    }
    while (v1);
  }
  uint64_t v12 = sub_1C2213D44(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C2212AB4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_1C22749F4(0, v1, 0);
    uint64_t v2 = v28;
    uint64_t v4 = (void *)(a1 + 80);
    do
    {
      uint64_t v17 = *(v4 - 5);
      uint64_t v18 = *(v4 - 6);
      uint64_t v16 = *(v4 - 4);
      char v15 = *((unsigned char *)v4 - 24);
      uint64_t v5 = v4[1];
      uint64_t v23 = *v4;
      uint64_t v24 = *(v4 - 2);
      uint64_t v6 = v4[3];
      uint64_t v7 = v4[5];
      uint64_t v21 = v4[4];
      uint64_t v22 = v4[2];
      uint64_t v8 = v4[7];
      uint64_t v9 = v4[9];
      uint64_t v19 = v4[8];
      uint64_t v20 = v4[6];
      unint64_t v11 = *(void *)(v28 + 16);
      unint64_t v10 = *(void *)(v28 + 24);
      uint64_t v25 = *(v4 - 1);
      int64_t v26 = v11 + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11 >= v10 >> 1) {
        sub_1C22749F4(v10 > 1, v26, 1);
      }
      *(void *)(v28 + 16) = v26;
      unint64_t v12 = v28 + (v11 << 7);
      *(void *)(v12 + 32) = v18;
      *(void *)(v12 + 40) = v17;
      *(void *)(v12 + 48) = v16;
      *(unsigned char *)(v12 + 56) = v15;
      *(_DWORD *)(v12 + 60) = *(_DWORD *)&v27[3];
      *(_DWORD *)(v12 + 57) = *(_DWORD *)v27;
      *(void *)(v12 + 64) = v24;
      *(void *)(v12 + 72) = v25;
      *(void *)(v12 + 80) = v23;
      *(void *)(v12 + 88) = v5;
      *(void *)(v12 + 96) = v22;
      *(void *)(v12 + 104) = v6;
      *(void *)(v12 + 112) = v21;
      *(void *)(v12 + 120) = v7;
      *(void *)(v12 + 128) = v20;
      *(void *)(v12 + 136) = v8;
      *(void *)(v12 + 144) = v19;
      *(void *)(v12 + 152) = v9;
      v4 += 20;
      --v1;
    }
    while (v1);
  }
  uint64_t v13 = sub_1C2214018(v2);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1C2212C6C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1C2274834(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = (uint64_t *)(a1 + 128);
    do
    {
      uint64_t v6 = *(v4 - 3);
      uint64_t v5 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v7 = *v4;
      unint64_t v9 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1) {
        sub_1C2274834(v10 > 1, v9 + 1, 1);
      }
      *(void *)(v14 + 16) = v9 + 1;
      unint64_t v11 = (void *)(v14 + 32 * v9);
      v11[4] = v6;
      v11[5] = v5;
      v11[6] = v8;
      v11[7] = v7;
      v4 += 13;
      --v1;
    }
    while (v1);
  }
  uint64_t v12 = sub_1C2213158(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C2212D68(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1C2274834(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = (uint64_t *)(a1 + 176);
    do
    {
      uint64_t v6 = *(v4 - 3);
      uint64_t v5 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v7 = *v4;
      unint64_t v9 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1) {
        sub_1C2274834(v10 > 1, v9 + 1, 1);
      }
      *(void *)(v14 + 16) = v9 + 1;
      unint64_t v11 = (void *)(v14 + 32 * v9);
      v11[4] = v6;
      v11[5] = v5;
      v11[6] = v8;
      v11[7] = v7;
      v4 += 19;
      --v1;
    }
    while (v1);
  }
  uint64_t v12 = sub_1C2213158(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C2212E64(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1C2274834(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = (uint64_t *)(a1 + 152);
    do
    {
      uint64_t v6 = *(v4 - 3);
      uint64_t v5 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v7 = *v4;
      unint64_t v9 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1) {
        sub_1C2274834(v10 > 1, v9 + 1, 1);
      }
      *(void *)(v14 + 16) = v9 + 1;
      unint64_t v11 = (void *)(v14 + 32 * v9);
      v11[4] = v6;
      v11[5] = v5;
      v11[6] = v8;
      v11[7] = v7;
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  uint64_t v12 = sub_1C2213158(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C2212F60(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1C2274834(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = (uint64_t *)(a1 + 120);
    do
    {
      uint64_t v6 = *(v4 - 3);
      uint64_t v5 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v7 = *v4;
      unint64_t v9 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1) {
        sub_1C2274834(v10 > 1, v9 + 1, 1);
      }
      *(void *)(v14 + 16) = v9 + 1;
      unint64_t v11 = (void *)(v14 + 32 * v9);
      v11[4] = v6;
      v11[5] = v5;
      v11[6] = v8;
      v11[7] = v7;
      v4 += 12;
      --v1;
    }
    while (v1);
  }
  uint64_t v12 = sub_1C2213158(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C221305C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1C2274834(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = (uint64_t *)(a1 + 184);
    do
    {
      uint64_t v6 = *(v4 - 3);
      uint64_t v5 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v7 = *v4;
      unint64_t v9 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1) {
        sub_1C2274834(v10 > 1, v9 + 1, 1);
      }
      *(void *)(v14 + 16) = v9 + 1;
      unint64_t v11 = (void *)(v14 + 32 * v9);
      v11[4] = v6;
      v11[5] = v5;
      v11[6] = v8;
      v11[7] = v7;
      v4 += 20;
      --v1;
    }
    while (v1);
  }
  uint64_t v12 = sub_1C2213158(v2);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C2213158(uint64_t a1)
{
  int64_t v1 = (void *)MEMORY[0x1E4FBC868];
  id v30 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
    while (1)
    {
      uint64_t v6 = *(v3 - 3);
      uint64_t v5 = *(v3 - 2);
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *v3;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      unint64_t v10 = sub_1C21A6470(v6, v5);
      uint64_t v11 = v1[2];
      BOOL v12 = (v9 & 1) == 0;
      uint64_t v13 = v11 + v12;
      if (__OFADD__(v11, v12)) {
        break;
      }
      char v14 = v9;
      if (v1[3] < v13)
      {
        sub_1C227A444(v13, 1);
        int64_t v1 = v30;
        unint64_t v15 = sub_1C21A6470(v6, v5);
        if ((v14 & 1) != (v16 & 1)) {
          goto LABEL_20;
        }
        unint64_t v10 = v15;
      }
      if (v14)
      {
        uint64_t v29 = v7;
        swift_bridgeObjectRelease();
        uint64_t v17 = v1[7];
        uint64_t v18 = *(void **)(v17 + 8 * v10);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v17 + 8 * v10) = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v18 = sub_1C226C554(0, v18[2] + 1, 1, v18);
          *(void *)(v17 + 8 * v10) = v18;
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1)
        {
          uint64_t v18 = sub_1C226C554((void *)(v20 > 1), v21 + 1, 1, v18);
          *(void *)(v17 + 8 * v10) = v18;
        }
        void v18[2] = v21 + 1;
        uint64_t v4 = &v18[4 * v21];
        v4[4] = v6;
        v4[5] = v5;
        v4[6] = v29;
        v4[7] = v8;
      }
      else
      {
        sub_1C2218788(0, (unint64_t *)&qword_1EA2DE7B8, (unint64_t *)&qword_1EA2DE7C0);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_1C255CD90;
        *(void *)(v22 + 32) = v6;
        *(void *)(v22 + 40) = v5;
        *(void *)(v22 + 48) = v7;
        *(void *)(v22 + 56) = v8;
        v1[(v10 >> 6) + 8] |= 1 << v10;
        uint64_t v23 = (uint64_t *)(v1[6] + 16 * v10);
        *uint64_t v23 = v6;
        v23[1] = v5;
        *(void *)(v1[7] + 8 * v10) = v22;
        uint64_t v24 = v1[2];
        BOOL v25 = __OFADD__(v24, 1);
        uint64_t v26 = v24 + 1;
        if (v25) {
          goto LABEL_19;
        }
        v1[2] = v26;
      }
      v3 += 4;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_1C2550910();
    __break(1u);
  }
  else
  {
LABEL_17:
    uint64_t v27 = sub_1C2215668((uint64_t)v1);
    swift_release();
    return v27;
  }
  return result;
}

uint64_t sub_1C22133BC(uint64_t a1)
{
  int64_t v1 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v38 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = swift_bridgeObjectRetain() + 48;
    while (1)
    {
      uint64_t v5 = *(void *)(v3 - 16);
      uint64_t v6 = *(void *)(v3 - 8);
      uint64_t v7 = *(void *)v3;
      char v8 = *(unsigned char *)(v3 + 8);
      uint64_t v9 = *(void *)(v3 + 24);
      uint64_t v35 = *(void *)(v3 + 16);
      uint64_t v36 = *(void *)(v3 + 32);
      long long v37 = *(_OWORD *)(v3 + 40);
      *(void *)&long long v39 = v5;
      *((void *)&v39 + 1) = v6;
      *(void *)&long long v40 = v7;
      BYTE8(v40) = v8;
      *(void *)&long long v41 = v35;
      *((void *)&v41 + 1) = v9;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_1C2457190((uint64_t *)&v39);
      uint64_t v12 = v1[2];
      BOOL v13 = (v10 & 1) == 0;
      uint64_t v14 = v12 + v13;
      if (__OFADD__(v12, v13)) {
        break;
      }
      char v15 = v10;
      if (v1[3] < v14)
      {
        sub_1C227A784(v14, 1);
        int64_t v1 = v38;
        unint64_t v16 = sub_1C2457190((uint64_t *)&v39);
        if ((v15 & 1) != (v17 & 1)) {
          goto LABEL_20;
        }
        unint64_t v11 = v16;
      }
      if (v15)
      {
        char v33 = v8;
        uint64_t v34 = v2;
        swift_bridgeObjectRelease();
        uint64_t v18 = v1[7];
        uint64_t v19 = *(void **)(v18 + 8 * v11);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v18 + 8 * v11) = v19;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v19 = sub_1C226C660(0, v19[2] + 1, 1, v19);
          *(void *)(v18 + 8 * v11) = v19;
        }
        unint64_t v22 = v19[2];
        unint64_t v21 = v19[3];
        unint64_t v23 = v22 + 1;
        if (v22 >= v21 >> 1)
        {
          uint64_t v24 = sub_1C226C660((void *)(v21 > 1), v22 + 1, 1, v19);
          unint64_t v23 = v22 + 1;
          uint64_t v19 = v24;
          *(void *)(v18 + 8 * v11) = v24;
        }
        v19[2] = v23;
        uint64_t v4 = &v19[9 * v22];
        v4[4] = v5;
        v4[5] = v6;
        v4[6] = v7;
        *((unsigned char *)v4 + 56) = v33;
        uint64_t v2 = v34;
        v4[8] = v35;
        v4[9] = v9;
        v4[10] = v36;
        *(_OWORD *)(v4 + 11) = v37;
      }
      else
      {
        sub_1C2218788(0, (unint64_t *)&qword_1EA2DE870, &qword_1EA2DE878);
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1C255CD90;
        *(void *)(v25 + 32) = v5;
        *(void *)(v25 + 40) = v6;
        *(void *)(v25 + 48) = v7;
        *(unsigned char *)(v25 + 56) = v8;
        *(void *)(v25 + 64) = v35;
        *(void *)(v25 + 72) = v9;
        *(void *)(v25 + 80) = v36;
        *(_OWORD *)(v25 + 88) = v37;
        v1[(v11 >> 6) + 8] |= 1 << v11;
        uint64_t v26 = (_OWORD *)(v1[6] + 48 * v11);
        long long v27 = v40;
        *uint64_t v26 = v39;
        v26[1] = v27;
        void v26[2] = v41;
        *(void *)(v1[7] + 8 * v11) = v25;
        uint64_t v28 = v1[2];
        BOOL v29 = __OFADD__(v28, 1);
        uint64_t v30 = v28 + 1;
        if (v29) {
          goto LABEL_19;
        }
        v1[2] = v30;
      }
      v3 += 72;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_1C2550910();
    __break(1u);
  }
  else
  {
LABEL_17:
    uint64_t v31 = sub_1C2215824((uint64_t)v1);
    swift_release();
    return v31;
  }
  return result;
}

uint64_t sub_1C22136B0(uint64_t a1)
{
  int64_t v1 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v52 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v39 = v3;
    while (1)
    {
      uint64_t v40 = v4;
      uint64_t v41 = v2;
      uint64_t v7 = *(void *)(v3 + v4 + 32);
      uint64_t v8 = *(void *)(v3 + v4 + 40);
      uint64_t v9 = *(void *)(v3 + v4 + 48);
      char v10 = *(unsigned char *)(v3 + v4 + 56);
      uint64_t v11 = *(void *)(v3 + v4 + 72);
      uint64_t v12 = *(void *)(v3 + v4 + 88);
      uint64_t v42 = *(void *)(v3 + v4 + 64);
      uint64_t v43 = *(void *)(v3 + v4 + 80);
      uint64_t v13 = *(void *)(v3 + v4 + 104);
      uint64_t v45 = *(void *)(v3 + v4 + 96);
      uint64_t v14 = *(void *)(v3 + v4 + 120);
      uint64_t v47 = *(void *)(v3 + v4 + 112);
      uint64_t v15 = *(void *)(v3 + v4 + 136);
      uint64_t v49 = *(void *)(v3 + v4 + 128);
      char v51 = *(unsigned char *)(v3 + v4 + 144);
      *(void *)&long long v53 = v7;
      *((void *)&v53 + 1) = v8;
      *(void *)&long long v54 = v9;
      BYTE8(v54) = v10;
      *(void *)&long long v55 = v42;
      *((void *)&v55 + 1) = v11;
      swift_bridgeObjectRetain_n();
      uint64_t v44 = v12;
      swift_bridgeObjectRetain();
      uint64_t v46 = v13;
      swift_bridgeObjectRetain();
      uint64_t v48 = v14;
      swift_bridgeObjectRetain();
      uint64_t v50 = v15;
      swift_bridgeObjectRetain();
      unint64_t v17 = sub_1C2457190((uint64_t *)&v53);
      uint64_t v18 = v1[2];
      BOOL v19 = (v16 & 1) == 0;
      uint64_t v20 = v18 + v19;
      if (__OFADD__(v18, v19)) {
        break;
      }
      char v21 = v16;
      if (v1[3] < v20)
      {
        sub_1C227A7A4(v20, 1);
        int64_t v1 = v52;
        unint64_t v22 = sub_1C2457190((uint64_t *)&v53);
        if ((v21 & 1) != (v23 & 1)) {
          goto LABEL_20;
        }
        unint64_t v17 = v22;
      }
      if (v21)
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = v1[7];
        uint64_t v25 = *(void **)(v24 + 8 * v17);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v24 + 8 * v17) = v25;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v25 = sub_1C226C788(0, v25[2] + 1, 1, v25);
          *(void *)(v24 + 8 * v17) = v25;
        }
        unint64_t v28 = v25[2];
        unint64_t v27 = v25[3];
        unint64_t v29 = v28 + 1;
        if (v28 >= v27 >> 1)
        {
          uint64_t v30 = sub_1C226C788((void *)(v27 > 1), v28 + 1, 1, v25);
          unint64_t v29 = v28 + 1;
          uint64_t v25 = v30;
          *(void *)(v24 + 8 * v17) = v30;
        }
        v25[2] = v29;
        uint64_t v5 = &v25[15 * v28];
        v5[4] = v7;
        v5[5] = v8;
        v5[6] = v9;
        *((unsigned char *)v5 + 56) = v10;
        uint64_t v6 = v41;
        v5[8] = v42;
        v5[9] = v11;
        v5[10] = v43;
        v5[11] = v44;
        v5[12] = v45;
        v5[13] = v46;
        v5[14] = v47;
        v5[15] = v48;
        v5[16] = v49;
        v5[17] = v50;
        *((unsigned char *)v5 + 144) = v51;
      }
      else
      {
        sub_1C2218788(0, (unint64_t *)&qword_1EA2DE838, &qword_1EA2DE840);
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_1C255CD90;
        *(void *)(v31 + 32) = v7;
        *(void *)(v31 + 40) = v8;
        *(void *)(v31 + 48) = v9;
        *(unsigned char *)(v31 + 56) = v10;
        *(void *)(v31 + 64) = v42;
        *(void *)(v31 + 72) = v11;
        *(void *)(v31 + 80) = v43;
        *(void *)(v31 + 88) = v12;
        *(void *)(v31 + 96) = v45;
        *(void *)(v31 + 104) = v13;
        *(void *)(v31 + 112) = v47;
        *(void *)(v31 + 120) = v48;
        *(void *)(v31 + 128) = v49;
        *(void *)(v31 + 136) = v50;
        *(unsigned char *)(v31 + 144) = v51;
        v1[(v17 >> 6) + 8] |= 1 << v17;
        id v32 = (_OWORD *)(v1[6] + 48 * v17);
        long long v33 = v54;
        *id v32 = v53;
        v32[1] = v33;
        v32[2] = v55;
        *(void *)(v1[7] + 8 * v17) = v31;
        uint64_t v34 = v1[2];
        BOOL v35 = __OFADD__(v34, 1);
        uint64_t v36 = v34 + 1;
        if (v35) {
          goto LABEL_19;
        }
        v1[2] = v36;
        uint64_t v6 = v41;
      }
      uint64_t v3 = v39;
      uint64_t v4 = v40 + 120;
      uint64_t v2 = v6 - 1;
      if (!v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_1C2550910();
    __break(1u);
  }
  else
  {
LABEL_17:
    uint64_t v37 = sub_1C2215B34((uint64_t)v1);
    swift_release();
    return v37;
  }
  return result;
}

uint64_t sub_1C2213A18(uint64_t a1)
{
  int64_t v1 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v45 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (void *)(swift_bridgeObjectRetain() + 64);
    while (1)
    {
      uint64_t v6 = *(v3 - 4);
      uint64_t v5 = *(v3 - 3);
      uint64_t v7 = *(v3 - 2);
      char v8 = *((unsigned char *)v3 - 8);
      uint64_t v9 = v3[1];
      uint64_t v10 = v3[3];
      uint64_t v38 = *v3;
      uint64_t v39 = v3[2];
      uint64_t v11 = v3[5];
      uint64_t v41 = v3[4];
      uint64_t v12 = v3[7];
      uint64_t v43 = v3[6];
      *(void *)&long long v46 = v6;
      *((void *)&v46 + 1) = v5;
      *(void *)&long long v47 = v7;
      char v37 = v8;
      BYTE8(v47) = v8;
      *(void *)&long long v48 = v38;
      *((void *)&v48 + 1) = v9;
      swift_bridgeObjectRetain_n();
      uint64_t v40 = v10;
      swift_bridgeObjectRetain();
      uint64_t v42 = v11;
      swift_bridgeObjectRetain();
      uint64_t v44 = v12;
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_1C2457190((uint64_t *)&v46);
      uint64_t v15 = v1[2];
      BOOL v16 = (v13 & 1) == 0;
      uint64_t v17 = v15 + v16;
      if (__OFADD__(v15, v16)) {
        break;
      }
      char v18 = v13;
      if (v1[3] < v17)
      {
        sub_1C227A7C4(v17, 1);
        int64_t v1 = v45;
        unint64_t v19 = sub_1C2457190((uint64_t *)&v46);
        if ((v18 & 1) != (v20 & 1)) {
          goto LABEL_20;
        }
        unint64_t v14 = v19;
      }
      if (v18)
      {
        uint64_t v36 = v2;
        swift_bridgeObjectRelease();
        uint64_t v21 = v1[7];
        unint64_t v22 = *(void **)(v21 + 8 * v14);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v21 + 8 * v14) = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v22 = sub_1C226C8A8(0, v22[2] + 1, 1, v22);
          *(void *)(v21 + 8 * v14) = v22;
        }
        unint64_t v25 = v22[2];
        unint64_t v24 = v22[3];
        unint64_t v26 = v25 + 1;
        if (v25 >= v24 >> 1)
        {
          unint64_t v27 = sub_1C226C8A8((void *)(v24 > 1), v25 + 1, 1, v22);
          unint64_t v26 = v25 + 1;
          unint64_t v22 = v27;
          *(void *)(v21 + 8 * v14) = v27;
        }
        v22[2] = v26;
        uint64_t v4 = &v22[12 * v25];
        v4[4] = v6;
        v4[5] = v5;
        v4[6] = v7;
        *((unsigned char *)v4 + 56) = v37;
        v4[8] = v38;
        v4[9] = v9;
        v4[10] = v39;
        v4[11] = v40;
        v4[12] = v41;
        v4[13] = v42;
        v4[14] = v43;
        v4[15] = v44;
        uint64_t v2 = v36;
      }
      else
      {
        sub_1C2218788(0, (unint64_t *)&qword_1EA2DE810, &qword_1EA2DE818);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_1C255CD90;
        *(void *)(v28 + 32) = v6;
        *(void *)(v28 + 40) = v5;
        *(void *)(v28 + 48) = v7;
        *(unsigned char *)(v28 + 56) = v37;
        *(void *)(v28 + 64) = v38;
        *(void *)(v28 + 72) = v9;
        *(void *)(v28 + 80) = v39;
        *(void *)(v28 + 88) = v10;
        *(void *)(v28 + 96) = v41;
        *(void *)(v28 + 104) = v42;
        *(void *)(v28 + 112) = v43;
        *(void *)(v28 + 120) = v44;
        v1[(v14 >> 6) + 8] |= 1 << v14;
        unint64_t v29 = (_OWORD *)(v1[6] + 48 * v14);
        long long v30 = v47;
        *unint64_t v29 = v46;
        v29[1] = v30;
        v29[2] = v48;
        *(void *)(v1[7] + 8 * v14) = v28;
        uint64_t v31 = v1[2];
        BOOL v32 = __OFADD__(v31, 1);
        uint64_t v33 = v31 + 1;
        if (v32) {
          goto LABEL_19;
        }
        v1[2] = v33;
      }
      v3 += 12;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_1C2550910();
    __break(1u);
  }
  else
  {
LABEL_17:
    uint64_t v34 = sub_1C2215E84((uint64_t)v1);
    swift_release();
    return v34;
  }
  return result;
}

uint64_t sub_1C2213D44(uint64_t a1)
{
  int64_t v1 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v39 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = swift_bridgeObjectRetain() + 48;
    while (1)
    {
      uint64_t v6 = *(void *)(v3 - 16);
      uint64_t v5 = *(void *)(v3 - 8);
      uint64_t v7 = *(void *)v3;
      char v8 = *(unsigned char *)(v3 + 8);
      uint64_t v9 = *(void *)(v3 + 24);
      uint64_t v10 = *(void *)(v3 + 40);
      uint64_t v36 = *(void *)(v3 + 16);
      uint64_t v37 = *(void *)(v3 + 32);
      *(void *)&long long v40 = v6;
      *((void *)&v40 + 1) = v5;
      *(void *)&long long v41 = v7;
      BYTE8(v41) = v8;
      *(void *)&long long v42 = v36;
      *((void *)&v42 + 1) = v9;
      swift_bridgeObjectRetain_n();
      uint64_t v38 = v10;
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_1C2457190((uint64_t *)&v40);
      uint64_t v13 = v1[2];
      BOOL v14 = (v11 & 1) == 0;
      uint64_t v15 = v13 + v14;
      if (__OFADD__(v13, v14)) {
        break;
      }
      char v16 = v11;
      if (v1[3] < v15)
      {
        sub_1C227A7E4(v15, 1);
        int64_t v1 = v39;
        unint64_t v17 = sub_1C2457190((uint64_t *)&v40);
        if ((v16 & 1) != (v18 & 1)) {
          goto LABEL_20;
        }
        unint64_t v12 = v17;
      }
      if (v16)
      {
        char v34 = v8;
        uint64_t v35 = v2;
        swift_bridgeObjectRelease();
        uint64_t v19 = v1[7];
        char v20 = *(void **)(v19 + 8 * v12);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v19 + 8 * v12) = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          char v20 = sub_1C226C9CC(0, v20[2] + 1, 1, v20);
          *(void *)(v19 + 8 * v12) = v20;
        }
        unint64_t v23 = v20[2];
        unint64_t v22 = v20[3];
        unint64_t v24 = v23 + 1;
        if (v23 >= v22 >> 1)
        {
          unint64_t v25 = sub_1C226C9CC((void *)(v22 > 1), v23 + 1, 1, v20);
          unint64_t v24 = v23 + 1;
          char v20 = v25;
          *(void *)(v19 + 8 * v12) = v25;
        }
        v20[2] = v24;
        uint64_t v4 = &v20[8 * v23];
        v4[4] = v6;
        v4[5] = v5;
        v4[6] = v7;
        *((unsigned char *)v4 + 56) = v34;
        uint64_t v2 = v35;
        v4[8] = v36;
        v4[9] = v9;
        v4[10] = v37;
        v4[11] = v38;
      }
      else
      {
        sub_1C2218788(0, (unint64_t *)&qword_1EA2DE7F0, &qword_1EA2DE7F8);
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1C255CD90;
        *(void *)(v26 + 32) = v6;
        *(void *)(v26 + 40) = v5;
        *(void *)(v26 + 48) = v7;
        *(unsigned char *)(v26 + 56) = v8;
        *(void *)(v26 + 64) = v36;
        *(void *)(v26 + 72) = v9;
        *(void *)(v26 + 80) = v37;
        *(void *)(v26 + 88) = v38;
        v1[(v12 >> 6) + 8] |= 1 << v12;
        unint64_t v27 = (_OWORD *)(v1[6] + 48 * v12);
        long long v28 = v41;
        _OWORD *v27 = v40;
        v27[1] = v28;
        void v27[2] = v42;
        *(void *)(v1[7] + 8 * v12) = v26;
        uint64_t v29 = v1[2];
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30) {
          goto LABEL_19;
        }
        v1[2] = v31;
      }
      v3 += 64;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_1C2550910();
    __break(1u);
  }
  else
  {
LABEL_17:
    uint64_t v32 = sub_1C22161A0((uint64_t)v1);
    swift_release();
    return v32;
  }
  return result;
}

uint64_t sub_1C2214018(uint64_t a1)
{
  int64_t v1 = (void *)MEMORY[0x1E4FBC868];
  long long v54 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 - 1;
    for (uint64_t i = 32; ; i += 128)
    {
      long long v6 = *(_OWORD *)(a1 + i + 16);
      long long v46 = *(_OWORD *)(a1 + i);
      long long v47 = v6;
      long long v7 = *(_OWORD *)(a1 + i + 80);
      long long v50 = *(_OWORD *)(a1 + i + 64);
      long long v51 = v7;
      long long v8 = *(_OWORD *)(a1 + i + 112);
      long long v52 = *(_OWORD *)(a1 + i + 96);
      long long v53 = v8;
      long long v9 = *(_OWORD *)(a1 + i + 48);
      long long v48 = *(_OWORD *)(a1 + i + 32);
      long long v49 = v9;
      long long v55 = v46;
      *(void *)&long long v56 = v6;
      BYTE8(v56) = BYTE8(v6);
      long long v57 = v48;
      sub_1C2218848((uint64_t)&v46);
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_1C2457190((uint64_t *)&v55);
      uint64_t v12 = v1[2];
      BOOL v13 = (v10 & 1) == 0;
      uint64_t v14 = v12 + v13;
      if (__OFADD__(v12, v13)) {
        break;
      }
      char v15 = v10;
      if (v1[3] < v14)
      {
        sub_1C227A804(v14, 1);
        int64_t v1 = v54;
        unint64_t v16 = sub_1C2457190((uint64_t *)&v55);
        if ((v15 & 1) != (v17 & 1)) {
          goto LABEL_21;
        }
        unint64_t v11 = v16;
      }
      if (v15)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = v1[7];
        uint64_t v19 = *(void **)(v18 + 8 * v11);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v18 + 8 * v11) = v19;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v19 = sub_1C226CAD8(0, v19[2] + 1, 1, v19);
          *(void *)(v18 + 8 * v11) = v19;
        }
        unint64_t v22 = v19[2];
        unint64_t v21 = v19[3];
        if (v22 >= v21 >> 1)
        {
          uint64_t v19 = sub_1C226CAD8((void *)(v21 > 1), v22 + 1, 1, v19);
          *(void *)(v18 + 8 * v11) = v19;
        }
        v19[2] = v22 + 1;
        unint64_t v23 = &v19[16 * v22];
        long long v24 = v46;
        long long v25 = v47;
        long long v26 = v49;
        v23[4] = v48;
        v23[5] = v26;
        void v23[2] = v24;
        v23[3] = v25;
        long long v27 = v50;
        long long v28 = v51;
        long long v29 = v53;
        v23[8] = v52;
        v23[9] = v29;
        v23[6] = v27;
        v23[7] = v28;
        if (!v4) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_1C2218788(0, (unint64_t *)&qword_1EA2DE7C8, &qword_1EA2DE7D0);
        BOOL v30 = (_OWORD *)swift_allocObject();
        long long v31 = v50;
        long long v32 = v52;
        long long v33 = v53;
        v30[7] = v51;
        v30[8] = v32;
        v30[9] = v33;
        long long v34 = v46;
        long long v35 = v47;
        v30[1] = xmmword_1C255CD90;
        v30[2] = v34;
        long long v36 = v48;
        long long v37 = v49;
        v30[3] = v35;
        v30[4] = v36;
        v30[5] = v37;
        v30[6] = v31;
        v1[(v11 >> 6) + 8] |= 1 << v11;
        uint64_t v38 = (_OWORD *)(v1[6] + 48 * v11);
        long long v39 = v57;
        long long v40 = v55;
        v38[1] = v56;
        v38[2] = v39;
        *uint64_t v38 = v40;
        *(void *)(v1[7] + 8 * v11) = v30;
        uint64_t v41 = v1[2];
        BOOL v42 = __OFADD__(v41, 1);
        uint64_t v43 = v41 + 1;
        if (v42) {
          goto LABEL_20;
        }
        v1[2] = v43;
        if (!v4)
        {
LABEL_17:
          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
      }
      --v4;
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    uint64_t result = sub_1C2550910();
    __break(1u);
  }
  else
  {
LABEL_18:
    uint64_t v44 = sub_1C2216488((uint64_t)v1);
    swift_release();
    return v44;
  }
  return result;
}

uint64_t sub_1C22142E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C254C4A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v8 = swift_dynamicCastObjCClass();
  if (v8
    && (long long v9 = (void *)v8,
        id v10 = a1,
        sub_1C2218968(v9, v25),
        v10,
        uint64_t result = sub_1C2219754((uint64_t)v25, (uint64_t)v32, &qword_1EA2DE830, (uint64_t)&_s20FormattedRecordValueVN),
        (uint64_t v12 = v33) != 0))
  {
    uint64_t v13 = v34;
    uint64_t v14 = v35;
    char v15 = (uint64_t *)v32;
    uint64_t v16 = v36;
    uint64_t v17 = v37;
  }
  else
  {
    id v18 = objc_msgSend(a1, sel_preferredDisplayName);
    uint64_t v19 = sub_1C254F470();
    uint64_t v21 = v20;

    uint64_t v26 = v19;
    uint64_t v27 = v21;
    sub_1C254C490();
    sub_1C2218914();
    uint64_t v22 = sub_1C2550160();
    uint64_t v24 = v23;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    char v15 = &v26;
    uint64_t result = sub_1C22D306C(v22, v24, 0, 0xE000000000000000, 0, 0xE000000000000000, &v26);
    uint64_t v16 = v30;
    uint64_t v17 = v31;
    uint64_t v13 = v28;
    uint64_t v14 = v29;
    uint64_t v12 = v27;
  }
  *a2 = *v15;
  a2[1] = v12;
  a2[2] = v13;
  a2[3] = v14;
  a2[4] = v16;
  a2[5] = v17;
  return result;
}

uint64_t sub_1C22144CC@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v117 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1C254C4A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254CAD0();
  int v78 = *(void **)(v10 - 8);
  uint64_t v79 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v15 = (char *)&v70 - v14;
  id v16 = objc_msgSend(a1, sel_chartableCodedQuantitySet);
  if (!v16
    || (uint64_t v17 = v16,
        sub_1C2219118(v16, a2, (uint64_t)v90),
        v17,
        uint64_t result = sub_1C2219754((uint64_t)v90, (uint64_t)v108, &qword_1EA2DE860, (uint64_t)&_s27FormattedRecordValueInRangeVN), (v19 = v109) == 0))
  {
    uint64_t v77 = v6;
    self;
    uint64_t v28 = swift_dynamicCastObjCClass();
    uint64_t v76 = v7;
    if (!v28)
    {
      id v40 = a2;
      goto LABEL_15;
    }
    uint64_t v29 = (void *)v28;
    id v30 = a1;
    id v75 = v29;
    id v31 = objc_msgSend(v29, sel_value);
    if (v31)
    {
      long long v32 = v31;
      id v74 = v30;
      id v33 = objc_msgSend(v31, sel_inspectableValue);

      if (v33)
      {
        uint64_t v73 = a2;
        id v34 = v75;
        id v35 = objc_msgSend(v75, sel_diagnosticTestCodingCollection);
        id v36 = objc_msgSend(v35, sel_codings);

        id v72 = (id)sub_1C21AB51C(0, &qword_1EA2DE858);
        sub_1C254F710();

        id v37 = objc_msgSend(v34, sel_referenceRanges);
        if (v37)
        {
          uint64_t v38 = v37;
          sub_1C21AB51C(0, &qword_1EA2DE868);
          uint64_t v39 = sub_1C254F710();
        }
        else
        {
          uint64_t v39 = 0;
        }
        id v58 = v33;
        uint64_t v59 = (void *)sub_1C254F700();
        swift_bridgeObjectRelease();
        if (v39)
        {
          sub_1C21AB51C(0, &qword_1EA2DE868);
          uint64_t v60 = (void *)sub_1C254F700();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v60 = 0;
        }
        uint64_t v61 = v58;
        uint64_t v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2ADD0]), sel_initWithCodings_value_referenceRanges_, v59, v58, v60);

        id v72 = v61;
        id v63 = objc_msgSend(v74, sel_sortDate);
        id v64 = objc_msgSend(v63, sel_date);

        sub_1C254CA80();
        Date.medicalDateAdjustedToCurrentCalendar()((uint64_t)v15);
        int v71 = (void (*)(char *, uint64_t))v78[1];
        v71(v13, v79);
        uint64_t v65 = (void *)sub_1C254CA50();
        id v99 = 0;
        int v78 = v62;
        id v66 = objc_msgSend(v62, sel_chartableCodedQuantitySetWithDate_error_, v65, &v99);

        if (v66)
        {
          id v67 = v99;
          a2 = v73;
          sub_1C2219118(v66, v73, (uint64_t)v91);

          id v30 = v74;
          v71(v15, v79);
          uint64_t result = sub_1C2219754((uint64_t)v91, (uint64_t)&v99, &qword_1EA2DE860, (uint64_t)&_s27FormattedRecordValueInRangeVN);
          uint64_t v19 = v100;
          id v41 = v75;
          if (v100)
          {
            uint64_t v20 = v101;
            uint64_t v21 = v102;
            uint64_t v22 = v103;
            uint64_t v23 = v104;
            uint64_t v24 = v105;
            uint64_t v25 = v106;
            char v26 = v107 & 1;
            uint64_t v27 = &v99;
            goto LABEL_17;
          }
LABEL_13:
          id v42 = v30;
          id v43 = a2;
          sub_1C2218968(v41, v92);

          sub_1C2219754((uint64_t)v92, (uint64_t)&v93, &qword_1EA2DE830, (uint64_t)&_s20FormattedRecordValueVN);
          uint64_t v44 = v94;
          if (v94)
          {
            uint64_t v45 = v93;
            uint64_t v46 = v95;
            uint64_t v47 = v96;
            uint64_t v48 = v97;
            uint64_t v49 = v98;

LABEL_16:
            uint64_t v27 = (id *)&v80;
            uint64_t result = sub_1C22D3230(v45, v44, v46, v47, v48, v49, 0, 0xE000000000000000, (uint64_t)&v80, 1u);
            char v26 = v88;
            uint64_t v24 = v86;
            uint64_t v25 = v87;
            uint64_t v22 = v84;
            uint64_t v23 = v85;
            uint64_t v20 = v82;
            uint64_t v21 = v83;
            uint64_t v19 = v81;
            goto LABEL_17;
          }
LABEL_15:
          id v50 = objc_msgSend(a1, sel_preferredDisplayName);
          uint64_t v51 = sub_1C254F470();
          long long v52 = a2;
          uint64_t v54 = v53;

          uint64_t v80 = v51;
          uint64_t v81 = v54;
          sub_1C254C490();
          sub_1C2218914();
          uint64_t v55 = sub_1C2550160();
          uint64_t v57 = v56;
          (*(void (**)(char *, uint64_t))(v76 + 8))(v9, v77);
          swift_bridgeObjectRelease();
          sub_1C22D306C(v55, v57, 0, 0xE000000000000000, 0, 0xE000000000000000, v89);

          uint64_t v48 = v89[4];
          uint64_t v49 = v89[5];
          uint64_t v46 = v89[2];
          uint64_t v47 = v89[3];
          uint64_t v45 = v89[0];
          uint64_t v44 = v89[1];
          goto LABEL_16;
        }
        id v68 = v99;
        unint64_t v69 = (void *)sub_1C254C820();

        swift_willThrow();
        id v30 = v74;

        v71(v15, v79);
        a2 = v73;
LABEL_12:
        id v41 = v75;
        goto LABEL_13;
      }
      id v30 = v74;
    }

    goto LABEL_12;
  }
  uint64_t v20 = v110;
  uint64_t v21 = v111;
  uint64_t v22 = v112;
  uint64_t v23 = v113;
  uint64_t v24 = v114;
  uint64_t v25 = v115;
  char v26 = v116 & 1;
  uint64_t v27 = (id *)v108;
LABEL_17:
  *(void *)a3 = *v27;
  *(void *)(a3 + 8) = v19;
  *(void *)(a3 + 16) = v20;
  *(void *)(a3 + 24) = v21;
  *(void *)(a3 + 32) = v22;
  *(void *)(a3 + 40) = v23;
  *(void *)(a3 + 48) = v24;
  *(void *)(a3 + 56) = v25;
  *(unsigned char *)(a3 + 64) = v26;
  return result;
}

__n128 sub_1C2214BBC@<Q0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C254C4A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v12 = *(void **)(a2 + *(int *)(_s13ConfigurationVMa() + 32));
    id v13 = a1;
    id v14 = v12;
    sub_1C2214E18(v11, v14, (uint64_t)v33);
  }
  else
  {
    id v15 = objc_msgSend(a1, sel_preferredDisplayName);
    uint64_t v16 = sub_1C254F470();
    uint64_t v18 = v17;

    *(void *)&v33[0] = v16;
    *((void *)&v33[0] + 1) = v18;
    sub_1C254C490();
    sub_1C2218914();
    uint64_t v19 = sub_1C2550160();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    id v22 = objc_msgSend(a1, sel_sourceRevision);
    id v23 = objc_msgSend(v22, sel_source);

    id v24 = objc_msgSend(v23, sel_bundleIdentifier);
    uint64_t v25 = sub_1C254F470();
    uint64_t v27 = v26;

    sub_1C22D3458(v19, v21, 0, 0xE000000000000000, 0, 0xE000000000000000, 0, 0xE000000000000000, (uint64_t *)v33, v25, v27);
  }
  uint64_t v28 = v34;
  uint64_t v29 = v35;
  long long v31 = v33[1];
  __n128 result = (__n128)v33[2];
  long long v32 = v36;
  *(_OWORD *)a3 = v33[0];
  *(_OWORD *)(a3 + 16) = v31;
  *(__n128 *)(a3 + 32) = result;
  *(void *)(a3 + 48) = v28;
  *(void *)(a3 + 56) = v29;
  *(_OWORD *)(a3 + 64) = v32;
  return result;
}

__n128 sub_1C2214E18@<Q0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C254CAD0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a1, sel_preferredDisplayName);
  uint64_t v11 = sub_1C254F470();
  uint64_t v47 = v12;
  uint64_t v48 = v11;

  id v13 = objc_msgSend(a1, sel_onsetDate);
  if (v13)
  {
    id v14 = v13;
    id v15 = objc_msgSend(v14, sel_underlyingDate);
    sub_1C254CA80();

    uint64_t v16 = (void *)sub_1C254CA50();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    id v17 = objc_msgSend(a2, sel_stringFromDate_, v16);

    uint64_t v18 = sub_1C254F470();
    uint64_t v45 = v19;
    uint64_t v46 = v18;
  }
  else
  {
    uint64_t v45 = 0xE000000000000000;
    uint64_t v46 = 0;
  }
  id v20 = objc_msgSend(a1, sel_lastOccurrenceDate);
  if (v20)
  {
    id v21 = v20;
    id v22 = objc_msgSend(v21, sel_underlyingDate);
    sub_1C254CA80();

    id v23 = (void *)sub_1C254CA50();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    id v24 = objc_msgSend(a2, sel_stringFromDate_, v23);

    uint64_t v44 = sub_1C254F470();
    uint64_t v26 = v25;
  }
  else
  {
    uint64_t v44 = 0;
    uint64_t v26 = 0xE000000000000000;
  }
  id v27 = objc_msgSend(a1, sel_recordedDate);
  if (v27)
  {
    id v28 = v27;
    id v29 = objc_msgSend(v28, sel_underlyingDate);
    sub_1C254CA80();

    id v30 = (void *)sub_1C254CA50();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    id v31 = objc_msgSend(a2, (SEL)&selRef_inFlightClinicalSharingLoginViewController, v30);

    uint64_t v32 = sub_1C254F470();
    uint64_t v34 = v33;
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v34 = 0xE000000000000000;
  }
  id v35 = objc_msgSend(a1, sel_sourceRevision);
  id v36 = objc_msgSend(v35, sel_source);

  id v37 = objc_msgSend(v36, sel_bundleIdentifier);
  uint64_t v38 = sub_1C254F470();
  uint64_t v40 = v39;

  sub_1C22D3458(v48, v47, v46, v45, v44, v26, v32, v34, (uint64_t *)v49, v38, v40);
  long long v41 = v49[3];
  *(_OWORD *)(a3 + 32) = v49[2];
  *(_OWORD *)(a3 + 48) = v41;
  *(_OWORD *)(a3 + 64) = v49[4];
  __n128 result = (__n128)v49[1];
  *(_OWORD *)a3 = v49[0];
  *(__n128 *)(a3 + 16) = result;
  return result;
}

uint64_t sub_1C22151D8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254C4A0();
  unint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    sub_1C2203AFC((uint64_t)&unk_1F1D8E248);
LABEL_31:
    id v39 = objc_msgSend(a1, sel_preferredDisplayName);
    uint64_t v40 = sub_1C254F470();
    uint64_t v42 = v41;

    uint64_t v59 = (void *)v40;
    uint64_t v60 = v42;
    sub_1C254C490();
    sub_1C2218914();
    uint64_t v43 = sub_1C2550160();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    return v43;
  }
  unint64_t v8 = sub_1C243EF88(a1);
  long long v9 = (void *)sub_1C2203AFC(MEMORY[0x1E4FBC860]);
  if (v8 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2550620();
    if (v10) {
      goto LABEL_4;
    }
    goto LABEL_30;
  }
  uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v10)
  {
LABEL_30:
    swift_bridgeObjectRelease_n();
    goto LABEL_31;
  }
LABEL_4:
  uint64_t v46 = a1;
  uint64_t v47 = v7;
  unint64_t v48 = v5;
  uint64_t v49 = v4;
  unint64_t v51 = v8;
  unint64_t v52 = v8 & 0xC000000000000001;
  uint64_t v11 = 4;
  uint64_t v50 = v10;
  while (1)
  {
    if (v52) {
      id v13 = (id)MEMORY[0x1C87588E0](v11 - 4, v8);
    }
    else {
      id v13 = *(id *)(v8 + 8 * v11);
    }
    unint64_t v5 = (unint64_t)v13;
    a1 = (void *)(v11 - 3);
    if (__OFADD__(v11 - 4, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    id v14 = objc_msgSend(v13, sel_title);
    if (!v14) {
      break;
    }
    id v15 = v14;
    uint64_t v54 = v11 - 3;
    uint64_t v16 = sub_1C254F470();
    uint64_t v18 = v17;

    uint64_t v59 = (void *)v16;
    uint64_t v60 = v18;
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t v4 = (uint64_t)v59;
    uint64_t v19 = v60;
    id v53 = (id)v5;
    id v20 = objc_msgSend((id)v5, sel_subtitle);
    if (!v20) {
      goto LABEL_33;
    }
    id v21 = v20;
    uint64_t v22 = sub_1C254F470();
    uint64_t v24 = v23;

    uint64_t v59 = (void *)v22;
    uint64_t v60 = v24;
    uint64_t v57 = 2570;
    unint64_t v58 = 0xE200000000000000;
    uint64_t v55 = 8236;
    unint64_t v56 = 0xE200000000000000;
    sub_1C2218914();
    a1 = (void *)sub_1C2550170();
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v59 = v9;
    unint64_t v8 = (unint64_t)v9;
    unint64_t v5 = sub_1C21A6470(v4, v19);
    uint64_t v29 = v9[2];
    BOOL v30 = (v28 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      goto LABEL_27;
    }
    uint64_t v7 = v28;
    if (v9[3] >= v31)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        long long v9 = v59;
        if (v28) {
          goto LABEL_5;
        }
      }
      else
      {
        unint64_t v8 = (unint64_t)&v59;
        sub_1C24ADFB8();
        long long v9 = v59;
        if (v7) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_1C227A104(v31, isUniquelyReferenced_nonNull_native);
      unint64_t v8 = (unint64_t)v59;
      unint64_t v32 = sub_1C21A6470(v4, v19);
      if ((v7 & 1) != (v33 & 1)) {
        goto LABEL_34;
      }
      unint64_t v5 = v32;
      long long v9 = v59;
      if (v7)
      {
LABEL_5:
        uint64_t v12 = (void *)(v9[7] + 16 * v5);
        swift_bridgeObjectRelease();
        *uint64_t v12 = a1;
        v12[1] = v26;
        goto LABEL_6;
      }
    }
    v9[(v5 >> 6) + 8] |= 1 << v5;
    uint64_t v34 = (uint64_t *)(v9[6] + 16 * v5);
    *uint64_t v34 = v4;
    v34[1] = v19;
    id v35 = (void *)(v9[7] + 16 * v5);
    *id v35 = a1;
    v35[1] = v26;
    uint64_t v36 = v9[2];
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37) {
      goto LABEL_28;
    }
    v9[2] = v38;
    swift_bridgeObjectRetain();
LABEL_6:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v11;
    unint64_t v8 = v51;
    if (v54 == v50)
    {
      swift_bridgeObjectRelease_n();
      unint64_t v5 = v48;
      uint64_t v4 = v49;
      a1 = v46;
      uint64_t v7 = v47;
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  uint64_t result = sub_1C2550910();
  __break(1u);
  return result;
}

uint64_t sub_1C2215668(uint64_t a1)
{
  sub_1C22187E4();
  uint64_t result = sub_1C2550650();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = *(void **)(*(void *)(a1 + 56) + 8 * i);
    if (!v16[2])
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v17 = *(void *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t result = *(void *)(*(void *)(a1 + 48) + 16 * i + 8);
    uint64_t v18 = v16[6];
    uint64_t v19 = v16[7];
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v20 = 16 * i;
    id v21 = (void *)(v3[6] + v20);
    *id v21 = v17;
    v21[1] = result;
    uint64_t v22 = (void *)(v3[7] + v20);
    *uint64_t v22 = v18;
    v22[1] = v19;
    uint64_t v23 = v3[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_23;
    }
    v3[2] = v25;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14) {
        break;
      }
    }
LABEL_16:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 2;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_16;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C2215824(uint64_t a1)
{
  sub_1C22196C8(0, &qword_1EA2DE880, &qword_1EA2DE888, (uint64_t)&_s23FormattedRecordMetadataVN);
  uint64_t result = sub_1C2550650();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v37 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v33 = a1 + 64;
  uint64_t v34 = (void *)result;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v35 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v36 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v9 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    uint64_t v14 = *(void *)(v37 + 48) + 48 * i;
    uint64_t v15 = *(void *)(v14 + 32);
    uint64_t v16 = *(void *)(*(void *)(v37 + 56) + 8 * i);
    int64_t v17 = *(void *)(v16 + 16);
    long long v43 = *(_OWORD *)v14;
    if (v17)
    {
      uint64_t v38 = *(void *)(v14 + 16);
      char v39 = *(unsigned char *)(v14 + 24);
      unint64_t v41 = v8;
      int64_t v42 = v4;
      uint64_t v45 = MEMORY[0x1E4FBC860];
      uint64_t v40 = *(void *)(v14 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C2274854(0, v17, 0);
      uint64_t v18 = v45;
      uint64_t v19 = (_OWORD *)(v16 + 88);
      do
      {
        uint64_t v20 = *((void *)v19 - 1);
        long long v44 = *v19;
        unint64_t v22 = *(void *)(v45 + 16);
        unint64_t v21 = *(void *)(v45 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v22 >= v21 >> 1) {
          sub_1C2274854(v21 > 1, v22 + 1, 1);
        }
        *(void *)(v45 + 16) = v22 + 1;
        uint64_t v23 = v45 + 24 * v22;
        *(void *)(v23 + 32) = v20;
        *(_OWORD *)(v23 + 40) = v44;
        uint64_t v19 = (_OWORD *)((char *)v19 + 72);
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      uint64_t v3 = v34;
      unint64_t v8 = v41;
      int64_t v4 = v42;
      uint64_t result = v40;
      char v24 = v39;
      uint64_t v25 = v38;
      long long v26 = v43;
    }
    else
    {
      char v27 = *(unsigned char *)(v14 + 24);
      uint64_t v28 = *(void *)(v14 + 16);
      uint64_t result = swift_bridgeObjectRetain();
      long long v26 = v43;
      uint64_t v25 = v28;
      char v24 = v27;
      uint64_t v18 = MEMORY[0x1E4FBC860];
    }
    *(void *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v29 = v3[6] + 48 * i;
    *(_OWORD *)uint64_t v29 = v26;
    *(void *)(v29 + 16) = v25;
    *(unsigned char *)(v29 + 24) = v24;
    *(void *)(v29 + 32) = v15;
    *(void *)(v29 + 40) = result;
    *(void *)(v3[7] + 8 * i) = v18;
    uint64_t v30 = v3[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v3[2] = v32;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_29;
    }
    if (v11 >= v35) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v33 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v35) {
        return (uint64_t)v3;
      }
      unint64_t v12 = *(void *)(v33 + 8 * v4);
      if (!v12) {
        break;
      }
    }
LABEL_16:
    unint64_t v8 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 2;
  if (v13 >= v35) {
    return (uint64_t)v3;
  }
  unint64_t v12 = *(void *)(v33 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v35) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v33 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C2215B34(uint64_t a1)
{
  sub_1C22196C8(0, &qword_1EA2DE848, &qword_1EA2DE850, (uint64_t)&_s27FormattedRecordValueInRangeVN);
  uint64_t result = sub_1C2550650();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v38 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v34 = a1 + 64;
  int64_t v35 = (void *)result;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v36 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v37 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v9 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    uint64_t v14 = *(void *)(v38 + 48) + 48 * i;
    uint64_t v15 = *(void *)(v14 + 16);
    char v16 = *(unsigned char *)(v14 + 24);
    uint64_t v17 = *(void *)(v14 + 32);
    uint64_t v18 = *(void *)(*(void *)(v38 + 56) + 8 * i);
    int64_t v19 = *(void *)(v18 + 16);
    long long v45 = *(_OWORD *)v14;
    if (v19)
    {
      uint64_t v39 = *(void *)(v14 + 16);
      char v40 = *(unsigned char *)(v14 + 24);
      uint64_t v41 = *(void *)(v14 + 32);
      unint64_t v43 = i;
      int64_t v44 = v4;
      uint64_t v52 = MEMORY[0x1E4FBC860];
      uint64_t v42 = *(void *)(v14 + 40);
      swift_bridgeObjectRetain();
      uint64_t v46 = v18;
      swift_bridgeObjectRetain();
      sub_1C22748B4(0, v19, 0);
      uint64_t v20 = 0;
      uint64_t v21 = v52;
      do
      {
        uint64_t v22 = *(void *)(v46 + v20 + 88);
        uint64_t v23 = *(void *)(v46 + v20 + 104);
        uint64_t v50 = *(void *)(v46 + v20 + 96);
        uint64_t v51 = *(void *)(v46 + v20 + 80);
        uint64_t v24 = *(void *)(v46 + v20 + 120);
        uint64_t v25 = *(void *)(v46 + v20 + 136);
        uint64_t v48 = *(void *)(v46 + v20 + 128);
        uint64_t v49 = *(void *)(v46 + v20 + 112);
        char v47 = *(unsigned char *)(v46 + v20 + 144);
        unint64_t v27 = *(void *)(v52 + 16);
        unint64_t v26 = *(void *)(v52 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27 >= v26 >> 1) {
          sub_1C22748B4(v26 > 1, v27 + 1, 1);
        }
        *(void *)(v52 + 16) = v27 + 1;
        uint64_t v28 = v52 + 72 * v27;
        *(void *)(v28 + 32) = v51;
        *(void *)(v28 + 40) = v22;
        *(void *)(v28 + 48) = v50;
        *(void *)(v28 + 56) = v23;
        *(void *)(v28 + 64) = v49;
        *(void *)(v28 + 72) = v24;
        *(void *)(v28 + 80) = v48;
        *(void *)(v28 + 88) = v25;
        *(unsigned char *)(v28 + 96) = v47;
        v20 += 120;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      uint64_t v3 = v35;
      int64_t v4 = v44;
      uint64_t result = v42;
      unint64_t i = v43;
      uint64_t v17 = v41;
      char v16 = v40;
      uint64_t v15 = v39;
      long long v29 = v45;
    }
    else
    {
      uint64_t result = swift_bridgeObjectRetain();
      long long v29 = v45;
      uint64_t v21 = MEMORY[0x1E4FBC860];
    }
    *(void *)(v37 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v30 = v3[6] + 48 * i;
    *(_OWORD *)uint64_t v30 = v29;
    *(void *)(v30 + 16) = v15;
    *(unsigned char *)(v30 + 24) = v16;
    *(void *)(v30 + 32) = v17;
    *(void *)(v30 + 40) = result;
    *(void *)(v3[7] + 8 * i) = v21;
    uint64_t v31 = v3[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v3[2] = v33;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_29;
    }
    if (v11 >= v36) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v34 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v36) {
        return (uint64_t)v3;
      }
      unint64_t v12 = *(void *)(v34 + 8 * v4);
      if (!v12) {
        break;
      }
    }
LABEL_16:
    unint64_t v8 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 2;
  if (v13 >= v36) {
    return (uint64_t)v3;
  }
  unint64_t v12 = *(void *)(v34 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v36) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v34 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C2215E84(uint64_t a1)
{
  sub_1C22196C8(0, &qword_1EA2DE820, &qword_1EA2DE828, (uint64_t)&_s20FormattedRecordValueVN);
  uint64_t result = sub_1C2550650();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v38 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v34 = a1 + 64;
  int64_t v35 = (void *)result;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v36 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v37 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v9 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    uint64_t v14 = *(void *)(v38 + 48) + 48 * i;
    uint64_t v15 = *(void *)(v14 + 16);
    char v16 = *(unsigned char *)(v14 + 24);
    uint64_t v17 = *(void *)(v14 + 32);
    uint64_t v18 = *(void *)(*(void *)(v38 + 56) + 8 * i);
    int64_t v19 = *(void *)(v18 + 16);
    long long v45 = *(_OWORD *)v14;
    if (v19)
    {
      uint64_t v39 = *(void *)(v14 + 16);
      char v40 = *(unsigned char *)(v14 + 24);
      uint64_t v41 = *(void *)(v14 + 32);
      unint64_t v43 = i;
      unint64_t v44 = v8;
      uint64_t v48 = MEMORY[0x1E4FBC860];
      uint64_t v42 = *(void *)(v14 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C2274914(0, v19, 0);
      uint64_t v20 = v48;
      uint64_t v21 = (uint64_t *)(v18 + 120);
      do
      {
        uint64_t v22 = *(v21 - 5);
        uint64_t v23 = *(v21 - 4);
        uint64_t v24 = *(v21 - 2);
        uint64_t v25 = *v21;
        uint64_t v46 = *(v21 - 1);
        uint64_t v47 = *(v21 - 3);
        unint64_t v27 = *(void *)(v48 + 16);
        unint64_t v26 = *(void *)(v48 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27 >= v26 >> 1) {
          sub_1C2274914(v26 > 1, v27 + 1, 1);
        }
        *(void *)(v48 + 16) = v27 + 1;
        uint64_t v28 = (void *)(v48 + 48 * v27);
        v28[4] = v22;
        v28[5] = v23;
        v28[6] = v47;
        v28[7] = v24;
        v28[8] = v46;
        v28[9] = v25;
        v21 += 12;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      uint64_t v3 = v35;
      unint64_t v8 = v44;
      uint64_t result = v42;
      unint64_t i = v43;
      uint64_t v17 = v41;
      char v16 = v40;
      uint64_t v15 = v39;
      long long v29 = v45;
    }
    else
    {
      uint64_t result = swift_bridgeObjectRetain();
      long long v29 = v45;
      uint64_t v20 = MEMORY[0x1E4FBC860];
    }
    *(void *)(v37 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v30 = v3[6] + 48 * i;
    *(_OWORD *)uint64_t v30 = v29;
    *(void *)(v30 + 16) = v15;
    *(unsigned char *)(v30 + 24) = v16;
    *(void *)(v30 + 32) = v17;
    *(void *)(v30 + 40) = result;
    *(void *)(v3[7] + 8 * i) = v20;
    uint64_t v31 = v3[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v3[2] = v33;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_29;
    }
    if (v11 >= v36) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v34 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v36) {
        return (uint64_t)v3;
      }
      unint64_t v12 = *(void *)(v34 + 8 * v4);
      if (!v12) {
        break;
      }
    }
LABEL_16:
    unint64_t v8 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 2;
  if (v13 >= v36) {
    return (uint64_t)v3;
  }
  unint64_t v12 = *(void *)(v34 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v36) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v34 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C22161A0(uint64_t a1)
{
  sub_1C22196C8(0, &qword_1EA2DE800, &qword_1EA2DE808, (uint64_t)&_s15FormattedRecordVN);
  uint64_t result = sub_1C2550650();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v37 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v33 = a1 + 64;
  uint64_t v34 = (void *)result;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v35 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v36 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v9 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    uint64_t v14 = *(void *)(v37 + 48) + 48 * i;
    char v15 = *(unsigned char *)(v14 + 24);
    uint64_t v16 = *(void *)(v14 + 32);
    uint64_t v17 = *(void *)(*(void *)(v37 + 56) + 8 * i);
    int64_t v18 = *(void *)(v17 + 16);
    long long v43 = *(_OWORD *)v14;
    if (v18)
    {
      uint64_t v38 = *(void *)(v14 + 16);
      uint64_t v39 = *(void *)(v14 + 32);
      unint64_t v41 = v8;
      int64_t v42 = v4;
      uint64_t v44 = MEMORY[0x1E4FBC860];
      uint64_t v40 = *(void *)(v14 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C2274974(0, v18, 0);
      uint64_t v19 = v44;
      uint64_t v20 = (uint64_t *)(v17 + 88);
      do
      {
        uint64_t v21 = *(v20 - 1);
        uint64_t v22 = *v20;
        unint64_t v24 = *(void *)(v44 + 16);
        unint64_t v23 = *(void *)(v44 + 24);
        swift_bridgeObjectRetain();
        if (v24 >= v23 >> 1) {
          sub_1C2274974(v23 > 1, v24 + 1, 1);
        }
        *(void *)(v44 + 16) = v24 + 1;
        uint64_t v25 = v44 + 16 * v24;
        *(void *)(v25 + 32) = v21;
        *(void *)(v25 + 40) = v22;
        v20 += 8;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      uint64_t v3 = v34;
      unint64_t v8 = v41;
      int64_t v4 = v42;
      uint64_t v16 = v39;
      uint64_t result = v40;
      uint64_t v26 = v38;
      long long v27 = v43;
    }
    else
    {
      uint64_t v28 = *(void *)(v14 + 16);
      uint64_t result = swift_bridgeObjectRetain();
      long long v27 = v43;
      uint64_t v26 = v28;
      uint64_t v19 = MEMORY[0x1E4FBC860];
    }
    *(void *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v29 = v3[6] + 48 * i;
    *(_OWORD *)uint64_t v29 = v27;
    *(void *)(v29 + 16) = v26;
    *(unsigned char *)(v29 + 24) = v15;
    *(void *)(v29 + 32) = v16;
    *(void *)(v29 + 40) = result;
    *(void *)(v3[7] + 8 * i) = v19;
    uint64_t v30 = v3[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v3[2] = v32;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_29;
    }
    if (v11 >= v35) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v33 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v35) {
        return (uint64_t)v3;
      }
      unint64_t v12 = *(void *)(v33 + 8 * v4);
      if (!v12) {
        break;
      }
    }
LABEL_16:
    unint64_t v8 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 2;
  if (v13 >= v35) {
    return (uint64_t)v3;
  }
  unint64_t v12 = *(void *)(v33 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v35) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v33 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C2216488(uint64_t a1)
{
  sub_1C22196C8(0, &qword_1EA2DE7D8, &qword_1EA2DE7E0, (uint64_t)&_s22FormattedRecord3ValuesVN);
  uint64_t result = sub_1C2550650();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v40 = a1;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v36 = a1 + 64;
  uint64_t v37 = (void *)result;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v38 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v39 = result + 64;
  if ((v7 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v9 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    uint64_t v14 = *(void *)(v40 + 48) + 48 * i;
    uint64_t v15 = *(void *)(v14 + 16);
    char v16 = *(unsigned char *)(v14 + 24);
    uint64_t v17 = *(void *)(v14 + 32);
    uint64_t v18 = *(void *)(*(void *)(v40 + 56) + 8 * i);
    int64_t v19 = *(void *)(v18 + 16);
    long long v48 = *(_OWORD *)v14;
    if (v19)
    {
      uint64_t v41 = *(void *)(v14 + 16);
      char v42 = *(unsigned char *)(v14 + 24);
      uint64_t v43 = *(void *)(v14 + 32);
      unint64_t v45 = i;
      unint64_t v46 = v8;
      int64_t v47 = v4;
      uint64_t v55 = MEMORY[0x1E4FBC860];
      uint64_t v44 = *(void *)(v14 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v20 = v18;
      sub_1C22749D4(0, v19, 0);
      uint64_t v21 = v55;
      uint64_t v22 = (uint64_t *)(v20 + 152);
      do
      {
        uint64_t v23 = *(v22 - 8);
        uint64_t v24 = *(v22 - 6);
        uint64_t v52 = *(v22 - 7);
        uint64_t v53 = *(v22 - 9);
        uint64_t v25 = *(v22 - 4);
        uint64_t v26 = *(v22 - 2);
        uint64_t v50 = *(v22 - 3);
        uint64_t v51 = *(v22 - 5);
        uint64_t v27 = *v22;
        uint64_t v49 = *(v22 - 1);
        unint64_t v29 = *(void *)(v55 + 16);
        unint64_t v28 = *(void *)(v55 + 24);
        int64_t v54 = v29 + 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v29 >= v28 >> 1) {
          sub_1C22749D4(v28 > 1, v54, 1);
        }
        v22 += 16;
        *(void *)(v55 + 16) = v54;
        uint64_t v30 = (void *)(v55 + 80 * v29);
        v30[4] = v53;
        v30[5] = v23;
        v30[6] = v52;
        v30[7] = v24;
        v30[8] = v51;
        v30[9] = v25;
        v30[10] = v50;
        v30[11] = v26;
        v30[12] = v49;
        v30[13] = v27;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      uint64_t v3 = v37;
      unint64_t v8 = v46;
      int64_t v4 = v47;
      uint64_t result = v44;
      unint64_t i = v45;
      uint64_t v17 = v43;
      char v16 = v42;
      uint64_t v15 = v41;
      long long v31 = v48;
    }
    else
    {
      uint64_t result = swift_bridgeObjectRetain();
      long long v31 = v48;
      uint64_t v21 = MEMORY[0x1E4FBC860];
    }
    *(void *)(v39 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v32 = v3[6] + 48 * i;
    *(_OWORD *)uint64_t v32 = v31;
    *(void *)(v32 + 16) = v15;
    *(unsigned char *)(v32 + 24) = v16;
    *(void *)(v32 + 32) = v17;
    *(void *)(v32 + 40) = result;
    *(void *)(v3[7] + 8 * i) = v21;
    uint64_t v33 = v3[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34)
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v3[2] = v35;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_29;
    }
    if (v11 >= v38) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v36 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v38) {
        return (uint64_t)v3;
      }
      unint64_t v12 = *(void *)(v36 + 8 * v4);
      if (!v12) {
        break;
      }
    }
LABEL_16:
    unint64_t v8 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 2;
  if (v13 >= v38) {
    return (uint64_t)v3;
  }
  unint64_t v12 = *(void *)(v36 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v38) {
      return (uint64_t)v3;
    }
    unint64_t v12 = *(void *)(v36 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1C22167E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(uint64_t *__return_ptr, id *, void *))
{
  uint64_t v6 = v5;
  uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = ~v8;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = -v8;
  v51[4] = a1;
  v51[5] = a1 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  v51[6] = v9;
  v51[7] = 0;
  v51[8] = v12 & v10;
  v51[9] = a2;
  v51[10] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v13 = sub_1C2216BE4();
  if (!v14)
  {
LABEL_20:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C21ABD08();
    swift_release();
    return;
  }
  uint64_t v17 = v13;
  uint64_t v18 = v14;
  uint64_t v19 = v15;
  uint64_t v20 = v16;
  while (1)
  {
    v51[2] = v17;
    v51[3] = v18;
    v51[0] = v19;
    v51[1] = v20;
    uint64_t v30 = *(void **)v6;
    unint64_t v32 = sub_1C21A6470(v17, v18);
    uint64_t v33 = v30[2];
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      sub_1C2550910();
      __break(1u);
      goto LABEL_27;
    }
    char v36 = v31;
    if (v30[3] < v35) {
      break;
    }
    if (a4)
    {
      if (v31) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1C24ADFB8();
      if (v36) {
        goto LABEL_16;
      }
    }
LABEL_6:
    uint64_t v21 = *(void **)v6;
    *(void *)(*(void *)v6 + 8 * (v32 >> 6) + 64) |= 1 << v32;
    uint64_t v22 = (uint64_t *)(v21[6] + 16 * v32);
    *uint64_t v22 = v17;
    v22[1] = v18;
    uint64_t v23 = (void *)(v21[7] + 16 * v32);
    *uint64_t v23 = v19;
    v23[1] = v20;
    uint64_t v24 = v21[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_25;
    }
    v21[2] = v26;
LABEL_8:
    uint64_t v17 = sub_1C2216BE4();
    uint64_t v18 = v27;
    uint64_t v19 = v28;
    uint64_t v20 = v29;
    a4 = 1;
    if (!v27) {
      goto LABEL_20;
    }
  }
  sub_1C227A104(v35, a4 & 1);
  unint64_t v37 = sub_1C21A6470(v17, v18);
  if ((v36 & 1) != (v38 & 1)) {
    goto LABEL_26;
  }
  unint64_t v32 = v37;
  if ((v36 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_16:
  uint64_t v39 = *(void **)v6;
  uint64_t v40 = *(void *)(*(void *)v6 + 56) + 16 * v32;
  uint64_t v41 = *(void **)(v40 + 8);
  v48[0] = *(id *)v40;
  v48[1] = v41;
  swift_bridgeObjectRetain();
  char v42 = v52;
  a5(&v49, v48, v51);
  if (!v42)
  {
    uint64_t v52 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v43 = (void *)(v39[7] + 16 * v32);
    uint64_t v44 = v49;
    unint64_t v45 = v50;
    swift_bridgeObjectRelease();
    *uint64_t v43 = v44;
    v43[1] = v45;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  v48[0] = v42;
  id v46 = v42;
  sub_1C2206F9C();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C21ABD08();
    swift_release();

    return;
  }
LABEL_27:
  uint64_t v49 = 0;
  unint64_t v50 = 0xE000000000000000;
  sub_1C25503A0();
  sub_1C254F5A0();
  sub_1C25504F0();
  sub_1C254F5A0();
  sub_1C25505F0();
  __break(1u);
}

uint64_t sub_1C2216B90@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2216B9C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2216BE4()
{
  void (*v14)(uint64_t *__return_ptr, void *);
  uint64_t result;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  void v23[4];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = 16 * v6;
    uint64_t v8 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v6);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    uint64_t v11 = (uint64_t *)(*(void *)(v1 + 56) + v7);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v14 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v23[0] = v9;
    v23[1] = v10;
    void v23[2] = v12;
    v23[3] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(&v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
  uint64_t v16 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = (unint64_t)(v0[2] + 64) >> 6;
    if (v16 < v17)
    {
      uint64_t v18 = v0[1];
      uint64_t v19 = *(void *)(v18 + 8 * v16);
      if (v19)
      {
LABEL_7:
        uint64_t v5 = (v19 - 1) & v19;
        unint64_t v6 = __clz(__rbit64(v19)) + (v16 << 6);
        int64_t v4 = v16;
        goto LABEL_3;
      }
      uint64_t v20 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v17)
      {
        uint64_t v19 = *(void *)(v18 + 8 * v20);
        if (v19)
        {
LABEL_10:
          uint64_t v16 = v20;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v17)
        {
          uint64_t v19 = *(void *)(v18 + 8 * (v3 + 3));
          if (v19)
          {
            uint64_t v16 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v20 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v17)
          {
            uint64_t v19 = *(void *)(v18 + 8 * v20);
            if (v19) {
              goto LABEL_10;
            }
            uint64_t v16 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v17)
            {
              uint64_t v19 = *(void *)(v18 + 8 * v16);
              if (v19) {
                goto LABEL_7;
              }
              int64_t v4 = v17 - 1;
              uint64_t v21 = v3 + 6;
              while (v17 != v21)
              {
                uint64_t v19 = *(void *)(v18 + 8 * v21++);
                if (v19)
                {
                  uint64_t v16 = v21 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    uint64_t result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_1C2216D88(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, id *, void *))
{
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(a3 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t *)(a3 + 80);
    uint64_t v10 = a1;
    while (1)
    {
      uint64_t v29 = v5;
      uint64_t v11 = *(v9 - 5);
      uint64_t v12 = *(v9 - 3);
      uint64_t v25 = *(v9 - 4);
      uint64_t v26 = *(v9 - 6);
      char v24 = *((unsigned char *)v9 - 8);
      uint64_t v13 = *v9;
      uint64_t v14 = *(v9 - 2);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v27 = v12;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v16 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v16 = sub_1C226C410(0, a1[2] + 1, 1, a1);
      }
      unint64_t v18 = v16[2];
      unint64_t v17 = v16[3];
      uint64_t v28 = v7;
      if (v18 >= v17 >> 1) {
        uint64_t v16 = sub_1C226C410((void *)(v17 > 1), v18 + 1, 1, v16);
      }
      void v16[2] = v18 + 1;
      uint64_t v19 = &v16[6 * v18];
      v19[4] = v26;
      v19[5] = v11;
      void v19[6] = v25;
      v19[7] = v27;
      v19[8] = v14;
      *((unsigned char *)v19 + 72) = v24;
      uint64_t v20 = v16;
      swift_bridgeObjectRetain();
      char v21 = swift_isUniquelyReferenced_nonNull_native();
      sub_1C22167E0(v13, (uint64_t)sub_1C2216B9C, 0, v21, a4);
      if (v29) {
        break;
      }
      uint64_t v5 = 0;
      v9 += 7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v10 = v20;
      a1 = v20;
      uint64_t v7 = v28 - 1;
      if (v28 == 1)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v10;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1C2216FEC(void *a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C221785C(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v65 = (char *)&v60 - v6;
  uint64_t v7 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  uint64_t v67 = v8;
  MEMORY[0x1F4188790](v7);
  id v64 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254CCB0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C221785C(0, &qword_1EA2E33C0, MEMORY[0x1E4F27CA0], v4);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v60 - v15;
  uint64_t v17 = sub_1C254C6F0();
  uint64_t v68 = *(void *)(v17 - 8);
  uint64_t v69 = v17;
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v62 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  char v21 = (char *)&v60 - v20;
  id v22 = objc_msgSend(a1, sel_dateOfBirthComponents);
  sub_1C254C670();

  uint64_t v23 = sub_1C254CCC0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v63 = a2;
  v25(v16, a2, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v16, 0, 1, v23);
  sub_1C254C6E0();
  uint64_t v26 = *MEMORY[0x1E4F27C20];
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v27(v13, v26, v10);
  uint64_t v28 = sub_1C254C6C0();
  LOBYTE(a2) = v29;
  uint64_t v61 = v11;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v11 + 8);
  v30(v13, v10);
  if ((a2 & 1) == 0 && v28 != 0x7FFFFFFFFFFFFFFFLL)
  {
    v27(v13, *MEMORY[0x1E4F27C30], v10);
    uint64_t v31 = sub_1C254C6C0();
    char v33 = v32;
    v30(v13, v10);
    if ((v33 & 1) == 0 && v31 != 0x7FFFFFFFFFFFFFFFLL)
    {
      v27(v13, *MEMORY[0x1E4F27BF0], v10);
      uint64_t v34 = sub_1C254C6C0();
      char v36 = v35;
      v30(v13, v10);
      if ((v36 & 1) == 0 && v34 != 0x7FFFFFFFFFFFFFFFLL)
      {
        uint64_t v37 = (uint64_t)v65;
        sub_1C254C690();
        uint64_t v39 = v66;
        uint64_t v38 = v67;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v37, 1, v66) == 1)
        {
          sub_1C22178C0(v37);
        }
        else
        {
          uint64_t v40 = v64;
          (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v64, v37, v39);
          sub_1C221785C(0, &qword_1EA2DE7B0, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
          unint64_t v41 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
          uint64_t v42 = swift_allocObject();
          *(_OWORD *)(v42 + 16) = xmmword_1C255CD90;
          v27((char *)(v42 + v41), v26, v10);
          sub_1C2418274(v42);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          uint64_t v43 = _s13ConfigurationVMa();
          uint64_t v44 = v62;
          uint64_t v45 = v63;
          sub_1C254CC10();
          swift_bridgeObjectRelease();
          uint64_t v46 = sub_1C254C6A0();
          LOBYTE(v42) = v47;
          long long v48 = *(void (**)(char *, uint64_t))(v68 + 8);
          uint64_t v49 = v44;
          uint64_t v50 = v69;
          v48(v49, v69);
          if ((v42 & 1) == 0)
          {
            uint64_t v51 = *(void **)(v45 + *(int *)(v43 + 24));
            uint64_t v52 = (void *)sub_1C254CA50();
            id v53 = objc_msgSend(v51, sel_stringFromDate_, v52);

            uint64_t v54 = sub_1C254F470();
            uint64_t v56 = v55;

            uint64_t v57 = sub_1C2394100(v54, v56, v46, v45 + *(int *)(v43 + 36));
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v67 + 8))(v64, v66);
            v48(v21, v50);
            return v57;
          }
          (*(void (**)(char *, uint64_t))(v67 + 8))(v40, v39);
        }
      }
    }
  }
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v58 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_1C254C730();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v68 + 8))(v21, v69);
  return v57;
}

uint64_t sub_1C2217774@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  sub_1C22199C0(0, &qword_1EA2DE7A0, (uint64_t)&_s13HealthKitDataVN, (uint64_t (*)(void, uint64_t))_s7PDFDataVMa);
  uint64_t result = sub_1C23943B8(v5, v6, v4 + *(int *)(v7 + 28));
  *a2 = result;
  a2[1] = v9;
  return result;
}

uint64_t sub_1C22177F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13ConfigurationVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C221785C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C22178C0(uint64_t a1)
{
  sub_1C221785C(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C221794C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1C221795C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2217994(void *a1)
{
  return sub_1C22151D8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C221799C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_1C22179D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13ConfigurationVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2217A38(uint64_t a1)
{
  return sub_1C2218044(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C221095C);
}

uint64_t sub_1C2217A50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C22144CC(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1C2217A58()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

__n128 sub_1C2217A90@<Q0>(uint64_t a1@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr))(v1 + 16))(v5);
  long long v3 = v5[3];
  *(_OWORD *)(a1 + 32) = v5[2];
  *(_OWORD *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 64) = v6;
  __n128 result = (__n128)v5[1];
  *(_OWORD *)a1 = v5[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C2217AEC(uint64_t a1)
{
  return sub_1C2218044(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2210E70);
}

uint64_t sub_1C2217B04@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C22142E8(a1, a2);
}

double sub_1C2217B0C@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr))(v1 + 16))(v5);
  long long v3 = v5[1];
  *a1 = v5[0];
  a1[1] = v3;
  double result = *(double *)&v6;
  a1[2] = v6;
  return result;
}

uint64_t sub_1C2217B58(uint64_t a1)
{
  return sub_1C2218044(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2211488);
}

uint64_t sub_1C2217B74(uint64_t a1)
{
  return sub_1C2218044(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2211A24);
}

uint64_t sub_1C2217B8C()
{
  uint64_t v1 = (int *)(_s13ConfigurationVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1C254CCC0();
  unint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v6 + v1[7];
  uint64_t v10 = sub_1C254CAD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  uint64_t v11 = v6 + v1[11];
  uint64_t v12 = sub_1C254CBD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  v8(v6 + v1[14], v7);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

double sub_1C2217D58@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(_s13ConfigurationVMa() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  *(void *)&double result = sub_1C2214BBC(a1, v6, a2).n128_u64[0];
  return result;
}

__n128 sub_1C2217DD8@<Q0>(uint64_t a1@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr))(v1 + 16))(v5);
  long long v3 = v5[3];
  *(_OWORD *)(a1 + 32) = v5[2];
  *(_OWORD *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 64) = v5[4];
  __n128 result = (__n128)v5[1];
  *(_OWORD *)a1 = v5[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v1 = (int *)(_s13ConfigurationVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v13 = v2 | 7;
  unint64_t v4 = ((((v3 + *(void *)(*(void *)v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_1C254CCC0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v5 + v1[7];
  uint64_t v9 = sub_1C254CAD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  uint64_t v10 = v5 + v1[11];
  uint64_t v11 = sub_1C254CBD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);

  v7(v5 + v1[14], v6);
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, v4, v13);
}

uint64_t sub_1C221802C(uint64_t a1)
{
  return sub_1C2218044(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C2211F2C);
}

uint64_t sub_1C2218044(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(_s13ConfigurationVMa() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + v2;
  uint64_t v8 = v2 + v5;
  uint64_t v9 = *(unsigned __int8 *)(v2 + v6);
  uint64_t v10 = *(void *)(v7 + 8);
  uint64_t v11 = *(void *)(v7 + 16);
  uint64_t v12 = (uint64_t *)(v2 + (((v6 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  return a2(a1, v8, v9, v10, v11, v13, v14);
}

uint64_t sub_1C221810C(uint64_t a1)
{
  uint64_t v2 = _s13ConfigurationVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2218168(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v49 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254C6F0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v50 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C221785C(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = sub_1C254CAD0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v51 = (char *)&v44 - v18;
  id v19 = objc_msgSend(a1, sel_meaningfulDate);
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_8;
  }
  uint64_t v20 = v19;
  uint64_t v48 = v8;
  sub_1C254CA80();

  char v21 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v21(v12, v17, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_8:
    sub_1C22178C0((uint64_t)v12);
    return 0;
  }
  uint64_t v47 = v7;
  uint64_t v44 = v5;
  uint64_t v45 = v4;
  v21(v51, v12, v13);
  uint64_t v46 = a2 + *(int *)(_s13ConfigurationVMa() + 48);
  sub_1C221785C(0, &qword_1EA2DE7B0, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v22 = sub_1C254CCB0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void *)(v23 + 72);
  unint64_t v25 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1C255D0E0;
  unint64_t v27 = v26 + v25;
  uint64_t v28 = *(void (**)(unint64_t, void, uint64_t))(v23 + 104);
  v28(v27, *MEMORY[0x1E4F27C20], v22);
  v28(v27 + v24, *MEMORY[0x1E4F27C30], v22);
  v28(v27 + 2 * v24, *MEMORY[0x1E4F27BF0], v22);
  sub_1C2418274(v26);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  char v29 = v50;
  sub_1C254CC20();
  swift_bridgeObjectRelease();
  uint64_t v30 = sub_1C254C6A0();
  if (v31 & 1) != 0 || (uint64_t v32 = v30, sub_1C254C6B0(), (v33) || (sub_1C254C680(), (v34))
  {
    char v35 = v49;
    sub_1C254E510();
    char v36 = sub_1C254E550();
    os_log_type_t v37 = sub_1C254FA00();
    BOOL v38 = os_log_type_enabled(v36, v37);
    uint64_t v40 = v47;
    uint64_t v39 = v48;
    if (v38)
    {
      unint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v41 = 0;
      _os_log_impl(&dword_1C21A1000, v36, v37, "[PDF]: Missing required date components.", v41, 2u);
      uint64_t v42 = v41;
      uint64_t v39 = v48;
      MEMORY[0x1C875A0B0](v42, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v45);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v40);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v51, v13);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v29, v47);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v51, v13);
  return v32;
}

void sub_1C2218788(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C21ABCB4(255, a3);
    unint64_t v4 = sub_1C2550820();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C22187E4()
{
  if (!qword_1EA2DE558)
  {
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE558);
    }
  }
}

uint64_t sub_1C2218848(uint64_t a1)
{
  return a1;
}

unint64_t sub_1C22188C0()
{
  unint64_t result = qword_1EA2DE7E8;
  if (!qword_1EA2DE7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DE7E8);
  }
  return result;
}

unint64_t sub_1C2218914()
{
  unint64_t result = qword_1EA2E13D0;
  if (!qword_1EA2E13D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E13D0);
  }
  return result;
}

uint64_t sub_1C2218968@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_value);
  if (v8)
  {
    uint64_t v9 = v8;
    if (!objc_msgSend(v8, sel_collectionType))
    {
      id v10 = objc_msgSend(v9, sel_inspectableValue);
      if (v10)
      {
        id v11 = v10;
        if (objc_msgSend(v10, sel_valueType) == (id)6)
        {
          id v12 = objc_msgSend(v11, sel_codedQuantityValue);
          if (v12)
          {
            uint64_t v13 = v12;
            id v14 = objc_msgSend(v12, sel_rawValue);
            uint64_t v15 = sub_1C254F470();
            uint64_t v17 = v16;

LABEL_12:
            id v29 = objc_msgSend(a1, sel_preferredDisplayName);
            uint64_t v30 = sub_1C254F470();
            uint64_t v32 = v31;

            id v33 = objc_msgSend(v9, sel_unitString);
            uint64_t v34 = sub_1C254F470();
            uint64_t v36 = v35;

            sub_1C22D306C(v30, v32, v15, v17, v34, v36, v37);
            uint64_t v22 = v37[0];
            uint64_t v23 = v37[1];
            uint64_t v24 = v37[2];
            uint64_t v25 = v37[3];
            uint64_t v26 = v37[4];
            uint64_t v27 = v37[5];

            uint64_t result = swift_bridgeObjectRelease();
            goto LABEL_13;
          }
        }
      }
    }
    id v11 = objc_msgSend(v9, sel_displayString);
    uint64_t v15 = sub_1C254F470();
    uint64_t v17 = v28;
    goto LABEL_12;
  }
  sub_1C254E510();
  uint64_t v18 = sub_1C254E550();
  os_log_type_t v19 = sub_1C254FA00();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_1C21A1000, v18, v19, "[PDF]: Failed to format value for a record.", v20, 2u);
    MEMORY[0x1C875A0B0](v20, -1, -1);
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
LABEL_13:
  *a2 = v22;
  a2[1] = v23;
  a2[2] = v24;
  a2[3] = v25;
  a2[4] = v26;
  a2[5] = v27;
  return result;
}

void *sub_1C2218C58(void *a1, void *a2)
{
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((HKChartableCodedQuantity.representsSystolicBloodPressure.getter() & 1) == 0 || !a2)
  {
LABEL_14:
    id v24 = objc_msgSend(a1, sel_originalCodedQuantity);
    uint64_t v23 = v24;
    if (v24)
    {
      id v25 = objc_msgSend(v24, sel_rawValue);

      uint64_t v23 = (void *)sub_1C254F470();
    }
    return v23;
  }
  id v8 = a2;
  if ((HKChartableCodedQuantity.representsDiastolicBloodPressure.getter() & 1) == 0)
  {

    goto LABEL_14;
  }
  id v9 = objc_msgSend(a1, sel_originalCodedQuantity);
  if (v9)
  {
    id v10 = v9;
    id v11 = objc_msgSend(v9, sel_rawValue);

    uint64_t v12 = sub_1C254F470();
    unint64_t v14 = v13;

    id v15 = objc_msgSend(v8, sel_originalCodedQuantity);
    if (v15)
    {
      uint64_t v16 = v15;
      id v17 = objc_msgSend(v15, sel_rawValue);

      uint64_t v18 = sub_1C254F470();
      unint64_t v20 = v19;

      uint64_t v21 = HIBYTE(v14) & 0xF;
      if ((v14 & 0x2000000000000000) == 0) {
        uint64_t v21 = v12 & 0xFFFFFFFFFFFFLL;
      }
      if (v21)
      {
        uint64_t v22 = HIBYTE(v20) & 0xF;
        if ((v20 & 0x2000000000000000) == 0) {
          uint64_t v22 = v18 & 0xFFFFFFFFFFFFLL;
        }
        if (v22)
        {
          v30[0] = v12;
          v30[1] = v14;
          swift_bridgeObjectRetain();
          sub_1C254F5A0();
          sub_1C254F5A0();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (void *)v30[0];
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  sub_1C254E510();
  uint64_t v26 = sub_1C254E550();
  os_log_type_t v27 = sub_1C254FA00();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_1C21A1000, v26, v27, "[PDF]: Failed to format blood pressure for a record.", v28, 2u);
    MEMORY[0x1C875A0B0](v28, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0;
}

uint64_t sub_1C2218F54(void *a1, void *a2)
{
  id v4 = objc_msgSend(a1, sel_rangeLow);
  if (v4)
  {
    id v5 = a2;
    id v6 = v4;
    id v7 = objc_msgSend(v5, sel_stringFromNumber_, v6);
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = sub_1C254F470();
      id v4 = v10;
    }
    else
    {

      uint64_t v9 = 0;
      id v4 = 0;
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v11 = objc_msgSend(a1, sel_rangeHigh);
  if (!v11)
  {
LABEL_12:
    uint64_t v17 = 0;
    uint64_t v19 = 0;
    if (!v4) {
      goto LABEL_9;
    }
LABEL_13:
    if (v19)
    {
      uint64_t v20 = sub_1C2394658(v9, (uint64_t)v4, v17, v19);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = sub_1C23948A8(v9, (uint64_t)v4);
    }
    goto LABEL_16;
  }
  uint64_t v12 = v11;
  id v13 = a2;
  id v14 = v12;
  id v15 = objc_msgSend(v13, sel_stringFromNumber_, v14);
  if (!v15)
  {

    goto LABEL_12;
  }
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C254F470();
  uint64_t v19 = v18;

  if (v4) {
    goto LABEL_13;
  }
LABEL_9:
  if (!v19) {
    return 0;
  }
  uint64_t v20 = sub_1C2394AE0(v17, v19);
LABEL_16:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1C2219118@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a1, sel_quantities);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E21B0);
  unint64_t v11 = sub_1C254F710();

  id v12 = objc_msgSend(a1, sel_codings);
  sub_1C21AB51C(0, &qword_1EA2DE858);
  unint64_t v13 = sub_1C254F710();

  if (!(v13 >> 62))
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14) {
      goto LABEL_3;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_41;
  }
LABEL_3:
  if ((v13 & 0xC000000000000001) != 0)
  {
    id v15 = (id)MEMORY[0x1C87588E0](0, v13);
  }
  else
  {
    if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_49;
    }
    id v15 = *(id *)(v13 + 32);
  }
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v16, sel_displayString);

  if (!v17)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  uint64_t v67 = a2;
  uint64_t v68 = v6;
  uint64_t v66 = sub_1C254F470();
  uint64_t v14 = v18;

  uint64_t v6 = v11 >> 62;
  if (!(v11 >> 62))
  {
    uint64_t v19 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v19) {
      goto LABEL_9;
    }
LABEL_50:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v6 = v68;
    goto LABEL_43;
  }
LABEL_49:
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  uint64_t v19 = result;
  if (!result) {
    goto LABEL_50;
  }
LABEL_9:
  unint64_t v65 = v11 & 0xC000000000000001;
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v21 = (id)MEMORY[0x1C87588E0](0, v11);
  }
  else
  {
    if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_53;
    }
    id v21 = *(id *)(v11 + 32);
  }
  uint64_t v22 = v21;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v63 = v22;
    uint64_t v64 = v14;
    if (!v6)
    {
      uint64_t v23 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v23) {
        goto LABEL_53;
      }
LABEL_19:
      if (v23 < v19)
      {
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      if (v65 && v19 != 1)
      {
        uint64_t result = 1;
        do
        {
          uint64_t v25 = result + 1;
          sub_1C25503C0();
          uint64_t result = v25;
        }
        while (v19 != v25);
      }
      if (v6)
      {
        swift_bridgeObjectRetain();
        sub_1C2550630();
        uint64_t v26 = v31;
        uint64_t v27 = v32;
        uint64_t v34 = v33;
        uint64_t result = swift_bridgeObjectRelease_n();
        uint64_t v34 = (unint64_t)v34 >> 1;
        BOOL v28 = v27 < v34;
        if (v27 != v34) {
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v26 = (v11 & 0xFFFFFFFFFFFFFF8) + 32;
        uint64_t v27 = 1;
        BOOL v28 = v19 > 1;
        if (v19 != 1)
        {
LABEL_26:
          if (!v28) {
            goto LABEL_55;
          }
          id v29 = *(void **)(v26 + 8 * v27);
          id v30 = v29;
          goto LABEL_31;
        }
      }
      id v29 = 0;
LABEL_31:
      swift_unknownObjectRelease();
      uint64_t v35 = v63;
      uint64_t v36 = sub_1C2218C58(v63, v29);
      uint64_t v38 = v37;

      if (v38)
      {
        id v39 = objc_msgSend(a1, sel_compatibleUnit);
        uint64_t v40 = sub_1C2530B74(v39);
        uint64_t v42 = v41;

        if (v42) {
          uint64_t v43 = v40;
        }
        else {
          uint64_t v43 = 0;
        }
        if (v42) {
          uint64_t v44 = v42;
        }
        else {
          uint64_t v44 = 0xE000000000000000;
        }
        uint64_t v45 = sub_1C2218F54(v35, v67);
        uint64_t v47 = v46;
        uint64_t v68 = v46;
        unsigned __int8 v48 = objc_msgSend(v35, sel_isInRange);
        sub_1C22D3230(v66, v64, (uint64_t)v36, v38, v43, v44, v45, v47, (uint64_t)v69, v48);
        uint64_t v49 = v69[0];
        uint64_t v50 = v69[1];
        uint64_t v51 = v69[2];
        uint64_t v52 = v69[3];
        id v53 = v35;
        uint64_t v54 = v69[4];
        uint64_t v55 = v69[5];
        uint64_t v56 = v69[6];
        uint64_t v57 = v69[7];
        char v58 = v70;

        uint64_t result = swift_bridgeObjectRelease();
LABEL_46:
        *(void *)a3 = v49;
        *(void *)(a3 + 8) = v50;
        *(void *)(a3 + 16) = v51;
        *(void *)(a3 + 24) = v52;
        *(void *)(a3 + 32) = v54;
        *(void *)(a3 + 40) = v55;
        *(void *)(a3 + 48) = v56;
        *(void *)(a3 + 56) = v57;
        *(unsigned char *)(a3 + 64) = v58;
        return result;
      }
      swift_bridgeObjectRelease();

      uint64_t v6 = v68;
LABEL_43:
      sub_1C254E510();
      uint64_t v59 = sub_1C254E550();
      os_log_type_t v60 = sub_1C254FA00();
      if (os_log_type_enabled(v59, v60))
      {
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v61 = 0;
        _os_log_impl(&dword_1C21A1000, v59, v60, "[PDF]: Failed to format quantities for a record.", v61, 2u);
        MEMORY[0x1C875A0B0](v61, -1, -1);
      }

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      uint64_t v52 = 0;
      uint64_t v54 = 0;
      uint64_t v55 = 0;
      uint64_t v56 = 0;
      uint64_t v57 = 0;
      char v58 = 0;
      goto LABEL_46;
    }
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C2550620();
    uint64_t result = swift_bridgeObjectRelease();
    if (v24 >= 1)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1C2550620();
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_19;
    }
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
LABEL_56:
  __break(1u);
  return result;
}

void sub_1C22196C8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1C22199C0(255, a3, a4, MEMORY[0x1E4FBB320]);
    sub_1C22188C0();
    unint64_t v5 = sub_1C2550690();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C2219754(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C22199C0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t objectdestroy_38Tm()
{
  uint64_t v1 = (int *)(_s13ConfigurationVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 17) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1C254CCC0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v6 + v1[7];
  uint64_t v10 = sub_1C254CAD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  uint64_t v11 = v6 + v1[11];
  uint64_t v12 = sub_1C254CBD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  v8(v6 + v1[14], v7);
  swift_release();
  return MEMORY[0x1F4186498](v0, v5, v4);
}

void sub_1C22199C0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

id ImprovementDataCollectionOptInViewController.__allocating_init(modalInPresentation:userDidChooseCompletion:)(char a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return ImprovementDataCollectionOptInViewController.init(modalInPresentation:userDidChooseCompletion:)(a1, a2, a3);
}

id ImprovementDataCollectionOptInViewController.init(modalInPresentation:userDidChooseCompletion:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI44ImprovementDataCollectionOptInViewController_userDidChooseCompletion];
  *(void *)uint64_t v9 = a2;
  *((void *)v9 + 1) = a3;
  uint64_t v10 = qword_1EBB6EF40;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v12 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v13 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  v18.receiver = v4;
  v18.super_class = ObjectType;
  id v15 = objc_msgSendSuper2(&v18, sel_initWithTitle_detailText_icon_contentLayout_, v12, v14, 0, 2, 0xE000000000000000);

  id v16 = v15;
  objc_msgSend(v16, sel_setModalInPresentation_, a1 & 1);

  swift_release();
  return v16;
}

void static ImprovementDataCollectionOptInViewController.present(in:completion:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  swift_retain();
  id v8 = ImprovementDataCollectionOptInViewController.init(modalInPresentation:userDidChooseCompletion:)(1, a2, a3);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB19E8]), sel_initWithRootViewController_, v8);
  objc_msgSend(v9, sel_setModalInPresentation_, 1);
  objc_msgSend(v9, sel_setModalPresentationStyle_, 2);
  objc_msgSend(a1, sel_presentViewController_animated_completion_, v9, 1, 0);
}

Swift::Void __swiftcall ImprovementDataCollectionOptInViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  v28.receiver = v0;
  v28.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v28, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (!v2)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v3 = v2;
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v5);

  id v6 = objc_msgSend(v1, sel_navigationItem);
  objc_msgSend(v6, sel_setHidesBackButton_, 1);

  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EBB6E968;
  sub_1C23CCB04(8, 0, 0);

  id v8 = objc_msgSend(self, sel_accessoryButton);
  id v9 = objc_msgSend(v4, sel_systemBlueColor);
  objc_msgSend(v8, sel_setTintColor_, v9);

  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v11 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setTitle_forState_, v11, 0, 0xE000000000000000);

  objc_msgSend(v8, sel_addTarget_action_forControlEvents_, v1, sel_accessoryButtonTapped, 64);
  id v12 = v8;
  id v13 = (void *)sub_1C254F700();
  id v14 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v14) {
    goto LABEL_11;
  }
  sub_1C254F470();

  id v15 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setAccessibilityIdentifier_, v15);

  id v16 = objc_msgSend(v1, sel_headerView);
  objc_msgSend(v16, sel_addAccessoryButton_, v12);

  id v17 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  objc_super v18 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)sub_1C254F700();
  id v20 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v20)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1C254F470();

  id v21 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();

  id v22 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v23 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)sub_1C254F700();
  id v25 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v25)
  {
    sub_1C254F470();

    uint64_t v26 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v27 = objc_msgSend(v1, sel_hxui_addSecondaryFooterButtonWithTitle_bold_accessibilityIdentifier_, v23, 0, v26, 0xE000000000000000);

    return;
  }
LABEL_13:
  __break(1u);
}

Swift::Void __swiftcall ImprovementDataCollectionOptInViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_viewDidAppear_, a1);
  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBB6E968;
  sub_1C23CEB5C(1, 2, 0);
}

Swift::Void __swiftcall ImprovementDataCollectionOptInViewController.hxui_primaryFooterButtonTapped()()
{
}

uint64_t sub_1C221A464(char a1)
{
  uint64_t v3 = sub_1C254F1C0();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  MEMORY[0x1F4188790](v3);
  id v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254F200();
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = self;
  uint64_t v10 = *MEMORY[0x1E4F65850];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  uint64_t v32 = sub_1C221B11C;
  uint64_t v33 = v11;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v29 = 1107296256;
  id v30 = sub_1C22AE944;
  uint64_t v31 = &block_descriptor_11;
  id v12 = _Block_copy(&aBlock);
  id v13 = v1;
  swift_release();
  objc_msgSend(v9, sel_setUserDidAccept_currentAgreement_completion_, a1 & 1, v10, v12);
  _Block_release(v12);
  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  char v14 = a1 & 1;
  if (a1) {
    uint64_t v15 = 9;
  }
  else {
    uint64_t v15 = 10;
  }
  id v16 = (id)qword_1EBB6E968;
  sub_1C23CCB04(v15, 0, 0);

  id v17 = (id)qword_1EBB6E968;
  sub_1C23CF3D4();

  sub_1C22023A4();
  objc_super v18 = (void *)sub_1C254FC70();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v13;
  *(unsigned char *)(v19 + 24) = v14;
  uint64_t v32 = sub_1C221B164;
  uint64_t v33 = v19;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v29 = 1107296256;
  id v30 = sub_1C224E544;
  uint64_t v31 = &block_descriptor_9;
  id v20 = _Block_copy(&aBlock);
  id v21 = v13;
  swift_release();
  sub_1C254F1E0();
  uint64_t aBlock = MEMORY[0x1E4FBC860];
  sub_1C221B1F8((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C221B1A0();
  sub_1C221B1F8((unint64_t *)&qword_1EBB6FF40, (void (*)(uint64_t))sub_1C221B1A0);
  uint64_t v22 = v27;
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v8, v5, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v8, v25);
}

Swift::Void __swiftcall ImprovementDataCollectionOptInViewController.hxui_secondaryFooterButtonTapped()()
{
}

uint64_t sub_1C221AA58(char a1, uint64_t a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v12 = (char *)&v32 - v11;
  if (a1)
  {
    sub_1C254E510();
    id v13 = a3;
    char v14 = sub_1C254E550();
    os_log_type_t v15 = sub_1C254FA40();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v33 = v6;
      uint64_t v34 = ObjectType;
      uint64_t v18 = v17;
      uint64_t v35 = v17;
      *(_DWORD *)id v16 = 136315138;
      swift_getMetatypeMetadata();
      uint64_t v19 = sub_1C254F4F0();
      uint64_t v34 = sub_1C21AD354(v19, v20, &v35);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v14, v15, "%s: Successfully saved opt-in status", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v18, -1, -1);
      MEMORY[0x1C875A0B0](v16, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v33);
    }

    id v30 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    uint64_t v31 = v12;
  }
  else
  {
    sub_1C254E510();
    id v22 = a3;
    uint64_t v23 = sub_1C254E550();
    os_log_type_t v24 = sub_1C254FA20();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v33 = v6;
      uint64_t v34 = ObjectType;
      uint64_t v27 = v26;
      uint64_t v35 = v26;
      *(_DWORD *)uint64_t v25 = 136315138;
      swift_getMetatypeMetadata();
      uint64_t v28 = sub_1C254F4F0();
      uint64_t v34 = sub_1C21AD354(v28, v29, &v35);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v23, v24, "%s: Error saving opt-in status", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v27, -1, -1);
      MEMORY[0x1C875A0B0](v25, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v33);
    }

    id v30 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    uint64_t v31 = v10;
  }
  return v30(v31, v6);
}

id ImprovementDataCollectionOptInViewController.__allocating_init(title:detailText:symbolName:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  id v12 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (!a4)
  {
    id v13 = 0;
    if (a6) {
      goto LABEL_3;
    }
LABEL_5:
    char v14 = 0;
    goto LABEL_6;
  }
  id v13 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_5;
  }
LABEL_3:
  char v14 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
LABEL_6:
  id v15 = objc_msgSend(objc_allocWithZone(v8), sel_initWithTitle_detailText_symbolName_contentLayout_, v12, v13, v14, a7);

  return v15;
}

void ImprovementDataCollectionOptInViewController.init(title:detailText:symbolName:contentLayout:)()
{
}

id ImprovementDataCollectionOptInViewController.__allocating_init(title:detailText:icon:contentLayout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v11 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (a4)
  {
    id v12 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v12 = 0;
  }
  id v13 = objc_msgSend(objc_allocWithZone(v7), sel_initWithTitle_detailText_icon_contentLayout_, v11, v12, a5, a6);

  return v13;
}

void ImprovementDataCollectionOptInViewController.init(title:detailText:icon:contentLayout:)()
{
}

id ImprovementDataCollectionOptInViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ImprovementDataCollectionOptInViewController()
{
  return self;
}

uint64_t method lookup function for ImprovementDataCollectionOptInViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ImprovementDataCollectionOptInViewController);
}

uint64_t dispatch thunk of ImprovementDataCollectionOptInViewController.__allocating_init(modalInPresentation:userDidChooseCompletion:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1C221B0E4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C221B11C(char a1, uint64_t a2)
{
  return sub_1C221AA58(a1, a2, *(void **)(v2 + 16));
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_1C221B12C()
{
  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_1C221B164()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16)
                                           + OBJC_IVAR____TtC15HealthRecordsUI44ImprovementDataCollectionOptInViewController_userDidChooseCompletion))(*(unsigned __int8 *)(v0 + 24));
}

void sub_1C221B1A0()
{
  if (!qword_1EBB6FF30)
  {
    sub_1C254F1C0();
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6FF30);
    }
  }
}

uint64_t sub_1C221B1F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C221B248(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

id sub_1C221B274()
{
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_whiteColor);
  id v2 = objc_msgSend(v0, sel_secondarySystemBackgroundColor);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  id v4 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  void v10[4] = sub_1C221B3F8;
  v10[5] = v3;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  void v10[2] = sub_1C23B0A44;
  v10[3] = &block_descriptor_12;
  id v5 = _Block_copy(v10);
  id v6 = v2;
  id v7 = v1;
  id v8 = objc_msgSend(v4, sel_initWithDynamicProvider_, v5);
  _Block_release(v5);

  swift_release();
  return v8;
}

uint64_t sub_1C221B3B8()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1C221B3F8(void *a1)
{
  return sub_1C23B0978(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

id sub_1C221B408()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_systemBlueColor);
  id v2 = objc_msgSend(v1, sel_colorWithAlphaComponent_, 0.4);

  id v3 = objc_msgSend(v0, sel_systemBlueColor);
  id v4 = objc_msgSend(v3, sel_colorWithAlphaComponent_, 0.6);

  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v2;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v12[4] = sub_1C221B5A4;
  v12[5] = v5;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1C23B0A44;
  uint64_t v12[3] = &block_descriptor_7_0;
  id v7 = _Block_copy(v12);
  id v8 = v4;
  id v9 = v2;
  id v10 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  swift_release();
  return v10;
}

uint64_t OnboardingTileAppearanceManager.__allocating_init(store:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  id v3 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  id v4 = a1;
  uint64_t v5 = (void *)sub_1C254F430();
  id v6 = objc_msgSend(v3, sel_initWithCategory_domainName_healthStore_, 0, v5, v4);

  *(void *)(v2 + 24) = v6;
  return v2;
}

uint64_t sub_1C221B650(int a1, uint64_t a2)
{
  LODWORD(v4) = a1;
  uint64_t v5 = sub_1C254C580();
  uint64_t v74 = *(void *)(v5 - 8);
  uint64_t v75 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v73 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254CB40();
  uint64_t v64 = *(void *)(v7 - 8);
  uint64_t v65 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v63 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C221EDFC(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v68 = (char *)&v61 - v10;
  uint64_t v70 = type metadata accessor for OnboardingViewIdentifier();
  uint64_t v11 = MEMORY[0x1F4188790](v70);
  uint64_t v71 = (uint64_t)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v69 = (char *)&v61 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v67 = (uint64_t)&v61 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v61 - v17;
  uint64_t v19 = sub_1C254E560();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  id v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E510();
  uint64_t v72 = a2;
  sub_1C21A7F2C(a2, (uint64_t)v18);
  swift_retain_n();
  uint64_t v23 = sub_1C254E550();
  os_log_type_t v24 = sub_1C254FA40();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    int v66 = v4;
    uint64_t v4 = v25;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v61 = v26;
    *(_DWORD *)uint64_t v4 = 136446722;
    uint64_t v76 = *v2;
    *(void *)&v77[0] = v26;
    sub_1C221EE60();
    uint64_t v62 = v19;
    uint64_t v27 = sub_1C254F4F0();
    uint64_t v76 = sub_1C21AD354(v27, v28, (uint64_t *)v77);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2082;
    if (v66) {
      uint64_t v29 = 1702195828;
    }
    else {
      uint64_t v29 = 0x65736C6166;
    }
    if (v66) {
      unint64_t v30 = 0xE400000000000000;
    }
    else {
      unint64_t v30 = 0xE500000000000000;
    }
    uint64_t v76 = sub_1C21AD354(v29, v30, (uint64_t *)v77);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 22) = 2082;
    unint64_t v31 = OnboardingViewIdentifier.stringIdentifier.getter();
    uint64_t v76 = sub_1C21AD354(v31, v32, (uint64_t *)v77);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    sub_1C21AD548((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
    _os_log_impl(&dword_1C21A1000, v23, v24, "[%{public}s] Setting onboarding to (%{public}s) for onboarding view with identifier '%{public}s'", (uint8_t *)v4, 0x20u);
    uint64_t v33 = v61;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v33, -1, -1);
    uint64_t v34 = v4;
    LOBYTE(v4) = v66;
    MEMORY[0x1C875A0B0](v34, -1, -1);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v62);
  }
  else
  {
    swift_release_n();
    sub_1C21AD548((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  uint64_t v35 = v72;
  uint64_t v36 = (uint64_t)v69;
  uint64_t v37 = (uint64_t)v68;
  if (v4)
  {
    sub_1C254CAC0();
    uint64_t v38 = sub_1C254CAD0();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 0, 1, v38);
  }
  else
  {
    uint64_t v39 = sub_1C254CAD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v37, 1, 1, v39);
  }
  *(void *)&v77[0] = 0;
  *((void *)&v77[0] + 1) = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  *(void *)&v77[0] = 0x6F626E4F2E494843;
  *((void *)&v77[0] + 1) = 0xEF2E676E69647261;
  OnboardingViewIdentifier.stringIdentifier.getter();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v40 = sub_1C254FAB0();
  swift_bridgeObjectRelease();
  sub_1C22178C0(v37);
  uint64_t v41 = v67;
  sub_1C21A7F2C(v35, v67);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1C21AD548(v41, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
    unint64_t v42 = 0;
  }
  else
  {
    uint64_t v68 = (char *)v40;
    uint64_t v44 = v63;
    uint64_t v43 = v64;
    uint64_t v45 = v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 32))(v63, v41, v65);
    sub_1C221EDFC(0, &qword_1EA2DE8B0, (uint64_t (*)(uint64_t))sub_1C22082D8, MEMORY[0x1E4FBBE00]);
    sub_1C22082D8();
    uint64_t v47 = v46 - 8;
    unint64_t v48 = (*(unsigned __int8 *)(*(void *)(v46 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v46 - 8) + 80);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_1C255CD90;
    uint64_t v50 = (void *)(v49 + v48);
    unint64_t v51 = v49 + v48 + *(int *)(v47 + 56);
    void *v50 = 0xD000000000000015;
    v50[1] = 0x80000001C2575EA0;
    (*(void (**)(unint64_t, char *, uint64_t))(v43 + 16))(v51, v44, v45);
    unint64_t v42 = sub_1C22043BC(v49);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
    uint64_t v40 = (uint64_t)v68;
  }
  sub_1C21AB51C(0, &qword_1EA2DE898);
  uint64_t v52 = (void *)sub_1C254FAC0();
  sub_1C21A7F2C(v35, v36);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
      break;
    default:
      sub_1C21AD548(v36, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
      break;
  }
  sub_1C254F430();
  swift_bridgeObjectRelease();
  if (v42)
  {
    sub_1C221C4CC(v42);
    swift_bridgeObjectRelease();
  }
  id v53 = objc_allocWithZone((Class)sub_1C254D1D0());
  uint64_t v54 = (void *)sub_1C254D1C0();
  objc_msgSend(v52, sel_addOperation_, v54);

  id v55 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v56 = v71;
  sub_1C21A7F2C(v35, v71);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
    case 4u:
    case 5u:
      break;
    default:
      sub_1C21AD548(v56, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
      break;
  }
  sub_1C254F430();
  swift_bridgeObjectRelease();
  memset(v77, 0, 32);
  uint64_t v57 = v73;
  sub_1C254C550();
  char v58 = (void *)sub_1C254C530();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v57, v75);
  objc_msgSend(v55, sel_postNotification_, v58);

  *(void *)&v77[0] = v40;
  sub_1C221ED90();
  sub_1C21A588C(&qword_1EA2DE8A8, (void (*)(uint64_t))sub_1C221ED90);
  uint64_t v59 = sub_1C254EBC0();
  swift_release();
  return v59;
}

uint64_t OnboardingViewIdentifier.uniqueIdentifier.getter()
{
  return 0x6F626E4F2E494843;
}

unint64_t OnboardingViewIdentifier.notificationIdentifier.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21A7F2C(v1, (uint64_t)v4);
  unint64_t v5 = 0x79726F6765746163;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      return v5;
    case 3u:
      unint64_t v5 = 0x54636972656E6567;
      break;
    case 4u:
      unint64_t v5 = 0x656C69547362616CLL;
      break;
    case 5u:
      unint64_t v5 = 0x616470557362616CLL;
      break;
    default:
      unint64_t v5 = 0xD000000000000011;
      sub_1C21AD548((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
      break;
  }
  return v5;
}

uint64_t sub_1C221C4B8(unint64_t a1)
{
  return sub_1C221D63C(a1, &qword_1EA2DE508);
}

uint64_t sub_1C221C4CC(uint64_t a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v51 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22202A8();
  uint64_t v50 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v52 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_1C22201E8(0, &qword_1EA2DE5A0, MEMORY[0x1E4FBB960], MEMORY[0x1E4FBB968], MEMORY[0x1E4FBBD58]);
    uint64_t v11 = sub_1C2550680();
  }
  else
  {
    uint64_t v11 = MEMORY[0x1E4FBC868];
  }
  uint64_t v12 = *(void *)(v52 + 64);
  uint64_t v44 = v52 + 64;
  uint64_t v13 = -1 << *(unsigned char *)(v52 + 32);
  if (-v13 < 64) {
    uint64_t v14 = ~(-1 << -(char)v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v12;
  uint64_t v42 = -1 << *(unsigned char *)(v52 + 32);
  int64_t v43 = (unint64_t)(63 - v13) >> 6;
  uint64_t v49 = v3 + 16;
  unint64_t v48 = &v57;
  uint64_t v47 = v3 + 32;
  uint64_t v46 = &v61;
  uint64_t v16 = v11 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v53 = 0;
  uint64_t v45 = MEMORY[0x1E4FBC840] + 8;
  while (1)
  {
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v53 << 6);
      goto LABEL_28;
    }
    int64_t v22 = v53 + 1;
    if (__OFADD__(v53, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v22 >= v43) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v44 + 8 * v22);
    int64_t v24 = v53 + 1;
    if (!v23)
    {
      int64_t v24 = v53 + 2;
      if (v53 + 2 >= v43) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v44 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v53 + 3;
        if (v53 + 3 >= v43) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v44 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v53 + 4;
          if (v53 + 4 >= v43) {
            goto LABEL_37;
          }
          unint64_t v23 = *(void *)(v44 + 8 * v24);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    int64_t v53 = v24;
LABEL_28:
    uint64_t v26 = (uint64_t *)(*(void *)(v52 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = v50;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(&v10[*(int *)(v50 + 48)], *(void *)(v52 + 56) + *(void *)(v3 + 72) * v21, v2);
    *(void *)uint64_t v10 = v28;
    *((void *)v10 + 1) = v27;
    sub_1C2220314((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))sub_1C22202A8);
    unint64_t v30 = (char *)v8 + *(int *)(v29 + 48);
    uint64_t v31 = v8[1];
    *(void *)&long long v62 = *v8;
    *((void *)&v62 + 1) = v31;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v51, v30, v2);
    unint64_t v32 = v48;
    swift_dynamicCast();
    long long v58 = v54;
    long long v59 = v55;
    uint64_t v60 = v56;
    uint64_t v33 = v32;
    uint64_t v34 = v46;
    sub_1C2206B9C(v33, v46);
    long long v54 = v58;
    long long v55 = v59;
    uint64_t v56 = v60;
    sub_1C2206B9C(v34, &v62);
    sub_1C2206B9C(&v62, &v58);
    uint64_t result = sub_1C2550310();
    uint64_t v35 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v16 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v36) & ~*(void *)(v16 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v16 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v18 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = *(void *)(v11 + 48) + 40 * v18;
    *(_OWORD *)uint64_t v19 = v54;
    *(_OWORD *)(v19 + 16) = v55;
    *(void *)(v19 + 32) = v56;
    uint64_t result = (uint64_t)sub_1C2206B9C(&v58, (_OWORD *)(*(void *)(v11 + 56) + 32 * v18));
    ++*(void *)(v11 + 16);
  }
  int64_t v25 = v53 + 5;
  if (v53 + 5 >= v43)
  {
LABEL_37:
    swift_release();
    sub_1C21ABD08();
    return v11;
  }
  unint64_t v23 = *(void *)(v44 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v53 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v43) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v44 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C221CAE8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1C22201E8(0, &qword_1EA2DE5A0, MEMORY[0x1E4FBB960], MEMORY[0x1E4FBB968], MEMORY[0x1E4FBBD58]);
    uint64_t v2 = sub_1C2550680();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1C21A9A38(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1C2206B9C(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1C2206B9C(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1C2206B9C(v36, v37);
    sub_1C2206B9C(v37, &v33);
    uint64_t result = sub_1C2550310();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1C2206B9C(&v33, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1C21ABD08();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C221CED8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1C2206AFC();
    uint64_t v2 = sub_1C2550680();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v29 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v30 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v30 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v11);
    int64_t v13 = v30 + 1;
    if (!v12)
    {
      int64_t v13 = v30 + 2;
      if (v30 + 2 >= v28) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v29 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v30 + 3;
        if (v30 + 3 >= v28) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v29 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v30 + 4;
          if (v30 + 4 >= v28) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v29 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v30 = v13;
LABEL_28:
    int64_t v16 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v33[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    int64_t v15 = *(void **)&v33[0];
    *(void *)&v32[0] = v16;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
    id v17 = v15;
    id v18 = v16;
    swift_dynamicCast();
    uint64_t v19 = *(void *)&v33[0];
    sub_1C2206B9C((_OWORD *)((char *)v33 + 8), v31);
    sub_1C2206B9C(v31, v33);
    sub_1C2206B9C(v33, v32);
    sub_1C254F470();
    sub_1C25509C0();
    sub_1C254F570();
    uint64_t v20 = sub_1C2550A10();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v6 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v22) & ~*(void *)(v6 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v6 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v8 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v19;
    uint64_t result = (uint64_t)sub_1C2206B9C(v32, (_OWORD *)(*(void *)(v2 + 56) + 32 * v8));
    ++*(void *)(v2 + 16);
  }
  int64_t v14 = v30 + 5;
  if (v30 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_1C21ABD08();
    return v2;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v30 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C221D288(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1C22200AC();
    uint64_t v2 = sub_1C2550680();
  }
  else
  {
    uint64_t v2 = MEMORY[0x1E4FBC868];
  }
  uint64_t v29 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v30 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v30 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v11);
    int64_t v13 = v30 + 1;
    if (!v12)
    {
      int64_t v13 = v30 + 2;
      if (v30 + 2 >= v28) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v29 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v30 + 3;
        if (v30 + 3 >= v28) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v29 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v30 + 4;
          if (v30 + 4 >= v28) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v29 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v30 = v13;
LABEL_28:
    int64_t v16 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v33[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    int64_t v15 = *(void **)&v33[0];
    *(void *)&v32[0] = v16;
    type metadata accessor for DocumentType(0);
    id v17 = v15;
    id v18 = v16;
    swift_dynamicCast();
    uint64_t v19 = *(void *)&v33[0];
    sub_1C2206B9C((_OWORD *)((char *)v33 + 8), v31);
    sub_1C2206B9C(v31, v33);
    sub_1C2206B9C(v33, v32);
    sub_1C254F470();
    sub_1C25509C0();
    sub_1C254F570();
    uint64_t v20 = sub_1C2550A10();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v6 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v22) & ~*(void *)(v6 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v6 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v8 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v19;
    uint64_t result = (uint64_t)sub_1C2206B9C(v32, (_OWORD *)(*(void *)(v2 + 56) + 32 * v8));
    ++*(void *)(v2 + 16);
  }
  int64_t v14 = v30 + 5;
  if (v30 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_1C21ABD08();
    return v2;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v30 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C221D628(unint64_t a1)
{
  return sub_1C221D63C(a1, (unint64_t *)&qword_1EA2E39D0);
}

uint64_t sub_1C221D63C(unint64_t a1, unint64_t *a2)
{
  unint64_t v3 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1C25502A0()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v4 = MEMORY[0x1E4FBC868];
    if (v3) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v6 = ~v9;
    unint64_t v36 = a1 + 64;
    uint64_t v10 = -v9;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v7 = v11 & *(void *)(a1 + 64);
    unint64_t v8 = a1;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1C222014C();
  uint64_t v4 = sub_1C2550680();
  if (!v3) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v5 = sub_1C2550520();
  unint64_t v36 = 0;
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  unint64_t v8 = v5 | 0x8000000000000000;
LABEL_11:
  int64_t v35 = (unint64_t)(v6 + 64) >> 6;
  uint64_t v12 = v4 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while ((v8 & 0x8000000000000000) != 0)
  {
    if (!sub_1C25505B0()) {
      goto LABEL_45;
    }
    sub_1C21AB51C(0, a2);
    swift_dynamicCast();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
    swift_dynamicCast();
    uint64_t v19 = v37;
    uint64_t v20 = v38;
LABEL_36:
    uint64_t result = sub_1C254FF60();
    uint64_t v27 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v12 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v15 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = 8 * v15;
    *(void *)(*(void *)(v4 + 48) + v16) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v20;
    ++*(void *)(v4 + 16);
  }
  if (v7)
  {
    unint64_t v17 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v18 = v17 | (v14 << 6);
LABEL_35:
    uint64_t v19 = *(void **)(*(void *)(v8 + 48) + 8 * v18);
    unint64_t v37 = v19;
    char v38 = *(void **)(*(void *)(v8 + 56) + 8 * v18);
    uint64_t v20 = v38;
    id v25 = v19;
    id v26 = v38;
    goto LABEL_36;
  }
  int64_t v21 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v21 >= v35) {
    goto LABEL_45;
  }
  unint64_t v22 = *(void *)(v36 + 8 * v21);
  int64_t v23 = v14 + 1;
  if (v22) {
    goto LABEL_34;
  }
  int64_t v23 = v14 + 2;
  if (v14 + 2 >= v35) {
    goto LABEL_45;
  }
  unint64_t v22 = *(void *)(v36 + 8 * v23);
  if (v22) {
    goto LABEL_34;
  }
  int64_t v23 = v14 + 3;
  if (v14 + 3 >= v35) {
    goto LABEL_45;
  }
  unint64_t v22 = *(void *)(v36 + 8 * v23);
  if (v22) {
    goto LABEL_34;
  }
  int64_t v23 = v14 + 4;
  if (v14 + 4 >= v35) {
    goto LABEL_45;
  }
  unint64_t v22 = *(void *)(v36 + 8 * v23);
  if (v22)
  {
LABEL_34:
    unint64_t v7 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v23 << 6);
    int64_t v14 = v23;
    goto LABEL_35;
  }
  int64_t v24 = v14 + 5;
  if (v14 + 5 >= v35)
  {
LABEL_45:
    swift_release();
    sub_1C21ABD08();
    return v4;
  }
  unint64_t v22 = *(void *)(v36 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_34;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v35) {
      goto LABEL_45;
    }
    unint64_t v22 = *(void *)(v36 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_34;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

void *sub_1C221DA08(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_1C22201E8(0, (unint64_t *)&qword_1EA2DE540, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBBD58]);
    uint64_t v2 = (void *)sub_1C2550680();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
  }
  uint64_t v33 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v32 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v38;
  unint64_t v7 = &v40;
  swift_bridgeObjectRetain();
  int64_t v34 = 0;
  unint64_t v8 = (unint64_t *)&qword_1EA2DE918;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  uint64_t v10 = MEMORY[0x1E4FBB1B0];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v19 = v34 + 1;
  if (__OFADD__(v34, 1))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v19 < v32)
  {
    unint64_t v20 = *(void *)(v33 + 8 * v19);
    int64_t v21 = v34 + 1;
    if (v20) {
      goto LABEL_26;
    }
    int64_t v21 = v34 + 2;
    if (v34 + 2 >= v32) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v33 + 8 * v21);
    if (v20) {
      goto LABEL_26;
    }
    int64_t v21 = v34 + 3;
    if (v34 + 3 >= v32) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v33 + 8 * v21);
    if (v20) {
      goto LABEL_26;
    }
    int64_t v21 = v34 + 4;
    if (v34 + 4 >= v32) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v33 + 8 * v21);
    if (v20)
    {
LABEL_26:
      int64_t v34 = v21;
      uint64_t v35 = (v20 - 1) & v20;
      for (unint64_t i = __clz(__rbit64(v20)) + (v21 << 6); ; unint64_t i = __clz(__rbit64(v5)) | (v34 << 6))
      {
        int64_t v23 = (uint64_t *)(*(void *)(v1 + 48) + 16 * i);
        uint64_t v36 = *v23;
        uint64_t v37 = v23[1];
        sub_1C22201E8(0, v8, v9, v10, MEMORY[0x1E4FBAEA0]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_dynamicCast();
        sub_1C2206B9C(v6, v7);
        sub_1C2206B9C(v7, v41);
        sub_1C2206B9C(v41, &v39);
        unint64_t v24 = sub_1C21A6470(v36, v37);
        unint64_t v25 = v24;
        if (v26)
        {
          uint64_t v11 = v7;
          uint64_t v12 = v6;
          uint64_t v13 = v1;
          uint64_t v14 = v9;
          unint64_t v15 = v8;
          uint64_t v16 = (uint64_t *)(v2[6] + 16 * v24);
          swift_bridgeObjectRelease();
          *uint64_t v16 = v36;
          v16[1] = v37;
          unint64_t v8 = v15;
          uint64_t v9 = v14;
          uint64_t v1 = v13;
          uint64_t v6 = v12;
          unint64_t v7 = v11;
          uint64_t v10 = MEMORY[0x1E4FBB1B0];
          unint64_t v17 = (_OWORD *)(v2[7] + 32 * v25);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
          sub_1C2206B9C(&v39, v17);
          unint64_t v5 = v35;
          if (!v35) {
            goto LABEL_11;
          }
        }
        else
        {
          if (v2[2] >= v2[3])
          {
            __break(1u);
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
          *(void *)((char *)v2 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v24;
          uint64_t v27 = (uint64_t *)(v2[6] + 16 * v24);
          uint64_t *v27 = v36;
          v27[1] = v37;
          sub_1C2206B9C(&v39, (_OWORD *)(v2[7] + 32 * v24));
          uint64_t v28 = v2[2];
          BOOL v29 = __OFADD__(v28, 1);
          uint64_t v30 = v28 + 1;
          if (v29) {
            goto LABEL_34;
          }
          v2[2] = v30;
          unint64_t v5 = v35;
          if (!v35) {
            goto LABEL_11;
          }
        }
LABEL_10:
        uint64_t v35 = (v5 - 1) & v5;
      }
    }
    int64_t v22 = v34 + 5;
    if (v34 + 5 < v32)
    {
      unint64_t v20 = *(void *)(v33 + 8 * v22);
      if (v20)
      {
        int64_t v21 = v34 + 5;
        goto LABEL_26;
      }
      while (1)
      {
        int64_t v21 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          break;
        }
        if (v21 >= v32) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        ++v22;
        if (v20) {
          goto LABEL_26;
        }
      }
LABEL_36:
      __break(1u);
      JUMPOUT(0x1C221DDDCLL);
    }
  }
LABEL_32:
  sub_1C21ABD08();
  return v2;
}

uint64_t sub_1C221DDF4@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = sub_1C254CAD0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
  *a2 = result != 1;
  return result;
}

uint64_t OnboardingTileAppearanceManager.deinit()
{
  return v0;
}

BOOL sub_1C221DE88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1C221DEA0()
{
  return sub_1C2550A10();
}

uint64_t sub_1C221DEE8()
{
  return sub_1C25509D0();
}

uint64_t sub_1C221DF14()
{
  return sub_1C2550A10();
}

uint64_t sub_1C221DF58()
{
  if (*v0) {
    return 0x746169636F737361;
  }
  else {
    return 0x65756C6156776172;
  }
}

uint64_t sub_1C221DFA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C221FF94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C221DFC8()
{
  return 0;
}

void sub_1C221DFD4(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1C221DFE0(uint64_t a1)
{
  unint64_t v2 = sub_1C221EE98();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C221E01C(uint64_t a1)
{
  unint64_t v2 = sub_1C221EE98();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C221E058()
{
  return 1;
}

uint64_t _s15HealthRecordsUI26RecordAnchorPublisherErrorO9hashValueSivg_0()
{
  return sub_1C2550A10();
}

uint64_t sub_1C221E0A4()
{
  return sub_1C25509D0();
}

uint64_t sub_1C221E0CC()
{
  return sub_1C2550A10();
}

uint64_t OnboardingViewIdentifier.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v29 = sub_1C254CB40();
  uint64_t v27 = *(void *)(v29 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v29);
  uint64_t v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - v5;
  sub_1C221EF40(0, &qword_1EA2DE8C0, MEMORY[0x1E4FBBDC0]);
  uint64_t v8 = v7;
  uint64_t v30 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C221EE98();
  uint64_t v14 = v32;
  sub_1C2550A50();
  if (!v14)
  {
    char v26 = v13;
    uint64_t v32 = v11;
    uint64_t v16 = v30;
    uint64_t v15 = v31;
    char v35 = 0;
    unint64_t v17 = v10;
    uint64_t v18 = v8;
    switch(sub_1C2550730())
    {
      case 0:
      case 1:
      case 2:
      case 4:
        (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v8);
        uint64_t v20 = (uint64_t)v26;
        goto LABEL_6;
      case 3:
        char v33 = 1;
        sub_1C21A588C(&qword_1EA2DE8D8, MEMORY[0x1E4F27990]);
        uint64_t v19 = v29;
        sub_1C2550740();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v18);
        uint64_t v20 = (uint64_t)v26;
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v26, v6, v19);
        goto LABEL_6;
      case 5:
        char v34 = 1;
        sub_1C21A588C(&qword_1EA2DE8D8, MEMORY[0x1E4F27990]);
        int64_t v22 = v28;
        uint64_t v21 = v29;
        sub_1C2550740();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v18);
        unint64_t v24 = v22;
        uint64_t v20 = (uint64_t)v26;
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v26, v24, v21);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        sub_1C2220314(v20, v15, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
        break;
      default:
        sub_1C221EEEC();
        swift_allocError();
        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v8);
        break;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t OnboardingViewIdentifier.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  uint64_t v28 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  char v26 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C221EF40(0, &qword_1EA2DE8E0, MEMORY[0x1E4FBBDE0]);
  uint64_t v14 = v13;
  uint64_t v30 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v25 - v15;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C221EE98();
  sub_1C2550A70();
  sub_1C21A7F2C(v2, (uint64_t)v12);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v21 = v27;
      uint64_t v20 = v28;
      int64_t v22 = v26;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v26, v12, v27);
      char v38 = 0;
      uint64_t v23 = v29;
      sub_1C25507C0();
      if (!v23)
      {
        char v37 = 1;
        sub_1C21A588C(&qword_1EA2DE8E8, MEMORY[0x1E4F27990]);
        sub_1C25507D0();
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v21);
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v16, v14);
    case 2u:
      char v31 = 0;
      goto LABEL_13;
    case 3u:
      char v32 = 0;
      goto LABEL_13;
    case 4u:
      char v33 = 0;
      goto LABEL_13;
    case 5u:
      char v36 = 0;
LABEL_13:
      sub_1C25507C0();
      break;
    default:
      uint64_t v18 = v27;
      uint64_t v17 = v28;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v9, v12, v27);
      char v35 = 0;
      uint64_t v19 = v29;
      sub_1C25507C0();
      if (!v19)
      {
        char v34 = 1;
        sub_1C21A588C(&qword_1EA2DE8E8, MEMORY[0x1E4F27990]);
        sub_1C25507D0();
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v18);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v16, v14);
}

uint64_t sub_1C221EA50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return OnboardingViewIdentifier.init(from:)(a1, a2);
}

uint64_t sub_1C221EA68(void *a1)
{
  return OnboardingViewIdentifier.encode(to:)(a1);
}

Swift::Void __swiftcall OnboardingDismissible.setOnboarding(dismissed:)(Swift::Bool dismissed)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  BOOL v5 = dismissed;
  uint64_t v6 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v4, v3);
  type metadata accessor for OnboardingTileAppearanceManager();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v9;
  id v11 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  id v12 = v9;
  uint64_t v13 = (void *)sub_1C254F430();
  id v14 = objc_msgSend(v11, sel_initWithCategory_domainName_healthStore_, 0, v13, v12);

  *(void *)(inited + 24) = v14;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
  sub_1C221B650(v5, (uint64_t)v8);
  swift_release();
  swift_release();
  sub_1C21AD548((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
}

uint64_t OnboardingDismissible.isDismissed()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  type metadata accessor for OnboardingTileAppearanceManager();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v7;
  id v9 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  id v10 = v7;
  id v11 = (void *)sub_1C254F430();
  id v12 = objc_msgSend(v9, sel_initWithCategory_domainName_healthStore_, 0, v11, v10);

  *(void *)(inited + 24) = v12;
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  uint64_t v13 = sub_1C21A567C();
  swift_release();
  sub_1C21AD548((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
  return v13;
}

void sub_1C221ED90()
{
  if (!qword_1EA2DE8A0)
  {
    sub_1C2206F9C();
    unint64_t v0 = sub_1C254EAE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE8A0);
    }
  }
}

void sub_1C221EDFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C221EE60()
{
  unint64_t result = qword_1EA2DE8B8;
  if (!qword_1EA2DE8B8)
  {
    type metadata accessor for OnboardingTileAppearanceManager();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DE8B8);
  }
  return result;
}

unint64_t sub_1C221EE98()
{
  unint64_t result = qword_1EA2DE8C8;
  if (!qword_1EA2DE8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DE8C8);
  }
  return result;
}

unint64_t sub_1C221EEEC()
{
  unint64_t result = qword_1EA2DE8D0;
  if (!qword_1EA2DE8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DE8D0);
  }
  return result;
}

void sub_1C221EF40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C221EE98();
    unint64_t v7 = a3(a1, &type metadata for OnboardingViewIdentifier.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t _s15HealthRecordsUI24OnboardingViewIdentifierO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CB40();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = type metadata accessor for OnboardingViewIdentifier();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v32 - v14;
  sub_1C2220244();
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_1C21A7F2C(a1, (uint64_t)v19);
  sub_1C21A7F2C(a2, v20);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C21A7F2C((uint64_t)v19, (uint64_t)v13);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_6;
      }
      uint64_t v21 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v7, v20, v4);
      char v22 = sub_1C254CB10();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v21 + 8);
      v23(v7, v4);
      v23(v13, v4);
      goto LABEL_16;
    case 2u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v25 = (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier;
      if (EnumCaseMultiPayload == 2) {
        goto LABEL_8;
      }
      goto LABEL_14;
    case 3u:
      int v26 = swift_getEnumCaseMultiPayload();
      uint64_t v25 = (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier;
      if (v26 != 3) {
        goto LABEL_14;
      }
      goto LABEL_8;
    case 4u:
      int v27 = swift_getEnumCaseMultiPayload();
      uint64_t v25 = (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier;
      if (v27 != 4) {
        goto LABEL_14;
      }
      goto LABEL_8;
    case 5u:
      int v28 = swift_getEnumCaseMultiPayload();
      uint64_t v25 = (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier;
      if (v28 != 5) {
        goto LABEL_14;
      }
LABEL_8:
      char v22 = 1;
      break;
    default:
      sub_1C21A7F2C((uint64_t)v19, (uint64_t)v15);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v13 = v15;
LABEL_6:
        (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v4);
LABEL_14:
        char v22 = 0;
        uint64_t v25 = (uint64_t (*)(void))sub_1C2220244;
      }
      else
      {
        uint64_t v29 = v33;
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v9, v20, v4);
        char v22 = sub_1C254CB10();
        uint64_t v30 = *(void (**)(char *, uint64_t))(v29 + 8);
        v30(v9, v4);
        v30(v15, v4);
LABEL_16:
        uint64_t v25 = (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier;
      }
      break;
  }
  sub_1C21AD548((uint64_t)v19, v25);
  return v22 & 1;
}

uint64_t method lookup function for OnboardingTileAppearanceManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OnboardingTileAppearanceManager);
}

uint64_t dispatch thunk of OnboardingTileAppearanceManager.__allocating_init(store:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of OnboardingTileAppearanceManager.setOnboarding(dismissed:identifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t *initializeBufferWithCopyOfBuffer for OnboardingViewIdentifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v7 = sub_1C254CB40();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for OnboardingViewIdentifier(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = sub_1C254CB40();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for OnboardingViewIdentifier(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1C254CB40();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for OnboardingViewIdentifier(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C21AD548((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1C254CB40();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for OnboardingViewIdentifier(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1C254CB40();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for OnboardingViewIdentifier(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C21AD548((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1C254CB40();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingViewIdentifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for OnboardingViewIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1C221FA8C()
{
  uint64_t result = sub_1C254CB40();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of OnboardingDismissible.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of OnboardingDismissible.healthStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of OnboardingDismissible.setOnboarding(dismissed:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of OnboardingDismissible.isDismissed()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t getEnumTagSinglePayload for OnboardingViewIdentifier.CodingError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for OnboardingViewIdentifier.CodingError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C221FC54);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C221FC7C()
{
  return 0;
}

ValueMetadata *type metadata accessor for OnboardingViewIdentifier.CodingError()
{
  return &type metadata for OnboardingViewIdentifier.CodingError;
}

uint64_t getEnumTagSinglePayload for OnboardingViewIdentifier.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for OnboardingViewIdentifier.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C221FDF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1C221FE18(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for OnboardingViewIdentifier.CodingKeys()
{
  return &type metadata for OnboardingViewIdentifier.CodingKeys;
}

unint64_t sub_1C221FE38()
{
  unint64_t result = qword_1EA2DE8F0;
  if (!qword_1EA2DE8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DE8F0);
  }
  return result;
}

unint64_t sub_1C221FE90()
{
  unint64_t result = qword_1EA2DE8F8;
  if (!qword_1EA2DE8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DE8F8);
  }
  return result;
}

unint64_t sub_1C221FEE8()
{
  unint64_t result = qword_1EA2DE900;
  if (!qword_1EA2DE900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DE900);
  }
  return result;
}

unint64_t sub_1C221FF40()
{
  unint64_t result = qword_1EA2DE908;
  if (!qword_1EA2DE908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DE908);
  }
  return result;
}

uint64_t sub_1C221FF94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6156776172 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xEF65756C61566465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_1C22200AC()
{
  if (!qword_1EA2DE910)
  {
    type metadata accessor for DocumentReadingOptionKey(255);
    sub_1C21A588C(&qword_1EA2DDF68, type metadata accessor for DocumentReadingOptionKey);
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE910);
    }
  }
}

void sub_1C222014C()
{
  if (!qword_1EA2DE518)
  {
    sub_1C21AB51C(255, &qword_1EBB6FF78);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF60);
    sub_1C21AB970();
    unint64_t v0 = sub_1C2550690();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE518);
    }
  }
}

void sub_1C22201E8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, MEMORY[0x1E4FBC840] + 8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C2220244()
{
  if (!qword_1EA2DE920)
  {
    type metadata accessor for OnboardingViewIdentifier();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DE920);
    }
  }
}

void sub_1C22202A8()
{
  if (!qword_1EA2DE928)
  {
    sub_1C254CB40();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DE928);
    }
  }
}

uint64_t sub_1C2220314(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for AccountLoginDataSource(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DE940);
}

uint64_t sub_1C222039C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C22203F8(unint64_t a1)
{
  uint64_t v3 = qword_1EA2DE938;
  unint64_t v4 = *(void *)(v1 + qword_1EA2DE938);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_1C2550620();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  unint64_t v37 = a1;
  unint64_t v6 = (unint64_t)&unk_1EA303000;
  uint64_t v35 = v3;
  if (v5)
  {
    if (v5 < 1)
    {
      __break(1u);
      goto LABEL_49;
    }
    uint64_t v7 = 0;
    int v8 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        uint64_t v9 = MEMORY[0x1C87588E0](v7++, v4);
        uint64_t v10 = v9 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action;
        uint64_t v11 = *(void **)(v10 + *(int *)(type metadata accessor for ClinicalAccountLoginUpgradeAction() + 20));
        sub_1C2223774(v11);
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v12 = *(void *)(v4 + 32 + 8 * v7++);
        uint64_t v13 = v12 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action;
        uint64_t v11 = *(void **)(v13 + *(int *)(type metadata accessor for ClinicalAccountLoginUpgradeAction() + 20));
        sub_1C2223774(v11);
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v8 = sub_1C226CBE4(0, v8[2] + 1, 1, v8);
      }
      unint64_t v15 = v8[2];
      unint64_t v14 = v8[3];
      if (v15 >= v14 >> 1) {
        int v8 = sub_1C226CBE4((void *)(v14 > 1), v15 + 1, 1, v8);
      }
      _OWORD v8[2] = v15 + 1;
      v8[v15 + 4] = v11;
    }
    while (v7 != v5);
  }
  else
  {
    int v8 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease_n();
  unint64_t v16 = v37;
  if (!(v37 >> 62))
  {
    uint64_t v17 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_18;
    }
LABEL_36:
    swift_bridgeObjectRelease();
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_37;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C2550620();
  if (!v17) {
    goto LABEL_36;
  }
LABEL_18:
  if (v17 < 1)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if ((v37 & 0xC000000000000001) != 0)
  {
    uint64_t v18 = 0;
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v20 = MEMORY[0x1C87588E0](v18, v37) + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action;
      uint64_t v21 = *(void **)(v20 + *(int *)(type metadata accessor for ClinicalAccountLoginUpgradeAction() + 20));
      sub_1C2223774(v21);
      swift_unknownObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = sub_1C226CBE4(0, v19[2] + 1, 1, v19);
      }
      unint64_t v23 = v19[2];
      unint64_t v22 = v19[3];
      if (v23 >= v22 >> 1) {
        uint64_t v19 = sub_1C226CBE4((void *)(v22 > 1), v23 + 1, 1, v19);
      }
      ++v18;
      v19[2] = v23 + 1;
      v19[v23 + 4] = v21;
    }
    while (v17 != v18);
  }
  else
  {
    uint64_t v24 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
    uint64_t v25 = 0;
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      int v26 = *(void **)(*(void *)(v16 + 8 * v25 + 32)
                     + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action
                     + *(int *)(v24 + 20));
      sub_1C2223774(v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = sub_1C226CBE4(0, v19[2] + 1, 1, v19);
      }
      unint64_t v28 = v19[2];
      unint64_t v27 = v19[3];
      if (v28 >= v27 >> 1) {
        uint64_t v19 = sub_1C226CBE4((void *)(v27 > 1), v28 + 1, 1, v19);
      }
      ++v25;
      v19[2] = v28 + 1;
      v19[v28 + 4] = v26;
      unint64_t v16 = v37;
    }
    while (v17 != v25);
  }
  swift_bridgeObjectRelease();
LABEL_37:
  char v29 = sub_1C22ABC44((uint64_t)v8, (uint64_t)v19);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v29) {
    return result;
  }
  unint64_t v31 = swift_bridgeObjectRetain();
  sub_1C228A768(v31);
  swift_bridgeObjectRelease();
  sub_1C254DA30();
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(v36 + v35);
  if (v6 >> 62)
  {
LABEL_50:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C2550620();
    if (result) {
      goto LABEL_40;
    }
LABEL_51:
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
  uint64_t v32 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v32) {
    goto LABEL_51;
  }
LABEL_40:
  if ((v6 & 0xC000000000000001) != 0)
  {
    MEMORY[0x1C87588E0](0, v6);
  }
  else
  {
    if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    swift_retain();
  }
  swift_bridgeObjectRelease();
  sub_1C22AD090();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  if (v34)
  {
    sub_1C254DF20();
    return swift_release();
  }
  swift_release();
LABEL_52:
  return sub_1C254DF20();
}

uint64_t sub_1C2220958()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  unint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v10 - v5;
  sub_1C254DAE0();
  sub_1C254DA80();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  uint64_t v8 = sub_1C254DB40();
  v7(v6, v0);
  return v8;
}

uint64_t sub_1C2220A78()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DAE0();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C2220B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v7;
  void *v7 = v5;
  v7[1] = sub_1C2220BEC;
  return sub_1C2220EEC(a5);
}

uint64_t sub_1C2220BEC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C2220CEC, 0, 0);
}

uint64_t sub_1C2220CEC()
{
  sub_1C254F820();
  *(void *)(v0 + 40) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2220D80, v2, v1);
}

uint64_t sub_1C2220D80()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_release();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v3 = swift_retain_n();
    MEMORY[0x1C8757C00](v3);
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
    uint64_t v2 = v7;
  }
  uint64_t v4 = *(void *)(v0 + 16);
  swift_release();
  unint64_t v5 = *(void *)(v4 + qword_1EA2DE938);
  *(void *)(v4 + qword_1EA2DE938) = v2;
  sub_1C22203F8(v5);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1C2220E8C, 0, 0);
}

uint64_t sub_1C2220E8C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2220EEC(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_1C254CB40();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = sub_1C254E560();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  sub_1C2223D60(0, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction, MEMORY[0x1E4FBB718]);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  v2[15] = v5;
  v2[16] = *(void *)(v5 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2221110, 0, 0);
}

uint64_t sub_1C2221110()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  sub_1C22AD574(*(id *)(v0 + 32), 0, 0, 0, v3);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(void *)(v0 + 176) = v4;
  *(void *)(v0 + 184) = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v3, 1, v1) == 1)
  {
    sub_1C2223834(*(void *)(v0 + 112), (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    uint64_t v21 = 0;
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v14(v21);
  }
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 120);
  sub_1C2223DC4(*(void *)(v0 + 112), v5);
  uint64_t v7 = *(int *)(v6 + 20);
  *(_DWORD *)(v0 + 232) = v7;
  uint64_t v8 = *(void **)(v5 + v7);
  *(void *)(v0 + 192) = v8;
  if ((unint64_t)v8 < 4)
  {
    uint64_t v9 = *(void *)(v0 + 168);
    uint64_t v10 = *(void *)(v0 + 144);
    uint64_t v11 = *(void *)(v0 + 40);
    sub_1C22236B4(v9, v10);
    uint64_t v12 = *(void *)(v11 + qword_1EA2DE930);
    type metadata accessor for AccountLoginItem(0);
    uint64_t v13 = swift_allocObject();
    swift_retain();
    uint64_t v21 = v13;
    sub_1C22223DC(v10, v12);
    sub_1C2223718(v9);
    goto LABEL_5;
  }
  *(void *)(v0 + 200) = *(void *)(*(void *)(v0 + 40) + qword_1EA2DE930);
  id v16 = objc_msgSend(v8, sel_gatewayID);
  uint64_t v17 = sub_1C254F470();
  uint64_t v19 = v18;

  *(void *)(v0 + 208) = v19;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1C22213B4;
  return sub_1C24D0DB8(v17, v19);
}

uint64_t sub_1C22213B4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 224) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1C22214D4, 0, 0);
}

uint64_t sub_1C22214D4()
{
  uint64_t v63 = v0;
  uint64_t v1 = *(void **)(v0 + 224);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 160);
    uint64_t v3 = *(void *)(v0 + 168);
    sub_1C254E510();
    sub_1C22236B4(v3, v2);
    id v4 = v1;
    uint64_t v5 = sub_1C254E550();
    os_log_type_t v6 = sub_1C254FA10();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *(void *)(v0 + 160);
    uint64_t v10 = *(void *)(v0 + 80);
    uint64_t v9 = *(void *)(v0 + 88);
    uint64_t v11 = *(void *)(v0 + 72);
    uint64_t v60 = v4;
    if (v7)
    {
      uint64_t v55 = *(void *)(v0 + 64);
      uint64_t v56 = *(void *)(v0 + 56);
      uint64_t v59 = *(void *)(v0 + 72);
      uint64_t v12 = *(void *)(v0 + 48);
      os_log_type_t type = v6;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v62 = v58;
      *(_DWORD *)uint64_t v13 = 136315394;
      sub_1C222366C((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
      uint64_t v14 = sub_1C2550810();
      *(void *)(v0 + 16) = sub_1C21AD354(v14, v15, &v62);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      sub_1C2223718(v8);
      *(_WORD *)(v13 + 12) = 2080;
      id v16 = objc_msgSend(v4, sel_identifier);
      sub_1C254CB20();

      uint64_t v17 = sub_1C2550810();
      unint64_t v19 = v18;
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v12);
      *(void *)(v0 + 24) = sub_1C21AD354(v17, v19, &v62);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v5, type, "AccountLoginDataSource for account %s will ignore gateway upgrade because account %s for the upgradeable gateway is already connected", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v58, -1, -1);
      MEMORY[0x1C875A0B0](v13, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v59);
    }
    else
    {
      sub_1C2223718(v8);

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    }
    unint64_t v28 = *(void **)(v0 + 192);
    char v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 176);
    uint64_t v30 = *(void *)(v0 + 120);
    uint64_t v32 = *(void *)(v0 + 96);
    uint64_t v31 = *(void *)(v0 + 104);
    id v33 = *(id *)(v0 + 32);
    id v34 = objc_msgSend(v28, sel_gatewayID);
    uint64_t v35 = sub_1C254F470();
    uint64_t v37 = v36;

    sub_1C22AD574(v33, 0, v35, v37, v31);
    sub_1C2223B94(v31, v32, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    if (v29(v32, 1, v30) == 1)
    {
      uint64_t v38 = *(void *)(v0 + 168);
      uint64_t v40 = *(void *)(v0 + 96);
      uint64_t v39 = *(void *)(v0 + 104);
      sub_1C2223E28(*(id *)(v0 + 192));

      sub_1C2223834(v39, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
      sub_1C2223718(v38);
      sub_1C2223834(v40, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
      uint64_t v61 = 0;
      goto LABEL_13;
    }
    uint64_t v42 = *(void **)(v0 + 192);
    uint64_t v41 = *(void *)(v0 + 200);
    uint64_t v43 = *(void *)(v0 + 168);
    uint64_t v45 = *(void *)(v0 + 144);
    uint64_t v44 = *(void *)(v0 + 152);
    uint64_t v46 = *(void *)(v0 + 104);
    sub_1C2223DC4(*(void *)(v0 + 96), v44);
    sub_1C22236B4(v44, v45);
    type metadata accessor for AccountLoginItem(0);
    uint64_t v47 = swift_allocObject();
    swift_retain();
    uint64_t v61 = v47;
    sub_1C22223DC(v45, v41);
    sub_1C2223E28(v42);

    sub_1C2223718(v44);
    sub_1C2223834(v46, (unint64_t *)&qword_1EA2DEA08, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalAccountLoginUpgradeAction);
    uint64_t v48 = v43;
  }
  else
  {
    uint64_t v20 = *(int *)(v0 + 232);
    uint64_t v21 = *(void *)(v0 + 168);
    sub_1C2223E28(*(id *)(v0 + 192));
    unint64_t v22 = *(void *)(v21 + v20);
    uint64_t v23 = *(void *)(v0 + 168);
    uint64_t v24 = *(void *)(v0 + 144);
    if (v22 >= 4)
    {
      uint64_t v49 = *(void *)(v0 + 136);
      uint64_t v50 = *(void *)(v0 + 40);
      sub_1C22236B4(*(void *)(v0 + 168), *(void *)(v0 + 144));
      uint64_t v51 = *(void *)(v50 + qword_1EA2DE930);
      type metadata accessor for AccountUpgradeItem(0);
      uint64_t v52 = swift_allocObject();
      sub_1C22236B4(v24, v49);
      swift_retain();
      uint64_t v61 = v52;
      sub_1C22223DC(v49, v51);
      sub_1C2223718(v24);
    }
    else
    {
      uint64_t v25 = *(void *)(v0 + 40);
      sub_1C22236B4(*(void *)(v0 + 168), *(void *)(v0 + 144));
      uint64_t v26 = *(void *)(v25 + qword_1EA2DE930);
      type metadata accessor for AccountLoginItem(0);
      uint64_t v27 = swift_allocObject();
      swift_retain();
      uint64_t v61 = v27;
      sub_1C22223DC(v24, v26);
    }
    uint64_t v48 = v23;
  }
  sub_1C2223718(v48);
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v53 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v53(v61);
}

void sub_1C2221ABC()
{
}

void sub_1C2221AD8()
{
}

void sub_1C2221AF4()
{
}

uint64_t sub_1C2221B20()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2221B60()
{
  sub_1C254DF40();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2221BC0()
{
  return type metadata accessor for AccountLoginDataSource(0);
}

unint64_t sub_1C2221BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_1C254CB40();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C254F470() == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      a3[3] = sub_1C254D3D0();
      a3[4] = sub_1C222366C(&qword_1EA2DE998, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1C254D3C0();
    }
  }
  unint64_t result = sub_1C254CD80();
  unint64_t v18 = result;
  uint64_t v19 = *(void *)(v3 + qword_1EA2DE938);
  if ((v19 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = MEMORY[0x1C87588E0](v18, v19);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (result >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_19:
    __break(1u);
    return result;
  }
  uint64_t v20 = *(void *)(v19 + 8 * result + 32);
  swift_retain();
LABEL_12:
  sub_1C22236B4(v20 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action, (uint64_t)v13);
  swift_release();
  sub_1C22AD090();
  if (v21)
  {
    v22[0] = 0x74497265746F6F46;
    v22[1] = 0xEB000000005F6D65;
    sub_1C254CB30();
    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    a3[3] = sub_1C254DEA0();
    a3[4] = sub_1C222366C(&qword_1EA2DE9A0, MEMORY[0x1E4F665E8]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1C254DE90();
  }
  else
  {
    a3[3] = sub_1C254D3D0();
    a3[4] = sub_1C222366C(&qword_1EA2DE998, MEMORY[0x1E4F66330]);
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1C254D3C0();
  }
  return sub_1C2223718((uint64_t)v13);
}

unint64_t sub_1C2221F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C2221BC8(a1, a2, a3);
}

id sub_1C2221F6C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___spinner;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___spinner);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___spinner);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1C2221FE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2223D60(0, &qword_1EA2DE9F0, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v27 - v4;
  uint64_t v6 = sub_1C254E610();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB0E40];
  sub_1C2223D60(0, &qword_1EA2DE978, MEMORY[0x1E4FB0E40], v2);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  char v16 = (char *)&v27 - v15;
  uint64_t v17 = v1 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___customAccessory;
  swift_beginAccess();
  sub_1C2223B94(v17, (uint64_t)v16, &qword_1EA2DE978, v10);
  uint64_t v18 = sub_1C254E5E0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(v28, v16, v18);
  }
  sub_1C2223834((uint64_t)v16, &qword_1EA2DE978, MEMORY[0x1E4FB0E40]);
  id v27 = sub_1C2221F6C();
  sub_1C2223C14();
  uint64_t v21 = (uint64_t (**)())&v9[*(int *)(v20 + 48)];
  uint64_t v22 = *MEMORY[0x1E4FB0E18];
  uint64_t v23 = sub_1C254E5A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v9, v22, v23);
  *uint64_t v21 = sub_1C22267A4;
  v21[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FB0E60], v6);
  uint64_t v24 = sub_1C254E5B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v5, 1, 1, v24);
  uint64_t v25 = v28;
  sub_1C254E5D0();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v14, v25, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
  swift_beginAccess();
  sub_1C2223CCC((uint64_t)v14, v17);
  return swift_endAccess();
}

uint64_t sub_1C22223DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___spinner) = 0;
  uint64_t v10 = v3 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___customAccessory;
  uint64_t v11 = sub_1C254E5E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_1C22236B4(a1, v3 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v12 = sub_1C22ADD0C();
  uint64_t v14 = v13;
  id v15 = objc_msgSend(self, sel_hk_appKeyColor);
  id v16 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  sub_1C2223718(a1);
  *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID, v9, v6);
  *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_manager) = a2;
  uint64_t v17 = (uint64_t *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelText);
  *uint64_t v17 = v12;
  v17[1] = v14;
  *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelColor) = v15;
  *(void *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_labelFont) = v16;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_shouldAlignWithImageInsetText) = 0;
  return v3;
}

uint64_t sub_1C2222630(void *a1, void *a2)
{
  uint64_t v3 = v2;
  sub_1C2223D60(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = sub_1C254E5E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  uint64_t v13 = swift_dynamicCastObjCClass();
  if (v13)
  {
    uint64_t v14 = v13;
    sub_1C2223D60(0, &qword_1EA2DE9D8, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
    sub_1C254E620();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
    id v15 = a1;
    sub_1C2221FE4((uint64_t)v12);
    sub_1C254E590();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_1C254FD80();
    id v16 = sub_1C2221F6C();
    objc_msgSend(v16, sel_startAnimating);

    uint64_t v17 = sub_1C254F840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
    uint64_t v18 = (void *)swift_allocObject();
    void v18[2] = 0;
    v18[3] = 0;
    v18[4] = v3;
    v18[5] = a2;
    v18[6] = v14;
    swift_retain();
    id v19 = a2;
    uint64_t v20 = &unk_1EA2DE9E8;
  }
  else
  {
    uint64_t v21 = sub_1C254F840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 1, 1, v21);
    uint64_t v18 = (void *)swift_allocObject();
    void v18[2] = 0;
    v18[3] = 0;
    v18[4] = v3;
    v18[5] = a2;
    swift_retain();
    id v22 = a2;
    uint64_t v20 = &unk_1EA2DE9D0;
  }
  sub_1C24D0A0C((uint64_t)v8, (uint64_t)v20, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_1C22229A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  return MEMORY[0x1F4188298](sub_1C22229C8, 0, 0);
}

uint64_t sub_1C22229C8()
{
  uint64_t v1 = v0[2] + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C2222A7C;
  uint64_t v3 = v0[3];
  return sub_1C24D1544(v1, v3);
}

uint64_t sub_1C2222A7C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C2222B78, 0, 0);
}

uint64_t sub_1C2222B78()
{
  sub_1C254F820();
  *(void *)(v0 + 48) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2222C0C, v2, v1);
}

uint64_t sub_1C2222C0C()
{
  swift_release();
  id v1 = sub_1C2221F6C();
  objc_msgSend(v1, sel_stopAnimating);

  sub_1C254FD80();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C2222C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1C2222CBC, 0, 0);
}

uint64_t sub_1C2222CBC()
{
  uint64_t v1 = v0[2] + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C2222D70;
  uint64_t v3 = v0[3];
  return sub_1C24D1544(v1, v3);
}

uint64_t sub_1C2222D70()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C2222E64()
{
  sub_1C2223718(v0 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action);

  return sub_1C2223834(v0 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___customAccessory, &qword_1EA2DE978, MEMORY[0x1E4FB0E40]);
}

uint64_t sub_1C2222EC4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_accountID;
  uint64_t v2 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();

  sub_1C2201FD8(v0 + OBJC_IVAR____TtC15HealthRecordsUI17AccountActionItem_delegate);
  sub_1C2223718(v0 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action);

  sub_1C2223834(v0 + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem____lazy_storage___customAccessory, &qword_1EA2DE978, MEMORY[0x1E4FB0E40]);
  return v0;
}

uint64_t sub_1C2222FE0()
{
  sub_1C2222EC4();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2223038()
{
  return type metadata accessor for AccountLoginItem(0);
}

uint64_t type metadata accessor for AccountLoginItem(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DE968);
}

void sub_1C2223060()
{
  type metadata accessor for ClinicalAccountLoginUpgradeAction();
  if (v0 <= 0x3F)
  {
    sub_1C2223D60(319, &qword_1EA2DE978, MEMORY[0x1E4FB0E40], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1C2223168()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 264))();
}

uint64_t sub_1C22231C0()
{
  return sub_1C254D330();
}

uint64_t sub_1C2223228(uint64_t a1, void *a2)
{
  sub_1C2223D60(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = 0;
  v8[3] = 0;
  void v8[4] = v2;
  v8[5] = a2;
  swift_retain();
  id v9 = a2;
  sub_1C24D0A0C((uint64_t)v6, (uint64_t)&unk_1EA2DE9B8, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_1C2223354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1C2223374, 0, 0);
}

uint64_t sub_1C2223374()
{
  uint64_t v1 = v0[2] + OBJC_IVAR____TtC15HealthRecordsUI16AccountLoginItem_action;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[4] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C2223E38;
  uint64_t v3 = v0[3];
  return sub_1C24D1544(v1, v3);
}

uint64_t sub_1C2223428()
{
  return type metadata accessor for AccountUpgradeItem(0);
}

uint64_t type metadata accessor for AccountUpgradeItem(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DE980);
}

uint64_t sub_1C2223450()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1C2223488()
{
  return sub_1C2550A10();
}

uint64_t sub_1C22234E8()
{
  sub_1C251C8BC();
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C222353C()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2223598()
{
  uint64_t v0 = sub_1C251C8BC();
  uint64_t v2 = v1;
  if (v0 == sub_1C251C8BC() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C2550870();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1C2223624()
{
  return sub_1C222366C(&qword_1EA2DE990, (void (*)(uint64_t))type metadata accessor for AccountUpgradeItem);
}

uint64_t sub_1C222366C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C22236B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2223718(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1C2223774(id result)
{
  if ((unint64_t)result >= 4) {
    return result;
  }
  return result;
}

uint64_t sub_1C2223788()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1C2223E3C;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x1F4188298](sub_1C2223374, 0, 0);
}

uint64_t sub_1C2223834(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2223D60(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t objectdestroyTm()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C22238F0()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1C222399C;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x1F4188298](sub_1C2222CBC, 0, 0);
}

uint64_t sub_1C222399C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C2223A90()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C2223AE0()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1C2223E3C;
  *(void *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return MEMORY[0x1F4188298](sub_1C22229C8, 0, 0);
}

uint64_t sub_1C2223B94(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C2223D60(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C2223C14()
{
  if (!qword_1EA2DE9F8)
  {
    sub_1C254E5A0();
    sub_1C2223C88();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DE9F8);
    }
  }
}

unint64_t sub_1C2223C88()
{
  unint64_t result = qword_1EA2DEA00;
  if (!qword_1EA2DEA00)
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EA2DEA00);
  }
  return result;
}

uint64_t sub_1C2223CCC(uint64_t a1, uint64_t a2)
{
  sub_1C2223D60(0, &qword_1EA2DE978, MEMORY[0x1E4FB0E40], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C2223D60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2223DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalAccountLoginUpgradeAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C2223E28(id a1)
{
  if ((unint64_t)a1 >= 4) {
}
  }

void UIImageView.applyImage(_:style:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  objc_msgSend(v2, sel_setImage_, a1);
  uint64_t v5 = v3;
  char v6 = v4;
  UIImageView.applyStyle(_:)((uint64_t)&v5);
}

void UIImageView.applyStyle(_:)(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  if (!objc_msgSend(self, sel_isMainThread))
  {
    __break(1u);
    return;
  }
  if (v3)
  {
    if (v3 == 1)
    {
      uint64_t v22 = 0;
      LOBYTE(v23) = 2;
      id v4 = v2;
      UIImageView.applyStyle(_:)(&v22);
      objc_msgSend(v1, sel_setTintColor_, v4, v22, v23);
      sub_1C2224240(v2, 1);
      return;
    }
    objc_msgSend(v1, sel_setContentMode_, 0);
    id v18 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(v1, sel_setBackgroundColor_, v18);

    id v19 = objc_msgSend(v1, sel_layer);
    objc_msgSend(v19, sel_setBorderColor_, 0);

    id v20 = objc_msgSend(v1, sel_layer);
    objc_msgSend(v20, sel_setBorderWidth_, 0.0);

    id v21 = objc_msgSend(v1, sel_layer);
    objc_msgSend(v21, sel_setCornerRadius_, 0.0);

    id v17 = objc_msgSend(v1, sel_layer);
    objc_msgSend(v17, sel_setCornerContentsMasksEdges_, 0);
  }
  else
  {
    double v5 = *(double *)&v2;
    objc_msgSend(v1, sel_setContentMode_, 1);
    char v6 = self;
    id v7 = objc_msgSend(v6, sel_whiteColor);
    objc_msgSend(v1, sel_setBackgroundColor_, v7);

    id v8 = objc_msgSend(v1, sel_layer);
    id v9 = objc_msgSend(v6, sel_separatorColor);
    id v10 = objc_msgSend(v9, sel_CGColor);

    objc_msgSend(v8, sel_setBorderColor_, v10);
    id v11 = objc_msgSend(v1, sel_layer);
    id v12 = objc_msgSend(v1, sel_traitCollection);
    objc_msgSend(v12, sel_displayPixel);
    double v14 = v13;

    objc_msgSend(v11, sel_setBorderWidth_, v14);
    id v15 = objc_msgSend(v1, sel_layer);
    objc_msgSend(v15, sel_setCornerRadius_, v5);

    id v16 = objc_msgSend(v1, sel_layer);
    objc_msgSend(v16, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);

    id v17 = objc_msgSend(v1, sel_layer);
    objc_msgSend(v17, sel_setCornerContentsMasksEdges_, 1);
  }

  objc_msgSend(v1, sel_setTintColor_, 0);
}

void sub_1C2224240(id a1, char a2)
{
  if (a2 == 1) {
}
  }

Swift::Void __swiftcall UIImageView.applyAccountLogoStyle(isMonogram:imageViewSize:)(Swift::Bool isMonogram, CGSize imageViewSize)
{
  if (isMonogram)
  {
    uint64_t v3 = 0;
    LOBYTE(v4) = 2;
  }
  else
  {
    static AccountIcon.Size.smallerOrEqual(to:)((uint64_t)&v3, imageViewSize.width, imageViewSize.height);
    uint64_t v2 = 0x4008000000000000;
    if (v6 != 1) {
      uint64_t v2 = v5;
    }
    uint64_t v3 = v2;
    LOBYTE(v4) = 0;
  }
  UIImageView.applyStyle(_:)((uint64_t)&v3);
}

void sub_1C22242C8(void *a1, double a2, double a3, uint64_t a4, Swift::Bool a5)
{
  id v8 = a1;
  UIImageView.applyAccountLogoStyle(isMonogram:imageViewSize:)(a5, (CGSize)__PAIR128__(*(unint64_t *)&a3, *(unint64_t *)&a2));
}

double static UIImageView.logoInset(for:)(double a1, double a2)
{
  static AccountIcon.Size.smallerOrEqual(to:)((uint64_t)&v4, a1, a2);
  double result = v5;
  double v3 = 2.0;
  if (v6 | *(void *)&v5 | v4) {
    double v3 = 3.0;
  }
  if (v7 == 1) {
    return v3;
  }
  return result;
}

double sub_1C2224390(double a1, double a2)
{
  static AccountIcon.Size.smallerOrEqual(to:)((uint64_t)&v4, a1, a2);
  double result = v5;
  double v3 = 2.0;
  if (v6 | *(void *)&v5 | v4) {
    double v3 = 3.0;
  }
  if (v7 == 1) {
    return v3;
  }
  return result;
}

void sub_1C22243E4()
{
  qword_1EA2DEA10 = 0x4042000000000000;
}

double static UIImageView.smallLogoViewDimension.getter()
{
  return sub_1C2224524(&qword_1EA2DD490, (uint64_t)&qword_1EA2DEA10);
}

double sub_1C2224418(uint64_t a1, uint64_t a2)
{
  return sub_1C2224584(a1, a2, &qword_1EA2DD490, (uint64_t)&qword_1EA2DEA10);
}

void sub_1C222443C()
{
  qword_1EA2DEA18 = 0x4046800000000000;
}

double static UIImageView.mediumLogoViewDimension.getter()
{
  return sub_1C2224524(&qword_1EA2DD498, (uint64_t)&qword_1EA2DEA18);
}

double sub_1C2224474(uint64_t a1, uint64_t a2)
{
  return sub_1C2224584(a1, a2, &qword_1EA2DD498, (uint64_t)&qword_1EA2DEA18);
}

void sub_1C2224498()
{
  qword_1EA2DEA20 = 0x404E000000000000;
}

double static UIImageView.largeLogoViewDimension.getter()
{
  return sub_1C2224524(&qword_1EA2DD4A0, (uint64_t)&qword_1EA2DEA20);
}

double sub_1C22244CC(uint64_t a1, uint64_t a2)
{
  return sub_1C2224584(a1, a2, &qword_1EA2DD4A0, (uint64_t)&qword_1EA2DEA20);
}

void sub_1C22244F0()
{
  qword_1EA2DEA28 = 0x4054000000000000;
}

double static UIImageView.providerDetailLogoViewDimension.getter()
{
  return sub_1C2224524(&qword_1EA2DD4A8, (uint64_t)&qword_1EA2DEA28);
}

double sub_1C2224524(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *(double *)a2;
}

double sub_1C2224560(uint64_t a1, uint64_t a2)
{
  return sub_1C2224584(a1, a2, &qword_1EA2DD4A8, (uint64_t)&qword_1EA2DEA28);
}

double sub_1C2224584(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  return *(double *)a4;
}

void UIImageView.applyIcon(_:)(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >> 1 == 0xFFFFFFFF)
  {
    objc_msgSend(v1, sel_setImage_, 0);
    double v14 = 0;
    char v15 = 2;
    UIImageView.applyStyle(_:)((uint64_t)&v14);
  }
  else
  {
    uint64_t v4 = *(void **)a1;
    double v3 = *(void **)(a1 + 8);
    if ((v2 & 0x8000000000000000) != 0)
    {
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      id v9 = *(void **)(a1 + 40);
      uint64_t v10 = 0x4008000000000000;
      if ((v2 & 1) == 0) {
        uint64_t v10 = *(void *)(a1 + 24);
      }
      if (v4) {
        id v11 = 0;
      }
      else {
        id v11 = (void *)v10;
      }
      if (v4) {
        char v12 = 2;
      }
      else {
        char v12 = 0;
      }
      sub_1C2207BC8(*(void **)a1, v3, v7, v8, v2, v9);
      sub_1C2207BC8(v4, v3, v7, v8, v2, v9);
      objc_msgSend(v1, sel_setImage_, v9);
      double v14 = v11;
      char v15 = v12;
      UIImageView.applyStyle(_:)((uint64_t)&v14);
      sub_1C2224240(v11, v12);
      sub_1C2224A88(v4, (uint64_t)v3, v7, v8, v2);
      sub_1C2224A88(v4, (uint64_t)v3, v7, v8, v2);
    }
    else if (v3)
    {
      id v5 = v4;
      id v6 = v3;
      objc_msgSend(v1, sel_setImage_, v5);
      double v14 = v3;
      char v15 = 1;
      UIImageView.applyStyle(_:)((uint64_t)&v14);
    }
    else
    {
      id v13 = v4;
      objc_msgSend(v1, sel_setImage_, v13);
      double v14 = 0;
      char v15 = 2;
      UIImageView.applyStyle(_:)((uint64_t)&v14);
    }
  }
}

{
  void *v1;
  void *v2;
  uint64_t v3;
  char v4;
  id v5;
  uint64_t v6;
  char v7;
  uint64_t vars8;

  unint64_t v2 = *(void **)(a1 + 40);
  if (!v2 || (*(unsigned char *)a1 & 1) != 0)
  {
    double v3 = 0;
    uint64_t v4 = 2;
  }
  else
  {
    if (*(unsigned char *)(a1 + 32)) {
      double v3 = 0x4008000000000000;
    }
    else {
      double v3 = *(void *)(a1 + 24);
    }
    uint64_t v4 = 0;
  }
  id v5 = v2;
  objc_msgSend(v1, sel_setImage_, v5);
  id v6 = v3;
  uint64_t v7 = v4;
  UIImageView.applyStyle(_:)((uint64_t)&v6);

  sub_1C2224240((id)v3, v4);
}

id sub_1C2224870()
{
  return sub_1C22248B0(0xD000000000000015, 0x80000001C25761A0, (SEL *)&selRef_systemBlueColor);
}

id sub_1C2224894()
{
  return sub_1C22248B0(0x656C63726963, 0xE600000000000000, (SEL *)&selRef_tertiaryLabelColor);
}

id sub_1C22248B0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  id v5 = objc_msgSend(self, sel_configurationWithFont_scale_, v4, 3);

  id v6 = (void *)sub_1C254F430();
  id v7 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v6, v5);

  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v7);
  id v9 = [self *a3];
  objc_msgSend(v8, sel_setTintColor_, v9);

  return v8;
}

double _sSo11UIImageViewC15HealthRecordsUIE13logoDimension3for12CoreGraphics7CGFloatVSo6CGSizeV_tFZ_0(double a1, double a2)
{
  static AccountIcon.Size.smallerOrEqual(to:)((uint64_t)&v8, a1, a2);
  if (v10 == 1)
  {
    if (*((void *)&v9 + 1) | (unint64_t)v9 | *(void *)&v8)
    {
      double v2 = 3.0;
      double v3 = 45.0;
      BOOL v4 = v9 == 0 && *(void *)&v8 == 2;
      double v5 = 80.0;
      if (v4) {
        double v5 = 60.0;
      }
      if (*(void *)&v8 != 1 || v9 != 0) {
        double v3 = v5;
      }
    }
    else
    {
      double v2 = 2.0;
      double v3 = 36.0;
    }
  }
  else
  {
    double v3 = v8;
    double v2 = *(double *)&v9;
  }
  return v3 - v2;
}

void *sub_1C2224A88(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((unint64_t)a5 >> 1 != 0xFFFFFFFF) {
    return (void *)sub_1C2224A9C(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_1C2224A9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((a5 & 0x8000000000000000) == 0)
  {

    uint64_t v5 = vars8;
  }
  return MEMORY[0x1F4181880]();
}

uint64_t _s9IconStyleOwCP(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C2224B20(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1C2224B20(id result, char a2)
{
  if (a2 == 1) {
    return result;
  }
  return result;
}

void _s9IconStyleOwxx(uint64_t a1)
{
}

uint64_t _s9IconStyleOwca(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C2224B20(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C2224240(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)double result = v2;
  return result;
}

uint64_t _s9IconStyleOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1C2224240(v4, v5);
  return a1;
}

uint64_t _s9IconStyleOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s9IconStyleOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)double result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C2224C78(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C2224C90(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)double result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UIImageView.IconStyle()
{
  return &type metadata for UIImageView.IconStyle;
}

uint64_t sub_1C2224CBC@<X0>(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(*(id *)(v1 + qword_1EA2DF3E8), sel_healthStore);
  id v4 = objc_msgSend(v3, sel_profileIdentifier);

  sub_1C254FB30();
  uint64_t v5 = type metadata accessor for AllFeedForProfileDataSourceProvider();
  uint64_t v6 = swift_allocObject();
  sub_1C21F44EC(&v9, v6 + 16);
  *(void *)(v6 + 56) = v4;
  a1[3] = v5;
  uint64_t result = sub_1C2225A94(&qword_1EA2DEA58, v7, (void (*)(uint64_t))type metadata accessor for AllFeedForProfileDataSourceProvider);
  a1[4] = result;
  *a1 = v6;
  return result;
}

uint64_t AllFeedForProfileDataSourceProvider.__allocating_init(sourceProfile:store:)(uint64_t a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1C21F44EC(a2, v4 + 16);
  *(void *)(v4 + 56) = a1;
  return v4;
}

uint64_t sub_1C2224DF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F662A8];
  uint64_t v3 = sub_1C254D320();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

id sub_1C2224E68()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalAllFeedForProfileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C2224EA0()
{
  qword_1EA2DEA30 = 0x4036000000000000;
}

uint64_t sub_1C2224EB0(uint64_t a1, void *a2)
{
  sub_1C21F4424(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + 16;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1C21F44EC(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1C2224F18@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_1C21F4424(v1 + 16, a1);
}

uint64_t sub_1C2224F64(long long *a1)
{
  uint64_t v3 = v1 + 16;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1C21F44EC(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1C2224FC0())()
{
  return j__swift_endAccess;
}

uint64_t AllFeedForProfileDataSourceProvider.init(sourceProfile:store:)(uint64_t a1, long long *a2)
{
  sub_1C21F44EC(a2, v2 + 16);
  *(void *)(v2 + 56) = a1;
  return v2;
}

uint64_t sub_1C222504C()
{
  sub_1C2225098();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255CD90;
  *(void *)(v0 + 32) = sub_1C2225144();
  *(void *)(v0 + 40) = v1;
  return v0;
}

void sub_1C2225098()
{
  if (!qword_1EA2DEA38)
  {
    sub_1C22250F0();
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DEA38);
    }
  }
}

unint64_t sub_1C22250F0()
{
  unint64_t result = qword_1EA2DEA40;
  if (!qword_1EA2DEA40)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DEA40);
  }
  return result;
}

uint64_t sub_1C2225144()
{
  uint64_t v1 = v0;
  uint64_t v36 = sub_1C254D7E0();
  uint64_t v2 = *(void *)(v36 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v36);
  uint64_t v35 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v34 - v5;
  sub_1C254D110();
  uint64_t v7 = (void *)MEMORY[0x1C87555F0]();
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v8 = swift_allocObject();
  long long v34 = xmmword_1C255CEB0;
  *(_OWORD *)(v8 + 16) = xmmword_1C255CEB0;
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CD90;
  char v10 = *(void **)(v0 + 56);
  *(void *)(v9 + 32) = v10;
  id v11 = v10;
  uint64_t v12 = MEMORY[0x1C8755610](v9);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 32) = v12;
  v38[0] = v8;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  id v13 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v13);

  objc_msgSend(v7, sel_setPredicate_, v14);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v34;
  id v16 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  id v17 = (void *)sub_1C254F430();
  id v18 = objc_msgSend(v16, sel_initWithKey_ascending_selector_, v17, 1, sel_localizedStandardCompare_);

  *(void *)(v15 + 32) = v18;
  v38[0] = v15;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  id v19 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSortDescriptors_, v19);

  swift_beginAccess();
  sub_1C21F4424(v1 + 16, (uint64_t)v38);
  __swift_project_boxed_opaque_existential_1Tm(v38, v38[3]);
  id v20 = v7;
  id v21 = (void *)sub_1C254CE10();
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v20, v21, 0, 0);

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
  sub_1C254D7A0();
  uint64_t v23 = (void (*)(void *, void))sub_1C254D7C0();
  uint64_t v25 = v24;
  uint64_t v26 = sub_1C254D740();
  id v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48);
  if (v27(v25, 1, v26))
  {
    v23(v38, 0);
  }
  else
  {
    *(void *)&long long v34 = v22;
    swift_getKeyPath();
    uint64_t v28 = self;
    if (qword_1EA2DD4B0 != -1) {
      swift_once();
    }
    id v37 = objc_msgSend(v28, sel_absoluteDimension_, *(double *)&qword_1EA2DEA30);
    sub_1C254D730();
    v23(v38, 0);
  }
  char v29 = (void (*)(void *, void))sub_1C254D7C0();
  if (!v27(v30, 1, v26))
  {
    swift_getKeyPath();
    id v37 = objc_msgSend(self, sel_absoluteDimension_, 0.0);
    sub_1C254D730();
  }
  v29(v38, 0);
  sub_1C22259FC();
  uint64_t v31 = v36;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v35, v6, v36);
  uint64_t v32 = sub_1C254D540();

  (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v31);
  sub_1C2225A94((unint64_t *)&qword_1EA2DEA78, 255, (void (*)(uint64_t))sub_1C22259FC);
  return v32;
}

uint64_t AllFeedForProfileDataSourceProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return v0;
}

uint64_t AllFeedForProfileDataSourceProvider.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1C2225784()
{
  sub_1C2225098();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255CD90;
  *(void *)(v0 + 32) = sub_1C2225144();
  *(void *)(v0 + 40) = v1;
  return v0;
}

uint64_t sub_1C22257DC(uint64_t a1, uint64_t a2, char a3)
{
  return MEMORY[0x1F411E150](a1, a2, a3 & 1);
}

uint64_t sub_1C22257EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 16;
  swift_beginAccess();
  return sub_1C21F4424(v3, a2);
}

uint64_t type metadata accessor for InternalAllFeedForProfileViewController()
{
  uint64_t result = qword_1EA2DEA48;
  if (!qword_1EA2DEA48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C222588C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C22258CC()
{
  return type metadata accessor for InternalAllFeedForProfileViewController();
}

uint64_t type metadata accessor for AllFeedForProfileDataSourceProvider()
{
  return self;
}

uint64_t method lookup function for AllFeedForProfileDataSourceProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AllFeedForProfileDataSourceProvider);
}

uint64_t dispatch thunk of AllFeedForProfileDataSourceProvider.store.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of AllFeedForProfileDataSourceProvider.store.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of AllFeedForProfileDataSourceProvider.store.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of AllFeedForProfileDataSourceProvider.__allocating_init(sourceProfile:store:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AllFeedForProfileDataSourceProvider.selectedDataSources(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

void sub_1C22259B4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C2550820();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1C22259FC()
{
  if (!qword_1EA2DEA68)
  {
    sub_1C254D110();
    sub_1C2225A94((unint64_t *)&qword_1EA2DEA70, 255, MEMORY[0x1E4F674F8]);
    unint64_t v0 = sub_1C254D520();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DEA68);
    }
  }
}

uint64_t sub_1C2225A94(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1C2225AEC()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI17PinnedConceptCell____lazy_storage___accessoryImageView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17PinnedConceptCell____lazy_storage___accessoryImageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI17PinnedConceptCell____lazy_storage___accessoryImageView);
  }
  else
  {
    uint64_t v4 = v0;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
    uint64_t v5 = (void *)sub_1C254FF00();
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v5);

    uint64_t v7 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

uint64_t sub_1C2225BB0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1C2227014(v1, (uint64_t)v7);
  if (v8)
  {
    sub_1C22270A8();
    type metadata accessor for PinnedConceptItem();
    if (swift_dynamicCast())
    {
      char v2 = *(unsigned char *)(v6 + 40);
      swift_release();
      if (v2)
      {
        if (qword_1EBB6EF40 == -1) {
          goto LABEL_8;
        }
        goto LABEL_9;
      }
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v7);
  }
  if (qword_1EBB6EF40 != -1) {
LABEL_9:
  }
    swift_once();
LABEL_8:
  id v3 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v4;
}

uint64_t sub_1C2225D7C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1C2227014(v1, (uint64_t)v3);
  if (v4)
  {
    sub_1C22270A8();
    type metadata accessor for PinnedConceptItem();
    if (swift_dynamicCast()) {
      swift_release();
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v3);
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
  return sub_1C254FF00();
}

uint64_t sub_1C2225EA0()
{
  uint64_t v1 = sub_1C254E560();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1C2227014(v5, (uint64_t)v17);
  if (v17[3])
  {
    sub_1C22270A8();
    type metadata accessor for PinnedConceptItem();
    if (swift_dynamicCast()) {
      return v16;
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v17);
  }
  sub_1C254E510();
  id v7 = v0;
  uint64_t v8 = sub_1C254E550();
  os_log_type_t v9 = sub_1C254FA20();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v1;
    id v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v16 = v12;
    *(_DWORD *)id v11 = 136446210;
    sub_1C2227014(v5, (uint64_t)v17);
    sub_1C222718C(0, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBB718]);
    uint64_t v13 = sub_1C254F510();
    v17[0] = sub_1C21AD354(v13, v14, &v16);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v8, v9, "Incorrect view model for PinnedConceptCell: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v12, -1, -1);
    MEMORY[0x1C875A0B0](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return 0;
}

uint64_t sub_1C222616C()
{
  uint64_t v1 = sub_1C254E560();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1C2227014(v5, (uint64_t)v17);
  if (!v18)
  {
    sub_1C2227100((uint64_t)v17);
LABEL_8:
    sub_1C254E510();
    id v7 = v0;
    uint64_t v8 = sub_1C254E550();
    os_log_type_t v9 = sub_1C254FA20();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v15 = v1;
      uint64_t v16 = v11;
      uint64_t v12 = v11;
      *(_DWORD *)uint64_t v10 = 136446210;
      sub_1C2227014(v5, (uint64_t)v17);
      sub_1C222718C(0, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBB718]);
      uint64_t v13 = sub_1C254F510();
      v17[0] = sub_1C21AD354(v13, v14, &v16);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v8, v9, "Incorrect view model for PinnedConceptCell: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v12, -1, -1);
      MEMORY[0x1C875A0B0](v10, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v15);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
  sub_1C22270A8();
  type metadata accessor for PinnedConceptItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  swift_release();
  sub_1C2227014(v5, (uint64_t)v17);
  if (v18)
  {
    if (swift_dynamicCast()) {
      swift_release();
    }
    return sub_1C22267AC();
  }
  else
  {
    sub_1C2227100((uint64_t)v17);
    return sub_1C22267AC();
  }
}

uint64_t sub_1C2226484@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C22264DC(uint64_t a1)
{
  sub_1C2227014(a1, (uint64_t)v5);
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1C22271F0((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C222616C();
  return sub_1C2227100(a1);
}

void (*sub_1C2226558(void *a1))(void *a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_1C24A9FE0();
  return sub_1C22265B4;
}

void sub_1C22265B4(void *a1, char a2)
{
  uint64_t v3 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  if ((a2 & 1) == 0) {
    sub_1C222616C();
  }
  free(v3);
}

uint64_t sub_1C2226610()
{
  sub_1C24A975C();
  return sub_1C22267AC();
}

void sub_1C2226708()
{
}

id sub_1C2226718()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PinnedConceptCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PinnedConceptCell()
{
  return self;
}

uint64_t sub_1C2226780()
{
  return sub_1C2226F2C();
}

uint64_t sub_1C22267A4()
{
  return 0;
}

uint64_t sub_1C22267AC()
{
  uint64_t v1 = v0;
  sub_1C222718C(0, &qword_1EA2DE9F0, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v49 = (char *)&v43 - v3;
  uint64_t v46 = sub_1C254E610();
  uint64_t v4 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254E5E0();
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x1F4188790](v7);
  os_log_type_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254E890();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  uint64_t v45 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1C87582A0](v12);
  sub_1C2225BB0();
  sub_1C254E860();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  sub_1C254FE50();
  uint64_t v15 = (void (*)(uint64_t *, void))sub_1C254E7A0();
  sub_1C254E770();
  v15(v51, 0);
  id v16 = sub_1C2225AEC();
  id v17 = objc_msgSend(self, sel_systemBlueColor);
  objc_msgSend(v16, sel_setTintColor_, v17);

  sub_1C222718C(0, &qword_1EA2DE9D8, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C254E620();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
  sub_1C2225AEC();
  sub_1C2223C14();
  id v19 = (uint64_t (**)())&v6[*(int *)(v18 + 48)];
  uint64_t v20 = *MEMORY[0x1E4FB0E18];
  uint64_t v21 = sub_1C254E5A0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v6, v20, v21);
  void *v19 = sub_1C22267A4;
  v19[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FB0E60], v46);
  uint64_t v22 = sub_1C254E5B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v49, 1, 1, v22);
  uint64_t v23 = v44;
  sub_1C254E5D0();
  sub_1C254E590();
  uint64_t v24 = v9;
  uint64_t v25 = v45;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v24, v48);
  sub_1C254FD80();
  uint64_t v52 = v23;
  uint64_t v53 = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v51);
  (*(void (**)(uint64_t *, char *, uint64_t))(v25 + 16))(boxed_opaque_existential_1, v14, v23);
  MEMORY[0x1C8758230](v51);
  id v27 = sub_1C2225AEC();
  uint64_t v28 = (void *)sub_1C2225D7C();
  objc_msgSend(v27, sel_setImage_, v28);

  sub_1C2201F2C();
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1C255CDA0;
  *(void *)(v29 + 32) = 0x736E6F6974704FLL;
  *(void *)(v29 + 40) = 0xE700000000000000;
  uint64_t v30 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1C2227014(v30, (uint64_t)v51);
  if (v52)
  {
    sub_1C22270A8();
    type metadata accessor for PinnedConceptItem();
    if (swift_dynamicCast())
    {
      char v31 = *(unsigned char *)(v50 + 40);
      swift_release();
      if (v31)
      {
        unint64_t v32 = 0xEB000000006E6F74;
        uint64_t v33 = 0x7475426E69706E55;
        goto LABEL_7;
      }
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v51);
  }
  uint64_t v33 = 0x6F747475426E6950;
  unint64_t v32 = 0xE90000000000006ELL;
LABEL_7:
  *(void *)(v29 + 48) = v33;
  *(void *)(v29 + 56) = v32;
  long long v34 = (void *)sub_1C254F700();
  id v35 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v35);
  id v36 = sub_1C2225AEC();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v29 = (uint64_t)sub_1C226BFC0(0, *(void *)(v29 + 16) + 1, 1, (void *)v29);
  }
  unint64_t v38 = *(void *)(v29 + 16);
  unint64_t v37 = *(void *)(v29 + 24);
  if (v38 >= v37 >> 1) {
    uint64_t v29 = (uint64_t)sub_1C226BFC0((void *)(v37 > 1), v38 + 1, 1, (void *)v29);
  }
  *(void *)(v29 + 16) = v38 + 1;
  uint64_t v39 = v29 + 16 * v38;
  *(void *)(v39 + 32) = 0x726F737365636341;
  *(void *)(v39 + 40) = 0xE900000000000079;
  uint64_t v40 = (void *)sub_1C254F700();
  id v41 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v36, sel_setAccessibilityIdentifier_, v41);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v23);
}

uint64_t sub_1C2226F2C()
{
  uint64_t v1 = sub_1C2225EA0();
  if (v1)
  {
    uint64_t v2 = *(void (**)(uint64_t))(v1 + 48);
    swift_retain();
    uint64_t v3 = swift_release();
    v2(v3);
    swift_release();
  }
  uint64_t v4 = v0 + OBJC_IVAR____TtC15HealthRecordsUI8ListCell_item;
  swift_beginAccess();
  sub_1C2227014(v4, (uint64_t)v6);
  if (v7)
  {
    sub_1C22270A8();
    type metadata accessor for PinnedConceptItem();
    if (swift_dynamicCast()) {
      swift_release();
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v6);
  }
  return sub_1C22267AC();
}

uint64_t sub_1C2227014(uint64_t a1, uint64_t a2)
{
  sub_1C222718C(0, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C22270A8()
{
  unint64_t result = qword_1EA2DED90;
  if (!qword_1EA2DED90)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DED90);
  }
  return result;
}

uint64_t sub_1C2227100(uint64_t a1)
{
  sub_1C222718C(0, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C222718C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C22271F0(uint64_t a1, uint64_t a2)
{
  sub_1C222718C(0, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_UNKNOWN **sub_1C2227284()
{
  return &off_1F1D92C78;
}

uint64_t ClinicalPublisherFactory.__allocating_init(with:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0A0]), sel_initWithHealthStore_, a1);
  return v2;
}

uint64_t sub_1C22272EC(void *a1)
{
  uint64_t v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C222969C(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v20 - v4;
  sub_1C2227638();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C222772C(0);
  uint64_t v21 = *(void *)(v11 - 8);
  uint64_t v22 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v1;
  sub_1C2229828(0, (unint64_t *)&qword_1EBB6DCC8, MEMORY[0x1E4F1AC28]);
  sub_1C22276B8();
  id v15 = a1;
  swift_retain();
  sub_1C254EB10();
  uint64_t v16 = sub_1C254CAD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
  sub_1C2228418(&qword_1EA2DEA98, (void (*)(uint64_t))sub_1C2227638);
  sub_1C254EBE0();
  sub_1C2229700((uint64_t)v5, (unint64_t *)&qword_1EBB6F550, v23);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1C2228418(&qword_1EA2DEAA0, sub_1C222772C);
  uint64_t v17 = v22;
  uint64_t v18 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v17);
  return v18;
}

void sub_1C2227638()
{
  if (!qword_1EA2DEA88)
  {
    sub_1C2229828(255, (unint64_t *)&qword_1EBB6DCC8, MEMORY[0x1E4F1AC28]);
    sub_1C22276B8();
    unint64_t v0 = sub_1C254EB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DEA88);
    }
  }
}

unint64_t sub_1C22276B8()
{
  unint64_t result = qword_1EBB6DCC0;
  if (!qword_1EBB6DCC0)
  {
    sub_1C2229828(255, (unint64_t *)&qword_1EBB6DCC8, MEMORY[0x1E4F1AC28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6DCC0);
  }
  return result;
}

void sub_1C222772C(uint64_t a1)
{
}

uint64_t sub_1C2227768@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_1C2229828(0, (unint64_t *)&qword_1EBB6DCC8, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  id v7 = a1;
  swift_retain();
  uint64_t result = sub_1C254EAF0();
  *a3 = result;
  return result;
}

uint64_t sub_1C2227824@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2227768(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_1C222782C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(a3, sel_identifier);
  sub_1C254CB20();

  id v13 = _sSo7HKQueryC15HealthRecordsUIE025predicateForRecentAccountC09accountIdSo11NSPredicateC10Foundation4UUIDV_tFZ_0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v14 = _s15HealthRecordsUI19DisplayItemProviderC19supportedCategoriesShyAA0D8CategoryVGvgZ_0();
  unint64_t v15 = sub_1C2229104(v14);
  id v16 = v13;
  sub_1C22293D0(v15, (uint64_t)v16);
  swift_release();

  sub_1C21ACA3C();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C255CEB0;
  sub_1C254F470();
  id v18 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  id v19 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v18, sel_initWithKey_ascending_, v19, 0);

  *(void *)(v17 + 32) = v20;
  aBlock[0] = v17;
  sub_1C254F730();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a1;
  *(void *)(v21 + 24) = a2;
  id v22 = objc_allocWithZone(MEMORY[0x1E4F2B430]);
  sub_1C21AB51C(0, &qword_1EBB6EF58);
  swift_retain();
  uint64_t v23 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  uint64_t v24 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1C2229820;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2274608;
  aBlock[3] = &block_descriptor_23;
  uint64_t v25 = _Block_copy(aBlock);
  id v26 = objc_msgSend(v22, sel_initWithQueryDescriptors_sortDescriptors_followingAnchor_upToAndIncludingAnchor_distinctByKeyPaths_limit_resultsHandler_, v23, v24, 0, 0, 0, 1, v25);

  _Block_release(v25);
  swift_release();
  id v27 = v26;
  uint64_t v28 = (void *)sub_1C254F430();
  objc_msgSend(v27, sel_setDebugIdentifier_, v28);

  objc_msgSend(*(id *)(a4 + 16), sel_executeQuery_, v27);
}

uint64_t sub_1C2227BB8(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void (*a5)(char *))
{
  sub_1C2229828(0, (unint64_t *)&unk_1EA2DEAF0, MEMORY[0x1E4FBC448]);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v23 - v12;
  if (a4)
  {
    *(void *)id v13 = a4;
    swift_storeEnumTagMultiPayload();
    id v14 = a4;
    uint64_t v11 = v13;
LABEL_14:
    a5(v11);
    return sub_1C22298D0((uint64_t)v11);
  }
  if (!a2)
  {
    uint64_t v21 = sub_1C254CAD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v13, 1, 1, v21);
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = v13;
    goto LABEL_14;
  }
  if (!(a2 >> 62))
  {
    uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_1C254CAD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v11, 1, 1, v22);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  if (!result) {
    goto LABEL_12;
  }
LABEL_6:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v17 = (id)MEMORY[0x1C87588E0](0, a2);
    goto LABEL_9;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v17 = *(id *)(a2 + 32);
LABEL_9:
    id v18 = v17;
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(v18, sel__creationDate);

    sub_1C254CA80();
    uint64_t v20 = sub_1C254CAD0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v11, 0, 1, v20);
LABEL_13:
    swift_storeEnumTagMultiPayload();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2227E50(void *a1)
{
  uint64_t v2 = v1;
  sub_1C22280F4();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22282A0(0);
  v18[0] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = v2;
  sub_1C2228188();
  sub_1C2228418(&qword_1EA2DEAC8, (void (*)(uint64_t))sub_1C2228188);
  id v14 = a1;
  swift_retain();
  sub_1C254EB10();
  v18[1] = MEMORY[0x1E4FBC860];
  sub_1C2228418(&qword_1EA2DEAD8, (void (*)(uint64_t))sub_1C22280F4);
  sub_1C254EBE0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1C2228418(&qword_1EA2DEAE0, sub_1C22282A0);
  uint64_t v15 = v18[0];
  uint64_t v16 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v15);
  return v16;
}

void sub_1C22280F4()
{
  if (!qword_1EA2DEAA8)
  {
    sub_1C2228188();
    sub_1C2228418(&qword_1EA2DEAC8, (void (*)(uint64_t))sub_1C2228188);
    unint64_t v0 = sub_1C254EB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DEAA8);
    }
  }
}

void sub_1C2228188()
{
  if (!qword_1EA2DEAB0)
  {
    sub_1C222969C(255, &qword_1EA2DEAB8, (uint64_t (*)(uint64_t))sub_1C2228228, MEMORY[0x1E4FBB320]);
    sub_1C2206F9C();
    unint64_t v0 = sub_1C254EAE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DEAB0);
    }
  }
}

void sub_1C2228228()
{
  if (!qword_1EA2DEAC0)
  {
    sub_1C254CAD0();
    sub_1C254CB40();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA2DEAC0);
    }
  }
}

void sub_1C22282A0(uint64_t a1)
{
}

void sub_1C22282DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1C2228418(a4, a5);
    unint64_t v8 = sub_1C254E910();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2228370@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_1C2228188();
  swift_allocObject();
  id v7 = a1;
  swift_retain();
  uint64_t result = sub_1C254EAF0();
  *a3 = result;
  return result;
}

uint64_t sub_1C2228410@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2228370(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C2228418(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2228460(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  swift_retain();
  id v13 = objc_msgSend(a3, sel_identifier);
  sub_1C254CB20();

  id v14 = _sSo7HKQueryC15HealthRecordsUIE027predicateForRelevantAccountC09accountIdSo11NSPredicateC10Foundation4UUIDV_tFZ_0((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  unint64_t v15 = sub_1C21A9468();
  uint64_t v16 = *(void *)(v15 + 16);
  uint64_t v49 = v12;
  uint64_t v50 = a4;
  if (v16)
  {
    uint64_t v17 = sub_1C21A93C4(2);
    if (v18)
    {
      uint64_t v19 = *(void *)(v15 + 56) + 72 * v17;
      char v20 = *(unsigned char *)v19;
      uint64_t v22 = *(void **)(v19 + 8);
      uint64_t v21 = *(uint64_t (**)(uint64_t, void *, uint64_t, void *, void *))(v19 + 16);
      uint64_t v23 = *(void **)(v19 + 24);
      uint64_t v48 = *(void (**)(uint64_t, unint64_t, uint64_t, void *))(v19 + 32);
      uint64_t v25 = *(void *)(v19 + 40);
      unint64_t v24 = *(void *)(v19 + 48);
      uint64_t v26 = *(void *)(v19 + 56);
      id v27 = *(void **)(v19 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v28 = v27;
      id v29 = v22;
      uint64_t v30 = swift_bridgeObjectRelease();
      LOBYTE(aBlock) = v20;
      uint64_t v52 = (uint64_t)v29;
      uint64_t v53 = v21;
      long long v54 = v23;
      uint64_t v55 = v48;
      uint64_t v56 = v25;
      unint64_t v57 = v24;
      uint64_t v58 = v26;
LABEL_6:
      MEMORY[0x1F4188790](v30);
      id v47 = v14;
      id v32 = v14;
      swift_bridgeObjectRetain();
      sub_1C2268390((void (*)(uint64_t *__return_ptr, id *))sub_1C222966C, (uint64_t)(&v48 - 4), v24);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v33 = v32;
      swift_bridgeObjectRelease_n();
      sub_1C21ACA3C();
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1C255CEB0;
      sub_1C254F470();
      id v35 = objc_allocWithZone(MEMORY[0x1E4F29008]);
      id v36 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      id v37 = objc_msgSend(v35, sel_initWithKey_ascending_, v36, 0);

      *(void *)(v34 + 32) = v37;
      uint64_t aBlock = v34;
      sub_1C254F730();
      uint64_t v38 = swift_allocObject();
      uint64_t v39 = v49;
      *(void *)(v38 + 16) = sub_1C22290C4;
      *(void *)(v38 + 24) = v39;
      id v40 = objc_allocWithZone(MEMORY[0x1E4F2B430]);
      sub_1C21AB51C(0, &qword_1EBB6EF58);
      id v41 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
      uint64_t v42 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      uint64_t v55 = sub_1C222968C;
      uint64_t v56 = v38;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v52 = 1107296256;
      uint64_t v53 = sub_1C2274608;
      long long v54 = &block_descriptor_13;
      uint64_t v43 = _Block_copy(&aBlock);
      id v44 = objc_msgSend(v40, sel_initWithQueryDescriptors_sortDescriptors_followingAnchor_upToAndIncludingAnchor_distinctByKeyPaths_limit_resultsHandler_, v41, v42, 0, 0, 0, 0, v43);

      _Block_release(v43);
      swift_release();
      id v45 = v44;
      uint64_t v46 = (void *)sub_1C254F430();
      objc_msgSend(v45, sel_setDebugIdentifier_, v46);

      objc_msgSend(*(id *)(v50 + 16), sel_executeQuery_, v45);
      return;
    }
  }
  swift_bridgeObjectRelease();
  id v31 = objc_msgSend(self, sel_unknownRecordCategory);
  if (v31)
  {
    sub_1C21AA50C(v31, (uint64_t)&aBlock);
    id v29 = (id)v52;
    unint64_t v24 = v57;
    id v28 = v59;
    goto LABEL_6;
  }
  __break(1u);
}

void sub_1C2228968(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void (*a5)(unint64_t, void), uint64_t a6)
{
  uint64_t v10 = sub_1C254CB40();
  unint64_t v68 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C254CAD0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C222969C(0, &qword_1EA2DEAE8, (uint64_t (*)(uint64_t))sub_1C2228228, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (void *)((char *)v52 - v18);
  sub_1C2228228();
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  if (!a4)
  {
    uint64_t v53 = a5;
    uint64_t v54 = (uint64_t)v52 - v23;
    unint64_t v27 = v68;
    uint64_t v59 = v24;
    uint64_t v60 = v22;
    uint64_t v58 = v16;
    if (!a2)
    {
      v53(MEMORY[0x1E4FBC860], 0);
      return;
    }
    uint64_t v65 = v25;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1C2550620();
      if (v28) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v28 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v28)
      {
LABEL_8:
        uint64_t v57 = v13;
        v52[1] = a6;
        if (v28 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v29 = 0;
        uint64_t v55 = (void (**)(char *, char *, uint64_t))(v27 + 32);
        uint64_t v56 = (void (**)(char *, char *, uint64_t))(v14 + 32);
        uint64_t v31 = v59;
        uint64_t v30 = v60;
        uint64_t v62 = (void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v59 + 56);
        unint64_t v63 = a2 & 0xC000000000000001;
        uint64_t v61 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v59 + 48);
        unint64_t v32 = MEMORY[0x1E4FBC860];
        uint64_t v64 = v28;
        do
        {
          unint64_t v68 = v32;
          if (v63) {
            id v33 = (id)MEMORY[0x1C87588E0](v29, a2);
          }
          else {
            id v33 = *(id *)(a2 + 8 * v29 + 32);
          }
          id v34 = v33;
          self;
          uint64_t v35 = swift_dynamicCastObjCClass();
          if (v35)
          {
            id v36 = (void *)v35;
            int v66 = (char *)v19 + *(int *)(v30 + 48);
            uint64_t v67 = (char *)v19 + *(int *)(v30 + 64);
            id v34 = v34;
            id v37 = objc_msgSend(v36, sel_displayNameForGroupByConcept);
            uint64_t v38 = v12;
            uint64_t v39 = v10;
            unint64_t v40 = a2;
            uint64_t v41 = sub_1C254F470();
            uint64_t v43 = v42;

            uint64_t *v19 = v41;
            v19[1] = v43;
            a2 = v40;
            uint64_t v10 = v39;
            uint64_t v12 = v38;
            id v44 = v58;
            id v45 = objc_msgSend(v36, sel_sortDate);
            id v46 = objc_msgSend(v45, sel_date);

            sub_1C254CA80();
            id v47 = v44;
            uint64_t v31 = v59;
            uint64_t v30 = v60;
            (*v56)(v66, v47, v57);
            id v48 = objc_msgSend(v36, sel_UUID);
            sub_1C254CB20();

            (*v55)(v67, v12, v10);
            (*v62)(v19, 0, 1, v30);
          }
          else
          {
            (*v62)(v19, 1, 1, v30);
          }

          if ((*v61)(v19, 1, v30) == 1)
          {
            sub_1C2229700((uint64_t)v19, &qword_1EA2DEAE8, (uint64_t (*)(uint64_t))sub_1C2228228);
            unint64_t v32 = v68;
          }
          else
          {
            uint64_t v49 = v54;
            sub_1C2229770((uint64_t)v19, v54);
            sub_1C2229770(v49, v65);
            unint64_t v32 = v68;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v32 = sub_1C226CD14(0, *(void *)(v32 + 16) + 1, 1, v32);
            }
            unint64_t v51 = *(void *)(v32 + 16);
            unint64_t v50 = *(void *)(v32 + 24);
            if (v51 >= v50 >> 1) {
              unint64_t v32 = sub_1C226CD14(v50 > 1, v51 + 1, 1, v32);
            }
            *(void *)(v32 + 16) = v51 + 1;
            sub_1C2229770(v65, v32+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v51);
          }
          ++v29;
        }
        while (v64 != v29);
        swift_bridgeObjectRelease();
        v53(v32, 0);
LABEL_28:
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
    v53(MEMORY[0x1E4FBC860], 0);
    goto LABEL_28;
  }
  id v26 = a4;
  a5((unint64_t)a4, 1);
}

uint64_t ClinicalPublisherFactory.deinit()
{
  return v0;
}

uint64_t ClinicalPublisherFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for ClinicalPublisherFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClinicalPublisherFactory);
}

uint64_t dispatch thunk of ClinicalPublisherFactory.__allocating_init(with:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ClinicalPublisherFactory.makeLastRecordCreationDatePublisher(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ClinicalPublisherFactory.makeLastLabNamesPublisher(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

void sub_1C2229084(uint64_t a1, uint64_t a2)
{
  sub_1C2228460(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C222908C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C22290C4(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

unint64_t sub_1C2229104(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E4F143B8];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    unint64_t v6 = sub_1C2229268((unint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    id v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    unint64_t v6 = sub_1C2229268((unint64_t)v7, v4, v2);
    swift_release();
    MEMORY[0x1C875A0B0](v7, -1, -1);
  }
  return v6;
}

unint64_t sub_1C2229268(unint64_t result, uint64_t a2, uint64_t a3)
{
  size_t v5 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = *(void *)(a3 + 56) & v10;
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  do
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
    }
    else
    {
      int64_t v16 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_23;
      }
      if (v16 >= v12)
      {
LABEL_21:
        swift_retain();
        return sub_1C22BDBDC(v5, a2, v6, a3);
      }
      unint64_t v17 = *(void *)(v8 + 8 * v16);
      ++v7;
      if (!v17)
      {
        int64_t v7 = v16 + 1;
        if (v16 + 1 >= v12) {
          goto LABEL_21;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v7);
        if (!v17)
        {
          int64_t v7 = v16 + 2;
          if (v16 + 2 >= v12) {
            goto LABEL_21;
          }
          unint64_t v17 = *(void *)(v8 + 8 * v7);
          if (!v17)
          {
            int64_t v18 = v16 + 3;
            if (v18 >= v12) {
              goto LABEL_21;
            }
            unint64_t v17 = *(void *)(v8 + 8 * v18);
            if (!v17)
            {
              while (1)
              {
                int64_t v7 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_24;
                }
                if (v7 >= v12) {
                  goto LABEL_21;
                }
                unint64_t v17 = *(void *)(v8 + 8 * v7);
                ++v18;
                if (v17) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v7 = v18;
          }
        }
      }
LABEL_20:
      unint64_t v11 = (v17 - 1) & v17;
      unint64_t v14 = __clz(__rbit64(v17)) + (v7 << 6);
    }
    *(void *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
  }
  while (!__OFADD__(v6++, 1));
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1C22293D0(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v23 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  int64_t v24 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v26 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v7 >= v24) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v7);
    if (!v19) {
      break;
    }
LABEL_19:
    unint64_t v5 = (v19 - 1) & v19;
    unint64_t v9 = __clz(__rbit64(v19)) + (v7 << 6);
LABEL_5:
    unint64_t v27 = &v22;
    uint64_t v10 = (void *)(*(void *)(v26 + 48) + 72 * v9);
    unint64_t v11 = (void *)v10[1];
    unint64_t v12 = v10[6];
    unint64_t v13 = (void *)v10[8];
    MEMORY[0x1F4188790](result);
    v21[2] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    id v14 = v13;
    id v15 = v11;
    uint64_t v16 = v28;
    unint64_t v17 = sub_1C2268390((void (*)(uint64_t *__return_ptr, id *))sub_1C2229948, (uint64_t)v21, v12);
    uint64_t v28 = v16;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    uint64_t result = sub_1C22725C0(v17);
  }
  int64_t v20 = v7 + 1;
  if (v7 + 1 >= v24) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19) {
    goto LABEL_18;
  }
  int64_t v20 = v7 + 2;
  if (v7 + 2 >= v24) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19) {
    goto LABEL_18;
  }
  int64_t v20 = v7 + 3;
  if (v7 + 3 >= v24) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19) {
    goto LABEL_18;
  }
  int64_t v20 = v7 + 4;
  if (v7 + 4 >= v24)
  {
LABEL_24:
    swift_release();
    return v29;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
LABEL_18:
    int64_t v7 = v20;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v7 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v7 >= v24) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v7);
    ++v20;
    if (v19) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_1C222966C(id *a1@<X0>, void *a2@<X8>)
{
  sub_1C2537AC4(a1, *(void **)(v2 + 16), a2);
}

void sub_1C222968C(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  sub_1C2228968(a1, a2, a3, a4, *(void (**)(unint64_t, void))(v4 + 16), *(void *)(v4 + 24));
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

void sub_1C222969C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2229700(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C222969C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2229770(uint64_t a1, uint64_t a2)
{
  sub_1C2228228();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C2229818(uint64_t a1, uint64_t a2)
{
  sub_1C222782C(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C2229820(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  return sub_1C2227BB8(a1, a2, a3, a4, *(void (**)(char *))(v4 + 16));
}

void sub_1C2229828(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_1C222969C(255, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_1C2206F9C();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C22298D0(uint64_t a1)
{
  sub_1C2229828(0, (unint64_t *)&unk_1EA2DEAF0, MEMORY[0x1E4FBC448]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C2229948(id *a1@<X0>, void *a2@<X8>)
{
}

id IngestionStateChangeListener.__allocating_init(currentValue:handler:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  id v10 = objc_allocWithZone(v5);
  uint64_t v16 = a1;
  char v17 = a2 & 1;
  sub_1C2229B08();
  swift_allocObject();
  unint64_t v11 = (char *)v10;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_changePublisher] = sub_1C254EAA0();
  unint64_t v12 = &v11[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_handler];
  *(void *)unint64_t v12 = a3;
  *((void *)v12 + 1) = a4;
  swift_retain();

  v15.receiver = v11;
  v15.super_class = v5;
  id v13 = objc_msgSendSuper2(&v15, sel_init);
  swift_release();
  return v13;
}

id IngestionStateChangeListener.init(currentValue:handler:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = a1;
  char v13 = a2 & 1;
  sub_1C2229B08();
  swift_allocObject();
  uint64_t v7 = v4;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_changePublisher] = sub_1C254EAA0();
  unint64_t v8 = &v7[OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_handler];
  *(void *)unint64_t v8 = a3;
  *((void *)v8 + 1) = a4;
  swift_retain();

  v11.receiver = v7;
  v11.super_class = (Class)type metadata accessor for IngestionStateChangeListener();
  id v9 = objc_msgSendSuper2(&v11, sel_init);
  swift_release();
  return v9;
}

void sub_1C2229B08()
{
  if (!qword_1EBB6F1F0)
  {
    sub_1C2229B70();
    unint64_t v0 = sub_1C254EA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F1F0);
    }
  }
}

void sub_1C2229B70()
{
  if (!qword_1EBB6F208)
  {
    type metadata accessor for HKClinicalIngestionState(255);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F208);
    }
  }
}

uint64_t type metadata accessor for IngestionStateChangeListener()
{
  return self;
}

uint64_t sub_1C2229BEC(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1C254E560();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E510();
  id v11 = a1;
  uint64_t v12 = sub_1C254E550();
  int v13 = sub_1C254FA00();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    int v28 = v13;
    uint64_t v29 = v7;
    uint64_t v31 = v3;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v32 = v27;
    uint64_t v33 = ObjectType;
    *(_DWORD *)uint64_t v14 = 136446722;
    swift_getMetatypeMetadata();
    uint64_t v15 = sub_1C254F4F0();
    uint64_t v30 = a2;
    uint64_t v33 = sub_1C21AD354(v15, v16, &v32);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    id v17 = v11;
    id v18 = objc_msgSend(v17, sel_description);
    uint64_t v19 = sub_1C254F470();
    unint64_t v21 = v20;

    uint64_t v33 = sub_1C21AD354(v19, v21, &v32);
    a2 = v30;
    sub_1C2550120();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2082;
    unint64_t v22 = 0x80000001C2576440;
    uint64_t v23 = 0xD000000000000013;
    switch(a2)
    {
      case 0:
        unint64_t v22 = 0xED00006574617453;
        goto LABEL_6;
      case 1:
        unint64_t v22 = 0xED0000676E697473;
        uint64_t v23 = 0x65676E4920746F4ELL;
        break;
      case 2:
        break;
      case 3:
        unint64_t v22 = 0xE900000000000067;
        uint64_t v23 = 0x6E69747365676E49;
        break;
      default:
        unint64_t v22 = 0xEE002E6574617453;
LABEL_6:
        uint64_t v23 = 0x206E776F6E6B6E55;
        break;
    }
    uint64_t v33 = sub_1C21AD354(v23, v22, &v32);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v12, (os_log_type_t)v28, "[%{public}s]: ingestionStateDidUpdate (store: %s, to: %{public}s)", (uint8_t *)v14, 0x20u);
    uint64_t v24 = v27;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v24, -1, -1);
    MEMORY[0x1C875A0B0](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v29);
    uint64_t v3 = v31;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v25 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC15HealthRecordsUI28IngestionStateChangeListener_handler);
  swift_retain();
  v25(a2);
  swift_release();
  uint64_t v33 = a2;
  char v34 = 0;
  return sub_1C254EA70();
}

id IngestionStateChangeListener.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void IngestionStateChangeListener.init()()
{
}

id IngestionStateChangeListener.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IngestionStateChangeListener();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for IngestionStateChangeListener(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IngestionStateChangeListener);
}

uint64_t dispatch thunk of IngestionStateChangeListener.__allocating_init(currentValue:handler:)(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 120))(a1, a2 & 1);
}

uint64_t dispatch thunk of IngestionStateChangeListener.ingestionStateDidUpdate(clinicalIngestionStore:state:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t sub_1C222A1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a1)
  {
    long long v6 = *(_OWORD *)(a1 + 48);
    v12[2] = *(_OWORD *)(a1 + 32);
    uint64_t v12[3] = v6;
    uint64_t v13 = *(void *)(a1 + 64);
    long long v7 = *(_OWORD *)(a1 + 16);
    v12[0] = *(_OWORD *)a1;
    v12[1] = v7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1C2365048((uint64_t)v12, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v11;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = MEMORY[0x1E4FBB718];
    sub_1C222D460(a1, (uint64_t)&qword_1EA2DEB60, (uint64_t)sub_1C222D3E4, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C222CE94);
    sub_1C24AAF2C(a2, a3, (uint64_t)v12);
    swift_bridgeObjectRelease();
    return sub_1C222D460((uint64_t)v12, (uint64_t)&qword_1EA2DEB60, (uint64_t)sub_1C222D3E4, v10, (uint64_t (*)(void))sub_1C222CE94);
  }
}

void sub_1C222A324(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C222D5DC(a1, (uint64_t)v16, &qword_1EA2DEB58, (uint64_t)&type metadata for AccountIcon);
  char v5 = v16[0];
  uint64_t v6 = v16[1];
  uint64_t v7 = v16[2];
  uint64_t v8 = v16[3];
  char v10 = v17;
  uint64_t v9 = v18;
  sub_1C222D5DC(a1, (uint64_t)v19, &qword_1EA2DEB58, (uint64_t)&type metadata for AccountIcon);
  if (v20)
  {
    LOBYTE(v21) = v5 & 1;
    *((void *)&v21 + 1) = v6;
    uint64_t v22 = v7;
    uint64_t v23 = v8;
    char v24 = v10 & 1;
    id v25 = v9;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1C23655F0(&v21, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1C254CB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a2, v12);
  }
  else
  {
    sub_1C24AB04C(a2, (uint64_t)&v21);
    uint64_t v13 = sub_1C254CB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
  }
}

uint64_t sub_1C222A4A8(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1)
  {
    long long v4 = *(_OWORD *)(a1 + 48);
    void v9[2] = *(_OWORD *)(a1 + 32);
    v9[3] = v4;
    uint64_t v10 = *(void *)(a1 + 64);
    long long v5 = *(_OWORD *)(a1 + 16);
    v9[0] = *(_OWORD *)a1;
    v9[1] = v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C2366120((uint64_t)v9, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v8;
    swift_bridgeObjectRelease();
    return sub_1C222D57C(a2, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  }
  else
  {
    sub_1C222D460(a1, (uint64_t)&qword_1EBB6E950, (uint64_t)&qword_1EBB6E948, (uint64_t)&type metadata for BrowseIcon, (uint64_t (*)(void))sub_1C222D4C0);
    sub_1C24AB304(a2, (uint64_t)v9);
    sub_1C222D57C(a2, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    return sub_1C222D460((uint64_t)v9, (uint64_t)&qword_1EBB6E950, (uint64_t)&qword_1EBB6E948, (uint64_t)&type metadata for BrowseIcon, (uint64_t (*)(void))sub_1C222D4C0);
  }
}

unint64_t sub_1C222A5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  char v28 = a5 & 1;
  sub_1C222D5DC(a1, (uint64_t)v31, (unint64_t *)&qword_1EBB6E820, (uint64_t)&type metadata for BrowseIcon);
  uint64_t v8 = v31[0];
  uint64_t v9 = v31[1];
  uint64_t v10 = v31[2];
  uint64_t v11 = v31[3];
  uint64_t v12 = v31[4];
  uint64_t v13 = v31[5];
  sub_1C222D5DC(a1, (uint64_t)v32, (unint64_t *)&qword_1EBB6E820, (uint64_t)&type metadata for BrowseIcon);
  if (v33 >> 1 == 0xFFFFFFFF)
  {
    unint64_t result = sub_1C24576B4(a2, a3, a4, v28);
    if (v15)
    {
      unint64_t v16 = result;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v18 = *v6;
      v34[0] = *v6;
      *uint64_t v6 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C24AFE38();
        uint64_t v18 = v34[0];
      }
      uint64_t v19 = *(void *)(v18 + 56) + 48 * v16;
      uint64_t v20 = *(void **)v19;
      uint64_t v21 = *(void *)(v19 + 8);
      uint64_t v22 = *(void *)(v19 + 16);
      uint64_t v23 = *(void *)(v19 + 24);
      uint64_t v24 = *(void *)(v19 + 32);
      sub_1C24ACDE4(v16, v18);
      *uint64_t v6 = v18;
      swift_bridgeObjectRelease();
      return sub_1C2224A9C(v20, v21, v22, v23, v24);
    }
  }
  else
  {
    v34[0] = v8;
    v34[1] = v9;
    v34[2] = v10;
    v34[3] = v11;
    _OWORD v34[4] = v12;
    v34[5] = v13;
    char v25 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v6;
    *uint64_t v6 = 0x8000000000000000;
    sub_1C23662B0((uint64_t)v34, a2, a3, a4, v28, v25);
    *uint64_t v6 = v30;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C222A780(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1)
  {
    long long v4 = *(_OWORD *)(a1 + 48);
    v11[2] = *(_OWORD *)(a1 + 32);
    v11[3] = v4;
    uint64_t v12 = *(void *)(a1 + 64);
    long long v5 = *(_OWORD *)(a1 + 16);
    v11[0] = *(_OWORD *)a1;
    v11[1] = v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C23665D4((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v10;
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1C254CB40();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a2, v7);
  }
  else
  {
    sub_1C222D460(a1, (uint64_t)&unk_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
    sub_1C24AB51C(a2, (uint64_t)v11);
    uint64_t v9 = sub_1C254CB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a2, v9);
    return sub_1C222D460((uint64_t)v11, (uint64_t)&unk_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
  }
}

unint64_t sub_1C222A8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  char v23 = a5 & 1;
  sub_1C222D5DC(a1, (uint64_t)v26, &qword_1EA2DEB58, (uint64_t)&type metadata for AccountIcon);
  char v9 = v26[0];
  uint64_t v8 = v26[1];
  uint64_t v10 = v26[2];
  uint64_t v11 = v26[3];
  char v13 = v27;
  uint64_t v12 = v28;
  sub_1C222D5DC(a1, (uint64_t)v29, &qword_1EA2DEB58, (uint64_t)&type metadata for AccountIcon);
  if (v30)
  {
    LOBYTE(v31) = v9 & 1;
    *((void *)&v31 + 1) = v8;
    uint64_t v32 = v10;
    uint64_t v33 = v11;
    char v34 = v13 & 1;
    uint64_t v35 = v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = *v6;
    *uint64_t v6 = 0x8000000000000000;
    sub_1C236678C(&v31, a2, a3, a4, v23, isUniquelyReferenced_nonNull_native);
    *uint64_t v6 = v25;
  }
  else
  {
    unint64_t result = sub_1C24576B4(a2, a3, a4, v23);
    if ((v16 & 1) == 0) {
      return result;
    }
    unint64_t v17 = result;
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v6;
    *(void *)&long long v31 = *v6;
    *uint64_t v6 = 0x8000000000000000;
    if ((v18 & 1) == 0)
    {
      sub_1C24B04DC();
      uint64_t v19 = v31;
    }
    uint64_t v20 = *(void **)(*(void *)(v19 + 56) + 48 * v17 + 40);
    sub_1C24ACDE4(v17, v19);
    *uint64_t v6 = v19;
  }
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C222AA78())()
{
  return j__swift_endAccess;
}

id sub_1C222AAFC()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for AccountSelectionViewController();
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  id result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v2 = result;
  type metadata accessor for TextWithIconCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  long long v4 = (void *)sub_1C254F430();
  objc_msgSend(v2, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v4);

  id result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  long long v5 = result;
  type metadata accessor for HeaderWithRightAlignedButton();
  uint64_t v6 = swift_getObjCClassFromMetadata();
  uint64_t v7 = (void *)sub_1C254F430();
  objc_msgSend(v5, sel_registerClass_forHeaderFooterViewReuseIdentifier_, v6, v7);

  id result = objc_msgSend(v0, sel_tableView);
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v8 = result;
  if (qword_1EA2DD4B8 != -1) {
    swift_once();
  }
  objc_msgSend(v8, sel_setSectionHeaderTopPadding_, *(double *)&qword_1EA2DEB10);

  return (id)sub_1C222ACE8();
}

uint64_t sub_1C222ACE8()
{
  uint64_t v1 = sub_1C254F1C0();
  uint64_t v111 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C254F200();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_1C254CB40();
  uint64_t v110 = *(void *)(v125 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v125);
  uint64_t v93 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  id v124 = (char *)&v92 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v92 - v13;
  uint64_t v127 = v15;
  MEMORY[0x1F4188790](v12);
  unint64_t v17 = (char *)&v92 - v16;
  uint64_t v113 = v0;
  char v18 = (unint64_t *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_accountIcons];
  uint64_t result = swift_beginAccess();
  if (*v18) {
    return result;
  }
  uint64_t v123 = v17;
  uint64_t v108 = v14;
  *char v18 = sub_1C220472C(MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();
  dispatch_group_t v109 = dispatch_group_create();
  unint64_t v20 = *(void *)&v113[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_allAccounts];
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C2550620();
    uint64_t v21 = result;
    uint64_t v22 = v111;
    if (result) {
      goto LABEL_4;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    uint64_t v127 = sub_1C254FC70();
    uint64_t v85 = swift_allocObject();
    uint64_t v86 = v113;
    *(void *)(v85 + 16) = v113;
    uint64_t v141 = sub_1C222CE44;
    uint64_t v142 = v85;
    uint64_t v137 = MEMORY[0x1E4F143A8];
    uint64_t v138 = 1107296256;
    uint64_t v139 = sub_1C224E544;
    id v140 = &block_descriptor_18;
    uint64_t v87 = _Block_copy(&v137);
    id v88 = v86;
    sub_1C254F1E0();
    v136[0] = MEMORY[0x1E4FBC860];
    sub_1C222CE4C((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    char v89 = v7;
    sub_1C222CE94(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C21FFDEC();
    sub_1C2550200();
    long long v90 = (void *)v127;
    dispatch_group_t v91 = v109;
    sub_1C254FBE0();
    _Block_release(v87);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v89, v4);
    return swift_release();
  }
  uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v22 = v111;
  if (!v21) {
    goto LABEL_18;
  }
LABEL_4:
  uint64_t v107 = v21 - 1;
  if (v21 >= 1)
  {
    uint64_t v23 = *(void *)&v113[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_iconProvider];
    uint64_t v24 = *(void *)&v113[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize];
    uint64_t v116 = *(void *)&v113[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize + 8];
    uint64_t v117 = v24;
    uint64_t v115 = *(void *)&v113[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize + 16];
    int v114 = v113[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize + 24];
    uint64_t v95 = v23;
    unint64_t v99 = v20 & 0xC000000000000001;
    uint64_t v100 = v23 + 32;
    swift_beginAccess();
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v118 = v110 + 16;
    uint64_t v97 = v110 + 32;
    uint64_t v98 = v127 + 7;
    uint64_t v96 = (void (**)(uint64_t, uint64_t))(v110 + 8);
    uint64_t v94 = &v139;
    uint64_t v105 = v4;
    uint64_t v106 = v1;
    uint64_t v103 = v5;
    uint64_t v104 = v3;
    unint64_t v101 = v20;
    uint64_t v102 = v7;
    while (1)
    {
      uint64_t v127 = v26;
      uint64_t v42 = v124;
      uint64_t v43 = v108;
      uint64_t v122 = v25;
      id v44 = v99 ? (id)MEMORY[0x1C87588E0]() : *(id *)(v20 + 8 * v25 + 32);
      id v45 = v44;
      id v46 = v113;
      dispatch_group_t v47 = v109;
      uint64_t v48 = v110;
      dispatch_group_enter(v109);
      id v121 = v45;
      id v49 = objc_msgSend(v45, sel_identifier);
      unint64_t v50 = v123;
      sub_1C254CB20();

      unint64_t v51 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
      uint64_t v52 = v125;
      v51(v43, v50, v125);
      uint64_t v112 = v51;
      v51(v42, v43, v52);
      unint64_t v53 = (*(unsigned __int8 *)(v48 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
      unint64_t v54 = (v98 + v53) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = v46;
      (*(void (**)(unint64_t, char *, uint64_t))(v48 + 32))(v55 + v53, v43, v52);
      uint64_t v120 = v55;
      *(void *)(v55 + v54) = v47;
      uint64_t v56 = sub_1C222CC48(v100, (uint64_t)&v137);
      uint64_t v57 = MEMORY[0x1F4188790](v56);
      *(&v92 - 2) = (uint64_t)v50;
      MEMORY[0x1F4188790](v57);
      *(&v92 - 4) = (uint64_t)sub_1C222CD68;
      *(&v92 - 3) = v58;
      *(&v92 - 2) = v59;
      sub_1C222D4C0(0, &qword_1EA2DEB50, (unint64_t *)&qword_1EBB6E958);
      id v60 = v46;
      uint64_t v61 = v47;
      id v126 = v60;
      dispatch_group_t v119 = v61;
      uint64_t v26 = v127;
      sub_1C254FC90();
      uint64_t v62 = sub_1C222D57C((uint64_t)&v137, (uint64_t (*)(void))sub_1C222CCAC);
      if (!v136[0]) {
        break;
      }
      v128[0] = v117;
      v128[1] = v116;
      v128[2] = v115;
      char v129 = v114;
      uint64_t v63 = MEMORY[0x1F4188790](v62);
      *(&v92 - 2) = (uint64_t)v128;
      MEMORY[0x1F4188790](v63);
      *(&v92 - 4) = (uint64_t)sub_1C222CEF8;
      *(&v92 - 3) = v64;
      *(&v92 - 2) = v65;
      sub_1C222D65C(0, &qword_1EA2DEB58, (uint64_t)&type metadata for AccountIcon, MEMORY[0x1E4FBB718]);
      sub_1C254FC90();
      char v67 = v130;
      uint64_t v66 = v131;
      uint64_t v68 = v132;
      uint64_t v69 = v133;
      char v71 = v134;
      uint64_t v70 = v135;
      sub_1C222D460((uint64_t)v136, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
      uint64_t v27 = v96;
      if (!v70) {
        goto LABEL_7;
      }
      uint64_t v127 = v26;
      LOBYTE(v143) = v67 & 1;
      *((void *)&v143 + 1) = v66;
      uint64_t v144 = v68;
      uint64_t v145 = v69;
      char v146 = v71 & 1;
      uint64_t v147 = v70;
      id v72 = v70;
      uint64_t v74 = sub_1C222AA78();
      if (*v73)
      {
        uint64_t v75 = v73;
        uint64_t v76 = (uint64_t)v93;
        int v78 = v124;
        uint64_t v77 = v125;
        v112(v93, v124, v125);
        id v79 = v72;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v136[0] = *v75;
        void *v75 = 0x8000000000000000;
        sub_1C23655F0(&v143, v76, isUniquelyReferenced_nonNull_native);
        void *v75 = v136[0];
        swift_bridgeObjectRelease();
        (*v27)(v76, v77);
        ((void (*)(uint64_t *, void))v74)(&v137, 0);
        uint64_t v81 = v111;
        uint64_t v82 = v105;
        uint64_t v5 = v103;
      }
      else
      {
        ((void (*)(uint64_t *, void))v74)(&v137, 0);
        uint64_t v81 = v111;
        uint64_t v82 = v105;
        uint64_t v5 = v103;
        int v78 = v124;
        uint64_t v77 = v125;
      }
      dispatch_group_t v83 = v119;
      dispatch_group_leave(v119);

      swift_release();
      uint64_t v84 = *v27;
      (*v27)((uint64_t)v78, v77);

      v84((uint64_t)v123, v77);
      uint64_t v1 = v106;
      uint64_t v41 = v122;
      uint64_t v3 = v104;
      unint64_t v20 = v101;
      uint64_t v7 = v102;
      uint64_t v22 = v81;
      uint64_t v4 = v82;
      uint64_t v26 = v127;
      if (v107 == v122) {
        goto LABEL_18;
      }
LABEL_8:
      uint64_t v25 = v41 + 1;
    }
    sub_1C222D460((uint64_t)v136, (uint64_t)&qword_1EA2DEB50, (uint64_t)&qword_1EBB6E958, (uint64_t)&type metadata for AccountIcon, (uint64_t (*)(void))sub_1C222D4C0);
    uint64_t v27 = v96;
LABEL_7:
    uint64_t v28 = v95;
    id v29 = objc_msgSend(*(id *)(v95 + 24), sel_healthRecordsStore);
    id v30 = objc_msgSend(v29, sel_healthStore);

    id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67710]), sel_initWithHealthStore_, v30);
    uint64_t v32 = v123;
    uint64_t v33 = (void *)sub_1C254CB00();
    uint64_t v34 = swift_allocObject();
    uint64_t v35 = v120;
    *(void *)(v34 + 16) = sub_1C222CBA8;
    *(void *)(v34 + 24) = v35;
    uint64_t v36 = v117;
    *(void *)(v34 + 32) = v28;
    *(void *)(v34 + 40) = v36;
    uint64_t v37 = v115;
    *(void *)(v34 + 48) = v116;
    *(void *)(v34 + 56) = v37;
    *(unsigned char *)(v34 + 64) = v114;
    uint64_t v141 = sub_1C222CDD0;
    uint64_t v142 = v34;
    uint64_t v137 = MEMORY[0x1E4F143A8];
    uint64_t v138 = 1107296256;
    uint64_t v139 = sub_1C23447F8;
    id v140 = &block_descriptor_14;
    uint64_t v38 = _Block_copy(&v137);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v31, sel_fetchAccountWithIdentifier_completion_, v33, v38);
    _Block_release(v38);

    swift_release();
    uint64_t v39 = *v27;
    uint64_t v40 = v125;
    (*v27)((uint64_t)v124, v125);

    v39((uint64_t)v32, v40);
    uint64_t v1 = v106;
    uint64_t v41 = v122;
    uint64_t v22 = v111;
    uint64_t v3 = v104;
    uint64_t v4 = v105;
    uint64_t v7 = v102;
    uint64_t v5 = v103;
    unint64_t v20 = v101;
    if (v107 == v122) {
      goto LABEL_18;
    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_1C222B8FC(uint64_t *a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t v24 = a3;
  dispatch_group_t v25 = a4;
  uint64_t v5 = sub_1C254CB40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v12 = a1[3];
  uint64_t v13 = (void *)a1[5];
  uint64_t v23 = a1[4];
  char v14 = *((unsigned char *)a1 + 48);
  uint64_t v15 = sub_1C222AA78();
  uint64_t v16 = v15;
  if (*v17)
  {
    uint64_t v22 = v15;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v24, v5);
    if (v14)
    {
      uint64_t v26 = v9;
      sub_1C2206F9C();
      swift_willThrowTypedImpl();
      uint64_t v18 = 0;
      uint64_t v10 = 0;
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      uint64_t v19 = 0;
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v18 = v9 & 1;
      uint64_t v19 = v23 & 1;
      id v20 = v13;
    }
    v28[0] = v18;
    v28[1] = v10;
    void v28[2] = v11;
    v28[3] = v12;
    v28[4] = v19;
    v28[5] = v13;
    sub_1C222A324((uint64_t)v28, (uint64_t)v8);
    uint64_t v16 = v22;
  }
  ((void (*)(unsigned char *, void))v16)(v27, 0);
  dispatch_group_leave(v25);
}

char *sub_1C222BB38(void *a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = (void *)sub_1C254CB40();
  uint64_t v8 = (void *)*(v7 - 1);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)sub_1C254F430();
  uint64_t v12 = sub_1C254CD30();
  id v13 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v11, v12);

  type metadata accessor for TextWithIconCell();
  char v14 = (char *)swift_dynamicCastClassUnconditional();
  uint64_t v15 = *(void *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_allAccounts);
  unint64_t v16 = sub_1C254CD60();
  uint64_t v73 = a2;
  if ((v15 & 0xC000000000000001) == 0)
  {
    if ((v16 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v16 < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v17 = *(id *)(v15 + 8 * v16 + 32);
      goto LABEL_5;
    }
    __break(1u);
LABEL_53:
    uint64_t v8 = sub_1C226BFC0(0, v8[2] + 1, 1, v8);
    goto LABEL_39;
  }
  id v17 = (id)MEMORY[0x1C87588E0](v16, v15);
LABEL_5:
  uint64_t v3 = v17;
  uint64_t v18 = (uint64_t *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_accountIcons);
  swift_beginAccess();
  uint64_t v19 = *v18;
  id v72 = v13;
  if (v19)
  {
    swift_bridgeObjectRetain();
    id v20 = objc_msgSend(v3, sel_identifier);
    sub_1C254CB20();

    if (*(void *)(v19 + 16))
    {
      unint64_t v21 = sub_1C24573D8((uint64_t)v10);
      if (v22)
      {
        uint64_t v23 = (unsigned __int8 *)(*(void *)(v19 + 56) + 48 * v21);
        uint64_t v68 = v7;
        uint64_t v69 = v14;
        int v24 = *v23;
        v67[1] = *((void *)v23 + 1);
        uint64_t v25 = *((void *)v23 + 3);
        uint64_t v71 = *((void *)v23 + 2);
        int v70 = v23[32];
        uint64_t v26 = (void (*)(char *, void *))v8[1];
        id v27 = *((id *)v23 + 5);
        v26(v10, v68);
        char v14 = v69;
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    ((void (*)(char *, id))v8[1])(v10, v7);
    swift_bridgeObjectRelease();
  }
  id v28 = objc_msgSend(v3, sel_title);
  uint64_t v29 = sub_1C254F470();
  uint64_t v31 = v30;

  uint64_t v32 = *(void *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize + 16);
  char v33 = *(unsigned char *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize + 24);
  long long v74 = *(_OWORD *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize);
  uint64_t v75 = v32;
  char v76 = v33;
  sub_1C24039AC(v29, v31, (uint64_t)&v74, (uint64_t)v77);
  swift_bridgeObjectRelease();
  int v24 = v77[0];
  uint64_t v71 = v78;
  uint64_t v25 = v79;
  int v70 = v80;
  id v27 = v81;
LABEL_11:
  uint64_t v34 = (uint64_t *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_selectedAccounts);
  swift_beginAccess();
  uint64_t v35 = *v34;
  swift_bridgeObjectRetain();
  LOBYTE(v4) = sub_1C24F2054(v3, v35);
  swift_bridgeObjectRelease();
  id v36 = sub_1C23C3528();
  id v37 = objc_msgSend(v3, sel_title);
  if (!v37)
  {
    sub_1C254F470();
    id v37 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v36, sel_setText_, v37);

  id v38 = sub_1C23C348C();
  objc_msgSend(v38, sel_setImage_, v27);

  id v39 = sub_1C23C348C();
  if (v24) {
    uint64_t v40 = 0;
  }
  else {
    uint64_t v40 = v25;
  }
  if (v24) {
    char v41 = 2;
  }
  else {
    char v41 = 0;
  }
  if ((v24 | v70 ^ 1)) {
    uint64_t v42 = v40;
  }
  else {
    uint64_t v42 = 0x4008000000000000;
  }
  if ((v24 | v70 ^ 1)) {
    char v43 = v41;
  }
  else {
    char v43 = 0;
  }
  *(void *)&long long v74 = v42;
  BYTE8(v74) = v43;
  UIImageView.applyStyle(_:)((uint64_t)&v74);

  sub_1C2224240((id)v42, v43);
  uint64_t v7 = v72;
  if (v4) {
    id v44 = sub_1C2224870();
  }
  else {
    id v44 = sub_1C2224894();
  }
  id v45 = v44;
  id v72 = v27;
  objc_msgSend(v14, sel_setAccessoryView_, v44);

  sub_1C222D65C(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v8 = (void *)swift_allocObject();
  *((_OWORD *)v8 + 1) = xmmword_1C255D0E0;
  void v8[4] = 0x6F6974704F464450;
  v8[5] = 0xEA0000000000736ELL;
  v8[6] = 0x43746E756F636341;
  v8[7] = 0xEB000000006C6C65;
  *(void *)&long long v74 = sub_1C254CD60();
  sub_1C2201F84();
  v8[8] = sub_1C25501D0();
  v8[9] = v46;
  dispatch_group_t v47 = (void *)sub_1C254F700();
  id v48 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v48)
  {
    uint64_t v49 = sub_1C254F470();
    uint64_t v51 = v50;
  }
  else
  {
    uint64_t v49 = 0;
    uint64_t v51 = 0;
  }
  uint64_t v52 = (uint64_t *)&v14[OBJC_IVAR____TtC15HealthRecordsUI16TextWithIconCell_baseAccessibilityIdentifier];
  *uint64_t v52 = v49;
  v52[1] = v51;
  swift_bridgeObjectRelease();
  sub_1C23C360C();
  id v53 = objc_msgSend(v14, sel_accessoryView);
  if (!v53)
  {
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  a2 = v53;
  if (v4) {
    uint64_t v12 = 0x64657463656C6553;
  }
  else {
    uint64_t v12 = 0x7463656C65736544;
  }
  if (v4) {
    id v13 = (id)0xE800000000000000;
  }
  else {
    id v13 = (id)0xEA00000000006465;
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_53;
  }
LABEL_39:
  unint64_t v55 = v8[2];
  unint64_t v54 = v8[3];
  if (v55 >= v54 >> 1) {
    uint64_t v8 = sub_1C226BFC0((void *)(v54 > 1), v55 + 1, 1, v8);
  }
  _OWORD v8[2] = v55 + 1;
  uint64_t v56 = &v8[2 * v55];
  v56[4] = v12;
  v56[5] = v13;
  swift_bridgeObjectRelease();
  uint64_t v57 = (void *)sub_1C254F700();
  id v58 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(a2, sel_setAccessibilityIdentifier_, v58);
  swift_bridgeObjectRelease();

LABEL_43:
  uint64_t v59 = v7;
  id v60 = objc_msgSend(v3, sel_title);
  uint64_t v61 = sub_1C254F470();
  uint64_t v63 = v62;

  *(void *)&long long v74 = v61;
  *((void *)&v74 + 1) = v63;
  sub_1C254F5A0();
  if (v4)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
  }
  else if (qword_1EBB6EF40 != -1)
  {
    swift_once();
  }
  id v64 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v65 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setAccessibilityLabel_, v65);

  return v14;
}

void sub_1C222C534(void *a1)
{
  uint64_t v3 = (void *)sub_1C254CD30();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v3, 1);

  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_allAccounts);
  unint64_t v5 = sub_1C254CD60();
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v6 = (id)MEMORY[0x1C87588E0](v5, v4);
    goto LABEL_5;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v5 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v6 = *(id *)(v4 + 8 * v5 + 32);
LABEL_5:
  uint64_t v7 = v6;
  uint64_t v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_selectedAccounts);
  swift_beginAccess();
  uint64_t v9 = *v8;
  swift_bridgeObjectRetain();
  char v10 = sub_1C24F2054(v7, v9);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (v10)
  {
    uint64_t v11 = (void *)sub_1C22BB9D4(v7);
  }
  else
  {
    sub_1C2367F50(&v12, v7);
    uint64_t v11 = v12;
  }
  swift_endAccess();

  sub_1C222C898();
}

char *sub_1C222C780()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_selectedAccounts;
  swift_beginAccess();
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C25502A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)(*(void *)v1 + 16);
  }
  unint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_allAccounts);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v2 == v5) {
      goto LABEL_6;
    }
LABEL_8:
    unint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2492640(v6);
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v2 != *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v4 = MEMORY[0x1E4FBC870];
LABEL_9:
  *(void *)uint64_t v1 = v4;
  swift_bridgeObjectRelease();
  return sub_1C222C898();
}

char *sub_1C222C898()
{
  uint64_t result = (char *)objc_msgSend(v0, sel_tableView);
  if (result)
  {
    uint64_t v2 = result;
    objc_msgSend(result, sel_reloadData);

    uint64_t result = (char *)MEMORY[0x1C875A200](&v0[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_delegate]);
    if (result)
    {
      unint64_t v3 = result;
      uint64_t v4 = &v0[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_selectedAccounts];
      swift_beginAccess();
      *(void *)(*(void *)&v3[OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource] + 112) = *(void *)v4;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C233B114();
      swift_bridgeObjectRelease();
      return (char *)swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1C222C9D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountSelectionViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AccountSelectionViewController()
{
  return self;
}

void sub_1C222CAB0()
{
  qword_1EA2DEB10 = 0x4028000000000000;
}

uint64_t sub_1C222CAC0()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

void sub_1C222CBA8(uint64_t *a1)
{
  uint64_t v3 = *(void *)(sub_1C254CB40() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  unint64_t v6 = *(NSObject **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1C222B8FC(a1, v5, v1 + v4, v6);
}

uint64_t sub_1C222CC48(uint64_t a1, uint64_t a2)
{
  sub_1C222CCAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C222CCAC()
{
  if (!qword_1EA2DEB48)
  {
    sub_1C254CB40();
    sub_1C222D518(255, (unint64_t *)&qword_1EBB6E958);
    sub_1C222CE4C((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
    unint64_t v0 = type metadata accessor for UnboundedCache();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DEB48);
    }
  }
}

double sub_1C222CD68@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2405430(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C222CD70()
{
  return sub_1C23BA7C4(*(void (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C222CD90()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 65, 7);
}

void sub_1C222CDD0(void *a1, void *a2)
{
  sub_1C2403F60(a1, a2, *(void (**)(double *))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_1C222CE0C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C222CE44()
{
  sub_1C220BA74(*(void **)(v0 + 16));
}

uint64_t sub_1C222CE4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C222CE94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

double sub_1C222CEF8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2405418(a1, *(void *)(v2 + 16), a2);
}

void sub_1C222CF00()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_iconProvider;
  if (qword_1EBB6D898 != -1) {
    swift_once();
  }
  *(void *)&v0[v1] = qword_1EBB6EB60;
  uint64_t v2 = &v0[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_preferredSize];
  *((void *)v2 + 1) = 0;
  *((void *)v2 + 2) = 0;
  *(void *)uint64_t v2 = 0;
  v2[24] = 1;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_accountIcons] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_retain();

  sub_1C25505F0();
  __break(1u);
}

uint64_t sub_1C222CFF0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)sub_1C254F430();
  id v5 = objc_msgSend(a1, sel_dequeueReusableHeaderFooterViewWithIdentifier_, v4);

  if (!v5) {
    return 0;
  }
  type metadata accessor for HeaderWithRightAlignedButton();
  uint64_t v6 = swift_dynamicCastClass();
  if (v6)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C254C730();
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();

    uint64_t v11 = (uint64_t *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerText);
    swift_beginAccess();
    uint64_t *v11 = v8;
    v11[1] = v10;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void **)(v6 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_headerLabel);
    if (v11[1])
    {
      swift_bridgeObjectRetain();
      id v13 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v13 = 0;
    }
    objc_msgSend(v12, sel_setText_, v13, 0xE000000000000000);

    char v14 = (void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_selectedAccounts);
    swift_beginAccess();
    if ((*v14 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1C25502A0();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30AccountSelectionViewController_allAccounts) >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1C2550620();
      swift_bridgeObjectRelease();
    }
    id v15 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C254C730();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();

    uint64_t v19 = (uint64_t *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_buttonText);
    swift_beginAccess();
    uint64_t *v19 = v16;
    v19[1] = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C254FFC0();
    swift_bridgeObjectRelease();
    id v20 = (_OWORD *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_baseAccessibilityIdentifier);
    swift_beginAccess();
    *id v20 = xmmword_1C255D0F0;
    swift_bridgeObjectRelease();
    sub_1C242C9BC();
    uint64_t v21 = v6 + OBJC_IVAR____TtC15HealthRecordsUI28HeaderWithRightAlignedButton_delegate;
    swift_beginAccess();
    *(void *)(v21 + 8) = &off_1F1D90A00;
    swift_unknownObjectWeakAssign();
  }
  else
  {
  }
  return v6;
}

void sub_1C222D3E4()
{
  if (!qword_1EBB6E940)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6EEB8);
    sub_1C2207750();
    unint64_t v0 = type metadata accessor for UnboundedCache();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6E940);
    }
  }
}

uint64_t sub_1C222D460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_1C222D4C0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C222D518(255, a3);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C222D518(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_1C2207680();
    unint64_t v3 = type metadata accessor for UnboundedCache();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1C222D57C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C222D5DC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C222D65C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1C222D65C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C222D6B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2232978(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_1C222D6C0()
{
  return sub_1C254D330();
}

unint64_t sub_1C222D728()
{
  return 0xD000000000000012;
}

id sub_1C222D78C()
{
  uint64_t v1 = qword_1EA2DEB90;
  uint64_t v2 = *(void **)&v0[qword_1EA2DEB90];
  if (v2)
  {
    id v3 = *(id *)&v0[qword_1EA2DEB90];
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = sub_1C222F534();
    id v6 = objc_msgSend(v5, sel_heightAnchor);

    id v7 = objc_msgSend(v4, sel_contentView);
    objc_msgSend(v7, sel_bounds);

    uint64_t v8 = (objc_class *)sub_1C254DB80();
    sub_1C254DB60();
    id v9 = objc_allocWithZone(v8);
    uint64_t v10 = (void *)sub_1C254DB70();
    objc_msgSend(v10, sel_itemSize);
    double v12 = v11;

    id v13 = objc_msgSend(v6, sel_constraintEqualToConstant_, v12);
    char v14 = *(void **)&v4[v1];
    *(void *)&v4[v1] = v13;
    id v3 = v13;

    uint64_t v2 = 0;
  }
  id v15 = v2;
  return v3;
}

char *sub_1C222D8E0(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = qword_1EA2DEB88;
  id v11 = objc_allocWithZone((Class)sub_1C254D830());
  double v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_init);
  *(void *)&v12[qword_1EA2DEB90] = 0;

  v19.receiver = v12;
  v19.super_class = ObjectType;
  id v13 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  id v14 = sub_1C222F534();
  objc_msgSend(v14, sel_setDataSource_, *(void *)&v13[qword_1EA2DEB88]);

  id v15 = v13;
  id v16 = sub_1C222F534();

  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D38]), sel_initWithTarget_action_, v15, sel_didTapPreview_);
  objc_msgSend(v16, sel_addGestureRecognizer_, v17);

  return v15;
}

char *sub_1C222DA34(double a1, double a2, double a3, double a4)
{
  return sub_1C222D8E0(a1, a2, a3, a4);
}

void sub_1C222DA58(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = qword_1EA2DEB88;
  id v6 = objc_allocWithZone((Class)sub_1C254D830());
  id v7 = a3;
  *(void *)&a1[v5] = objc_msgSend(v6, sel_init);
  *(void *)&a1[qword_1EA2DEB90] = 0;

  sub_1C25505F0();
  __break(1u);
}

void sub_1C222DB04(void *a1)
{
  v13.receiver = a1;
  v13.super_class = (Class)swift_getObjectType();
  id v1 = v13.receiver;
  objc_msgSendSuper2(&v13, sel_layoutSubviews);
  id v2 = sub_1C222F534();
  id v3 = objc_msgSend(v1, sel_contentView, v13.receiver, v13.super_class);
  objc_msgSend(v3, sel_bounds);

  uint64_t v4 = (objc_class *)sub_1C254DB80();
  sub_1C254DB60();
  id v5 = objc_allocWithZone(v4);
  id v6 = (void *)sub_1C254DB70();
  objc_msgSend(v2, sel_setCollectionViewLayout_animated_, v6, 0);

  id v7 = sub_1C222D78C();
  id v8 = objc_msgSend(v1, sel_contentView);
  objc_msgSend(v8, sel_bounds);

  sub_1C254DB60();
  id v9 = objc_allocWithZone(v4);
  uint64_t v10 = (void *)sub_1C254DB70();
  objc_msgSend(v10, sel_itemSize);
  double v12 = v11;

  objc_msgSend(v7, sel_setConstant_, v12);
  objc_msgSend(v1, sel_invalidateIntrinsicContentSize);
}

id sub_1C222DCE8()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_bounds);

  id v2 = (objc_class *)sub_1C254DB80();
  sub_1C254DB60();
  id v3 = objc_allocWithZone(v2);
  sub_1C254DB70();
  id v4 = objc_allocWithZone((Class)sub_1C254DC40());
  id v5 = (void *)sub_1C254DC30();
  objc_msgSend(v5, sel_setShowsHorizontalScrollIndicator_, 0);
  id v6 = self;
  id v7 = v5;
  id v8 = objc_msgSend(v6, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v8);

  return v7;
}

void sub_1C222DE1C()
{
  sub_1C222DE94();
  sub_1C254D820();
  id v0 = sub_1C222F534();
  objc_msgSend(v0, sel_reloadData);
}

void sub_1C222DE94()
{
  id v1 = v0;
  type metadata accessor for PDFAttachmentItem(0);
  type metadata accessor for AttachmentContext();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v2 = sub_1C222F4D4();
  id v3 = sub_1C2482FD8();

  id v4 = (void *)sub_1C254F430();
  objc_msgSend(v3, sel_setText_, v4);

  id v5 = sub_1C222F4D4();
  id v6 = sub_1C24830D0();

  id v7 = (void *)sub_1C254F430();
  objc_msgSend(v6, sel_setText_, v7);

  sub_1C254F5A0();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  id v8 = (id)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityLabel_, v8);
}

void sub_1C222E008()
{
  id v1 = v0;
  type metadata accessor for AttachmentContext();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v2 = sub_1C222F4D4();
  id v3 = sub_1C2482FD8();

  id v4 = (void *)sub_1C254F430();
  objc_msgSend(v3, sel_setText_, v4);

  id v5 = sub_1C222F4D4();
  id v6 = sub_1C24830D0();

  id v7 = (void *)sub_1C254F430();
  objc_msgSend(v6, sel_setText_, v7);

  sub_1C254F5A0();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  id v8 = (id)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityLabel_, v8);
}

void sub_1C222E170()
{
  id v1 = v0;
  uint64_t v2 = *MEMORY[0x1E4FBC8C8] & *v0;
  uint64_t v3 = type metadata accessor for AttachmentContext();
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v2 + 96);
  id v8 = *(void (**)(uint64_t, uint64_t))(v7 + 16);
  uint64_t v9 = *(void *)(v2 + 80);
  v8(v9, v7);
  uint64_t v10 = &v6[*(int *)(v4 + 28)];
  uint64_t v11 = *((void *)v10 + 1);
  uint64_t v21 = *(void *)v10;
  swift_bridgeObjectRetain();
  sub_1C2233008((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
  v8(v9, v7);
  swift_bridgeObjectRetain();
  sub_1C2233008((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
  id v12 = sub_1C222F4D4();
  id v13 = sub_1C2482FD8();

  uint64_t v14 = v21;
  id v15 = (void *)sub_1C254F430();
  objc_msgSend(v13, sel_setText_, v15);

  id v16 = sub_1C222F4D4();
  id v17 = sub_1C24830D0();

  uint64_t v18 = (void *)sub_1C254F430();
  objc_msgSend(v17, sel_setText_, v18);

  uint64_t v22 = v14;
  uint64_t v23 = v11;
  sub_1C254F5A0();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  objc_super v19 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityLabel_, v19);
}

void sub_1C222E3B0()
{
  sub_1C222E584();
  id v1 = self;
  sub_1C21ACA3C();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CD80;
  id v3 = sub_1C222F534();
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  id v5 = objc_msgSend(v0, sel_contentView);
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(void *)(v2 + 32) = v7;
  id v8 = sub_1C222F534();
  id v9 = objc_msgSend(v8, sel_trailingAnchor);

  id v10 = objc_msgSend(v0, sel_contentView);
  id v11 = objc_msgSend(v10, sel_trailingAnchor);

  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v11);
  *(void *)(v2 + 40) = v12;
  *(void *)(v2 + 48) = sub_1C222D78C();
  sub_1C254F730();
  sub_1C21F34D4();
  id v13 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v13);
}

void sub_1C222E584()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = objc_msgSend(v1, sel_layoutMarginsGuide);

  id v27 = self;
  sub_1C21ACA3C();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C255DB90;
  id v4 = sub_1C222F4D4();
  id v5 = objc_msgSend(v4, sel_topAnchor);

  id v6 = objc_msgSend(v0, sel_contentView);
  id v7 = objc_msgSend(v6, sel_topAnchor);

  id v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v7, 16.0);
  *(void *)(v3 + 32) = v8;
  id v9 = sub_1C222F4D4();
  id v10 = objc_msgSend(v9, sel_leadingAnchor);

  id v11 = objc_msgSend(v2, sel_leadingAnchor);
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(void *)(v3 + 40) = v12;
  id v13 = sub_1C222F4D4();
  id v14 = objc_msgSend(v13, sel_trailingAnchor);

  id v15 = objc_msgSend(v2, sel_trailingAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(void *)(v3 + 48) = v16;
  id v17 = sub_1C222F534();
  id v18 = objc_msgSend(v17, sel_topAnchor);

  id v19 = sub_1C222F4D4();
  id v20 = objc_msgSend(v19, sel_bottomAnchor);

  id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, 16.0);
  *(void *)(v3 + 56) = v21;
  id v22 = objc_msgSend(v0, sel_contentView);
  id v23 = objc_msgSend(v22, sel_bottomAnchor);

  id v24 = sub_1C222F534();
  id v25 = objc_msgSend(v24, sel_bottomAnchor);

  id v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, 30.0);
  *(void *)(v3 + 64) = v26;
  sub_1C254F730();
  sub_1C21F34D4();
  id v28 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, v28);
}

void sub_1C222E8C8()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = objc_msgSend(v1, sel_layoutMarginsGuide);

  id v27 = self;
  sub_1C21ACA3C();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C255DB90;
  id v4 = sub_1C222F4D4();
  id v5 = objc_msgSend(v4, sel_topAnchor);

  id v6 = objc_msgSend(v0, sel_contentView);
  id v7 = objc_msgSend(v6, sel_topAnchor);

  id v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v7, 16.0);
  *(void *)(v3 + 32) = v8;
  id v9 = sub_1C222F4D4();
  id v10 = objc_msgSend(v9, sel_leadingAnchor);

  id v11 = objc_msgSend(v2, sel_leadingAnchor);
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(void *)(v3 + 40) = v12;
  id v13 = sub_1C222F4D4();
  id v14 = objc_msgSend(v13, sel_trailingAnchor);

  id v15 = objc_msgSend(v2, sel_trailingAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(void *)(v3 + 48) = v16;
  id v17 = sub_1C222F534();
  id v18 = objc_msgSend(v17, sel_topAnchor);

  id v19 = sub_1C222F4D4();
  id v20 = objc_msgSend(v19, sel_bottomAnchor);

  id v21 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20, 16.0);
  *(void *)(v3 + 56) = v21;
  id v22 = objc_msgSend(v0, sel_contentView);
  id v23 = objc_msgSend(v22, sel_bottomAnchor);

  id v24 = sub_1C222F534();
  id v25 = objc_msgSend(v24, sel_bottomAnchor);

  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
  id v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25);

  *(void *)(v3 + 64) = v26;
  sub_1C254F730();
  sub_1C21F34D4();
  id v28 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v27, sel_activateConstraints_, v28);
}

void sub_1C222EC3C()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = objc_msgSend(v1, sel_layoutMarginsGuide);

  id v28 = self;
  sub_1C21ACA3C();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C255DB90;
  id v4 = sub_1C222F4D4();
  id v5 = objc_msgSend(v4, sel_topAnchor);

  id v6 = objc_msgSend(v0, sel_contentView);
  id v7 = objc_msgSend(v6, sel_topAnchor);

  id v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v7, 16.0);
  *(void *)(v3 + 32) = v8;
  id v9 = sub_1C222F4D4();
  id v10 = objc_msgSend(v9, sel_leadingAnchor);

  id v11 = objc_msgSend(v2, sel_leadingAnchor);
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(void *)(v3 + 40) = v12;
  id v13 = sub_1C222F4D4();
  id v14 = objc_msgSend(v13, sel_trailingAnchor);

  id v15 = objc_msgSend(v2, sel_trailingAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(void *)(v3 + 48) = v16;
  id v17 = sub_1C222F534();
  id v18 = objc_msgSend(v17, sel_topAnchor);

  id v19 = sub_1C222F4D4();
  id v20 = objc_msgSend(v19, sel_bottomAnchor);

  id v21 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
  id v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20);

  *(void *)(v3 + 56) = v22;
  id v23 = objc_msgSend(v0, sel_contentView);
  id v24 = objc_msgSend(v23, sel_bottomAnchor);

  id v25 = sub_1C222F534();
  id v26 = objc_msgSend(v25, sel_bottomAnchor);

  (*(void (**)(void))((*v21 & *v0) + 0xC0))();
  id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26);

  *(void *)(v3 + 64) = v27;
  sub_1C254F730();
  sub_1C21F34D4();
  id v29 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_activateConstraints_, v29);
}

void sub_1C222EFD8()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = objc_msgSend(v1, sel_layoutMarginsGuide);

  id v28 = self;
  sub_1C21ACA3C();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C255DB90;
  id v4 = sub_1C222F4D4();
  id v5 = objc_msgSend(v4, sel_topAnchor);

  id v6 = objc_msgSend(v0, sel_contentView);
  id v7 = objc_msgSend(v6, sel_topAnchor);

  id v8 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v7, 16.0);
  *(void *)(v3 + 32) = v8;
  id v9 = sub_1C222F4D4();
  id v10 = objc_msgSend(v9, sel_leadingAnchor);

  id v11 = objc_msgSend(v2, sel_leadingAnchor);
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

  *(void *)(v3 + 40) = v12;
  id v13 = sub_1C222F4D4();
  id v14 = objc_msgSend(v13, sel_trailingAnchor);

  id v15 = objc_msgSend(v2, sel_trailingAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(void *)(v3 + 48) = v16;
  id v17 = sub_1C222F5C4();
  id v18 = objc_msgSend(v17, sel_topAnchor);

  id v19 = sub_1C222F4D4();
  id v20 = objc_msgSend(v19, sel_bottomAnchor);

  id v21 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
  id v22 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v20);

  *(void *)(v3 + 56) = v22;
  id v23 = objc_msgSend(v0, sel_contentView);
  id v24 = objc_msgSend(v23, sel_bottomAnchor);

  id v25 = sub_1C222F5C4();
  id v26 = objc_msgSend(v25, sel_bottomAnchor);

  (*(void (**)(void))((*v21 & *v0) + 0xC0))();
  id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_constant_, v26);

  *(void *)(v3 + 64) = v27;
  sub_1C254F730();
  sub_1C21F34D4();
  id v29 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_activateConstraints_, v29);
}

void sub_1C222F374(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1C22329DC();
}

void sub_1C222F3D4()
{
  id v1 = *(void **)(v0 + qword_1EA2DEB90);
}

void sub_1C222F418(uint64_t a1)
{
  id v2 = *(void **)(a1 + qword_1EA2DEB90);
}

uint64_t type metadata accessor for PDFAttachmentCell(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DEBA0);
}

uint64_t sub_1C222F484()
{
  return swift_initClassMetadata2();
}

id sub_1C222F4D4()
{
  uint64_t v1 = qword_1EA2DEC48;
  id v2 = *(void **)(v0 + qword_1EA2DEC48);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2DEC48);
  }
  else
  {
    id v4 = sub_1C2230E30();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C222F534()
{
  uint64_t v1 = qword_1EA2DEC50;
  id v2 = *(void **)((char *)v0 + qword_1EA2DEC50);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + qword_1EA2DEC50);
  }
  else
  {
    id v4 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
    id v5 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C222F5C4()
{
  uint64_t v1 = qword_1EA2DEC50;
  id v2 = *(void **)((char *)v0 + qword_1EA2DEC50);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + qword_1EA2DEC50);
  }
  else
  {
    id v4 = (void *)(*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
    id v5 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

double sub_1C222F668()
{
  return 16.0;
}

double sub_1C222F670()
{
  return 30.0;
}

uint64_t sub_1C222F678@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1EA2DEC58;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C222F6CC(uint64_t a1)
{
  uint64_t v3 = v1 + qword_1EA2DEC58;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C2230ECC();
  return sub_1C2232F48(a1, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t (*sub_1C222F758(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C222F7B8;
}

uint64_t sub_1C222F7B8(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2230ECC();
  }
  return result;
}

uint64_t sub_1C222F7EC()
{
  return type metadata accessor for PDFAttachmentCell(0);
}

uint64_t sub_1C222F7F4()
{
  return sub_1C2230678(&OBJC_IVAR____TtC15HealthRecordsUI19ImageAttachmentItem_context);
}

uint64_t sub_1C222F800()
{
  return type metadata accessor for ImageAttachmentItem(0);
}

uint64_t type metadata accessor for ImageAttachmentItem(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DEBB0);
}

uint64_t sub_1C222F828()
{
  return sub_1C22301C8();
}

uint64_t sub_1C222F838@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2232978(*v1 + OBJC_IVAR____TtC15HealthRecordsUI19ImageAttachmentItem_context, a1);
}

uint64_t sub_1C222F850(uint64_t a1, uint64_t a2)
{
  return sub_1C223081C(a1, a2, (void (*)(void))type metadata accessor for ImageAttachmentCell, &qword_1EA2DEDA8, (void (*)(uint64_t))type metadata accessor for ImageAttachmentCell);
}

uint64_t sub_1C222F884()
{
  return sub_1C22305D0();
}

id sub_1C222F8B0()
{
  uint64_t v1 = qword_1EA2DEBC8;
  id v2 = *(void **)&v0[qword_1EA2DEBC8];
  if (v2)
  {
    id v3 = *(id *)&v0[qword_1EA2DEBC8];
  }
  else
  {
    id v4 = sub_1C222F534();
    id v5 = objc_msgSend(v4, sel_widthAnchor);

    id v6 = objc_msgSend(v0, sel_contentView);
    objc_msgSend(v6, sel_bounds);
    double v8 = v7;

    id v9 = objc_msgSend(v5, sel_constraintEqualToConstant_, v8 * 0.68);
    id v10 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v9;
    id v3 = v9;

    id v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1C222F994()
{
  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v16, sel_layoutSubviews);
  id v1 = sub_1C222F8B0();
  id v2 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v2, sel_bounds);
  double v4 = v3;

  objc_msgSend(v1, sel_setConstant_, v4 * 0.68);
  if ((v0[qword_1EA2DEBD0 + 8] & 1) == 0)
  {
    double v5 = *(double *)&v0[qword_1EA2DEBD0];
    id v6 = sub_1C222F534();
    id v7 = objc_msgSend(v6, sel_heightAnchor);

    id v8 = sub_1C222F534();
    id v9 = objc_msgSend(v8, sel_widthAnchor);

    id v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_multiplier_, v9, v5);
    uint64_t v11 = qword_1EA2DEBC0;
    id v12 = *(void **)&v0[qword_1EA2DEBC0];
    *(void *)&v0[qword_1EA2DEBC0] = v10;
    id v13 = v10;
    if (v12) {
      objc_msgSend(v12, sel_setActive_, 0);
    }
    id v14 = *(void **)&v0[v11];
    if (v14) {
      objc_msgSend(v14, sel_setActive_, 1);
    }
  }
  return objc_msgSend(v0, sel_invalidateIntrinsicContentSize);
}

void sub_1C222FB2C(void *a1)
{
  id v1 = a1;
  sub_1C222F994();
}

id sub_1C222FB74()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)sub_1C254D6F0()), sel_init);
  objc_msgSend(v0, sel_setContentMode_, 1);
  return v0;
}

void sub_1C222FBC0(uint64_t a1)
{
  sub_1C222E008();
  id v3 = sub_1C222F534();
  double v4 = *(void **)(a1 + 16);
  objc_msgSend(v3, sel_setImage_, v4);

  objc_msgSend(v4, sel_size);
  if (v5 <= 0.0)
  {
    id v16 = sub_1C222F534();
    id v17 = objc_msgSend(v16, sel_heightAnchor);

    id v18 = objc_msgSend(v17, sel_constraintEqualToConstant_, 0.0);
    uint64_t v14 = qword_1EA2DEBC0;
    id v15 = *(void **)(v1 + qword_1EA2DEBC0);
    *(void *)(v1 + qword_1EA2DEBC0) = v18;
    id v20 = v18;
    if (!v15) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v7 = v1 + qword_1EA2DEBD0;
  *(double *)uint64_t v7 = v6 / v5;
  *(unsigned char *)(v7 + 8) = 0;
  id v8 = sub_1C222F534();
  id v9 = objc_msgSend(v8, sel_heightAnchor);

  id v10 = sub_1C222F534();
  id v11 = objc_msgSend(v10, sel_widthAnchor);

  double v12 = *(double *)v7;
  if (*(unsigned char *)(v7 + 8)) {
    double v12 = 0.0;
  }
  id v13 = objc_msgSend(v9, sel_constraintEqualToAnchor_multiplier_, v11, v12);

  uint64_t v14 = qword_1EA2DEBC0;
  id v15 = *(void **)(v1 + qword_1EA2DEBC0);
  *(void *)(v1 + qword_1EA2DEBC0) = v13;
  id v20 = v13;
  if (v15) {
LABEL_7:
  }
    objc_msgSend(v15, sel_setActive_, 0);
LABEL_8:
  id v19 = *(void **)(v1 + v14);
  if (v19) {
    objc_msgSend(v19, sel_setActive_, 1);
  }
}

void sub_1C222FDA0()
{
  sub_1C222E584();
  uint64_t v1 = self;
  sub_1C21ACA3C();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CD70;
  id v3 = sub_1C222F534();
  id v4 = objc_msgSend(v3, sel_centerXAnchor);

  id v5 = objc_msgSend(v0, sel_contentView);
  id v6 = objc_msgSend(v5, sel_centerXAnchor);

  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(void *)(v2 + 32) = v7;
  *(void *)(v2 + 40) = sub_1C222F8B0();
  sub_1C254F730();
  sub_1C21F34D4();
  id v8 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v8);
}

id sub_1C222FEF0(char *a1, double a2, double a3, double a4, double a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&a1[qword_1EA2DEBC0] = 0;
  *(void *)&a1[qword_1EA2DEBC8] = 0;
  id v11 = &a1[qword_1EA2DEBD0];
  *(void *)id v11 = 0;
  v11[8] = 1;
  v13.receiver = a1;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_1C222FF90(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&a1[qword_1EA2DEBC0] = 0;
  *(void *)&a1[qword_1EA2DEBC8] = 0;
  id v6 = &a1[qword_1EA2DEBD0];
  *(void *)id v6 = 0;
  v6[8] = 1;
  v8.receiver = a1;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_initWithCoder_, a3);
}

void sub_1C2230008()
{
  uint64_t v1 = *(void **)(v0 + qword_1EA2DEBC8);
}

void sub_1C2230048(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + qword_1EA2DEBC8);
}

uint64_t type metadata accessor for ImageAttachmentCell(uint64_t a1)
{
  return sub_1C220A934(a1, qword_1EA2DEBE0);
}

uint64_t sub_1C22300B4()
{
  return swift_initClassMetadata2();
}

void sub_1C2230104(uint64_t *a1)
{
}

uint64_t sub_1C223010C()
{
  return type metadata accessor for ImageAttachmentCell(0);
}

uint64_t sub_1C2230114()
{
  swift_bridgeObjectRelease();
  sub_1C2233008(v0 + OBJC_IVAR____TtC15HealthRecordsUI18TextAttachmentItem_context, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
  return swift_deallocClassInstance();
}

uint64_t sub_1C2230194()
{
  return type metadata accessor for TextAttachmentItem(0);
}

uint64_t type metadata accessor for TextAttachmentItem(uint64_t a1)
{
  return sub_1C220A934(a1, qword_1EA2DEBF8);
}

uint64_t sub_1C22301BC()
{
  return sub_1C22301C8();
}

uint64_t sub_1C22301C8()
{
  uint64_t result = type metadata accessor for AttachmentContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C223025C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2232978(*v1 + OBJC_IVAR____TtC15HealthRecordsUI18TextAttachmentItem_context, a1);
}

uint64_t sub_1C2230274(uint64_t a1, uint64_t a2)
{
  return sub_1C223081C(a1, a2, (void (*)(void))type metadata accessor for TextAttachmentCell, &qword_1EA2DEDB0, (void (*)(uint64_t))type metadata accessor for TextAttachmentCell);
}

uint64_t sub_1C22302A8()
{
  return sub_1C22305D0();
}

id sub_1C22302D4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  id v1 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v0, sel_setFont_, v1);

  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  return v0;
}

void sub_1C223037C()
{
  sub_1C222E8C8();
  id v0 = self;
  sub_1C21ACA3C();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C255CD70;
  id v2 = sub_1C222F534();
  id v3 = objc_msgSend(v2, sel_leadingAnchor);

  id v4 = sub_1C222F4D4();
  id v5 = objc_msgSend(v4, sel_leadingAnchor);

  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v5);
  *(void *)(v1 + 32) = v6;
  id v7 = sub_1C222F534();
  id v8 = objc_msgSend(v7, sel_trailingAnchor);

  id v9 = sub_1C222F4D4();
  id v10 = objc_msgSend(v9, sel_trailingAnchor);

  id v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v10);
  *(void *)(v1 + 40) = v11;
  sub_1C254F730();
  sub_1C21F34D4();
  id v12 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_activateConstraints_, v12);
}

uint64_t type metadata accessor for TextAttachmentCell(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DEC10);
}

void sub_1C2230550()
{
  sub_1C222E008();
  id v0 = sub_1C222F534();
  id v1 = (id)sub_1C254F430();
  objc_msgSend(v0, sel_setText_, v1);
}

uint64_t sub_1C22305C8()
{
  return type metadata accessor for TextAttachmentCell(0);
}

uint64_t sub_1C22305D0()
{
  uint64_t v1 = sub_1C2550AA0();
  sub_1C254F5A0();
  sub_1C254CAF0();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C223066C()
{
  return sub_1C2230678(&OBJC_IVAR____TtC15HealthRecordsUI23ThumbnailAttachmentItem_context);
}

uint64_t sub_1C2230678(void *a1)
{
  sub_1C2233008(v1 + *a1, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
  return swift_deallocClassInstance();
}

uint64_t sub_1C2230700()
{
  return type metadata accessor for ThumbnailAttachmentItem(0);
}

uint64_t type metadata accessor for ThumbnailAttachmentItem(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DEC20);
}

uint64_t sub_1C2230728()
{
  uint64_t result = type metadata accessor for AttachmentContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C22307D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2232978(*v1 + OBJC_IVAR____TtC15HealthRecordsUI23ThumbnailAttachmentItem_context, a1);
}

uint64_t sub_1C22307E8(uint64_t a1, uint64_t a2)
{
  return sub_1C223081C(a1, a2, (void (*)(void))type metadata accessor for ThumbnailAttachmentCell, &qword_1EA2DEDB8, (void (*)(uint64_t))type metadata accessor for ThumbnailAttachmentCell);
}

uint64_t sub_1C223081C(uint64_t a1, uint64_t a2, void (*a3)(void), unint64_t *a4, void (*a5)(uint64_t))
{
  return sub_1C254D330();
}

uint64_t sub_1C2230888()
{
  return sub_1C22305D0();
}

double sub_1C22308B4()
{
  return 10.0;
}

id sub_1C22308BC()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4FB1838]);
  return objc_msgSend(v0, sel_init);
}

void sub_1C22308F4(uint64_t a1)
{
  sub_1C222E008();
  id v2 = sub_1C222F534();
  objc_msgSend(v2, sel_setImage_, *(void *)(a1 + 16));

  if (*(unsigned char *)(a1 + 24) == 1)
  {
    id v3 = sub_1C222F534();
    if (qword_1EA2DD4C0 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_1EA2DEB70;
    char v5 = 0;
    UIImageView.applyStyle(_:)((uint64_t)&v4);
  }
}

void sub_1C22309AC()
{
  sub_1C222EC3C();
  unint64_t v1 = self;
  sub_1C21ACA3C();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255DBA0;
  id v3 = sub_1C222F534();
  id v4 = objc_msgSend(v3, sel_leadingAnchor);

  id v5 = sub_1C222F4D4();
  id v6 = objc_msgSend(v5, sel_leadingAnchor);

  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v6);
  *(void *)(v2 + 32) = v7;
  id v8 = objc_msgSend(v0, sel_contentView);
  id v9 = objc_msgSend(v8, sel_layoutMarginsGuide);

  id v10 = objc_msgSend(v9, sel_trailingAnchor);
  id v11 = sub_1C222F534();
  id v12 = objc_msgSend(v11, sel_trailingAnchor);

  id v13 = objc_msgSend(v10, sel_constraintGreaterThanOrEqualToAnchor_, v12);
  *(void *)(v2 + 40) = v13;
  id v14 = sub_1C222F534();
  id v15 = objc_msgSend(v14, sel_widthAnchor);

  if (qword_1EA2DD4C8 != -1) {
    swift_once();
  }
  id v16 = objc_msgSend(v15, sel_constraintEqualToConstant_, *(double *)&qword_1EA2DEB78);

  *(void *)(v2 + 48) = v16;
  id v17 = sub_1C222F534();
  id v18 = objc_msgSend(v17, sel_heightAnchor);

  if (qword_1EA2DD4D0 != -1) {
    swift_once();
  }
  id v19 = objc_msgSend(v18, sel_constraintEqualToConstant_, *(double *)&qword_1EA2DEB80);

  *(void *)(v2 + 56) = v19;
  sub_1C254F730();
  sub_1C21F34D4();
  id v20 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v20);
}

id sub_1C2230C84(void *a1, double a2, double a3, double a4, double a5)
{
  v10.receiver = a1;
  v10.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v10, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_1C2230CF8(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id sub_1C2230D40()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ThumbnailAttachmentCell(uint64_t a1)
{
  return sub_1C220A934(a1, qword_1EA2DEC30);
}

uint64_t sub_1C2230D98()
{
  return swift_initClassMetadata2();
}

void sub_1C2230DD0(uint64_t *a1)
{
}

uint64_t sub_1C2230DD8()
{
  return type metadata accessor for ThumbnailAttachmentCell(0);
}

uint64_t sub_1C2230DE0()
{
  return swift_initClassMetadata2();
}

id sub_1C2230E30()
{
  type metadata accessor for StackedTwoLabelView();
  id v0 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  unint64_t v1 = (void *)sub_1C254F700();
  id v2 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v0, sel_setAccessibilityIdentifier_, v2);
  return v0;
}

uint64_t sub_1C2230ECC()
{
  unint64_t v1 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v2 = *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x50);
  uint64_t v3 = sub_1C2550100();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  id v7 = &v15[-v6];
  uint64_t v8 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v5);
  objc_super v10 = &v15[-v9];
  uint64_t v11 = (uint64_t)v0 + qword_1EA2DEC58;
  swift_beginAccess();
  sub_1C2227014(v11, (uint64_t)v15);
  sub_1C2232EF4(0, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  int v12 = swift_dynamicCast();
  id v13 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v12)
  {
    v13(v7, 0, 1, v2);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v7, v2);
    (*(void (**)(unsigned char *))((*v1 & *v0) + 0xF0))(v10);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v2);
  }
  else
  {
    v13(v7, 1, 1, v2);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
  }
}

void *sub_1C2231144(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = (void *)MEMORY[0x1E4FBC8C8];
  *(void *)&v4[qword_1EA2DEC48] = 0;
  *(void *)&v4[qword_1EA2DEC50] = 0;
  objc_super v10 = &v4[qword_1EA2DEC58];
  *(_OWORD *)objc_super v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  v23.receiver = v4;
  v23.super_class = (Class)type metadata accessor for BaseAttachmentCell();
  id v11 = objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  id v12 = objc_msgSend(v11, sel_contentView);
  id v13 = sub_1C222F4D4();
  objc_msgSend(v12, sel_addSubview_, v13);

  id v14 = objc_msgSend(v11, sel_contentView);
  id v15 = sub_1C222F5C4();
  objc_msgSend(v14, sel_addSubview_, v15);

  id v16 = sub_1C222F5C4();
  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  objc_msgSend(v11, sel_setIsAccessibilityElement_, 1);
  uint64_t v17 = qword_1EBB6EF40;
  id v18 = v11;
  if (v17 != -1) {
    swift_once();
  }
  id v19 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v20 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setAccessibilityHint_, v20, 0xE000000000000000);

  UIAccessibilityIdentification.hrui_setAccessibilityIdentifier(_:)((Swift::OpaquePointer)&unk_1F1D8E458);
  id v21 = sub_1C222F5C4();
  UIAccessibilityIdentification.hrui_setAccessibilityIdentifier(_:)((Swift::OpaquePointer)&unk_1F1D8E488);

  (*(void (**)(void))((*v9 & *v18) + 0xE8))();
  return v18;
}

void *sub_1C2231444(double a1, double a2, double a3, double a4)
{
  return sub_1C2231144(a1, a2, a3, a4);
}

void sub_1C2231468(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1C2232DE4();
}

void sub_1C2231490()
{
}

id sub_1C22314EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseAttachmentCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2231574(uint64_t a1)
{
  return sub_1C2232F48(a1 + qword_1EA2DEC58, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t type metadata accessor for BaseAttachmentCell()
{
  return __swift_instantiateGenericMetadata();
}

void (*sub_1C2231600(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C222F758((uint64_t)v2);
  return sub_1C2231658;
}

void sub_1C2231658(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

id sub_1C22316A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttachmentContext();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21ACA3C();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C255CEB0;
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  uint64_t v9 = (uint64_t *)&v7[*(int *)(v5 + 32)];
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];
  id v12 = (objc_class *)type metadata accessor for QLItemSingleDataProvider();
  id v13 = (char *)objc_allocWithZone(v12);
  id v14 = (uint64_t *)&v13[OBJC_IVAR____TtC15HealthRecordsUI24QLItemSingleDataProvider_data];
  *id v14 = v10;
  v14[1] = v11;
  sub_1C2205E14(v10, v11);
  v25.receiver = v13;
  v25.super_class = v12;
  id v15 = objc_msgSendSuper2(&v25, sel_init);
  sub_1C254E2A0();
  id v16 = objc_allocWithZone(MEMORY[0x1E4F3A648]);
  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v18 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_initWithDataProvider_contentType_previewTitle_, v15, v17, v18);

  sub_1C2233008((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
  *(void *)(v8 + 32) = v19;
  v24[1] = v8;
  sub_1C254F730();
  id v20 = objc_allocWithZone(MEMORY[0x1E4F3A650]);
  sub_1C2232920();
  id v21 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v20, sel_initWithPreviewItems_, v21);

  return v22;
}

uint64_t sub_1C22318E0(uint64_t a1, void *a2)
{
  return sub_1C2232674(a2);
}

id sub_1C22319A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QLItemSingleDataProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for QLItemSingleDataProvider()
{
  return self;
}

uint64_t *sub_1C2231A14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    id v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C254CB40();
    id v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    id v13 = (int *)type metadata accessor for AttachmentContext();
    uint64_t v14 = v13[5];
    id v15 = &v9[v14];
    id v16 = &v10[v14];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)id v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    uint64_t v18 = v13[6];
    id v19 = (uint64_t *)&v9[v18];
    id v20 = (uint64_t *)&v10[v18];
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    swift_bridgeObjectRetain();
    sub_1C2205E14(v21, v22);
    uint64_t *v19 = v21;
    v19[1] = v22;
    uint64_t v23 = v13[7];
    id v24 = &v9[v23];
    objc_super v25 = &v10[v23];
    uint64_t v26 = *((void *)v25 + 1);
    *(void *)id v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    uint64_t v27 = v13[8];
    id v28 = &v9[v27];
    id v29 = &v10[v27];
    uint64_t v30 = sub_1C254E340();
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    v31(v28, v29, v30);
    uint64_t v32 = (char *)a2 + *(int *)(a3 + 24);
    *(void *)(swift_unknownObjectWeakCopyInit() + 8) = *((void *)v32 + 1);
  }
  return v7;
}

uint64_t sub_1C2231BD0(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for AttachmentContext();
  swift_bridgeObjectRelease();
  sub_1C2205E6C(*(void *)(v4 + *(int *)(v6 + 24)), *(void *)(v4 + *(int *)(v6 + 24) + 8));
  swift_bridgeObjectRelease();
  uint64_t v7 = v4 + *(int *)(v6 + 32);
  uint64_t v8 = sub_1C254E340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  return swift_unknownObjectWeakDestroy();
}

void *sub_1C2231CD8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C254CB40();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = (int *)type metadata accessor for AttachmentContext();
  uint64_t v12 = v11[5];
  id v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)id v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  uint64_t v16 = v11[6];
  uint64_t v17 = (uint64_t *)&v7[v16];
  uint64_t v18 = (uint64_t *)&v8[v16];
  uint64_t v19 = *v18;
  unint64_t v20 = v18[1];
  swift_bridgeObjectRetain();
  sub_1C2205E14(v19, v20);
  *uint64_t v17 = v19;
  v17[1] = v20;
  uint64_t v21 = v11[7];
  unint64_t v22 = &v7[v21];
  uint64_t v23 = &v8[v21];
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)unint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = v24;
  uint64_t v25 = v11[8];
  uint64_t v26 = &v7[v25];
  uint64_t v27 = &v8[v25];
  uint64_t v28 = sub_1C254E340();
  id v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
  swift_bridgeObjectRetain();
  v29(v26, v27, v28);
  uint64_t v30 = (char *)a2 + *(int *)(a3 + 24);
  *(void *)(swift_unknownObjectWeakCopyInit() + 8) = *((void *)v30 + 1);
  return a1;
}

void *sub_1C2231E48(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C254CB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for AttachmentContext();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  id v13 = &v8[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v10[6];
  uint64_t v15 = (uint64_t *)&v7[v14];
  uint64_t v16 = (uint64_t *)&v8[v14];
  uint64_t v17 = *v16;
  unint64_t v18 = v16[1];
  sub_1C2205E14(*v16, v18);
  uint64_t v19 = *v15;
  unint64_t v20 = v15[1];
  uint64_t *v15 = v17;
  v15[1] = v18;
  sub_1C2205E6C(v19, v20);
  uint64_t v21 = v10[7];
  unint64_t v22 = &v7[v21];
  uint64_t v23 = &v8[v21];
  *(void *)unint64_t v22 = *(void *)v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = v10[8];
  uint64_t v25 = &v7[v24];
  uint64_t v26 = &v8[v24];
  uint64_t v27 = sub_1C254E340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  uint64_t v28 = (char *)a2 + *(int *)(a3 + 24);
  *(void *)(swift_unknownObjectWeakCopyAssign() + 8) = *((void *)v28 + 1);
  return a1;
}

void *sub_1C2231FE4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C254CB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for AttachmentContext();
  *(_OWORD *)&v7[v10[5]] = *(_OWORD *)&v8[v10[5]];
  *(_OWORD *)&v7[v10[6]] = *(_OWORD *)&v8[v10[6]];
  *(_OWORD *)&v7[v10[7]] = *(_OWORD *)&v8[v10[7]];
  uint64_t v11 = v10[8];
  uint64_t v12 = &v7[v11];
  id v13 = &v8[v11];
  uint64_t v14 = sub_1C254E340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = (char *)a2 + *(int *)(a3 + 24);
  *(void *)(swift_unknownObjectWeakTakeInit() + 8) = *((void *)v15 + 1);
  return a1;
}

void *sub_1C2232100(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C254CB40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for AttachmentContext();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  id v13 = &v8[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v10[6];
  uint64_t v17 = *(void *)&v7[v16];
  unint64_t v18 = *(void *)&v7[v16 + 8];
  *(_OWORD *)&v7[v16] = *(_OWORD *)&v8[v16];
  sub_1C2205E6C(v17, v18);
  uint64_t v19 = v10[7];
  unint64_t v20 = &v7[v19];
  uint64_t v21 = &v8[v19];
  uint64_t v23 = *(void *)v21;
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)unint64_t v20 = v23;
  *((void *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = v10[8];
  uint64_t v25 = &v7[v24];
  uint64_t v26 = &v8[v24];
  uint64_t v27 = sub_1C254E340();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  uint64_t v28 = (char *)a2 + *(int *)(a3 + 24);
  *(void *)(swift_unknownObjectWeakTakeAssign() + 8) = *((void *)v28 + 1);
  return a1;
}

uint64_t sub_1C2232254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2232268);
}

uint64_t sub_1C2232268(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for AttachmentContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C2232318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C223232C);
}

void *sub_1C223232C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for AttachmentContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for PDFAttachmentItem(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DED58);
}

uint64_t sub_1C22323F4()
{
  uint64_t result = type metadata accessor for AttachmentContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C2232498(uint64_t a1)
{
  uint64_t result = sub_1C2232548(&qword_1EA2DED68, (void (*)(uint64_t))type metadata accessor for PDFAttachmentItem);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C22324F0(uint64_t a1)
{
  uint64_t result = sub_1C2232548(&qword_1EA2DED70, (void (*)(uint64_t))type metadata accessor for ThumbnailAttachmentItem);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C2232548(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2232590(uint64_t a1)
{
  uint64_t result = sub_1C2232548(&qword_1EA2DED78, (void (*)(uint64_t))type metadata accessor for TextAttachmentItem);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C22325E8(uint64_t a1)
{
  uint64_t result = sub_1C2232548((unint64_t *)&unk_1EA2DED80, (void (*)(uint64_t))type metadata accessor for ImageAttachmentItem);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_1C2232640()
{
  qword_1EA2DEB70 = 0x4008000000000000;
}

void sub_1C2232650()
{
  qword_1EA2DEB78 = 0x4040800000000000;
}

void sub_1C2232664()
{
  qword_1EA2DEB80 = 0x4046000000000000;
}

uint64_t sub_1C2232674(void *a1)
{
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *v1;
  uint64_t v4 = *(void *)(v3 + 0x50);
  uint64_t v5 = sub_1C2550100();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v18[-v8];
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = &v18[-v11];
  uint64_t v13 = (uint64_t)v1 + qword_1EA2DEC58;
  swift_beginAccess();
  sub_1C2227014(v13, (uint64_t)v18);
  sub_1C2232EF4(0, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  int v14 = swift_dynamicCast();
  uint64_t v15 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v14)
  {
    v15(v9, 0, 1, v4);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v9, v4);
    id v16 = sub_1C22316A4(v4, *(void *)(v3 + 96));
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v16, 1, 0);

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v4);
  }
  else
  {
    v15(v9, 1, 1, v4);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
  }
}

unint64_t sub_1C2232920()
{
  unint64_t result = qword_1EA2DEDA0;
  if (!qword_1EA2DEDA0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DEDA0);
  }
  return result;
}

uint64_t sub_1C2232978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttachmentContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C22329DC()
{
  sub_1C2232EF4(0, (unint64_t *)&unk_1EA2DEDD0, (void (*)(uint64_t))type metadata accessor for PDFAttachmentItem);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v29 - v2;
  uint64_t v4 = type metadata accessor for PDFAttachmentItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + qword_1EA2DEC58;
  swift_beginAccess();
  sub_1C2227014(v8, (uint64_t)v30);
  if (!v30[3])
  {
    sub_1C2232F48((uint64_t)v30, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    return sub_1C2232F48((uint64_t)v3, (unint64_t *)&unk_1EA2DEDD0, (void (*)(uint64_t))type metadata accessor for PDFAttachmentItem);
  }
  sub_1C22270A8();
  int v9 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, v9 ^ 1u, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_1C2232F48((uint64_t)v3, (unint64_t *)&unk_1EA2DEDD0, (void (*)(uint64_t))type metadata accessor for PDFAttachmentItem);
  }
  sub_1C2232FA4((uint64_t)v3, (uint64_t)v7);
  uint64_t v10 = MEMORY[0x1C875A200](&v7[*(int *)(v4 + 24)]);
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v12 = &v7[*(int *)(v4 + 20)];
    sub_1C21ACA3C();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C255CEB0;
    int v14 = (uint64_t *)&v12[*(int *)(type metadata accessor for AttachmentContext() + 24)];
    uint64_t v15 = *v14;
    unint64_t v16 = v14[1];
    uint64_t v17 = (objc_class *)type metadata accessor for QLItemSingleDataProvider();
    unint64_t v18 = (char *)objc_allocWithZone(v17);
    uint64_t v19 = (uint64_t *)&v18[OBJC_IVAR____TtC15HealthRecordsUI24QLItemSingleDataProvider_data];
    uint64_t *v19 = v15;
    v19[1] = v16;
    sub_1C2205E14(v15, v16);
    v29.receiver = v18;
    v29.super_class = v17;
    id v20 = objc_msgSendSuper2(&v29, sel_init);
    sub_1C254E2A0();
    id v21 = objc_allocWithZone(MEMORY[0x1E4F3A648]);
    swift_bridgeObjectRetain();
    uint64_t v22 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    uint64_t v23 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v24 = objc_msgSend(v21, sel_initWithDataProvider_contentType_previewTitle_, v20, v22, v23);

    *(void *)(v13 + 32) = v24;
    v30[0] = v13;
    sub_1C254F730();
    id v25 = objc_allocWithZone(MEMORY[0x1E4F3A650]);
    sub_1C2232920();
    uint64_t v26 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v27 = objc_msgSend(v25, sel_initWithPreviewItems_, v26);

    objc_msgSend(v11, sel_presentViewController_animated_completion_, v27, 1, 0);
    swift_unknownObjectRelease();
  }
  return sub_1C2233008((uint64_t)v7, type metadata accessor for PDFAttachmentItem);
}

void sub_1C2232DE4()
{
  *(void *)&v0[qword_1EA2DEC48] = 0;
  *(void *)&v0[qword_1EA2DEC50] = 0;
  uint64_t v1 = &v0[qword_1EA2DEC58];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;

  sub_1C25505F0();
  __break(1u);
}

uint64_t sub_1C2232E74(uint64_t a1, uint64_t a2)
{
  sub_1C2232EF4(0, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1C2232EF4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2232F48(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C2232EF4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2232FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PDFAttachmentItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2233008(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2233068(unint64_t a1, uint64_t (*a2)(uint64_t), double a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(unint64_t, uint64_t), uint64_t a8, double (*a9)(void), uint64_t a10, uint64_t a11)
{
  unint64_t v12 = a1;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  unint64_t v67 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain();
  if (!v14)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    unint64_t v35 = MEMORY[0x1E4FBC860];
    goto LABEL_27;
  }
LABEL_3:
  BOOL v15 = 0;
  do
  {
    while (1)
    {
      unint64_t v16 = v67;
      unint64_t v17 = v67 >> 62;
      if (v15)
      {
        if (v17)
        {
          swift_bridgeObjectRetain();
          uint64_t v18 = sub_1C2550620();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v18 = *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        id v19 = (id)a2(v18);
        double v20 = a9();
        uint64_t v22 = v21;

        uint64_t v23 = *(void *)&v20;
        uint64_t v24 = v22;
      }
      else
      {
        id v19 = 0;
        uint64_t v23 = 0;
        uint64_t v24 = 0;
      }
      if (v17)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1C2550620();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v25 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (__OFADD__(v25, 2))
      {
        __break(1u);
LABEL_25:
        swift_retain();
        swift_bridgeObjectRetain();
        if (!sub_1C2550620()) {
          goto LABEL_26;
        }
        goto LABEL_3;
      }
      id v26 = (id)a5(v25 + 2);
      uint64_t v27 = a9();
      uint64_t v29 = v28;

      uint64_t v30 = (void *)MEMORY[0x1C87594F0]();
      sub_1C22335D4(v12, a11, v19, v23, v24, v26, (uint64_t)v66, v27, v29, a3);
      swift_bridgeObjectRelease();

      uint64_t v31 = v66[0];
      if (!v66[0])
      {
        swift_release();
        goto LABEL_44;
      }
      unint64_t v12 = v66[1];
      uint64_t v32 = swift_retain();
      MEMORY[0x1C8757C00](v32);
      if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
      uint64_t v33 = *(void *)(v31 + 48);
      swift_release();
      BOOL v15 = v33 != 0;
      if (v12 >> 62) {
        break;
      }
      if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  while (v34);
LABEL_23:
  swift_bridgeObjectRelease();
  unint64_t v35 = v67;
LABEL_27:
  id v36 = (void *)(v35 >> 62);
  if (v35 >> 62) {
    goto LABEL_41;
  }
  uint64_t v59 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_29:
  v66[0] = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C2550490();
  if (v36)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1C2550620();
    if (v37) {
      goto LABEL_31;
    }
  }
  else
  {
    uint64_t v37 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v37)
    {
LABEL_31:
      unint64_t v38 = 0;
      uint64_t v56 = v35 & 0xFFFFFFFFFFFFFF8;
      unint64_t v58 = v35 & 0xC000000000000001;
      uint64_t v54 = v37;
      unint64_t v55 = v35;
      do
      {
        if (v58)
        {
          id v39 = (void *)MEMORY[0x1C87588E0](v38, v35);
          unint64_t v40 = v38 + 1;
          if (__OFADD__(v38, 1)) {
            goto LABEL_39;
          }
        }
        else
        {
          if (v38 >= *(void *)(v56 + 16)) {
            goto LABEL_40;
          }
          id v39 = *(void **)(v35 + 8 * v38 + 32);
          swift_retain();
          unint64_t v40 = v38 + 1;
          if (__OFADD__(v38, 1))
          {
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
LABEL_41:
            swift_bridgeObjectRetain();
            uint64_t v59 = sub_1C2550620();
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
        }
        unint64_t v64 = v40;
        id v41 = (id)a7(v40, v59);
        double v42 = a9();
        uint64_t v44 = v43;

        uint64_t v45 = v39[2];
        id v36 = (void *)v39[3];
        uint64_t v46 = v39[4];
        dispatch_group_t v47 = (void *)v39[6];
        uint64_t v48 = v39[7];
        uint64_t v61 = v39[8];
        uint64_t v63 = v39[5];
        uint64_t v49 = v39[12];
        uint64_t v50 = v39[13];
        _s4PageCMa();
        uint64_t v13 = swift_allocObject();
        *(unsigned char *)(v13 + 120) = 1;
        *(void *)(v13 + 16) = v45;
        *(void *)(v13 + 24) = v36;
        *(void *)(v13 + 32) = v46;
        *(void *)(v13 + 40) = v63;
        *(void *)(v13 + 48) = v47;
        *(void *)(v13 + 56) = v48;
        *(void *)(v13 + 64) = v61;
        *(void *)(v13 + 72) = v41;
        *(double *)(v13 + 80) = v42;
        *(void *)(v13 + 88) = v44;
        *(void *)(v13 + 96) = v49;
        *(void *)(v13 + 104) = v50;
        *(void *)(v13 + 112) = 0;
        id v51 = v47;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v52 = v36;
        swift_release();
        sub_1C2550460();
        sub_1C25504A0();
        unint64_t v35 = v55;
        sub_1C25504B0();
        sub_1C2550470();
        ++v38;
      }
      while (v64 != v54);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v31 = v66[0];
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
LABEL_44:
  swift_bridgeObjectRelease();
  return v31;
}

void sub_1C22335D4(unint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>, uint64_t a8@<D0>, uint64_t a9@<D1>, double a10@<D2>)
{
  unint64_t v12 = v10;
  unint64_t v16 = a1;
  if (a1 >> 62) {
    goto LABEL_68;
  }
  uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v18)
  {
LABEL_69:
    swift_bridgeObjectRelease();
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    swift_bridgeObjectRetain();
    uint64_t v48 = MEMORY[0x1C87588E0](0, v16);
    swift_bridgeObjectRelease();
    a7 = *(void *)(v48 + 64);
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    if (a7 < 0 || (a7 & 0x4000000000000000) != 0) {
      goto LABEL_74;
    }
LABEL_52:
    if (*(void *)((a7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_53;
    }
LABEL_75:
    swift_bridgeObjectRelease();
    goto LABEL_76;
  }
LABEL_3:
  if (v18 < 1) {
    goto LABEL_71;
  }
  unint64_t v52 = v16 & 0xC000000000000001;
  id v53 = (void *)a7;
  unint64_t v54 = v12;
  if ((v16 & 0xC000000000000001) == 0)
  {
LABEL_13:
    uint64_t v23 = 0;
    a7 = 0;
    while (1)
    {
      uint64_t v11 = *(void *)(*(void *)(v16 + 8 * v23 + 32) + 64);
      if ((unint64_t)v11 >> 62)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1C2550620();
        swift_release();
        swift_bridgeObjectRelease();
        BOOL v21 = __OFADD__(a7, v25);
        a7 += v25;
        if (v21)
        {
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v24 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        BOOL v21 = __OFADD__(a7, v24);
        a7 += v24;
        if (v21) {
          goto LABEL_20;
        }
      }
      if (v18 == ++v23) {
        goto LABEL_21;
      }
    }
  }
  uint64_t v11 = 0;
  a7 = 0;
  do
  {
    unint64_t v19 = *(void *)(MEMORY[0x1C87588E0](v11, v16) + 64);
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1C2550620();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v21 = __OFADD__(a7, v22);
      a7 += v22;
      if (v21)
      {
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_unknownObjectRelease();
      BOOL v21 = __OFADD__(a7, v20);
      a7 += v20;
      if (v21) {
        goto LABEL_12;
      }
    }
    ++v11;
  }
  while (v18 != v11);
LABEL_21:
  swift_bridgeObjectRelease();
  if (a7 < 1) {
    goto LABEL_70;
  }
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v28 = 1;
  unint64_t v60 = v16;
  while (1)
  {
    uint64_t v56 = v27;
    unint64_t v29 = sub_1C2233C14(v28, v16);
    unint64_t v12 = v29;
    uint64_t v11 = v30;
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1C2550620();
      uint64_t v63 = v26;
      if (v31)
      {
LABEL_25:
        if (v31 >= 1)
        {
          char v62 = v11;
          uint64_t v32 = 0;
          uint64_t v11 = 0;
          unint64_t v16 = v12 & 0xC000000000000001;
          do
          {
            if (v16) {
              MEMORY[0x1C87588E0](v32, v12);
            }
            else {
              swift_retain();
            }
            uint64_t v33 = sub_1C23C5E60();
            swift_release();
            BOOL v21 = __OFADD__(v11, v33);
            v11 += v33;
            if (v21)
            {
              __break(1u);
              goto LABEL_67;
            }
            ++v32;
          }
          while (v31 != v32);
          uint64_t v34 = swift_bridgeObjectRelease();
          BOOL v35 = v11 < a2;
          LOBYTE(v11) = v62;
          if (v35) {
            goto LABEL_36;
          }
          goto LABEL_44;
        }
LABEL_67:
        __break(1u);
LABEL_68:
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_1C2550620();
        if (!v18) {
          goto LABEL_69;
        }
        goto LABEL_3;
      }
    }
    else
    {
      uint64_t v31 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v63 = v26;
      if (v31) {
        goto LABEL_25;
      }
    }
    uint64_t v34 = swift_bridgeObjectRelease();
    if (a2 <= 0) {
      goto LABEL_44;
    }
LABEL_36:
    id v36 = (void *)MEMORY[0x1C87594F0](v34);
    if (v11)
    {
      uint64_t v37 = (uint64_t)a6;
      id v38 = a6;
      uint64_t v40 = a9;
      uint64_t v39 = a8;
    }
    else
    {
      uint64_t v37 = 0;
      uint64_t v39 = 0;
      uint64_t v40 = 0;
    }
    swift_bridgeObjectRetain();
    id v41 = a3;
    uint64_t v26 = sub_1C246BE30(v12, (uint64_t)a3, a4, a5, v37, v39, v40);
    swift_bridgeObjectRelease();
    if (sub_1C24690E0() >= a10) {
      break;
    }
    swift_release();
    unint64_t v16 = v60;
    if (v28 == a7)
    {
      swift_retain();
      goto LABEL_64;
    }
    uint64_t v27 = v28;
    BOOL v21 = __OFADD__(v28++, 1);
    if (v21)
    {
      __break(1u);
LABEL_44:
      swift_bridgeObjectRelease();
      uint64_t v11 = v54;
      unint64_t v16 = v60;
      uint64_t v26 = v63;
      if (!v63) {
        goto LABEL_48;
      }
LABEL_45:
      swift_retain();
      a7 = v56;
LABEL_64:
      uint64_t v47 = sub_1C22340B8(a7, v16);
      swift_release();
      goto LABEL_65;
    }
  }
  uint64_t v11 = v54;
  unint64_t v16 = v60;
  if (*(double *)(v26 + 112) <= a10)
  {
    swift_release();
    swift_retain();
    a7 = v28;
    goto LABEL_64;
  }
  swift_release();
  uint64_t v26 = v63;
  if (v63) {
    goto LABEL_45;
  }
LABEL_48:
  if (v52) {
    goto LABEL_72;
  }
  if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_78;
  }
  a7 = *(void *)(*(void *)(v16 + 32) + 64);
  swift_bridgeObjectRetain();
  if ((a7 & 0x8000000000000000) == 0 && (a7 & 0x4000000000000000) == 0) {
    goto LABEL_52;
  }
LABEL_74:
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v49) {
    goto LABEL_75;
  }
LABEL_53:
  if ((a7 & 0xC000000000000001) != 0)
  {
LABEL_78:
    uint64_t v51 = MEMORY[0x1C87588E0](0, a7);
    swift_bridgeObjectRelease();
    uint64_t v43 = *(void *)(v51 + 80);
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    if ((v43 & 0x8000000000000000) == 0)
    {
      unint64_t v16 = v60;
      if ((v43 & 0x4000000000000000) == 0) {
        goto LABEL_57;
      }
      goto LABEL_83;
    }
    goto LABEL_82;
  }
  if (!*(void *)((a7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_82:
    unint64_t v16 = v60;
    goto LABEL_83;
  }
  uint64_t v42 = *(void *)(a7 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(v42 + 80);
  swift_bridgeObjectRetain();
  swift_release();
  if ((v43 & 0x8000000000000000) == 0 && (v43 & 0x4000000000000000) == 0)
  {
LABEL_57:
    uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_58;
  }
LABEL_83:
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_1C2550620();
  swift_bridgeObjectRelease();
LABEL_58:
  uint64_t v45 = swift_bridgeObjectRelease();
  if (v44 < 2) {
    goto LABEL_76;
  }
  uint64_t v46 = (void *)MEMORY[0x1C87594F0](v45);
  sub_1C22358AC(v16, a2, a3, a4, a5, a6, (uint64_t)v64, a8, a9, a10);
  if (v11)
  {
    __break(1u);
  }
  else
  {
    uint64_t v26 = v64[0];
    if (v64[0])
    {
      uint64_t v47 = v64[1];
      goto LABEL_65;
    }
LABEL_76:
    uint64_t v26 = sub_1C2234A2C(v16, a3, a4, a5, a6, a2, a10, *(double *)&a8, *(double *)&a9);
    uint64_t v47 = v50;
LABEL_65:
    *id v53 = v26;
    v53[1] = v47;
  }
}

uint64_t sub_1C2233C14(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = MEMORY[0x1E4FBC860];
  if ((unint64_t)a2 >> 62) {
    goto LABEL_31;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return v34;
  }
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = MEMORY[0x1C87588E0](0, a2);
  }
  else
  {
    if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_38;
    }
    uint64_t v2 = *(void *)(a2 + 32);
    swift_retain();
  }
  unint64_t v6 = *(void *)(v2 + 64);
  if (!(v6 >> 62))
  {
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a1) {
      goto LABEL_39;
    }
    goto LABEL_8;
  }
LABEL_38:
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (v17 < a1)
  {
LABEL_8:
    uint64_t v7 = 0;
    uint64_t v8 = v5 - 1;
    do
    {
      uint64_t v9 = swift_retain();
      MEMORY[0x1C8757C00](v9);
      if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
      unint64_t v10 = *(void *)(v2 + 64);
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_1C2550620();
        swift_release();
        swift_bridgeObjectRelease();
        BOOL v12 = __OFSUB__(a1, v16);
        a1 -= v16;
        if (v12)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
LABEL_31:
          if (a2 < 0) {
            uint64_t v2 = a2;
          }
          else {
            uint64_t v2 = a2 & 0xFFFFFFFFFFFFFF8;
          }
          swift_bridgeObjectRetain();
          uint64_t v5 = sub_1C2550620();
          if (!v5) {
            goto LABEL_35;
          }
          goto LABEL_3;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_release();
        BOOL v12 = __OFSUB__(a1, v11);
        a1 -= v11;
        if (v12) {
          goto LABEL_28;
        }
      }
      if (v8 == v7) {
        goto LABEL_35;
      }
      unint64_t v13 = v7 + 1;
      if ((a2 & 0xC000000000000001) != 0)
      {
        uint64_t v2 = MEMORY[0x1C87588E0](v7 + 1, a2);
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
      }
      else
      {
        if (v13 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_30;
        }
        uint64_t v2 = *(void *)(a2 + 8 * v7 + 40);
        swift_retain();
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
      }
      unint64_t v14 = *(void *)(v2 + 64);
      if (v14 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_1C2550620();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      ++v7;
    }
    while (v15 < a1);
  }
LABEL_39:
  swift_bridgeObjectRelease();
  unint64_t v18 = *(void *)(v2 + 64);
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v20 == a1) {
      goto LABEL_41;
    }
  }
  else if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) == a1)
  {
LABEL_41:
    uint64_t v19 = swift_retain();
    MEMORY[0x1C8757C00](v19);
    if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    goto LABEL_55;
  }
  unint64_t v21 = *(void *)(v2 + 64);
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C241A6D0(a1, v21);
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  unint64_t v28 = v27;
  swift_bridgeObjectRelease();
  if (v28)
  {
    sub_1C25508B0();
    swift_unknownObjectRetain_n();
    uint64_t v30 = swift_dynamicCastClass();
    if (!v30)
    {
      swift_unknownObjectRelease();
      uint64_t v30 = MEMORY[0x1E4FBC860];
    }
    uint64_t v31 = *(void *)(v30 + 16);
    swift_release();
    if (__OFSUB__(v28 >> 1, v26))
    {
      __break(1u);
    }
    else if (v31 == (v28 >> 1) - v26)
    {
      uint64_t v29 = swift_dynamicCastClass();
      if (!v29)
      {
        swift_unknownObjectRelease();
        uint64_t v29 = MEMORY[0x1E4FBC860];
      }
      goto LABEL_53;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v29 = sub_1C228FB8C(v22, v24, v26, v28);
LABEL_53:
  swift_unknownObjectRelease();
  sub_1C23C59D4(v29);
  uint64_t v32 = swift_release();
  MEMORY[0x1C8757C00](v32);
  if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
LABEL_55:
  sub_1C254F790();
  sub_1C254F730();
  swift_release();
  return v34;
}

uint64_t sub_1C22340B8(uint64_t a1, unint64_t a2)
{
  uint64_t v73 = MEMORY[0x1E4FBC860];
  if (a2 >> 62) {
    goto LABEL_128;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_129:
    swift_bridgeObjectRelease();
    return v73;
  }
  while (1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = (void *)MEMORY[0x1C87588E0](0, a2);
      uint64_t v6 = 1;
      while (1)
      {
        if (a1)
        {
          unint64_t v9 = v5[8];
          if (v9 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v10 = sub_1C2550620();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          unint64_t v11 = v5[8];
          if (a1 < v10)
          {
            if (a1 < 0) {
              goto LABEL_118;
            }
            if (v11 >> 62)
            {
              swift_bridgeObjectRetain_n();
              uint64_t v12 = sub_1C2550620();
              uint64_t result = swift_bridgeObjectRelease();
              if (v12 >= a1) {
                uint64_t v35 = a1;
              }
              else {
                uint64_t v35 = v12;
              }
              if (v12 >= 0) {
                a1 = v35;
              }
              if (v12 < a1)
              {
                __break(1u);
                goto LABEL_131;
              }
              swift_bridgeObjectRetain();
              uint64_t v36 = sub_1C2550620();
              uint64_t result = swift_bridgeObjectRelease();
              if (v36 < a1) {
                goto LABEL_120;
              }
              if (a1 < 0) {
                goto LABEL_132;
              }
              swift_bridgeObjectRetain();
              uint64_t v37 = sub_1C2550620();
              uint64_t result = swift_bridgeObjectRelease();
              if (v37 < v12) {
                goto LABEL_133;
              }
              if (v12 < 0) {
                goto LABEL_134;
              }
            }
            else
            {
              uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v12 < a1) {
                a1 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
              }
              swift_bridgeObjectRetain();
            }
            if ((v11 & 0xC000000000000001) != 0 && a1 != v12)
            {
              if (a1 >= v12) {
                goto LABEL_124;
              }
              _s11SizedRecordCMa();
              uint64_t v13 = a1;
              do
              {
                uint64_t v14 = v13 + 1;
                sub_1C25503C0();
                uint64_t v13 = v14;
              }
              while (v12 != v14);
            }
            if (v11 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v15 = sub_1C2550630();
              uint64_t v16 = v19;
              a1 = v20;
              unint64_t v17 = v21;
              swift_bridgeObjectRelease_n();
              if (v17) {
                goto LABEL_33;
              }
            }
            else
            {
              uint64_t v15 = v11 & 0xFFFFFFFFFFFFFF8;
              uint64_t v16 = (v11 & 0xFFFFFFFFFFFFFF8) + 32;
              unint64_t v17 = (2 * v12) | 1;
              if (v17)
              {
LABEL_33:
                sub_1C25508B0();
                swift_unknownObjectRetain_n();
                uint64_t v23 = swift_dynamicCastClass();
                if (!v23)
                {
                  swift_unknownObjectRelease();
                  uint64_t v23 = MEMORY[0x1E4FBC860];
                }
                uint64_t v24 = *(void *)(v23 + 16);
                swift_release();
                if (__OFSUB__(v17 >> 1, a1)) {
                  goto LABEL_125;
                }
                if (v24 == (v17 >> 1) - a1)
                {
                  uint64_t v22 = swift_dynamicCastClass();
                  if (!v22)
                  {
                    swift_unknownObjectRelease();
                    uint64_t v22 = MEMORY[0x1E4FBC860];
                  }
                  goto LABEL_39;
                }
                swift_unknownObjectRelease();
              }
            }
            uint64_t v22 = sub_1C228FB8C(v15, v16, a1, v17);
LABEL_39:
            swift_unknownObjectRelease();
            uint64_t v25 = (void *)v5[2];
            uint64_t v26 = v5[3];
            uint64_t v27 = v5[4];
            unint64_t v28 = (void *)v5[5];
            uint64_t v29 = v5[6];
            uint64_t v30 = v5[7];
            sub_1C21F4424((uint64_t)(v5 + 9), (uint64_t)v72);
            _s12SizedSectionCMa();
            uint64_t v31 = swift_allocObject();
            *(void *)(v31 + 112) = 0;
            *(unsigned char *)(v31 + 120) = 1;
            *(void *)(v31 + 128) = 0;
            *(unsigned char *)(v31 + 136) = 1;
            *(void *)(v31 + 144) = 0;
            *(unsigned char *)(v31 + 152) = 1;
            *(void *)(v31 + 16) = v25;
            *(void *)(v31 + 24) = v26;
            *(void *)(v31 + 32) = v27;
            *(void *)(v31 + 40) = v28;
            *(void *)(v31 + 64) = v22;
            *(void *)(v31 + 48) = v29;
            *(void *)(v31 + 56) = v30;
            sub_1C21F44EC(v72, v31 + 72);
            id v32 = v25;
            MEMORY[0x1C8757C00](v28);
            if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C254F760();
            }
            sub_1C254F790();
            sub_1C254F730();
            swift_unknownObjectRelease();
            if (v6 == v4) {
              goto LABEL_129;
            }
            a1 = 0;
            goto LABEL_9;
          }
          if (v11 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v33 = sub_1C2550620();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            BOOL v8 = __OFSUB__(a1, v33);
            a1 -= v33;
            if (v8) {
              goto LABEL_119;
            }
          }
          else
          {
            uint64_t v18 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_unknownObjectRelease();
            BOOL v8 = __OFSUB__(a1, v18);
            a1 -= v18;
            if (v8) {
              goto LABEL_119;
            }
          }
        }
        else
        {
          uint64_t v7 = swift_retain();
          MEMORY[0x1C8757C00](v7);
          if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C254F760();
          }
          sub_1C254F790();
          sub_1C254F730();
          swift_unknownObjectRelease();
          a1 = 0;
        }
        if (v6 == v4) {
          goto LABEL_129;
        }
LABEL_9:
        uint64_t v5 = (void *)MEMORY[0x1C87588E0](v6, a2);
        BOOL v8 = __OFADD__(v6++, 1);
        if (v8)
        {
          __break(1u);
          goto LABEL_117;
        }
      }
    }
    uint64_t v38 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v38) {
      break;
    }
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2550620();
    if (!v4) {
      goto LABEL_129;
    }
  }
  uint64_t v39 = 0;
  unint64_t v40 = a2 + 32;
  uint64_t v71 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    while (1)
    {
      uint64_t v42 = *(void **)(v40 + 8 * v39++);
      if (a1) {
        break;
      }
      uint64_t v41 = swift_retain_n();
      MEMORY[0x1C8757C00](v41);
      if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
      swift_release();
      a1 = 0;
LABEL_64:
      if (v39 == v4) {
        goto LABEL_129;
      }
      if (v39 == v38) {
        goto LABEL_117;
      }
    }
    unint64_t v43 = v42[8];
    if (v43 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_1C2550620();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
    }
    unint64_t v45 = v42[8];
    if (a1 >= v44)
    {
      if (v45 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v67 = sub_1C2550620();
        swift_release();
        swift_bridgeObjectRelease();
        BOOL v8 = __OFSUB__(a1, v67);
        a1 -= v67;
        if (v8) {
          goto LABEL_122;
        }
      }
      else
      {
        uint64_t v52 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_release();
        BOOL v8 = __OFSUB__(a1, v52);
        a1 -= v52;
        if (v8) {
          goto LABEL_122;
        }
      }
      goto LABEL_64;
    }
    if (a1 < 0) {
      goto LABEL_121;
    }
    if (!(v45 >> 62))
    {
      uint64_t v46 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v46 < a1) {
        a1 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRetain();
      goto LABEL_75;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v46 = sub_1C2550620();
    uint64_t result = swift_bridgeObjectRelease();
    if (v46 >= a1) {
      uint64_t v68 = a1;
    }
    else {
      uint64_t v68 = v46;
    }
    if (v46 >= 0) {
      a1 = v68;
    }
    if (v46 < a1) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_1C2550620();
    uint64_t result = swift_bridgeObjectRelease();
    if (v69 < a1) {
      goto LABEL_123;
    }
    if (a1 < 0) {
      goto LABEL_135;
    }
    swift_bridgeObjectRetain();
    uint64_t v70 = sub_1C2550620();
    uint64_t result = swift_bridgeObjectRelease();
    if (v70 < v46) {
      goto LABEL_136;
    }
    if (v46 < 0) {
      goto LABEL_137;
    }
LABEL_75:
    if ((v45 & 0xC000000000000001) != 0 && a1 != v46)
    {
      if (a1 >= v46) {
        goto LABEL_126;
      }
      _s11SizedRecordCMa();
      uint64_t v47 = a1;
      do
      {
        uint64_t v48 = v47 + 1;
        sub_1C25503C0();
        uint64_t v47 = v48;
      }
      while (v46 != v48);
    }
    if (v45 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_1C2550630();
      uint64_t v50 = v53;
      a1 = v54;
      unint64_t v51 = v55;
      swift_bridgeObjectRelease_n();
      if ((v51 & 1) == 0) {
        goto LABEL_88;
      }
    }
    else
    {
      uint64_t v49 = v45 & 0xFFFFFFFFFFFFFF8;
      uint64_t v50 = (v45 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v51 = (2 * v46) | 1;
      if ((v51 & 1) == 0) {
        goto LABEL_88;
      }
    }
    sub_1C25508B0();
    swift_unknownObjectRetain_n();
    uint64_t v57 = swift_dynamicCastClass();
    if (!v57)
    {
      swift_unknownObjectRelease();
      uint64_t v57 = MEMORY[0x1E4FBC860];
    }
    uint64_t v58 = *(void *)(v57 + 16);
    swift_release();
    if (__OFSUB__(v51 >> 1, a1)) {
      goto LABEL_127;
    }
    if (v58 != (v51 >> 1) - a1)
    {
      swift_unknownObjectRelease();
LABEL_88:
      uint64_t v56 = sub_1C228FB8C(v49, v50, a1, v51);
      goto LABEL_95;
    }
    uint64_t v56 = swift_dynamicCastClass();
    if (!v56)
    {
      swift_unknownObjectRelease();
      uint64_t v56 = MEMORY[0x1E4FBC860];
    }
LABEL_95:
    swift_unknownObjectRelease();
    uint64_t v59 = (void *)v42[2];
    uint64_t v60 = v42[3];
    uint64_t v61 = v42[4];
    char v62 = (void *)v42[5];
    uint64_t v63 = v42[6];
    uint64_t v64 = v42[7];
    sub_1C21F4424((uint64_t)(v42 + 9), (uint64_t)v72);
    _s12SizedSectionCMa();
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 112) = 0;
    *(unsigned char *)(v65 + 120) = 1;
    *(void *)(v65 + 128) = 0;
    *(unsigned char *)(v65 + 136) = 1;
    *(void *)(v65 + 144) = 0;
    *(unsigned char *)(v65 + 152) = 1;
    *(void *)(v65 + 16) = v59;
    *(void *)(v65 + 24) = v60;
    *(void *)(v65 + 32) = v61;
    *(void *)(v65 + 40) = v62;
    *(void *)(v65 + 64) = v56;
    *(void *)(v65 + 48) = v63;
    *(void *)(v65 + 56) = v64;
    sub_1C21F44EC(v72, v65 + 72);
    id v66 = v59;
    MEMORY[0x1C8757C00](v62);
    unint64_t v40 = a2 + 32;
    if (*(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
    swift_release();
    uint64_t v38 = v71;
    if (v39 == v4) {
      goto LABEL_129;
    }
    a1 = 0;
    if (v39 == v71) {
      goto LABEL_117;
    }
  }
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
  return result;
}

uint64_t sub_1C2234A2C(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, double a7, double a8, double a9)
{
  uint64_t v18 = sub_1C254E560();
  uint64_t v101 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (uint64_t)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1C2550620();
    unint64_t v102 = v21;
    if (!v21) {
      goto LABEL_70;
    }
  }
  else
  {
    unint64_t v21 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v102 = v21;
    if (!v21) {
      goto LABEL_70;
    }
  }
  unint64_t v99 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v22 = MEMORY[0x1C87588E0](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_66:
      uint64_t v24 = MEMORY[0x1C87588E0](0, v21);
      goto LABEL_11;
    }
    uint64_t v22 = *(void *)(a1 + 32);
    swift_retain();
  }
  unint64_t v100 = a1 >> 62;
  swift_bridgeObjectRelease();
  uint64_t v104 = v22;
  unint64_t v21 = *(void *)(v22 + 64);
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    if (!sub_1C2550620()) {
      goto LABEL_69;
    }
  }
  else
  {
    uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v23) {
      goto LABEL_69;
    }
  }
  if ((v21 & 0xC000000000000001) != 0) {
    goto LABEL_66;
  }
  if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_74;
  }
  uint64_t v24 = *(void *)(v21 + 32);
  swift_retain();
LABEL_11:
  swift_bridgeObjectRelease();
  uint64_t v103 = v24;
  unint64_t v21 = *(void *)(v24 + 80);
  if (!(v21 >> 62))
  {
    uint64_t v25 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25) {
      goto LABEL_13;
    }
    goto LABEL_68;
  }
  swift_bridgeObjectRetain();
  if (!sub_1C2550620())
  {
LABEL_68:
    swift_release();
LABEL_69:
    swift_release();
LABEL_70:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_13:
  if ((v21 & 0xC000000000000001) != 0)
  {
LABEL_74:
    uint64_t v26 = MEMORY[0x1C87588E0](0, v21);
    goto LABEL_16;
  }
  if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  uint64_t v26 = *(void *)(v21 + 32);
  swift_retain();
LABEL_16:
  swift_bridgeObjectRelease();
  unint64_t v21 = *(void *)(v26 + 48);
  unint64_t v97 = v21 >> 62;
  uint64_t v98 = v26;
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v27 = sub_1C2550620();
    uint64_t v28 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v28 = swift_bridgeObjectRetain();
  }
  if (v27 < a6) {
    a6 = v27;
  }
  uint64_t v29 = (void *)MEMORY[0x1C87594F0](v28);
  uint64_t v95 = a4;
  a4 = v98;
  sub_1C22366E4(0, a6, 0, 0, v104, v103, v98, v21, (uint64_t *)&v105, a8, a9, a7, a2, a3, v95, a5);
  a3 = v105;
  if (!v105) {
    goto LABEL_24;
  }
  uint64_t v20 = v106;
  uint64_t v18 = v97;
  if (v97)
  {
    if ((v21 & 0x8000000000000000) != 0) {
      uint64_t v34 = v21;
    }
    else {
      uint64_t v34 = v21 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    a6 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (a6 < v20) {
      goto LABEL_180;
    }
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    a6 = v30;
    if (v30 < v106)
    {
      __break(1u);
LABEL_24:
      swift_bridgeObjectRelease();
      sub_1C254E510();
      uint64_t v31 = sub_1C254E550();
      os_log_type_t v32 = sub_1C254FA20();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v33 = 0;
        _os_log_impl(&dword_1C21A1000, v31, v32, "[PDF]: Encountered a value that does not fit on a page, attempted to truncate the value but the resulting maximum height turned out to be negative.", v33, 2u);
        MEMORY[0x1C875A0B0](v33, -1, -1);
        swift_release();
        swift_release();
        swift_release();
      }
      else
      {

        swift_release();
        swift_release();
        swift_release();
      }
      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v20, v18);
      return 0;
    }
  }
  if (v30 < v20) {
    goto LABEL_77;
  }
  if (v20 < 0)
  {
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (v18)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v34 < a6) {
    goto LABEL_79;
  }
  if (a6 < 0)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  if ((v21 & 0xC000000000000001) != 0 && v20 != a6)
  {
    if (v20 >= (unint64_t)a6) {
      goto LABEL_181;
    }
    _s10SizedValueCMa();
    uint64_t v35 = v20;
    do
    {
      uint64_t v36 = v35 + 1;
      sub_1C25503C0();
      uint64_t v35 = v36;
    }
    while (a6 != v36);
  }
  if (v18)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1C2550630();
    uint64_t v18 = v37;
    uint64_t v20 = v38;
    a6 = v39;
    swift_bridgeObjectRelease_n();
    if ((a6 & 1) == 0) {
      goto LABEL_47;
    }
  }
  else
  {
    uint64_t v34 = v21 & 0xFFFFFFFFFFFFFF8;
    uint64_t v18 = (v21 & 0xFFFFFFFFFFFFFF8) + 32;
    a6 = (2 * a6) | 1;
    if ((a6 & 1) == 0) {
      goto LABEL_47;
    }
  }
  sub_1C25508B0();
  swift_unknownObjectRetain_n();
  uint64_t v40 = swift_dynamicCastClass();
  if (!v40)
  {
    swift_unknownObjectRelease();
    uint64_t v40 = MEMORY[0x1E4FBC860];
  }
  uint64_t v41 = *(void *)(v40 + 16);
  swift_release();
  if (__OFSUB__((unint64_t)a6 >> 1, v20)) {
    goto LABEL_182;
  }
  if (v41 != ((unint64_t)a6 >> 1) - v20) {
    goto LABEL_183;
  }
  unint64_t v21 = swift_dynamicCastClass();
  if (!v21)
  {
    swift_unknownObjectRelease();
    unint64_t v21 = MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    swift_unknownObjectRelease();
    if ((v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0)
    {
LABEL_81:
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1C2550620();
      swift_release();
      if (v50)
      {
LABEL_57:
        sub_1C21ACA3C();
        uint64_t v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_1C255CEB0;
        a6 = *(void *)(a4 + 16);
        uint64_t v43 = *(void *)(a4 + 24);
        uint64_t v44 = *(void *)(a4 + 32);
        char v45 = *(unsigned char *)(a4 + 40);
        _s15SizedValueGroupCMa();
        uint64_t v46 = swift_allocObject();
        *(void *)(v46 + 16) = a6;
        *(void *)(v46 + 24) = v43;
        *(void *)(v46 + 32) = v44;
        *(unsigned char *)(v46 + 40) = v45;
        *(void *)(v46 + 48) = v21;
        *(void *)(v42 + 32) = v46;
        unint64_t v105 = v42;
        sub_1C254F730();
        unint64_t v47 = v105;
        id v48 = (id)a6;
        goto LABEL_83;
      }
    }
    else if (*(void *)(v21 + 16))
    {
      goto LABEL_57;
    }
    swift_release();
    unint64_t v47 = MEMORY[0x1E4FBC860];
LABEL_83:
    uint64_t v51 = *(void *)(v103 + 80);
    if (!((unint64_t)v51 >> 62))
    {
      uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v52 >= 1) {
        uint64_t v53 = 1;
      }
      else {
        uint64_t v53 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRetain();
      if (v52 < (unint64_t)v53) {
        goto LABEL_116;
      }
      goto LABEL_88;
    }
    a6 = v51 < 0 ? *(void *)(v103 + 80) : v51 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    uint64_t v52 = sub_1C2550620();
    uint64_t result = swift_bridgeObjectRelease();
    if (v52 < 0) {
      break;
    }
    if (v52 >= 1) {
      uint64_t v53 = 1;
    }
    else {
      uint64_t v53 = v52;
    }
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v66 < v53) {
      goto LABEL_116;
    }
    swift_bridgeObjectRetain();
    a6 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (a6 < v52)
    {
      __break(1u);
LABEL_116:
      __break(1u);
      goto LABEL_117;
    }
LABEL_88:
    if ((v51 & 0xC000000000000001) != 0 && (unint64_t)v52 >= 2)
    {
      _s15SizedValueGroupCMa();
      uint64_t v54 = v53;
      do
      {
        uint64_t v55 = v54 + 1;
        sub_1C25503C0();
        uint64_t v54 = v55;
      }
      while (v52 != v55);
    }
    if ((unint64_t)v51 >> 62)
    {
      swift_bridgeObjectRetain();
      a6 = sub_1C2550630();
      uint64_t v56 = v58;
      uint64_t v53 = v59;
      unint64_t v57 = v60;
      swift_bridgeObjectRelease_n();
      if ((v57 & 1) == 0) {
        goto LABEL_96;
      }
    }
    else
    {
      a6 = v51 & 0xFFFFFFFFFFFFFF8;
      uint64_t v56 = (v51 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v57 = (2 * v52) | 1;
      if ((v57 & 1) == 0) {
        goto LABEL_96;
      }
    }
    sub_1C25508B0();
    swift_unknownObjectRetain_n();
    uint64_t v62 = swift_dynamicCastClass();
    if (!v62)
    {
      swift_unknownObjectRelease();
      uint64_t v62 = MEMORY[0x1E4FBC860];
    }
    uint64_t v63 = *(void *)(v62 + 16);
    swift_release();
    if (__OFSUB__(v57 >> 1, v53))
    {
      __break(1u);
LABEL_185:
      swift_unknownObjectRelease();
LABEL_96:
      unint64_t v61 = sub_1C228FD60(a6, v56, v53, v57);
      goto LABEL_103;
    }
    if (v63 != (v57 >> 1) - v53) {
      goto LABEL_185;
    }
    unint64_t v61 = swift_dynamicCastClass();
    if (!v61)
    {
      swift_unknownObjectRelease();
      unint64_t v61 = MEMORY[0x1E4FBC860];
    }
LABEL_103:
    swift_unknownObjectRelease();
    unint64_t v105 = v47;
    sub_1C2272608(v61);
    uint64_t v53 = v105;
    if (!(v105 >> 62))
    {
      if (*(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_105;
      }
      goto LABEL_118;
    }
LABEL_117:
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v67)
    {
LABEL_105:
      sub_1C21ACA3C();
      a6 = swift_allocObject();
      *(_OWORD *)(a6 + 16) = xmmword_1C255CEB0;
      uint64_t v64 = sub_1C23C58E0(v53);
      swift_bridgeObjectRelease();
      *(void *)(a6 + 32) = v64;
      unint64_t v105 = a6;
      sub_1C254F730();
      unint64_t v65 = v105;
      goto LABEL_119;
    }
LABEL_118:
    swift_bridgeObjectRelease();
    unint64_t v65 = MEMORY[0x1E4FBC860];
LABEL_119:
    uint64_t v68 = *(void *)(v104 + 64);
    uint64_t v18 = (unint64_t)v68 >> 62;
    if ((unint64_t)v68 >> 62)
    {
      if (v68 < 0) {
        a6 = *(void *)(v104 + 64);
      }
      else {
        a6 = v68 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain_n();
      uint64_t v34 = sub_1C2550620();
      uint64_t result = swift_bridgeObjectRelease();
      if (v34 < 0) {
        goto LABEL_191;
      }
      if (v34 >= 1) {
        uint64_t v69 = 1;
      }
      else {
        uint64_t v69 = v34;
      }
      swift_bridgeObjectRetain();
      uint64_t v94 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (v94 < v69) {
        goto LABEL_174;
      }
      swift_bridgeObjectRetain();
      a6 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (a6 < v34)
      {
        __break(1u);
LABEL_174:
        __break(1u);
        goto LABEL_175;
      }
    }
    else
    {
      uint64_t v34 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v34 >= 1) {
        uint64_t v69 = 1;
      }
      else {
        uint64_t v69 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRetain();
      if (v34 < (unint64_t)v69) {
        goto LABEL_174;
      }
    }
    if ((v68 & 0xC000000000000001) != 0 && (unint64_t)v34 >= 2)
    {
      _s11SizedRecordCMa();
      uint64_t v70 = v69;
      do
      {
        uint64_t v71 = v70 + 1;
        sub_1C25503C0();
        uint64_t v70 = v71;
      }
      while (v34 != v71);
    }
    if (v18)
    {
      swift_bridgeObjectRetain();
      a6 = sub_1C2550630();
      uint64_t v18 = v73;
      uint64_t v69 = v74;
      unint64_t v72 = v75;
      swift_bridgeObjectRelease_n();
      if ((v72 & 1) == 0) {
        goto LABEL_132;
      }
    }
    else
    {
      a6 = v68 & 0xFFFFFFFFFFFFFF8;
      uint64_t v18 = (v68 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v72 = (2 * v34) | 1;
      if ((v72 & 1) == 0) {
        goto LABEL_132;
      }
    }
    sub_1C25508B0();
    swift_unknownObjectRetain_n();
    uint64_t v77 = swift_dynamicCastClass();
    if (!v77)
    {
      swift_unknownObjectRelease();
      uint64_t v77 = MEMORY[0x1E4FBC860];
    }
    uint64_t v78 = *(void *)(v77 + 16);
    swift_release();
    if (__OFSUB__(v72 >> 1, v69))
    {
      __break(1u);
LABEL_187:
      swift_unknownObjectRelease();
LABEL_132:
      unint64_t v76 = sub_1C228FB8C(a6, v18, v69, v72);
      goto LABEL_139;
    }
    if (v78 != (v72 >> 1) - v69) {
      goto LABEL_187;
    }
    unint64_t v76 = swift_dynamicCastClass();
    if (!v76)
    {
      swift_unknownObjectRelease();
      unint64_t v76 = MEMORY[0x1E4FBC860];
    }
LABEL_139:
    swift_unknownObjectRelease();
    unint64_t v105 = v65;
    sub_1C22725F0(v76);
    uint64_t v69 = v105;
    uint64_t v34 = v102;
    if (!(v105 >> 62))
    {
      uint64_t v20 = *(void *)((v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
      a4 = v98;
      if (v20) {
        goto LABEL_141;
      }
      goto LABEL_176;
    }
LABEL_175:
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C2550620();
    swift_bridgeObjectRelease();
    a4 = v98;
    if (v20)
    {
LABEL_141:
      sub_1C21ACA3C();
      a6 = swift_allocObject();
      *(_OWORD *)(a6 + 16) = xmmword_1C255CEB0;
      uint64_t v79 = sub_1C23C59D4(v69);
      swift_bridgeObjectRelease();
      *(void *)(a6 + 32) = v79;
      unint64_t v105 = a6;
      uint64_t v20 = (uint64_t)&v105;
      sub_1C254F730();
      unint64_t v80 = v105;
      if (v34 < 0) {
        goto LABEL_177;
      }
      goto LABEL_142;
    }
LABEL_176:
    swift_bridgeObjectRelease();
    unint64_t v80 = MEMORY[0x1E4FBC860];
    if (v34 < 0)
    {
LABEL_177:
      __break(1u);
      goto LABEL_178;
    }
LABEL_142:
    if (v100)
    {
      swift_bridgeObjectRetain();
      if (sub_1C2550620() < 1) {
        goto LABEL_178;
      }
      swift_bridgeObjectRetain();
      uint64_t v81 = sub_1C2550620();
      swift_bridgeObjectRelease();
LABEL_147:
      if (v81 < v34) {
        goto LABEL_179;
      }
      if (v99 && v34 != 1)
      {
        _s12SizedSectionCMa();
        uint64_t v82 = 1;
        do
        {
          uint64_t v83 = v82 + 1;
          sub_1C25503C0();
          uint64_t v82 = v83;
        }
        while (v34 != v83);
      }
      if (v100)
      {
        swift_bridgeObjectRetain();
        uint64_t v84 = sub_1C2550630();
        uint64_t v85 = v88;
        uint64_t v86 = v89;
        unint64_t v87 = v90;
        swift_bridgeObjectRelease_n();
        if ((v87 & 1) == 0) {
          goto LABEL_156;
        }
      }
      else
      {
        uint64_t v84 = a1 & 0xFFFFFFFFFFFFFF8;
        uint64_t v85 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
        uint64_t v86 = 1;
        unint64_t v87 = (2 * v34) | 1;
        if ((v87 & 1) == 0) {
          goto LABEL_156;
        }
      }
      sub_1C25508B0();
      swift_unknownObjectRetain_n();
      uint64_t v91 = swift_dynamicCastClass();
      if (!v91)
      {
        swift_unknownObjectRelease();
        uint64_t v91 = MEMORY[0x1E4FBC860];
      }
      uint64_t v92 = *(void *)(v91 + 16);
      swift_release();
      if (__OFSUB__(v87 >> 1, v86))
      {
        __break(1u);
      }
      else if (v92 == (v87 >> 1) - v86)
      {
        if (!swift_dynamicCastClass()) {
          swift_unknownObjectRelease();
        }
        goto LABEL_163;
      }
      swift_unknownObjectRelease();
LABEL_156:
      sub_1C228FBA4(v84, v85, v86, v87);
LABEL_163:
      swift_unknownObjectRelease();
      unint64_t v105 = v80;
      unint64_t v93 = swift_bridgeObjectRetain();
      sub_1C22725D8(v93);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return a3;
    }
    uint64_t v81 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v81) {
      goto LABEL_147;
    }
LABEL_178:
    __break(1u);
LABEL_179:
    __break(1u);
LABEL_180:
    __break(1u);
LABEL_181:
    __break(1u);
LABEL_182:
    __break(1u);
LABEL_183:
    swift_unknownObjectRelease();
LABEL_47:
    unint64_t v21 = sub_1C228FD78(v34, v18, v20, a6);
  }
  __break(1u);
LABEL_191:
  __break(1u);
  return result;
}

uint64_t sub_1C22358AC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>, uint64_t a8@<D0>, uint64_t a9@<D1>, double a10@<D2>)
{
  unint64_t v17 = a1;
  unint64_t v19 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_143;
  }
  uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v106 = v20;
  if (!v20)
  {
LABEL_148:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a7 = 0;
    *(void *)(a7 + 8) = 0;
    return result;
  }
LABEL_3:
  unint64_t v21 = v17 & 0xC000000000000001;
  unint64_t v105 = v19;
  if ((v17 & 0xC000000000000001) != 0)
  {
    uint64_t v10 = MEMORY[0x1C87588E0](0, v17);
  }
  else
  {
    if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_150;
    }
    uint64_t v10 = *(void *)(v17 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  unint64_t v19 = *(void *)(v10 + 64);
  if (!(v19 >> 62))
  {
    uint64_t v22 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v22) {
      goto LABEL_8;
    }
LABEL_147:
    swift_release();
    goto LABEL_148;
  }
  swift_bridgeObjectRetain();
  if (!sub_1C2550620()) {
    goto LABEL_147;
  }
LABEL_8:
  unint64_t v103 = v17;
  if ((v19 & 0xC000000000000001) != 0)
  {
LABEL_150:
    uint64_t v24 = MEMORY[0x1C87588E0](0, v19);
    goto LABEL_11;
  }
  uint64_t v23 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v23)
  {
LABEL_154:
    __break(1u);
    goto LABEL_155;
  }
  uint64_t v24 = *(void *)(v19 + 32);
  swift_retain();
LABEL_11:
  swift_bridgeObjectRelease();
  uint64_t v125 = v24;
  unint64_t v17 = *(void *)(v24 + 80);
  unint64_t v25 = v17 >> 62;
  if (!(v17 >> 62))
  {
    unint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v13 = v19 - 1;
    if (!__OFSUB__(v19, 1)) {
      goto LABEL_13;
    }
    goto LABEL_153;
  }
  swift_bridgeObjectRetain_n();
  unint64_t v19 = sub_1C2550620();
  swift_bridgeObjectRelease();
  uint64_t v13 = v19 - 1;
  if (__OFSUB__(v19, 1))
  {
LABEL_153:
    __break(1u);
    goto LABEL_154;
  }
LABEL_13:
  if (v13 < 1)
  {
LABEL_155:
    __break(1u);
    goto LABEL_156;
  }
  uint64_t v104 = (void *)a7;
  unint64_t v102 = v21;
  uint64_t v26 = v17 & 0xFFFFFFFFFFFFFF8;
  if (v25)
  {
    swift_bridgeObjectRetain();
    uint64_t v118 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v118 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v12 = 0;
  a7 = 0;
  uint64_t v114 = v10 + 72;
  if ((v17 & 0x8000000000000000) != 0) {
    uint64_t v27 = v17;
  }
  else {
    uint64_t v27 = v17 & 0xFFFFFFFFFFFFFF8;
  }
  unint64_t v116 = v17 & 0xC000000000000001;
  uint64_t v117 = v27;
  uint64_t v107 = v26 + 32;
  uint64_t v112 = a9;
  uint64_t v113 = a8;
  long long v130 = xmmword_1C255CEB0;
  unint64_t v28 = 1;
  unint64_t v123 = v10;
  unint64_t v115 = v17;
  uint64_t v108 = v17 & 0xFFFFFFFFFFFFFF8;
  unint64_t v109 = v17 >> 62;
  uint64_t v111 = v13;
  while (1)
  {
    BOOL v29 = v118 >= v28 || v118 <= -1;
    unint64_t v128 = v28;
    unint64_t v11 = v29 ? v28 : v118;
    if (v25)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = v117;
      if (sub_1C2550620() < 0) {
        goto LABEL_141;
      }
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_1C2550620();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v19 = *(void *)(v26 + 16);
      swift_bridgeObjectRetain();
      uint64_t v10 = v117;
    }
    if ((uint64_t)v19 < (uint64_t)v11) {
      goto LABEL_138;
    }
    uint64_t v110 = a7;
    unint64_t v129 = v12;
    if (v116 && v11)
    {
      unint64_t v19 = _s15SizedValueGroupCMa();
      uint64_t v30 = 0;
      do
      {
        uint64_t v31 = v30 + 1;
        sub_1C25503C0();
        uint64_t v30 = v31;
      }
      while (v11 != v31);
    }
    if (v25)
    {
      swift_bridgeObjectRetain();
      a7 = sub_1C2550630();
      uint64_t v13 = v32;
      unint64_t v12 = v33;
      unint64_t v11 = v34;
      swift_bridgeObjectRelease_n();
      if ((v11 & 1) == 0) {
        goto LABEL_40;
      }
    }
    else
    {
      unint64_t v12 = 0;
      a7 = v26;
      uint64_t v13 = v107;
      unint64_t v11 = (2 * v11) | 1;
      if ((v11 & 1) == 0) {
        goto LABEL_40;
      }
    }
    unint64_t v19 = sub_1C25508B0();
    swift_unknownObjectRetain_n();
    uint64_t v35 = swift_dynamicCastClass();
    if (!v35)
    {
      swift_unknownObjectRelease();
      uint64_t v35 = MEMORY[0x1E4FBC860];
    }
    unint64_t v17 = *(void *)(v35 + 16);
    swift_release();
    if (__OFSUB__(v11 >> 1, v12)) {
      goto LABEL_142;
    }
    if (v17 != (v11 >> 1) - v12)
    {
      swift_unknownObjectRelease();
LABEL_40:
      uint64_t v13 = sub_1C228FD60(a7, v13, v12, v11);
      goto LABEL_47;
    }
    uint64_t v13 = swift_dynamicCastClass();
    if (!v13)
    {
      swift_unknownObjectRelease();
      uint64_t v13 = MEMORY[0x1E4FBC860];
    }
LABEL_47:
    swift_unknownObjectRelease();
    if (v13 < 0 || (v13 & 0x4000000000000000) != 0)
    {
      swift_retain();
      a7 = sub_1C2550620();
      if (!a7)
      {
LABEL_71:
        uint64_t v38 = swift_release();
        if (a2 <= 0) {
          goto LABEL_78;
        }
        goto LABEL_72;
      }
    }
    else
    {
      a7 = *(void *)(v13 + 16);
      swift_retain();
      if (!a7) {
        goto LABEL_71;
      }
    }
    if (a7 < 1) {
      goto LABEL_140;
    }
    if ((v13 & 0xC000000000000001) != 0)
    {
      unint64_t v11 = 0;
      uint64_t v36 = 0;
      while (1)
      {
        unint64_t v19 = MEMORY[0x1C87588E0](v11, v13);
        unint64_t v12 = *(void *)(v19 + 48);
        if (v12 >> 62)
        {
          swift_bridgeObjectRetain();
          unint64_t v17 = sub_1C2550620();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          BOOL v37 = __OFADD__(v36, v17);
          v36 += v17;
          if (v37)
          {
LABEL_136:
            __break(1u);
            goto LABEL_137;
          }
        }
        else
        {
          unint64_t v17 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_unknownObjectRelease();
          BOOL v37 = __OFADD__(v36, v17);
          v36 += v17;
          if (v37) {
            goto LABEL_136;
          }
        }
        if (a7 == ++v11) {
          goto LABEL_68;
        }
      }
    }
    unint64_t v12 = 0;
    uint64_t v36 = 0;
    do
    {
      unint64_t v11 = *(void *)(v13 + 8 * v12 + 32);
      unint64_t v19 = *(void *)(v11 + 48);
      if (v19 >> 62)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        unint64_t v17 = sub_1C2550620();
        swift_release();
        swift_bridgeObjectRelease();
        BOOL v37 = __OFADD__(v36, v17);
        v36 += v17;
        if (v37)
        {
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          swift_bridgeObjectRetain();
          uint64_t v106 = sub_1C2550620();
          if (!v106) {
            goto LABEL_148;
          }
          goto LABEL_3;
        }
      }
      else
      {
        unint64_t v17 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
        BOOL v37 = __OFADD__(v36, v17);
        v36 += v17;
        if (v37) {
          goto LABEL_137;
        }
      }
      ++v12;
    }
    while (a7 != v12);
LABEL_68:
    uint64_t v38 = swift_release();
    if (v36 >= a2)
    {
LABEL_78:
      swift_release();
      unint64_t v60 = v104;
      unint64_t v21 = v123;
      unint64_t v61 = v129;
      unint64_t v62 = v115;
      if (v129) {
        goto LABEL_79;
      }
LABEL_82:
      swift_release();
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v60 = 0;
      v60[1] = 0;
      return result;
    }
LABEL_72:
    uint64_t v127 = (void *)MEMORY[0x1C87594F0](v38);
    sub_1C21ACA3C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C255CEB0;
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1C255CEB0;
    unint64_t v11 = *(void *)(v125 + 16);
    uint64_t v40 = *(void *)(v125 + 24);
    uint64_t v41 = *(void *)(v125 + 32);
    uint64_t v43 = *(void **)(v125 + 40);
    uint64_t v42 = *(void *)(v125 + 48);
    uint64_t v44 = *(void *)(v125 + 56);
    char v45 = *(unsigned char *)(v125 + 64);
    uint64_t v46 = *(void *)(v125 + 72);
    sub_1C21F4424(v125 + 88, (uint64_t)v131);
    _s11SizedRecordCMa();
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 128) = 0;
    *(unsigned char *)(v47 + 136) = 1;
    *(void *)(v47 + 16) = v11;
    *(void *)(v47 + 24) = v40;
    *(void *)(v47 + 32) = v41;
    *(void *)(v47 + 40) = v43;
    *(void *)(v47 + 48) = v42;
    *(void *)(v47 + 56) = v44;
    *(unsigned char *)(v47 + 64) = v45;
    *(void *)(v47 + 72) = v46;
    *(void *)(v47 + 80) = v13;
    sub_1C21F44EC(v131, v47 + 88);
    *(void *)(v39 + 32) = v47;
    *(void *)&v131[0] = v39;
    swift_retain();
    swift_retain();
    id v48 = (id)v11;
    id v49 = v43;
    sub_1C254F730();
    uint64_t v50 = *(void *)&v131[0];
    unint64_t v21 = v123;
    uint64_t v51 = *(void **)(v123 + 16);
    a9 = *(uint64_t *)(v123 + 24);
    a8 = *(uint64_t *)(v123 + 32);
    uint64_t v52 = *(void **)(v123 + 40);
    uint64_t v53 = *(void *)(v123 + 48);
    uint64_t v54 = *(void *)(v123 + 56);
    sub_1C21F4424(v114, (uint64_t)v131);
    _s12SizedSectionCMa();
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 112) = 0;
    *(unsigned char *)(v55 + 120) = 1;
    *(void *)(v55 + 128) = 0;
    *(unsigned char *)(v55 + 136) = 1;
    *(void *)(v55 + 144) = 0;
    *(unsigned char *)(v55 + 152) = 1;
    *(void *)(v55 + 16) = v51;
    *(double *)(v55 + 24) = *(double *)&a9;
    *(double *)(v55 + 32) = *(double *)&a8;
    *(void *)(v55 + 40) = v52;
    *(void *)(v55 + 64) = v50;
    *(void *)(v55 + 48) = v53;
    *(void *)(v55 + 56) = v54;
    sub_1C21F44EC(v131, v55 + 72);
    *(void *)(inited + 32) = v55;
    *(void *)&v131[0] = inited;
    id v56 = v51;
    id v57 = v52;
    sub_1C254F730();
    unint64_t v19 = *(void *)&v131[0];
    uint64_t v10 = (uint64_t)a3;
    id v58 = a3;
    id v59 = a6;
    unint64_t v12 = sub_1C246BE30(v19, (uint64_t)a3, a4, a5, (uint64_t)a6, v113, v112);
    swift_release();
    if (sub_1C24690E0() >= a10) {
      break;
    }
    swift_release();
    uint64_t v13 = v111;
    if (v128 == v111)
    {
      swift_retain();
LABEL_85:
      unint64_t v62 = v115;
      goto LABEL_86;
    }
    a7 = v128;
    unint64_t v28 = v128 + 1;
    unint64_t v17 = v115;
    uint64_t v26 = v108;
    unint64_t v25 = v109;
    if (__OFADD__(v128, 1)) {
      goto LABEL_139;
    }
  }
  unint64_t v61 = v129;
  if (*(double *)(v12 + 112) <= a10)
  {
    swift_release();
    swift_retain();
    uint64_t v13 = v128;
    goto LABEL_85;
  }
  swift_release();
  unint64_t v60 = v104;
  unint64_t v62 = v115;
  if (!v129) {
    goto LABEL_82;
  }
LABEL_79:
  swift_retain();
  unint64_t v12 = v61;
  uint64_t v13 = v110;
LABEL_86:
  uint64_t v64 = sub_1C2236D4C(v13, v62);
  uint64_t v66 = v65;
  unint64_t v11 = v67;
  uint64_t v13 = v68;
  swift_bridgeObjectRelease();
  if (v13)
  {
    sub_1C25508B0();
    swift_unknownObjectRetain_n();
    uint64_t v70 = swift_dynamicCastClass();
    if (!v70)
    {
      swift_unknownObjectRelease();
      uint64_t v70 = MEMORY[0x1E4FBC860];
    }
    uint64_t v71 = *(void *)(v70 + 16);
    swift_release();
    if (__OFSUB__((unint64_t)v13 >> 1, v11)) {
      goto LABEL_169;
    }
    if (v71 != ((unint64_t)v13 >> 1) - v11) {
      goto LABEL_170;
    }
    uint64_t v69 = swift_dynamicCastClass();
    if (!v69)
    {
      swift_unknownObjectRelease();
      uint64_t v69 = MEMORY[0x1E4FBC860];
    }
    goto LABEL_94;
  }
  while (2)
  {
    uint64_t v69 = sub_1C228FD60(v64, v66, v11, v13);
LABEL_94:
    swift_unknownObjectRelease();
    uint64_t v13 = sub_1C23C58E0(v69);
    swift_release();
    sub_1C21ACA3C();
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = v130;
    *(void *)(v72 + 32) = v13;
    *(void *)&v131[0] = v72;
    sub_1C254F730();
    unint64_t v17 = *(void *)&v131[0];
    unint64_t v11 = *(void *)(v21 + 64);
    uint64_t v23 = v11 & 0xFFFFFFFFFFFFFF8;
    unint64_t v21 = v11 >> 62;
    if (v11 >> 62)
    {
LABEL_156:
      if ((v11 & 0x8000000000000000) != 0) {
        uint64_t v66 = v11;
      }
      else {
        uint64_t v66 = v23;
      }
      swift_bridgeObjectRetain_n();
      swift_retain();
      uint64_t v73 = sub_1C2550620();
      uint64_t result = swift_bridgeObjectRelease();
      if (v73 < 0) {
        goto LABEL_176;
      }
      if (v73 >= 1) {
        uint64_t v64 = 1;
      }
      else {
        uint64_t v64 = v73;
      }
      swift_bridgeObjectRetain();
      uint64_t v100 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (v100 >= v64)
      {
        swift_bridgeObjectRetain();
        uint64_t v101 = sub_1C2550620();
        swift_bridgeObjectRelease();
        if (v101 >= v73) {
          goto LABEL_99;
        }
        __break(1u);
      }
      goto LABEL_166;
    }
    uint64_t v73 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v73 >= 1) {
      uint64_t v64 = 1;
    }
    else {
      uint64_t v64 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRetain();
    swift_retain();
    if (v73 < (unint64_t)v64)
    {
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
LABEL_99:
    if ((v11 & 0xC000000000000001) != 0 && (unint64_t)v73 >= 2)
    {
      _s11SizedRecordCMa();
      uint64_t v74 = v64;
      do
      {
        uint64_t v75 = v74 + 1;
        sub_1C25503C0();
        uint64_t v74 = v75;
      }
      while (v73 != v75);
    }
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1C2550630();
      uint64_t v76 = v78;
      uint64_t v64 = v79;
      unint64_t v77 = v80;
      swift_bridgeObjectRelease_n();
      if (v77) {
        goto LABEL_108;
      }
      goto LABEL_107;
    }
    uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
    uint64_t v76 = (v11 & 0xFFFFFFFFFFFFFF8) + 32;
    unint64_t v77 = (2 * v73) | 1;
    if ((v77 & 1) == 0)
    {
LABEL_107:
      unint64_t v81 = sub_1C228FB8C(v13, v76, v64, v77);
      goto LABEL_114;
    }
LABEL_108:
    unint64_t v11 = sub_1C25508B0();
    swift_unknownObjectRetain_n();
    uint64_t v82 = swift_dynamicCastClass();
    if (!v82)
    {
      swift_unknownObjectRelease();
      uint64_t v82 = MEMORY[0x1E4FBC860];
    }
    uint64_t v83 = *(void *)(v82 + 16);
    swift_release();
    if (__OFSUB__(v77 >> 1, v64))
    {
      __break(1u);
      goto LABEL_172;
    }
    if (v83 != (v77 >> 1) - v64)
    {
LABEL_172:
      swift_unknownObjectRelease();
      goto LABEL_107;
    }
    unint64_t v81 = swift_dynamicCastClass();
    if (!v81)
    {
      swift_unknownObjectRelease();
      unint64_t v81 = MEMORY[0x1E4FBC860];
    }
LABEL_114:
    swift_unknownObjectRelease();
    *(void *)&v131[0] = v17;
    sub_1C22725F0(v81);
    unint64_t v21 = sub_1C23C59D4(*(uint64_t *)&v131[0]);
    swift_bridgeObjectRelease();
    uint64_t v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = v130;
    *(void *)(v84 + 32) = v21;
    *(void *)&v131[0] = v84;
    uint64_t v64 = (uint64_t)v131;
    uint64_t result = sub_1C254F730();
    if ((v106 & 0x8000000000000000) == 0)
    {
      uint64_t v66 = *(void *)&v131[0];
      if (v105)
      {
        swift_bridgeObjectRetain();
        swift_retain();
        if (sub_1C2550620() < 1) {
          goto LABEL_167;
        }
        swift_bridgeObjectRetain();
        uint64_t v85 = sub_1C2550620();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v85 = *(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_retain();
        if (!v85)
        {
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          swift_unknownObjectRelease();
          continue;
        }
      }
      if (v85 >= v106)
      {
        if (v102 && v106 != 1)
        {
          _s12SizedSectionCMa();
          uint64_t v86 = 1;
          do
          {
            uint64_t v87 = v86 + 1;
            sub_1C25503C0();
            uint64_t v86 = v87;
          }
          while (v106 != v87);
        }
        if (!v105)
        {
          uint64_t v88 = v103 & 0xFFFFFFFFFFFFFF8;
          uint64_t v89 = (v103 & 0xFFFFFFFFFFFFFF8) + 32;
          uint64_t v90 = 1;
          unint64_t v91 = (2 * v106) | 1;
          goto LABEL_129;
        }
        swift_bridgeObjectRetain();
        uint64_t v88 = sub_1C2550630();
        uint64_t v89 = v92;
        uint64_t v90 = v93;
        unint64_t v91 = v94;
        swift_bridgeObjectRelease_n();
        if ((v91 & 1) == 0)
        {
LABEL_128:
          unint64_t v95 = sub_1C228FBA4(v88, v89, v90, v91);
LABEL_135:
          swift_unknownObjectRelease();
          *(void *)&v131[0] = v66;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C22725D8(v95);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          uint64_t result = swift_release();
          uint64_t v99 = *(void *)&v131[0];
          *uint64_t v104 = v12;
          v104[1] = v99;
          return result;
        }
LABEL_129:
        uint64_t v96 = v89;
        sub_1C25508B0();
        swift_unknownObjectRetain_n();
        uint64_t v97 = swift_dynamicCastClass();
        if (!v97)
        {
          swift_unknownObjectRelease();
          uint64_t v97 = MEMORY[0x1E4FBC860];
        }
        uint64_t v98 = *(void *)(v97 + 16);
        swift_release();
        if (__OFSUB__(v91 >> 1, v90))
        {
          __break(1u);
        }
        else if (v98 == (v91 >> 1) - v90)
        {
          unint64_t v95 = swift_dynamicCastClass();
          if (!v95)
          {
            swift_unknownObjectRelease();
            unint64_t v95 = MEMORY[0x1E4FBC860];
          }
          goto LABEL_135;
        }
        swift_unknownObjectRelease();
        uint64_t v89 = v96;
        goto LABEL_128;
      }
      goto LABEL_168;
    }
    break;
  }
  __break(1u);
LABEL_176:
  __break(1u);
  return result;
}

void sub_1C22366E4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, void *a13, uint64_t a14, uint64_t a15, void *a16)
{
  uint64_t v26 = a9;
  if (a1 >= a2)
  {
    *a9 = a3;
    a9[1] = a4;
    swift_retain();
    return;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v19 = a1 + (a2 - a1) / 2;
  if (__OFADD__(a1, (a2 - a1) / 2))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  double v21 = a12;
  double v22 = a11;
  double v23 = a10;
  unint64_t v18 = a8;
  uint64_t v20 = a7;
  uint64_t v70 = a1;
  uint64_t v71 = a2;
  uint64_t v78 = a5;
  sub_1C21ACA3C();
  uint64_t v79 = 1;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CEB0;
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = xmmword_1C255CEB0;
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1C255CEB0;
  uint64_t v69 = v19;
  if (__OFADD__(v19++, 1))
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v19 < 0)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  unint64_t v16 = v27;
  unint64_t v77 = v18 >> 62;
  if (!(v18 >> 62))
  {
    uint64_t v29 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v29 >= v19) {
      goto LABEL_8;
    }
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
LABEL_54:
  swift_bridgeObjectRetain();
  if (sub_1C2550620() < 0)
  {
    __break(1u);
LABEL_63:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v65 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (v65 < v19) {
    goto LABEL_56;
  }
LABEL_8:
  uint64_t v74 = v17;
  if ((v18 & 0xC000000000000001) != 0 && v19)
  {
    _s10SizedValueCMa();
    uint64_t v30 = 0;
    do
    {
      uint64_t v31 = v30 + 1;
      sub_1C25503C0();
      uint64_t v30 = v31;
    }
    while (v19 != v31);
  }
  uint64_t v67 = a4;
  uint64_t v68 = a3;
  uint64_t v73 = v26;
  if (v77)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1C2550630();
    uint64_t v34 = v36;
    uint64_t v32 = v37;
    unint64_t v35 = v38;
    swift_bridgeObjectRelease_n();
    uint64_t v72 = v20;
    if ((v35 & 1) == 0)
    {
LABEL_16:
      uint64_t v39 = sub_1C228FD78(v33, v34, v32, v35);
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v33 = v18 & 0xFFFFFFFFFFFFFF8;
    uint64_t v34 = (v18 & 0xFFFFFFFFFFFFFF8) + 32;
    unint64_t v35 = (2 * v19) | 1;
    uint64_t v72 = v20;
  }
  uint64_t v40 = (void *)sub_1C25508B0();
  swift_unknownObjectRetain_n();
  uint64_t v41 = swift_dynamicCastClass();
  if (!v41)
  {
    swift_unknownObjectRelease();
    uint64_t v41 = MEMORY[0x1E4FBC860];
  }
  uint64_t v42 = *(void **)(v41 + 16);
  swift_release();
  if (__OFSUB__(v35 >> 1, v32))
  {
    __break(1u);
LABEL_59:
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v66 > 1) {
      goto LABEL_32;
    }
    goto LABEL_28;
  }
  if (v42 != (void *)((v35 >> 1) - v32))
  {
    swift_unknownObjectRelease();
    uint64_t v20 = v72;
    goto LABEL_16;
  }
  uint64_t v39 = swift_dynamicCastClass();
  uint64_t v20 = v72;
  if (!v39)
  {
    swift_unknownObjectRelease();
    uint64_t v39 = MEMORY[0x1E4FBC860];
  }
LABEL_23:
  swift_unknownObjectRelease();
  uint64_t v44 = *(void **)(v20 + 16);
  uint64_t v43 = *(void *)(v20 + 24);
  uint64_t v45 = *(void *)(v20 + 32);
  char v46 = *(unsigned char *)(v20 + 40);
  _s15SizedValueGroupCMa();
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v44;
  *(void *)(v47 + 24) = v43;
  *(void *)(v47 + 32) = v45;
  *(unsigned char *)(v47 + 40) = v46;
  *(void *)(v47 + 48) = v39;
  *(void *)(v16 + 32) = v47;
  sub_1C254F730();
  uint64_t v48 = sub_1C23C58E0(v16);
  id v49 = v44;
  swift_bridgeObjectRelease();
  *(void *)(v75 + 32) = v48;
  sub_1C254F730();
  uint64_t v50 = sub_1C23C59D4(v75);
  swift_bridgeObjectRelease();
  *(void *)(inited + 32) = v50;
  *(void *)&long long v81 = inited;
  sub_1C254F730();
  unint64_t v16 = inited;
  unint64_t v51 = *(void *)(v78 + 64);
  if (!(v51 >> 62))
  {
    uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_25;
  }
LABEL_57:
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_1C2550620();
  swift_bridgeObjectRelease();
LABEL_25:
  uint64_t v33 = a15;
  uint64_t v40 = a16;
  uint64_t v79 = a14;
  uint64_t v42 = a13;
  if (v52 > 1) {
    goto LABEL_32;
  }
  unint64_t v53 = *(void *)(a6 + 80);
  if (v53 >> 62) {
    goto LABEL_59;
  }
  if (*(uint64_t *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1) {
    goto LABEL_32;
  }
LABEL_28:
  if (!v77)
  {
    if (v19 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_43;
    }
LABEL_32:
    uint64_t v55 = *(void *)&v23;
    uint64_t v56 = *(void *)&v22;
    id v57 = v40;
    uint64_t v58 = (uint64_t)v40;
    goto LABEL_33;
  }
  swift_bridgeObjectRetain();
  uint64_t v54 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (v19 < v54) {
    goto LABEL_32;
  }
LABEL_43:
  uint64_t v58 = 0;
  uint64_t v55 = 0;
  uint64_t v56 = 0;
LABEL_33:
  id v59 = v42;
  uint64_t v60 = sub_1C246BE30(v16, (uint64_t)v42, v79, v33, v58, v55, v56);
  if (sub_1C24690E0() < v21)
  {
    unint64_t v61 = v73;
    if (v19 < v71)
    {
      uint64_t v62 = swift_retain();
      uint64_t v26 = (uint64_t *)MEMORY[0x1C87594F0](v62);
      sub_1C22366E4(&v81, v19, v71, v60, v19, v78, a6, v72, v18, v23, v22, v21, v42, v79, v33, v40);
      if (!v74)
      {
        swift_release_n();
LABEL_41:
        *(_OWORD *)unint64_t v61 = v81;
        return;
      }
      goto LABEL_63;
    }
LABEL_42:
    uint64_t *v61 = v60;
    v61[1] = v19;
    return;
  }
  unint64_t v61 = v73;
  if (*(double *)(v60 + 112) <= v21) {
    goto LABEL_42;
  }
  if (v69 > v70)
  {
    uint64_t v26 = (uint64_t *)MEMORY[0x1C87594F0]();
    sub_1C22366E4(&v81, v70, v69, v68, v67, v78, a6, v72, v18, v23, v22, v21, v42, v79, v33, v40);
    if (!v74)
    {
      swift_release();
      goto LABEL_41;
    }
    goto LABEL_63;
  }
  if (v68)
  {
    swift_retain();
    swift_release();
    *uint64_t v73 = v68;
    v73[1] = v67;
  }
  else
  {
    uint64_t v63 = sub_1C2236FCC(v60, v21);
    swift_release();
    if (v63) {
      uint64_t v64 = v19;
    }
    else {
      uint64_t v64 = 0;
    }
    *uint64_t v73 = v63;
    v73[1] = v64;
  }
}

uint64_t sub_1C2236D4C(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C2550620();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v5 < v7)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C2550620();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7) {
    goto LABEL_34;
  }
  if (v7 < 0)
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C2550620();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9 < v5) {
    goto LABEL_36;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7 != v5)
  {
    if (v7 < (unint64_t)v5)
    {
      _s15SizedValueGroupCMa();
      uint64_t v10 = v7;
      do
      {
        uint64_t v11 = v10 + 1;
        sub_1C25503C0();
        uint64_t v10 = v11;
      }
      while (v5 != v11);
      goto LABEL_27;
    }
LABEL_37:
    __break(1u);
    return result;
  }
LABEL_27:
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C2550630();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

unint64_t sub_1C2236F1C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_1C254F590();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_1C254F630();
}

uint64_t sub_1C2236FCC(uint64_t a1, double a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v49 != 1) {
      return 0;
    }
  }
  else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
    return 0;
  }
  unint64_t v5 = v4 & 0xC000000000000001;
  if ((v4 & 0xC000000000000001) != 0)
  {
    uint64_t v50 = *(void *)(MEMORY[0x1C87588E0](0, v4) + 64);
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    if ((v50 & 0x8000000000000000) == 0 && (v50 & 0x4000000000000000) == 0)
    {
      uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      if (v51 != 1) {
        return 0;
      }
LABEL_67:
      uint64_t v7 = MEMORY[0x1C87588E0](0, v4);
      goto LABEL_10;
    }
LABEL_65:
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_1C2550620();
    swift_bridgeObjectRelease_n();
    if (v52 != 1) {
      return 0;
    }
    if (!v5) {
      goto LABEL_78;
    }
    goto LABEL_67;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_64:
    swift_bridgeObjectRetain();
    goto LABEL_65;
  }
  uint64_t v6 = *(void *)(*(void *)(v4 + 32) + 64);
  if (v6 < 0 || (v6 & 0x4000000000000000) != 0) {
    goto LABEL_64;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
    return 0;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_79:
    __break(1u);
LABEL_80:
    uint64_t v17 = MEMORY[0x1C87588E0](0);
LABEL_36:
    uint64_t v20 = *(void *)(v17 + 80);
    if ((v20 & 0xC000000000000001) != 0) {
      goto LABEL_82;
    }
    if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      unint64_t v5 = *(void *)(v20 + 32);
      uint64_t result = swift_retain();
      goto LABEL_39;
    }
    __break(1u);
LABEL_84:
    uint64_t v22 = MEMORY[0x1C87588E0](0);
LABEL_42:
    double v23 = sub_1C23C5ABC((void *)(v17 + 88));
    double v24 = v23 - (sub_1C24690E0() - a2);
    if (v24 > 0.0)
    {
      uint64_t v25 = *(void *)(v22 + 16);
      uint64_t v26 = *(void *)(v22 + 24);
      uint64_t v27 = *(void *)(v22 + 32);
      int64_t v28 = *(void *)(v27 + 16);
      if (v28)
      {
        uint64_t v57 = MEMORY[0x1E4FBC860];
        uint64_t v56 = *(void *)(v22 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C2274ACC(0, v28, 0);
        uint64_t v29 = 0;
        uint64_t v30 = v57;
        unint64_t v31 = *(void *)(v57 + 16);
        do
        {
          uint64_t v32 = v27 + 8 * v29;
          if (v24 >= *(double *)(v32 + 32)) {
            double v33 = *(double *)(v32 + 32);
          }
          else {
            double v33 = v24;
          }
          unint64_t v34 = *(void *)(v57 + 24);
          if (v31 >= v34 >> 1) {
            sub_1C2274ACC(v34 > 1, v31 + 1, 1);
          }
          ++v29;
          *(void *)(v57 + 16) = v31 + 1;
          *(double *)(v57 + 8 * v31++ + 32) = v33;
        }
        while (v28 != v29);
        swift_bridgeObjectRelease();
        uint64_t v25 = v56;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v30 = MEMORY[0x1E4FBC860];
      }
      char v36 = *(unsigned char *)(v22 + 40);
      _s10SizedValueCMa();
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 48) = 0;
      *(unsigned char *)(v37 + 56) = 1;
      *(void *)(v37 + 16) = v25;
      *(void *)(v37 + 24) = v26;
      *(void *)(v37 + 32) = v30;
      *(unsigned char *)(v37 + 40) = v36;
      sub_1C21ACA3C();
      uint64_t v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = xmmword_1C255CEB0;
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1C255CEB0;
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_1C255CEB0;
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_1C255CEB0;
      *(void *)(v40 + 32) = v37;
      uint64_t v58 = v40;
      sub_1C254F730();
      uint64_t v42 = *(void **)(v5 + 16);
      uint64_t v41 = *(void *)(v5 + 24);
      uint64_t v43 = *(void *)(v5 + 32);
      char v44 = *(unsigned char *)(v5 + 40);
      _s15SizedValueGroupCMa();
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v42;
      *(void *)(v45 + 24) = v41;
      *(void *)(v45 + 32) = v43;
      *(unsigned char *)(v45 + 40) = v44;
      *(void *)(v45 + 48) = v58;
      *(void *)(v39 + 32) = v45;
      sub_1C254F730();
      uint64_t v46 = sub_1C23C58E0(v39);
      id v47 = v42;
      swift_retain();
      swift_bridgeObjectRelease();
      *(void *)(v38 + 32) = v46;
      sub_1C254F730();
      uint64_t v48 = sub_1C23C59D4(v38);
      swift_bridgeObjectRelease();
      *(void *)(v55 + 32) = v48;
      sub_1C254F730();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v35 = sub_1C2469118(v55, *(void **)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64));
      swift_bridgeObjectRelease();
      return v35;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return 0;
  }
  while (1)
  {
    uint64_t v7 = *(void *)(v4 + 32);
    swift_retain();
LABEL_10:
    uint64_t v8 = *(void *)(v7 + 64);
    swift_bridgeObjectRetain();
    swift_release();
    if ((v8 & 0xC000000000000001) != 0)
    {
      uint64_t v53 = MEMORY[0x1C87588E0](0, v8);
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(v53 + 80);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      if ((v10 & 0x8000000000000000) == 0 && (v10 & 0x4000000000000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_70;
    }
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      break;
    }
    __break(1u);
LABEL_72:
    uint64_t v14 = MEMORY[0x1C87588E0](0, v8);
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v8 = *(void *)(v14 + 80);
    swift_bridgeObjectRetain();
    swift_release();
    if ((v8 & 0xC000000000000001) != 0) {
      goto LABEL_74;
    }
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v15 = *(void *)(v8 + 32);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(v15 + 48);
      swift_bridgeObjectRetain();
      swift_release();
      if ((v16 & 0x8000000000000000) == 0 && (v16 & 0x4000000000000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_76;
    }
    __break(1u);
LABEL_78:
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_79;
    }
  }
  uint64_t v9 = *(void *)(v8 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v9 + 80);
  swift_bridgeObjectRetain();
  swift_release();
  if ((v10 & 0x8000000000000000) == 0 && (v10 & 0x4000000000000000) == 0)
  {
LABEL_14:
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_15;
  }
LABEL_70:
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C2550620();
  swift_bridgeObjectRelease();
LABEL_15:
  uint64_t result = swift_bridgeObjectRelease();
  if (v11 != 1) {
    return 0;
  }
  if (v5)
  {
    uint64_t v13 = MEMORY[0x1C87588E0](0, v4);
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_86;
    }
    uint64_t v13 = *(void *)(v4 + 32);
    swift_retain();
  }
  uint64_t v8 = *(void *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_release();
  if ((v8 & 0xC000000000000001) != 0) {
    goto LABEL_72;
  }
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v14 = *(void *)(v8 + 32);
    swift_retain();
    goto LABEL_23;
  }
  __break(1u);
LABEL_74:
  uint64_t v54 = MEMORY[0x1C87588E0](0, v8);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v54 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  if ((v16 & 0x8000000000000000) == 0 && (v16 & 0x4000000000000000) == 0)
  {
LABEL_27:
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_28;
  }
LABEL_76:
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C2550620();
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t result = swift_bridgeObjectRelease();
  if (v17 != 1) {
    return 0;
  }
  if (v5)
  {
    uint64_t v18 = MEMORY[0x1C87588E0](0, v4);
    goto LABEL_33;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_87;
  }
  uint64_t v18 = *(void *)(v4 + 32);
  swift_retain();
LABEL_33:
  uint64_t v19 = *(void *)(v18 + 64);
  if ((v19 & 0xC000000000000001) != 0) {
    goto LABEL_80;
  }
  if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v17 = *(void *)(v19 + 32);
    swift_retain();
    goto LABEL_36;
  }
  __break(1u);
LABEL_82:
  uint64_t result = MEMORY[0x1C87588E0](0);
  unint64_t v5 = result;
LABEL_39:
  uint64_t v21 = *(void *)(v5 + 48);
  if ((v21 & 0xC000000000000001) != 0) {
    goto LABEL_84;
  }
  if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v22 = *(void *)(v21 + 32);
    swift_retain();
    goto LABEL_42;
  }
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
  return result;
}

unint64_t MedicalRecordChartingError.description.getter()
{
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    if (*(void *)v0) {
      return 0xD000000000000013;
    }
    else {
      return 0xD00000000000001BLL;
    }
  }
  else
  {
    sub_1C25503A0();
    sub_1C254F5A0();
    sub_1C2550810();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    return 0;
  }
}

uint64_t getEnumTagSinglePayload for MedicalRecordChartingError(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MedicalRecordChartingError(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1C22378D8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C22378F4(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicalRecordChartingError()
{
  return &type metadata for MedicalRecordChartingError;
}

uint64_t type metadata accessor for ClinicalSharingThingsToKnowViewController()
{
  uint64_t result = qword_1EA2DEDF8;
  if (!qword_1EA2DEDF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2237970()
{
  return swift_initClassMetadata2();
}

void sub_1C22379D0(void *a1)
{
  v3.receiver = a1;
  v3.super_class = (Class)type metadata accessor for ClinicalSharingThingsToKnowViewController();
  uint64_t v1 = (char *)v3.receiver;
  objc_msgSendSuper2(&v3, sel_viewDidLoad);
  if (*(void *)(*(void *)&v1[qword_1EA2DEDE0] + OBJC_IVAR___WDClinicalAccountOnboardingSession_context) == 2)
  {
    id v2 = objc_msgSend(v1, sel_navigationItem, v3.receiver, v3.super_class);
    objc_msgSend(v2, sel_setRightBarButtonItem_, 0);
  }
  sub_1C2237A84();
}

void sub_1C2237A84()
{
  sub_1C2201F2C();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C255CDA0;
  *(void *)(v1 + 32) = sub_1C254F470();
  *(void *)(v1 + 40) = v2;
  strcpy((char *)(v1 + 48), "YouShouldKnow");
  *(_WORD *)(v1 + 62) = -4864;
  objc_super v3 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v4)
  {
    uint64_t v5 = sub_1C254F470();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  id v8 = objc_msgSend(v0, sel_navigationItem, 2, 4);
  id v9 = objc_msgSend(v8, sel_leftBarButtonItem);

  if (v9)
  {
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = v21;
    if (!v7)
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    *(void *)(v10 + 32) = v5;
    *(void *)(v10 + 40) = v7;
    *(void *)(v10 + 48) = 1801675074;
    *(void *)(v10 + 56) = 0xE400000000000000;
    swift_bridgeObjectRetain();
    uint64_t v11 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v12 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v12);
  }
  id v13 = objc_msgSend(v0, sel_navigationItem);
  id v14 = objc_msgSend(v13, sel_rightBarButtonItem);

  if (v14)
  {
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = v21;
    if (!v7)
    {
LABEL_18:
      __break(1u);
      return;
    }
    *(void *)(v15 + 32) = v5;
    *(void *)(v15 + 40) = v7;
    *(void *)(v15 + 48) = 0x6C65636E6143;
    *(void *)(v15 + 56) = 0xE600000000000000;
    swift_bridgeObjectRetain();
    uint64_t v16 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v17 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v14, sel_setAccessibilityIdentifier_, v17);
  }
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = v21;
  if (!v7)
  {
    __break(1u);
    goto LABEL_16;
  }
  *(void *)(v18 + 32) = v5;
  *(void *)(v18 + 40) = v7;
  *(void *)(v18 + 48) = 1954047310;
  *(void *)(v18 + 56) = 0xE400000000000000;
  uint64_t v19 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v20 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (!v20)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  sub_1C254F470();

  sub_1C254E040();
  swift_bridgeObjectRelease();
}

void sub_1C2237DBC()
{
  uint64_t v1 = *(void **)&v0[qword_1EA2DEDE0];
  uint64_t v2 = *(void **)&v0[qword_1EA2DEDE8];
  uint64_t v3 = *(void *)&v0[qword_1EA2DEDF0];
  id v4 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingOnboardingDataTypeSelectionViewController(0));
  uint64_t v5 = v1;
  id v6 = v2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C2209038(v5, v6, v3);
  objc_msgSend(v0, sel_showViewController_sender_, v7, 0);
  id v8 = *(void **)&v5[OBJC_IVAR___WDClinicalAccountOnboardingSession_sharingClient];
  id v9 = (void *)sub_1C254F430();
  sub_1C22CC2DC(*(void *)&v5[OBJC_IVAR___WDClinicalAccountOnboardingSession_context]);
  uint64_t v10 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  _OWORD v12[4] = nullsub_1;
  v12[5] = 0;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1C22AE944;
  uint64_t v12[3] = &block_descriptor_15;
  uint64_t v11 = _Block_copy(v12);
  objc_msgSend(v8, sel_submitOnboardingAnalyticsForStepIdentifier_context_completion_, v9, v10, v11);
  _Block_release(v11);
}

void sub_1C2237F5C()
{
}

uint64_t sub_1C2237F8C()
{
  return swift_bridgeObjectRelease();
}

id sub_1C2237FDC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingThingsToKnowViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2238014(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2238070()
{
  return type metadata accessor for ClinicalSharingThingsToKnowViewController();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

void sub_1C2238080(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = sub_1C254D480();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v42 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  id v12 = (char *)v40 - v11;
  MEMORY[0x1F4188790](v10);
  id v14 = (char *)v40 - v13;
  *(void *)(v3 + qword_1EA2DEDE0) = a1;
  *(void *)(v3 + qword_1EA2DEDE8) = a2;
  uint64_t v46 = v3;
  *(void *)(v3 + qword_1EA2DEDF0) = a3;
  sub_1C2201F2C();
  uint64_t v15 = swift_allocObject();
  long long v43 = xmmword_1C255D0E0;
  *(_OWORD *)(v15 + 16) = xmmword_1C255D0E0;
  *(void *)(v15 + 32) = sub_1C254F470();
  *(void *)(v15 + 40) = v16;
  strcpy((char *)(v15 + 48), "YouShouldKnow");
  *(_WORD *)(v15 + 62) = -4864;
  *(void *)(v15 + 64) = 0x4964656B63617453;
  *(void *)(v15 + 72) = 0xEB000000006D6574;
  id v17 = a1;
  id v18 = a2;
  uint64_t v19 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v20 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v20)
  {
    sub_1C254F470();
  }
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v21 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRetain();
  id v47 = v14;
  sub_1C254D470();
  id v22 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRetain();
  sub_1C254D470();
  double v23 = self;
  double v24 = (void *)sub_1C254F430();
  id v25 = objc_msgSend(v23, sel_modelSpecificLocalizedStringKeyForKey_, v24);

  uint64_t v41 = v12;
  if (v25)
  {
    sub_1C254F470();

    id v26 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v27 = v42;
    sub_1C254D470();
    id v28 = (id)qword_1EBB6D998;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1C254C730();
    v40[0] = v30;
    v40[1] = v29;
    swift_bridgeObjectRelease();

    sub_1C2238660();
    uint64_t v31 = v44;
    uint64_t v32 = *(void *)(v44 + 72);
    unint64_t v33 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = v43;
    unint64_t v35 = v34 + v33;
    char v36 = *(void (**)(unint64_t, char *, uint64_t))(v31 + 16);
    uint64_t v37 = v45;
    v36(v35, v47, v45);
    uint64_t v38 = v41;
    v36(v35 + v32, v41, v37);
    v36(v35 + 2 * v32, v27, v37);
    sub_1C254DFF0();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v31 + 8);
    v39(v27, v37);
    v39(v38, v37);
    v39(v47, v37);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C2238660()
{
  if (!qword_1EA2DEE08)
  {
    sub_1C254D480();
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DEE08);
    }
  }
}

uint64_t type metadata accessor for RecordDisplayNamesDataSource()
{
  uint64_t result = qword_1EA2DEE20;
  if (!qword_1EA2DEE20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2238704()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C2238754(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  uint64_t v2 = sub_1C254F710();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C22387D8(unint64_t a1)
{
  uint64_t v8 = MEMORY[0x1E4FBC860];
  sub_1C2550490();
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x1C87588E0](v3, a1);
LABEL_7:
        uint64_t v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_12;
        }
        sub_1C2238CD8(v3, v4);

        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
        ++v3;
        if (v6 == v2) {
          goto LABEL_14;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_12:
      __break(1u);
LABEL_13:
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_1C2550620();
      if (!v2) {
        goto LABEL_14;
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_7;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C2238928(void *a1, void *a2)
{
  *(void *)(v2 + qword_1EA2DEE10) = a1;
  *(void *)(v2 + qword_1EA2DEEsub_1C21FCB18(3, 18) = a2;
  id v4 = a1;
  id v5 = a2;
  uint64_t v6 = sub_1C254DF10();
  uint64_t v7 = *(void **)(v6 + qword_1EA2DEE10);
  uint64_t v8 = *(void *)(v6 + qword_1EA2DEE18);
  _OWORD v12[4] = sub_1C22391A8;
  v12[5] = v6;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  v12[2] = sub_1C2238754;
  uint64_t v12[3] = &block_descriptor_16;
  uint64_t v9 = _Block_copy(v12);
  swift_retain_n();
  id v10 = v7;
  swift_release();
  objc_msgSend(v10, sel_fetchDisplayNameItemWithHealthRecordsStore_completion_, v8, v9);
  _Block_release(v9);
  swift_release();

  return v6;
}

uint64_t sub_1C2238A88()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DA90();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C2238B5C()
{
  uint64_t v0 = sub_1C254F230();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (uint64_t *)&v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = sub_1C22387D8(v4);
  swift_bridgeObjectRelease();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t *v3 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBCBF0], v0);
  char v6 = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if (v6)
  {
    sub_1C228A7B0(v5);
    swift_bridgeObjectRelease();
    sub_1C254DA30();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1C2238CD8(uint64_t a1, void *a2)
{
  sub_1C2201F2C();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C255D0E0;
  *(void *)(v3 + 32) = sub_1C254F470();
  *(void *)(v3 + 40) = v4;
  *(void *)(v3 + 48) = 0x4E79616C70736944;
  *(void *)(v3 + 56) = 0xEF6C6C6543656D61;
  *(void *)(v3 + 64) = sub_1C2550810();
  *(void *)(v3 + 72) = v5;
  char v6 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v7 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v7)
  {
    uint64_t v8 = sub_1C254F470();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  uint64_t result = objc_msgSend(a2, sel_title);
  if (result)
  {
    id v12 = result;
    uint64_t v13 = sub_1C254F470();
    uint64_t v15 = v14;

    id v16 = objc_msgSend(a2, sel_subtitle);
    if (v16)
    {
      id v17 = v16;
      uint64_t v18 = sub_1C254F470();
      uint64_t v20 = v19;
    }
    else
    {
      uint64_t v18 = 0;
      uint64_t v20 = 0;
    }
    type metadata accessor for TitleSubtitleDetailItem(0);
    id v21 = (void *)swift_allocObject();
    sub_1C254CB30();
    v21[2] = v13;
    v21[3] = v15;
    uint64_t v22 = MEMORY[0x1E4FBC860];
    void v21[4] = v18;
    v21[5] = v20;
    v21[6] = 0;
    v21[7] = v22;
    v21[8] = v8;
    v21[9] = v10;
    return v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C2238EA8()
{
}

void sub_1C2238EC4()
{
}

void sub_1C2238EE0()
{
}

void sub_1C2238F0C()
{
  uint64_t v1 = *(void **)(v0 + qword_1EA2DEE18);
}

uint64_t sub_1C2238F4C()
{
  uint64_t v0 = sub_1C254DF40();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2238FAC()
{
  return type metadata accessor for RecordDisplayNamesDataSource();
}

unint64_t sub_1C2238FB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C254E890();
  MEMORY[0x1F4188790](v2 - 8);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C254E810();
  uint64_t v4 = sub_1C254D2A0();
  swift_allocObject();
  uint64_t v5 = sub_1C254D280();
  a1[3] = v4;
  unint64_t result = sub_1C2239150();
  a1[4] = result;
  *a1 = v5;
  return result;
}

unint64_t sub_1C2239138@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2238FB4(a1);
}

unint64_t sub_1C2239150()
{
  unint64_t result = qword_1EBB6E7D8;
  if (!qword_1EBB6E7D8)
  {
    sub_1C254D2A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6E7D8);
  }
  return result;
}

uint64_t sub_1C22391A8()
{
  return sub_1C2238B5C();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

double sub_1C22391B8()
{
  double result = 13.0;
  xmmword_1EA3037E0 = xmmword_1C255E0F0;
  *(_OWORD *)&qword_1EA3037F0 = xmmword_1C255E100;
  return result;
}

void sub_1C22391D8()
{
  qword_1EA303800 = 0x4020000000000000;
}

id sub_1C22391E8()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v0, sel_setNumberOfLines_, 1);
  objc_msgSend(v0, sel_setLineBreakMode_, 0);
  LODWORD(v1) = 1148846080;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 1, v1);
  LODWORD(v2) = 1148846080;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v2);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v3);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v0;
}

id sub_1C22392C4()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___bottomConstraint;
  double v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___bottomConstraint];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___bottomConstraint];
  }
  else
  {
    id v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel], sel_bottomAnchor);
    id v5 = objc_msgSend(v0, sel_bottomAnchor);
    if (qword_1EA2DD4D8 != -1) {
      swift_once();
    }
    id v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, *(double *)&qword_1EA3037F0);

    id v7 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v6;
    id v3 = v6;

    double v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1C22393C4()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateChevronConstraint;
  double v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateChevronConstraint);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateChevronConstraint);
  }
  else
  {
    id v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_chevronView), sel_leadingAnchor);
    id v5 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel), sel_trailingAnchor);
    if (qword_1EA2DD4E0 != -1) {
      swift_once();
    }
    id v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, *(double *)&qword_1EA303800);

    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    double v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1C22394D0()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateTrailingConstraint;
  double v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateTrailingConstraint];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateTrailingConstraint];
  }
  else
  {
    id v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel], sel_trailingAnchor);
    id v5 = objc_msgSend(v0, sel_trailingAnchor);
    if (qword_1EA2DD4D8 != -1) {
      swift_once();
    }
    id v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, -*(double *)&qword_1EA3037F8);

    id v7 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v6;
    id v3 = v6;

    double v2 = 0;
  }
  id v8 = v2;
  return v3;
}

void *sub_1C22395D4()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_headerImage);
  swift_beginAccess();
  double v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1C2239624(void *a1)
{
}

uint64_t (*sub_1C2239630())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C223968C()
{
  return sub_1C223A124(&OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title);
}

uint64_t sub_1C2239698(uint64_t a1, uint64_t a2)
{
  return sub_1C2239780(a1, a2, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title);
}

uint64_t (*sub_1C22396A4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C2239700(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  id v7 = (void *)(*a2 + *a5);
  swift_beginAccess();
  void *v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2239768()
{
  return sub_1C223A124(&OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateString);
}

uint64_t sub_1C2239774(uint64_t a1, uint64_t a2)
{
  return sub_1C2239780(a1, a2, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateString);
}

uint64_t sub_1C2239780(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)(v3 + *a3);
  swift_beginAccess();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C22397DC())()
{
  return j__swift_endAccess;
}

void sub_1C2239838(void **a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (void **)(*a2 + *a5);
  swift_beginAccess();
  id v7 = *v6;
  *uint64_t v6 = v5;
  id v8 = v5;
}

void *sub_1C2239898()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_categoryColor);
  swift_beginAccess();
  double v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1C22398E8(void *a1)
{
}

void sub_1C22398F4(void *a1, void *a2)
{
  id v4 = (void **)(v2 + *a2);
  swift_beginAccess();
  uint64_t v5 = *v4;
  *id v4 = a1;
}

uint64_t (*sub_1C2239944())()
{
  return j_j__swift_endAccess;
}

void sub_1C22399E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_chevronView);
  id v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron);
  swift_beginAccess();
  objc_msgSend(v2, sel_setHidden_, *v3);
  id v4 = sub_1C22393C4();
  objc_msgSend(v4, sel_setActive_, (*v3 & 1) == 0);

  id v5 = sub_1C22394D0();
  objc_msgSend(v5, sel_setActive_, *v3);

  int v6 = *v3;
  id v7 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel);
  if (v6 == 1)
  {
    objc_msgSend(v7, sel_setLineBreakMode_, 4);
    type metadata accessor for UILayoutPriority(0);
    sub_1C223D354((unint64_t *)&qword_1EA2DEEC0, type metadata accessor for UILayoutPriority);
    sub_1C254E580();
    LODWORD(v8) = v11;
    objc_msgSend(v7, sel_setContentCompressionResistancePriority_forAxis_, 0, v8);
    LODWORD(v9) = 1132068864;
  }
  else
  {
    objc_msgSend(v7, sel_setLineBreakMode_, 0);
    type metadata accessor for UILayoutPriority(0);
    sub_1C223D354((unint64_t *)&qword_1EA2DEEC0, type metadata accessor for UILayoutPriority);
    sub_1C254E570();
    LODWORD(v10) = v11;
    objc_msgSend(v7, sel_setContentCompressionResistancePriority_forAxis_, 0, v10);
    LODWORD(v9) = 1148846080;
  }
  objc_msgSend(v7, sel_setContentCompressionResistancePriority_forAxis_, 1, v9);
  sub_1C223B878();
}

uint64_t sub_1C2239BF0()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron);
  swift_beginAccess();
  return *v1;
}

void sub_1C2239C38(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron);
  swift_beginAccess();
  unsigned char *v3 = a1;
  sub_1C22399E4();
}

uint64_t (*sub_1C2239C90(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2239CF0;
}

uint64_t sub_1C2239CF0(uint64_t a1, char a2)
{
  return sub_1C223AB18(a1, a2, (uint64_t (*)(uint64_t))sub_1C22399E4);
}

void sub_1C2239D08(char *a1, void *a2)
{
  char v2 = *a1;
  id v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode);
  swift_beginAccess();
  unsigned char *v3 = v2;
  id v4 = sub_1C22394D0();
  double v5 = 0.0;
  if ((*v3 & 1) == 0)
  {
    if (qword_1EA2DD4D8 != -1) {
      swift_once();
    }
    double v5 = -*(double *)&qword_1EA3037F8;
  }
  objc_msgSend(v4, sel_setConstant_, v5);
}

uint64_t sub_1C2239DC4()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode);
  swift_beginAccess();
  return *v1;
}

void sub_1C2239E0C(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode);
  swift_beginAccess();
  unsigned char *v3 = a1;
  id v4 = sub_1C22394D0();
  double v5 = 0.0;
  if ((*v3 & 1) == 0)
  {
    if (qword_1EA2DD4D8 != -1) {
      swift_once();
    }
    double v5 = -*(double *)&qword_1EA3037F8;
  }
  objc_msgSend(v4, sel_setConstant_, v5);
}

void (*sub_1C2239EC4(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C2239F30;
}

void sub_1C2239F30(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    id v6 = sub_1C22394D0();
    double v7 = 0.0;
    if ((*(unsigned char *)(v4 + v5) & 1) == 0)
    {
      if (qword_1EA2DD4D8 != -1) {
        swift_once();
      }
      double v7 = -*(double *)&qword_1EA3037F8;
    }
    objc_msgSend(v6, sel_setConstant_, v7);
  }
  free(v3);
}

uint64_t sub_1C2239FE4()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesHeaderSymbolForAccessibilitySizing);
  swift_beginAccess();
  return *v1;
}

void sub_1C223A02C(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesHeaderSymbolForAccessibilitySizing);
  swift_beginAccess();
  unsigned char *v3 = a1;
  sub_1C223B02C();
}

void (*sub_1C223A084(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C223A0E4;
}

void sub_1C223A0E4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C223B02C();
  }
}

uint64_t sub_1C223A118()
{
  return sub_1C223A124(&OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_baseAccessibilityIdentifier);
}

uint64_t sub_1C223A124(void *a1)
{
  char v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

void sub_1C223A178(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = (void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_baseAccessibilityIdentifier);
  swift_beginAccess();
  *id v6 = a1;
  v6[1] = a2;
  swift_bridgeObjectRelease();
  if (v6[1])
  {
    double v7 = *(void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel);
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRetain();
    double v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);

    double v9 = *(void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel);
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    double v10 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);
  }
}

void (*sub_1C223A2C0(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_baseAccessibilityIdentifier;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C223A32C;
}

void sub_1C223A32C(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = (uint64_t *)(v4 + v3[4]);
    uint64_t v6 = v5[1];
    if (v6)
    {
      uint64_t v7 = *v5;
      double v8 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel);
      uint64_t v12 = *v5;
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRetain();
      double v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v12, v6);

      double v10 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel);
      uint64_t v13 = v6;
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      int v11 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setAccessibilityIdentifier_, v11, v7, v13);
    }
  }
  free(v3);
}

uint64_t sub_1C223A474(uint64_t a1, void *a2)
{
  sub_1C223B448(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
  swift_beginAccess();
  sub_1C223B514((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C223A4E8();
  return sub_1C223B578((uint64_t)v5);
}

void sub_1C223A4E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData);
  swift_beginAccess();
  uint64_t v3 = v2[3];
  if (v3)
  {
    uint64_t v4 = v2[4];
    uint64_t v5 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
    uint64_t v6 = *(void *)(v3 - 8);
    MEMORY[0x1F4188790](v5);
    double v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v3);
  }
  else
  {
    uint64_t v9 = 0;
  }
  double v10 = (void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_headerImage);
  swift_beginAccess();
  int v11 = *v10;
  void *v10 = (void *)v9;

  uint64_t v12 = v2[3];
  if (v12)
  {
    uint64_t v13 = v2[4];
    uint64_t v14 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
    uint64_t v15 = *(void *)(v12 - 8);
    MEMORY[0x1F4188790](v14);
    id v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
    uint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v12);
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
  }
  id v21 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title);
  swift_beginAccess();
  *id v21 = v18;
  v21[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = v2[3];
  if (!v22) {
    goto LABEL_9;
  }
  uint64_t v23 = v2[4];
  double v24 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
  uint64_t v25 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v25 + 16))(v27);
  uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  unint64_t v30 = v29;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v22);
  if (!v30)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    unint64_t v30 = 0xE100000000000000;
    uint64_t v28 = 32;
  }
  uint64_t v31 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateString);
  swift_beginAccess();
  *uint64_t v31 = v28;
  v31[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = v2[3];
  if (v32)
  {
    uint64_t v33 = v2[4];
    uint64_t v34 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
    uint64_t v35 = *(void *)(v32 - 8);
    MEMORY[0x1F4188790](v34);
    uint64_t v37 = (char *)&v41 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v35 + 16))(v37);
    uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 32))(v32, v33);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v32);
  }
  else
  {
    uint64_t v38 = 0;
  }
  uint64_t v39 = (void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_categoryColor);
  swift_beginAccess();
  uint64_t v40 = *v39;
  *uint64_t v39 = (void *)v38;

  sub_1C223B02C();
  sub_1C223B5F8();
}

uint64_t sub_1C223A9DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
  swift_beginAccess();
  return sub_1C223B448(v3, a1);
}

uint64_t sub_1C223AA30(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
  swift_beginAccess();
  sub_1C223B514(a1, v3);
  swift_endAccess();
  sub_1C223A4E8();
  return sub_1C223B578(a1);
}

uint64_t (*sub_1C223AAA0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C223AB00;
}

uint64_t sub_1C223AB00(uint64_t a1, char a2)
{
  return sub_1C223AB18(a1, a2, (uint64_t (*)(uint64_t))sub_1C223A4E8);
}

uint64_t sub_1C223AB18(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

id ConceptFeedItemTitleView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *ConceptFeedItemTitleView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel;
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  int v11 = v4;
  id v12 = objc_msgSend(v10, sel_init);
  objc_msgSend(v12, sel_setNumberOfLines_, 0);
  objc_msgSend(v12, sel_setLineBreakMode_, 0);
  objc_msgSend(v12, sel_setAdjustsFontForContentSizeCategory_, 1);
  LODWORD(v13) = 1148846080;
  objc_msgSend(v12, sel_setContentHuggingPriority_forAxis_, 1, v13);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v4[v9] = v12;
  uint64_t v14 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel;
  *(void *)&v11[v14] = sub_1C22391E8();
  uint64_t v15 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_chevronView;
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  objc_msgSend(v16, sel_setContentMode_, 4);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
  id v17 = (void *)sub_1C254FEF0();
  objc_msgSend(v16, sel_setImage_, v17);

  id v18 = objc_msgSend(self, sel_tertiaryLabelColor);
  objc_msgSend(v16, sel_setTintColor_, v18);

  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v19) = 1148846080;
  objc_msgSend(v16, sel_setContentHuggingPriority_forAxis_, 0, v19);
  LODWORD(v20) = 1148846080;
  objc_msgSend(v16, sel_setContentCompressionResistancePriority_forAxis_, 0, v20);
  *(void *)&v11[v15] = v16;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___bottomConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateChevronConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateTrailingConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_activeConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_headerImage] = 0;
  id v21 = &v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title];
  *(void *)id v21 = 0;
  *((void *)v21 + 1) = 0;
  uint64_t v22 = &v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateString];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_categoryColor] = 0;
  v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron] = 0;
  v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode] = 0;
  v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesHeaderSymbolForAccessibilitySizing] = 1;
  uint64_t v23 = &v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_baseAccessibilityIdentifier];
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  double v24 = &v11[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData];
  *(_OWORD *)double v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((void *)v24 + 4) = 0;

  v31.receiver = v11;
  v31.super_class = (Class)type metadata accessor for ConceptFeedItemTitleView();
  uint64_t v25 = (char *)objc_msgSendSuper2(&v31, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v25, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  sub_1C223C2FC();
  objc_msgSend(v25, sel_addSubview_, *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel]);
  objc_msgSend(v25, sel_addSubview_, *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel]);
  objc_msgSend(v25, sel_addSubview_, *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_chevronView]);
  sub_1C223B878();
  sub_1C223C3E4(0, (unint64_t *)&qword_1EA2DE1B0, (void (*)(uint64_t))sub_1C21FE7D8);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1C255CD90;
  uint64_t v27 = sub_1C254E8E0();
  uint64_t v28 = MEMORY[0x1E4FB1138];
  *(void *)(v26 + 32) = v27;
  *(void *)(v26 + 40) = v28;
  unint64_t v29 = v25;
  MEMORY[0x1C87583B0](v26, sel_traitCollectionDidChangeWithTraitEnvironment_previousTraitCollection_);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v29;
}

void sub_1C223B02C()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title];
  swift_beginAccess();
  if (*((void *)v1 + 1))
  {
    uint64_t v2 = (void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_categoryColor];
    swift_beginAccess();
    uint64_t v3 = *v2;
    if (v3)
    {
      swift_bridgeObjectRetain();
      id v4 = v3;
      id v5 = objc_msgSend(v0, sel_traitCollection);
      id v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

      LOBYTE(v5) = sub_1C254FD50();
      if ((v5 & 1) != 0
        && (uint64_t v7 = &v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesHeaderSymbolForAccessibilitySizing],
            swift_beginAccess(),
            (*v7 & 1) != 0)
        || (double v8 = (id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_headerImage],
            swift_beginAccess(),
            !*v8)
        || (id v9 = objc_msgSend(*v8, sel_imageWithRenderingMode_, 2)) == 0)
      {
        uint64_t v22 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel];
        sub_1C223C3E4(0, (unint64_t *)&qword_1EA2E4460, (void (*)(uint64_t))sub_1C21F0FE8);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
        double v24 = (void *)*MEMORY[0x1E4FB0700];
        *(void *)(inited + 32) = *MEMORY[0x1E4FB0700];
        *(void *)(inited + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
        *(void *)(inited + 40) = v4;
        id v25 = v4;
        id v26 = v24;
        sub_1C2203C38(inited);
        id v27 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        uint64_t v28 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1C223D354((unint64_t *)&qword_1EA2E4470, type metadata accessor for Key);
        unint64_t v29 = (void *)sub_1C254F2C0();
        swift_bridgeObjectRelease();
        id v30 = objc_msgSend(v27, sel_initWithString_attributes_, v28, v29);

        objc_msgSend(v22, sel_setAttributedText_, v30);
      }
      else
      {
        id v10 = v9;
        int v11 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel];
        id v12 = objc_msgSend(v11, sel_font);
        if (v12)
        {
          double v13 = v12;
          id v14 = objc_msgSend(v0, sel_traitCollection);
          objc_msgSend(v14, sel_displayScale);
          double v16 = v15;

          id v17 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
          id v18 = v4;
          id v19 = v10;
          double v20 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
          id v21 = objc_msgSend(v17, sel_initWithLeadingImage_text_font_displayScale_imageTintColor_textColor_adjustsImageSizeForAccessibilityContentSizeCategory_, v19, v20, v13, v18, v18, 1, v16);

          objc_msgSend(v11, sel_setAttributedText_, v21);
        }
        else
        {
          __break(1u);
        }
      }
    }
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel], sel_setAttributedText_, 0);
  }
}

uint64_t sub_1C223B448(uint64_t a1, uint64_t a2)
{
  sub_1C223B4AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C223B4AC()
{
  if (!qword_1EA2DEE88)
  {
    sub_1C21FFE74(255, &qword_1EA2DEE90);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DEE88);
    }
  }
}

uint64_t sub_1C223B514(uint64_t a1, uint64_t a2)
{
  sub_1C223B4AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C223B578(uint64_t a1)
{
  sub_1C223B4AC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ConceptFeedItemTitleView()
{
  return self;
}

void sub_1C223B5F8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel);
  swift_beginAccess();
  sub_1C223C3E4(0, (unint64_t *)&qword_1EA2E4460, (void (*)(uint64_t))sub_1C21F0FE8);
  uint64_t inited = swift_initStackObject();
  uint64_t v3 = (void **)MEMORY[0x1E4FB0700];
  *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
  uint64_t v4 = *v3;
  *(void *)(inited + 32) = *v3;
  id v5 = self;
  swift_bridgeObjectRetain();
  id v6 = v4;
  id v7 = objc_msgSend(v5, sel_secondaryLabelColor);
  *(void *)(inited + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
  *(void *)(inited + 40) = v7;
  sub_1C2203C38(inited);
  id v8 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  id v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C223D354((unint64_t *)&qword_1EA2E4470, type metadata accessor for Key);
  id v10 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v8, sel_initWithString_attributes_, v9, v10);

  objc_msgSend(v1, sel_setAttributedText_, v11);
}

void sub_1C223B878()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_activeConstraints;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  id v5 = objc_msgSend(v1, sel_heightAnchor);
  id v6 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel];
  id v7 = objc_msgSend(v6, sel_font);
  if (v7)
  {
    id v8 = v7;
    objc_msgSend(v7, sel_lineHeight);
    double v10 = v9;

    id v11 = objc_msgSend(v5, sel_constraintGreaterThanOrEqualToConstant_, v10);
    LODWORD(v12) = 1148846080;
    objc_msgSend(v11, sel_setPriority_, v12);
    id v13 = objc_msgSend(v1, sel_traitCollection);
    id v14 = objc_msgSend(v13, sel_preferredContentSizeCategory);

    char v15 = sub_1C254FD50();
    sub_1C21ACA3C();
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C255E110;
    id v17 = objc_msgSend(v6, sel_leadingAnchor);
    id v18 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
    id v19 = objc_msgSend(v18, sel_leadingAnchor);

    if (v15)
    {
      if (qword_1EA2DD4D8 != -1) {
        swift_once();
      }
      id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, *((double *)&xmmword_1EA3037E0 + 1), v11);

      *(void *)(v16 + 32) = v20;
      id v21 = objc_msgSend(v6, sel_topAnchor);
      id v22 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
      id v23 = objc_msgSend(v22, sel_topAnchor);

      id v24 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v23, *(double *)&xmmword_1EA3037E0);
      *(void *)(v16 + 40) = v24;
      id v25 = objc_msgSend(v6, sel_trailingAnchor);
      id v26 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
      id v27 = objc_msgSend(v26, sel_trailingAnchor);

      if (qword_1EA2DD4E0 != -1) {
        swift_once();
      }
      id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, -(*(double *)&qword_1EA303800 + *(double *)&qword_1EA3037F8));

      *(void *)(v16 + 48) = v28;
      unint64_t v29 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel];
      id v30 = objc_msgSend(v29, sel_topAnchor);
      id v31 = objc_msgSend(v6, sel_bottomAnchor);
      id v32 = objc_msgSend(v30, (SEL)&selRef_chartDataCacheController + 7, v31, 2.0);

      *(void *)(v16 + 56) = v32;
      id v33 = objc_msgSend(v29, sel_trailingAnchor);
      id v34 = objc_msgSend(v6, sel_trailingAnchor);
      id v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v34);

      *(void *)(v16 + 64) = v35;
      id v36 = objc_msgSend(v29, sel_leadingAnchor);
      id v37 = objc_msgSend(v6, sel_leadingAnchor);
      id v38 = objc_msgSend(v36, (SEL)&selRef_characterAtIndex_ + 6, v37);

      *(void *)(v16 + 72) = v38;
      id v39 = objc_msgSend(v29, sel_bottomAnchor);
      id v40 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
      id v41 = objc_msgSend(v40, sel_bottomAnchor);

      id v42 = objc_msgSend(v39, sel_constraintEqualToAnchor_constant_, v41, -*(double *)&qword_1EA3037F0);
      *(void *)(v16 + 80) = v42;
      long long v43 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_chevronView];
      id v44 = objc_msgSend(v43, sel_firstBaselineAnchor);
      id v45 = objc_msgSend(v6, sel_firstBaselineAnchor);
      id v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_, v45);

      *(void *)(v16 + 88) = v46;
      id v47 = objc_msgSend(v43, sel_trailingAnchor);
      id v48 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
      id v49 = objc_msgSend(v48, sel_trailingAnchor);

      id v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_constant_, v49, -*(double *)&qword_1EA3037F8);
    }
    else
    {
      if (qword_1EA2DD4D8 != -1) {
        swift_once();
      }
      id v51 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, *((double *)&xmmword_1EA3037E0 + 1), v11);

      *(void *)(v16 + 32) = v51;
      id v52 = objc_msgSend(v6, sel_topAnchor);
      id v53 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
      id v54 = objc_msgSend(v53, sel_topAnchor);

      id v55 = objc_msgSend(v52, sel_constraintEqualToAnchor_constant_, v54, *(double *)&xmmword_1EA3037E0);
      *(void *)(v16 + 40) = v55;
      id v56 = objc_msgSend(v6, sel_trailingAnchor);
      uint64_t v57 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel];
      id v58 = objc_msgSend(v57, sel_leadingAnchor);
      id v59 = objc_msgSend(v56, sel_constraintLessThanOrEqualToAnchor_constant_, v58, -*(double *)&qword_1EA3037F8);

      *(void *)(v16 + 48) = v59;
      *(void *)(v16 + 56) = sub_1C22392C4();
      id v60 = objc_msgSend(v57, sel_firstBaselineAnchor);
      id v61 = objc_msgSend(v6, sel_firstBaselineAnchor);
      id v62 = objc_msgSend(v60, sel_constraintEqualToAnchor_, v61);

      *(void *)(v16 + 64) = v62;
      id v63 = objc_msgSend(v57, sel_leadingAnchor);
      id v64 = objc_msgSend(v6, sel_trailingAnchor);
      if (qword_1EA2DD4E0 != -1) {
        swift_once();
      }
      id v65 = objc_msgSend(v63, sel_constraintEqualToAnchor_constant_, v64, *(double *)&qword_1EA303800);

      type metadata accessor for UILayoutPriority(0);
      sub_1C223D354((unint64_t *)&qword_1EA2DEEC0, type metadata accessor for UILayoutPriority);
      sub_1C254E580();
      LODWORD(v66) = v76;
      objc_msgSend(v65, sel_setPriority_, v66);
      *(void *)(v16 + 72) = v65;
      uint64_t v67 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_chevronView];
      id v68 = objc_msgSend(v67, sel_centerYAnchor);
      id v69 = objc_msgSend(v57, sel_centerYAnchor);
      id v70 = objc_msgSend(v68, sel_constraintEqualToAnchor_, v69);

      *(void *)(v16 + 80) = v70;
      *(void *)(v16 + 88) = sub_1C22393C4();
      id v47 = objc_msgSend(v67, sel_trailingAnchor);
      id v71 = objc_msgSend(v1, sel_safeAreaLayoutGuide);
      id v49 = objc_msgSend(v71, sel_trailingAnchor);

      id v50 = objc_msgSend(v47, sel_constraintEqualToAnchor_constant_, v49, -*(double *)&qword_1EA3037F8);
    }
    id v72 = v50;

    *(void *)(v16 + 96) = v72;
    *(void *)(v16 + 104) = v75;
    sub_1C254F730();
    *(void *)&v1[v3] = v16;
    id v73 = v75;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v74 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_activateConstraints_, v74);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C223C2FC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel);
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB2950], 1024);
  objc_msgSend(v1, sel_setFont_, v3);

  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel);
  id v5 = objc_msgSend(v2, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB28F0], 0);
  objc_msgSend(v4, sel_setFont_, v5);
}

void sub_1C223C3E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550820();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id ConceptFeedItemTitleView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConceptFeedItemTitleView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C223C46C@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_headerImage, a2);
}

void sub_1C223C478(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1C223C498@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title, a2);
}

uint64_t sub_1C223C4A4(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2239700(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title);
}

uint64_t sub_1C223C4C4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateString, a2);
}

uint64_t sub_1C223C4D0(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2239700(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateString);
}

id sub_1C223C4F0@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_categoryColor, a2);
}

id keypath_getTm@<X0>(void *a1@<X0>, void *a2@<X3>, void **a3@<X8>)
{
  unint64_t v4 = (void **)(*a1 + *a2);
  swift_beginAccess();
  uint64_t v5 = *v4;
  *a3 = *v4;
  return v5;
}

void sub_1C223C55C(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1C223C57C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_11Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron, a2);
}

void sub_1C223C588(char *a1, void *a2)
{
  char v2 = *a1;
  id v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron);
  swift_beginAccess();
  unsigned char *v3 = v2;
  sub_1C22399E4();
}

uint64_t sub_1C223C5E4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_11Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode, a2);
}

uint64_t sub_1C223C5F4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_11Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesHeaderSymbolForAccessibilitySizing, a2);
}

uint64_t keypath_get_11Tm@<X0>(void *a1@<X0>, void *a2@<X3>, unsigned char *a3@<X8>)
{
  unint64_t v4 = (unsigned char *)(*a1 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

void sub_1C223C650(char *a1, void *a2)
{
  char v2 = *a1;
  id v3 = (unsigned char *)(*a2
               + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesHeaderSymbolForAccessibilitySizing);
  swift_beginAccess();
  unsigned char *v3 = v2;
  sub_1C223B02C();
}

uint64_t sub_1C223C6AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_baseAccessibilityIdentifier, a2);
}

uint64_t keypath_get_5Tm@<X0>(void *a1@<X0>, void *a2@<X3>, void *a3@<X8>)
{
  unint64_t v4 = (void *)(*a1 + *a2);
  swift_beginAccess();
  uint64_t v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

void sub_1C223C70C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1C223A178(v1, v2);
}

uint64_t sub_1C223C74C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData;
  swift_beginAccess();
  return sub_1C223B448(v3, a2);
}

uint64_t method lookup function for ConceptFeedItemTitleView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConceptFeedItemTitleView);
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.headerImage.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.headerImage.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.headerImage.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.title.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.title.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.title.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.dateString.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.dateString.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.dateString.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.categoryColor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.categoryColor.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.categoryColor.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.hidesChevron.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.hidesChevron.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.hidesChevron.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.isInEditingMode.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.isInEditingMode.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.isInEditingMode.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.hidesHeaderSymbolForAccessibilitySizing.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.hidesHeaderSymbolForAccessibilitySizing.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.hidesHeaderSymbolForAccessibilitySizing.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.baseAccessibilityIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.baseAccessibilityIdentifier.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.baseAccessibilityIdentifier.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.viewData.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.viewData.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of ConceptFeedItemTitleView.viewData.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x200))();
}

void sub_1C223CF1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_titleLabel;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v3, sel_setNumberOfLines_, 0);
  objc_msgSend(v3, sel_setLineBreakMode_, 0);
  objc_msgSend(v3, sel_setAdjustsFontForContentSizeCategory_, 1);
  LODWORD(v4) = 1148846080;
  objc_msgSend(v3, sel_setContentHuggingPriority_forAxis_, 1, v4);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v1[v2] = v3;
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateLabel;
  *(void *)&v1[v5] = sub_1C22391E8();
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_chevronView;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  objc_msgSend(v7, sel_setContentMode_, 4);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
  id v8 = (void *)sub_1C254FEF0();
  objc_msgSend(v7, sel_setImage_, v8);

  id v9 = objc_msgSend(self, sel_tertiaryLabelColor);
  objc_msgSend(v7, sel_setTintColor_, v9);

  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v10) = 1148846080;
  objc_msgSend(v7, sel_setContentHuggingPriority_forAxis_, 0, v10);
  LODWORD(v11) = 1148846080;
  objc_msgSend(v7, sel_setContentCompressionResistancePriority_forAxis_, 0, v11);
  *(void *)&v1[v6] = v7;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___bottomConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateChevronConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView____lazy_storage___dateTrailingConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_activeConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_headerImage] = 0;
  double v12 = &v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_title];
  *double v12 = 0;
  v12[1] = 0;
  id v13 = &v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_dateString];
  *id v13 = 0;
  v13[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_categoryColor] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesChevron] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_isInEditingMode] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_hidesHeaderSymbolForAccessibilitySizing] = 1;
  id v14 = &v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_baseAccessibilityIdentifier];
  *id v14 = 0;
  v14[1] = 0;
  char v15 = &v1[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemTitleView_viewData];
  *(_OWORD *)char v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((void *)v15 + 4) = 0;

  sub_1C25505F0();
  __break(1u);
}

void sub_1C223D228(void *a1)
{
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (!a1)
  {

LABEL_9:
    sub_1C223B02C();
    sub_1C223B5F8();
    sub_1C223B878();
    return;
  }
  id v5 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  uint64_t v6 = sub_1C254F470();
  uint64_t v8 = v7;
  if (v6 == sub_1C254F470() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  char v11 = sub_1C2550870();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    goto LABEL_9;
  }
}

uint64_t sub_1C223D354(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C223D39C()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2248028(v0, (uint64_t)v11);
  if (v12 != 1) {
    return 0x6E69676F6CLL;
  }
  unint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  id v5 = v11[0];
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v9 = 0xD000000000000014;
  unint64_t v10 = 0x80000001C2577020;
  id v6 = objc_msgSend(v5, sel_identifier);
  sub_1C254CB20();

  sub_1C2249498((unint64_t *)&qword_1EA2DE1E0, 255, MEMORY[0x1E4F27990]);
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1C254F5A0();

  return v9;
}

uint64_t sub_1C223D568(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C2248028(v1, (uint64_t)v38);
  id v4 = (void *)v38[0];
  sub_1C2249070(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  char v11 = (char *)v38 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  id v14 = (char *)v38 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  id v17 = (char *)v38 - v16;
  MEMORY[0x1F4188790](v15);
  id v19 = (char *)v38 - v18;
  sub_1C2248028(v2, (uint64_t)v39);
  id v20 = v39[0];
  if (v40)
  {
    id v21 = v39[3];
    id v22 = v39[0];
    id v23 = objc_msgSend(v22, sel_gateway);
    if (v23)
    {
      id v24 = v23;
      id v25 = objc_msgSend(v23, sel_baseURL);

      if (v25)
      {
        sub_1C254C8A0();

        uint64_t v26 = sub_1C254C900();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 0, 1, v26);
      }
      else
      {

        uint64_t v33 = sub_1C254C900();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v11, 1, 1, v33);
      }
      sub_1C22493AC((uint64_t)v11, (uint64_t)v14);
    }
    else
    {

      uint64_t v31 = sub_1C254C900();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v14, 1, 1, v31);
    }
  }
  else
  {
    id v21 = v39[1];
    id v27 = v4;
    id v28 = objc_msgSend(v20, sel_baseURL);
    if (v28)
    {
      unint64_t v29 = v28;
      sub_1C254C8A0();

      sub_1C2249030((uint64_t)v2, (void (*)(void, void, void, void, void))sub_1C2247DE4);
      uint64_t v30 = sub_1C254C900();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v17, 0, 1, v30);
    }
    else
    {
      sub_1C2249030((uint64_t)v2, (void (*)(void, void, void, void, void))sub_1C2247DE4);
      uint64_t v32 = sub_1C254C900();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v17, 1, 1, v32);
    }
    id v14 = v17;
  }
  sub_1C22493AC((uint64_t)v14, (uint64_t)v19);
  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  sub_1C224942C((uint64_t)v19, (uint64_t)v8, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  uint64_t v34 = sub_1C254C900();
  uint64_t v35 = *(void *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v8, 1, v34) == 1)
  {
    sub_1C2249A58((uint64_t)v8, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
    id v36 = 0;
  }
  else
  {
    id v36 = (void *)sub_1C254C870();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v34);
  }
  sub_1C23CCB04(a1, (uint64_t)v21, v36);

  return sub_1C2249A58((uint64_t)v19, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
}

uint64_t sub_1C223DA20()
{
  sub_1C2248028(v0, (uint64_t)v2);
  return sub_1C223D39C();
}

id ClinicalAccountLoginSession.__allocating_init(accountStore:presentationAnchor:funnelContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[OBJC_IVAR___HRUIClinicalAccountLoginSession_authSession] = 0;
  *(void *)&v7[OBJC_IVAR___HRUIClinicalAccountLoginSession_accountStore] = a1;
  *(void *)&v7[OBJC_IVAR___HRUIClinicalAccountLoginSession_presentationAnchor] = a2;
  *(void *)&v7[OBJC_IVAR___HRUIClinicalAccountLoginSession_funnelContext] = a3;
  v9.receiver = v7;
  v9.super_class = v3;
  return objc_msgSendSuper2(&v9, sel_init);
}

id ClinicalAccountLoginSession.init(accountStore:presentationAnchor:funnelContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR___HRUIClinicalAccountLoginSession_authSession] = 0;
  *(void *)&v3[OBJC_IVAR___HRUIClinicalAccountLoginSession_accountStore] = a1;
  *(void *)&v3[OBJC_IVAR___HRUIClinicalAccountLoginSession_presentationAnchor] = a2;
  *(void *)&v3[OBJC_IVAR___HRUIClinicalAccountLoginSession_funnelContext] = a3;
  v9.receiver = v3;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t ClinicalAccountLoginSession.startLogin(with:loginCancelledHandler:callbackErrorHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C2249070(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_1C254F820();
  id v15 = v5;
  id v16 = a1;
  sub_1C223E0BC(a2);
  swift_retain();
  uint64_t v17 = sub_1C254F810();
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = MEMORY[0x1E4FBCFD8];
  void v18[2] = v17;
  v18[3] = v19;
  v18[4] = v15;
  v18[5] = v16;
  v18[6] = a2;
  v18[7] = a3;
  v18[8] = a4;
  v18[9] = a5;
  sub_1C223EBB8((uint64_t)v13, (uint64_t)&unk_1EA2DEF00, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_1C223DD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _OWORD v8[2] = a1;
  v8[3] = sub_1C254F820();
  void v8[4] = sub_1C254F810();
  uint64_t v13 = (void *)swift_task_alloc();
  v8[5] = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_1C223DE68;
  return sub_1C223E1BC(a5, a6, a7, a8, v16);
}

uint64_t sub_1C223DE68(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C254F7D0();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C223E058;
  }
  else
  {
    *(void *)(v4 + 56) = a1;
    uint64_t v5 = sub_1C254F7D0();
    uint64_t v7 = v9;
    uint64_t v8 = sub_1C223DFE8;
  }
  return MEMORY[0x1F4188298](v8, v5, v7);
}

uint64_t sub_1C223DFE8()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = (void *)v0[2];
  swift_release();
  *uint64_t v2 = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C223E058()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C223E0BC(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C223E0D0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1C2223E3C;
  return sub_1C223DD74(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C223E1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[40] = a5;
  v6[41] = v5;
  v6[38] = a3;
  v6[39] = a4;
  v6[36] = a1;
  v6[37] = a2;
  uint64_t v7 = sub_1C254E560();
  v6[42] = v7;
  v6[43] = *(void *)(v7 - 8);
  v6[44] = swift_task_alloc();
  sub_1C254F820();
  v6[45] = sub_1C254F810();
  uint64_t v9 = sub_1C254F7D0();
  v6[46] = v9;
  v6[47] = v8;
  return MEMORY[0x1F4188298](sub_1C223E2B8, v9, v8);
}

uint64_t sub_1C223E2B8()
{
  id v28 = v0;
  if (*(void *)(v0[41] + OBJC_IVAR___HRUIClinicalAccountLoginSession_authSession))
  {
    swift_release();
    sub_1C254F470();
    uint64_t v1 = MEMORY[0x1E4FBB1A0];
    sub_1C2248FD8(0, &qword_1EA2DEFF8, &qword_1EA2DF000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
    *(void *)(inited + 32) = sub_1C254F470();
    *(void *)(inited + 40) = v3;
    *(void *)(inited + 72) = v1;
    *(void *)(inited + 48) = 0xD000000000000017;
    *(void *)(inited + 56) = 0x80000001C25771B0;
    sub_1C22045C0(inited);
    id v4 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v5 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v5, 100, v6);

    swift_willThrow();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  else
  {
    uint64_t v9 = (void *)v0[36];
    sub_1C254E510();
    id v10 = v9;
    uint64_t v11 = sub_1C254E550();
    os_log_type_t v12 = sub_1C254FA40();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v15 = v0[43];
    uint64_t v14 = v0[44];
    uint64_t v16 = v0[42];
    uint64_t v17 = (void *)v0[36];
    if (v13)
    {
      uint64_t v26 = v0[44];
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v27 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      id v20 = (id)HKSensitiveLogItem();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v21 = sub_1C254F4F0();
      v0[35] = sub_1C21AD354(v21, v22, &v27);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v11, v12, "ClinicalAccountLoginSession: initializing to start login to gateway %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v19, -1, -1);
      MEMORY[0x1C875A0B0](v18, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v26, v16);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
    id v23 = *(void **)(v0[41] + OBJC_IVAR___HRUIClinicalAccountLoginSession_accountStore);
    uint64_t v24 = v0[36];
    v0[2] = v0;
    v0[7] = v0 + 34;
    v0[3] = sub_1C223E6F8;
    uint64_t v25 = swift_continuation_init();
    v0[20] = MEMORY[0x1E4F143A8];
    v0[21] = 0x40000000;
    v0[22] = sub_1C223F118;
    v0[23] = &block_descriptor_61;
    v0[24] = v25;
    objc_msgSend(v23, sel_beginInitialLoginSessionForGateway_completion_, v24, v0 + 20);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
}

uint64_t sub_1C223E6F8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 384) = v2;
  uint64_t v3 = *(void *)(v1 + 376);
  uint64_t v4 = *(void *)(v1 + 368);
  if (v2) {
    uint64_t v5 = sub_1C223EAC0;
  }
  else {
    uint64_t v5 = sub_1C223E828;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C223E828()
{
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v2 = *(void **)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 272);
  *(void *)(v0 + 392) = v3;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRUIClinicalAccountLoginSession_funnelContext);
  *(void *)(v0 + 200) = v2;
  *(unsigned char *)(v0 + 232) = 0;
  *(void *)(v0 + 208) = v4;
  *(void *)(v0 + 216) = 0;
  *(void *)(v0 + 224) = 0;
  id v5 = v2;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C223E908;
  uint64_t v7 = *(void *)(v0 + 320);
  uint64_t v8 = *(void *)(v0 + 304);
  uint64_t v9 = *(void *)(v0 + 312);
  uint64_t v10 = *(void *)(v0 + 296);
  return sub_1C223F1D4(v3, v0 + 200, v10, v8, v9, v7);
}

uint64_t sub_1C223E908()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 408) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 376);
  uint64_t v4 = *(void *)(v2 + 368);
  if (v0) {
    id v5 = sub_1C223EB3C;
  }
  else {
    id v5 = sub_1C223EA44;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C223EA44()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 392);
  return v1(v2);
}

uint64_t sub_1C223EAC0()
{
  swift_release();
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C223EB3C()
{
  uint64_t v1 = (void *)v0[49];
  uint64_t v2 = (void *)v0[36];
  swift_release();

  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C223EBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C254F840();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1C254F830();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C2249A58(a1, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C254F7D0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  sub_1C21AB51C(0, &qword_1EA2DF080);
  return swift_task_create();
}

uint64_t sub_1C223ED60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C254F840();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1C254F830();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1C2249A58(a1, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C254F7D0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1C223F118(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C2206F9C();
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = (void *)v5;
    return MEMORY[0x1F4188208](a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return MEMORY[0x1F4188208](a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  id v8 = a2;
  return swift_continuation_throwingResume();
}

uint64_t sub_1C223F1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[15] = a6;
  v7[16] = v6;
  v7[13] = a4;
  v7[14] = a5;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  uint64_t v8 = sub_1C254C900();
  v7[17] = v8;
  v7[18] = *(void *)(v8 - 8);
  v7[19] = swift_task_alloc();
  uint64_t v9 = sub_1C254E560();
  v7[20] = v9;
  v7[21] = *(void *)(v9 - 8);
  v7[22] = swift_task_alloc();
  sub_1C254F820();
  v7[23] = sub_1C254F810();
  uint64_t v11 = sub_1C254F7D0();
  unsigned char v7[24] = v11;
  v7[25] = v10;
  return MEMORY[0x1F4188298](sub_1C223F330, v11, v10);
}

uint64_t sub_1C223F330()
{
  id v55 = v0;
  if (*(void *)(v0[16] + OBJC_IVAR___HRUIClinicalAccountLoginSession_authSession))
  {
    swift_release();
    sub_1C2249748();
    swift_allocError();
    *uint64_t v1 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v52 = OBJC_IVAR___HRUIClinicalAccountLoginSession_authSession;
    uint64_t v53 = v0[16];
    uint64_t v4 = (void *)v0[10];
    uint64_t v5 = v0[11];
    sub_1C254E510();
    sub_1C2249030(v5, (void (*)(void, void, void, void, void))sub_1C2247D8C);
    id v6 = v4;
    sub_1C2249030(v5, (void (*)(void, void, void, void, void))sub_1C2247D8C);
    id v7 = v6;
    uint64_t v8 = sub_1C254E550();
    os_log_type_t v9 = sub_1C254FA40();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = v0[21];
    uint64_t v12 = v0[22];
    uint64_t v13 = v0[20];
    if (v10)
    {
      uint64_t v45 = v0[19];
      uint64_t v51 = v0[21];
      uint64_t v14 = v0[18];
      uint64_t v46 = v0[17];
      os_log_type_t type = v9;
      uint64_t v15 = v0[11];
      id v44 = (id)v0[10];
      uint64_t v50 = v0[20];
      uint64_t v16 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      v54[0] = v47;
      *(_DWORD *)uint64_t v16 = 136315394;
      sub_1C2249030(v15, (void (*)(void, void, void, void, void))sub_1C2247D8C);
      uint64_t v48 = v12;
      uint64_t v17 = sub_1C223D39C();
      unint64_t v19 = v18;
      sub_1C2249030(v15, (void (*)(void, void, void, void, void))sub_1C2247DE4);
      v0[8] = sub_1C21AD354(v17, v19, v54);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      sub_1C2249030(v15, (void (*)(void, void, void, void, void))sub_1C2247DE4);
      sub_1C2249030(v15, (void (*)(void, void, void, void, void))sub_1C2247DE4);
      *(_WORD *)(v16 + 12) = 2080;
      id v20 = objc_msgSend(v44, sel_loginURL);
      sub_1C254C8A0();

      uint64_t v21 = sub_1C254C840();
      uint64_t v23 = v22;
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v45, v46);
      v0[6] = v21;
      v0[7] = v23;
      sub_1C25508F0();
      id v24 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v25 = sub_1C254F4F0();
      v0[9] = sub_1C21AD354(v25, v26, v54);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v8, type, "ClinicalAccountLoginSession: %s starting at %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v47, -1, -1);
      MEMORY[0x1C875A0B0](v16, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v48, v50);
    }
    else
    {
      id v28 = (void *)v0[10];
      uint64_t v27 = v0[11];
      sub_1C2249030(v27, (void (*)(void, void, void, void, void))sub_1C2247DE4);
      sub_1C2249030(v27, (void (*)(void, void, void, void, void))sub_1C2247DE4);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
    }
    uint64_t v30 = v0[15];
    uint64_t v29 = v0[16];
    uint64_t v31 = v0[13];
    uint64_t v32 = v0[14];
    uint64_t v33 = (long long *)v0[11];
    uint64_t v34 = v0[12];
    uint64_t v35 = (void *)v0[10];
    sub_1C223D568(5);
    id v36 = *(void **)(v29 + OBJC_IVAR___HRUIClinicalAccountLoginSession_accountStore);
    type metadata accessor for ClinicalAccountLoginSessionCallbackHandler();
    id v37 = (void *)swift_allocObject();
    v0[26] = v37;
    sub_1C2249030((uint64_t)v33, (void (*)(void, void, void, void, void))sub_1C2247D8C);
    id v38 = v36;
    swift_retain();
    sub_1C223E0BC(v34);
    swift_defaultActor_initialize();
    v37[20] = 0;
    sub_1C2248028(v33, (uint64_t)(v37 + 14));
    v37[19] = v38;
    if (v34) {
      uint64_t v39 = v31;
    }
    else {
      uint64_t v39 = 0;
    }
    v37[21] = v34;
    v37[22] = v39;
    v37[23] = v32;
    v37[24] = v30;
    swift_retain();
    id v40 = sub_1C224176C(v35, (uint64_t)sub_1C224979C, (uint64_t)v37);
    v0[27] = v40;
    swift_release();
    id v41 = *(void **)(v53 + v52);
    *(void *)(v53 + v52) = v40;
    id v42 = v40;

    id v43 = v42;
    return MEMORY[0x1F4188298](sub_1C223F89C, v37, 0);
  }
}

uint64_t sub_1C223F89C()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = *(void **)(v1 + 160);
  if (v2)
  {
    objc_msgSend(v2, sel_cancel);
    uint64_t v3 = *(void **)(v1 + 160);
    uint64_t v1 = v0[26];
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(void *)(v1 + 160) = v0[27];

  uint64_t v4 = v0[24];
  uint64_t v5 = v0[25];
  return MEMORY[0x1F4188298](sub_1C223F92C, v4, v5);
}

uint64_t sub_1C223F92C()
{
  uint64_t v1 = *(void **)(v0 + 216);
  swift_release();
  objc_msgSend(v1, sel_start);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t ClinicalAccountLoginSession.startRelogin(to:from:profile:loginCancelledHandler:callbackErrorHandler:)(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v27 = a6;
  sub_1C2249070(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_1C254F820();
  id v18 = v7;
  id v19 = a1;
  id v20 = a2;
  id v21 = a3;
  sub_1C223E0BC(a4);
  swift_retain();
  uint64_t v22 = sub_1C254F810();
  uint64_t v23 = (void *)swift_allocObject();
  uint64_t v24 = MEMORY[0x1E4FBCFD8];
  void v23[2] = v22;
  v23[3] = v24;
  v23[4] = v18;
  v23[5] = v19;
  v23[6] = v20;
  v23[7] = v21;
  v23[8] = a4;
  v23[9] = a5;
  v23[10] = v27;
  v23[11] = a7;
  sub_1C223ED60((uint64_t)v16, (uint64_t)&unk_1EA2DEF10, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_1C223FB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 80) = v14;
  *(_OWORD *)(v8 + 64) = v13;
  *(void *)(v8 + 48) = a7;
  *(void *)(v8 + 56) = a8;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a6;
  *(void *)(v8 + 24) = a4;
  sub_1C254F820();
  *(void *)(v8 + 88) = sub_1C254F810();
  uint64_t v10 = sub_1C254F7D0();
  *(void *)(v8 + 96) = v10;
  *(void *)(v8 + 104) = v9;
  return MEMORY[0x1F4188298](sub_1C223FC28, v10, v9);
}

uint64_t sub_1C223FC28()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_healthStore);
  id v2 = objc_msgSend(v1, sel_profileIdentifier);
  *(void *)(v0 + 112) = v2;

  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v3;
  void *v3 = v0;
  v3[1] = sub_1C223FD08;
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v9 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 40);
  return sub_1C2240078(v9, v8, (uint64_t)v2, v6, v7, v4, v5);
}

uint64_t sub_1C223FD08()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 96);
    uint64_t v4 = *(void *)(v2 + 104);
    uint64_t v5 = sub_1C223FE88;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 96);
    uint64_t v4 = *(void *)(v2 + 104);
    uint64_t v5 = sub_1C223FE24;
  }
  return MEMORY[0x1F4188298](v5, v3, v4);
}

uint64_t sub_1C223FE24()
{
  swift_release();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C223FE88()
{
  id v1 = *(void **)(v0 + 128);
  uint64_t v2 = *(void **)(v0 + 112);
  swift_release();

  *(void *)(v0 + 16) = v1;
  id v3 = v1;
  sub_1C2206F9C();
  if (swift_dynamicCast() && *(unsigned char *)(v0 + 136) == 1)
  {

    sub_1C2240E74(1);
    swift_willThrow();
  }

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1C223FF78(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1C2223E3C;
  return sub_1C223FB74(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C2240078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[47] = a7;
  v8[48] = v7;
  v8[45] = a5;
  v8[46] = a6;
  v8[43] = a3;
  v8[44] = a4;
  v8[41] = a1;
  v8[42] = a2;
  uint64_t v9 = sub_1C254E560();
  v8[49] = v9;
  v8[50] = *(void *)(v9 - 8);
  v8[51] = swift_task_alloc();
  v8[52] = swift_task_alloc();
  v8[53] = swift_task_alloc();
  sub_1C254F820();
  v8[54] = sub_1C254F810();
  uint64_t v11 = sub_1C254F7D0();
  v8[55] = v11;
  v8[56] = v10;
  return MEMORY[0x1F4188298](sub_1C2240194, v11, v10);
}

uint64_t sub_1C2240194()
{
  uint64_t v63 = v0;
  id v1 = *(void **)(v0 + 328);
  sub_1C254E510();
  id v2 = v1;
  id v3 = sub_1C254E550();
  os_log_type_t v4 = sub_1C254FA40();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v56 = *(void *)(v0 + 400);
    uint64_t v57 = *(void *)(v0 + 392);
    uint64_t v59 = *(void *)(v0 + 424);
    uint64_t v5 = *(void **)(v0 + 328);
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    v62[0] = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    id v8 = (id)HKSensitiveLogItem();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v9 = sub_1C254F4F0();
    *(void *)(v0 + 320) = sub_1C21AD354(v9, v10, v62);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v3, v4, "ClinicalAccountLoginSession: initializing to start relogin to account %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v7, -1, -1);
    MEMORY[0x1C875A0B0](v6, -1, -1);

    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
    v11(v59, v57);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 424);
    uint64_t v13 = *(void *)(v0 + 392);
    uint64_t v14 = *(void *)(v0 + 400);
    uint64_t v15 = *(void **)(v0 + 328);

    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v11(v12, v13);
  }
  id v16 = objc_msgSend(*(id *)(v0 + 328), sel_gateway);
  if (!v16)
  {
    id v18 = *(void **)(v0 + 328);
    sub_1C254E510();
    id v19 = v18;
    id v20 = sub_1C254E550();
    os_log_type_t v21 = sub_1C254FA40();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v23 = *(void *)(v0 + 408);
    uint64_t v24 = *(void *)(v0 + 392);
    uint64_t v25 = *(void **)(v0 + 328);
    if (v22)
    {
      uint64_t v58 = *(void *)(v0 + 408);
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      id v60 = v11;
      uint64_t v27 = swift_slowAlloc();
      v62[0] = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      id v28 = (id)HKSensitiveLogItem();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v29 = sub_1C254F4F0();
      *(void *)(v0 + 312) = sub_1C21AD354(v29, v30, v62);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v20, v21, "ClinicalAccountLoginSession: given account %s has no gateway, unable to check gateway status to determine whether login should be blocked, proceeding.", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v27, -1, -1);
      MEMORY[0x1C875A0B0](v26, -1, -1);

      v60(v58, v24);
    }
    else
    {

      v11(v23, v24);
    }
LABEL_12:
    id v49 = *(void **)(*(void *)(v0 + 384) + OBJC_IVAR___HRUIClinicalAccountLoginSession_accountStore);
    uint64_t v50 = *(void *)(v0 + 328);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 296;
    *(void *)(v0 + 24) = sub_1C2240924;
    uint64_t v51 = swift_continuation_init();
    *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_1C223F118;
    *(void *)(v0 + 104) = &block_descriptor_71;
    *(void *)(v0 + 112) = v51;
    objc_msgSend(v49, sel_beginReloginSessionForAccount_completion_, v50, v0 + 80);
    return MEMORY[0x1F41881E8](v0 + 16);
  }
  uint64_t v17 = v16;
  if ((unint64_t)objc_msgSend(v16, sel_status) < 2)
  {

    goto LABEL_12;
  }
  uint64_t v31 = *(void **)(v0 + 328);
  swift_release();
  sub_1C254E510();
  id v32 = v31;
  id v33 = v17;
  id v34 = v32;
  id v35 = v33;
  id v36 = sub_1C254E550();
  os_log_type_t v37 = sub_1C254FA20();
  BOOL v38 = os_log_type_enabled(v36, v37);
  uint64_t v39 = *(void *)(v0 + 416);
  uint64_t v40 = *(void *)(v0 + 392);
  id v41 = *(void **)(v0 + 328);
  if (v38)
  {
    id v61 = v11;
    uint64_t v42 = swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    v62[0] = v55;
    *(_DWORD *)uint64_t v42 = 136315394;
    id v43 = (id)HKSensitiveLogItem();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v44 = sub_1C254F4F0();
    *(void *)(v0 + 288) = sub_1C21AD354(v44, v45, v62);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2080;
    id v46 = (id)HKSensitiveLogItem();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v47 = sub_1C254F4F0();
    *(void *)(v0 + 304) = sub_1C21AD354(v47, v48, v62);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v36, v37, "ClinicalAccountLoginSession: gateway %s for account %s does not currently allow logging in, bailing out", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v55, -1, -1);
    MEMORY[0x1C875A0B0](v42, -1, -1);

    v61(v39, v40);
  }
  else
  {

    v11(v39, v40);
  }
  sub_1C2249748();
  swift_allocError();
  *uint64_t v52 = 1;
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v53 = *(uint64_t (**)(void))(v0 + 8);
  return v53();
}

uint64_t sub_1C2240924()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 456) = v2;
  uint64_t v3 = *(void *)(v1 + 448);
  uint64_t v4 = *(void *)(v1 + 440);
  if (v2) {
    uint64_t v5 = sub_1C2240D40;
  }
  else {
    uint64_t v5 = sub_1C2240A54;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C2240A54()
{
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v3 = *(void **)(v0 + 336);
  uint64_t v2 = *(void **)(v0 + 344);
  uint64_t v4 = *(void **)(v0 + 328);
  uint64_t v5 = *(void *)(v0 + 296);
  *(void *)(v0 + 464) = v5;
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR___HRUIClinicalAccountLoginSession_funnelContext);
  *(void *)(v0 + 120) = v4;
  *(void *)(v0 + 128) = v3;
  *(void *)(v0 + 136) = v2;
  *(void *)(v0 + 144) = v6;
  *(unsigned char *)(v0 + 152) = 1;
  id v7 = v4;
  id v8 = v3;
  id v9 = v2;
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 472) = v10;
  void *v10 = v0;
  v10[1] = sub_1C2240B4C;
  uint64_t v11 = *(void *)(v0 + 376);
  uint64_t v12 = *(void *)(v0 + 360);
  uint64_t v13 = *(void *)(v0 + 368);
  uint64_t v14 = *(void *)(v0 + 352);
  return sub_1C223F1D4(v5, v0 + 120, v14, v12, v13, v11);
}

uint64_t sub_1C2240B4C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 480) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 448);
  uint64_t v4 = *(void *)(v2 + 440);
  if (v0) {
    uint64_t v5 = sub_1C2240DD0;
  }
  else {
    uint64_t v5 = sub_1C2240C88;
  }
  return MEMORY[0x1F4188298](v5, v4, v3);
}

uint64_t sub_1C2240C88()
{
  uint64_t v1 = *(void **)(v0 + 464);
  uint64_t v3 = *(void **)(v0 + 336);
  uint64_t v2 = *(void **)(v0 + 344);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1C2240D40()
{
  swift_release();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2240DD0()
{
  uint64_t v1 = (void *)v0[58];
  uint64_t v3 = (void *)v0[42];
  uint64_t v2 = (void *)v0[43];
  uint64_t v4 = (void *)v0[41];
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

id sub_1C2240E74(char a1)
{
  sub_1C254F470();
  uint64_t v2 = MEMORY[0x1E4FBB1A0];
  sub_1C2248FD8(0, &qword_1EA2DEFF8, &qword_1EA2DF000);
  if (a1)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
    *(void *)(inited + 32) = sub_1C254F470();
    *(void *)(inited + 40) = v10;
    *(void *)(inited + 72) = v2;
    *(void *)(inited + 48) = 0xD000000000000014;
    *(void *)(inited + 56) = 0x80000001C2577220;
    sub_1C22045C0(inited);
    id v11 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    uint64_t v7 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v11, sel_initWithDomain_code_userInfo_, v6, 110, v7);
  }
  else
  {
    uint64_t v3 = swift_initStackObject();
    *(_OWORD *)(v3 + 16) = xmmword_1C255CD90;
    *(void *)(v3 + 32) = sub_1C254F470();
    *(void *)(v3 + 40) = v4;
    *(void *)(v3 + 72) = v2;
    *(void *)(v3 + 48) = 0xD000000000000017;
    *(void *)(v3 + 56) = 0x80000001C25771B0;
    sub_1C22045C0(v3);
    id v5 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    uint64_t v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    uint64_t v7 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(v5, sel_initWithDomain_code_userInfo_, v6, 100, v7);
  }
  id v12 = v8;

  return v12;
}

uint64_t sub_1C22412E4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1C2249070(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  id v11 = (char *)&v23 - v10;
  sub_1C2249070(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_1C224942C(a1, (uint64_t)v11, (unint64_t *)&qword_1EA2DF038, v6);
  sub_1C254F820();
  swift_retain();
  id v16 = a2;
  uint64_t v17 = sub_1C254F810();
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v19 = (v9 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v20 = (void *)swift_allocObject();
  uint64_t v21 = MEMORY[0x1E4FBCFD8];
  v20[2] = v17;
  v20[3] = v21;
  v20[4] = a3;
  sub_1C22493AC((uint64_t)v11, (uint64_t)v20 + v18);
  *(void *)((char *)v20 + v19) = a2;
  sub_1C24D0A0C((uint64_t)v14, (uint64_t)&unk_1EA2DF070, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1C224150C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _OWORD v6[2] = sub_1C254F820();
  v6[3] = sub_1C254F810();
  uint64_t v9 = (void *)swift_task_alloc();
  v6[4] = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_1C22415D0;
  return sub_1C2241E74(a5, a6);
}

uint64_t sub_1C22415D0()
{
  swift_task_dealloc();
  uint64_t v1 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C224170C, v1, v0);
}

uint64_t sub_1C224170C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1C224176C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  uint64_t v4 = sub_1C254C900();
  uint64_t v54 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v53 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254C620();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v48 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  id v16 = (char *)v48 - v15;
  MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)v48 - v17;
  id v50 = a1;
  id v19 = objc_msgSend(a1, sel_callbackURLComponents);
  sub_1C254C5D0();

  sub_1C254C610();
  uint64_t v21 = v20;
  id v49 = *(void (**)(char *, uint64_t))(v7 + 8);
  v49(v18, v6);
  if (!v21) {
    goto LABEL_7;
  }
  uint64_t v22 = sub_1C254F500();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if (v22 == 0x7370747468 && v24 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  char v26 = sub_1C2550870();
  swift_bridgeObjectRelease();
  if (v26)
  {
LABEL_9:
    id v30 = v50;
    id v34 = objc_msgSend(v50, sel_callbackURLComponents);
    sub_1C254C5D0();

    sub_1C254C5F0();
    id v35 = v49;
    v49(v16, v6);
    id v36 = self;
    os_log_type_t v37 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v38 = objc_msgSend(v30, (SEL)&selRef_addLayoutGuide_ + 4);
    sub_1C254C5D0();

    sub_1C254C600();
    v35(v13, v6);
    id v32 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v33 = objc_msgSend(v36, sel_callbackWithHTTPSHost_path_, v37, v32);

    goto LABEL_10;
  }
LABEL_7:
  id v27 = v50;
  id v28 = objc_msgSend(v50, sel_callbackURLComponents);
  sub_1C254C5D0();

  sub_1C254C610();
  uint64_t v29 = v10;
  id v30 = v27;
  v49(v29, v6);
  uint64_t v31 = self;
  id v32 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(v31, sel_callbackWithCustomScheme_, v32);
LABEL_10:

  id v39 = objc_msgSend(v30, sel_loginURL);
  uint64_t v40 = v53;
  sub_1C254C8A0();

  id v41 = objc_allocWithZone(MEMORY[0x1E4F18AE0]);
  id v42 = v33;
  uint64_t v43 = v52;
  swift_retain();
  uint64_t v44 = (void *)sub_1C254C870();
  aBlock[4] = v51;
  aBlock[5] = v43;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2248040;
  aBlock[3] = &block_descriptor_65;
  unint64_t v45 = _Block_copy(aBlock);
  id v46 = objc_msgSend(v41, sel_initWithURL_callback_completionHandler_, v44, v42, v45);
  _Block_release(v45);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v40, v4);
  swift_release();
  objc_msgSend(v46, sel_setPrefersEphemeralWebBrowserSession_, 1);
  objc_msgSend(v46, sel_setPresentationContextProvider_, v48[1]);

  return v46;
}

void __swiftcall ClinicalAccountLoginSession.presentationAnchor(for:)(UIWindow *__return_ptr retstr, ASWebAuthenticationSession a2)
{
  id v3 = *(id *)(v2 + OBJC_IVAR___HRUIClinicalAccountLoginSession_presentationAnchor);
}

id ClinicalAccountLoginSession.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ClinicalAccountLoginSession.init()()
{
}

id ClinicalAccountLoginSession.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClinicalAccountLoginSession()
{
  return self;
}

uint64_t method lookup function for ClinicalAccountLoginSession(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClinicalAccountLoginSession);
}

uint64_t dispatch thunk of ClinicalAccountLoginSession.__allocating_init(accountStore:presentationAnchor:funnelContext:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C2241E74(uint64_t a1, uint64_t a2)
{
  v3[53] = a2;
  v3[54] = v2;
  v3[52] = a1;
  uint64_t v4 = sub_1C254E560();
  v3[55] = v4;
  v3[56] = *(void *)(v4 - 8);
  v3[57] = swift_task_alloc();
  v3[58] = swift_task_alloc();
  v3[59] = swift_task_alloc();
  v3[60] = swift_task_alloc();
  v3[61] = swift_task_alloc();
  sub_1C2249070(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  v3[62] = swift_task_alloc();
  uint64_t v5 = sub_1C254C900();
  v3[63] = v5;
  v3[64] = *(void *)(v5 - 8);
  v3[65] = swift_task_alloc();
  v3[66] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2242020, v2, 0);
}

uint64_t sub_1C2242020()
{
  id v121 = v0;
  uint64_t v1 = v0[54];
  uint64_t v2 = *(void **)(v1 + 160);
  if (v2)
  {
    uint64_t v3 = v0[63];
    uint64_t v4 = v0[64];
    uint64_t v5 = v0[62];
    uint64_t v6 = v0[52];
    *(void *)(v1 + 160) = 0;

    sub_1C224942C(v6, v5, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
    {
      uint64_t v7 = (void *)v0[53];
      sub_1C2249A58(v0[62], (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
      if (v7
        && (v0[40] = v7,
            id v8 = v7,
            sub_1C2206F9C(),
            type metadata accessor for ASWebAuthenticationSessionError(0),
            (swift_dynamicCast() & 1) != 0))
      {
        uint64_t v9 = (void *)v0[41];
        v0[70] = v9;
        v0[43] = v9;
        sub_1C2249498(&qword_1EA2DDEA0, 255, type metadata accessor for ASWebAuthenticationSessionError);
        sub_1C254C7D0();
        if (v0[42] != 1)
        {
          sub_1C254E510();
          swift_retain_n();
          id v85 = v9;
          uint64_t v86 = sub_1C254E550();
          os_log_type_t v87 = sub_1C254FA20();
          BOOL v88 = os_log_type_enabled(v86, v87);
          uint64_t v89 = v0[59];
          uint64_t v90 = v0[55];
          uint64_t v91 = v0[56];
          uint64_t v92 = v0[54];
          if (v88)
          {
            uint64_t v118 = v0[59];
            os_log_type_t v114 = v87;
            uint64_t v93 = swift_slowAlloc();
            uint64_t v110 = swift_slowAlloc();
            uint64_t v120 = v110;
            *(_DWORD *)uint64_t v93 = 136315394;
            sub_1C2248028((long long *)(v92 + 112), (uint64_t)(v0 + 12));
            sub_1C2249030((uint64_t)(v0 + 12), (void (*)(void, void, void, void, void))sub_1C2247D8C);
            os_log_t log = v90;
            uint64_t v94 = sub_1C223D39C();
            uint64_t v104 = v86;
            unint64_t v96 = v95;
            sub_1C2249030((uint64_t)(v0 + 12), (void (*)(void, void, void, void, void))sub_1C2247DE4);
            v0[44] = sub_1C21AD354(v94, v96, &v120);
            sub_1C2550120();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v93 + 12) = 2080;
            v0[45] = v85;
            id v97 = v85;
            uint64_t v98 = sub_1C254F4F0();
            v0[46] = sub_1C21AD354(v98, v99, &v120);
            sub_1C2550120();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1C21A1000, v104, v114, "ClinicalAccountLoginSession: %s failed with session error %s", (uint8_t *)v93, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1C875A0B0](v110, -1, -1);
            MEMORY[0x1C875A0B0](v93, -1, -1);

            (*(void (**)(uint64_t, os_log_t))(v91 + 8))(v118, log);
          }
          else
          {

            swift_release_n();
            (*(void (**)(uint64_t, NSObject *))(v91 + 8))(v89, v90);
          }
          id v100 = v85;
          uint64_t v84 = sub_1C22432DC;
          goto LABEL_27;
        }
        uint64_t v10 = (uint64_t)(v0 + 22);
        sub_1C254E510();
        swift_retain_n();
        uint64_t v11 = sub_1C254E550();
        os_log_type_t v12 = sub_1C254FA40();
        BOOL v13 = os_log_type_enabled(v11, v12);
        uint64_t v14 = v0[60];
        uint64_t v15 = v0[55];
        uint64_t v16 = v0[56];
        uint64_t v17 = v0[54];
        if (v13)
        {
          uint64_t v116 = v0[60];
          *(void *)uint64_t v111 = v0[55];
          unint64_t v18 = (uint8_t *)swift_slowAlloc();
          uint64_t v106 = swift_slowAlloc();
          uint64_t v120 = v106;
          *(_DWORD *)unint64_t v18 = 136315138;
          sub_1C2248028((long long *)(v17 + 112), (uint64_t)(v0 + 17));
          sub_1C2249030((uint64_t)(v0 + 17), (void (*)(void, void, void, void, void))sub_1C2247D8C);
          uint64_t v19 = sub_1C223D39C();
          unint64_t v21 = v20;
          sub_1C2249030((uint64_t)(v0 + 17), (void (*)(void, void, void, void, void))sub_1C2247DE4);
          uint64_t v22 = v19;
          uint64_t v10 = (uint64_t)(v0 + 22);
          v0[47] = sub_1C21AD354(v22, v21, &v120);
          sub_1C2550120();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C21A1000, v11, v12, "ClinicalAccountLoginSession: %s was canceled", v18, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C875A0B0](v106, -1, -1);
          MEMORY[0x1C875A0B0](v18, -1, -1);

          (*(void (**)(uint64_t, os_log_type_t *))(v16 + 8))(v116, *(os_log_type_t **)v111);
        }
        else
        {

          swift_release_n();
          (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
        }
        sub_1C2248028((long long *)(v0[54] + 112), v10);
        sub_1C223D568(7);
        uint64_t v83 = sub_1C22430FC;
      }
      else
      {
        sub_1C254E510();
        swift_retain();
        id v58 = v7;
        swift_retain();
        id v59 = v7;
        id v60 = sub_1C254E550();
        os_log_type_t v61 = sub_1C254FA20();
        BOOL v62 = os_log_type_enabled(v60, v61);
        uint64_t v63 = v0[58];
        uint64_t v65 = v0[55];
        uint64_t v64 = v0[56];
        uint64_t v66 = v0[54];
        if (v62)
        {
          *(void *)unint64_t v103 = v0[53];
          uint64_t v117 = v0[55];
          uint64_t v67 = swift_slowAlloc();
          uint64_t v109 = swift_slowAlloc();
          uint64_t v120 = v109;
          *(_DWORD *)uint64_t v67 = 136315394;
          sub_1C2248028((long long *)(v66 + 112), (uint64_t)(v0 + 7));
          sub_1C2249030((uint64_t)(v0 + 7), (void (*)(void, void, void, void, void))sub_1C2247D8C);
          uint64_t v68 = sub_1C223D39C();
          *(void *)uint64_t v113 = v63;
          unint64_t v70 = v69;
          sub_1C2249030((uint64_t)(v0 + 7), (void (*)(void, void, void, void, void))sub_1C2247DE4);
          v0[49] = sub_1C21AD354(v68, v70, &v120);
          sub_1C2550120();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v67 + 12) = 2080;
          v0[38] = *(void *)v103;
          id v71 = v7;
          sub_1C2249070(0, (unint64_t *)&unk_1EBB6F530, (void (*)(uint64_t))sub_1C2206F9C);
          uint64_t v72 = sub_1C254F4F0();
          v0[39] = sub_1C21AD354(v72, v73, &v120);
          sub_1C2550120();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1C21A1000, v60, v61, "ClinicalAccountLoginSession: %s failed with error %s", (uint8_t *)v67, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C875A0B0](v109, -1, -1);
          MEMORY[0x1C875A0B0](v67, -1, -1);

          (*(void (**)(os_log_type_t *, uint64_t))(v64 + 8))(*(os_log_type_t **)v113, v117);
        }
        else
        {
          swift_release_n();

          (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
        }
        id v79 = v7;
        if (!v7)
        {
          sub_1C254F470();
          id v80 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
          long long v81 = (void *)sub_1C254F430();
          swift_bridgeObjectRelease();
          id v79 = objc_msgSend(v80, sel_initWithDomain_code_userInfo_, v81, 0, 0);
        }
        v0[73] = v79;
        id v82 = v7;
        uint64_t v83 = sub_1C22434C4;
      }
      uint64_t v84 = v83;
LABEL_27:
      return MEMORY[0x1F4188298](v84, 0, 0);
    }
    uint64_t v34 = v0[66];
    uint64_t v35 = v0[65];
    uint64_t v36 = v0[63];
    uint64_t v37 = v0[64];
    (*(void (**)(uint64_t, void, uint64_t))(v37 + 32))(v34, v0[62], v36);
    sub_1C254E510();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v35, v34, v36);
    swift_retain_n();
    id v38 = sub_1C254E550();
    os_log_type_t v39 = sub_1C254FA40();
    BOOL v40 = os_log_type_enabled(v38, v39);
    uint64_t v41 = v0[65];
    uint64_t v42 = v0[64];
    uint64_t v119 = v0[63];
    uint64_t v43 = v0[61];
    uint64_t v44 = v0[55];
    uint64_t v45 = v0[56];
    uint64_t v46 = v0[54];
    if (v40)
    {
      uint64_t v108 = v0[61];
      uint64_t v101 = v0[65];
      uint64_t v47 = swift_slowAlloc();
      uint64_t v105 = swift_slowAlloc();
      uint64_t v120 = v105;
      *(_DWORD *)uint64_t v47 = 136315394;
      sub_1C2248028((long long *)(v46 + 112), (uint64_t)(v0 + 27));
      sub_1C2249030((uint64_t)(v0 + 27), (void (*)(void, void, void, void, void))sub_1C2247D8C);
      os_log_type_t v102 = v39;
      uint64_t v48 = sub_1C223D39C();
      unint64_t v50 = v49;
      sub_1C2249030((uint64_t)(v0 + 27), (void (*)(void, void, void, void, void))sub_1C2247DE4);
      v0[48] = sub_1C21AD354(v48, v50, &v120);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      v0[36] = sub_1C254C840();
      v0[37] = v51;
      sub_1C25508F0();
      id v52 = (id)HKSensitiveLogItem();
      swift_unknownObjectRelease();
      sub_1C25501E0();
      swift_unknownObjectRelease();
      uint64_t v53 = sub_1C254F4F0();
      v0[51] = sub_1C21AD354(v53, v54, &v120);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      uint64_t v57 = *(void (**)(void, void))(v42 + 8);
      uint64_t v56 = v42 + 8;
      uint64_t v55 = v57;
      v57(v101, v119);
      _os_log_impl(&dword_1C21A1000, v38, v102, "ClinicalAccountLoginSession: %s finished with callback URL %s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v105, -1, -1);
      MEMORY[0x1C875A0B0](v47, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v108, v44);
    }
    else
    {
      swift_release_n();
      int v76 = *(void (**)(void, void))(v42 + 8);
      uint64_t v56 = v42 + 8;
      uint64_t v55 = v76;
      v76(v41, v119);

      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
    }
    v0[68] = v55;
    v0[67] = v56;
    unint64_t v77 = (void *)swift_task_alloc();
    v0[69] = v77;
    *unint64_t v77 = v0;
    v77[1] = sub_1C2242F10;
    uint64_t v78 = v0[66];
    return sub_1C22436A8(v78);
  }
  else
  {
    sub_1C254E510();
    swift_retain_n();
    uint64_t v23 = sub_1C254E550();
    os_log_type_t v24 = sub_1C254FA20();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v27 = v0[56];
    uint64_t v26 = v0[57];
    uint64_t v29 = v0[54];
    uint64_t v28 = v0[55];
    if (v25)
    {
      *(void *)uint64_t v112 = v0[55];
      id v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v107 = swift_slowAlloc();
      uint64_t v120 = v107;
      *(_DWORD *)id v30 = 136315138;
      sub_1C2248028((long long *)(v29 + 112), (uint64_t)(v0 + 2));
      sub_1C2249030((uint64_t)(v0 + 2), (void (*)(void, void, void, void, void))sub_1C2247D8C);
      uint64_t v31 = sub_1C223D39C();
      unint64_t v33 = v32;
      sub_1C2249030((uint64_t)(v0 + 2), (void (*)(void, void, void, void, void))sub_1C2247DE4);
      v0[50] = sub_1C21AD354(v31, v33, &v120);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v23, v24, "ClinicalAccountLoginSession: %s got a 2nd or more completion callback, ignoring", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v107, -1, -1);
      MEMORY[0x1C875A0B0](v30, -1, -1);

      (*(void (**)(uint64_t, os_log_type_t *))(v27 + 8))(v26, *(os_log_type_t **)v112);
    }
    else
    {

      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v74 = (uint64_t (*)(void))v0[1];
    return v74();
  }
}

uint64_t sub_1C2242F10()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 432);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C2243020, v1, 0);
}

uint64_t sub_1C2243020()
{
  (*(void (**)(void, void))(v0 + 544))(*(void *)(v0 + 528), *(void *)(v0 + 504));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C22430FC()
{
  sub_1C254F820();
  *(void *)(v0 + 568) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2243190, v2, v1);
}

uint64_t sub_1C2243190()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = swift_release();
  uint64_t v3 = *(void (**)(uint64_t))(v1 + 168);
  if (v3) {
    v3(v2);
  }
  uint64_t v4 = *(void *)(v0 + 432);
  return MEMORY[0x1F4188298](sub_1C2243214, v4, 0);
}

uint64_t sub_1C2243214()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C22432DC()
{
  sub_1C254F820();
  *(void *)(v0 + 576) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2243370, v2, v1);
}

uint64_t sub_1C2243370()
{
  uint64_t v1 = *(void *)(v0 + 560);
  uint64_t v2 = *(void *)(v0 + 432);
  swift_release();
  (*(void (**)(uint64_t))(v2 + 184))(v1);
  return MEMORY[0x1F4188298](sub_1C22433F8, v2, 0);
}

uint64_t sub_1C22433F8()
{
  uint64_t v1 = *(void **)(v0 + 560);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C22434C4()
{
  sub_1C254F820();
  *(void *)(v0 + 592) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2243558, v2, v1);
}

uint64_t sub_1C2243558()
{
  uint64_t v1 = *(void *)(v0 + 584);
  uint64_t v2 = *(void *)(v0 + 432);
  swift_release();
  (*(void (**)(uint64_t))(v2 + 184))(v1);
  return MEMORY[0x1F4188298](sub_1C22435E0, v2, 0);
}

uint64_t sub_1C22435E0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C22436A8(uint64_t a1)
{
  v2[44] = a1;
  v2[45] = v1;
  uint64_t v3 = sub_1C254C900();
  v2[46] = v3;
  v2[47] = *(void *)(v3 - 8);
  v2[48] = swift_task_alloc();
  v2[49] = swift_task_alloc();
  v2[50] = swift_task_alloc();
  uint64_t v4 = sub_1C254E560();
  v2[51] = v4;
  v2[52] = *(void *)(v4 - 8);
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  uint64_t v5 = sub_1C254CB40();
  v2[56] = v5;
  v2[57] = *(void *)(v5 - 8);
  v2[58] = swift_task_alloc();
  v2[59] = type metadata accessor for HealthRecordsURLParsingResult();
  v2[60] = swift_task_alloc();
  v2[61] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2243898, v1, 0);
}

uint64_t sub_1C2243898()
{
  uint64_t v97 = v0;
  uint64_t v2 = *(void *)(v0 + 480);
  uint64_t v1 = *(void *)(v0 + 488);
  uint64_t v3 = *(void *)(v0 + 352);
  type metadata accessor for HealthRecordsURLHandler();
  *(void *)(v0 + 496) = swift_initStackObject();
  sub_1C2351660(v3, v1);
  sub_1C22491F0(v1, v2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 9:
      sub_1C254E510();
      swift_retain_n();
      uint64_t v15 = sub_1C254E550();
      os_log_type_t v16 = sub_1C254FA40();
      BOOL v17 = os_log_type_enabled(v15, v16);
      uint64_t v18 = *(void *)(v0 + 432);
      uint64_t v20 = *(void *)(v0 + 408);
      uint64_t v19 = *(void *)(v0 + 416);
      uint64_t v21 = *(void *)(v0 + 360);
      if (v17)
      {
        uint64_t v92 = *(void *)(v0 + 432);
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v88 = swift_slowAlloc();
        uint64_t v95 = v88;
        *(_DWORD *)uint64_t v22 = 136315138;
        sub_1C2248028((long long *)(v21 + 112), v0 + 96);
        sub_1C2249030(v0 + 96, (void (*)(void, void, void, void, void))sub_1C2247D8C);
        uint64_t v23 = sub_1C223D39C();
        uint64_t v89 = v20;
        unint64_t v25 = v24;
        sub_1C2249030(v0 + 96, (void (*)(void, void, void, void, void))sub_1C2247DE4);
        *(void *)(v0 + 320) = sub_1C21AD354(v23, v25, &v95);
        sub_1C2550120();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C21A1000, v15, v16, "ClinicalAccountLoginSession: %s was not granted access, we're done here", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v88, -1, -1);
        MEMORY[0x1C875A0B0](v22, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v92, v89);
      }
      else
      {

        swift_release_n();
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
      }
      sub_1C2248028((long long *)(*(void *)(v0 + 360) + 112), v0 + 136);
      sub_1C223D568(7);
      uint64_t v65 = sub_1C2244804;
      goto LABEL_17;
    case 8:
      uint64_t v26 = **(void ***)(v0 + 480);
      *(void *)(v0 + 520) = v26;
      sub_1C254E510();
      swift_retain();
      id v27 = v26;
      swift_retain();
      id v28 = v26;
      uint64_t v29 = sub_1C254E550();
      os_log_type_t v30 = sub_1C254FA20();
      BOOL v31 = os_log_type_enabled(v29, v30);
      uint64_t v32 = *(void *)(v0 + 440);
      uint64_t v33 = *(void *)(v0 + 408);
      uint64_t v34 = *(void *)(v0 + 416);
      uint64_t v35 = *(void *)(v0 + 360);
      if (v31)
      {
        uint64_t v36 = swift_slowAlloc();
        uint64_t v90 = swift_slowAlloc();
        uint64_t v95 = v90;
        *(_DWORD *)uint64_t v36 = 136315394;
        sub_1C2248028((long long *)(v35 + 112), v0 + 176);
        sub_1C2249030(v0 + 176, (void (*)(void, void, void, void, void))sub_1C2247D8C);
        os_log_type_t type = v30;
        uint64_t v37 = sub_1C223D39C();
        uint64_t v93 = v32;
        unint64_t v39 = v38;
        sub_1C2249030(v0 + 176, (void (*)(void, void, void, void, void))sub_1C2247DE4);
        *(void *)(v0 + 328) = sub_1C21AD354(v37, v39, &v95);
        sub_1C2550120();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v36 + 12) = 2080;
        *(void *)(v0 + 336) = v26;
        id v40 = v26;
        sub_1C2206F9C();
        uint64_t v41 = sub_1C254F4F0();
        *(void *)(v0 + 344) = sub_1C21AD354(v41, v42, &v95);
        sub_1C2550120();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C21A1000, v29, type, "ClinicalAccountLoginSession: %s got redirected with error %s", (uint8_t *)v36, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v90, -1, -1);
        MEMORY[0x1C875A0B0](v36, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v93, v33);
      }
      else
      {
        swift_release_n();

        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
      }
      sub_1C22492B0();
      *(_DWORD *)(v0 + 132) = *(_DWORD *)(v66 + 48);
      uint64_t v65 = sub_1C22445D0;
LABEL_17:
      uint64_t v67 = v65;
      goto LABEL_20;
    case 7:
      uint64_t v5 = *(uint64_t **)(v0 + 480);
      uint64_t v7 = *(void *)(v0 + 456);
      uint64_t v6 = *(void *)(v0 + 464);
      uint64_t v8 = *(void *)(v0 + 448);
      uint64_t v9 = *v5;
      uint64_t v10 = v5[1];
      *(void *)(v0 + 504) = v10;
      sub_1C2249340();
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v6, (char *)v5 + *(int *)(v11 + 48), v8);
      os_log_type_t v12 = (void *)swift_task_alloc();
      *(void *)(v0 + 512) = v12;
      *os_log_type_t v12 = v0;
      v12[1] = sub_1C22443A8;
      uint64_t v13 = *(void *)(v0 + 464);
      return sub_1C2244C2C(v9, v10, v13);
  }
  uint64_t v43 = *(void *)(v0 + 400);
  uint64_t v44 = *(void *)(v0 + 368);
  uint64_t v45 = *(void *)(v0 + 376);
  uint64_t v46 = *(NSObject **)(v0 + 352);
  sub_1C254E510();
  uint64_t v47 = *(void (**)(uint64_t, os_log_t, uint64_t))(v45 + 16);
  v47(v43, v46, v44);
  swift_retain_n();
  uint64_t v48 = sub_1C254E550();
  os_log_type_t v49 = sub_1C254FA30();
  BOOL v50 = os_log_type_enabled(v48, v49);
  uint64_t v51 = *(void *)(v0 + 416);
  uint64_t v52 = *(void *)(v0 + 424);
  uint64_t v53 = *(void *)(v0 + 408);
  os_log_t log = *(os_log_t *)(v0 + 400);
  if (v50)
  {
    uint64_t v91 = *(void *)(v0 + 416);
    id v80 = *(NSObject **)(v0 + 392);
    uint64_t v81 = *(void *)(v0 + 384);
    uint64_t v54 = *(void *)(v0 + 368);
    uint64_t v82 = *(void *)(v0 + 376);
    os_log_type_t v87 = v48;
    uint64_t v55 = *(void *)(v0 + 360);
    uint64_t v56 = swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    uint64_t v95 = v83;
    *(_DWORD *)uint64_t v56 = 136315394;
    sub_1C2248028((long long *)(v55 + 112), v0 + 216);
    sub_1C2249030(v0 + 216, (void (*)(void, void, void, void, void))sub_1C2247D8C);
    uint64_t v84 = v52;
    *(void *)typea = v53;
    uint64_t v57 = sub_1C223D39C();
    unint64_t v59 = v58;
    sub_1C2249030(v0 + 216, (void (*)(void, void, void, void, void))sub_1C2247DE4);
    *(void *)(v0 + 304) = sub_1C21AD354(v57, v59, &v95);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 12) = 2080;
    v47((uint64_t)v80, log, v54);
    v47(v81, v80, v54);
    sub_1C25508F0();
    id v60 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v61 = sub_1C254F4F0();
    unint64_t v63 = v62;
    uint64_t v64 = *(void (**)(os_log_t, uint64_t))(v82 + 8);
    v64(v80, v54);
    *(void *)(v0 + 312) = sub_1C21AD354(v61, v63, &v95);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    v64(log, v54);
    _os_log_impl(&dword_1C21A1000, v87, v49, "ClinicalAccountLoginSession: %s got an unexpected callback URL %s", (uint8_t *)v56, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v83, -1, -1);
    MEMORY[0x1C875A0B0](v56, -1, -1);

    (*(void (**)(uint64_t, os_log_type_t *))(v91 + 8))(v84, *(os_log_type_t **)typea);
  }
  else
  {
    uint64_t v69 = *(void *)(v0 + 368);
    uint64_t v68 = *(void *)(v0 + 376);
    swift_release_n();
    (*(void (**)(os_log_t, uint64_t))(v68 + 8))(log, v69);

    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v52, v53);
  }
  sub_1C254F470();
  uint64_t v70 = MEMORY[0x1E4FBB1A0];
  sub_1C2248FD8(0, &qword_1EA2DEFF8, &qword_1EA2DF000);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
  *(void *)(inited + 32) = sub_1C254F470();
  *(void *)(inited + 40) = v72;
  uint64_t v95 = 0;
  unint64_t v96 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  uint64_t v95 = 0xD00000000000001DLL;
  unint64_t v96 = 0x80000001C2577170;
  sub_1C2249498(&qword_1EA2DF020, 255, MEMORY[0x1E4F276F0]);
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v73 = v95;
  unint64_t v74 = v96;
  *(void *)(inited + 72) = v70;
  *(void *)(inited + 48) = v73;
  *(void *)(inited + 56) = v74;
  sub_1C22045C0(inited);
  id v75 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
  int v76 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  unint64_t v77 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v78 = objc_msgSend(v75, sel_initWithDomain_code_userInfo_, v76, 3, v77);
  *(void *)(v0 + 544) = v78;

  id v79 = v78;
  uint64_t v67 = sub_1C2244A18;
LABEL_20:
  return MEMORY[0x1F4188298](v67, 0, 0);
}

uint64_t sub_1C22443A8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 360);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1C22444D4, v1, 0);
}

uint64_t sub_1C22444D4()
{
  uint64_t v1 = v0[61];
  uint64_t v3 = v0[57];
  uint64_t v2 = v0[58];
  uint64_t v4 = v0[56];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1C2249254(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C22445D0()
{
  sub_1C254F820();
  *(void *)(v0 + 528) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2244664, v2, v1);
}

uint64_t sub_1C2244664()
{
  uint64_t v1 = *(void *)(v0 + 520);
  uint64_t v2 = *(void *)(v0 + 360);
  swift_release();
  (*(void (**)(uint64_t))(v2 + 184))(v1);
  return MEMORY[0x1F4188298](sub_1C22446EC, v2, 0);
}

uint64_t sub_1C22446EC()
{
  uint64_t v1 = *(int *)(v0 + 132);
  uint64_t v2 = *(void **)(v0 + 520);
  uint64_t v3 = *(void *)(v0 + 488);
  uint64_t v4 = *(void *)(v0 + 480);
  swift_release();

  sub_1C2249254(v3);
  sub_1C2249A58(v4 + v1, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1C2244804()
{
  sub_1C254F820();
  *(void *)(v0 + 536) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2244898, v2, v1);
}

uint64_t sub_1C2244898()
{
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = swift_release();
  uint64_t v3 = *(void (**)(uint64_t))(v1 + 168);
  if (v3) {
    v3(v2);
  }
  uint64_t v4 = *(void *)(v0 + 360);
  return MEMORY[0x1F4188298](sub_1C224491C, v4, 0);
}

uint64_t sub_1C224491C()
{
  uint64_t v1 = v0[61];
  uint64_t v2 = v0[60];
  uint64_t v3 = v0[56];
  uint64_t v4 = v0[57];
  swift_release();
  sub_1C2249254(v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C2244A18()
{
  sub_1C254F820();
  *(void *)(v0 + 552) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2244AAC, v2, v1);
}

uint64_t sub_1C2244AAC()
{
  uint64_t v1 = *(void *)(v0 + 544);
  uint64_t v2 = *(void *)(v0 + 360);
  swift_release();
  (*(void (**)(uint64_t))(v2 + 184))(v1);
  return MEMORY[0x1F4188298](sub_1C2244B34, v2, 0);
}

uint64_t sub_1C2244B34()
{
  uint64_t v1 = (void *)v0[68];
  uint64_t v2 = v0[61];
  uint64_t v3 = v0[60];

  swift_release();
  sub_1C2249254(v2);
  sub_1C2249254(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C2244C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[49] = a3;
  v4[50] = v3;
  v4[47] = a1;
  v4[48] = a2;
  sub_1C2249070(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  v4[51] = swift_task_alloc();
  sub_1C2249070(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  v4[52] = swift_task_alloc();
  uint64_t v5 = sub_1C254CB40();
  v4[53] = v5;
  v4[54] = *(void *)(v5 - 8);
  v4[55] = swift_task_alloc();
  v4[56] = swift_task_alloc();
  v4[57] = swift_task_alloc();
  v4[58] = swift_task_alloc();
  uint64_t v6 = sub_1C254E560();
  v4[59] = v6;
  v4[60] = *(void *)(v6 - 8);
  v4[61] = swift_task_alloc();
  v4[62] = swift_task_alloc();
  v4[63] = swift_task_alloc();
  v4[64] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2244E2C, v3, 0);
}

uint64_t sub_1C2244E2C()
{
  uint64_t v41 = v0;
  uint64_t v1 = v0[58];
  uint64_t v2 = v0[53];
  uint64_t v3 = v0[54];
  uint64_t v4 = v0[49];
  sub_1C254E510();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[65] = v5;
  v0[66] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1C254E550();
  os_log_type_t v7 = sub_1C254FA40();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v39 = v0[64];
    uint64_t v37 = v0[60];
    uint64_t v38 = v0[59];
    uint64_t v33 = v0[58];
    uint64_t v8 = v0[54];
    uint64_t v32 = v0[53];
    uint64_t v9 = v0[50];
    uint64_t v34 = v0[47];
    uint64_t v35 = v0[48];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v40 = v36;
    *(_DWORD *)uint64_t v10 = 136315650;
    sub_1C2248028((long long *)(v9 + 112), (uint64_t)(v0 + 15));
    sub_1C2249030((uint64_t)(v0 + 15), (void (*)(void, void, void, void, void))sub_1C2247D8C);
    uint64_t v11 = sub_1C223D39C();
    unint64_t v13 = v12;
    sub_1C2249030((uint64_t)(v0 + 15), (void (*)(void, void, void, void, void))sub_1C2247DE4);
    v0[42] = sub_1C21AD354(v11, v13, &v40);
    sub_1C2550120();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    sub_1C2249498((unint64_t *)&qword_1EA2DE1E0, 255, MEMORY[0x1E4F27990]);
    uint64_t v14 = sub_1C2550810();
    v0[43] = sub_1C21AD354(v14, v15, &v40);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    os_log_type_t v16 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v16(v33, v32);
    *(_WORD *)(v10 + 22) = 2080;
    v0[34] = v34;
    v0[35] = v35;
    swift_bridgeObjectRetain();
    sub_1C25508F0();
    id v17 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v18 = sub_1C254F4F0();
    v0[46] = sub_1C21AD354(v18, v19, &v40);
    sub_1C2550120();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v6, v7, "ClinicalAccountLoginSession: %s with state %s will now exchange code %s for token", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v36, -1, -1);
    MEMORY[0x1C875A0B0](v10, -1, -1);

    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v20(v39, v38);
  }
  else
  {
    uint64_t v21 = v0[64];
    uint64_t v22 = v0[59];
    uint64_t v23 = v0[60];
    uint64_t v24 = v0[58];
    uint64_t v25 = v0[53];
    uint64_t v26 = v0[54];
    swift_release_n();
    os_log_type_t v16 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v16(v24, v25);

    swift_bridgeObjectRelease_n();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v20(v21, v22);
  }
  v0[68] = v16;
  v0[67] = v20;
  id v27 = *(void **)(v0[50] + 152);
  uint64_t v28 = sub_1C254CB00();
  v0[69] = v28;
  uint64_t v29 = sub_1C254F430();
  v0[70] = v29;
  v0[2] = v0;
  v0[7] = v0 + 45;
  v0[3] = sub_1C2245344;
  uint64_t v30 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C2246370;
  v0[13] = &block_descriptor;
  v0[14] = v30;
  objc_msgSend(v27, sel_endLoginSessionWithState_code_completion_, v28, v29, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2245344()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 400);
  return MEMORY[0x1F4188298](sub_1C2245438, v1, 0);
}

uint64_t sub_1C2245438()
{
  os_log_type_t v114 = v0;
  uint64_t v1 = (void *)v0[70];
  uint64_t v2 = (void *)v0[69];
  uint64_t v3 = (void *)v0[45];
  v0[71] = v3;

  id v4 = objc_msgSend(v3, sel_error);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = (void (*)(uint64_t, uint64_t, uint64_t))v0[65];
    uint64_t v7 = v0[57];
    uint64_t v8 = v0[53];
    uint64_t v9 = v0[49];
    sub_1C254E510();
    v6(v7, v9, v8);
    swift_retain_n();
    id v10 = v5;
    uint64_t v11 = sub_1C254E550();
    os_log_type_t type = sub_1C254FA20();
    BOOL v12 = os_log_type_enabled(v11, type);
    unint64_t v13 = (void (*)(uint64_t, uint64_t))v0[68];
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[67];
    uint64_t v15 = v0[63];
    uint64_t v108 = v0[57];
    uint64_t v111 = v0[59];
    uint64_t v16 = v0[53];
    uint64_t v17 = v0[50];
    if (v12)
    {
      uint64_t v93 = (void (*)(uint64_t, uint64_t))v0[68];
      uint64_t v102 = v0[63];
      uint64_t v18 = swift_slowAlloc();
      uint64_t v98 = swift_slowAlloc();
      uint64_t v113 = v98;
      *(_DWORD *)uint64_t v18 = 136315650;
      sub_1C2248028((long long *)(v17 + 112), (uint64_t)(v0 + 25));
      sub_1C2249030((uint64_t)(v0 + 25), (void (*)(void, void, void, void, void))sub_1C2247D8C);
      os_log_t log = v11;
      uint64_t v19 = sub_1C223D39C();
      uint64_t v20 = v3;
      unint64_t v22 = v21;
      sub_1C2249030((uint64_t)(v0 + 25), (void (*)(void, void, void, void, void))sub_1C2247DE4);
      v0[38] = sub_1C21AD354(v19, v22, &v113);
      sub_1C2550120();
      swift_release_n();
      uint64_t v3 = v20;
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      sub_1C2249498((unint64_t *)&qword_1EA2DE1E0, 255, MEMORY[0x1E4F27990]);
      uint64_t v23 = sub_1C2550810();
      v0[39] = sub_1C21AD354(v23, v24, &v113);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      v93(v108, v16);
      *(_WORD *)(v18 + 22) = 2080;
      v0[40] = v10;
      sub_1C2206F9C();
      id v25 = v10;
      uint64_t v26 = sub_1C254F4F0();
      v0[41] = sub_1C21AD354(v26, v27, &v113);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, log, type, "ClinicalAccountLoginSession: %s failed to end session with state %s. Error: %s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v98, -1, -1);
      MEMORY[0x1C875A0B0](v18, -1, -1);

      v14(v102, v111);
    }
    else
    {
      swift_release_n();
      v13(v108, v16);

      v14(v15, v111);
    }
    id v33 = objc_msgSend(v3, sel_alternateCredentialPersistentID);
    if (v33)
    {
      uint64_t v34 = v33;
      id v35 = objc_msgSend(v3, sel_account);
      if (v35)
      {
        uint64_t v36 = v35;
        sub_1C254E510();
        id v37 = v36;
        uint64_t v38 = sub_1C254E550();
        os_log_type_t v39 = sub_1C254FA40();
        if (os_log_type_enabled(v38, v39))
        {
          uint64_t v97 = (void (*)(uint64_t, uint64_t))v0[68];
          uint64_t v109 = (void (*)(void, uint64_t))v0[67];
          *(void *)typea = v0[62];
          uint64_t v104 = v0[59];
          os_log_type_t v101 = v39;
          uint64_t v40 = v0[56];
          uint64_t v94 = v0[53];
          id v105 = v10;
          uint64_t v41 = (uint8_t *)swift_slowAlloc();
          uint64_t v99 = swift_slowAlloc();
          uint64_t v113 = v99;
          *(_DWORD *)uint64_t v41 = 136315138;
          id v42 = objc_msgSend(v37, sel_identifier);
          sub_1C254CB20();

          sub_1C2249498((unint64_t *)&qword_1EA2DE1E0, 255, MEMORY[0x1E4F27990]);
          uint64_t v43 = sub_1C2550810();
          unint64_t v45 = v44;
          v97(v40, v94);
          v0[37] = sub_1C21AD354(v43, v45, &v113);
          sub_1C2550120();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C21A1000, v38, v101, "ClinicalAccountLoginSession: will ask user to replace account %s", v41, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C875A0B0](v99, -1, -1);
          uint64_t v46 = v41;
          id v10 = v105;
          MEMORY[0x1C875A0B0](v46, -1, -1);

          v109(*(void *)typea, v104);
        }
        else
        {
          int v76 = (void (*)(uint64_t, uint64_t))v0[67];
          uint64_t v77 = v0[62];
          uint64_t v78 = v0[59];

          v76(v77, v78);
        }
        uint64_t v79 = v0[52];
        uint64_t v80 = v0[50];
        uint64_t v81 = sub_1C254F840();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v79, 1, 1, v81);
        uint64_t v83 = sub_1C2249498(&qword_1EA2DF010, v82, (void (*)(uint64_t))type metadata accessor for ClinicalAccountLoginSessionCallbackHandler);
        uint64_t v84 = (void *)swift_allocObject();
        v84[2] = v80;
        v84[3] = v83;
        v84[4] = v80;
        v84[5] = v34;
        swift_retain_n();
        id v85 = v34;
        sub_1C24D0A0C(v79, (uint64_t)&unk_1EA2DF018, (uint64_t)v84);

        swift_release();
        goto LABEL_22;
      }
    }
    uint64_t v47 = (void (*)(uint64_t, uint64_t, uint64_t))v0[65];
    uint64_t v48 = v0[53];
    uint64_t v49 = v0[54];
    uint64_t v50 = v0[51];
    uint64_t v112 = v3;
    uint64_t v51 = v0[49];
    uint64_t v52 = v10;
    uint64_t v53 = self;
    uint64_t v54 = (void *)sub_1C254F430();
    uint64_t v55 = (void *)sub_1C254C810();
    id v56 = objc_msgSend(v53, sel_hk_error_description_underlyingError_, 100, v54, v55);

    v47(v50, v51, v48);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v48);
    sub_1C2246460(v56, v50);

LABEL_21:
    sub_1C2249A58(v50, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
LABEL_22:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v92 = (uint64_t (*)(void))v0[1];
    return v92();
  }
  id v28 = objc_msgSend(v3, sel_account);
  v0[72] = v28;
  if (!v28)
  {
    uint64_t v112 = v3;
    uint64_t v57 = (void (*)(uint64_t, uint64_t, uint64_t))v0[65];
    uint64_t v58 = v0[55];
    uint64_t v59 = v0[53];
    uint64_t v60 = v0[49];
    sub_1C254E510();
    v57(v58, v60, v59);
    swift_retain_n();
    uint64_t v61 = sub_1C254E550();
    os_log_type_t v62 = sub_1C254FA30();
    BOOL v63 = os_log_type_enabled(v61, v62);
    uint64_t v64 = (void (*)(uint64_t, uint64_t))v0[68];
    uint64_t v65 = (void (*)(uint64_t, uint64_t))v0[67];
    uint64_t v66 = v0[61];
    uint64_t v67 = v0[59];
    uint64_t v110 = v0[55];
    uint64_t v68 = v0[53];
    uint64_t v69 = v0[50];
    if (v63)
    {
      id v100 = (void (*)(uint64_t, uint64_t))v0[68];
      uint64_t v70 = swift_slowAlloc();
      uint64_t v103 = swift_slowAlloc();
      uint64_t v113 = v103;
      *(_DWORD *)uint64_t v70 = 136315394;
      sub_1C2248028((long long *)(v69 + 112), (uint64_t)(v0 + 20));
      sub_1C2249030((uint64_t)(v0 + 20), (void (*)(void, void, void, void, void))sub_1C2247D8C);
      uint64_t v71 = sub_1C223D39C();
      os_log_type_t loga = v62;
      unint64_t v73 = v72;
      sub_1C2249030((uint64_t)(v0 + 20), (void (*)(void, void, void, void, void))sub_1C2247DE4);
      v0[44] = sub_1C21AD354(v71, v73, &v113);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v70 + 12) = 2080;
      sub_1C2249498((unint64_t *)&qword_1EA2DE1E0, 255, MEMORY[0x1E4F27990]);
      uint64_t v74 = sub_1C2550810();
      v0[36] = sub_1C21AD354(v74, v75, &v113);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      v100(v110, v68);
      _os_log_impl(&dword_1C21A1000, v61, loga, "ClinicalAccountLoginSession: %s failed to end session with state %s: ended successfully but got no account", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v103, -1, -1);
      MEMORY[0x1C875A0B0](v70, -1, -1);

      v65(v66, v67);
    }
    else
    {
      swift_release_n();
      v64(v110, v68);

      v65(v66, v67);
    }
    uint64_t v86 = (void (*)(uint64_t, uint64_t, uint64_t))v0[65];
    uint64_t v87 = v0[53];
    uint64_t v88 = v0[54];
    uint64_t v50 = v0[51];
    uint64_t v89 = v0[49];
    uint64_t v90 = self;
    uint64_t v91 = (void *)sub_1C254F430();
    id v56 = objc_msgSend(v90, sel_hk_error_description_, 100, v91);

    v86(v50, v89, v87);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v88 + 56))(v50, 0, 1, v87);
    sub_1C2246460(v56, v50);
    goto LABEL_21;
  }
  uint64_t v29 = (uint64_t)v28;
  uint64_t v30 = (void *)swift_task_alloc();
  v0[73] = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_1C2246178;
  uint64_t v31 = v0[49];
  return sub_1C2246CD4(v29, v31);
}

uint64_t sub_1C2246178()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 400);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C2246288, v1, 0);
}

uint64_t sub_1C2246288()
{
  uint64_t v1 = *(void **)(v0 + 568);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C2246370(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  **(void **)(*(void *)(v2 + 64) + 40) = a2;
  id v3 = a2;
  return MEMORY[0x1F41881F8](v2);
}

uint64_t sub_1C22463C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  void *v7 = v5;
  v7[1] = sub_1C2223E3C;
  return sub_1C22476E8(a5);
}

void sub_1C2246460(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  BOOL v63 = &v56[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
  sub_1C2249070(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  uint64_t v62 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v66 = &v56[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = &v56[-v14];
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = &v56[-v16];
  uint64_t v65 = sub_1C254E560();
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v19 = &v56[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C254E510();
  uint64_t v67 = a2;
  sub_1C224942C(a2, (uint64_t)v17, (unint64_t *)&qword_1EA2DEFF0, v9);
  swift_retain();
  id v20 = a1;
  swift_retain();
  id v21 = a1;
  unint64_t v22 = sub_1C254E550();
  os_log_type_t v23 = sub_1C254FA40();
  int v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v61 = v6;
    uint64_t v26 = v25;
    uint64_t v59 = swift_slowAlloc();
    v69[0] = v59;
    *(_DWORD *)uint64_t v26 = 136315650;
    os_log_t v58 = v22;
    sub_1C2248028((long long *)(v2 + 112), (uint64_t)v74);
    sub_1C2249030((uint64_t)v74, (void (*)(void, void, void, void, void))sub_1C2247D8C);
    uint64_t v27 = sub_1C223D39C();
    uint64_t v60 = v7;
    unint64_t v29 = v28;
    sub_1C2249030((uint64_t)v74, (void (*)(void, void, void, void, void))sub_1C2247DE4);
    *(void *)&long long v70 = sub_1C21AD354(v27, v29, v69);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v26 + 12) = 2080;
    int v57 = v24;
    uint64_t v30 = v3;
    uint64_t v31 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
    sub_1C224942C((uint64_t)v17, (uint64_t)v15, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
    uint64_t v32 = sub_1C254F4F0();
    *(void *)&long long v70 = sub_1C21AD354(v32, v33, v69);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    uint64_t v34 = v31;
    uint64_t v3 = v30;
    sub_1C2249A58((uint64_t)v17, (unint64_t *)&qword_1EA2DEFF0, v34);
    *(_WORD *)(v26 + 22) = 2080;
    *(void *)&long long v70 = a1;
    id v35 = a1;
    id v36 = a1;
    sub_1C2206F9C();
    sub_1C25508F0();
    id v37 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v38 = sub_1C254F4F0();
    unint64_t v40 = v39;

    *(void *)&long long v70 = sub_1C21AD354(v38, v40, v69);
    uint64_t v7 = v60;
    sub_1C2550120();
    swift_bridgeObjectRelease();

    os_log_t v41 = v58;
    _os_log_impl(&dword_1C21A1000, v58, (os_log_type_t)v57, "ClinicalAccountLoginSession: %s with state %s failed to log in: %s", (uint8_t *)v26, 0x20u);
    uint64_t v42 = v59;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v42, -1, -1);
    uint64_t v43 = v26;
    uint64_t v6 = v61;
    MEMORY[0x1C875A0B0](v43, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_1C2249A58((uint64_t)v17, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  }
  (*(void (**)(unsigned char *, uint64_t))(v64 + 8))(v19, v65);
  sub_1C2248FD8(0, &qword_1EA2DEFF8, &qword_1EA2DF000);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
  *(void *)(inited + 32) = 0xD00000000000002BLL;
  *(void *)(inited + 40) = 0x80000001C25770A0;
  swift_getErrorValue();
  uint64_t v45 = v72;
  uint64_t v46 = v73;
  *(void *)(inited + 72) = v73;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(boxed_opaque_existential_1, v45, v46);
  unint64_t v48 = sub_1C22045C0(inited);
  uint64_t v49 = v66;
  sub_1C224942C(v67, (uint64_t)v66, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v49, 1, v6) == 1)
  {
    sub_1C2249A58((uint64_t)v49, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  }
  else
  {
    uint64_t v50 = v63;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v63, v49, v6);
    uint64_t v71 = v6;
    uint64_t v51 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v70);
    (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v7 + 16))(v51, v50, v6);
    sub_1C2206B9C(&v70, v69);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v68 = v48;
    sub_1C23657C0(v69, 0xD00000000000002BLL, 0x80000001C2577070, isUniquelyReferenced_nonNull_native);
    unint64_t v48 = v68;
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v50, v6);
  }
  id v53 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EA2DD768 != -1) {
    swift_once();
  }
  uint64_t v54 = qword_1EA2E2880;
  sub_1C221CAE8(v48);
  swift_bridgeObjectRelease();
  uint64_t v55 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v53, sel_postNotificationName_object_userInfo_, v54, v3, v55);
}

uint64_t sub_1C2246CD4(uint64_t a1, uint64_t a2)
{
  v3[51] = a2;
  v3[52] = v2;
  v3[50] = a1;
  uint64_t v4 = sub_1C254CB40();
  v3[53] = v4;
  v3[54] = *(void *)(v4 - 8);
  v3[55] = swift_task_alloc();
  v3[56] = swift_task_alloc();
  uint64_t v5 = sub_1C254E560();
  v3[57] = v5;
  v3[58] = *(void *)(v5 - 8);
  v3[59] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2246E04, 0, 0);
}

uint64_t sub_1C2246E04()
{
  uint64_t v62 = v0;
  uint64_t v1 = (uint64_t *)v0[56];
  uint64_t v2 = v0[53];
  uint64_t v3 = v0[54];
  uint64_t v4 = v0[51];
  sub_1C254E510();
  uint64_t v59 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16);
  v59(v1, v4, v2);
  swift_retain_n();
  uint64_t v5 = sub_1C254E550();
  os_log_type_t v6 = sub_1C254FA40();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v52 = v0[58];
    id v53 = (id)v0[57];
    uint64_t v55 = v0[59];
    uint64_t v48 = v0[56];
    uint64_t v56 = v0[54];
    uint64_t v7 = v0[52];
    uint64_t v46 = v0[53];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    uint64_t v61 = v50;
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_1C2248028((long long *)(v7 + 112), (uint64_t)(v0 + 37));
    sub_1C2249030((uint64_t)(v0 + 37), (void (*)(void, void, void, void, void))sub_1C2247D8C);
    uint64_t v9 = sub_1C223D39C();
    unint64_t v11 = v10;
    sub_1C2249030((uint64_t)(v0 + 37), (void (*)(void, void, void, void, void))sub_1C2247DE4);
    v0[48] = sub_1C21AD354(v9, v11, &v61);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 12) = 2080;
    sub_1C2249498((unint64_t *)&qword_1EA2DE1E0, 255, MEMORY[0x1E4F27990]);
    uint64_t v12 = sub_1C2550810();
    v0[49] = sub_1C21AD354(v12, v13, &v61);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    int v57 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
    v57(v48, v46);
    _os_log_impl(&dword_1C21A1000, v5, v6, "ClinicalAccountLoginSession: %s with state %s completed successfully", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v50, -1, -1);
    MEMORY[0x1C875A0B0](v8, -1, -1);

    (*(void (**)(uint64_t, id))(v52 + 8))(v55, v53);
  }
  else
  {
    uint64_t v15 = v0[58];
    uint64_t v14 = v0[59];
    uint64_t v17 = v0[56];
    uint64_t v16 = v0[57];
    uint64_t v18 = v0[53];
    uint64_t v19 = v0[54];
    swift_release_n();
    int v57 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v57(v17, v18);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  id v54 = self;
  id v51 = objc_msgSend(v54, sel_defaultCenter);
  if (qword_1EA2DD768 != -1) {
    swift_once();
  }
  uint64_t v20 = v0[53];
  unint64_t v22 = (void *)v0[50];
  uint64_t v21 = v0[51];
  uint64_t v47 = qword_1EA2E2880;
  uint64_t v49 = v0[52];
  sub_1C2248FD8(0, (unint64_t *)&qword_1EA2DEFC8, (unint64_t *)&qword_1EA2DEFD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
  v0[44] = 0xD00000000000002DLL;
  v0[45] = 0x80000001C2577040;
  uint64_t v24 = MEMORY[0x1E4FBB1A0];
  sub_1C2550330();
  *(void *)(inited + 96) = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
  *(void *)(inited + 72) = v22;
  v0[42] = 0xD00000000000002BLL;
  v0[43] = 0x80000001C2577070;
  id v25 = v22;
  sub_1C2550330();
  *(void *)(inited + 168) = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 144));
  v59(boxed_opaque_existential_1, v21, v20);
  sub_1C2204984(inited);
  uint64_t v27 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v51, sel_postNotificationName_object_userInfo_, v47, v49, v27);

  id v28 = objc_msgSend(v54, sel_defaultCenter);
  if (qword_1EBB6E600 != -1) {
    swift_once();
  }
  uint64_t v29 = v0[55];
  uint64_t v30 = v0[53];
  uint64_t v31 = (void *)v0[50];
  uint64_t v58 = qword_1EBB6E5F0;
  uint64_t v60 = v0[52];
  uint64_t v32 = swift_initStackObject();
  *(_OWORD *)(v32 + 16) = xmmword_1C255CD90;
  v0[46] = 0x49746E756F636361;
  v0[47] = 0xE900000000000044;
  sub_1C2550330();
  uint64_t v33 = v24;
  id v34 = objc_msgSend(v31, sel_identifier);
  sub_1C254CB20();

  uint64_t v35 = sub_1C254CAF0();
  uint64_t v37 = v36;
  v57(v29, v30);
  *(void *)(v32 + 96) = v33;
  *(void *)(v32 + 72) = v35;
  *(void *)(v32 + 80) = v37;
  sub_1C2204984(v32);
  uint64_t v38 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_postNotificationName_object_userInfo_, v58, v60, v38);

  if (objc_msgSend(v31, sel_isSharingToProvider) && (uint64_t v39 = v0[52], *(unsigned char *)(v39 + 144) == 1))
  {
    unint64_t v40 = *(void **)(v39 + 128);
    v0[60] = v40;
    id v41 = v40;
    uint64_t v42 = (void *)swift_task_alloc();
    v0[61] = v42;
    *uint64_t v42 = v0;
    v42[1] = sub_1C2247570;
    uint64_t v43 = v0[50];
    return sub_1C22484EC(v43, (uint64_t)v41);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = (uint64_t (*)(void))v0[1];
    return v45();
  }
}

uint64_t sub_1C2247570()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C224766C, 0, 0);
}

uint64_t sub_1C224766C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C22476E8(uint64_t a1)
{
  v2[13] = a1;
  v2[14] = v1;
  uint64_t v3 = sub_1C254E560();
  v2[15] = v3;
  v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C22477A8, 0, 0);
}

uint64_t sub_1C22477A8()
{
  uint64_t v42 = v0;
  uint64_t v1 = *(void *)(v0 + 112);
  sub_1C2248028((long long *)(v1 + 112), v0 + 56);
  uint64_t v3 = *(void **)(v1 + 112);
  uint64_t v2 = *(void **)(v1 + 120);
  uint64_t v4 = *(void **)(v1 + 128);
  sub_1C2248028((long long *)(v0 + 56), v0 + 16);
  if (*(unsigned char *)(v0 + 48) == 1)
  {
    os_log_type_t v6 = *(void **)(v0 + 16);
    uint64_t v5 = *(void **)(v0 + 24);
    *(void *)(v0 + 144) = v6;
    *(void *)(v0 + 152) = v5;
    uint64_t v7 = *(void *)(v0 + 32);
    *(void *)(v0 + 160) = v7;
    uint64_t v8 = self;
    id v9 = v3;
    id v10 = v2;
    id v11 = v4;
    id v12 = objc_msgSend(v8, sel_userProfileWithProfileIdentifier_, v7);
    *(void *)(v0 + 168) = v12;
    type metadata accessor for ClinicalAccountManager();
    unint64_t v13 = (void *)swift_allocObject();
    *(void *)(v0 + 176) = v13;
    uint64_t v14 = MEMORY[0x1E4FBC870];
    v13[5] = 0;
    v13[6] = 0;
    v13[4] = v14;
    v13[2] = v12;
    v13[3] = objc_msgSend(v12, sel_clinicalAccountStore);
    if (qword_1EBB6D858 != -1) {
      swift_once();
    }
    uint64_t v15 = *(void **)(v0 + 104);
    uint64_t v16 = (void *)swift_allocObject();
    *(void *)(v0 + 184) = v16;
    void v16[2] = v13;
    v16[3] = v6;
    void v16[4] = v5;
    uint64_t v17 = (void *)swift_allocObject();
    *(void *)(v0 + 192) = v17;
    void v17[2] = v13;
    void v17[3] = v6;
    v17[4] = v15;
    void v17[5] = v5;
    sub_1C254F820();
    swift_retain_n();
    id v18 = v6;
    id v19 = v5;
    id v20 = v18;
    id v21 = v19;
    id v22 = v15;
    *(void *)(v0 + 200) = sub_1C254F810();
    uint64_t v24 = sub_1C254F7D0();
    return MEMORY[0x1F4188298](sub_1C2247BAC, v24, v23);
  }
  else
  {
    sub_1C254E510();
    swift_retain_n();
    id v25 = sub_1C254E550();
    os_log_type_t v26 = sub_1C254FA30();
    BOOL v27 = os_log_type_enabled(v25, v26);
    uint64_t v29 = *(void *)(v0 + 128);
    uint64_t v28 = *(void *)(v0 + 136);
    uint64_t v30 = *(void *)(v0 + 120);
    if (v27)
    {
      uint64_t v40 = *(void *)(v0 + 136);
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v41 = v39;
      *(_DWORD *)uint64_t v31 = 136315138;
      id v32 = v3;
      uint64_t v33 = sub_1C223D39C();
      uint64_t v34 = v30;
      unint64_t v36 = v35;
      sub_1C2249030(v0 + 56, (void (*)(void, void, void, void, void))sub_1C2247DE4);
      *(void *)(v0 + 96) = sub_1C21AD354(v33, v36, &v41);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1C21A1000, v25, v26, "ClinicalAccountLoginSession: can only login to different account with a relogin context but got %s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v39, -1, -1);
      MEMORY[0x1C875A0B0](v31, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v40, v34);
    }
    else
    {
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    }
    swift_task_dealloc();
    uint64_t v37 = *(uint64_t (**)(void))(v0 + 8);
    return v37();
  }
}

uint64_t sub_1C2247BAC()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[23];
  uint64_t v4 = (void *)v0[18];
  uint64_t v3 = (void *)v0[19];
  swift_release();
  sub_1C24535E0(v4, v3, (uint64_t)&unk_1EA2DEFB8, v2, (uint64_t)&unk_1EA2DEFC0, v1);
  swift_release();
  swift_release();
  return MEMORY[0x1F4188298](sub_1C2247C70, 0, 0);
}

uint64_t sub_1C2247C70()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v3 = (void *)v0[19];
  uint64_t v2 = (void *)v0[20];
  uint64_t v4 = (void *)v0[18];
  swift_release();

  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C2247CF8()
{
  sub_1C2247DE4(*(void **)(v0 + 112), *(void **)(v0 + 120), *(void **)(v0 + 128), *(void *)(v0 + 136), *(unsigned char *)(v0 + 144));

  sub_1C221794C(*(void *)(v0 + 168));
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t type metadata accessor for ClinicalAccountLoginSessionCallbackHandler()
{
  return self;
}

ValueMetadata *type metadata accessor for ClinicalAccountLoginSessionCallbackHandler.SessionRegistration()
{
  return &type metadata for ClinicalAccountLoginSessionCallbackHandler.SessionRegistration;
}

id sub_1C2247D8C(void *a1, void *a2, void *a3, uint64_t a4, char a5)
{
  if (a5)
  {
    id v8 = a1;
    id v9 = a2;
    a1 = a3;
    uint64_t v5 = vars8;
  }
  return a1;
}

void destroy for ClinicalAccountLoginSession.Context(uint64_t a1)
{
}

void sub_1C2247DE4(void *a1, void *a2, void *a3, uint64_t a4, char a5)
{
  if (a5)
  {
  }
}

uint64_t initializeWithCopy for ClinicalAccountLoginSession.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1C2247D8C(*(void **)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ClinicalAccountLoginSession.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_1C2247D8C(*(void **)a2, v4, v5, v6, v7);
  id v8 = *(void **)a1;
  id v9 = *(void **)(a1 + 8);
  id v10 = *(void **)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_1C2247DE4(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ClinicalAccountLoginSession.Context(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void **)(a1 + 8);
  uint64_t v5 = *(void **)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_1C2247DE4(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalAccountLoginSession.Context(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClinicalAccountLoginSession.Context(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C2247FF8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1C2248000(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ClinicalAccountLoginSession.Context()
{
  return &type metadata for ClinicalAccountLoginSession.Context;
}

uint64_t sub_1C224801C()
{
  return v0;
}

uint64_t sub_1C2248028(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1C2248040(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1C2249070(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v6 - 8);
  char v8 = (char *)&v14 - v7;
  long long v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_1C254C8A0();
    uint64_t v10 = sub_1C254C900();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = sub_1C254C900();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_1C2249A58((uint64_t)v8, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
}

uint64_t sub_1C22481B0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C22481F8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_1C2223E3C;
  return sub_1C24DAC48(v2, v3, v4);
}

uint64_t sub_1C22482A0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C22482F0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1C222399C;
  return sub_1C24DACF4(v2, v3, v5, v4);
}

uint64_t sub_1C224839C(void *a1)
{
  id v1 = a1;
  sub_1C2206F9C();
  if swift_dynamicCast() && (v9) {
    return 1;
  }
  uint64_t v3 = (void *)sub_1C254C810();
  if (objc_msgSend(v3, sel_hk_isHealthKitError) && objc_msgSend(v3, sel_code) == (id)110)
  {
    id v4 = objc_msgSend(v3, sel_localizedDescription);
    uint64_t v5 = sub_1C254F470();
    uint64_t v7 = v6;

    if (v5 == 0xD000000000000014 && v7 == 0x80000001C2577220)
    {
      swift_bridgeObjectRelease();

      return 1;
    }
    char v8 = sub_1C2550870();
    swift_bridgeObjectRelease();

    if (v8) {
      return 1;
    }
  }
  else
  {
  }
  return 0;
}

uint64_t sub_1C22484EC(uint64_t a1, uint64_t a2)
{
  v2[10] = a1;
  v2[11] = a2;
  uint64_t v3 = sub_1C254CB40();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  uint64_t v4 = sub_1C254E560();
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2248628, 0, 0);
}

uint64_t sub_1C2248628()
{
  uint64_t v37 = v0;
  id v1 = (void *)v0[10];
  sub_1C254E510();
  id v2 = v1;
  uint64_t v3 = sub_1C254E550();
  os_log_type_t v4 = sub_1C254FA40();
  uint64_t v5 = &selRef_addSubview_;
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v32 = v0[17];
    uint64_t v33 = v0[16];
    uint64_t v34 = v0[19];
    os_log_type_t type = v4;
    uint64_t v6 = v0[15];
    uint64_t v7 = v0[12];
    uint64_t v8 = v0[13];
    char v9 = (void *)v0[10];
    uint64_t v29 = v9;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v36 = v31;
    *(_DWORD *)uint64_t v10 = 136315138;
    id v11 = objc_msgSend(v9, sel_identifier);
    sub_1C254CB20();

    sub_1C2249498((unint64_t *)&qword_1EA2DE1E0, 255, MEMORY[0x1E4F27990]);
    uint64_t v12 = sub_1C2550810();
    unint64_t v14 = v13;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    uint64_t v15 = v12;
    uint64_t v5 = &selRef_addSubview_;
    v0[9] = sub_1C21AD354(v15, v14, &v36);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v3, type, "ClinicalAccountLoginSession: will update multi device status for %s to “override”", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v31, -1, -1);
    MEMORY[0x1C875A0B0](v10, -1, -1);

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    v16(v34, v33);
  }
  else
  {
    uint64_t v17 = v0[19];
    uint64_t v18 = v0[16];
    uint64_t v19 = v0[17];
    id v20 = (void *)v0[10];

    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v16(v17, v18);
  }
  v0[20] = v16;
  id v21 = (void *)v0[10];
  id v22 = objc_msgSend(self, sel_userProfileWithProfileIdentifier_, v0[11]);
  v0[21] = v22;
  type metadata accessor for ClinicalAccountManager();
  uint64_t v23 = (void *)swift_allocObject();
  v0[22] = v23;
  uint64_t v24 = MEMORY[0x1E4FBC870];
  v23[5] = 0;
  v23[6] = 0;
  v23[4] = v24;
  void v23[2] = v22;
  v23[3] = objc_msgSend(v22, sel_clinicalAccountStore);
  id v25 = [v21 v5[378]];
  sub_1C254CB20();

  unint64_t v35 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EA2E47E8 + dword_1EA2E47E8);
  os_log_type_t v26 = (void *)swift_task_alloc();
  v0[23] = v26;
  *os_log_type_t v26 = v0;
  v26[1] = sub_1C22489C4;
  uint64_t v27 = v0[14];
  return v35(v27, 3);
}

uint64_t sub_1C22489C4()
{
  id v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 112);
  uint64_t v4 = *(void *)(*(void *)v1 + 104);
  uint64_t v5 = *(void *)(*(void *)v1 + 96);
  v2[24] = v0;
  swift_task_dealloc();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v2[25] = v6;
  v2[26] = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  if (v0) {
    uint64_t v7 = sub_1C2248BDC;
  }
  else {
    uint64_t v7 = sub_1C2248B48;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1C2248B48()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2248BDC()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void **)(v0 + 192);
  id v2 = *(void **)(v0 + 80);
  sub_1C254E510();
  id v3 = v2;
  id v4 = v1;
  id v5 = v3;
  id v6 = v1;
  uint64_t v7 = sub_1C254E550();
  os_log_type_t v8 = sub_1C254FA20();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void **)(v0 + 192);
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 200);
    uint64_t v36 = *(void *)(v0 + 144);
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    uint64_t v34 = *(void **)(v0 + 168);
    uint64_t v35 = *(void *)(v0 + 128);
    os_log_type_t type = v8;
    uint64_t v10 = *(void *)(v0 + 120);
    uint64_t v11 = *(void *)(v0 + 96);
    uint64_t v12 = *(void **)(v0 + 80);
    uint64_t v13 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v38 = v32;
    *(_DWORD *)uint64_t v13 = 136315394;
    id v14 = objc_msgSend(v12, sel_identifier);
    sub_1C254CB20();

    sub_1C2249498((unint64_t *)&qword_1EA2DE1E0, 255, MEMORY[0x1E4F27990]);
    uint64_t v15 = sub_1C2550810();
    unint64_t v17 = v16;
    v31(v10, v11);
    *(void *)(v0 + 48) = sub_1C21AD354(v15, v17, &v38);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2080;
    *(void *)(v0 + 56) = v9;
    id v18 = v9;
    id v19 = v9;
    sub_1C2206F9C();
    sub_1C25508F0();
    id v20 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v21 = sub_1C254F4F0();
    unint64_t v23 = v22;

    *(void *)(v0 + 64) = sub_1C21AD354(v21, v23, &v38);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v7, type, "ClinicalAccountLoginSession: failed to update clinical sharing device status of account %s with error: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v32, -1, -1);
    MEMORY[0x1C875A0B0](v13, -1, -1);
    swift_release();

    v37(v36, v35);
  }
  else
  {
    uint64_t v24 = *(void **)(v0 + 192);
    id v25 = *(void (**)(uint64_t, uint64_t))(v0 + 160);
    uint64_t v26 = *(void *)(v0 + 144);
    uint64_t v27 = *(void *)(v0 + 128);
    uint64_t v28 = *(void **)(v0 + 80);

    swift_release();
    v25(v26, v27);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

void sub_1C2248FD8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C2207B04(255, a3);
    unint64_t v4 = sub_1C2550820();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2249030(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

void sub_1C2249070(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C22490C4()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C224910C()
{
  uint64_t v2 = *(void *)(v0 + 40);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1C2223E3C;
  unint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *unint64_t v4 = v3;
  v4[1] = sub_1C2223E3C;
  return sub_1C22476E8(v2);
}

uint64_t sub_1C22491F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HealthRecordsURLParsingResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2249254(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HealthRecordsURLParsingResult();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C22492B0()
{
  if (!qword_1EA2DF028)
  {
    sub_1C2206F9C();
    sub_1C2249070(255, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DF028);
    }
  }
}

void sub_1C2249340()
{
  if (!qword_1EA2DF030)
  {
    sub_1C254CB40();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DF030);
    }
  }
}

uint64_t sub_1C22493AC(uint64_t a1, uint64_t a2)
{
  sub_1C2249070(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C224942C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C2249070(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C2249498(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C22494E0()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t objectdestroy_3Tm()
{
  swift_unknownObjectRelease();

  if (*(void *)(v0 + 64)) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1C2249590()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_1C22495A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = (id)sub_1C254C810();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t objectdestroyTm_1()
{
  swift_unknownObjectRelease();

  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1C224965C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1C222399C;
  return sub_1C223DD74(a1, v4, v5, v6, v7, v8, v9, v10);
}

unint64_t sub_1C2249748()
{
  unint64_t result = qword_1EA2DF060;
  if (!qword_1EA2DF060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA2DF060);
  }
  return result;
}

uint64_t sub_1C224979C(uint64_t a1, void *a2)
{
  return sub_1C22412E4(a1, a2, v2);
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_1C22497AC()
{
  sub_1C2249070(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = sub_1C254C900();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;

  return MEMORY[0x1F4186498](v0, v8, v2 | 7);
}

uint64_t sub_1C2249910(uint64_t a1)
{
  sub_1C2249070(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1C2223E3C;
  return sub_1C224150C(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_1C2249A58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C2249070(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ClinicalAccountLoginError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2249B80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClinicalAccountLoginError()
{
  return &type metadata for ClinicalAccountLoginError;
}

unint64_t sub_1C2249BBC()
{
  unint64_t result = qword_1EA2DF088;
  if (!qword_1EA2DF088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF088);
  }
  return result;
}

void static AccountIcon.Size.smallerOrEqual(to:)(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v3 = qword_1F1D8E398;
  uint64_t v5 = *((void *)&xmmword_1F1D8E3A0 + 1);
  uint64_t v4 = xmmword_1F1D8E3A0;
  char v6 = byte_1F1D8E3B0;
  if (byte_1F1D8E3B0 == 1)
  {
    if (*((void *)&xmmword_1F1D8E3A0 + 1) | (unint64_t)xmmword_1F1D8E3A0 | qword_1F1D8E398)
    {
      double v7 = 80.0;
      if (qword_1F1D8E398 == 2 && xmmword_1F1D8E3A0 == 0) {
        double v7 = 60.0;
      }
      double v8 = 45.0;
      if (qword_1F1D8E398 != 1 || xmmword_1F1D8E3A0 != 0) {
        double v8 = v7;
      }
      if (v8 < a2) {
        goto LABEL_15;
      }
      if (qword_1F1D8E398 == 1 && xmmword_1F1D8E3A0 == 0) {
        double v7 = 45.0;
      }
    }
    else
    {
      double v7 = 36.0;
      if (a2 > 36.0) {
        goto LABEL_15;
      }
    }
  }
  else
  {
    double v7 = *(double *)&qword_1F1D8E398;
    if (*(double *)&qword_1F1D8E398 < a2) {
      goto LABEL_15;
    }
  }
  if (v7 >= a3) {
    goto LABEL_44;
  }
LABEL_15:
  uint64_t v3 = qword_1F1D8E3B8;
  uint64_t v5 = *((void *)&xmmword_1F1D8E3C0 + 1);
  uint64_t v4 = xmmword_1F1D8E3C0;
  char v6 = byte_1F1D8E3D0;
  if (byte_1F1D8E3D0 == 1)
  {
    if (*((void *)&xmmword_1F1D8E3C0 + 1) | (unint64_t)xmmword_1F1D8E3C0 | qword_1F1D8E3B8)
    {
      double v9 = 80.0;
      if (qword_1F1D8E3B8 == 2 && xmmword_1F1D8E3C0 == 0) {
        double v9 = 60.0;
      }
      double v10 = 45.0;
      if (qword_1F1D8E3B8 != 1 || xmmword_1F1D8E3C0 != 0) {
        double v10 = v9;
      }
      if (v10 >= a2)
      {
        if (qword_1F1D8E3B8 == 1 && xmmword_1F1D8E3C0 == 0) {
          double v9 = 45.0;
        }
LABEL_28:
        if (v9 >= a3) {
          goto LABEL_44;
        }
      }
    }
    else
    {
      double v9 = 36.0;
      if (a2 <= 36.0) {
        goto LABEL_28;
      }
    }
  }
  else
  {
    double v9 = *(double *)&qword_1F1D8E3B8;
    if (*(double *)&qword_1F1D8E3B8 >= a2) {
      goto LABEL_28;
    }
  }
  uint64_t v3 = qword_1F1D8E3D8;
  uint64_t v5 = *((void *)&xmmword_1F1D8E3E0 + 1);
  uint64_t v4 = xmmword_1F1D8E3E0;
  char v6 = byte_1F1D8E3F0;
  if (byte_1F1D8E3F0 == 1)
  {
    if (*((void *)&xmmword_1F1D8E3E0 + 1) | (unint64_t)xmmword_1F1D8E3E0 | qword_1F1D8E3D8)
    {
      double v11 = 80.0;
      if (qword_1F1D8E3D8 == 2 && xmmword_1F1D8E3E0 == 0) {
        double v11 = 60.0;
      }
      double v12 = 45.0;
      if (qword_1F1D8E3D8 != 1 || xmmword_1F1D8E3E0 != 0) {
        double v12 = v11;
      }
      if (v12 < a2) {
        goto LABEL_43;
      }
      if (qword_1F1D8E3D8 == 1 && xmmword_1F1D8E3E0 == 0) {
        double v11 = 45.0;
      }
    }
    else
    {
      double v11 = 36.0;
      if (a2 > 36.0)
      {
LABEL_43:
        uint64_t v3 = qword_1F1D8E3F8;
        uint64_t v4 = unk_1F1D8E400;
        uint64_t v5 = qword_1F1D8E408;
        char v6 = byte_1F1D8E410;
        goto LABEL_44;
      }
    }
  }
  else
  {
    double v11 = *(double *)&qword_1F1D8E3D8;
    if (*(double *)&qword_1F1D8E3D8 < a2) {
      goto LABEL_43;
    }
  }
  if (v11 < a3) {
    goto LABEL_43;
  }
LABEL_44:
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
}

double AccountIcon.Size.cornerRadius.getter()
{
  if (*(unsigned char *)(v0 + 24) == 1) {
    return 3.0;
  }
  else {
    return *(double *)(v0 + 16);
  }
}

double AccountIcon.Size.imageDimension.getter()
{
  double v1 = *(double *)v0;
  double v2 = *(double *)(v0 + 8);
  if (*(unsigned char *)(v0 + 24) != 1) {
    return v1 - v2;
  }
  uint64_t v3 = *(void *)(v0 + 16);
  if (!(*(void *)&v2 | *(void *)&v1 | v3)) {
    return 36.0 - 2.0;
  }
  uint64_t v4 = v3 | *(void *)&v2;
  double v5 = 45.0;
  if (v4) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = *(void *)&v1 == 2;
  }
  double v7 = 80.0;
  if (v6) {
    double v7 = 60.0;
  }
  if (*(void *)&v1 != 1 || v4 != 0) {
    double v5 = v7;
  }
  return v5 - 3.0;
}

double AccountIcon.Size.insetDimension.getter()
{
  if (*(unsigned char *)(v0 + 24) != 1) {
    return *(double *)(v0 + 8);
  }
  double result = 2.0;
  if (*(void *)(v0 + 8) | *(void *)v0 | *(void *)(v0 + 16)) {
    return 3.0;
  }
  return result;
}

double AccountIcon.Size.imageViewDimension.getter()
{
  double v1 = *(double *)v0;
  if (*(unsigned char *)(v0 + 24) != 1) {
    return v1;
  }
  if (!(*(void *)(v0 + 8) | *(void *)(v0 + 16) | *(void *)&v1)) {
    return 36.0;
  }
  double result = 45.0;
  BOOL v3 = *(_OWORD *)(v0 + 8) == 0 && *(void *)&v1 == 2;
  double v4 = 80.0;
  if (v3) {
    double v4 = 60.0;
  }
  if (*(void *)&v1 != 1 || *(_OWORD *)(v0 + 8) != 0) {
    return v4;
  }
  return result;
}

void AccountIcon.imageViewStyle.getter(uint64_t a1@<X8>)
{
  if (*(unsigned char *)v1)
  {
    uint64_t v2 = 0;
    char v3 = 2;
  }
  else
  {
    uint64_t v2 = 0x4008000000000000;
    if (*(unsigned char *)(v1 + 32) != 1) {
      uint64_t v2 = *(void *)(v1 + 24);
    }
    char v3 = 0;
  }
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
}

BOOL static AccountIcon.Kind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AccountIcon.Kind.hash(into:)()
{
  return sub_1C25509D0();
}

uint64_t AccountIcon.Kind.hashValue.getter()
{
  return sub_1C2550A10();
}

void *static AccountIcon.Size.allCases.getter()
{
  return &unk_1F1D8E4C8;
}

uint64_t AccountIcon.Size.hash(into:)()
{
  if (*(unsigned char *)(v0 + 24) == 1) {
    return sub_1C25509D0();
  }
  sub_1C25509D0();
  sub_1C2550A00();
  sub_1C2550A00();
  return sub_1C2550A00();
}

uint64_t AccountIcon.Size.hashValue.getter()
{
  return sub_1C2550A10();
}

uint64_t sub_1C224A1A8()
{
  return sub_1C2550A10();
}

uint64_t sub_1C224A208()
{
  return sub_1C2550A10();
}

void sub_1C224A260(void *a1@<X8>)
{
  *a1 = &unk_1F1D8E568;
}

void AccountIcon.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

__n128 AccountIcon.size.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 24);
  unsigned __int8 v3 = *(unsigned char *)(v1 + 32);
  __n128 result = *(__n128 *)(v1 + 8);
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

id AccountIcon.image.getter()
{
  return *(id *)(v0 + 40);
}

void AccountIcon.init(monogram:size:)(id a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v5 = *(double *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  int v8 = *(unsigned __int8 *)(a2 + 24);
  if (v8 == 1)
  {
    double v9 = 36.0;
    double v10 = 45.0;
    if (v7 | v6) {
      BOOL v11 = 0;
    }
    else {
      BOOL v11 = *(void *)&v5 == 2;
    }
    double v12 = 80.0;
    if (v11) {
      double v12 = 60.0;
    }
    if (*(void *)&v5 != 1 || (v7 | v6) != 0) {
      double v10 = v12;
    }
    if (v7 | v6 | *(void *)&v5) {
      double v9 = v10;
    }
  }
  else
  {
    double v9 = *(double *)a2;
  }
  id v14 = objc_msgSend(a1, sel_scaledToTargetSize_, v9, v9);

  *(unsigned char *)a3 = 1;
  *(double *)(a3 + 8) = v5;
  *(void *)(a3 + 16) = v6;
  *(void *)(a3 + 24) = v7;
  *(unsigned char *)(a3 + 32) = v8;
  *(void *)(a3 + 40) = v14;
}

double AccountIcon.Size.imageViewSize.getter()
{
  double v1 = *(double *)v0;
  if (*(unsigned char *)(v0 + 24) != 1) {
    return v1;
  }
  if (!(*(void *)(v0 + 8) | *(void *)(v0 + 16) | *(void *)&v1)) {
    return 36.0;
  }
  double result = 45.0;
  BOOL v3 = *(_OWORD *)(v0 + 8) == 0 && *(void *)&v1 == 2;
  double v4 = 80.0;
  if (v3) {
    double v4 = 60.0;
  }
  if (*(void *)&v1 != 1 || *(_OWORD *)(v0 + 8) != 0) {
    return v4;
  }
  return result;
}

void AccountIcon.init(logo:size:)(id a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v5 = *(double *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  int v8 = *(unsigned __int8 *)(a2 + 24);
  if (v8 == 1)
  {
    if (v7 | v6 | *(void *)&v5)
    {
      double v9 = 80.0;
      if (*(void *)&v5 == 2 && (v7 | v6) == 0) {
        double v9 = 60.0;
      }
      if (*(void *)&v5 == 1 && (v7 | v6) == 0) {
        double v9 = 45.0;
      }
      double v10 = 3.0;
    }
    else
    {
      double v10 = 2.0;
      double v9 = 36.0;
    }
  }
  else
  {
    double v9 = *(double *)a2;
    double v10 = *(double *)(a2 + 8);
  }
  id v11 = objc_msgSend(a1, sel_scaledToTargetSize_padding_, v9 - v10 - v10, v9 - v10 - v10, v10, v10);

  *(unsigned char *)a3 = 0;
  *(double *)(a3 + 8) = v5;
  *(void *)(a3 + 16) = v6;
  *(void *)(a3 + 24) = v7;
  *(unsigned char *)(a3 + 32) = v8;
  *(void *)(a3 + 40) = v11;
}

double AccountIcon.Size.imageSize.getter()
{
  double v1 = *(double *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 16);
    if (v2 | *(void *)&v1 | v3)
    {
      uint64_t v4 = v3 | v2;
      double v5 = 3.0;
      double v6 = 45.0;
      if (v4) {
        BOOL v7 = 0;
      }
      else {
        BOOL v7 = *(void *)&v1 == 2;
      }
      double v8 = 80.0;
      if (v7) {
        double v8 = 60.0;
      }
      if (*(void *)&v1 != 1 || v4 != 0) {
        double v6 = v8;
      }
    }
    else
    {
      double v5 = 2.0;
      double v6 = 36.0;
    }
  }
  else
  {
    double v6 = *(double *)v0;
    double v5 = *(double *)(v0 + 8);
  }
  return v6 - v5 - v5;
}

uint64_t AccountIcon.imageStyle.getter()
{
  if (*(unsigned char *)v0)
  {
    uint64_t v1 = 0x100000000;
    uint64_t v2 = 0x100000000;
    uint64_t v3 = 0;
    id v4 = 0;
    id v5 = 0;
    uint64_t v6 = 0;
  }
  else
  {
    double v7 = *(double *)(v0 + 24);
    int v8 = *(unsigned __int8 *)(v0 + 32);
    double v9 = self;
    id v10 = objc_msgSend(v9, sel_whiteColor);
    id v11 = objc_msgSend(v9, sel_separatorColor);
    id v12 = objc_msgSend(self, sel_currentTraitCollection);
    objc_msgSend(v12, sel_displayPixel);
    double v14 = v13;

    if (v8 == 1)
    {
      uint64_t v15 = 1077936128;
    }
    else
    {
      *(float *)&unsigned int v16 = v7;
      uint64_t v15 = v16;
    }
    *(float *)&unsigned int v17 = v14;
    uint64_t v18 = v17;
    uint64_t v19 = *MEMORY[0x1E4F39EA8];
    id v20 = (id)*MEMORY[0x1E4F39EA8];
    uint64_t v1 = v18;
    uint64_t v2 = v15;
    uint64_t v3 = 1;
    id v4 = v10;
    id v5 = v11;
    uint64_t v6 = v19;
  }
  return MEMORY[0x1F411E170](v3, 0, v4, 0, v5, v1, v2, v6);
}

uint64_t AccountIcon.hasBorder.getter()
{
  return sub_1C224A734((SEL *)&selRef_systemGrayColor);
}

id AccountIcon.borderColor.getter()
{
  return sub_1C224A798((SEL *)&selRef_systemGrayColor);
}

uint64_t AccountIcon.hasBackgroundColor.getter()
{
  return sub_1C224A734((SEL *)&selRef_whiteColor);
}

uint64_t sub_1C224A734(SEL *a1)
{
  if (*v1) {
    return 0;
  }
  uint64_t result = (uint64_t)[self *a1];
  if (result)
  {

    return 1;
  }
  return result;
}

id AccountIcon.backgroundColor.getter()
{
  return sub_1C224A798((SEL *)&selRef_whiteColor);
}

id sub_1C224A798(SEL *a1)
{
  if (*v1) {
    return 0;
  }
  else {
    return [self *a1];
  }
}

BOOL AccountIcon.hasInsets.getter()
{
  return (*v0 & 1) == 0;
}

void AccountIcon.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  uint64_t v2 = *(void **)(v0 + 40);
  sub_1C25509D0();
  sub_1C25509D0();
  if (v1 != 1)
  {
    sub_1C2550A00();
    sub_1C2550A00();
    sub_1C2550A00();
  }
  id v3 = v2;
  sub_1C254FF80();
}

uint64_t AccountIcon.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  sub_1C25509C0();
  sub_1C25509D0();
  sub_1C25509D0();
  if (v1 != 1)
  {
    sub_1C2550A00();
    sub_1C2550A00();
    sub_1C2550A00();
  }
  sub_1C254FF80();
  return sub_1C2550A10();
}

uint64_t sub_1C224AA10()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  sub_1C25509D0();
  sub_1C25509D0();
  if (v1 != 1)
  {
    sub_1C2550A00();
    sub_1C2550A00();
    sub_1C2550A00();
  }
  return sub_1C254FF80();
}

uint64_t sub_1C224AAE4()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  sub_1C25509C0();
  sub_1C25509D0();
  sub_1C25509D0();
  if (v1 != 1)
  {
    sub_1C2550A00();
    sub_1C2550A00();
    sub_1C2550A00();
  }
  sub_1C254FF80();
  return sub_1C2550A10();
}

double AccountIcon.Size.imageInsets.getter()
{
  if (*(unsigned char *)(v0 + 24) != 1) {
    return *(double *)(v0 + 8);
  }
  double result = 2.0;
  if (*(void *)(v0 + 8) | *(void *)v0 | *(void *)(v0 + 16)) {
    return 3.0;
  }
  return result;
}

uint64_t _s15HealthRecordsUI11AccountIconV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2) {
    return 0;
  }
  double v2 = a1[1];
  double v3 = a1[2];
  double v4 = a1[3];
  double v5 = a2[1];
  double v6 = a2[2];
  double v7 = a2[3];
  if (*((unsigned char *)a1 + 32) != 1)
  {
    if ((_BYTE)a2[4]) {
      return 0;
    }
    BOOL v10 = v2 == v5 && v3 == v6;
    if (!v10 || v4 != v7) {
      return 0;
    }
    goto LABEL_22;
  }
  uint64_t v8 = *(void *)&v4 | *(void *)&v3;
  if (!(v8 | *(void *)&v2))
  {
    if (!*((unsigned char *)a2 + 32) || *(void *)&v7 | *(void *)&v6 | *(void *)&v5) {
      return 0;
    }
    goto LABEL_22;
  }
  if (*(void *)&v2 != 1 || v8)
  {
    if (*(void *)&v2 == 2 && !v8)
    {
      if (!*((unsigned char *)a2 + 32)) {
        return 0;
      }
      uint64_t v9 = *(void *)&v7 | *(void *)&v6;
      if (!(v9 | *(void *)&v5) || *(void *)&v5 == 1 && !v9) {
        return 0;
      }
      if (*(void *)&v5 != 2) {
        return 0;
      }
      goto LABEL_9;
    }
    if (((_BYTE)a2[4] & 1) == 0) {
      return 0;
    }
    uint64_t v13 = *(void *)&v7 | *(void *)&v6;
    if (!(v13 | *(void *)&v5) || (unint64_t)(*(void *)&v5 - 1) <= 1 && !v13) {
      return 0;
    }
LABEL_22:
    sub_1C224B3D4();
    return sub_1C254FF70() & 1;
  }
  if (!*((unsigned char *)a2 + 32)) {
    return 0;
  }
  uint64_t v9 = *(void *)&v7 | *(void *)&v6;
  if (!(v9 | *(void *)&v5) || *(void *)&v5 != 1) {
    return 0;
  }
LABEL_9:
  if (!v9) {
    goto LABEL_22;
  }
  return 0;
}

uint64_t _s15HealthRecordsUI11AccountIconV4SizeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)(a1 + 8);
  double v4 = *(double *)(a1 + 16);
  double v5 = *(double *)a2;
  double v6 = *(double *)(a2 + 8);
  double v7 = *(double *)(a2 + 16);
  if (*(unsigned char *)(a1 + 24) != 1)
  {
    if (*(unsigned char *)(a2 + 24)) {
      return 0;
    }
    if (v2 == v5 && v3 == v6) {
      return v4 == v7;
    }
    return 0;
  }
  uint64_t v8 = *(void *)&v4 | *(void *)&v3;
  if (!(v8 | *(void *)&v2))
  {
    if (*(unsigned char *)(a2 + 24)) {
      return (*(void *)&v7 | *(void *)&v6 | *(void *)&v5) == 0;
    }
    return 0;
  }
  if (*(void *)&v2 == 1 && v8 == 0)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      uint64_t v15 = *(void *)&v7 | *(void *)&v6;
      if (v15 | *(void *)&v5)
      {
        if (*(void *)&v5 == 1 && !v15) {
          return 1;
        }
      }
    }
    return 0;
  }
  if (*(void *)&v2 != 2 || v8 != 0)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      uint64_t v11 = *(void *)&v7 | *(void *)&v6;
      if (v11 | *(void *)&v5)
      {
        if (*(void *)&v5 != 1 || v11) {
          return *(void *)&v5 != 2 || v11 != 0;
        }
      }
    }
    return 0;
  }
  if (!*(unsigned char *)(a2 + 24)) {
    return 0;
  }
  uint64_t v16 = *(void *)&v7 | *(void *)&v6;
  if (!(v16 | *(void *)&v5) || *(void *)&v5 == 1 && !v16) {
    return 0;
  }
  return *(void *)&v5 == 2 && v16 == 0;
}

unint64_t sub_1C224AEBC()
{
  unint64_t result = qword_1EA2DF090;
  if (!qword_1EA2DF090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF090);
  }
  return result;
}

unint64_t sub_1C224AF14()
{
  unint64_t result = qword_1EBB6E830[0];
  if (!qword_1EBB6E830[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBB6E830);
  }
  return result;
}

unint64_t sub_1C224AF6C()
{
  unint64_t result = qword_1EA2DF098;
  if (!qword_1EA2DF098)
  {
    sub_1C224AFC4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF098);
  }
  return result;
}

void sub_1C224AFC4()
{
  if (!qword_1EA2DF0A0)
  {
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF0A0);
    }
  }
}

unint64_t sub_1C224B020()
{
  unint64_t result = qword_1EA2DF0A8;
  if (!qword_1EA2DF0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF0A8);
  }
  return result;
}

void destroy for AccountIcon(uint64_t a1)
{
}

uint64_t initializeWithCopy for AccountIcon(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  double v3 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v3;
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for AccountIcon(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v3 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  *(_OWORD *)(a1 + 8) = v3;
  id v4 = *(void **)(a2 + 40);
  double v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v4;
  id v6 = v4;

  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AccountIcon(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  long long v3 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for AccountIcon(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccountIcon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountIcon()
{
  return &type metadata for AccountIcon;
}

unsigned char *storeEnumTagSinglePayload for AccountIcon.Kind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C224B2E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountIcon.Kind()
{
  return &type metadata for AccountIcon.Kind;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AccountIcon.Size(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AccountIcon.Size(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

uint64_t sub_1C224B384(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C224B3A0(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(unsigned char *)(result + 24) = 1;
  }
  else
  {
    *(unsigned char *)(result + 24) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountIcon.Size()
{
  return &type metadata for AccountIcon.Size;
}

unint64_t sub_1C224B3D4()
{
  unint64_t result = qword_1EBB6F510;
  if (!qword_1EBB6F510)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB6F510);
  }
  return result;
}

BOOL sub_1C224B414(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C224B428()
{
  uint64_t v1 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  if (!*(unsigned char *)(v0 + *(int *)(v1 + 28)))
  {
    if (qword_1EBB6EF40 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (*(unsigned char *)(v0 + *(int *)(v1 + 28)) == 1)
  {
    if (qword_1EBB6EF40 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (qword_1EBB6EF40 != -1) {
LABEL_9:
  }
    swift_once();
LABEL_8:
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1C224B604()
{
  uint64_t v1 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  if (!*(unsigned char *)(v0 + *(int *)(v1 + 28)))
  {
    if (qword_1EBB6EF40 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (*(unsigned char *)(v0 + *(int *)(v1 + 28)) == 1)
  {
    if (qword_1EBB6EF40 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (qword_1EBB6EF40 != -1) {
LABEL_9:
  }
    swift_once();
LABEL_8:
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v3;
}

int *AccountStatusSummaryTileFeedItemViewData.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v48 = sub_1C254CB40();
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v45 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C254E290();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C224BD54();
  uint64_t v9 = v8 - 8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C224C1A0(0, &qword_1EBB6E3F8, MEMORY[0x1E4F67698]);
  MEMORY[0x1F4188790](v12 - 8);
  double v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unsigned int v17 = (char *)&v44 - v16;
  MEMORY[0x1F4188790](v18);
  id v20 = (char *)&v44 - v19;
  unint64_t v44 = (int *)type metadata accessor for AccountStatusSummaryTileFeedItemData();
  uint64_t v21 = v44[9];
  uint64_t v47 = a1;
  sub_1C224BDD4(a1 + v21, (uint64_t)v20);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v17, *MEMORY[0x1E4F67690], v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v17, 0, 1, v4);
  uint64_t v22 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_1C224BDD4((uint64_t)v20, (uint64_t)v11);
  sub_1C224BDD4((uint64_t)v17, v22);
  unint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v11, 1, v4) != 1)
  {
    sub_1C224BDD4((uint64_t)v11, (uint64_t)v14);
    if (v23(v22, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v22, v4);
      sub_1C224BF00();
      char v26 = sub_1C254F420();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v5 + 8);
      v27(v7, v4);
      uint64_t v28 = (void (*)(uint64_t))MEMORY[0x1E4F67698];
      sub_1C224C1F4((uint64_t)v17, &qword_1EBB6E3F8, MEMORY[0x1E4F67698]);
      sub_1C224C1F4((uint64_t)v20, &qword_1EBB6E3F8, v28);
      v27(v14, v4);
      sub_1C224C1F4((uint64_t)v11, &qword_1EBB6E3F8, v28);
      if (v26) {
        goto LABEL_8;
      }
LABEL_9:
      char v29 = 0;
      goto LABEL_10;
    }
    id v25 = (void (*)(uint64_t))MEMORY[0x1E4F67698];
    sub_1C224C1F4((uint64_t)v17, &qword_1EBB6E3F8, MEMORY[0x1E4F67698]);
    sub_1C224C1F4((uint64_t)v20, &qword_1EBB6E3F8, v25);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_6:
    sub_1C224BE54((uint64_t)v11, (uint64_t (*)(void))sub_1C224BD54);
    goto LABEL_9;
  }
  uint64_t v24 = (void (*)(uint64_t))MEMORY[0x1E4F67698];
  sub_1C224C1F4((uint64_t)v17, &qword_1EBB6E3F8, MEMORY[0x1E4F67698]);
  sub_1C224C1F4((uint64_t)v20, &qword_1EBB6E3F8, v24);
  if (v23(v22, 1, v4) != 1) {
    goto LABEL_6;
  }
  sub_1C224C1F4((uint64_t)v11, &qword_1EBB6E3F8, MEMORY[0x1E4F67698]);
LABEL_8:
  char v29 = 2;
LABEL_10:
  uint64_t v31 = v45;
  uint64_t v30 = v46;
  uint64_t v32 = v47;
  uint64_t v33 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v45, v47, v48);
  uint64_t v34 = v44[7];
  uint64_t v35 = (uint64_t *)(v32 + v44[6]);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  uint64_t v39 = *(void *)(v32 + v34);
  uint64_t v38 = *(void *)(v32 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C224BE54(v32, (uint64_t (*)(void))type metadata accessor for AccountStatusSummaryTileFeedItemData);
  uint64_t v40 = v49;
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v49, v31, v33);
  unint64_t result = (int *)type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
  uint64_t v42 = (void *)(v40 + result[5]);
  *uint64_t v42 = v37;
  v42[1] = v36;
  uint64_t v43 = (void *)(v40 + result[6]);
  *uint64_t v43 = v39;
  v43[1] = v38;
  *(unsigned char *)(v40 + result[7]) = v29;
  return result;
}

void sub_1C224BD54()
{
  if (!qword_1EA2DF0B0)
  {
    sub_1C224C1A0(255, &qword_1EBB6E3F8, MEMORY[0x1E4F67698]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DF0B0);
    }
  }
}

uint64_t sub_1C224BDD4(uint64_t a1, uint64_t a2)
{
  sub_1C224C1A0(0, &qword_1EBB6E3F8, MEMORY[0x1E4F67698]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C224BE54(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for AccountStatusSummaryTileFeedItemViewData()
{
  uint64_t result = qword_1EBB6E130;
  if (!qword_1EBB6E130) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C224BF00()
{
  unint64_t result = qword_1EA2DF0B8;
  if (!qword_1EA2DF0B8)
  {
    sub_1C254E290();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF0B8);
  }
  return result;
}

uint64_t AccountStatusSummaryTileFeedItemViewData.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C224C1A0(0, &qword_1EA2DF0C0, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemData);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v7 = type metadata accessor for AccountStatusSummaryTileFeedItemData();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v18 - v12;
  id v14 = a1;
  AccountStatusSummaryTileFeedItemData.init(_:)(v14, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {

    sub_1C224C1F4((uint64_t)v6, &qword_1EA2DF0C0, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemData);
    uint64_t v15 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
  else
  {
    sub_1C224C250((uint64_t)v6, (uint64_t)v13);
    sub_1C224C2B4((uint64_t)v13, (uint64_t)v10);
    AccountStatusSummaryTileFeedItemViewData.init(_:)((uint64_t)v10, a2);

    sub_1C224BE54((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AccountStatusSummaryTileFeedItemData);
    uint64_t v17 = type metadata accessor for AccountStatusSummaryTileFeedItemViewData();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 0, 1, v17);
  }
}

void sub_1C224C1A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C224C1F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C224C1A0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C224C250(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccountStatusSummaryTileFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C224C2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccountStatusSummaryTileFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *initializeBufferWithCopyOfBuffer for AccountStatusSummaryTileFeedItemViewData(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C254CB40();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)a1 + v9);
    id v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AccountStatusSummaryTileFeedItemViewData(uint64_t a1)
{
  uint64_t v2 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AccountStatusSummaryTileFeedItemViewData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountStatusSummaryTileFeedItemViewData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for AccountStatusSummaryTileFeedItemViewData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for AccountStatusSummaryTileFeedItemViewData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountStatusSummaryTileFeedItemViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C224C774);
}

uint64_t sub_1C224C774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AccountStatusSummaryTileFeedItemViewData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C224C84C);
}

uint64_t sub_1C224C84C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C254CB40();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C224C90C()
{
  uint64_t result = sub_1C254CB40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RecordRangeView.InRangeContext(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AccountStatusSummaryTileFeedItemViewData.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C224CB08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountStatusSummaryTileFeedItemViewData.Action()
{
  return &type metadata for AccountStatusSummaryTileFeedItemViewData.Action;
}

unint64_t sub_1C224CB44()
{
  unint64_t result = qword_1EA2DF0C8;
  if (!qword_1EA2DF0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF0C8);
  }
  return result;
}

uint64_t HKTimeScope.dateFormat.getter(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3) {
    return 9;
  }
  else {
    return qword_1C255E5B8[a1 - 1];
  }
}

uint64_t HKTimeScope.hasTime.getter(unint64_t a1)
{
  return (a1 > 4) | (9u >> a1) & 1;
}

void HKTimeScope.bucketingDate(for:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v98 = a3;
  uint64_t v99 = a1;
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v96 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v95 = (char *)&v90 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v94 = (char *)&v90 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v93 = (char *)&v90 - v11;
  uint64_t v12 = sub_1C254CAD0();
  uint64_t v100 = *(void *)(v12 - 8);
  os_log_type_t v101 = (char *)v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v90 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v92 = (char *)&v90 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v91 = (char *)&v90 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v90 = (char *)&v90 - v23;
  MEMORY[0x1F4188790](v24);
  char v26 = (char *)&v90 - v25;
  MEMORY[0x1F4188790](v27);
  uint64_t v97 = (char *)&v90 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v90 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v90 - v33;
  uint64_t v35 = sub_1C254CCC0();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v38 = (char *)&v90 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CC80();
  uint64_t v39 = sub_1C254CC30();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  switch(a2)
  {
    case 1:
      uint64_t v67 = (void *)sub_1C254CA50();
      unint64_t v68 = (void *)v39;
      id v69 = objc_msgSend((id)v39, sel_hk_startOfYearForDate_addingYears_, v67, 0);

      sub_1C254CA80();
      long long v70 = (void *)sub_1C254CA50();
      id v71 = objc_msgSend((id)v39, sel_hk_startOfYearForDate_addingYears_, v70, 1);

      sub_1C254CA80();
      uint64_t v17 = (char *)sub_1C254CA50();
      uint64_t v72 = (void *)sub_1C254CA50();
      id v73 = (id)HKUIMidDate();

      uint64_t v39 = v100;
      uint64_t v46 = (uint64_t)v101;
      if (!v73) {
        goto LABEL_22;
      }
      uint64_t v17 = v97;
      sub_1C254CA80();

      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
      uint64_t v74 = v93;
      v62(v93, v17, v46);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v74, 0, 1, v46);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v74, 1, v46) == 1) {
        goto LABEL_23;
      }

      unint64_t v75 = *(void (**)(char *, uint64_t))(v39 + 8);
      v75(v31, v46);
      v75(v34, v46);
      uint64_t v65 = v98;
      uint64_t v66 = v74;
      int v76 = (char *)v46;
      goto LABEL_16;
    case 2:
      uint64_t v77 = (void *)sub_1C254CA50();
      uint64_t v78 = (void *)v39;
      id v79 = objc_msgSend((id)v39, sel_hk_startOfMonthForDate_, v77);

      sub_1C254CA80();
      uint64_t v80 = (void *)sub_1C254CA50();
      id v81 = objc_msgSend((id)v39, sel_hk_startOfMonthForDate_addingMonths_, v80, 1);

      uint64_t v82 = v90;
      sub_1C254CA80();

      uint64_t v83 = (void *)sub_1C254CA50();
      uint64_t v84 = (void *)sub_1C254CA50();
      id v85 = (id)HKUIMidDate();

      uint64_t v46 = v100;
      uint64_t v17 = v101;
      if (!v85) {
        goto LABEL_24;
      }
      uint64_t v86 = v97;
      sub_1C254CA80();

      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
      uint64_t v87 = v94;
      v62(v94, v86, (uint64_t)v17);
      (*(void (**)(char *, void, uint64_t, char *))(v46 + 56))(v87, 0, 1, v17);
      if ((*(unsigned int (**)(char *, uint64_t, char *))(v46 + 48))(v87, 1, v17) == 1) {
        goto LABEL_25;
      }

      uint64_t v88 = *(void (**)(char *, char *))(v46 + 8);
      v88(v82, v17);
      v88(v26, v17);
      uint64_t v65 = v98;
      uint64_t v66 = v87;
      goto LABEL_15;
    case 3:
      uint64_t v52 = (void *)sub_1C254CA50();
      id v53 = objc_msgSend((id)v39, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, 0, v52, 0);

      id v54 = v91;
      sub_1C254CA80();

      uint64_t v55 = (void *)sub_1C254CA50();
      id v56 = objc_msgSend((id)v39, sel_hk_startOfWeekWithFirstWeekday_beforeDate_addingWeeks_, 0, v55, 1);

      int v57 = v92;
      sub_1C254CA80();

      uint64_t v58 = (void *)sub_1C254CA50();
      uint64_t v59 = (void *)sub_1C254CA50();
      id v60 = (id)HKUIMidDate();

      uint64_t v46 = v100;
      uint64_t v17 = v101;
      if (!v60) {
        goto LABEL_20;
      }
      uint64_t v61 = v97;
      sub_1C254CA80();

      uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
      uint64_t v63 = v95;
      v62(v95, v61, (uint64_t)v17);
      (*(void (**)(char *, void, uint64_t, char *))(v46 + 56))(v63, 0, 1, v17);
      if ((*(unsigned int (**)(char *, uint64_t, char *))(v46 + 48))(v63, 1, v17) == 1) {
        goto LABEL_21;
      }

      uint64_t v64 = *(void (**)(char *, char *))(v46 + 8);
      v64(v57, v17);
      v64(v54, v17);
      uint64_t v65 = v98;
      uint64_t v66 = v63;
LABEL_15:
      int v76 = v17;
LABEL_16:
      v62(v65, v66, (uint64_t)v76);
      return;
    case 4:
    case 5:
      uint64_t v40 = (void *)sub_1C254CA50();
      uint64_t v41 = (void *)v39;
      id v42 = objc_msgSend((id)v39, sel_hk_startOfDateByAddingDays_toDate_, 0, v40);

      sub_1C254CA80();
      uint64_t v43 = (void *)sub_1C254CA50();
      id v44 = objc_msgSend((id)v39, sel_hk_startOfDateByAddingDays_toDate_, 1, v43);

      sub_1C254CA80();
      uint64_t v45 = (void *)sub_1C254CA50();
      uint64_t v46 = sub_1C254CA50();
      id v47 = (id)HKUIMidDate();

      uint64_t v48 = v100;
      uint64_t v39 = (uint64_t)v101;
      if (!v47)
      {
        (*(void (**)(char *, uint64_t, uint64_t, char *))(v100 + 56))(v96, 1, 1, v101);
LABEL_19:
        __break(1u);
LABEL_20:
        uint64_t v89 = *(void (**)(char *, uint64_t, uint64_t, char *))(v46 + 56);
        v46 += 56;
        v89(v95, 1, 1, v17);
LABEL_21:
        __break(1u);
LABEL_22:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v93, 1, 1, v46);
LABEL_23:
        __break(1u);
LABEL_24:
        (*(void (**)(char *, uint64_t, uint64_t, char *))(v46 + 56))(v94, 1, 1, v17);
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C224D61CLL);
      }
      uint64_t v46 = (uint64_t)v97;
      sub_1C254CA80();

      uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 32);
      uint64_t v50 = v96;
      v49(v96, v46, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v50, 0, 1, v39);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v50, 1, v39) == 1) {
        goto LABEL_19;
      }

      id v51 = *(void (**)(char *, uint64_t))(v48 + 8);
      v51(v14, v39);
      v51(v17, v39);
      v49(v98, (uint64_t)v50, v39);
      return;
    default:
      (*(void (**)(char *, uint64_t, char *))(v100 + 16))(v98, v99, v101);

      return;
  }
}

id HKTimeScope.bucketDateRangeString(from:)(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 3) < 3)
  {
    id v2 = objc_msgSend(self, sel_hk_monthDayYearIntervalFormatter);
    if (v2) {
      goto LABEL_11;
    }
    __break(1u);
  }
  if (a2 == 2) {
    goto LABEL_8;
  }
  if (a2 == 1)
  {
    id v2 = objc_msgSend(self, sel_hk_yearIntervalFormatter);
    if (v2) {
      goto LABEL_11;
    }
    __break(1u);
LABEL_8:
    id v2 = objc_msgSend(self, sel_hk_monthIntervalFormatter);
    if (v2) {
      goto LABEL_11;
    }
    __break(1u);
  }
  id result = objc_msgSend(self, sel_hk_hourDateIntervalFormatter);
  id v2 = result;
  if (!result)
  {
    __break(1u);
    return result;
  }
LABEL_11:
  uint64_t v4 = (void *)sub_1C254C4C0();
  id v5 = objc_msgSend(v2, sel_stringFromDateInterval_, v4);

  if (v5)
  {
    uint64_t v6 = sub_1C254F470();
  }
  else
  {

    return 0;
  }
  return (id)v6;
}

void static TapToRadarManager.presentTapToRadarDialogue(from:)(void *a1)
{
  if (objc_msgSend(self, sel_isAppleInternalInstall))
  {
    int v3 = (void *)sub_1C254F430();
    uint64_t v4 = (void *)sub_1C254F430();
    id v5 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v3, v4, 1);

    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 24) = v1;
    id v7 = a1;
    uint64_t v8 = (void *)sub_1C254F430();
    uint64_t v21 = sub_1C224E370;
    uint64_t v22 = v6;
    uint64_t v17 = MEMORY[0x1E4F143A8];
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_1C224DAAC;
    uint64_t v20 = &block_descriptor_17;
    uint64_t v9 = _Block_copy(&v17);
    swift_release();
    uint64_t v10 = self;
    id v11 = objc_msgSend(v10, sel_actionWithTitle_style_handler_, v8, 0, v9);
    _Block_release(v9);

    uint64_t v12 = (void *)sub_1C254F430();
    uint64_t v21 = sub_1C224DD10;
    uint64_t v22 = 0;
    uint64_t v17 = MEMORY[0x1E4F143A8];
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_1C224DAAC;
    uint64_t v20 = &block_descriptor_3;
    uint64_t v13 = _Block_copy(&v17);
    swift_release();
    id v14 = objc_msgSend(v10, sel_actionWithTitle_style_handler_, v12, 0, v13);
    _Block_release(v13);

    objc_msgSend(v5, sel_addAction_, v11);
    objc_msgSend(v5, sel_addAction_, v14);
    uint64_t v15 = (void *)sub_1C254F430();
    id v16 = objc_msgSend(v10, sel_actionWithTitle_style_handler_, v15, 1, 0);

    objc_msgSend(v5, sel_addAction_, v16);
    objc_msgSend(v7, sel_presentViewController_animated_completion_, v5, 1, 0);
  }
}

void sub_1C224DAAC(uint64_t a1, void *a2)
{
  int v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1C224DB14(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  id v6 = objc_allocWithZone((Class)WDAppleInternalConsentViewController);
  void v10[4] = sub_1C224E45C;
  v10[5] = v5;
  v10[0] = MEMORY[0x1E4F143A8];
  v10[1] = 1107296256;
  void v10[2] = sub_1C224E0C4;
  v10[3] = &block_descriptor_10;
  id v7 = _Block_copy(v10);
  id v8 = a2;
  id v9 = objc_msgSend(v6, sel_initWithPresentingViewController_completionBlock_, v8, v7);
  _Block_release(v7);
  swift_release();
  objc_msgSend(v8, sel_presentViewController_animated_completion_, v9, 1, 0);
}

void sub_1C224DC2C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = a2;
  void v8[4] = sub_1C224E49C;
  v8[5] = v5;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_1C224E544;
  v8[3] = &block_descriptor_16;
  id v6 = _Block_copy(v8);
  id v7 = a2;
  swift_release();
  objc_msgSend(v7, sel_dismissViewControllerAnimated_completion_, 1, v6);
  _Block_release(v6);
}

uint64_t sub_1C224DD10()
{
  uint64_t v0 = sub_1C254C900();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = self;
  uint64_t v5 = (void *)sub_1C254F430();
  id v6 = (void *)sub_1C254F430();
  id v7 = objc_msgSend(v4, sel_hk_tapToHealthRadarURLForComponent_title_description_classification_reproducibility_keywords_autoDiagnostics_attachments_, 938492, v5, v6, 0, 0, 0, 2, 0);

  sub_1C254C8A0();
  id v8 = objc_msgSend(self, sel_defaultWorkspace);
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = (void *)sub_1C254C870();
    sub_1C22045C0(MEMORY[0x1E4FBC860]);
    id v11 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_openSensitiveURL_withOptions_, v10, v11);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

id TapToRadarManager.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id TapToRadarManager.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TapToRadarManager();
  return objc_msgSendSuper2(&v2, sel_init);
}

id TapToRadarManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TapToRadarManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C224E044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    swift_unknownObjectRetain();
    sub_1C25501E0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  id v5 = _sSo15UIBarButtonItemC15HealthRecordsUIE014makeTapToRadarC06target6actionABSgypSg_10ObjectiveC8SelectorVSgtFZ_0((uint64_t)v7, a4);
  sub_1C224E3A4((uint64_t)v7);
  return v5;
}

uint64_t sub_1C224E0C4(uint64_t a1, uint64_t a2)
{
  int v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

id _sSo15UIBarButtonItemC15HealthRecordsUIE014makeTapToRadarC06target6actionABSgypSg_10ObjectiveC8SelectorVSgtFZ_0(uint64_t a1, uint64_t a2)
{
  if (!objc_msgSend(self, sel_isAppleInternalInstall)) {
    return 0;
  }
  id v4 = objc_msgSend(self, sel_standardUserDefaults);
  unsigned __int8 v5 = objc_msgSend(v4, sel_BOOLForKey_, *MEMORY[0x1E4F2BE98]);

  if (v5) {
    return 0;
  }
  id v7 = (void *)sub_1C254F430();
  id v8 = objc_msgSend(self, sel_systemImageNamed_, v7);

  sub_1C224E4C4(a1, (uint64_t)v16);
  uint64_t v9 = v17;
  if (v17)
  {
    uint64_t v10 = __swift_project_boxed_opaque_existential_1Tm(v16, v17);
    uint64_t v11 = *(void *)(v9 - 8);
    MEMORY[0x1F4188790](v10);
    uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v13);
    uint64_t v14 = sub_1C2550860();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  }
  else
  {
    uint64_t v14 = 0;
  }
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithImage_style_target_action_, v8, 0, v14, a2);
  swift_unknownObjectRelease();

  return v6;
}

uint64_t sub_1C224E338()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C224E370(uint64_t a1)
{
  sub_1C224DB14(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t type metadata accessor for TapToRadarManager()
{
  return self;
}

uint64_t sub_1C224E3A4(uint64_t a1)
{
  sub_1C224E400();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C224E400()
{
  if (!qword_1EBB6EF00)
  {
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6EF00);
    }
  }
}

void sub_1C224E45C(uint64_t a1)
{
  sub_1C224DC2C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C224E464()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C224E49C()
{
  return static TapToRadarManager.presentTapToRadarDialogue(from:)(*(void *)(v0 + 24));
}

uint64_t sub_1C224E4C4(uint64_t a1, uint64_t a2)
{
  sub_1C224E400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C224E544(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t SyncTaskScheduler.schedule(task:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C224E5B4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OS_dispatch_queue.schedule(task:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254F1C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254F200();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_18;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  sub_1C254F1E0();
  v14[1] = MEMORY[0x1E4FBC860];
  sub_1C221B1F8((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C221B1A0();
  sub_1C221B1F8((unint64_t *)&qword_1EBB6FF40, (void (*)(uint64_t))sub_1C221B1A0);
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v11, v7, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t sub_1C224E884(uint64_t a1, uint64_t a2)
{
  return OS_dispatch_queue.schedule(task:)(a1, a2);
}

void NSOperationQueue.schedule(task:)(uint64_t a1, uint64_t a2)
{
  v6[4] = a1;
  void v6[5] = a2;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_1C224E544;
  v6[3] = &block_descriptor_3_0;
  int v3 = _Block_copy(v6);
  uint64_t v4 = self;
  swift_retain();
  id v5 = objc_msgSend(v4, sel_blockOperationWithBlock_, v3);
  _Block_release(v3);
  swift_release();
  objc_msgSend(v2, sel_addOperation_, v5);
}

void sub_1C224E98C(uint64_t a1, uint64_t a2)
{
  int v3 = *v2;
  v7[4] = a1;
  void v7[5] = a2;
  v7[0] = MEMORY[0x1E4F143A8];
  v7[1] = 1107296256;
  _OWORD v7[2] = sub_1C224E544;
  v7[3] = &block_descriptor_6;
  uint64_t v4 = _Block_copy(v7);
  id v5 = self;
  swift_retain();
  id v6 = objc_msgSend(v5, sel_blockOperationWithBlock_, v4);
  _Block_release(v4);
  swift_release();
  objc_msgSend(v3, sel_addOperation_, v6);
}

uint64_t dispatch thunk of TaskScheduler.schedule(task:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for SyncTaskScheduler()
{
  return &type metadata for SyncTaskScheduler;
}

id DiagnosticTestResultFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store);
}

uint64_t DiagnosticTestResultFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context);
}

id DiagnosticTestResultFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  id v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id DiagnosticTestResultFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for DiagnosticTestResultFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for DiagnosticTestResultFormatter()
{
  return self;
}

uint64_t sub_1C224EBA0(void *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context) >= 2uLL)
  {
    uint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C224EC04(a1);
  }
  return result;
}

uint64_t sub_1C224EC04(void *a1)
{
  sub_1C224F4C8(0, (unint64_t *)&qword_1EA2DF0E8, (uint64_t (*)(uint64_t))sub_1C224F494, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255E6B0;
  *(void *)(inited + 32) = sub_1C253F728(a1);
  unint64_t v3 = sub_1C224F52C();
  id v4 = a1;
  id v5 = objc_msgSend(v4, sel_effectiveStartDate);
  id v6 = objc_msgSend(v4, sel_effectiveEndDate);

  id v7 = objc_msgSend(v4, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  *(void *)(inited + 40) = sub_1C2388848(v5, v6, sub_1C24A9184, 0, sub_1C24A9184, 0, v8, v10, v3);
  *(void *)(inited + 48) = sub_1C23FF638(v4);
  id v11 = v4;
  uint64_t v12 = sub_1C23F6380(v11);

  uint64_t v13 = Array<A>.newlineJoined.getter(v12);
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  *(void *)(inited + 56) = sub_1C2386E00(v13, v15);
  *(void *)(inited + 64) = sub_1C23A1860(v11);
  *(void *)(inited + 72) = sub_1C224F56C(v11);
  id v16 = objc_msgSend(v11, sel_performers);
  if (v16)
  {
    uint64_t v17 = sub_1C254F710();

    id v16 = (id)Array<A>.newlineJoined.getter(v17);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v19 = 0;
  }
  *(void *)(inited + 80) = sub_1C2386FE0((uint64_t)v16, v19);
  *(void *)(inited + 88) = sub_1C224F758(v11);
  *(void *)(inited + 96) = sub_1C243F974(v11);
  sub_1C254F730();
  uint64_t v39 = MEMORY[0x1E4FBC860];
  uint64_t v20 = *(void **)(inited + 32);
  if (v20)
  {
    id v21 = v20;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v22 = *(void **)(inited + 40);
  if (v22)
  {
    id v23 = v22;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v24 = *(void **)(inited + 48);
  if (v24)
  {
    id v25 = v24;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  char v26 = *(void **)(inited + 56);
  if (v26)
  {
    id v27 = v26;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v28 = *(void **)(inited + 64);
  if (v28)
  {
    id v29 = v28;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v30 = *(void **)(inited + 72);
  if (v30)
  {
    id v31 = v30;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v32 = *(void **)(inited + 80);
  if (v32)
  {
    id v33 = v32;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v34 = *(void **)(inited + 88);
  if (v34)
  {
    id v35 = v34;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v36 = *(void **)(inited + 96);
  if (v36)
  {
    id v37 = v36;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  swift_bridgeObjectRelease();
  return v39;
}

id DiagnosticTestResultFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void DiagnosticTestResultFormatter.init()()
{
}

id DiagnosticTestResultFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiagnosticTestResultFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C224F2B8()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store);
}

uint64_t sub_1C224F2CC()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context);
}

id sub_1C224F2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = (objc_class *)type metadata accessor for DiagnosticTestResultFormatter();
  id v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1C224F354(void *a1)
{
  if (*(void *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_context) < 2uLL) {
    return sub_1C224EC04(a1);
  }
  uint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

unint64_t sub_1C224F3B8(uint64_t a1)
{
  unint64_t result = sub_1C224F3E0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C224F3E0()
{
  unint64_t result = qword_1EA2DF0E0;
  if (!qword_1EA2DF0E0)
  {
    type metadata accessor for DiagnosticTestResultFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF0E0);
  }
  return result;
}

uint64_t method lookup function for DiagnosticTestResultFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DiagnosticTestResultFormatter);
}

uint64_t dispatch thunk of DiagnosticTestResultFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of DiagnosticTestResultFormatter.displayItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

void sub_1C224F494(uint64_t a1)
{
}

void sub_1C224F4C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C224F52C()
{
  unint64_t result = qword_1EA2DE708;
  if (!qword_1EA2DE708)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DE708);
  }
  return result;
}

id sub_1C224F56C(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1C23F6398(v1);
  unint64_t v4 = v3;

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    id v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    unint64_t v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    uint64_t v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

id sub_1C224F758(void *a1)
{
  id v1 = objc_msgSend(a1, sel_comments);
  if (v1)
  {
    uint64_t v2 = sub_1C254F470();
    unint64_t v4 = v3;

    uint64_t v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5)
    {
      id v1 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v1, sel_setDisplayItemType_, 15);
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v6 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      id v7 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v7, 0xE000000000000000);

      unint64_t v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setSubtitle_, v8);

      objc_msgSend(v1, sel_setSeparatorStyle_, 0);
      objc_msgSend(v1, sel_setSeparatorHidden_, 0);
      objc_msgSend(v1, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v1;
}

uint64_t type metadata accessor for InternalConceptsFeedViewController()
{
  uint64_t result = qword_1EA2DF0F8;
  if (!qword_1EA2DF0F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C224F9A8()
{
  return swift_initClassMetadata2();
}

unint64_t sub_1C224F9E8@<X0>(void *a1@<X8>)
{
  unint64_t v3 = *(void **)(v1 + qword_1EA2DF3E8);
  id v4 = *(id *)(v1 + qword_1EA2DF3F0);
  id v5 = objc_msgSend(v3, sel_healthStore);
  id v6 = objc_msgSend(v5, sel_profileIdentifier);

  sub_1C254FB30();
  uint64_t v7 = type metadata accessor for ConceptListViewDataSourceProvider();
  swift_allocObject();
  unint64_t v8 = ConceptListViewDataSourceProvider.init(categoryPredicate:sourceProfile:store:)(v4, v6, (uint64_t)v10);
  a1[3] = v7;
  unint64_t result = sub_1C224FB08();
  a1[4] = result;
  *a1 = v8;
  return result;
}

id sub_1C224FAC8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalConceptsFeedViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C224FB00()
{
  return type metadata accessor for InternalConceptsFeedViewController();
}

unint64_t sub_1C224FB08()
{
  unint64_t result = qword_1EA2DF108;
  if (!qword_1EA2DF108)
  {
    type metadata accessor for ConceptListViewDataSourceProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF108);
  }
  return result;
}

id static NSUserDefaults.minimumNumberOfLabsForFrequentCollection.getter()
{
  return sub_1C21A4F30(0xD00000000000002FLL, 0x80000001C2577930, 3);
}

id static NSUserDefaults.shouldForceAllConceptsLowUtility.getter()
{
  return sub_1C224FBC0(0xD000000000000026, 0x80000001C2577990, 0);
}

id static NSUserDefaults.alwaysShowHighlights.getter()
{
  return sub_1C224FBC0(0xD000000000000017, 0x80000001C25779C0, 0);
}

id sub_1C224FBC0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    id v5 = result;
    unsigned int v6 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v6)
    {
      sub_1C224FCC8();
      uint64_t v7 = (void *)sub_1C254FA70();
      unint64_t v8 = (void *)sub_1C254F430();
      unsigned int v9 = objc_msgSend(v7, sel_hk_keyExists_, v8);

      if (v9)
      {
        uint64_t v10 = (void *)sub_1C254FA70();
        id v11 = (void *)sub_1C254F430();
        a3 = objc_msgSend(v10, sel_BOOLForKey_, v11);
      }
    }
    return (id)(a3 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1C224FCC8()
{
  unint64_t result = qword_1EBB6DD78;
  if (!qword_1EBB6DD78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB6DD78);
  }
  return result;
}

uint64_t type metadata accessor for SignedClinicalDataStatusDataSource(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DF128);
}

uint64_t sub_1C224FD28()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C224FD84()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x1F4188790](v0);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v10 - v5;
  sub_1C254DA90();
  sub_1C254DA80();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  uint64_t v8 = sub_1C254DB40();
  v7(v6, v0);
  return v8;
}

uint64_t sub_1C224FEA0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[6] = a4;
  v4[7] = *a4;
  uint64_t v5 = sub_1C254E560();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  unsigned int v6 = (void *)swift_task_alloc();
  v4[11] = v6;
  *unsigned int v6 = v4;
  v6[1] = sub_1C224FFB8;
  return sub_1C22504B8();
}

uint64_t sub_1C224FFB8()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C22501D0;
  }
  else {
    uint64_t v2 = sub_1C22500CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C22500CC()
{
  sub_1C254F820();
  *(void *)(v0 + 104) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2250160, v2, v1);
}

uint64_t sub_1C2250160()
{
  swift_release();
  sub_1C2251014();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C22501D0()
{
  char v26 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = (void *)v0[12];
  sub_1C254E510();
  id v3 = v2;
  swift_retain();
  id v4 = v2;
  swift_retain();
  uint64_t v5 = sub_1C254E550();
  os_log_type_t v6 = sub_1C254FA20();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (void *)v0[12];
    uint64_t v22 = v0[9];
    uint64_t v8 = v0[7];
    uint64_t v23 = v0[8];
    uint64_t v24 = v0[10];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v25 = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    v0[2] = v8;
    swift_getMetatypeMetadata();
    uint64_t v11 = sub_1C254F4F0();
    v0[3] = sub_1C21AD354(v11, v12, &v25);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    v0[4] = v7;
    id v13 = v7;
    sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
    uint64_t v14 = sub_1C254F4F0();
    v0[5] = sub_1C21AD354(v14, v15, &v25);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v5, v6, "%s: Failed to generate QR images, error: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v10, -1, -1);
    MEMORY[0x1C875A0B0](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  else
  {
    id v16 = (void *)v0[12];
    uint64_t v18 = v1[9];
    uint64_t v17 = v1[10];
    uint64_t v19 = v1[8];

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v1[1];
  return v20();
}

uint64_t sub_1C22504B8()
{
  v1[8] = v0;
  v1[9] = *v0;
  uint64_t v2 = sub_1C254E560();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C22505DC, 0, 0);
}

uint64_t sub_1C22505DC()
{
  uint64_t v52 = v0;
  v51[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(char **)(v0[8] + qword_1EA2DF120);
  v0[14] = v1;
  if (!v1)
  {
    sub_1C254E510();
    swift_retain_n();
    id v16 = sub_1C254E550();
    os_log_type_t v17 = sub_1C254FA40();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v20 = v0[11];
    uint64_t v19 = v0[12];
    uint64_t v21 = v0[10];
    if (v18)
    {
      uint64_t v50 = v0[12];
      uint64_t v22 = v0[9];
      uint64_t v49 = v0[10];
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      v51[0] = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      v0[2] = v22;
      swift_getMetatypeMetadata();
      uint64_t v25 = sub_1C254F4F0();
      v0[3] = sub_1C21AD354(v25, v26, v51);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1C21A1000, v16, v17, "%s: No SCD context, cannot generate QR image", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v24, -1, -1);
      MEMORY[0x1C875A0B0](v23, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v50, v49);
    }
    else
    {
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    }
    goto LABEL_19;
  }
  uint64_t v2 = (void **)(v0 + 6);
  uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_qrImage;
  v0[15] = OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_qrImage;
  if (*(void *)&v1[v3])
  {
    uint64_t v4 = v1;
    sub_1C254E510();
    swift_retain_n();
    uint64_t v5 = sub_1C254E550();
    os_log_type_t v6 = sub_1C254FA40();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = v0[13];
    uint64_t v10 = v0[10];
    uint64_t v9 = v0[11];
    if (v7)
    {
      uint64_t v11 = v0[9];
      uint64_t v48 = v4;
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = v10;
      uint64_t v13 = swift_slowAlloc();
      v51[0] = v13;
      *(_DWORD *)unint64_t v12 = 136315138;
      v0[4] = v11;
      swift_getMetatypeMetadata();
      uint64_t v14 = sub_1C254F4F0();
      v0[5] = sub_1C21AD354(v14, v15, v51);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1C21A1000, v5, v6, "%s: Already have QR image, not re-fetching", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v13, -1, -1);
      MEMORY[0x1C875A0B0](v12, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v47);
    }
    else
    {

      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    }
    goto LABEL_19;
  }
  uint64_t v27 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_group];
  uint64_t v28 = v1;
  id v29 = objc_msgSend(v27, sel_mainRecord);
  v0[16] = v29;
  if (!v29)
  {

LABEL_19:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v43 = (uint64_t (*)(void))v0[1];
LABEL_20:
    return v43();
  }
  uint64_t v30 = v29;
  id v31 = objc_msgSend(v27, sel_QRRepresentation);
  v0[17] = v31;
  if (!v31)
  {

    goto LABEL_19;
  }
  uint64_t v32 = v31;
  *uint64_t v2 = 0;
  id v33 = objc_msgSend(v31, sel_orderedSegmentsWithError_, v0 + 6);
  uint64_t v34 = *v2;
  if (!v33)
  {
    id v44 = v34;
    sub_1C254C820();

    swift_willThrow();
    uint64_t v45 = (void *)v0[14];

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v43 = (uint64_t (*)(void))v0[1];
    goto LABEL_20;
  }
  id v35 = v33;
  sub_1C21AB51C(0, &qword_1EA2DE538);
  unint64_t v36 = sub_1C254F710();
  id v37 = v34;

  if (v36 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v38 != 1 && (sub_1C254FDF0() & 1) == 0)
  {

    goto LABEL_19;
  }
  uint64_t v39 = type metadata accessor for SignedClinicalDataQRCodeGenerator();
  uint64_t v40 = swift_task_alloc();
  v0[18] = v40;
  *(void *)(v40 + 16) = v39;
  *(void *)(v40 + 24) = v32;
  uint64_t v41 = (void *)swift_task_alloc();
  v0[19] = v41;
  sub_1C2253F68();
  *uint64_t v41 = v0;
  v41[1] = sub_1C2250C8C;
  return MEMORY[0x1F4188160](v0 + 7, 0, 0, 0xD000000000000018, 0x80000001C2577C90, sub_1C2253F60, v40, v42);
}

uint64_t sub_1C2250C8C()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C2250F4C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C2250DDC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2250DDC()
{
  unint64_t v1 = v0[7];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    goto LABEL_9;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v2 = (id)MEMORY[0x1C87588E0](0, v1);
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v2 = *(id *)(v1 + 32);
  }
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  CIImage.createUIImage(dimension:)(158.0);
  uint64_t v5 = v4;

LABEL_9:
  BOOL v7 = (void *)v0[16];
  uint64_t v8 = (void *)v0[17];
  uint64_t v10 = (char *)v0[14];
  uint64_t v9 = v0[15];
  uint64_t v11 = *(void **)&v10[v9];
  *(void *)&v10[v9] = v5;

  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1C2250F4C()
{
  swift_task_dealloc();
  unint64_t v1 = *(void **)(v0 + 128);
  id v2 = *(void **)(v0 + 112);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C2251014()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C254E560();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254F230();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (void *)((char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v1 + qword_1EA2DF120);
  if (v11)
  {
    id v12 = v11;
    unint64_t v13 = sub_1C243F5FC((uint64_t)v12);
    id v14 = v12;
    swift_retain();
    sub_1C22539C8(v13, (uint64_t)v14, v1);
    swift_bridgeObjectRelease();

    swift_release();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    uint64_t *v10 = sub_1C254FC70();
    (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
    LOBYTE(v13) = sub_1C254F260();
    uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
    if (v13)
    {
      sub_1C254DA30();

      return swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1C254E510();
    swift_retain_n();
    id v16 = sub_1C254E550();
    os_log_type_t v17 = sub_1C254FA40();
    if (os_log_type_enabled(v16, v17))
    {
      BOOL v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v23 = v2;
      uint64_t v24 = v19;
      *(_DWORD *)BOOL v18 = 136315138;
      v22[0] = v18 + 4;
      swift_getMetatypeMetadata();
      uint64_t v20 = sub_1C254F4F0();
      uint64_t v23 = sub_1C21AD354(v20, v21, &v24);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v16, v17, "%s: No SCD context, cannot update data source items", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v19, -1, -1);
      MEMORY[0x1C875A0B0](v18, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

id sub_1C22513C8@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v7 = *a1;
  id result = objc_msgSend(*a1, sel_displayItemType);
  switch((unint64_t)result)
  {
    case 0xBuLL:
      id result = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_group), sel_medicalRecords);
      if (!result) {
        goto LABEL_7;
      }
      uint64_t v9 = result;
      sub_1C21AB51C(0, &qword_1EBB6F978);
      uint64_t v10 = sub_1C254F710();

      id v11 = objc_msgSend(v7, sel_title);
      if (!v11) {
        goto LABEL_25;
      }
      id v12 = v11;
      uint64_t v13 = sub_1C254F470();
      uint64_t v15 = v14;

      id v16 = *(void **)(a3 + qword_1EA2DF110);
      uint64_t v17 = type metadata accessor for MultiRecordItem();
      swift_allocObject();
      id v18 = v16;
      uint64_t v19 = sub_1C2253160(v13, v15, v10, v18);

      *(void *)(a4 + 24) = v17;
      unint64_t v21 = (unint64_t *)&unk_1EA2DF180;
      uint64_t v22 = (void (*)(uint64_t))type metadata accessor for MultiRecordItem;
      goto LABEL_14;
    case 0xDuLL:
      id result = objc_msgSend(v7, sel_image);
      if (!result) {
        goto LABEL_7;
      }
      id v23 = result;
      uint64_t v24 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_group);
      uint64_t v25 = type metadata accessor for QRCodeItem();
      unint64_t v26 = (void *)swift_allocObject();
      v26[3] = v24;
      void v26[4] = 0;
      void v26[2] = v23;
      *(void *)(a4 + 24) = v25;
      *(void *)(a4 + 32) = sub_1C2253118(&qword_1EA2DF170, v27, (void (*)(uint64_t))type metadata accessor for QRCodeItem);
      *(void *)a4 = v26;
      return v24;
    case 0xFuLL:
      sub_1C2201F2C();
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1C255CDA0;
      *(void *)(v28 + 32) = sub_1C254F470();
      *(void *)(v28 + 40) = v29;
      id v30 = objc_msgSend(v7, sel_title);
      if (!v30)
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C225192CLL);
      }
      id v31 = v30;
      id v32 = objc_msgSend(v30, sel_removeSpecialCharactersAndWhiteSpaces);

      uint64_t v33 = sub_1C254F470();
      uint64_t v35 = v34;

      uint64_t v66 = v33;
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      *(void *)(v28 + 48) = v33;
      *(void *)(v28 + 56) = v35;
      unint64_t v36 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v37 = (id)HKUIJoinStringsForAutomationIdentifier();

      if (v37)
      {
        uint64_t v38 = sub_1C254F470();
        uint64_t v40 = v39;
      }
      else
      {
        uint64_t v38 = 0;
        uint64_t v40 = 0;
      }
      id v51 = objc_msgSend(v7, sel_title, v66, v35);
      if (!v51) {
        goto LABEL_24;
      }
      uint64_t v52 = v51;
      uint64_t v53 = v40;
      uint64_t v54 = sub_1C254F470();
      uint64_t v56 = v55;

      id v57 = objc_msgSend(v7, sel_subtitle);
      if (v57)
      {
        uint64_t v58 = v57;
        uint64_t v59 = v38;
        uint64_t v60 = sub_1C254F470();
        uint64_t v62 = v61;
      }
      else
      {
        uint64_t v59 = v38;
        uint64_t v60 = 0;
        uint64_t v62 = 0;
      }
      uint64_t v63 = type metadata accessor for TitleSubtitleDetailItem(0);
      uint64_t v64 = (void *)swift_allocObject();
      sub_1C254CB30();
      void v64[2] = v54;
      v64[3] = v56;
      uint64_t v65 = MEMORY[0x1E4FBC860];
      v64[4] = v60;
      v64[5] = v62;
      v64[6] = 0;
      v64[7] = v65;
      v64[8] = v59;
      v64[9] = v53;
      *(void *)(a4 + 24) = v63;
      id result = (id)sub_1C2253118(&qword_1EA2DF188, 255, (void (*)(uint64_t))type metadata accessor for TitleSubtitleDetailItem);
      *(void *)(a4 + 32) = result;
      *(void *)a4 = v64;
      return result;
    case 0x10uLL:
      id v41 = objc_msgSend(v7, sel_title);
      if (!v41) {
        goto LABEL_22;
      }
      uint64_t v42 = v41;
      uint64_t v43 = sub_1C254F470();
      uint64_t v45 = v44;

      id v46 = objc_msgSend(v7, sel_attributedSubtitle);
      if (!v46) {
        goto LABEL_23;
      }
      uint64_t v47 = v46;
      uint64_t v48 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI30SignedClinicalDataGroupContext_group);
      uint64_t v49 = type metadata accessor for RecordVerificationItem(0);
      swift_allocObject();
      id v50 = v48;
      uint64_t v19 = sub_1C22535B0(v43, v45, v47, v50);

      *(void *)(a4 + 24) = v49;
      unint64_t v21 = (unint64_t *)&unk_1EA2DF178;
      uint64_t v22 = (void (*)(uint64_t))type metadata accessor for RecordVerificationItem;
      uint64_t v20 = 255;
LABEL_14:
      id result = (id)sub_1C2253118(v21, v20, v22);
      *(void *)(a4 + 32) = result;
      *(void *)a4 = v19;
      return result;
    default:
LABEL_7:
      *(void *)(a4 + 32) = 0;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
      return result;
  }
}

void sub_1C2251944()
{
}

void sub_1C2251960()
{
}

void sub_1C225197C()
{
}

void sub_1C22519A8()
{
  uint64_t v1 = *(void **)(v0 + qword_1EA2DF120);
}

uint64_t sub_1C22519F8()
{
  uint64_t v0 = sub_1C254DF40();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2251A68()
{
  return type metadata accessor for SignedClinicalDataStatusDataSource(0);
}

uint64_t sub_1C2251A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254E890();
  MEMORY[0x1F4188790](v10 - 8);
  if (sub_1C254F470() == a1 && v11 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v13 = sub_1C2550870();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_13:
    if (qword_1EA2DD680 != -1) {
      swift_once();
    }
    id v18 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C254E810();
    uint64_t v19 = sub_1C254D2A0();
    swift_allocObject();
    uint64_t v20 = sub_1C254D280();
    a3[3] = v19;
    uint64_t result = sub_1C2253118((unint64_t *)&qword_1EBB6E7D8, 255, MEMORY[0x1E4F66208]);
    a3[4] = result;
    *a3 = v20;
    return result;
  }
  if (sub_1C254F470() == a1 && v14 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      a3[3] = sub_1C254D3D0();
      a3[4] = sub_1C2253118(&qword_1EA2DE998, 255, MEMORY[0x1E4F66330]);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1C254D3C0();
    }
  }
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v21 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  v22[0] = 0x74497265746F6F46;
  v22[1] = 0xEB000000005F6D65;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  a3[3] = sub_1C254DEA0();
  a3[4] = sub_1C2253118(&qword_1EA2DE9A0, 255, MEMORY[0x1E4F665E8]);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1C254DE90();
}

uint64_t sub_1C2251F24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C2251A70(a1, a2, a3);
}

void sub_1C2251F3C()
{
}

void sub_1C2251F6C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 104);
}

uint64_t sub_1C2251F9C()
{
  uint64_t v0 = TextItem.deinit();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MultiRecordItem()
{
  return self;
}

void sub_1C2252010(uint64_t a1, void *a2)
{
}

void sub_1C2252038()
{
}

uint64_t sub_1C2252048()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI23TitleSubtitleDetailItem_uuid;
  uint64_t v2 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1C2252124()
{
  return type metadata accessor for RecordVerificationItem(0);
}

uint64_t type metadata accessor for RecordVerificationItem(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DF140);
}

uint64_t sub_1C225214C()
{
  return swift_updateClassMetadata2();
}

void sub_1C2252194(uint64_t a1, void *a2)
{
  uint64_t v4 = *v2;
  id v5 = _s15HealthRecordsUI41SignedClinicalDataRecordDetailViewFactoryC06issuerhI10Controller06signedeF5GroupSo06UIViewL0CSo08HKSignedefN0C_tFZ_0(*(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI22RecordVerificationItem_group));
  objc_msgSend(a2, sel_showViewController_sender_, v5, v4);
}

uint64_t sub_1C2252200()
{
  uint64_t v4 = sub_1C2550AA0();
  sub_1C254F5A0();
  id v1 = *(id *)(v0 + 16);
  id v2 = objc_msgSend(v1, sel_description);
  sub_1C254F470();

  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C22522E8()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for QRCodeItem()
{
  return self;
}

uint64_t sub_1C2252354()
{
  type metadata accessor for QRCodeCell();
  sub_1C2253118(&qword_1EA2DF160, v0, (void (*)(uint64_t))type metadata accessor for QRCodeCell);
  return sub_1C254D330();
}

uint64_t sub_1C22523B8()
{
  return sub_1C2252200();
}

void sub_1C22523DC(uint64_t a1, void *a2)
{
}

id sub_1C2252404()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell____lazy_storage___QRCodeView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell____lazy_storage___QRCodeView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell____lazy_storage___QRCodeView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
    objc_msgSend(v4, sel_setContentMode_, 4);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1C22524A0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C2227014(v3, (uint64_t)v7);
  if (v8)
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    type metadata accessor for QRCodeItem();
    if (swift_dynamicCast())
    {
      id v4 = sub_1C2252404();
      objc_msgSend(v4, sel_setImage_, *(void *)(v6 + 16));
      swift_release();
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v7);
  }
  return sub_1C2227100(a1);
}

void (*sub_1C2252590(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell_item;
  v3[6] = v1;
  v3[7] = v4;
  swift_beginAccess();
  return sub_1C22525FC;
}

void sub_1C22525FC(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_1C2227014(v3[6] + v3[7], (uint64_t)v3);
    if (v3[3])
    {
      sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
      type metadata accessor for QRCodeItem();
      if (swift_dynamicCast())
      {
        uint64_t v4 = v3[5];
        id v5 = sub_1C2252404();
        objc_msgSend(v5, sel_setImage_, *(void *)(v4 + 16));

        swift_release();
      }
    }
    else
    {
      sub_1C2227100((uint64_t)v3);
    }
  }
  free(v3);
}

id sub_1C22526D4(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell____lazy_storage___QRCodeView] = 0;
  uint64_t v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell_item];
  uint64_t v10 = (objc_class *)type metadata accessor for QRCodeCell();
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v69.receiver = v4;
  v69.super_class = v10;
  id v11 = objc_msgSendSuper2(&v69, sel_initWithFrame_, a1, a2, a3, a4);
  id v12 = objc_allocWithZone(MEMORY[0x1E4FB1940]);
  id v13 = v11;
  id v14 = objc_msgSend(v12, sel_init);
  id v15 = objc_msgSend(v13, sel_contentView);
  objc_msgSend(v15, sel_addLayoutGuide_, v14);

  id v16 = objc_msgSend(v14, sel_leadingAnchor);
  id v17 = objc_msgSend(v13, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v18 = objc_msgSend(v17, sel_leadingAnchor);

  id v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  objc_msgSend(v19, sel_setActive_, 1);

  id v20 = objc_msgSend(v14, sel_trailingAnchor);
  id v21 = objc_msgSend(v13, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v22 = objc_msgSend(v21, sel_trailingAnchor);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  objc_msgSend(v23, sel_setActive_, 1);

  id v24 = objc_msgSend(v14, sel_topAnchor);
  id v25 = objc_msgSend(v13, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v26 = objc_msgSend(v25, sel_topAnchor);

  id v27 = objc_msgSend(v24, sel_constraintEqualToAnchor_, v26);
  objc_msgSend(v27, sel_setActive_, 1);

  id v28 = objc_msgSend(v14, sel_bottomAnchor);
  id v29 = objc_msgSend(v13, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v30 = objc_msgSend(v29, sel_bottomAnchor);

  id v31 = objc_msgSend(v28, sel_constraintEqualToAnchor_, v30);
  objc_msgSend(v31, sel_setActive_, 1);

  id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  id v33 = objc_msgSend(self, sel_whiteColor);
  objc_msgSend(v32, sel_setBackgroundColor_, v33);

  objc_msgSend(v32, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v34 = objc_msgSend(v13, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  objc_msgSend(v34, sel_addSubview_, v32);

  id v35 = objc_msgSend(v32, sel_centerXAnchor);
  id v36 = objc_msgSend(v14, sel_centerXAnchor);
  id v37 = objc_msgSend(v35, sel_constraintEqualToAnchor_, v36);

  objc_msgSend(v37, sel_setActive_, 1);
  id v38 = objc_msgSend(v32, sel_centerYAnchor);
  id v39 = objc_msgSend(v14, sel_centerYAnchor);
  id v40 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v39);

  objc_msgSend(v40, sel_setActive_, 1);
  id v41 = sub_1C2252404();
  objc_msgSend(v41, sel_setContentMode_, 4);

  id v42 = sub_1C2252404();
  objc_msgSend(v42, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  id v43 = sub_1C2252404();
  objc_msgSend(v32, sel_addSubview_, v43);

  id v44 = sub_1C2252404();
  id v45 = objc_msgSend(v44, sel_centerXAnchor);

  id v46 = objc_msgSend(v14, sel_centerXAnchor);
  id v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_, v46);

  objc_msgSend(v47, sel_setActive_, 1);
  id v48 = sub_1C2252404();
  id v49 = objc_msgSend(v48, sel_centerYAnchor);

  id v50 = objc_msgSend(v14, sel_centerYAnchor);
  id v51 = objc_msgSend(v49, sel_constraintEqualToAnchor_, v50);

  objc_msgSend(v51, sel_setActive_, 1);
  id v52 = sub_1C2252404();
  id v53 = objc_msgSend(v13, sel_contentView);
  objc_msgSend(v52, sel_hk_alignVerticalConstraintsWithView_margin_, v53, 20.0);

  id v54 = objc_msgSend(v32, sel_widthAnchor);
  id v55 = sub_1C2252404();
  id v56 = objc_msgSend(v55, sel_widthAnchor);

  id v57 = objc_msgSend(v54, sel_constraintEqualToAnchor_multiplier_constant_, v56, 1.0, 6.0);
  objc_msgSend(v57, sel_setActive_, 1);

  id v58 = objc_msgSend(v32, sel_heightAnchor);
  id v59 = sub_1C2252404();
  id v60 = objc_msgSend(v59, sel_heightAnchor);

  id v61 = objc_msgSend(v58, sel_constraintEqualToAnchor_multiplier_constant_, v60, 1.0, 6.0);
  objc_msgSend(v61, sel_setActive_, 1);

  id v62 = objc_msgSend(v32, sel_layer);
  objc_msgSend(v62, sel_setCornerRadius_, 6.0);

  id v63 = objc_msgSend(v32, sel_layer);
  objc_msgSend(v63, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);

  objc_msgSend(v32, sel_setClipsToBounds_, 1);
  sub_1C2201F2C();
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1C255CDA0;
  *(void *)(v64 + 32) = sub_1C254F470();
  *(void *)(v64 + 40) = v65;
  *(void *)(v64 + 48) = 0x654365646F435251;
  *(void *)(v64 + 56) = 0xEA00000000006C6CLL;
  uint64_t v66 = (void *)sub_1C254F700();
  id v67 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v13, sel_setAccessibilityIdentifier_, v67);
  swift_bridgeObjectRelease();

  return v13;
}

id sub_1C2252FC4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QRCodeCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for QRCodeCell()
{
  return self;
}

uint64_t sub_1C2253068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI10QRCodeCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

void (*sub_1C22530C0(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C2252590(v2);
  return sub_1C2231658;
}

uint64_t sub_1C2253118(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1C2253160(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = v4;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  sub_1C2253EFC(0, &qword_1EA2DE9F0, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v32 = sub_1C254E600();
  uint64_t v11 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  id v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C254E5A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[12] = a3;
  v5[13] = a4;
  sub_1C2253EFC(0, &qword_1EA2DE9D8, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C254E620();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C255CD90;
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E4FB0E18], v14);
  uint64_t v19 = sub_1C254E5B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v10, 1, 1, v19);
  id v20 = a4;
  sub_1C254E5F0();
  sub_1C254E5C0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v32);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_1C2201F2C();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C255CDA0;
  *(void *)(v21 + 32) = sub_1C254F470();
  *(void *)(v21 + 40) = v22;
  *(void *)(v21 + 48) = 0x63655269746C754DLL;
  *(void *)(v21 + 56) = 0xEF6C6C654364726FLL;
  id v23 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v24 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v24)
  {
    uint64_t v25 = sub_1C254F470();
    uint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v27 = 0;
  }
  type metadata accessor for TextItemCell();
  sub_1C2253118(&qword_1EA2DE790, 255, (void (*)(uint64_t))type metadata accessor for TextItemCell);
  v5[10] = sub_1C254D330();
  v5[11] = v28;
  uint64_t v29 = v34;
  long long v5[2] = v33;
  v5[3] = v29;
  _OWORD v5[4] = 0;
  _OWORD v5[5] = 0;
  v5[6] = 0;
  v5[7] = v18;
  v5[8] = v25;
  v5[9] = v27;
  return v5;
}

void *sub_1C22535B0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v32 = a2;
  id v33 = a3;
  uint64_t v31 = a1;
  sub_1C2253EFC(0, &qword_1EA2DE9F0, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v30 = sub_1C254E600();
  uint64_t v9 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C254E5A0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)((char *)v4 + OBJC_IVAR____TtC15HealthRecordsUI22RecordVerificationItem_group) = a4;
  sub_1C2253EFC(0, &qword_1EA2DE9D8, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C254E620();
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C255CD90;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FB0E18], v12);
  uint64_t v17 = sub_1C254E5B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
  id v18 = a4;
  sub_1C254E5F0();
  sub_1C254E5C0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v30);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1C2201F2C();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C255CDA0;
  *(void *)(v19 + 32) = sub_1C254F470();
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 48) = 0xD000000000000016;
  *(void *)(v19 + 56) = 0x80000001C2577C70;
  uint64_t v21 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v22 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v22)
  {
    uint64_t v23 = sub_1C254F470();
    uint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  id v26 = v33;
  id v27 = v33;
  sub_1C254CB30();
  uint64_t v28 = v32;
  v4[2] = v31;
  v4[3] = v28;
  v4[4] = 0;
  v4[5] = 0;
  v4[6] = v26;
  v4[7] = v16;
  v4[8] = v23;
  v4[9] = v25;
  return v4;
}

void *sub_1C22539C8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  unint64_t v4 = a1;
  uint64_t v30 = (void *)MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1C2550620())
  {
    unint64_t v21 = v4;
    unint64_t v22 = v4 & 0xC000000000000001;
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = v22 ? (id)MEMORY[0x1C87588E0](i - 4, v4) : *(id *)(v4 + 8 * i);
      uint64_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v29 = v7;
      sub_1C22513C8(&v29, v23, v24, (uint64_t)&v25);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return (void *)swift_bridgeObjectRelease();
      }

      if (v26)
      {
        sub_1C21F44EC(&v25, (uint64_t)v28);
        sub_1C21F44EC(v28, (uint64_t)&v25);
        uint64_t v10 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v10 = sub_1C226CD5C(0, v10[2] + 1, 1, v10);
          uint64_t v30 = v10;
        }
        unint64_t v12 = v10[2];
        unint64_t v11 = v10[3];
        if (v12 >= v11 >> 1) {
          uint64_t v30 = sub_1C226CD5C((void *)(v11 > 1), v12 + 1, 1, v10);
        }
        uint64_t v13 = v26;
        uint64_t v14 = v27;
        uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v25, v26);
        MEMORY[0x1F4188790](v15);
        uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v18 + 16))(v17);
        sub_1C2507304(v12, (uint64_t)v17, (uint64_t *)&v30, v13, v14);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
        unint64_t v4 = v21;
      }
      else
      {
        sub_1C2227100((uint64_t)&v25);
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v30;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

void sub_1C2253C6C(void *a1)
{
  objc_super v2 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
  id v3 = a1;

  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v1, sel_didTapDone);
  uint64_t v5 = (void *)_s15HealthRecordsUI41SignedClinicalDataRecordDetailViewFactoryC06QRCodeI10Controller06signedeF5GroupSo06UIViewL0CSo08HKSignedefN0C_tFZ_0(*(void **)(v1 + 24));
  id v6 = objc_msgSend(v5, sel_navigationItem);
  objc_msgSend(v6, sel_setRightBarButtonItem_, v4);

  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v5);
  objc_msgSend(v3, sel_showViewController_sender_, v7, v1);
}

void sub_1C2253D70(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 96);
  id v4 = *(void **)(v1 + 104);
  uint64_t v5 = (objc_class *)type metadata accessor for SignedClinicalDataMultiRecordViewController();
  id v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_medicalRecords] = v3;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_profile] = v4;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI43SignedClinicalDataMultiRecordViewController_displayGroups] = MEMORY[0x1E4FBC860];
  v10.receiver = v6;
  v10.super_class = v5;
  swift_bridgeObjectRetain();
  id v7 = v4;
  id v8 = objc_msgSendSuper2(&v10, sel_initWithUsingInsetStyling_, 1);
  if (v8)
  {
    uint64_t v9 = v8;
    objc_msgSend(a1, sel_showViewController_sender_, v8, v1, v10.receiver, v10.super_class);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C2253E44()
{
  if (!qword_1EA2E5330)
  {
    sub_1C21FFE74(255, (unint64_t *)&qword_1EA2DED90);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E5330);
    }
  }
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_1C2253EFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2253F60(uint64_t a1)
{
  return sub_1C2202B80(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_1C2253F68()
{
  if (!qword_1EA2DE528)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EA2DE530);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE528);
    }
  }
}

uint64_t AccountViewData.accountId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C254CB40();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t AccountViewData.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccountViewData(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for AccountViewData(uint64_t a1)
{
  return sub_1C220A934(a1, qword_1EBB6DF68);
}

uint64_t AccountViewData.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AccountViewData(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccountViewData.init(accountId:title:subtitle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a6, a1, v12);
  uint64_t result = type metadata accessor for AccountViewData(0);
  uint64_t v14 = (void *)(a6 + *(int *)(result + 20));
  *uint64_t v14 = a2;
  v14[1] = a3;
  uint64_t v15 = (void *)(a6 + *(int *)(result + 24));
  void *v15 = a4;
  v15[1] = a5;
  return result;
}

id sub_1C2254178()
{
  uint64_t v1 = qword_1EA2DF1C8;
  uint64_t v2 = *(void **)(v0 + qword_1EA2DF1C8);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EA2DF1C8);
  }
  else
  {
    id v4 = sub_1C22541DC(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C22541DC(uint64_t a1)
{
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CD70;
  id v3 = *(void **)(a1 + qword_1EA2DF1A8);
  id v4 = *(void **)(a1 + qword_1EA2DF1B0);
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v4;
  sub_1C254F730();
  id v5 = objc_allocWithZone(MEMORY[0x1E4FB1C60]);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
  id v6 = v3;
  id v7 = v4;
  unint64_t v8 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v5, sel_initWithArrangedSubviews_, v8);

  objc_msgSend(v9, sel_setAxis_, 1);
  objc_msgSend(v9, sel_setSpacing_, 0.0);
  objc_msgSend(v9, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v9;
}

id sub_1C225431C()
{
  id v0 = objc_msgSend(self, sel_labelColor);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v1, sel_setFont_, 0);
  objc_msgSend(v1, sel_setNumberOfLines_, 0);
  objc_msgSend(v1, sel_setTextColor_, v0);

  uint64_t v6 = sub_1C254F470();
  uint64_t v7 = v2;
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  id v3 = v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  id v4 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4, v6, v7);

  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v3;
}

id sub_1C22544A0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  uint64_t v5 = sub_1C254F470();
  uint64_t v6 = v1;
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  id v2 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  id v3 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v3, v5, v6);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

id sub_1C22545C4(uint64_t a1)
{
  return sub_1C22550F8(a1, (uint64_t)&qword_1EA2DF1A0, &qword_1EA2DF1A8, &qword_1EA2DF1B0);
}

void sub_1C22545E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2254634(uint64_t a1, uint64_t a2)
{
  sub_1C22545E0(0, &qword_1EA2DF190, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C22546B4()
{
  uint64_t v1 = *(void **)&v0[qword_1EA2DF1A0];
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_addSubview_, v1);
  id v2 = sub_1C2254178();
  objc_msgSend(v0, sel_addSubview_, v2);

  sub_1C2254760();
}

void sub_1C2254738()
{
}

void sub_1C225474C()
{
}

void sub_1C2254760()
{
  uint64_t v1 = v0;
  id v51 = self;
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255CD70;
  id v3 = *(void **)&v1[qword_1EA2DF1A0];
  id v4 = objc_msgSend(v3, sel_widthAnchor);
  double v5 = *(double *)&v1[qword_1EA2DF1B8];
  id v6 = objc_msgSend(v4, sel_constraintEqualToConstant_, v5);

  *(void *)(v2 + 32) = v6;
  id v7 = objc_msgSend(v3, sel_heightAnchor);
  id v8 = objc_msgSend(v7, sel_constraintEqualToConstant_, v5);

  *(void *)(v2 + 40) = v8;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  id v9 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v51, sel_activateConstraints_, v9);

  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C255E110;
  id v11 = objc_msgSend(v3, sel_leadingAnchor);
  id v12 = objc_msgSend(v1, sel_leadingAnchor);
  id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(void *)(v10 + 32) = v13;
  id v14 = objc_msgSend(v3, sel_trailingAnchor);
  id v15 = sub_1C2254178();
  id v16 = objc_msgSend(v15, sel_leadingAnchor);

  id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v16, -*(double *)&v1[qword_1EA2DF1C0]);
  *(void *)(v10 + 40) = v17;
  id v18 = sub_1C2254178();
  id v19 = objc_msgSend(v18, sel_trailingAnchor);

  id v20 = objc_msgSend(v1, sel_trailingAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(void *)(v10 + 48) = v21;
  id v22 = objc_msgSend(v3, sel_topAnchor);
  id v23 = objc_msgSend(v1, sel_topAnchor);
  id v24 = objc_msgSend(v22, sel_constraintGreaterThanOrEqualToAnchor_, v23);

  *(void *)(v10 + 56) = v24;
  id v25 = sub_1C2254178();
  id v26 = objc_msgSend(v25, sel_topAnchor);

  id v27 = objc_msgSend(v1, sel_topAnchor);
  id v28 = objc_msgSend(v26, sel_constraintGreaterThanOrEqualToAnchor_, v27);

  *(void *)(v10 + 64) = v28;
  id v29 = objc_msgSend(v3, sel_centerYAnchor);
  id v30 = sub_1C2254178();
  id v31 = objc_msgSend(v30, sel_centerYAnchor);

  id v32 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v31);
  LODWORD(v33) = 1148846080;
  objc_msgSend(v32, sel_setPriority_, v33);
  *(void *)(v10 + 72) = v32;
  id v34 = objc_msgSend(v1, sel_bottomAnchor);
  id v35 = objc_msgSend(v3, sel_bottomAnchor);
  id v36 = objc_msgSend(v34, sel_constraintGreaterThanOrEqualToAnchor_, v35);

  *(void *)(v10 + 80) = v36;
  id v37 = objc_msgSend(v1, sel_bottomAnchor);
  id v38 = sub_1C2254178();
  id v39 = objc_msgSend(v38, sel_bottomAnchor);

  id v40 = objc_msgSend(v37, sel_constraintGreaterThanOrEqualToAnchor_, v39);
  *(void *)(v10 + 88) = v40;
  id v41 = sub_1C2254178();
  id v42 = objc_msgSend(v41, sel_topAnchor);

  id v43 = objc_msgSend(v1, sel_topAnchor);
  id v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

  LODWORD(v45) = 1132068864;
  objc_msgSend(v44, sel_setPriority_, v45);
  *(void *)(v10 + 96) = v44;
  id v46 = objc_msgSend(v1, sel_bottomAnchor);
  id v47 = sub_1C2254178();
  id v48 = objc_msgSend(v47, sel_bottomAnchor);

  id v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_, v48);
  LODWORD(v50) = 1132068864;
  objc_msgSend(v49, sel_setPriority_, v50);
  *(void *)(v10 + 104) = v49;
  sub_1C254F730();
  id v52 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v51, sel_activateConstraints_, v52);
}

id AccountView2.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = qword_1EA2DF1A0;
  id v10 = objc_allocWithZone((Class)type metadata accessor for AccountIconView(0));
  id v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_init);
  *(void *)&v11[qword_1EA2DF1C8] = 0;
  uint64_t v12 = qword_1EA2DF1A8;
  *(void *)&v11[v12] = sub_1C225431C();
  uint64_t v13 = qword_1EA2DF1B0;
  *(void *)&v11[v13] = sub_1C22544A0();
  *(void *)&v11[qword_1EA2DF1B8] = 0x4046000000000000;
  *(void *)&v11[qword_1EA2DF1C0] = 0x4020000000000000;
  *(void *)&v11[qword_1EA2DF1D0] = 0x4000000000000000;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for AccountView2(0);
  return objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_1C2254E9C(double a1, double a2, double a3, double a4)
{
  return AccountView2.init(frame:)(a1, a2, a3, a4);
}

id AccountView2.init(coder:)(void *a1)
{
  uint64_t v3 = qword_1EA2DF1A0;
  id v4 = objc_allocWithZone((Class)type metadata accessor for AccountIconView(0));
  double v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  *(void *)&v5[qword_1EA2DF1C8] = 0;
  uint64_t v6 = qword_1EA2DF1A8;
  *(void *)&v5[v6] = sub_1C225431C();
  uint64_t v7 = qword_1EA2DF1B0;
  *(void *)&v5[v7] = sub_1C22544A0();
  *(void *)&v5[qword_1EA2DF1B8] = 0x4046000000000000;
  *(void *)&v5[qword_1EA2DF1C0] = 0x4020000000000000;
  *(void *)&v5[qword_1EA2DF1D0] = 0x4000000000000000;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for AccountView2(0);
  id v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id sub_1C2254FB8(uint64_t a1, uint64_t a2, void *a3)
{
  return AccountView2.init(coder:)(a3);
}

void sub_1C2254FE0()
{
  uint64_t v1 = *(void **)(v0 + qword_1EA2DF1B0);
}

id AccountView2.__deallocating_deinit()
{
  return sub_1C2256504(type metadata accessor for AccountView2);
}

void sub_1C2255058(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + qword_1EA2DF1B0);
}

uint64_t sub_1C22550C4(uint64_t a1)
{
  return sub_1C22565B8(a1, (void (*)(char *))sub_1C22545C4);
}

id sub_1C22550DC(uint64_t a1)
{
  return sub_1C22550F8(a1, (uint64_t)&qword_1EBB6DE30, &qword_1EBB6DE38, &qword_1EBB6DE40);
}

id sub_1C22550F8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v38 = a3;
  id v39 = a4;
  uint64_t v6 = type metadata accessor for AccountViewData(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22545E0(0, &qword_1EA2DF190, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  id v16 = (char *)&v38 - v15;
  MEMORY[0x1F4188790](v14);
  id v18 = (char *)&v38 - v17;
  sub_1C22545E0(0, (unint64_t *)&qword_1EA2DF198, (void (*)(uint64_t))type metadata accessor for AccountIconViewData);
  MEMORY[0x1F4188790](v19 - 8);
  id v21 = (char *)&v38 - v20;
  uint64_t v40 = a1;
  id v41 = v4;
  sub_1C2254634(a1, (uint64_t)v18);
  id v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v22(v18, 1, v6) == 1)
  {
    uint64_t v23 = type metadata accessor for AccountIconViewData(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v21, 1, 1, v23);
  }
  else
  {
    sub_1C2256774((uint64_t)v18, (uint64_t)v9);
    uint64_t v24 = sub_1C254CB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v21, v9, v24);
    id v25 = &v9[*(int *)(v6 + 20)];
    uint64_t v27 = *(void *)v25;
    uint64_t v26 = *((void *)v25 + 1);
    uint64_t v28 = type metadata accessor for AccountIconViewData(0);
    id v29 = &v21[*(int *)(v28 + 20)];
    *(void *)id v29 = v27;
    *((void *)v29 + 1) = v26;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v21, 0, 1, v28);
    swift_bridgeObjectRetain();
    sub_1C2256718((uint64_t)v9);
  }
  sub_1C24C1018((uint64_t)v21);
  sub_1C22566BC((uint64_t)v21, (unint64_t *)&qword_1EA2DF198, (void (*)(uint64_t))type metadata accessor for AccountIconViewData);
  uint64_t v31 = v40;
  id v30 = v41;
  id v32 = *(void **)&v41[*v38];
  sub_1C2254634(v40, (uint64_t)v16);
  if (v22(v16, 1, v6) == 1)
  {
    sub_1C22566BC((uint64_t)v16, &qword_1EA2DF190, (void (*)(uint64_t))type metadata accessor for AccountViewData);
    double v33 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C2256718((uint64_t)v16);
    double v33 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v32, sel_setText_, v33, v38);

  id v34 = *(void **)&v30[*v39];
  sub_1C2254634(v31, (uint64_t)v13);
  if (v22(v13, 1, v6) == 1)
  {
    sub_1C22566BC((uint64_t)v13, &qword_1EA2DF190, (void (*)(uint64_t))type metadata accessor for AccountViewData);
LABEL_11:
    id v36 = 0;
    goto LABEL_12;
  }
  uint64_t v35 = *(void *)&v13[*(int *)(v6 + 24) + 8];
  swift_bridgeObjectRetain();
  sub_1C2256718((uint64_t)v13);
  if (!v35) {
    goto LABEL_11;
  }
  id v36 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
LABEL_12:
  objc_msgSend(v34, sel_setText_, v36);

  return objc_msgSend(v30, sel_setNeedsLayout);
}

void sub_1C2255590(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C22259B4(0, (unint64_t *)&qword_1EBB6FA60);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C255CDA0;
    *(void *)(v5 + 32) = a1;
    *(void *)(v5 + 40) = a2;
    *(void *)(v5 + 48) = 0x56746E756F636341;
    *(void *)(v5 + 56) = 0xEB00000000776569;
    swift_bridgeObjectRetain_n();
    uint64_t v6 = (void *)sub_1C254F700();
    id v7 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v2, sel_setAccessibilityIdentifier_, v7);
    swift_bridgeObjectRelease();

    uint64_t v8 = *(void **)&v2[qword_1EBB6DE38];
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C255CDA0;
    *(void *)(v9 + 32) = a1;
    *(void *)(v9 + 40) = a2;
    *(void *)(v9 + 48) = 0x656C746954;
    *(void *)(v9 + 56) = 0xE500000000000000;
    swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_1C254F700();
    id v11 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v11);
    swift_bridgeObjectRelease();

    uint64_t v12 = *(void **)&v2[qword_1EBB6DE40];
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1C255CDA0;
    *(void *)(v13 + 32) = a1;
    *(void *)(v13 + 40) = a2;
    *(void *)(v13 + 48) = 0x656C746974627553;
    *(void *)(v13 + 56) = 0xE800000000000000;
    uint64_t v14 = (void *)sub_1C254F700();
    id v15 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v12, sel_setAccessibilityIdentifier_, v15);
    swift_bridgeObjectRelease();
  }
}

id sub_1C22557CC()
{
  objc_msgSend(v0, sel_addSubview_, *(void *)&v0[qword_1EBB6DE30]);
  objc_msgSend(v0, sel_addSubview_, *(void *)&v0[qword_1EBB6DE38]);
  uint64_t v1 = *(void *)&v0[qword_1EBB6DE40];
  return objc_msgSend(v0, sel_addSubview_, v1);
}

void sub_1C2255840()
{
}

void sub_1C2255854(void *a1, void *a2)
{
  id v4 = *(void **)(v2 + *a1);
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB2908], 256);
  objc_msgSend(v4, sel_setFont_, v6);

  id v7 = *(void **)(v2 + *a2);
  id v8 = objc_msgSend(v5, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB2950], 256);
  objc_msgSend(v7, sel_setFont_, v8);
}

void sub_1C2255940()
{
}

void sub_1C2255954(void *a1, void *a2)
{
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_clearColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v6);

  id v7 = *(void **)&v2[*a1];
  id v8 = objc_msgSend(v5, sel_labelColor);
  objc_msgSend(v7, sel_setTextColor_, v8);

  uint64_t v9 = *(void **)&v2[*a2];
  id v10 = objc_msgSend(v5, sel_secondaryLabelColor);
  objc_msgSend(v9, sel_setTextColor_, v10);
}

void sub_1C2255A54(void *a1)
{
  v3.receiver = a1;
  v3.super_class = (Class)type metadata accessor for AccountView(0);
  uint64_t v1 = (char *)v3.receiver;
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  objc_msgSend(v1, sel_bounds, v3.receiver, v3.super_class);
  sub_1C2255BA0(v4, v2);
  objc_msgSend(*(id *)&v1[qword_1EBB6DE30], sel_setFrame_, v4[0], v4[1], v4[2], v4[3]);
  objc_msgSend(*(id *)&v1[qword_1EBB6DE38], sel_setFrame_, v4[4], v4[5], v4[6], v4[7]);
  objc_msgSend(*(id *)&v1[qword_1EBB6DE40], sel_setFrame_, v4[8], v4[9], v4[10], v4[11]);
}

double sub_1C2255B24(void *a1, double a2)
{
  id v3 = a1;
  sub_1C2255BA0(&v5[0].origin.x, a2);
  CGRectGetMaxY(v5[2]);
  CGRectGetMaxY(v5[0]);

  return a2;
}

double sub_1C2255BA0@<D0>(double *a1@<X8>, double a2@<D0>)
{
  id v3 = v2;
  uint64_t v60 = sub_1C2550850();
  uint64_t v6 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  id v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v58 = objc_msgSend(v2, sel_effectiveUserInterfaceLayoutDirection);
  objc_msgSend(v2, sel_directionalLayoutMargins);
  double v10 = v9;
  objc_msgSend(v2, sel_directionalLayoutMargins);
  double v12 = v11;
  objc_msgSend(v2, sel_layoutMargins);
  CGFloat v61 = v13;
  uint64_t v14 = *(void *)&v2[qword_1EBB6DE30];
  uint64_t v15 = qword_1EA2E44C0;
  id v16 = objc_msgSend(*(id *)(v14 + qword_1EA2E44C0), sel_image);
  id v17 = v16;
  if (v16) {

  }
  double v18 = a2 - v10;
  double v19 = *(double *)&v2[qword_1EBB6DE48];
  id v20 = objc_msgSend(*(id *)(v14 + v15), sel_image);
  double v21 = 0.0;
  double v22 = 0.0;
  if (v20)
  {

    double v22 = v19;
  }
  double v59 = v12;
  double v57 = v18;
  double v23 = v18 - v12;
  id v53 = v17;
  if (v17) {
    double v21 = v22 + *(double *)&v2[qword_1EBB6DE58];
  }
  double v24 = v23 - v21;
  id v25 = *(void **)&v2[qword_1EBB6DE38];
  objc_msgSend(v25, sel_sizeThatFits_, v23 - v21, 1.79769313e308);
  uint64_t v26 = *MEMORY[0x1E4FBBEA8];
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v28 = v60;
  v27(v8, v26, v60);
  id v29 = objc_msgSend(v25, sel_traitCollection);
  objc_msgSend(v29, sel_displayScale);
  sub_1C254CDC0();
  objc_msgSend(v29, (SEL)&selRef_compatibleUnit);
  sub_1C254CDC0();
  double v31 = v30;

  id v32 = *(void (**)(char *, uint64_t))(v6 + 8);
  v32(v8, v28);
  double v33 = *(void **)&v3[qword_1EBB6DE40];
  objc_msgSend(v33, sel_sizeThatFits_, v24, 1.79769313e308);
  id v56 = v27;
  v27(v8, v26, v28);
  id v34 = objc_msgSend(v33, sel_traitCollection);
  objc_msgSend(v34, sel_displayScale);
  sub_1C254CDC0();
  objc_msgSend(v34, sel_displayScale);
  sub_1C254CDC0();
  double v36 = v35;

  v32(v8, v28);
  double v54 = *(double *)&v3[qword_1EBB6DE50];
  double v55 = v36;
  double v37 = v36 + v31 + v54;
  CGFloat v38 = v61;
  if (v37 >= v22)
  {
    uint64_t v39 = v60;
    v56(v8, *MEMORY[0x1E4FBBEB0], v60);
    sub_1C254CDE0();
    CGFloat v38 = v40;
    v32(v8, v39);
  }
  id v41 = v58;
  if (v58 != (id)1)
  {
    v62.origin.x = v10;
    v62.origin.y = v38;
    v62.size.width = v22;
    v62.size.height = v22;
    double MaxX = CGRectGetMaxX(v62);
    if (v53) {
      double v43 = *(double *)&v3[qword_1EBB6DE58];
    }
    else {
      double v43 = 0.0;
    }
    double v59 = MaxX + v43;
  }
  if (v22 >= v37)
  {
    uint64_t v44 = v60;
    v56(v8, *MEMORY[0x1E4FBBEB0], v60);
    sub_1C254CDE0();
    CGFloat v61 = v45;
    v32(v8, v44);
  }
  if (v41 == (id)1) {
    double v10 = v57 - v22;
  }
  CGFloat v46 = v59;
  v63.origin.x = v59;
  CGFloat v47 = v61;
  v63.origin.y = v61;
  v63.size.width = v24;
  v63.size.height = v31;
  CGFloat MinX = CGRectGetMinX(v63);
  v64.origin.x = v46;
  v64.origin.y = v47;
  v64.size.width = v24;
  v64.size.height = v31;
  CGFloat MaxY = CGRectGetMaxY(v64);
  double v50 = v54;
  *a1 = v10;
  a1[1] = v38;
  a1[2] = v22;
  a1[3] = v22;
  a1[4] = v46;
  a1[5] = v47;
  a1[6] = v24;
  a1[7] = v31;
  a1[8] = MinX;
  a1[9] = v50 + MaxY;
  double result = v55;
  a1[10] = v24;
  a1[11] = result;
  return result;
}

id _s15HealthRecordsUI12AccountView2C5frameACSo6CGRectV_tcfC_0(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id AccountView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = qword_1EBB6DE30;
  id v10 = objc_allocWithZone((Class)type metadata accessor for AccountIconView(0));
  double v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_init);
  uint64_t v12 = qword_1EBB6DE38;
  id v13 = objc_msgSend(self, sel_labelColor);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v14, sel_setFont_, 0);
  objc_msgSend(v14, sel_setNumberOfLines_, 0);
  objc_msgSend(v14, sel_setTextColor_, v13);

  *(void *)&v11[v12] = v14;
  uint64_t v15 = qword_1EBB6DE40;
  *(void *)&v11[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  *(void *)&v11[qword_1EBB6DE48] = 0x4046000000000000;
  *(void *)&v11[qword_1EBB6DE58] = 0x4020000000000000;
  *(void *)&v11[qword_1EBB6DE50] = 0x4000000000000000;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for AccountView(0);
  return objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_1C2256290(double a1, double a2, double a3, double a4)
{
  return AccountView.init(frame:)(a1, a2, a3, a4);
}

id AccountView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id AccountView.init(coder:)(void *a1)
{
  uint64_t v3 = qword_1EBB6DE30;
  id v4 = objc_allocWithZone((Class)type metadata accessor for AccountIconView(0));
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  uint64_t v6 = qword_1EBB6DE38;
  id v7 = objc_msgSend(self, sel_labelColor);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v8, sel_setFont_, 0);
  objc_msgSend(v8, sel_setNumberOfLines_, 0);
  objc_msgSend(v8, sel_setTextColor_, v7);

  *(void *)&v5[v6] = v8;
  uint64_t v9 = qword_1EBB6DE40;
  *(void *)&v5[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  *(void *)&v5[qword_1EBB6DE48] = 0x4046000000000000;
  *(void *)&v5[qword_1EBB6DE58] = 0x4020000000000000;
  *(void *)&v5[qword_1EBB6DE50] = 0x4000000000000000;

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for AccountView(0);
  id v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, a1);

  return v10;
}

id sub_1C2256474(uint64_t a1, uint64_t a2, void *a3)
{
  return AccountView.init(coder:)(a3);
}

void sub_1C225649C()
{
  uint64_t v1 = *(void **)(v0 + qword_1EBB6DE40);
}

id AccountView.__deallocating_deinit()
{
  return sub_1C2256504(type metadata accessor for AccountView);
}

id sub_1C2256504(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_1C2256544(uint64_t a1)
{
  double v2 = *(void **)(a1 + qword_1EBB6DE40);
}

uint64_t sub_1C22565A0(uint64_t a1)
{
  return sub_1C22565B8(a1, (void (*)(char *))sub_1C22550DC);
}

uint64_t sub_1C22565B8(uint64_t a1, void (*a2)(char *))
{
  sub_1C22545E0(0, &qword_1EA2DF190, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v9 - v5;
  sub_1C2256F88(a1, (uint64_t)&v9 - v5);
  uint64_t v7 = type metadata accessor for AccountViewData(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  a2(v6);
  return sub_1C22566BC((uint64_t)v6, &qword_1EA2DF190, (void (*)(uint64_t))type metadata accessor for AccountViewData);
}

uint64_t sub_1C22566BC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C22545E0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2256718(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AccountViewData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2256774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccountViewData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AccountView2(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2DF1D8);
}

uint64_t type metadata accessor for AccountView(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EBB6DF58);
}

uint64_t *initializeBufferWithCopyOfBuffer for AccountViewData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C254CB40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    id v10 = (uint64_t *)((char *)a1 + v8);
    double v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    id v13 = (uint64_t *)((char *)a1 + v9);
    id v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *id v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for AccountViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  id v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  id v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AccountViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  void *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AccountViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for AccountViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  void *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  id v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *id v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountViewData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2256BB0);
}

uint64_t sub_1C2256BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AccountViewData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2256C88);
}

uint64_t sub_1C2256C88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C254CB40();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C2256D48()
{
  uint64_t result = sub_1C254CB40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C2256DE8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for AccountView2(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountView2);
}

uint64_t dispatch thunk of AccountView2.apply(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of AccountView2.addConstraints()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t sub_1C2256ED0()
{
  return type metadata accessor for AccountView2(0);
}

uint64_t sub_1C2256ED8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for AccountView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountView);
}

uint64_t dispatch thunk of AccountView.apply(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t sub_1C2256F80()
{
  return type metadata accessor for AccountView(0);
}

uint64_t sub_1C2256F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccountViewData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2256FF0()
{
  self;
  unint64_t v1 = (void *)swift_dynamicCastObjCClass();
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  id v2 = objc_msgSend(v1, sel_collectionView);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  objc_super v3 = v2;
  char v4 = *(unsigned char *)(v0 + 48);
  sub_1C22584F8(0, (unint64_t *)&qword_1EA2DEA38, (uint64_t (*)(uint64_t))sub_1C22250F0, MEMORY[0x1E4FBBE00]);
  if (v4)
  {
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C255CDA0;
    sub_1C2257228(v3);
    *(void *)(v5 + 32) = v6;
    *(void *)(v5 + 40) = v7;
    uint64_t v9 = *(void *)(v0 + 32);
    uint64_t v8 = *(void *)(v0 + 40);
    id v10 = objc_allocWithZone(MEMORY[0x1E4F2B0B8]);
    id v11 = v3;
    swift_retain();
    swift_retain();
    id v12 = objc_msgSend(v10, sel_init);
    type metadata accessor for RecentLabsDataSource();
    *(void *)(swift_allocObject() + qword_1EA2E07F8) = v8;
    *(void *)(v5 + 48) = sub_1C2257630(v9, v12, v3, (void (*)(uint64_t))sub_1C2257BE8);
    id v13 = (void *)(v5 + 56);
  }
  else
  {
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C255CD90;
    uint64_t v15 = *(void *)(v0 + 32);
    uint64_t v14 = *(void *)(v0 + 40);
    id v16 = objc_allocWithZone(MEMORY[0x1E4F2B0B8]);
    swift_retain();
    swift_retain();
    id v17 = v3;
    id v18 = objc_msgSend(v16, sel_init);
    type metadata accessor for AlphabeticalLabsDataSource();
    *(void *)(swift_allocObject() + qword_1EA2E0910) = v14;
    *(void *)(v5 + 32) = sub_1C2257630(v15, v18, v3, (void (*)(uint64_t))sub_1C2257860);
    id v13 = (void *)(v5 + 40);
  }
  *id v13 = MEMORY[0x1E4F66470];

  return v5;
}

void sub_1C2257228(void *a1)
{
  id v3 = *(id *)(v1 + 16);
  id v4 = a1;
  sub_1C254FB30();
  type metadata accessor for LabsOnboardingDataSource();
  swift_allocObject();
  uint64_t v5 = sub_1C22EC0F0(v3, v4, (uint64_t)v12);

  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B860]), sel_init);
  id v7 = objc_msgSend(v6, sel_features);

  if (v7)
  {
    unsigned int v8 = objc_msgSend(v7, sel_stanley);

    uint64_t v9 = MEMORY[0x1E4F66470];
    if (v8)
    {
      sub_1C22584F8(0, &qword_1EA2DF1F0, (uint64_t (*)(uint64_t))sub_1C2258038, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
      *(void *)(inited + 32) = 1;
      uint64_t v11 = sub_1C2258610(&qword_1EA2DF200, (void (*)(uint64_t))type metadata accessor for LabsOnboardingDataSource);
      *(void *)(inited + 40) = v5;
      *(void *)(inited + 48) = v11;
      *(void *)(inited + 56) = v9;
      sub_1C22067A4(inited);
      swift_setDeallocating();
      sub_1C2258038();
      swift_retain();
      swift_arrayDestroy();
      sub_1C254DE20();
      swift_allocObject();
      sub_1C254DE10();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C2257434()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LabsCategoryListDataProvider()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for LabsCategoryListDataProvider.DisplayType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C225757CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LabsCategoryListDataProvider.DisplayType()
{
  return &type metadata for LabsCategoryListDataProvider.DisplayType;
}

unint64_t sub_1C22575B8()
{
  unint64_t result = qword_1EA2DF1E8;
  if (!qword_1EA2DF1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF1E8);
  }
  return result;
}

uint64_t sub_1C225760C()
{
  return sub_1C2256FF0();
}

uint64_t sub_1C2257630(uint64_t a1, void *a2, void *a3, void (*a4)(uint64_t))
{
  id v17 = a4;
  uint64_t v5 = v4;
  uint64_t v9 = sub_1C254CB40();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v18[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v5 + qword_1EBB6E7C0) = MEMORY[0x1E4FBC870];
  swift_unknownObjectWeakInit();
  *(void *)(v5 + qword_1EBB6E7D0) = 0;
  *(void *)(v5 + qword_1EBB6E7B8) = a1;
  *(void *)(v5 + qword_1EBB6E7B0) = a2;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v18[0] = 0;
  v18[1] = 0xE000000000000000;
  swift_retain();
  id v13 = a2;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v18, "MutableArray<");
  HIWORD(v18[1]) = -4864;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v14 = sub_1C254D9F0();
  uint64_t v15 = swift_retain();
  v17(v15);
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_1C2257860()
{
  sub_1C22584F8(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (char *)v14 - v2;
  sub_1C22580A8();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = (*(uint64_t (**)(uint64_t))(class metadata base offset for UDCListDataSource + *v0 + 192))(v7);
  sub_1C22023A4();
  id v15 = (id)sub_1C254FC70();
  uint64_t v10 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  sub_1C2258414(0, &qword_1EA2DF210, &qword_1EA2DF218, &qword_1EA2DF220, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
  sub_1C2258190();
  sub_1C2258610((unint64_t *)&qword_1EBB6F4B0, (void (*)(uint64_t))sub_1C22023A4);
  sub_1C254EC70();
  sub_1C2258214((uint64_t)v3);

  swift_release();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C22582D8;
  *(void *)(v12 + 24) = v11;
  sub_1C2258610(&qword_1EA2DF230, (void (*)(uint64_t))sub_1C22580A8);
  sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_beginAccess();
  sub_1C254E9F0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C2257BE8()
{
  sub_1C22584F8(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  int v3 = (char *)v14 - v2;
  sub_1C225832C();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = (*(uint64_t (**)(uint64_t))(class metadata base offset for UDCListDataSource + *v0 + 192))(v7);
  sub_1C22023A4();
  id v15 = (id)sub_1C254FC70();
  uint64_t v10 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  sub_1C2258414(0, &qword_1EA2DF240, &qword_1EA2DF248, &qword_1EA2DF250, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem);
  sub_1C225855C();
  sub_1C2258610((unint64_t *)&qword_1EBB6F4B0, (void (*)(uint64_t))sub_1C22023A4);
  sub_1C254EC70();
  sub_1C2258214((uint64_t)v3);

  swift_release();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C22582D8;
  *(void *)(v12 + 24) = v11;
  sub_1C2258610(&qword_1EA2DF260, (void (*)(uint64_t))sub_1C225832C);
  sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_beginAccess();
  sub_1C254E9F0();
  swift_endAccess();
  return swift_release();
}

void *sub_1C2257F70(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  unint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t))(class metadata base offset for UDCListDataSource + *result + 200))(a1, a2);
    sub_1C254DA10();
    swift_bridgeObjectRelease();
    sub_1C254DA20();
    return (void *)swift_release();
  }
  return result;
}

void sub_1C2258038()
{
  if (!qword_1EA2DF1F8)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    sub_1C2206E04();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DF1F8);
    }
  }
}

void sub_1C22580A8()
{
  if (!qword_1EA2DF208)
  {
    sub_1C2258414(255, &qword_1EA2DF210, &qword_1EA2DF218, &qword_1EA2DF220, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
    sub_1C22023A4();
    sub_1C2258190();
    sub_1C2258610((unint64_t *)&qword_1EBB6F4B0, (void (*)(uint64_t))sub_1C22023A4);
    unint64_t v0 = sub_1C254E9B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF208);
    }
  }
}

unint64_t sub_1C2258190()
{
  unint64_t result = qword_1EA2DF228;
  if (!qword_1EA2DF228)
  {
    sub_1C2258414(255, &qword_1EA2DF210, &qword_1EA2DF218, &qword_1EA2DF220, (uint64_t (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF228);
  }
  return result;
}

uint64_t sub_1C2258214(uint64_t a1)
{
  sub_1C22584F8(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C22582A0()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void *sub_1C22582D8(uint64_t a1, uint64_t a2)
{
  return sub_1C2257F70(a1, a2);
}

uint64_t sub_1C22582F4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C225832C()
{
  if (!qword_1EA2DF238)
  {
    sub_1C2258414(255, &qword_1EA2DF240, &qword_1EA2DF248, &qword_1EA2DF250, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem);
    sub_1C22023A4();
    sub_1C225855C();
    sub_1C2258610((unint64_t *)&qword_1EBB6F4B0, (void (*)(uint64_t))sub_1C22023A4);
    unint64_t v0 = sub_1C254E9B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF238);
    }
  }
}

void sub_1C2258414(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  if (!*a2)
  {
    sub_1C2258480(255, a3, a4, a5);
    unint64_t v6 = sub_1C254E9E0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C2258480(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C22584F8(255, a3, a4, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C22584F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C225855C()
{
  unint64_t result = qword_1EA2DF258;
  if (!qword_1EA2DF258)
  {
    sub_1C2258414(255, &qword_1EA2DF240, &qword_1EA2DF248, &qword_1EA2DF250, (uint64_t (*)(uint64_t))type metadata accessor for UDCRecentItem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF258);
  }
  return result;
}

uint64_t sub_1C22585E0(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1C2258610(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id ClinicalSourcesDataProvider.__allocating_init(healthRecordsStore:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithHealthRecordsStore_, a1);

  return v3;
}

id ClinicalSourcesDataProvider.init(healthRecordsStore:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ClinicalSourcesDataProvider();
  id v3 = objc_msgSendSuper2(&v5, sel_initWithHealthRecordsStore_, a1);

  return v3;
}

uint64_t type metadata accessor for ClinicalSourcesDataProvider()
{
  return self;
}

id ClinicalSourcesDataProvider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSourcesDataProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2258798()
{
  return sub_1C254F4F0();
}

void sub_1C2258898()
{
  id v1 = objc_msgSend(v0, sel_textLabel);
  if (v1)
  {
    objc_super v2 = v1;
    id v3 = (void *)sub_1C254F430();
    objc_msgSend(v2, sel_setText_, v3);
  }
  id v4 = objc_msgSend(v0, sel_detailTextLabel);
  if (v4)
  {
    objc_super v5 = v4;
    uint64_t v6 = (void *)sub_1C254F430();
    objc_msgSend(v5, sel_setText_, v6);
  }
  id v7 = objc_msgSend(v0, sel_detailTextLabel);
  if (v7)
  {
    unint64_t v8 = v7;
    id v9 = objc_msgSend(self, sel_secondaryLabelColor);
    objc_msgSend(v8, sel_setTextColor_, v9);
  }
}

id sub_1C22589E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalStateViewController.Cell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C2258A14(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_sections] = MEMORY[0x1E4FBC860];
  uint64_t v3 = qword_1EBB6EF30;
  id v4 = v1;
  objc_super v5 = v4;
  if (v3 != -1) {
    id v4 = (char *)swift_once();
  }
  uint64_t v17 = *(void *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v4);
  sub_1C254CEE0();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
  sub_1C225A3F0((unint64_t *)&qword_1EBB6F240, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();
  swift_release();
  uint64_t v6 = v18;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_profile] = v18;
  id v7 = (objc_class *)type metadata accessor for InternalStateProvider();
  id v8 = objc_allocWithZone(v7);
  id v9 = v6;
  id v10 = objc_msgSend(v9, sel_conceptStore);
  id v11 = objc_msgSend(v9, sel_healthRecordsStore);
  id v12 = objc_allocWithZone(v7);
  id v13 = sub_1C2378DF8(v10, v11);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_dataProvider] = v13;

  v16.receiver = v5;
  v16.super_class = (Class)type metadata accessor for InternalStateViewController();
  id v14 = objc_msgSendSuper2(&v16, sel_initWithCoder_, a1);

  return v14;
}

id sub_1C2258C80()
{
  id v1 = v0;
  id v2 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_dataProvider];
  sub_1C237E200(0, 0);

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for InternalStateViewController();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_1C2258DA8()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for InternalStateViewController();
  objc_msgSendSuper2(&v7, sel_viewDidLoad);
  id v1 = (void *)sub_1C254F430();
  objc_msgSend(v0, sel_setTitle_, v1);

  id v2 = objc_msgSend(v0, sel_tableView);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = type metadata accessor for InternalStateViewController.Cell();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v8 = v4;
    swift_getMetatypeMetadata();
    sub_1C254F4F0();
    uint64_t v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v6);
  }
  else
  {
    __break(1u);
  }
}

id sub_1C2258EF4(char a1)
{
  sub_1C225A438(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  objc_super v5 = (char *)&v18 - v4;
  uint64_t v6 = (objc_class *)type metadata accessor for InternalStateViewController();
  v18.receiver = v1;
  v18.super_class = v6;
  objc_msgSendSuper2(&v18, sel_viewWillAppear_, a1 & 1);
  objc_super v7 = self;
  id result = objc_msgSend(v7, sel_isMainThread);
  if (result)
  {
    id v9 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_dataProvider];
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v1;
    id v11 = v9;
    id v12 = v1;
    sub_1C237E200((uint64_t)sub_1C225A320, v10);
    swift_release();

    id result = objc_msgSend(v7, sel_isMainThread);
    if (result)
    {
      uint64_t v13 = sub_1C254F840();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
      sub_1C254F820();
      id v14 = v12;
      uint64_t v15 = sub_1C254F810();
      objc_super v16 = (void *)swift_allocObject();
      uint64_t v17 = MEMORY[0x1E4FBCFD8];
      void v16[2] = v15;
      void v16[3] = v17;
      void v16[4] = v14;
      sub_1C24D0A0C((uint64_t)v5, (uint64_t)&unk_1EA2DF290, (uint64_t)v16);
      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2259154(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1C254F1C0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254F200();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v11 = (void *)sub_1C254FC70();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  aBlock[4] = sub_1C225A49C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_30;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = a2;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C225A3F0((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C225A438(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v10, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_1C225943C(void *a1)
{
  sub_1C225A438(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - v3;
  id result = objc_msgSend(self, sel_isMainThread);
  if (result)
  {
    uint64_t v6 = sub_1C254F840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
    sub_1C254F820();
    id v7 = a1;
    uint64_t v8 = sub_1C254F810();
    uint64_t v9 = (void *)swift_allocObject();
    uint64_t v10 = MEMORY[0x1E4FBCFD8];
    void v9[2] = v8;
    v9[3] = v10;
    _OWORD v9[4] = v7;
    sub_1C24D0A0C((uint64_t)v4, (uint64_t)&unk_1EA2DF298, (uint64_t)v9);
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C22595A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a4;
  uint64_t v5 = sub_1C254F1C0();
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  double v4[12] = swift_task_alloc();
  uint64_t v6 = sub_1C254F200();
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  sub_1C254F820();
  v4[16] = sub_1C254F810();
  uint64_t v8 = sub_1C254F7D0();
  v4[17] = v8;
  v4[18] = v7;
  return MEMORY[0x1F4188298](sub_1C22596F0, v8, v7);
}

uint64_t sub_1C22596F0()
{
  id v1 = *(void **)(v0[9] + OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_dataProvider);
  v0[19] = v1;
  v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[20] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C22597A0;
  return sub_1C237BA30();
}

uint64_t sub_1C22597A0(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 152);
  *(void *)(*v1 + 168) = a1;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 144);
  uint64_t v5 = *(void *)(v2 + 136);
  return MEMORY[0x1F4188298](sub_1C22598E8, v5, v4);
}

uint64_t sub_1C22598E8()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v13 = v0[14];
  uint64_t v14 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v6 = (char *)v0[9];
  swift_release();
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_sections] = v1;
  swift_bridgeObjectRelease();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v7 = (void *)sub_1C254FC70();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  v0[6] = sub_1C225A3E0;
  v0[7] = v8;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1C224E544;
  v0[5] = &block_descriptor_19;
  uint64_t v9 = _Block_copy(v0 + 2);
  uint64_t v10 = v6;
  sub_1C254F1E0();
  v0[8] = MEMORY[0x1E4FBC860];
  sub_1C225A3F0((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C225A438(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v2, v3, v9);
  _Block_release(v9);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v14);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t type metadata accessor for InternalStateViewController()
{
  return self;
}

uint64_t type metadata accessor for InternalStateViewController.Cell()
{
  return self;
}

void sub_1C2259D98(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v15 = type metadata accessor for InternalStateViewController.Cell();
  swift_getMetatypeMetadata();
  sub_1C254F4F0();
  uint64_t v4 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_1C254CD30();
  id v6 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v4, v5, v15);

  if (swift_dynamicCastClass())
  {
    unint64_t v7 = sub_1C254CD80();
    unint64_t v8 = v7;
    uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_sections);
    if ((v9 & 0xC000000000000001) == 0)
    {
      if ((v7 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v7 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v10 = *(void *)(v9 + 8 * v7 + 32);
        swift_retain();
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_16;
    }
    swift_bridgeObjectRetain();
    uint64_t v10 = MEMORY[0x1C87588E0](v8, v9);
    swift_bridgeObjectRelease();
LABEL_6:
    unint64_t v11 = sub_1C254CD60();
    uint64_t v12 = *(void *)(v10 + 32);
    if ((v12 & 0xC000000000000001) == 0)
    {
      if ((v11 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v11 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        swift_retain();
LABEL_10:
        swift_release();
        sub_1C2258898();
        swift_release();
        return;
      }
      __break(1u);
      goto LABEL_19;
    }
LABEL_16:
    MEMORY[0x1C87588E0]();
    goto LABEL_10;
  }

  sub_1C25503A0();
  swift_bridgeObjectRelease();
  sub_1C254CD90();
  sub_1C225A3F0(&qword_1EA2DF280, MEMORY[0x1E4F27DE8]);
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v14 = (id)HKErrorTableViewCell();

  if (!v14) {
LABEL_19:
  }
    __break(1u);
}

uint64_t sub_1C225A2E8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C225A320(uint64_t a1)
{
  return sub_1C2259154(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C225A32C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_1C2223E3C;
  return sub_1C22595A0(a1, v4, v5, v6);
}

void sub_1C225A3E0()
{
  sub_1C220BA74(*(void **)(v0 + 16));
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_1C225A3F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C225A438(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_1C225A49C()
{
  return sub_1C225943C(*(void **)(v0 + 16));
}

uint64_t objectdestroy_18Tm()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C225A4E8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_1C222399C;
  return sub_1C22595A0(a1, v4, v5, v6);
}

void sub_1C225A59C(void *a1@<X8>)
{
}

id sub_1C225A5A4(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_sections] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_profile] = a1;
  uint64_t v3 = (objc_class *)type metadata accessor for InternalStateProvider();
  id v4 = objc_allocWithZone(v3);
  uint64_t v5 = v1;
  id v6 = a1;
  id v7 = objc_msgSend(v6, sel_conceptStore);
  id v8 = objc_msgSend(v6, sel_healthRecordsStore);
  id v9 = objc_allocWithZone(v3);
  id v10 = sub_1C2378DF8(v7, v8);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI27InternalStateViewController_dataProvider] = v10;

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for InternalStateViewController();
  return objc_msgSendSuper2(&v12, sel_initWithStyle_, 2);
}

id sub_1C225A6CC()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___store;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___store);
  if (!v2)
  {
    uint64_t v4 = v0;
    uint64_t v5 = v0 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
    swift_beginAccess();
    sub_1C225EB54(v5, (uint64_t)v12, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
    if (v13)
    {
      sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
      sub_1C21FFE74(0, &qword_1EA2DF318);
      if (swift_dynamicCast())
      {
        uint64_t v6 = *((void *)&v15 + 1);
        if (*((void *)&v15 + 1))
        {
          uint64_t v7 = v16;
          __swift_project_boxed_opaque_existential_1Tm(&v14, *((uint64_t *)&v15 + 1));
          id v8 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v6, v7);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
LABEL_10:
          id v9 = *(void **)(v4 + v1);
          *(void *)(v4 + v1) = v8;
          id v3 = v8;

          uint64_t v2 = 0;
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v16 = 0;
        long long v14 = 0u;
        long long v15 = 0u;
      }
    }
    else
    {
      sub_1C225F904((uint64_t)v12, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
      long long v14 = 0u;
      long long v15 = 0u;
      uint64_t v16 = 0;
    }
    sub_1C225F904((uint64_t)&v14, (uint64_t)&unk_1EA2DF310, (uint64_t)&qword_1EA2DF318, (uint64_t)&protocol descriptor for UDCItem, (uint64_t (*)(void))sub_1C225EBC8);
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
    goto LABEL_10;
  }
  id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___store);
LABEL_11:
  id v10 = v2;
  return v3;
}

id sub_1C225A8D4()
{
  uint64_t v1 = v0;
  sub_1C225EB00(0, &qword_1EA2DF2E8, MEMORY[0x1E4FB1290]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v21 - v3;
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___button;
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___button];
  if (v6)
  {
    id v7 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___button];
  }
  else
  {
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14D0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    sub_1C21AB51C(0, &qword_1EA2DF300);
    *(void *)(swift_allocObject() + 16) = v0;
    v0;
    id v9 = (void *)sub_1C254FFB0();
    objc_msgSend(v8, sel_addAction_forControlEvents_, v9, 64);

    sub_1C225AC14();
    static UIButton.Configuration.pinnedLabsConfiguration(pinned:)();
    uint64_t v10 = sub_1C25500A0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 0, 1, v10);
    sub_1C25500C0();
    objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    LODWORD(v11) = 1148846080;
    objc_msgSend(v8, sel_setContentHuggingPriority_forAxis_, 0, v11);
    objc_msgSend(v8, sel_setAlpha_, 0.0);
    sub_1C225F830(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C255CDA0;
    *(void *)(v12 + 32) = 0xD000000000000013;
    *(void *)(v12 + 40) = 0x80000001C2573EA0;
    id v7 = v8;
    char v13 = sub_1C225AC14();
    uint64_t v14 = 0x6F747475426E6950;
    if (v13) {
      uint64_t v14 = 0x7475426E69706E55;
    }
    unint64_t v15 = 0xE90000000000006ELL;
    if (v13) {
      unint64_t v15 = 0xEB000000006E6F74;
    }
    *(void *)(v12 + 48) = v14;
    *(void *)(v12 + 56) = v15;
    uint64_t v16 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v17 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v17);
    objc_super v18 = *(void **)&v1[v5];
    *(void *)&v1[v5] = v7;

    uint64_t v6 = 0;
  }
  id v19 = v6;
  return v7;
}

uint64_t sub_1C225AC14()
{
  uint64_t v1 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (id *)((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = v0 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
  swift_beginAccess();
  sub_1C225EB54(v4, (uint64_t)v14, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (!v14[3])
  {
    sub_1C225F904((uint64_t)v14, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
    goto LABEL_7;
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for UDCAlphabeticalItem();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    char v10 = 0;
    return v10 & 1;
  }
  sub_1C225F054(v13 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, (uint64_t)v3);
  swift_release();
  id v5 = v3[1];
  sub_1C225F87C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
  if (qword_1EBB6EF30 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EBB6FB90;
  id v7 = sub_1C225A6CC();
  id v8 = objc_msgSend(v7, sel_profileIdentifier);

  uint64_t v13 = *(void *)(v6 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v9);
  *(&v12 - 2) = v6;
  *(&v12 - 1) = (uint64_t)v8;
  sub_1C254CEE0();
  sub_1C254E460();
  sub_1C21A89AC();
  swift_retain();
  sub_1C254E1D0();

  swift_release();
  char v10 = sub_1C254E430();

  swift_release();
  return v10 & 1;
}

char *sub_1C225AEE0(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___store] = 0;
  uint64_t v9 = OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_titleView;
  id v10 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemBrowseTitleView());
  double v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___button] = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_activeConstraints] = MEMORY[0x1E4FBC860];
  v11[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_editMode] = 0;
  uint64_t v12 = &v11[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item];
  *((void *)v12 + 4) = 0;
  *(_OWORD *)uint64_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  uint64_t v13 = &v11[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_sectionContext];
  uint64_t v14 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);

  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for AlphabeticalUDCCell();
  unint64_t v15 = (char *)objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  id v16 = objc_msgSend(v15, sel_contentView);
  objc_msgSend(v16, sel_addSubview_, *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_titleView]);

  id v17 = objc_msgSend(v15, sel_contentView);
  id v18 = sub_1C225A8D4();
  objc_msgSend(v17, sel_addSubview_, v18);

  sub_1C225C1B4();
  sub_1C225B404();
  objc_msgSend(v15, sel_setTintAdjustmentMode_, 1);

  return v15;
}

id sub_1C225B0F8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___store] = 0;
  uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_titleView;
  id v4 = objc_allocWithZone((Class)type metadata accessor for ConceptFeedItemBrowseTitleView());
  id v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell____lazy_storage___button] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_activeConstraints] = MEMORY[0x1E4FBC860];
  v5[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_editMode] = 0;
  uint64_t v6 = &v5[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item];
  *((void *)v6 + 4) = 0;
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  id v7 = &v5[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_sectionContext];
  uint64_t v8 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for AlphabeticalUDCCell();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

id sub_1C225B268()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for AlphabeticalUDCCell();
  objc_msgSendSuper2(&v5, sel_awakeFromNib);
  id v1 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v1, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_titleView]);

  id v2 = objc_msgSend(v0, sel_contentView);
  id v3 = sub_1C225A8D4();
  objc_msgSend(v2, sel_addSubview_, v3);

  sub_1C225C1B4();
  sub_1C225B404();
  return objc_msgSend(v0, sel_setTintAdjustmentMode_, 1);
}

void sub_1C225B384(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C875A200](v1);
  if (v2)
  {
    id v3 = (void *)v2;
    sub_1C225B404();
    id v4 = objc_msgSend(v3, sel_contentView);
    objc_msgSend(v4, sel_layoutIfNeeded);
  }
}

void sub_1C225B404()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_editMode);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_titleView);
  id v3 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesChevron);
  if (v1 == 1)
  {
    swift_beginAccess();
    unsigned __int8 *v3 = 1;
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView), sel_setHidden_, 1);
    id v4 = sub_1C232AFC8();
    objc_msgSend(v4, sel_setActive_, (*v3 & 1) == 0);

    id v5 = sub_1C232B0D4();
    objc_msgSend(v5, sel_setActive_, *v3);

    id v6 = sub_1C225A8D4();
    objc_msgSend(v6, sel_setAlpha_, 1.0);
  }
  else
  {
    swift_beginAccess();
    unsigned __int8 *v3 = 0;
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView), sel_setHidden_, 0);
    id v7 = sub_1C232AFC8();
    objc_msgSend(v7, sel_setActive_, (*v3 & 1) == 0);

    id v8 = sub_1C232B0D4();
    objc_msgSend(v8, sel_setActive_, *v3);

    id v6 = sub_1C225A8D4();
    objc_msgSend(v6, sel_setAlpha_, 0.0);
  }

  sub_1C225C1B4();
}

uint64_t sub_1C225B580()
{
  int v1 = v0;
  uint64_t v55 = sub_1C254E560();
  uint64_t v2 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  id v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C225EB00(0, &qword_1EA2DF2E8, MEMORY[0x1E4FB1290]);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v50 - v6;
  uint64_t v8 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)&v1[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item];
  swift_beginAccess();
  sub_1C225EB54(v11, (uint64_t)v57, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (!v58)
  {
    sub_1C225F904((uint64_t)v57, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
LABEL_8:
    sub_1C254E510();
    double v22 = v1;
    double v23 = sub_1C254E550();
    os_log_type_t v24 = sub_1C254FA20();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v54 = v2;
      uint64_t v26 = (uint8_t *)v25;
      id v53 = (unsigned char *)swift_slowAlloc();
      v56[0] = v53;
      *(_DWORD *)uint64_t v26 = 136446210;
      uint64_t v52 = v26 + 4;
      sub_1C225EB54(v11, (uint64_t)v57, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
      sub_1C225EBC8(0, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
      uint64_t v27 = sub_1C254F510();
      v57[0] = sub_1C21AD354(v27, v28, (uint64_t *)v56);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v23, v24, "Incorrect view model for AlphabeticalUDCCell: %{public}s", v26, 0xCu);
      id v29 = v53;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v29, -1, -1);
      MEMORY[0x1C875A0B0](v26, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v4, v55);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v55);
    }
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for UDCAlphabeticalItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v55 = (uint64_t)v7;
  uint64_t v54 = (uint64_t)v56[0];
  uint64_t v12 = (char *)v56[0] + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData;
  unsigned char *v10 = *((unsigned char *)v56[0] + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
  swift_storeEnumTagMultiPayload();
  if (qword_1EBB6EF30 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1EBB6FB90;
  id v14 = sub_1C225A6CC();
  v56[0] = *(id *)(v13 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v14);
  sub_1C254CEE0();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
  sub_1C21A89AC();
  swift_retain();
  sub_1C254E1D0();

  swift_release();
  unint64_t v15 = (void *)v57[0];
  uint64_t v16 = type metadata accessor for UserDomainConceptViewData();
  uint64_t v17 = (uint64_t)&v12[*(int *)(v16 + 36)];
  id v18 = v15;
  uint64_t v19 = sub_1C225EDDC(v17, v18);
  uint64_t v21 = v20;
  id v53 = v18;

  if (v21)
  {
    uint64_t v51 = v19;
  }
  else
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v31 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1C254C730();
    uint64_t v21 = v32;
    swift_bridgeObjectRelease();
  }
  uint64_t v52 = *(uint8_t **)&v1[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_titleView];
  uint64_t v33 = *((void *)v12 + 4);
  uint64_t v50 = *((void *)v12 + 3);
  swift_bridgeObjectRetain();
  sub_1C2517664();
  if (v34)
  {
    uint64_t v35 = v16;
    if (qword_1EBB6EFC0 != -1) {
      swift_once();
    }
    id v36 = (id)qword_1EBB70018;
    double v37 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v38 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v37, v36, 0);

    uint64_t v16 = v35;
  }
  else
  {
    id v38 = 0;
  }
  id v39 = BrowseCategory.tintColorForTemplateImage.getter();
  double v40 = &v12[*(int *)(v16 + 44)];
  uint64_t v41 = *(void *)v40;
  uint64_t v42 = *((void *)v40 + 1);
  char v43 = v1[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_editMode];
  swift_bridgeObjectRetain();
  char v44 = sub_1C225AC14();
  id v58 = &type metadata for UserDomainConceptFeedItemViewData;
  double v59 = &protocol witness table for UserDomainConceptFeedItemViewData;
  uint64_t v45 = swift_allocObject();
  v57[0] = v45;
  *(void *)(v45 + 16) = v50;
  *(void *)(v45 + 24) = v33;
  *(void *)(v45 + 32) = v51;
  *(void *)(v45 + 40) = v21;
  *(void *)(v45 + 48) = v38;
  *(void *)(v45 + 56) = v39;
  *(void *)(v45 + 64) = 0;
  *(void *)(v45 + 72) = v41;
  *(void *)(v45 + 80) = v42;
  *(void *)(v45 + 88) = 0;
  *(void *)(v45 + 96) = 0;
  *(void *)(v45 + 104) = 0;
  *(unsigned char *)(v45 + 112) = 1;
  *(unsigned char *)(v45 + 113) = v43;
  *(unsigned char *)(v45 + 114) = v44 & 1;
  *(_WORD *)(v45 + 115) = 256;
  uint64_t v46 = (uint64_t)&v52[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData];
  swift_beginAccess();
  sub_1C225F0B8((uint64_t)v57, v46, (unint64_t *)&qword_1EA2DEE88, &qword_1EA2DEE90);
  swift_endAccess();
  sub_1C232BB1C();
  sub_1C225F904((uint64_t)v57, (uint64_t)&qword_1EA2DEE88, (uint64_t)&qword_1EA2DEE90, (uint64_t)&protocol descriptor for ConceptTitleViewContentProviding, (uint64_t (*)(void))sub_1C225EBC8);
  id v47 = sub_1C225A8D4();
  sub_1C225AC14();
  uint64_t v48 = v55;
  static UIButton.Configuration.pinnedLabsConfiguration(pinned:)();
  uint64_t v49 = sub_1C25500A0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
  sub_1C25500C0();
  swift_release();

  return sub_1C225F87C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
}

uint64_t sub_1C225BE30()
{
  int v1 = v0;
  uint64_t v22 = sub_1C254CD90();
  uint64_t v2 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  id v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void (*)(uint64_t))MEMORY[0x1E4F66300];
  sub_1C225EB00(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = sub_1C254D370();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_sectionContext;
  swift_beginAccess();
  sub_1C225F128(v13, (uint64_t)v8, &qword_1EA2DF2E0, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_1C225F194((uint64_t)v8);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  sub_1C254D360();
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_1C25503A0();
  uint64_t v15 = sub_1C254F470();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  uint64_t v24 = v15;
  unint64_t v25 = v17;
  sub_1C254F5A0();
  uint64_t v23 = sub_1C254CD80();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v23 = sub_1C254CD70();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v19 = v24;
  uint64_t v18 = v25;
  uint64_t v20 = (void *)sub_1C254F430();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v20);

  sub_1C232B7AC(v19, v18);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1C225C1B4()
{
  int v1 = v0;
  uint64_t v2 = self;
  uint64_t v3 = (uint64_t *)&v0[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_activeConstraints];
  swift_beginAccess();
  uint64_t v4 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  uint64_t v53 = v4;
  uint64_t v5 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v5);

  sub_1C225F830(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255EBD0;
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_titleView];
  id v8 = objc_msgSend(v7, sel_leadingAnchor);
  id v9 = objc_msgSend(v1, sel_contentView);
  id v10 = objc_msgSend(v9, sel_leadingAnchor);

  id v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v10);
  *(void *)(v6 + 32) = v11;
  id v12 = objc_msgSend(v7, sel_trailingAnchor);
  id v13 = sub_1C225A8D4();
  id v14 = objc_msgSend(v13, sel_leadingAnchor);

  id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, -7.0);
  *(void *)(v6 + 40) = v15;
  id v16 = objc_msgSend(v7, sel_topAnchor);
  id v17 = objc_msgSend(v1, sel_contentView);
  id v18 = objc_msgSend(v17, sel_topAnchor);

  id v19 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v18);
  *(void *)(v6 + 48) = v19;
  id v20 = objc_msgSend(v7, sel_bottomAnchor);
  id v21 = objc_msgSend(v1, sel_contentView);
  id v22 = objc_msgSend(v21, sel_bottomAnchor);

  id v23 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v22);
  *(void *)(v6 + 56) = v23;
  id v24 = sub_1C225A8D4();
  id v25 = objc_msgSend(v24, sel_centerYAnchor);

  id v26 = objc_msgSend(v1, sel_contentView);
  id v27 = objc_msgSend(v26, sel_centerYAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v27);
  *(void *)(v6 + 64) = v28;
  id v29 = sub_1C225A8D4();
  id v30 = objc_msgSend(v29, sel_heightAnchor);

  id v31 = sub_1C225A8D4();
  id v32 = objc_msgSend(v31, sel_widthAnchor);

  id v33 = objc_msgSend(v30, sel_constraintEqualToAnchor_multiplier_, v32, 1.0);
  *(void *)(v6 + 72) = v33;
  id v34 = sub_1C225A8D4();
  id v35 = objc_msgSend(v34, sel_widthAnchor);

  id v36 = objc_msgSend(v1, sel_traitCollection);
  id v37 = objc_msgSend(v36, sel_preferredContentSizeCategory);
  LOBYTE(vsub_1C21FCB18(3, 18) = sub_1C254FD50();

  double v38 = 32.0;
  if (v18) {
    double v38 = 64.0;
  }
  id v39 = objc_msgSend(v35, sel_constraintEqualToConstant_, v38, v53);

  *(void *)(v6 + 80) = v39;
  sub_1C254F730();
  uint64_t *v3 = v6;
  swift_bridgeObjectRelease();
  int v40 = v1[OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_editMode];
  id v41 = sub_1C225A8D4();
  id v42 = objc_msgSend(v41, sel_trailingAnchor);

  id v43 = objc_msgSend(v1, sel_contentView);
  id v44 = objc_msgSend(v43, sel_trailingAnchor);

  if (v40 == 1)
  {
    id v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v44, -16.0);
  }
  else
  {
    id v46 = objc_msgSend(v1, sel_traitCollection);
    id v47 = objc_msgSend(v46, sel_preferredContentSizeCategory);
    char v48 = sub_1C254FD50();

    double v49 = 56.0;
    if ((v48 & 1) == 0) {
      double v49 = 24.0;
    }
    id v45 = objc_msgSend(v42, sel_constraintEqualToAnchor_constant_, v44, v49);
  }
  id v50 = v45;

  swift_beginAccess();
  id v51 = v50;
  MEMORY[0x1C8757C00]();
  if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  swift_endAccess();

  swift_bridgeObjectRetain();
  uint64_t v52 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v52);
}

uint64_t sub_1C225C824(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (id *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = v2 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
  swift_beginAccess();
  sub_1C225EB54(v8, (uint64_t)v26, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (!v27) {
    return sub_1C225F904((uint64_t)v26, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for UDCAlphabeticalItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    sub_1C225F054(v25 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, (uint64_t)v7);
    swift_release();
    id v10 = v7[1];
    sub_1C225F87C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
    if (qword_1EBB6EF30 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_1EBB6FB90;
    id v12 = sub_1C225A6CC();
    uint64_t v25 = *(void *)(v11 + OBJC_IVAR___HRProfileManager_lock);
    *(&v24 - 2) = MEMORY[0x1F4188790](v12);
    *(&v24 - 1) = v11;
    sub_1C254CEE0();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
    sub_1C21A89AC();
    swift_retain();
    sub_1C254E1D0();

    swift_release();
    id v13 = (void *)v26[0];
    if (qword_1EBB6D858 != -1) {
      swift_once();
    }
    id v14 = objc_allocWithZone((Class)type metadata accessor for UserDomainConceptDetailViewController());
    id v15 = v10;
    id v16 = v13;
    id v17 = sub_1C23D294C(v15, v16);

    sub_1C225EB54(a1, (uint64_t)v26, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225F830);
    uint64_t v18 = v27;
    if (v27)
    {
      id v19 = __swift_project_boxed_opaque_existential_1Tm(v26, v27);
      uint64_t v20 = *(void *)(v18 - 8);
      MEMORY[0x1F4188790](v19);
      id v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v20 + 16))(v22);
      uint64_t v23 = sub_1C2550860();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v18);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
    }
    else
    {
      uint64_t v23 = 0;
    }
    objc_msgSend(a2, sel_showViewController_sender_, v17, v23);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1C225CD54(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254E4C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OnboardingViewIdentifier();
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (id *)((char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = v2 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
  swift_beginAccess();
  sub_1C225EB54(v14, (uint64_t)&v52, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (!v54) {
    return sub_1C225F904((uint64_t)&v52, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
  }
  uint64_t v15 = sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for UDCAlphabeticalItem();
  uint64_t v50 = v15;
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v46 = v8;
  id v47 = v10;
  char v48 = v7;
  uint64_t v43 = v5;
  uint64_t v44 = v4;
  uint64_t v45 = a1;
  sub_1C225F054(v51 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, (uint64_t)v13);
  swift_release();
  id v49 = v13[1];
  sub_1C225F87C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
  if (qword_1EBB6EF30 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1EBB6FB90;
  id v18 = sub_1C225A6CC();
  id v19 = objc_msgSend(v18, sel_profileIdentifier);

  uint64_t v51 = *(void *)(v17 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v20);
  *(&v43 - 2) = v17;
  *(&v43 - 1) = (uint64_t)v19;
  sub_1C254CEE0();
  sub_1C254E460();
  sub_1C21A89AC();
  swift_retain();
  sub_1C254E1D0();

  uint64_t v21 = swift_release();
  uint64_t v22 = v52;
  uint64_t v23 = (void *)sub_1C225A8D4(v21);
  sub_1C225F830(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C255CDA0;
  *(void *)(v24 + 32) = 0xD000000000000013;
  *(void *)(v24 + 40) = 0x80000001C2573EA0;
  char v25 = sub_1C225AC14();
  uint64_t v26 = 0x6F747475426E6950;
  if (v25) {
    uint64_t v26 = 0x7475426E69706E55;
  }
  unint64_t v27 = 0xE90000000000006ELL;
  if (v25) {
    unint64_t v27 = 0xEB000000006E6F74;
  }
  *(void *)(v24 + 48) = v26;
  *(void *)(v24 + 56) = v27;
  id v28 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v29 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v23, sel_setAccessibilityIdentifier_, v29);
  sub_1C225EB54(v14, (uint64_t)&v52, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (!v54)
  {

    swift_release();
    return sub_1C225F904((uint64_t)&v52, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
  }
  if (swift_dynamicCast())
  {
    uint64_t v30 = *(void *)(v51 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_listConfiguration);
    swift_release();
    uint64_t v31 = v22;
    unint64_t v32 = sub_1C254E400();
    if (v32 >> 62) {
      uint64_t v33 = sub_1C2550620();
    }
    else {
      uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v35 = (uint64_t)v47;
    uint64_t v34 = (uint64_t)v48;
    swift_bridgeObjectRelease();
    if (!v33)
    {
      id v36 = sub_1C225A6CC();
      type metadata accessor for OnboardingTileAppearanceManager();
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 16) = v36;
      id v38 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
      id v39 = v36;
      int v40 = (void *)sub_1C254F430();
      id v41 = objc_msgSend(v38, sel_initWithCategory_domainName_healthStore_, 0, v40, v39);

      *(void *)(inited + 24) = v41;
      swift_storeEnumTagMultiPayload();
      sub_1C221B650(1, v35);
      swift_release();
      swift_release();
      sub_1C225F87C(v35, (uint64_t (*)(void))type metadata accessor for OnboardingViewIdentifier);
    }
    id v42 = v49;
    ListConceptManager.togglePinState(for:onCommitHandler:)(v49, 0, 0, v34);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v34, v44);
    if (qword_1EBB6D840 != -1) {
      swift_once();
    }
    uint64_t v52 = v30;
    char v53 = 0;
    sub_1C23CE38C((uint64_t)v42, v31, v45, 0, &v52);

    return swift_release();
  }
  else
  {

    return swift_release();
  }
}

id sub_1C225D444()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AlphabeticalUDCCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C225D534()
{
  return type metadata accessor for AlphabeticalUDCCell();
}

uint64_t type metadata accessor for AlphabeticalUDCCell()
{
  uint64_t result = qword_1EA2DF2D0;
  if (!qword_1EA2DF2D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C225D588()
{
  sub_1C225EB00(319, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C225D670@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
  swift_beginAccess();
  return sub_1C225EB54(v3, a1, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
}

uint64_t sub_1C225D6F0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1E4F66028];
  sub_1C225F0B8(a1, v3, (unint64_t *)&qword_1EA2E5330, (unint64_t *)&qword_1EA2DED90);
  swift_endAccess();
  sub_1C225B580();
  return sub_1C225F904(a1, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, v4, (uint64_t (*)(void))sub_1C225EBC8);
}

uint64_t (*sub_1C225D7AC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C225D80C;
}

uint64_t sub_1C225D80C(uint64_t a1, char a2)
{
  return sub_1C225DA28(a1, a2, (uint64_t (*)(uint64_t))sub_1C225B580);
}

uint64_t sub_1C225D824(void *a1, void *a2)
{
  v6[3] = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
  v6[0] = a1;
  id v4 = a1;
  sub_1C225C824((uint64_t)v6, a2);
  return sub_1C225F904((uint64_t)v6, (uint64_t)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C225F830);
}

uint64_t sub_1C225D8D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_sectionContext;
  swift_beginAccess();
  return sub_1C225F128(v3, a1, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
}

uint64_t sub_1C225D940(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_sectionContext;
  swift_beginAccess();
  sub_1C225F20C(a1, v3);
  swift_endAccess();
  sub_1C225BE30();
  return sub_1C225F194(a1);
}

uint64_t (*sub_1C225D9B0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C225DA10;
}

uint64_t sub_1C225DA10(uint64_t a1, char a2)
{
  return sub_1C225DA28(a1, a2, (uint64_t (*)(uint64_t))sub_1C225BE30);
}

uint64_t sub_1C225DA28(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

id sub_1C225DA6C()
{
  uint64_t v1 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (id *)((char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = v0 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
  swift_beginAccess();
  sub_1C225EB54(v4, (uint64_t)v8, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (!v9)
  {
    sub_1C225F904((uint64_t)v8, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
    return 0;
  }
  sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
  type metadata accessor for UDCAlphabeticalItem();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  sub_1C225F054(v7[1] + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData, (uint64_t)v3);
  swift_release();
  id v5 = v3[1];
  sub_1C225F87C((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
  return v5;
}

id sub_1C225DC00()
{
  return sub_1C225DA6C();
}

double sub_1C225DC24()
{
  objc_msgSend(*v0, sel_frame);
  return CGRectGetWidth(*(CGRect *)&v1);
}

id sub_1C225DC58()
{
  return sub_1C225DC80(&OBJC_IVAR____TtC15HealthRecordsUI13RecentUDCCell_item, (void (*)(void))type metadata accessor for UDCRecentItem, &OBJC_IVAR____TtC15HealthRecordsUI13UDCRecentItem_viewData);
}

id sub_1C225DC80(void *a1, void (*a2)(void), void *a3)
{
  uint64_t v7 = v3;
  uint64_t v8 = type metadata accessor for UserDomainConceptViewData();
  MEMORY[0x1F4188790](v8 - 8);
  id v10 = (id *)((char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (uint64_t)v7 + *a1;
  swift_beginAccess();
  sub_1C225EB54(v11, (uint64_t)v20, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (v21)
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    a2(0);
    if (swift_dynamicCast())
    {
      sub_1C225F054(v19[1] + *a3, (uint64_t)v10);
      swift_release();
      id v12 = v10[1];
      sub_1C225F87C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      id v13 = objc_msgSend(v12, sel_educationContent);
      if (v13)
      {
        uint64_t v14 = v13;
        BOOL v15 = sub_1C25453B4();

        if (v15)
        {
          objc_msgSend(v7, sel_frame);
          double Width = CGRectGetWidth(v22);
          id v17 = objc_allocWithZone((Class)type metadata accessor for EducationPreviewViewController());
          return sub_1C2545A98(v12, Width);
        }
      }
    }
  }
  else
  {
    sub_1C225F904((uint64_t)v20, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
  }
  return 0;
}

void sub_1C225DE9C(char a1, char a2)
{
  uint64_t v3 = v2;
  int v5 = a1 & 1;
  sub_1C225EB00(0, &qword_1EA2DF2E8, MEMORY[0x1E4FB1290]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)aBlock - v7;
  if (*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_editMode) != v5)
  {
    *(unsigned char *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_editMode) = v5;
    id v9 = sub_1C225A8D4();
    sub_1C225AC14();
    static UIButton.Configuration.pinnedLabsConfiguration(pinned:)();
    uint64_t v10 = sub_1C25500A0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
    sub_1C25500C0();

    if (a2)
    {
      uint64_t v11 = self;
      uint64_t v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_1C225F2C4;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C224E544;
      aBlock[3] = &block_descriptor_20;
      id v13 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v11, sel_animateWithDuration_animations_, v13, 0.25);
      _Block_release(v13);
    }
    else
    {
      sub_1C225B404();
    }
  }
}

void sub_1C225E08C(char a1, char a2)
{
}

id sub_1C225E0B0()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (sub_1C225AC14()) {
    id v1 = sub_1C225F2DC((uint64_t)sub_1C225F2D4, v0);
  }
  else {
    id v1 = sub_1C225F51C((uint64_t)sub_1C225F2D4, v0);
  }
  id v2 = v1;
  uint64_t v3 = (void *)sub_1C254F700();
  id v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v2, sel_setAccessibilityIdentifier_, v4);
  sub_1C225F830(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C255CEB0;
  *(void *)(v5 + 32) = v2;
  sub_1C254F730();
  sub_1C21AB51C(0, &qword_1EA2DF2F0);
  id v6 = v2;
  uint64_t v7 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_configurationWithActions_, v7);
  swift_release();

  return v8;
}

void sub_1C225E268(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v6 = a5 + 16;
  swift_beginAccess();
  uint64_t v7 = MEMORY[0x1C875A200](v6);
  if (v7)
  {
    id v8 = (void *)v7;
    sub_1C225CD54(2);
    ((void (*)(uint64_t))a3)(1);
  }
  else
  {
    a3();
  }
}

id sub_1C225E2F4()
{
  return sub_1C225E0B0();
}

uint64_t sub_1C225E318()
{
  if (sub_1C225AC14())
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
  }
  else if (qword_1EBB6EF40 != -1)
  {
    swift_once();
  }
  id v0 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v1;
}

id sub_1C225E460()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v4 = self;
  uint64_t v14 = sub_1C225F7D8;
  uint64_t v15 = v2;
  uint64_t v10 = MEMORY[0x1E4F143A8];
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_1C225ECF4;
  id v13 = &block_descriptor_41;
  uint64_t v5 = _Block_copy(&v10);
  id v6 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v14 = sub_1C225F820;
  uint64_t v15 = v3;
  uint64_t v10 = MEMORY[0x1E4F143A8];
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_1C225ED44;
  id v13 = &block_descriptor_44;
  uint64_t v7 = _Block_copy(&v10);
  swift_retain();
  swift_release();
  id v8 = objc_msgSend(v4, sel_configurationWithIdentifier_previewProvider_actionProvider_, 0, v5, v7);
  swift_release();
  swift_release();
  _Block_release(v7);
  _Block_release(v5);
  swift_release();
  return v8;
}

uint64_t sub_1C225E638(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C875A200](v2);
  if (!v3) {
    return 0;
  }
  id v4 = (void *)v3;
  uint64_t v5 = v3 + OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item;
  swift_beginAccess();
  sub_1C225EB54(v5, (uint64_t)v25, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C225EBC8);
  if (v25[3])
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EA2DED90);
    type metadata accessor for UDCAlphabeticalItem();
    if ((swift_dynamicCast() & 1) == 0
      || ((unint64_t v6 = *(void *)(v24 + OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_listConfiguration),
           swift_release(),
           v6 <= 4)
        ? (BOOL v7 = ((1 << v6) & 0x13) == 0)
        : (BOOL v7 = 1),
          v7))
    {

      return 0;
    }
    else
    {
      sub_1C225E318();
      sub_1C225AC14();
      id v9 = (void *)sub_1C254F430();
      id v10 = objc_msgSend(self, sel_systemImageNamed_, v9);

      sub_1C21AB51C(0, &qword_1EA2DF300);
      uint64_t v11 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v23 = v11;
      uint64_t v12 = (void *)sub_1C254FFB0();
      id v13 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1C225F830(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1C255D0E0;
      *(void *)(v14 + 32) = 0xD000000000000013;
      *(void *)(v14 + 40) = 0x80000001C2573EA0;
      *(void *)(v14 + 48) = 0x73657250676E6F4CLL;
      *(void *)(v14 + 56) = 0xE900000000000073;
      id v15 = v12;
      char v16 = sub_1C225AC14();
      uint64_t v17 = 0x6F697463416E6950;
      if (v16) {
        uint64_t v17 = 0x7463416E69706E55;
      }
      unint64_t v18 = 0xE90000000000006ELL;
      if (v16) {
        unint64_t v18 = 0xEB000000006E6F69;
      }
      *(void *)(v14 + 64) = v17;
      *(void *)(v14 + 72) = v18;
      id v19 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v20 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v15, sel_setAccessibilityIdentifier_, v20, 0, 0, 0, sub_1C225F828, v23);
      sub_1C21AB51C(0, &qword_1EA2DF308);
      sub_1C225F830(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, v13);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1C255CEB0;
      *(void *)(v21 + 32) = v15;
      v25[0] = v21;
      sub_1C254F730();
      uint64_t v8 = sub_1C254FE60();
    }
  }
  else
  {

    sub_1C225F904((uint64_t)v25, (uint64_t)&qword_1EA2E5330, (uint64_t)&qword_1EA2DED90, MEMORY[0x1E4F66028], (uint64_t (*)(void))sub_1C225EBC8);
    return 0;
  }
  return v8;
}

void sub_1C225EA84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C875A200](v2);
  if (v3)
  {
    id v4 = (void *)v3;
    sub_1C225CD54(1);
  }
}

id sub_1C225EADC()
{
  return sub_1C225E460();
}

void sub_1C225EB00(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C225EB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

void sub_1C225EBC8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C21FFE74(255, a3);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C225EC20(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  unint64_t v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  BOOL v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a3;
  v6(v10, v9, sub_1C225F788, v8);
  swift_release();
  swift_release();
}

id sub_1C225ECF4(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();
  return v3;
}

id sub_1C225ED44(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_1C21AB51C(0, &qword_1EA2DF2F8);
  uint64_t v2 = sub_1C254F710();
  swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v3;
}

void sub_1C225EDD4(void *a1@<X8>)
{
  sub_1C253E7B4(*(void **)(v1 + 16), a1);
}

uint64_t sub_1C225EDDC(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1C254CAD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C225EB00(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v17 - v10;
  sub_1C225F128(a1, (uint64_t)v17 - v10, (unint64_t *)&qword_1EBB6F550, v8);
  uint64_t v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    id v13 = objc_msgSend(a2, sel_utcDateFormatter);
    uint64_t v14 = (void *)sub_1C254CA50();
    id v15 = objc_msgSend(v13, sel_relativeStringFromDate_, v14);

    uint64_t v12 = sub_1C254F470();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v12;
}

uint64_t sub_1C225EFEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 117, 7);
}

uint64_t sub_1C225F054(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserDomainConceptViewData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C225F0B8(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_1C225EBC8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C225F128(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C225EB00(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C225F194(uint64_t a1)
{
  sub_1C225EB00(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C225F20C(uint64_t a1, uint64_t a2)
{
  sub_1C225EB00(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C225F28C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C225F2C4()
{
  sub_1C225B384(v0);
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

void sub_1C225F2D4(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  sub_1C225E268(a1, a2, a3, a4, v4);
}

id sub_1C225F2DC(uint64_t a1, uint64_t a2)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  swift_retain();
  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C225EC20;
  aBlock[3] = &block_descriptor_28;
  uint64_t v6 = _Block_copy(aBlock);
  id v7 = objc_msgSend(self, sel_contextualActionWithStyle_title_handler_, 0, v5, v6, 0xE000000000000000);

  _Block_release(v6);
  swift_release();
  uint64_t v8 = (void *)sub_1C254F430();
  id v9 = objc_msgSend(self, sel_systemImageNamed_, v8);

  objc_msgSend(v7, sel_setImage_, v9);
  id v10 = objc_msgSend(self, sel_systemYellowColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v10);

  return v7;
}

id sub_1C225F51C(uint64_t a1, uint64_t a2)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  swift_retain();
  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C225EC20;
  aBlock[3] = &block_descriptor_34;
  uint64_t v6 = _Block_copy(aBlock);
  id v7 = objc_msgSend(self, sel_contextualActionWithStyle_title_handler_, 0, v5, v6, 0xE000000000000000);

  _Block_release(v6);
  swift_release();
  uint64_t v8 = (void *)sub_1C254F430();
  id v9 = objc_msgSend(self, sel_systemImageNamed_, v8);

  objc_msgSend(v7, sel_setImage_, v9);
  id v10 = objc_msgSend(self, sel_systemYellowColor);
  objc_msgSend(v7, sel_setBackgroundColor_, v10);

  return v7;
}

uint64_t sub_1C225F750()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C225F788(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_1C225F7A0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C225F7D8()
{
  return sub_1C225DC80(&OBJC_IVAR____TtC15HealthRecordsUI19AlphabeticalUDCCell_item, (void (*)(void))type metadata accessor for UDCAlphabeticalItem, &OBJC_IVAR____TtC15HealthRecordsUI19UDCAlphabeticalItem_viewData);
}

uint64_t sub_1C225F820(uint64_t a1)
{
  return sub_1C225E638(a1, v1);
}

void sub_1C225F828(uint64_t a1)
{
  sub_1C225EA84(a1, v1);
}

void sub_1C225F830(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C225F87C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C225F8DC()
{
  return sub_1C225CD54(0);
}

uint64_t sub_1C225F904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C225F990(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v14 = 0;
  char v15 = 1;
  id v16 = 0;
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = &v14;
  v6[3] = a1;
  void v6[4] = a2;
  void v6[5] = a3;
  void v6[6] = &v16;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1C225FEF0;
  *(void *)(v7 + 24) = v6;
  v13[4] = sub_1C225FF10;
  v13[5] = v7;
  v13[0] = MEMORY[0x1E4F143A8];
  v13[1] = 1107296256;
  v13[2] = sub_1C23CC224;
  v13[3] = &block_descriptor_21;
  uint64_t v8 = _Block_copy(v13);
  swift_retain();
  id v9 = a3;
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_performBlockAndWait_, v8);
  _Block_release(v8);
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    if (v16)
    {
      id v12 = v16;
      swift_willThrow();

      swift_release();
      return isEscapingClosureAtFileLocation;
    }
    if ((v15 & 1) == 0)
    {
      uint64_t isEscapingClosureAtFileLocation = v14;
      swift_release();
      return isEscapingClosureAtFileLocation;
    }
  }
  __break(1u);
  return result;
}

void *sub_1C225FB6C(uint64_t a1, void *(*a2)(uint64_t *__return_ptr, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t result = a2(&v6, a4);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_1C225FBF4(uint64_t a1, uint64_t a2)
{
  if (objc_msgSend(self, sel_isMainThread))
  {
    return sub_1C254CE10();
  }
  else
  {
    return MEMORY[0x1F411FE50](a1, a2);
  }
}

uint64_t sub_1C225FC7C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v6 = *a1;
  sub_1C254D110();
  uint64_t v7 = (void *)MEMORY[0x1C87555F0]();
  unsigned __int8 v16 = v6;
  uint64_t v8 = (void *)sub_1C254CF10();
  id v9 = static FeedItem.predicateForHealthRecordsData(categoryKind:sourceProfile:)(&v16, v8);

  objc_msgSend(v7, sel_setPredicate_, v9);
  id v10 = (void *)sub_1C225FBF4(a2, a3);
  _OWORD v15[2] = v7;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1C225FE40;
  *(void *)(v11 + 24) = v15;
  uint64_t v12 = sub_1C225F990((uint64_t)sub_1C225FE6C, v11, v10);
  if (v3)
  {

    swift_release();
    return v12;
  }
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();

  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0) {
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C225FDE8@<X0>(uint64_t *a1@<X8>)
{
  sub_1C254D110();
  uint64_t result = sub_1C254FD70();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C225FE40@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C225FDE8(a1);
}

uint64_t sub_1C225FE5C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void *sub_1C225FE6C@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1C225FEB0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

void *sub_1C225FEF0()
{
  return sub_1C225FB6C(*(void *)(v0 + 16), *(void *(**)(uint64_t *__return_ptr, uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1C225FF00()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C225FF10()
{
  return sub_1C224E5B4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t type metadata accessor for TipsDataSource()
{
  return self;
}

uint64_t sub_1C225FF44(uint64_t a1, unsigned __int8 *a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v42 = a5;
  int v41 = a4;
  uint64_t v35 = a3;
  uint64_t v40 = a1;
  uint64_t v6 = sub_1C254D7E0();
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v43 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v34 - v9;
  int v38 = *a2;
  uint64_t v37 = *((void *)a2 + 1);
  sub_1C254D110();
  uint64_t v11 = (void *)MEMORY[0x1C87555F0]();
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v39 = v12;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C255CD80;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  sub_1C2260520(0, (unint64_t *)&qword_1EBB6F520, (void (*)(uint64_t))sub_1C220D8F8);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C255CDA0;
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v16 = sub_1C220D950();
  strcpy((char *)(v14 + 32), "pluginPackage");
  *(_WORD *)(v14 + 46) = -4864;
  *(void *)(v14 + 96) = v15;
  *(void *)(v14 + 104) = v16;
  *(void *)(v14 + 64) = v16;
  *(void *)(v14 + 72) = 0xD000000000000025;
  *(void *)(v14 + 80) = 0x80000001C2578100;
  *(void *)(v13 + 32) = sub_1C254F9A0();
  sub_1C2260520(0, &qword_1EA2DF320, MEMORY[0x1E4F67030]);
  uint64_t v17 = sub_1C254CEF0();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  long long v36 = xmmword_1C255CD90;
  *(_OWORD *)(v20 + 16) = xmmword_1C255CD90;
  (*(void (**)(unint64_t, void, uint64_t))(v18 + 104))(v20 + v19, *MEMORY[0x1E4F66FC8], v17);
  sub_1C254CFE0();
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = v36;
  *(void *)(v21 + 32) = sub_1C254CF10();
  uint64_t v22 = sub_1C254D0B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 40) = v22;
  if (v37) {
    char v23 = v38;
  }
  else {
    char v23 = 11;
  }
  LOBYTE(v46) = v23;
  *(void *)(v13 + 48) = _s14HealthPlatform8FeedItemC0A9RecordsUIE015predicateForTipC5Items4uuid12categoryKind13sourceProfileSo11NSPredicateC10Foundation4UUIDVSg_AD15DisplayCategoryV0M0OSgAA06SourceO0OtFZ_0(v40, (unsigned __int8 *)&v46);
  uint64_t v46 = v13;
  sub_1C254F730();
  uint64_t v24 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v24);

  objc_msgSend(v11, sel_setPredicate_, v25);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1C255CEB0;
  id v27 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  id v28 = (void *)sub_1C254F430();
  id v29 = objc_msgSend(v27, sel_initWithKey_ascending_selector_, v28, 1, sel_localizedStandardCompare_);

  *(void *)(v26 + 32) = v29;
  uint64_t v46 = v26;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  uint64_t v30 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v11, sel_setSortDescriptors_, v30);

  if ((v41 & 1) == 0) {
    objc_msgSend(v11, sel_setFetchLimit_, v35);
  }
  id v31 = objc_allocWithZone(MEMORY[0x1E4F1C0F0]);
  objc_msgSend(v31, sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v11, v42, 0, 0);
  sub_1C22259FC();
  sub_1C254D7A0();
  sub_1C254D720();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v45);
  uint64_t v32 = sub_1C254D540();

  sub_1C2260574((unint64_t *)&qword_1EA2DEA78, (void (*)(uint64_t))sub_1C22259FC);
  return v32;
}

void sub_1C2260520(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550820();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2260574(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id MedicalRecordTimelineAccountUpgradeTileDataSource.profile.getter()
{
  return *(id *)(v0 + 40);
}

uint64_t sub_1C22605C4()
{
  swift_beginAccess();
  return MEMORY[0x1C875A200](v0 + 56);
}

void sub_1C2260608(void *a1)
{
}

void (*sub_1C2260658(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1C875A200](v1 + 56);
  return sub_1C22606D4;
}

void sub_1C22606D4(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }
  free(v3);
}

uint64_t sub_1C2260750(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 64) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C22607B0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C22607E8(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C2260830())()
{
  return j__swift_endAccess;
}

void *sub_1C2260884(void *a1, void *a2, void *a3)
{
  swift_unknownObjectWeakInit();
  uint64_t v7 = MEMORY[0x1E4FBC860];
  v3[8] = MEMORY[0x1E4FBC860];
  v3[9] = 0;
  v3[5] = a1;
  v3[6] = a2;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  id v8 = a2;
  id v9 = a1;
  id v10 = ConceptsDataSource.init(arrangedSections:isHidden:)(v7, 0);
  if (!a2)
  {
    swift_retain();
    goto LABEL_7;
  }
  id v11 = v8;
  swift_retain();
  if (objc_msgSend(v11, sel_categoryType) != (id)10 || !a3)
  {

LABEL_7:
    swift_retain();
    sub_1C244073C(1);
    swift_release_n();
    goto LABEL_8;
  }
  sub_1C22609A8();
  swift_release();

  id v9 = v11;
  id v8 = v11;
LABEL_8:

  return v10;
}

uint64_t sub_1C22609A8()
{
  sub_1C2262334(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v31 - v2;
  sub_1C2260EF0();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2261050();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  uint64_t v33 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)(v0 + 40);
  type metadata accessor for ClinicalAccountManager();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = MEMORY[0x1E4FBC870];
  void v14[5] = 0;
  void v14[6] = 0;
  v14[4] = v15;
  void v14[2] = v13;
  id v16 = v13;
  void v14[3] = objc_msgSend(v16, sel_clinicalAccountStore);
  id v17 = objc_msgSend(v16, sel_healthStore);
  type metadata accessor for AccountStatusSummaryTileSettingsManager();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = MEMORY[0x1E4FBC868];
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = v19;
  id v20 = v17;
  sub_1C21A6E94();

  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AC28];
  sub_1C226113C(0, (unint64_t *)&qword_1EA2DF330, MEMORY[0x1E4F1AC28]);
  sub_1C226100C(&qword_1EA2DF340, (unint64_t *)&qword_1EA2DF330, v21);
  swift_retain();
  sub_1C254EB10();
  sub_1C226249C(&qword_1EA2DF360, 255, (void (*)(uint64_t))sub_1C2260EF0);
  uint64_t v22 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v35 = v22;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v34 = (id)sub_1C254FC70();
  uint64_t v23 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v3, 1, 1, v23);
  uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
  sub_1C226113C(0, &qword_1EA2DF350, MEMORY[0x1E4F1AAE0]);
  sub_1C226100C(&qword_1EA2DF358, &qword_1EA2DF350, v24);
  sub_1C22611AC();
  sub_1C254EC70();
  sub_1C226242C((uint64_t)v3, (unint64_t *)&qword_1EBB6F4A0, (uint64_t (*)(uint64_t))v31[1]);

  swift_release();
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v31[0];
  swift_weakInit();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v25;
  *(void *)(v27 + 24) = v18;
  sub_1C226249C(&qword_1EA2DF368, 255, (void (*)(uint64_t))sub_1C2261050);
  swift_retain();
  uint64_t v28 = v32;
  uint64_t v29 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v28);
  *(void *)(v26 + 72) = v29;
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C2260EF0()
{
  if (!qword_1EA2DF328)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AC28];
    sub_1C226113C(255, (unint64_t *)&qword_1EA2DF330, MEMORY[0x1E4F1AC28]);
    sub_1C226100C(&qword_1EA2DF340, (unint64_t *)&qword_1EA2DF330, v0);
    unint64_t v1 = sub_1C254EB20();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2DF328);
    }
  }
}

void sub_1C2260FA4()
{
  if (!qword_1EA2DF338)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EA2E1530);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF338);
    }
  }
}

uint64_t sub_1C226100C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C226113C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2261050()
{
  if (!qword_1EA2DF348)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
    sub_1C226113C(255, &qword_1EA2DF350, MEMORY[0x1E4F1AAE0]);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    sub_1C226100C(&qword_1EA2DF358, &qword_1EA2DF350, v0);
    sub_1C22611AC();
    unint64_t v1 = sub_1C254E9B0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2DF348);
    }
  }
}

void sub_1C226113C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_1C2260FA4();
    unint64_t v7 = a3(a1, v6, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C22611AC()
{
  unint64_t result = qword_1EBB6F4B0;
  if (!qword_1EBB6F4B0)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F4B0);
  }
  return result;
}

uint64_t sub_1C2261214(unint64_t *a1)
{
  uint64_t v32 = sub_1C254CB40();
  uint64_t v2 = *(char **)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C254E290();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v31 = result;
    uint64_t v39 = MEMORY[0x1E4FBC860];
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F67690], v5);
    long long v36 = sub_1C24F6714((uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    unint64_t v35 = v9;
    if (v9 >> 62) {
      goto LABEL_38;
    }
    uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v12 = v32;
    while (v11)
    {
      unint64_t v13 = 0;
      uint64_t v14 = v36[2];
      unint64_t v37 = v35 & 0xC000000000000001;
      uint64_t v38 = v14;
      unint64_t v33 = v35 + 32;
      uint64_t v34 = v35 & 0xFFFFFFFFFFFFFF8;
      uint64_t v15 = (void (**)(char *, uint64_t))(v2 + 8);
      uint64_t v30 = v36 + 9;
      while (1)
      {
        if (v37)
        {
          id v16 = (char *)MEMORY[0x1C87588E0](v13, v35);
        }
        else
        {
          if (v13 >= *(void *)(v34 + 16)) {
            goto LABEL_36;
          }
          id v16 = (char *)*(id *)(v33 + 8 * v13);
        }
        uint64_t v2 = v16;
        if (__OFADD__(v13++, 1))
        {
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        id v18 = objc_msgSend(v16, sel_identifier);
        sub_1C254CB20();

        uint64_t v19 = sub_1C254CAF0();
        uint64_t v21 = v20;
        (*v15)(v4, v12);
        if (!v38) {
          goto LABEL_17;
        }
        if ((v36[4] != v19 || v36[5] != v21) && (sub_1C2550870() & 1) == 0)
        {
          if (v38 == 1) {
            goto LABEL_17;
          }
          if ((v36[6] != v19 || v36[7] != v21) && (sub_1C2550870() & 1) == 0) {
            break;
          }
        }

        swift_bridgeObjectRelease();
LABEL_6:
        if (v13 == v11) {
          goto LABEL_39;
        }
      }
      if (v38 == 2)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        uint64_t v2 = v2;
        MEMORY[0x1C8757C00]();
        if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();

        goto LABEL_6;
      }
      uint64_t v22 = v30;
      uint64_t v23 = 2;
      while (1)
      {
        uint64_t v24 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          break;
        }
        BOOL v25 = *(v22 - 1) == v19 && *v22 == v21;
        if (v25 || (sub_1C2550870() & 1) != 0)
        {

          swift_bridgeObjectRelease();
          uint64_t v12 = v32;
          goto LABEL_6;
        }
        v22 += 2;
        ++v23;
        BOOL v25 = v24 == v38;
        uint64_t v12 = v32;
        if (v25) {
          goto LABEL_17;
        }
      }
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1C2550620();
      uint64_t v12 = v32;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = v39;
    uint64_t v27 = v31;
    swift_beginAccess();
    *(void *)(v27 + 64) = v26;
    swift_bridgeObjectRelease();
    unint64_t v28 = *(void *)(v27 + 64);
    if (v28 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1C2550620();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_retain();
    if (v29)
    {
      sub_1C244073C(0);
      swift_release();
      sub_1C2261B04();
    }
    else
    {
      sub_1C244073C(1);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C22616FC()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DAE0();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void MedicalRecordTimelineAccountUpgradeTileDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void MedicalRecordTimelineAccountUpgradeTileDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C2261834()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t MedicalRecordTimelineAccountUpgradeTileDataSource.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t MedicalRecordTimelineAccountUpgradeTileDataSource.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2261934()
{
  return sub_1C254E160();
}

Swift::Void __swiftcall MedicalRecordTimelineAccountUpgradeTileDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C2261A08()
{
  return sub_1C254FAD0();
}

uint64_t sub_1C2261A7C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C24DD544(a1);
}

uint64_t sub_1C2261A84()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2261ABC()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2261AFC(unint64_t *a1)
{
  return sub_1C2261214(a1);
}

uint64_t sub_1C2261B04()
{
  uint64_t v21 = sub_1C254CB40();
  uint64_t v1 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = xmmword_1C255CD90;
  long long v28 = xmmword_1C255CD90;
  if (qword_1EA2DD8D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (byte_1EA2E4618 == 1)
  {
    swift_beginAccess();
    uint64_t v4 = *(void *)(v0 + 64);
    uint64_t v5 = type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
    uint64_t v6 = (void *)swift_allocObject();
    type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell();
    sub_1C226249C(&qword_1EA2DF370, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell);
    swift_bridgeObjectRetain();
    swift_retain();
    void v6[4] = sub_1C254D330();
    void v6[5] = v7;
    _OWORD v6[2] = v4;
    v6[3] = v0;
    uint64_t v8 = sub_1C226249C(&qword_1EA2DF380, 255, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem);
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v8 = 0;
    uint64_t v6 = 0;
    v29[1] = 0;
    v29[2] = 0;
  }
  v29[3] = v5;
  id v29[4] = v8;
  v29[0] = v6;
  sub_1C254D560();
  sub_1C2262334(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  *(_OWORD *)(swift_allocObject() + 16) = v20;
  unint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v27 = (void *)MEMORY[0x1E4FBC860];
  sub_1C2227014((uint64_t)v29, (uint64_t)v26);
  sub_1C2262398((uint64_t)v26, (uint64_t)&v22);
  if (v23)
  {
    *(void *)&long long v20 = v1;
    sub_1C21F44EC(&v22, (uint64_t)v25);
    sub_1C21F44EC(v25, (uint64_t)&v22);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v9 = sub_1C226CD5C(0, v9[2] + 1, 1, v9);
      uint64_t v27 = v9;
    }
    unint64_t v12 = v9[2];
    unint64_t v11 = v9[3];
    if (v12 >= v11 >> 1) {
      uint64_t v27 = sub_1C226CD5C((void *)(v11 > 1), v12 + 1, 1, v9);
    }
    uint64_t v13 = v23;
    uint64_t v14 = v24;
    uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v22, v23);
    MEMORY[0x1F4188790](v15);
    id v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v17);
    sub_1C2507304(v12, (uint64_t)v17, (uint64_t *)&v27, v13, v14);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
    uint64_t v1 = v20;
  }
  else
  {
    sub_1C226242C((uint64_t)&v22, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
  }
  sub_1C2262334(0, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBB718]);
  swift_arrayDestroy();
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v21);
  sub_1C254D990();
  sub_1C254DA10();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2262064(uint64_t a1, uint64_t a2)
{
  return sub_1C226249C(&qword_1EA2DF378, a2, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeTileDataSource);
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountUpgradeTileDataSource()
{
  return self;
}

uint64_t sub_1C22620D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1 + 56;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C875A200](v3);
  *a2 = result;
  return result;
}

uint64_t sub_1C2262120()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1C2262170@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for MedicalRecordTimelineAccountUpgradeTileDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineAccountUpgradeTileDataSource);
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.presentingViewController.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.presentingViewController.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.presentingViewController.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.accounts.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.accounts.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.accounts.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.determineUpgradableAccounts()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeTileDataSource.reloadSection(upgradableAccounts:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

void sub_1C2262334(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2262398(uint64_t a1, uint64_t a2)
{
  sub_1C2262334(0, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C226242C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2262334(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C226249C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::String __swiftcall String.removingPrefix(_:)(Swift::String a1)
{
  unint64_t v3 = v2;
  uint64_t v4 = v1;
  char v5 = sub_1C254F610();
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v6 = sub_1C254F580();
    uint64_t v7 = sub_1C254F580();
    BOOL v9 = __OFSUB__(v6, v7);
    unint64_t v10 = v6 - v7;
    if (v9)
    {
      __break(1u);
      goto LABEL_6;
    }
    unint64_t v11 = sub_1C226267C(v10, v4, v3);
    uint64_t v13 = v12;
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t v4 = MEMORY[0x1C8757A30](v11, v13, v15, v17);
    unint64_t v3 = v18;
    swift_bridgeObjectRelease();
  }
  unint64_t v10 = v4;
  unint64_t v8 = (void *)v3;
LABEL_6:
  result._object = v8;
  result._countAndFlagsBits = v10;
  return result;
}

Swift::Void __swiftcall String.removePrefix(_:)(Swift::String a1)
{
  uint64_t v3 = *v1;
  unint64_t v2 = v1[1];
  if ((sub_1C254F610() & 1) == 0) {
    goto LABEL_4;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C254F580();
  uint64_t v5 = sub_1C254F580();
  BOOL v6 = __OFSUB__(v4, v5);
  unint64_t v7 = v4 - v5;
  if (!v6)
  {
    unint64_t v8 = sub_1C226267C(v7, v3, v2);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x1C8757A30](v8, v10, v12, v14);
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v2 = v16;
LABEL_4:
    *uint64_t v1 = v3;
    v1[1] = v2;
    return;
  }
  __break(1u);
}

unint64_t sub_1C226267C(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  Swift::String result = sub_1C254F590();
  if (v4) {
    Swift::String result = 15;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_12;
  }
  return sub_1C254F630();
}

uint64_t MedicalRecordTimelineAccountUpgradeItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2262768()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  char v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  sub_1C254CB20();

  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v7[0] = 0x55746E756F636341;
  v7[1] = 0xEF2E656461726770;
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v7[0];
}

uint64_t static MedicalRecordTimelineAccountUpgradeItem.== infix(_:_:)()
{
  return sub_1C254FF70() & 1;
}

void sub_1C22628F8()
{
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 16);
  sub_1C254FF80();
}

uint64_t MedicalRecordTimelineAccountUpgradeItem.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineAccountUpgradeItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C22629F4()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2262A44()
{
  return sub_1C2550A10();
}

void sub_1C2262A98()
{
  uint64_t v1 = *v0;
  sub_1C254F570();
  id v2 = *(id *)(v1 + 16);
  sub_1C254FF80();
}

uint64_t sub_1C2262AFC()
{
  sub_1C25509C0();
  uint64_t v1 = *v0;
  sub_1C254F570();
  id v2 = *(id *)(v1 + 16);
  sub_1C254FF80();

  return sub_1C2550A10();
}

uint64_t sub_1C2262B58()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2262B8C()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  char v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(*(id *)(*(void *)v0 + 16), sel_identifier);
  sub_1C254CB20();

  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v7[0] = 0x55746E756F636341;
  v7[1] = 0xEF2E656461726770;
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v7[0];
}

uint64_t sub_1C2262CCC()
{
  return sub_1C254FF70() & 1;
}

uint64_t sub_1C2262E14(uint64_t a1, void *a2)
{
  sub_1C2227014(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeItemCell_item;
  swift_beginAccess();
  sub_1C2232E74((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C2262E88();
  return sub_1C2227100((uint64_t)v5);
}

uint64_t sub_1C2262E88()
{
  uint64_t v1 = sub_1C254E890();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  char v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  uint64_t v5 = v0 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v5, (uint64_t)v23);
  if (!v24) {
    return sub_1C2227100((uint64_t)v23);
  }
  sub_1C22270A8();
  type metadata accessor for MedicalRecordTimelineAccountUpgradeItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v22 = v2;
    uint64_t v7 = swift_release();
    MEMORY[0x1C87582A0](v7);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v8 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C254E860();
    uint64_t v9 = self;
    uint64_t v10 = *MEMORY[0x1E4FB2950];
    double v11 = *MEMORY[0x1E4FB09D8];
    uint64_t result = (uint64_t)objc_msgSend(v9, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E4FB2950], *MEMORY[0x1E4FB09D8]);
    if (result)
    {
      uint64_t v12 = (void (*)(uint64_t *, void))sub_1C254E7A0();
      sub_1C254E770();
      v12(v23, 0);
      uint64_t v13 = self;
      id v14 = objc_msgSend(v13, sel_labelColor);
      unint64_t v15 = (void (*)(uint64_t *, void))sub_1C254E7A0();
      sub_1C254E780();
      v15(v23, 0);
      id v16 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      sub_1C254E740();
      uint64_t result = (uint64_t)objc_msgSend(v9, sel__preferredFontForTextStyle_weight_, v10, v11);
      if (result)
      {
        uint64_t v17 = (void (*)(uint64_t *, void))sub_1C254E7F0();
        sub_1C254E770();
        v17(v23, 0);
        id v18 = objc_msgSend(v13, sel_systemBlueColor);
        uint64_t v19 = (void (*)(uint64_t *, void))sub_1C254E7F0();
        sub_1C254E780();
        v19(v23, 0);
        uint64_t v24 = v1;
        uint64_t v25 = MEMORY[0x1E4FB0F88];
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
        uint64_t v21 = v22;
        (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 16))(boxed_opaque_existential_1, v4, v1);
        MEMORY[0x1C8758230](v23);
        return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v4, v1);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C22632EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C2263340(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeItemCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C2262E88();
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C22633B0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2263410;
}

uint64_t sub_1C2263410(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2262E88();
  }
  return result;
}

uint64_t sub_1C2263444(uint64_t a1, void *a2)
{
  return sub_1C2263534(a2);
}

uint64_t sub_1C226344C@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 1;
  uint64_t v2 = *MEMORY[0x1E4F66478];
  uint64_t v3 = sub_1C254DA60();
  char v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

id MedicalRecordTimelineAccountUpgradeItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountUpgradeItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C226350C(uint64_t a1, void *a2)
{
  return sub_1C2263534(a2);
}

uint64_t sub_1C2263534(void *a1)
{
  sub_1C2263B30(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v20 - v4;
  uint64_t v6 = v1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v6, (uint64_t)v22);
  if (!v22[3]) {
    return sub_1C2227100((uint64_t)v22);
  }
  sub_1C22270A8();
  type metadata accessor for MedicalRecordTimelineAccountUpgradeItem();
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v8 = v21;
    if (qword_1EBB6EF30 != -1) {
      uint64_t result = swift_once();
    }
    uint64_t v21 = *(void *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_lock);
    MEMORY[0x1F4188790](result);
    *(&v20 - 2) = v9;
    sub_1C254CEE0();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
    sub_1C2263B84((unint64_t *)&qword_1EBB6F240, 255, MEMORY[0x1E4F66F68]);
    swift_retain();
    sub_1C254E1D0();
    swift_release();
    uint64_t v10 = (void *)v22[0];
    type metadata accessor for ClinicalAccountManager();
    double v11 = (void *)swift_allocObject();
    uint64_t v12 = MEMORY[0x1E4FBC870];
    v11[5] = 0;
    v11[6] = 0;
    id v11[4] = v12;
    v11[2] = v10;
    id v13 = v10;
    v11[3] = objc_msgSend(v13, sel_clinicalAccountStore);
    id v14 = *(void **)(v8 + 16);
    type metadata accessor for ClinicalAccountUpgradeManager();
    swift_allocObject();
    id v15 = v14;
    swift_retain();
    id v16 = a1;
    uint64_t v17 = sub_1C244C200(v15, (uint64_t)v11, v16);
    swift_release();

    uint64_t v18 = sub_1C254F840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v5, 1, 1, v18);
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = 0;
    v19[3] = 0;
    v19[4] = v17;
    sub_1C24D0A0C((uint64_t)v5, (uint64_t)&unk_1EA2DF398, (uint64_t)v19);
    swift_release();

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountUpgradeItemCell()
{
  return self;
}

uint64_t sub_1C22638C8(uint64_t a1, uint64_t a2)
{
  return sub_1C2263B84(&qword_1EA2DF390, a2, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineAccountUpgradeItem);
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountUpgradeItem()
{
  return self;
}

uint64_t sub_1C2263934@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI43MedicalRecordTimelineAccountUpgradeItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineAccountUpgradeItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineAccountUpgradeItem);
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t method lookup function for MedicalRecordTimelineAccountUpgradeItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineAccountUpgradeItemCell);
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItemCell.didSelectCell(_:in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountUpgradeItemCell.deselectionBehavior.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

void sub_1C2263B30(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2263B84(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2263BCC()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2263C0C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C222399C;
  return sub_1C24DC974();
}

uint64_t sub_1C2263CC0(uint64_t a1, void *a2)
{
  sub_1C226692C(a1, (uint64_t)v5, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_item;
  swift_beginAccess();
  sub_1C2232E74((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C226417C();
  return sub_1C22666F0((uint64_t)v5, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
}

uint64_t sub_1C2263D68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_item;
  swift_beginAccess();
  return sub_1C226692C(v3, a1, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
}

uint64_t sub_1C2263DD8(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C226417C();
  return sub_1C22666F0(a1, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
}

uint64_t (*sub_1C2263E64(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2263EC4;
}

uint64_t sub_1C2263EC4(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C226417C();
  }
  return result;
}

id ClinicalSharingSelectableAuthorizationCategoryCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id ClinicalSharingSelectableAuthorizationCategoryCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_item];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_switchTrailingMargin] = 0x4034000000000000;
  uint64_t v10 = OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_selectionSwitch;
  id v11 = objc_allocWithZone(MEMORY[0x1E4FB1CD0]);
  uint64_t v12 = v4;
  id v13 = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, sel_setTranslatesAutoresizingMaskIntoConstraints_, 1);
  *(void *)&v4[v10] = v13;

  v16.receiver = v12;
  v16.super_class = (Class)type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  id v14 = objc_msgSendSuper2(&v16, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C2264B0C();

  return v14;
}

uint64_t sub_1C226417C()
{
  uint64_t v1 = v0;
  objc_super v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C22669AC(0, &qword_1EA2DE9F0, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  id v67 = (char *)v57 - v4;
  uint64_t v5 = sub_1C254E610();
  uint64_t v62 = *(void *)(v5 - 8);
  uint64_t v63 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254E5E0();
  uint64_t v65 = *(void *)(v8 - 8);
  uint64_t v66 = v8;
  MEMORY[0x1F4188790](v8);
  CGRect v64 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254E890();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22669AC(0, (unint64_t *)&qword_1EA2DF3D0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, v2);
  MEMORY[0x1F4188790](v14 - 8);
  objc_super v16 = (char *)v57 - v15;
  uint64_t v17 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (uint64_t)&v1[OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_item];
  swift_beginAccess();
  sub_1C226692C(v21, (uint64_t)v68, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
  if (!v69)
  {
    sub_1C22666F0((uint64_t)v68, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
    return sub_1C22666F0((uint64_t)v16, (unint64_t *)&qword_1EA2DF3D0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  }
  sub_1C22270A8();
  int v22 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v16, v22 ^ 1u, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1) {
    return sub_1C22666F0((uint64_t)v16, (unint64_t *)&qword_1EA2DF3D0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  }
  uint64_t v61 = v11;
  uint64_t v23 = sub_1C2266760((uint64_t)v16, (uint64_t)v20);
  MEMORY[0x1C87582A0](v23);
  uint64_t v24 = *((void *)v20 + 8);
  swift_bridgeObjectRetain();
  sub_1C254E860();
  if (*((void *)v20 + 10))
  {
    swift_bridgeObjectRetain();
    sub_1C254E740();
    uint64_t v25 = (void (*)(uint64_t *, void))sub_1C254E7F0();
    sub_1C254E750();
    v25(v68, 0);
  }
  uint64_t v69 = v10;
  uint64_t v70 = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v68);
  uint64_t v27 = *(void (**)(uint64_t *, char *, uint64_t))(v61 + 16);
  uint64_t v60 = v10;
  v27(boxed_opaque_existential_1, v13, v10);
  MEMORY[0x1C8758230](v68);
  swift_bridgeObjectRetain();
  long long v28 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v29 = objc_msgSend(v28, sel_removeSpecialCharactersAndWhiteSpaces);

  uint64_t v30 = sub_1C254F470();
  uint64_t v32 = v31;

  if (v24)
  {
    swift_bridgeObjectRetain();
    unint64_t v33 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v34 = objc_msgSend(v33, sel_removeSpecialCharactersAndWhiteSpaces);

    uint64_t v35 = sub_1C254F470();
    unint64_t v37 = v36;
  }
  else
  {
    unint64_t v37 = 0xEB000000006D6574;
    uint64_t v35 = 0x496E776F6E6B6E55;
  }
  id v39 = objc_msgSend(v1, sel_contentView);
  sub_1C2201F2C();
  uint64_t v59 = v40;
  uint64_t v41 = swift_allocObject();
  long long v58 = xmmword_1C255D0E0;
  *(_OWORD *)(v41 + 16) = xmmword_1C255D0E0;
  v57[1] = @"UIA.Health.Sharing";
  *(void *)(v41 + 32) = sub_1C254F470();
  *(void *)(v41 + 40) = v42;
  *(void *)(v41 + 48) = v30;
  *(void *)(v41 + 56) = v32;
  *(void *)(v41 + 64) = v35;
  *(void *)(v41 + 72) = v37;
  swift_bridgeObjectRetain();
  uint64_t v43 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v44 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v39, sel_setAccessibilityIdentifier_, v44);
  if (v20[48] == 1)
  {
    sub_1C22669AC(0, &qword_1EA2DE9D8, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
    sub_1C254E620();
    v57[0] = v35;
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
    uint64_t v45 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_selectionSwitch];
    sub_1C2223C14();
    id v47 = (uint64_t (**)())&v7[*(int *)(v46 + 48)];
    uint64_t v48 = *MEMORY[0x1E4FB0E18];
    uint64_t v49 = sub_1C254E5A0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 104))(v7, v48, v49);
    *id v47 = sub_1C22267A4;
    v47[1] = 0;
    (*(void (**)(char *, void, uint64_t))(v62 + 104))(v7, *MEMORY[0x1E4FB0E60], v63);
    uint64_t v50 = sub_1C254E5B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v67, 1, 1, v50);
    id v51 = v45;
    uint64_t v52 = v64;
    sub_1C254E5D0();
    sub_1C254E590();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v52, v66);
    sub_1C254FD80();
    objc_msgSend(v51, sel_setOn_, v20[49]);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = v58;
    *(void *)(v53 + 32) = sub_1C254F470();
    *(void *)(v53 + 40) = v54;
    *(void *)(v53 + 48) = v57[0];
    *(void *)(v53 + 56) = v37;
    *(void *)(v53 + 64) = 0x686374697773;
    *(void *)(v53 + 72) = 0xE600000000000000;
    uint64_t v55 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v56 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v51, sel_setAccessibilityIdentifier_, v56);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C254FD80();
  }
  (*(void (**)(char *, uint64_t))(v61 + 8))(v13, v60);
  return sub_1C2266828((uint64_t)v20);
}

uint64_t type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell()
{
  return self;
}

id ClinicalSharingSelectableAuthorizationCategoryCell.selectionSwitch.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_selectionSwitch));
}

id sub_1C2264B0C()
{
  sub_1C22669AC(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28], MEMORY[0x1E4FBB718]);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v13[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v7 = (char *)&v13[-1] - v6;
  MEMORY[0x1C8758240](v5);
  uint64_t v8 = sub_1C254E710();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FB0F28];
    sub_1C226692C((uint64_t)v7, (uint64_t)v4, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28]);
    MEMORY[0x1C8758250](v4);
    sub_1C22666F0((uint64_t)v7, &qword_1EA2DF3E0, v9);
  }
  else
  {
    id v10 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
    sub_1C254E6C0();
    MEMORY[0x1C8758250](v7);
  }
  v13[3] = sub_1C254E890();
  v13[4] = MEMORY[0x1E4FB0F88];
  __swift_allocate_boxed_opaque_existential_1(v13);
  MEMORY[0x1C87582A0]();
  MEMORY[0x1C8758230](v13);
  return objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_selectionSwitch), sel_addTarget_action_forControlEvents_, v0, sel_switchUpdated, 4096);
}

uint64_t sub_1C2264CFC()
{
  sub_1C22669AC(0, (unint64_t *)&qword_1EA2DF3D0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = &v17[-v2];
  uint64_t v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = v0 + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_item;
  swift_beginAccess();
  sub_1C226692C(v8, (uint64_t)v18, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
  if (!v19)
  {
    sub_1C22666F0((uint64_t)v18, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    return sub_1C22666F0((uint64_t)v3, (unint64_t *)&qword_1EA2DF3D0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  }
  sub_1C22270A8();
  int v9 = swift_dynamicCast();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(v3, v9 ^ 1u, 1, v4);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_1C22666F0((uint64_t)v3, (unint64_t *)&qword_1EA2DF3D0, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  }
  sub_1C2266760((uint64_t)v3, (uint64_t)v7);
  uint64_t v10 = *(void *)&v7[*(int *)(v4 + 52)];
  uint64_t v11 = (void (*)(uint64_t, id))*((void *)v7 + 4);
  if (v10)
  {
    uint64_t v12 = *(void **)(v0
                   + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_selectionSwitch);
    swift_bridgeObjectRetain();
    swift_retain();
    v11(v10, objc_msgSend(v12, sel_isOn));
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    sub_1C22669AC(0, &qword_1EA2DF3D8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, MEMORY[0x1E4FBBE00]);
    unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C255CD90;
    sub_1C22667C4((uint64_t)v7, v15 + v14);
    objc_super v16 = *(void **)(v0
                   + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_selectionSwitch);
    swift_retain();
    v11(v15, objc_msgSend(v16, sel_isOn));
    swift_release();
    swift_bridgeObjectRelease();
  }
  return sub_1C2266828((uint64_t)v7);
}

id ClinicalSharingSelectableAuthorizationCategoryCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.reuseIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *objc_super v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.reuseIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.uniqueIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.uniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t sub_1C2265268(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 32) = sub_1C22668BC;
  *(void *)(a2 + 40) = v5;
  return result;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.selectionStateDidUpdate.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.selectionStateDidUpdate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.selectionStateDidUpdate.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.isSelectable.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.isSelectable.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.isSelectable.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.isSelected.getter()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.isSelected.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 49) = result;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.isSelected.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.name.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.subtitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.subtitle.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.category.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.category.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.category.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.authorizationIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() + 48);
  uint64_t v4 = sub_1C254E220();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem()
{
  uint64_t result = qword_1EA2DF3C0;
  if (!qword_1EA2DF3C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.authorizationIdentifier.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() + 48);
  uint64_t v4 = sub_1C254E220();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.authorizationIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.associatedItems.getter()
{
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  return swift_bridgeObjectRetain();
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.associatedItems.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem() + 52);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ClinicalSharingSelectableAuthorizationCategoryItem.associatedItems.modify())()
{
  return nullsub_1;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.init(name:subtitle:category:authorizationIdentifier:associatedItems:isSelectable:isSelected:reuseIdentifier:selectionStateDidUpdate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v19 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v20 = *(int *)(v19 + 52);
  *(void *)a9 = a12;
  *(void *)(a9 + 8) = a13;
  sub_1C254F5A0();
  *(void *)(a9 + 16) = 0xD000000000000033;
  *(void *)(a9 + 24) = 0x80000001C25782D0;
  uint64_t v21 = a9 + *(int *)(v19 + 48);
  uint64_t v22 = sub_1C254E220();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v21, a7, v22);
  *(void *)(a9 + v20) = a8;
  *(void *)(a9 + 88) = a5;
  *(void *)(a9 + 96) = a6;
  *(void *)(a9 + 56) = a1;
  *(void *)(a9 + 64) = a2;
  *(void *)(a9 + 72) = a3;
  *(void *)(a9 + 80) = a4;
  *(unsigned char *)(a9 + 48) = a10;
  *(unsigned char *)(a9 + 49) = a11;
  *(void *)(a9 + 32) = a14;
  *(void *)(a9 + 40) = a15;
  return result;
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t ClinicalSharingSelectableAuthorizationCategoryItem.hashValue.getter()
{
  return sub_1C2550A10();
}

uint64_t sub_1C22659AC()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C22659DC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2265A0C()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2265A5C()
{
  sub_1C254F570();
  return sub_1C254F570();
}

uint64_t sub_1C2265A9C()
{
  return sub_1C2550A10();
}

uint64_t _s15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryItemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  int v9 = (uint64_t *)((char *)&v15 - v8);
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24))
  {
    sub_1C22667C4(a1, (uint64_t)&v15 - v8);
    sub_1C22667C4(a2, (uint64_t)v7);
  }
  else
  {
    char v11 = sub_1C2550870();
    sub_1C22667C4(a1, (uint64_t)v9);
    sub_1C22667C4(a2, (uint64_t)v7);
    char v12 = 0;
    if ((v11 & 1) == 0) {
      goto LABEL_14;
    }
  }
  if (*v9 == *v7 && v9[1] == v7[1]) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1C2550870();
  }
LABEL_14:
  sub_1C2266828((uint64_t)v9);
  sub_1C2266828((uint64_t)v7);
  return v12 & 1;
}

unint64_t sub_1C2265C24()
{
  unint64_t result = qword_1EA2DF3B8;
  if (!qword_1EA2DF3B8)
  {
    type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF3B8);
  }
  return result;
}

uint64_t sub_1C2265C7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI50ClinicalSharingSelectableAuthorizationCategoryCell_item;
  swift_beginAccess();
  return sub_1C226692C(v3, a2, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
}

uint64_t sub_1C2265CF4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = sub_1C22668FC;
  a2[1] = v5;
  return swift_retain();
}

uint64_t method lookup function for ClinicalSharingSelectableAuthorizationCategoryCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ClinicalSharingSelectableAuthorizationCategoryCell);
}

uint64_t dispatch thunk of ClinicalSharingSelectableAuthorizationCategoryCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ClinicalSharingSelectableAuthorizationCategoryCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ClinicalSharingSelectableAuthorizationCategoryCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

void *initializeBufferWithCopyOfBuffer for ClinicalSharingSelectableAuthorizationCategoryItem(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    uint64_t v8 = a2[5];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(void *)(a1 + 40) = v8;
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    uint64_t v10 = a2[10];
    *(void *)(a1 + 72) = a2[9];
    *(void *)(a1 + 80) = v10;
    uint64_t v11 = a2[12];
    uint64_t v12 = *(int *)(a3 + 48);
    uint64_t v17 = (uint64_t)a2 + v12;
    uint64_t v18 = a1 + v12;
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v11;
    uint64_t v13 = sub_1C254E220();
    objc_super v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v18, v17, v13);
    *(void *)((char *)v4 + *(int *)(a3 + 52)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 52));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for ClinicalSharingSelectableAuthorizationCategoryItem(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  uint64_t v5 = sub_1C254E220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClinicalSharingSelectableAuthorizationCategoryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v6;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  uint64_t v9 = *(void *)(a2 + 96);
  uint64_t v10 = *(int *)(a3 + 48);
  uint64_t v14 = a2 + v10;
  uint64_t v15 = a1 + v10;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  uint64_t v11 = sub_1C254E220();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v15, v14, v11);
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClinicalSharingSelectableAuthorizationCategoryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 48);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C254E220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ClinicalSharingSelectableAuthorizationCategoryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v7 = *(int *)(a3 + 48);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v10 = sub_1C254E220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t assignWithTake for ClinicalSharingSelectableAuthorizationCategoryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 48);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1C254E220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClinicalSharingSelectableAuthorizationCategoryItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C22664BC);
}

uint64_t sub_1C22664BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C254E220();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ClinicalSharingSelectableAuthorizationCategoryItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2266580);
}

uint64_t sub_1C2266580(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C254E220();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C2266628()
{
  uint64_t result = sub_1C254E220();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C22666F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C22669AC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2266760(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C22667C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2266828(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2266884()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C22668BC(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *, char *))(v2 + 16);
  uint64_t v6 = a1;
  char v5 = a2;
  return v3(&v6, &v5);
}

uint64_t sub_1C22668FC(void *a1, unsigned __int8 *a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *a2);
}

uint64_t sub_1C226692C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C22669AC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C22669AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for FeedItemListViewController()
{
  uint64_t result = qword_1EA2DF400;
  if (!qword_1EA2DF400) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2266A60()
{
  return swift_initClassMetadata2();
}

void sub_1C2266AC0()
{
}

void sub_1C2266AF0()
{
  sub_1C254E100();
  unint64_t v1 = (void (*)(void))sub_1C254E110();
  v1();
  id v2 = objc_msgSend(v0, sel_collectionView);
  if (v2)
  {
    sub_1C254D2E0();
    sub_1C254FAD0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C2266B90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + qword_1EA2DF3F8);
  id v4 = *(id *)(v1 + qword_1EA2DF3F0);
  swift_bridgeObjectRetain();
  sub_1C254FB30();
  uint64_t v5 = type metadata accessor for FeedItemListViewDataSourceProvider();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v3;
  sub_1C21F44EC(&v9, v6 + 32);
  a1[3] = v5;
  uint64_t result = sub_1C22673E0(&qword_1EA2DF410, v7, (void (*)(uint64_t))type metadata accessor for FeedItemListViewDataSourceProvider);
  a1[4] = result;
  *a1 = v6;
  return result;
}

void sub_1C2266C60()
{
}

void sub_1C2266CBC()
{
}

void sub_1C2266D18()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v1, sel_setLargeTitleDisplayMode_, 0);

  (*(void (**)(void *__return_ptr))(qword_1EA303838 + (*MEMORY[0x1E4FBC8C8] & *v0) + 24))(v10);
  sub_1C254E0F0();
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for FeedItemListViewController();
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = self;
    id v5 = objc_msgSend(v4, sel_systemGroupedBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v5);

    id v6 = objc_msgSend(v0, sel_collectionView);
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v4, sel_systemGroupedBackgroundColor);
      objc_msgSend(v7, sel_setBackgroundColor_, v8);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C2266EB0(void *a1)
{
  id v1 = a1;
  sub_1C2266D18();
}

void sub_1C2266EF8(void *a1, uint64_t a2, uint64_t a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for FeedItemListViewController();
  id v4 = v5.receiver;
  objc_msgSendSuper2(&v5, sel_viewWillAppear_, a3);
  sub_1C254FE10();
}

void sub_1C2266F60(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C2266F94()
{
  return swift_bridgeObjectRelease();
}

id sub_1C2266FE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedItemListViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C226701C(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2267078()
{
  return type metadata accessor for FeedItemListViewController();
}

uint64_t sub_1C2267080@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C254CE00();
  uint64_t result = sub_1C254CDF0();
  uint64_t v4 = MEMORY[0x1E4F66F20];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t sub_1C22670C0()
{
  return (*(uint64_t (**)(void))(qword_1EA303838 + (*MEMORY[0x1E4FBC8C8] & **v0) + 32))();
}

uint64_t sub_1C2267130()
{
  id v1 = v0;
  uint64_t v2 = sub_1C254D7E0();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C254D110();
  id v3 = (void *)MEMORY[0x1C87555F0]();
  objc_msgSend(v3, sel_setPredicate_, v1[2]);
  sub_1C22673A0();
  uint64_t v4 = (void *)sub_1C254F700();
  objc_msgSend(v3, sel_setSortDescriptors_, v4);

  __swift_project_boxed_opaque_existential_1Tm(v1 + 4, v1[7]);
  id v5 = v3;
  id v6 = (void *)sub_1C254CE10();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v5, v6, 0, 0);

  sub_1C22259FC();
  sub_1C254D7A0();
  uint64_t v7 = sub_1C254D540();

  sub_1C22673E0((unint64_t *)&qword_1EA2DEA78, 255, (void (*)(uint64_t))sub_1C22259FC);
  return v7;
}

uint64_t sub_1C22672E4()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeedItemListViewDataSourceProvider()
{
  return self;
}

uint64_t sub_1C2267350()
{
  sub_1C2225098();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255CD90;
  *(void *)(v0 + 32) = sub_1C2267130();
  *(void *)(v0 + 40) = v1;
  return v0;
}

unint64_t sub_1C22673A0()
{
  unint64_t result = qword_1EBB6FA50;
  if (!qword_1EBB6FA50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB6FA50);
  }
  return result;
}

uint64_t sub_1C22673E0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ListConceptManager.togglePinState(for:onCommitHandler:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v5 = v4;
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  uint64_t v78 = a4;
  uint64_t v73 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  uint64_t v72 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22682A0();
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v67 - v13;
  uint64_t v15 = sub_1C254E560();
  uint64_t v74 = *(void *)(v15 - 8);
  uint64_t v75 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v67 - v19;
  uint64_t v21 = sub_1C254E4C0();
  uint64_t v76 = *(void *)(v21 - 8);
  uint64_t v77 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E3F0();
  unint64_t v24 = sub_1C254E4B0();
  char v25 = sub_1C2268118((uint64_t)a1, v24, (uint64_t)&unk_1EA2DF420);
  swift_bridgeObjectRelease();
  if (v25)
  {
    sub_1C254E510();
    swift_retain_n();
    id v26 = a1;
    uint64_t v27 = sub_1C254E550();
    int v28 = sub_1C254FA40();
    if (os_log_type_enabled(v27, (os_log_type_t)v28))
    {
      int v70 = v28;
      os_log_t v71 = v27;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v69 = v30;
      *(_DWORD *)uint64_t v29 = 136446722;
      uint64_t v81 = *v5;
      uint64_t v82 = v30;
      sub_1C22682F8();
      uint64_t v31 = sub_1C254F4F0();
      uint64_t v81 = sub_1C21AD354(v31, v32, &v82);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      sub_1C254E410();
      uint64_t v33 = v73;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v14, 1, v73) == 1)
      {
        uint64_t v34 = 0x6E776F6E6B6E55;
        sub_1C2268334((uint64_t)v14);
        unint64_t v35 = 0xE700000000000000;
      }
      else
      {
        uint64_t v34 = sub_1C254CAF0();
        unint64_t v35 = v46;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v33);
      }
      uint64_t v81 = sub_1C21AD354(v34, v35, &v82);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2082;
      uint64_t v68 = v29 + 24;
      id v47 = objc_msgSend(v26, sel_UUID);
      uint64_t v48 = v72;
      sub_1C254CB20();

      uint64_t v49 = v26;
      uint64_t v50 = sub_1C254CAF0();
      unint64_t v52 = v51;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v48, v73);
      uint64_t v81 = sub_1C21AD354(v50, v52, &v82);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      os_log_t v53 = v71;
      _os_log_impl(&dword_1C21A1000, v71, (os_log_type_t)v70, "[%{public}s] List UDC with identifier '%{public}s' is unpinning concept '%{public}s'", (uint8_t *)v29, 0x20u);
      uint64_t v54 = v69;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v54, -1, -1);
      MEMORY[0x1C875A0B0](v29, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v74 + 8))(v20, v75);
    uint64_t v55 = v77;
    uint64_t v56 = v76;
    sub_1C254E480();
  }
  else
  {
    sub_1C254E510();
    swift_retain_n();
    id v36 = a1;
    unint64_t v37 = sub_1C254E550();
    int v38 = sub_1C254FA40();
    if (os_log_type_enabled(v37, (os_log_type_t)v38))
    {
      int v70 = v38;
      os_log_t v71 = v37;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v69 = v40;
      *(_DWORD *)uint64_t v39 = 136446722;
      uint64_t v81 = *v5;
      uint64_t v82 = v40;
      sub_1C22682F8();
      uint64_t v41 = sub_1C254F4F0();
      uint64_t v81 = sub_1C21AD354(v41, v42, &v82);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2082;
      sub_1C254E410();
      uint64_t v43 = v73;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v73) == 1)
      {
        uint64_t v44 = 0x6E776F6E6B6E55;
        sub_1C2268334((uint64_t)v12);
        unint64_t v45 = 0xE700000000000000;
      }
      else
      {
        uint64_t v44 = sub_1C254CAF0();
        unint64_t v45 = v57;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v43);
      }
      uint64_t v81 = sub_1C21AD354(v44, v45, &v82);
      sub_1C2550120();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 22) = 2082;
      uint64_t v68 = v39 + 24;
      id v58 = objc_msgSend(v36, sel_UUID);
      uint64_t v59 = v72;
      sub_1C254CB20();

      uint64_t v60 = v36;
      uint64_t v61 = sub_1C254CAF0();
      unint64_t v63 = v62;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v59, v73);
      uint64_t v81 = sub_1C21AD354(v61, v63, &v82);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      os_log_t v64 = v71;
      _os_log_impl(&dword_1C21A1000, v71, (os_log_type_t)v70, "[%{public}s] List UDC with identifier '%{public}s' is pinning concept '%{public}s'", (uint8_t *)v39, 0x20u);
      uint64_t v65 = v69;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v65, -1, -1);
      MEMORY[0x1C875A0B0](v39, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v74 + 8))(v18, v75);
    uint64_t v55 = v77;
    uint64_t v56 = v76;
    sub_1C254E490();
  }
  sub_1C254E420();
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v23, v55);
}

uint64_t sub_1C2267D1C(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v4 = *(unsigned __int8 *)a1;
  uint64_t v22 = a1[3];
  uint64_t v20 = a1[2];
  uint64_t v21 = a1[4];
  uint64_t v18 = a1[6];
  uint64_t v19 = a1[5];
  uint64_t v17 = a1[7];
  swift_bridgeObjectRetain();
  id v5 = (uint64_t *)(a2 + 48);
  int v23 = v4;
  do
  {
    if (*((unsigned __int8 *)v5 - 16) == v4)
    {
      id v6 = (void *)*(v5 - 1);
      uint64_t v24 = *v5;
      uint64_t v8 = v5[1];
      uint64_t v7 = v5[2];
      uint64_t v9 = v5[3];
      uint64_t v10 = v5[4];
      uint64_t v11 = v5[5];
      uint64_t v12 = (void *)v5[6];
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v13 = v12;
      id v25 = v6;
      if ((sub_1C254FF70() & 1) == 0) {
        goto LABEL_3;
      }
      if (v8)
      {
        if (!v22 || (v24 != v20 || v8 != v22) && (sub_1C2550870() & 1) == 0) {
          goto LABEL_3;
        }
      }
      else if (v22)
      {
        goto LABEL_3;
      }
      if ((v7 != v21 || v9 != v19) && (sub_1C2550870() & 1) == 0
        || (sub_1C22AB474(v10, v18) & 1) == 0
        || (sub_1C22AB474(v11, v17) & 1) == 0)
      {
LABEL_3:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v4 = v23;

        goto LABEL_4;
      }
      char v14 = sub_1C254FF70();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      int v4 = v23;
      if (v14)
      {
        uint64_t v16 = 1;
        goto LABEL_22;
      }
    }
LABEL_4:
    v5 += 9;
    --v2;
  }
  while (v2);
  uint64_t v16 = 0;
LABEL_22:
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1C2267FD8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C226803C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1C2550870();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1C2550870() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2268104(uint64_t a1, unint64_t a2)
{
  return sub_1C2268118(a1, a2, (uint64_t)&qword_1EBB6EF58);
}

uint64_t sub_1C2268118(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1C2550620())
  {
    unint64_t v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v7 = (id)MEMORY[0x1C87588E0](0, a2);
LABEL_5:
      uint64_t v8 = v7;
      sub_1C21AB51C(0, (unint64_t *)a3);
      a3 = sub_1C254FF70();

      if (a3)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1) {
        goto LABEL_18;
      }
      if (v6) {
        break;
      }
      unint64_t v6 = 5;
      while (1)
      {
        unint64_t v12 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        a3 = (uint64_t)*(id *)(a2 + 8 * v6);
        char v13 = sub_1C254FF70();

        if (v13) {
          goto LABEL_6;
        }
        ++v6;
        if (v12 == v5) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      MEMORY[0x1C87588E0](a3, a2);
      uint64_t v10 = a3 + 1;
      if (__OFADD__(a3, 1)) {
        break;
      }
      char v11 = sub_1C254FF70();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++a3;
      if (v10 == v5) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1C22682A0()
{
  if (!qword_1EA2DEFF0)
  {
    sub_1C254CB40();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DEFF0);
    }
  }
}

unint64_t sub_1C22682F8()
{
  unint64_t result = qword_1EA2DF418;
  if (!qword_1EA2DF418)
  {
    sub_1C254E460();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DF418);
  }
  return result;
}

uint64_t sub_1C2268334(uint64_t a1)
{
  sub_1C22682A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2268390(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  return sub_1C2268544(a1, a2, a3);
}

uint64_t sub_1C22683A8(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    if (!v6) {
      return v7;
    }
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2274ACC(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      break;
    }
    uint64_t v9 = 0;
    uint64_t v7 = v17;
    while (v6 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        uint64_t v10 = MEMORY[0x1C87588E0](v9, a3);
      }
      else
      {
        uint64_t v10 = *(void *)(a3 + 8 * v9 + 32);
        swift_retain();
      }
      uint64_t v15 = v10;
      a1(&v16, &v15);
      if (v4)
      {
        swift_release();
        swift_release();
        return v7;
      }
      uint64_t v4 = 0;
      swift_release();
      uint64_t v11 = v16;
      uint64_t v17 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C2274ACC(v12 > 1, v13 + 1, 1);
        uint64_t v7 = v17;
      }
      ++v9;
      *(void *)(v7 + 16) = v13 + 1;
      *(void *)(v7 + 8 * v13 + 32) = v11;
      if (v6 == v9) {
        return v7;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2268544(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v6) {
      break;
    }
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2550490();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1C87588E0](v8, a3);
      }
      else {
        id v9 = *(id *)(a3 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      id v11 = v9;
      a1(&v12, &v11);

      if (v3) {
        return swift_release();
      }
      ++v8;
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      if (v6 == v8) {
        return v13;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C22686B4(void (*a1)(void *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_1C2274DC8(0, v5, 0);
    uint64_t v6 = v34;
    uint64_t v8 = (unsigned char *)(a3 + 72);
    while (1)
    {
      uint64_t v9 = *((void *)v8 - 4);
      uint64_t v10 = *((void *)v8 - 3);
      uint64_t v11 = *((void *)v8 - 2);
      uint64_t v12 = *((void *)v8 - 1);
      char v13 = *v8;
      v28[0] = *((void *)v8 - 5);
      v28[1] = v9;
      long long v28[2] = v10;
      v28[3] = v11;
      v28[4] = v12;
      char v29 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(v30, v28);
      if (v4) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v30[0];
      uint64_t v15 = v30[1];
      uint64_t v17 = v30[2];
      uint64_t v16 = v31;
      uint64_t v18 = v32;
      char v19 = v33;
      uint64_t v34 = v6;
      unint64_t v21 = *(void *)(v6 + 16);
      unint64_t v20 = *(void *)(v6 + 24);
      if (v21 >= v20 >> 1)
      {
        uint64_t v23 = v31;
        uint64_t v26 = v32;
        char v25 = v33;
        sub_1C2274DC8(v20 > 1, v21 + 1, 1);
        char v19 = v25;
        uint64_t v18 = v26;
        uint64_t v16 = v23;
        uint64_t v6 = v34;
      }
      v8 += 48;
      *(void *)(v6 + 16) = v21 + 1;
      uint64_t v22 = v6 + 48 * v21;
      *(void *)(v22 + 32) = v14;
      *(void *)(v22 + 40) = v15;
      *(void *)(v22 + 48) = v17;
      *(void *)(v22 + 56) = v16;
      *(void *)(v22 + 64) = v18;
      *(unsigned char *)(v22 + 72) = v19;
      --v5;
      uint64_t v4 = 0;
      if (!v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_1C2268880(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = self;
  id v5 = v3;
  uint64_t v6 = (void *)sub_1C254CB00();
  id v7 = objc_msgSend(v4, sel_predicateForRecordsFromClinicalAccountIdentifier_, v6);

  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B3D0]), sel_initWithSampleType_predicate_, v5, v7);
  *a2 = v8;
}

uint64_t BrowseCategory.makeQueryDescriptors(additionalPredicate:)(uint64_t a1)
{
  id v3 = BrowseCategory.queryDescriptors.getter();
  uint64_t v7 = v1;
  uint64_t v8 = a1;
  uint64_t v4 = sub_1C2268544((void (*)(uint64_t *__return_ptr, id *))sub_1C2268C44, (uint64_t)&v6, (unint64_t)v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C22689A8@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for BrowseCategory();
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  char v13 = (char *)&v27 - v12;
  uint64_t v14 = *a1;
  sub_1C21A9698(a2, (uint64_t)&v27 - v12);
  id v15 = objc_msgSend(v14, sel_sampleType);
  id v16 = objc_msgSend(v14, sel_predicate);
  if (v16)
  {
    id v17 = v16;
    if (a3)
    {
      sub_1C21ACA3C();
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1C255CD70;
      *(void *)(v18 + 32) = v17;
      *(void *)(v18 + 40) = a3;
      uint64_t v29 = v18;
      sub_1C254F730();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
      int v28 = a4;
      id v19 = a3;
      id v20 = v17;
      id v21 = v19;
      id v22 = v20;
      uint64_t v23 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v17 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v23);

      a4 = v28;
    }
  }
  else if (a3)
  {
    id v17 = a3;
  }
  else
  {
    id v17 = 0;
  }
  sub_1C21A9698((uint64_t)v13, (uint64_t)v11);
  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B3D0]), sel_initWithSampleType_predicate_, v15, v17);

  sub_1C2268C64((uint64_t)v13);
  type metadata accessor for CategoryRecordQueryDescription();
  uint64_t v25 = swift_allocObject();
  uint64_t result = sub_1C2207DD8((uint64_t)v11, v25 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_category);
  *(void *)(v25 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor) = v24;
  *a4 = v25;
  return result;
}

void sub_1C2268C24(void **a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_1C2268C44@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C22689A8(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_1C2268C64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BrowseCategory();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2268CC8()
{
  if (*v0) {
    return 0x736D657469;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_1C2268CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C226A244(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2268D1C(uint64_t a1)
{
  unint64_t v2 = sub_1C22698F8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2268D58(uint64_t a1)
{
  unint64_t v2 = sub_1C22698F8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C2268D94()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InternalStateSection()
{
  return self;
}

uint64_t sub_1C2268DF8(void *a1)
{
  uint64_t v3 = v1;
  sub_1C22699A0(0, &qword_1EA2DF468, (uint64_t (*)(void))sub_1C22698F8, (uint64_t)&type metadata for InternalStateSection.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22698F8();
  sub_1C2550A70();
  char v14 = 0;
  sub_1C25507A0();
  if (!v2)
  {
    v12[1] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1C2269DBC(0, &qword_1EA2DF438, v10, (uint64_t (*)(uint64_t))type metadata accessor for InternalStateItem, MEMORY[0x1E4FBB320]);
    sub_1C2269A08(&qword_1EA2DF470, &qword_1EA2DF478, (uint64_t)&unk_1C255F414);
    sub_1C25507D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C2269018(void *a1)
{
  sub_1C22699A0(0, &qword_1EA2DF428, (uint64_t (*)(void))sub_1C22698F8, (uint64_t)&type metadata for InternalStateSection.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v14 - v6;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C22698F8();
  sub_1C2550A50();
  if (v1)
  {
    uint64_t v8 = v14[0];
    type metadata accessor for InternalStateSection();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v5;
    char v16 = 0;
    uint64_t v10 = sub_1C2550710();
    uint64_t v8 = v14[0];
    *(void *)(v14[0] + 16) = v10;
    *(void *)(v8 + 24) = v11;
    sub_1C2269DBC(0, &qword_1EA2DF438, v12, (uint64_t (*)(uint64_t))type metadata accessor for InternalStateItem, MEMORY[0x1E4FBB320]);
    char v15 = 1;
    sub_1C2269A08(&qword_1EA2DF440, &qword_1EA2DF448, (uint64_t)&unk_1C255F43C);
    sub_1C2550740();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v4);
    *(void *)(v8 + 32) = v14[1];
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v8;
}

uint64_t sub_1C22692C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C2269864(a1, (void (*)(void))type metadata accessor for InternalStateSection, (uint64_t (*)(uint64_t))sub_1C2269018, a2);
}

uint64_t sub_1C226930C(void *a1)
{
  return sub_1C2268DF8(a1);
}

uint64_t sub_1C2269330()
{
  if (*v0) {
    return 0x65756C6176;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_1C226935C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C226A328(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2269384(uint64_t a1)
{
  unint64_t v2 = sub_1C226994C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C22693C0(uint64_t a1)
{
  unint64_t v2 = sub_1C226994C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C22693FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InternalStateItem()
{
  return self;
}

uint64_t sub_1C2269460(void *a1)
{
  sub_1C22699A0(0, &qword_1EA2DF460, (uint64_t (*)(void))sub_1C226994C, (uint64_t)&type metadata for InternalStateItem.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C226994C();
  sub_1C2550A70();
  char v11 = 0;
  sub_1C25507A0();
  if (!v1)
  {
    char v10 = 1;
    sub_1C25507A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void *sub_1C22695F4(void *a1)
{
  sub_1C22699A0(0, &qword_1EA2DF450, (uint64_t (*)(void))sub_1C226994C, (uint64_t)&type metadata for InternalStateItem.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v16 - v6;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C226994C();
  sub_1C2550A50();
  if (v1)
  {
    uint64_t v8 = v17;
    type metadata accessor for InternalStateItem();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v9 = v5;
    char v19 = 0;
    uint64_t v10 = sub_1C2550710();
    uint64_t v8 = v17;
    void v17[2] = v10;
    v8[3] = v11;
    char v18 = 1;
    uint64_t v13 = sub_1C2550710();
    uint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v4);
    void v8[4] = v13;
    v8[5] = v15;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v8;
}

uint64_t sub_1C2269820@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C2269864(a1, (void (*)(void))type metadata accessor for InternalStateItem, (uint64_t (*)(uint64_t))sub_1C22695F4, a2);
}

uint64_t sub_1C2269864@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X5>, uint64_t *a4@<X8>)
{
  a2();
  uint64_t v8 = swift_allocObject();
  uint64_t result = a3(a1);
  if (!v4) {
    *a4 = v8;
  }
  return result;
}

uint64_t sub_1C22698D4(void *a1)
{
  return sub_1C2269460(a1);
}

unint64_t sub_1C22698F8()
{
  unint64_t result = qword_1EA2DF430;
  if (!qword_1EA2DF430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF430);
  }
  return result;
}

unint64_t sub_1C226994C()
{
  unint64_t result = qword_1EA2DF458;
  if (!qword_1EA2DF458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF458);
  }
  return result;
}

void sub_1C22699A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C2269A08(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2269DBC(255, &qword_1EA2DF438, a3, (uint64_t (*)(uint64_t))type metadata accessor for InternalStateItem, MEMORY[0x1E4FBB320]);
    sub_1C2269AB4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2269AB4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for InternalStateItem();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1C2269AF4(uint64_t a1, uint64_t a2)
{
  sub_1C2269DBC(0, (unint64_t *)&qword_1EA2E2D90, 255, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v16 - v5;
  id v7 = sub_1C23C21FC();
  uint64_t v8 = sub_1C254CBD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  sub_1C2269E20();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CD90;
  uint64_t v10 = MEMORY[0x1E4FBB5C8];
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v9 + 64) = v10;
  *(void *)(v9 + 32) = v7;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v12 = sub_1C254F4A0();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v6);
  type metadata accessor for InternalStateItem();
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = v12;
  result[5] = v14;
  return result;
}

void sub_1C2269DBC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = a4(a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C2269E20()
{
  if (!qword_1EBB6F520)
  {
    sub_1C21FFE74(255, (unint64_t *)&qword_1EBB6F540);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F520);
    }
  }
}

uint64_t sub_1C2269E88(uint64_t a1)
{
  sub_1C2269DBC(0, (unint64_t *)&qword_1EA2E2D90, 255, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for InternalStateItem.CodingKeys()
{
  return &type metadata for InternalStateItem.CodingKeys;
}

unsigned char *_s15HealthRecordsUI17InternalStateItemC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2269FFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalStateSection.CodingKeys()
{
  return &type metadata for InternalStateSection.CodingKeys;
}

unint64_t sub_1C226A038()
{
  unint64_t result = qword_1EA2DF480;
  if (!qword_1EA2DF480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF480);
  }
  return result;
}

unint64_t sub_1C226A090()
{
  unint64_t result = qword_1EA2DF488;
  if (!qword_1EA2DF488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF488);
  }
  return result;
}

unint64_t sub_1C226A0E8()
{
  unint64_t result = qword_1EA2DF490;
  if (!qword_1EA2DF490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF490);
  }
  return result;
}

unint64_t sub_1C226A140()
{
  unint64_t result = qword_1EA2DF498;
  if (!qword_1EA2DF498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF498);
  }
  return result;
}

unint64_t sub_1C226A198()
{
  unint64_t result = qword_1EA2DF4A0;
  if (!qword_1EA2DF4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF4A0);
  }
  return result;
}

unint64_t sub_1C226A1F0()
{
  unint64_t result = qword_1EA2DF4A8;
  if (!qword_1EA2DF4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF4A8);
  }
  return result;
}

uint64_t sub_1C226A244(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C226A328(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C226A4B0(void *a1)
{
  id v2 = objc_msgSend(a1, sel_keyColor);
  if (v2)
  {
    int v3 = v2;
    unsigned int v4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MedicalRecordChartSeries()), sel_init);
    objc_msgSend(v4, sel_setWantsRoundingDuringYRangeExpansion_, 0);
    uint64_t v5 = self;
    id v6 = objc_msgSend(v5, sel_strokeStyleWithColor_lineWidth_, v3, 8.0);
    uint64_t v7 = OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_selectedStrokeStyle;
    uint64_t v8 = *(void **)&v4[OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_selectedStrokeStyle];
    *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_selectedStrokeStyle] = v6;

    id v9 = objc_msgSend(self, sel_hk_chartInactiveSeriesColor);
    id v10 = objc_msgSend(v5, sel_strokeStyleWithColor_lineWidth_, v9, 8.0);

    uint64_t v11 = OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_unselectedStrokeStyle;
    uint64_t v12 = *(void **)&v4[OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_unselectedStrokeStyle];
    *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI24MedicalRecordChartSeries_unselectedStrokeStyle] = v10;

    uint64_t v13 = *(void **)&v4[v7];
    if (v13) {
      objc_msgSend(v13, sel_setLineCap_, 1);
    }
    uint64_t v14 = *(void **)&v4[v11];
    if (v14)
    {
      id v15 = v14;
      objc_msgSend(v15, sel_setLineCap_, 1);
    }
    return (uint64_t)v4;
  }
  else
  {
    sub_1C25503A0();
    swift_bridgeObjectRelease();
    sub_1C2550AA0();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    id v17 = objc_msgSend(a1, sel_description);
    sub_1C254F470();

    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();
    uint64_t result = sub_1C25505F0();
    __break(1u);
  }
  return result;
}

uint64_t SingleValueDataTransformer.deinit()
{
  return v0;
}

uint64_t SingleValueDataTransformer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1C226A864(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v33 = a2;
  uint64_t v7 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v33 - v12;
  id v14 = objc_msgSend(a1, sel_date);
  sub_1C254CA80();

  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  uint64_t v15 = 9;
  uint64_t v16 = 9;
  if (a3 == 2)
  {
    uint64_t v16 = 6;
    char v17 = 0;
  }
  else
  {
    char v17 = 1;
  }
  if (a3 == 4) {
    char v17 = 0;
  }
  else {
    uint64_t v15 = v16;
  }
  if (a3 == 1)
  {
    char v18 = 0;
  }
  else
  {
    a3 = v15;
    char v18 = v17;
  }
  objc_allocWithZone((Class)type metadata accessor for SingleValueChartData());
  id v19 = a1;
  id v20 = SingleValueChartData.init(chartableQuantitySet:date:dateFormat:hasTime:partOfOutOfRangeSeries:)(v19, (uint64_t)v11, a3, v18, a4 == 1);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  id v21 = (objc_class *)type metadata accessor for MedicalRecordChartPoint();
  id v22 = (char *)objc_allocWithZone(v21);
  *(void *)&v22[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_chartableSet] = v19;
  id v23 = v19;
  id v24 = v33;
  uint64_t v25 = v22;
  id v26 = objc_msgSend(v23, sel_quantities);
  sub_1C226ACEC();
  unint64_t v27 = sub_1C254F710();

  id v28 = v24;
  uint64_t v29 = sub_1C23AC014(v27, (uint64_t)v28);
  swift_bridgeObjectRelease();

  uint64_t v35 = v29;
  swift_bridgeObjectRetain();
  sub_1C23AB6A4(&v35);
  swift_bridgeObjectRelease();
  *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues] = v35;
  *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_blockCoordinateInfo] = v20;
  id v30 = v20;

  v34.receiver = v25;
  v34.super_class = v21;
  id v31 = objc_msgSendSuper2(&v34, sel_init);

  return v31;
}

id sub_1C226AB4C(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)HRInteractiveChartMedicalRecordFormatter), sel_init);
  id v3 = objc_allocWithZone(MEMORY[0x1E4F67B30]);
  id v4 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v3, sel_initWithGraphSeries_displayName_unitName_valueFormatter_dataTypeCode_, v4, v5, v6, v2, 152);

  return v7;
}

uint64_t type metadata accessor for SingleValueDataTransformer()
{
  return self;
}

uint64_t method lookup function for SingleValueDataTransformer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SingleValueDataTransformer);
}

uint64_t dispatch thunk of SingleValueDataTransformer.chartPoint(for:in:with:dataSourceType:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of SingleValueDataTransformer.graphSeries(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of SingleValueDataTransformer.chartDisplayType(with:displayName:unitName:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

unint64_t sub_1C226ACEC()
{
  unint64_t result = qword_1EA2E21B0;
  if (!qword_1EA2E21B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E21B0);
  }
  return result;
}

BOOL LocalizationContext.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

void *sub_1C226AD50@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

BOOL HKConcept.isNull.getter()
{
  id v1 = objc_msgSend(v0, sel_identifier);
  id v2 = objc_msgSend(v1, sel_rawIdentifier);

  return v2 == 0;
}

uint64_t sub_1C226ADD4(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_identifier);
  id v3 = objc_msgSend(v2, sel_rawIdentifier);

  if (v3 && (objc_msgSend(v1, sel_isUndefined) & 1) == 0)
  {
    unsigned int v5 = objc_msgSend(v1, sel_isInMemory);

    return v5 ^ 1;
  }
  else
  {

    return 0;
  }
}

uint64_t HKConcept.isQualifiedForConceptRoom.getter()
{
  id v1 = objc_msgSend(v0, sel_identifier);
  id v2 = objc_msgSend(v1, sel_rawIdentifier);

  if (v2 && (objc_msgSend(v0, sel_isUndefined) & 1) == 0) {
    return objc_msgSend(v0, sel_isInMemory) ^ 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C226AEF4()
{
  if (objc_msgSend(v0, sel_isAdHoc))
  {
    id v1 = objc_msgSend(v0, sel_attributes);
    sub_1C226B184();
    unint64_t v2 = sub_1C254F710();

    if (v2 >> 62) {
      goto LABEL_18;
    }
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v3; uint64_t v3 = sub_1C2550620())
    {
      uint64_t v4 = 4;
      while (1)
      {
        id v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87588E0](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
        id v6 = v5;
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        if (objc_msgSend(v5, sel_type) == (id)2)
        {
          swift_bridgeObjectRelease_n();

          goto LABEL_13;
        }

        ++v4;
        if (v7 == v3) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
  }
LABEL_13:
  id v8 = objc_msgSend(v0, sel_localizedPreferredName);
  if (!v8) {
    return 0;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1C254F470();

  return v10;
}

id static HKQuery.predicateForSamples(conceptId:keyPath:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2ADE8]), sel_initWithRawIdentifier_, a1);
  id v6 = objc_msgSend(ObjCClassFromMetadata, sel_predicateForSamplesWithConceptIdentifier_keyPath_, v5, a2);

  return v6;
}

unint64_t sub_1C226B120()
{
  unint64_t result = qword_1EA2DF4B0;
  if (!qword_1EA2DF4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF4B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizationContext()
{
  return &type metadata for LocalizationContext;
}

unint64_t sub_1C226B184()
{
  unint64_t result = qword_1EA2DF4B8;
  if (!qword_1EA2DF4B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DF4B8);
  }
  return result;
}

uint64_t static SharedFeedItemIdentifierFactory.make(for:categoryKind:feedItemKind:profile:)(uint64_t a1, uint64_t a2, unsigned __int8 *a3, char *a4)
{
  uint64_t v6 = sub_1C254CB40();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a3;
  char v10 = *a4;
  long long v47 = xmmword_1C255F7E0;
  uint64_t v11 = (void *)sub_1C254CF00();
  unint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v45 = 0xD000000000000016;
  unint64_t v46 = 0x80000001C2578660;
  LOBYTE(v44) = v10;
  FeedItemKind.rawValue.getter();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  unint64_t v12 = v45;
  if (v11)
  {
    unint64_t v45 = 0x656C69666F72505BLL;
    unint64_t v46 = 0xE90000000000003ALL;
    unint64_t v41 = v12;
    id v13 = v11;
    id v14 = objc_msgSend(v13, sel_identifier);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v43);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();

    unint64_t v15 = v45;
    unint64_t v16 = v46;
  }
  else
  {
    unint64_t v15 = 0xD000000000000013;
    unint64_t v16 = 0x80000001C2578680;
  }
  unint64_t v45 = v15;
  unint64_t v46 = v16;
  sub_1C254F5A0();

  swift_bridgeObjectRelease();
  unint64_t v48 = v45;
  unint64_t v49 = v46;
  unint64_t v50 = 0xD000000000000014;
  unint64_t v51 = 0x80000001C25786A0;
  unint64_t v45 = 0x676E69726168535BLL;
  unint64_t v46 = 0xEB000000003A4449;
  sub_1C254F5A0();
  sub_1C254F5A0();
  unint64_t v52 = v45;
  unint64_t v53 = v46;
  unint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v45 = 0xD000000000000010;
  unint64_t v46 = 0x80000001C25786C0;
  uint64_t v44 = v9;
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  unint64_t v54 = v45;
  unint64_t v55 = v46;
  unint64_t v17 = v49;
  if (v49)
  {
    unint64_t v18 = v48;
    swift_bridgeObjectRetain();
    id v19 = sub_1C226BFC0(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v21 = v19[2];
    unint64_t v20 = v19[3];
    if (v21 >= v20 >> 1) {
      id v19 = sub_1C226BFC0((void *)(v20 > 1), v21 + 1, 1, v19);
    }
    void v19[2] = v21 + 1;
    id v22 = &v19[2 * v21];
    v22[4] = v18;
    void v22[5] = v17;
  }
  else
  {
    id v19 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v23 = v51;
  if (v51)
  {
    unint64_t v24 = v50;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v19 = sub_1C226BFC0(0, v19[2] + 1, 1, v19);
    }
    unint64_t v26 = v19[2];
    unint64_t v25 = v19[3];
    if (v26 >= v25 >> 1) {
      id v19 = sub_1C226BFC0((void *)(v25 > 1), v26 + 1, 1, v19);
    }
    void v19[2] = v26 + 1;
    unint64_t v27 = &v19[2 * v26];
    v27[4] = v24;
    v27[5] = v23;
  }
  unint64_t v28 = v53;
  if (v53)
  {
    unint64_t v29 = v52;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v19 = sub_1C226BFC0(0, v19[2] + 1, 1, v19);
    }
    unint64_t v31 = v19[2];
    unint64_t v30 = v19[3];
    if (v31 >= v30 >> 1) {
      id v19 = sub_1C226BFC0((void *)(v30 > 1), v31 + 1, 1, v19);
    }
    void v19[2] = v31 + 1;
    uint64_t v32 = &v19[2 * v31];
    v32[4] = v29;
    v32[5] = v28;
  }
  unint64_t v33 = v55;
  if (v55)
  {
    unint64_t v34 = v54;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v19 = sub_1C226BFC0(0, v19[2] + 1, 1, v19);
    }
    unint64_t v36 = v19[2];
    unint64_t v35 = v19[3];
    if (v36 >= v35 >> 1) {
      id v19 = sub_1C226BFC0((void *)(v35 > 1), v36 + 1, 1, v19);
    }
    void v19[2] = v36 + 1;
    unint64_t v37 = &v19[2 * v36];
    v37[4] = v34;
    void v37[5] = v33;
  }
  uint64_t v38 = MEMORY[0x1E4FBB1A0];
  sub_1C2270C8C(0, (unint64_t *)&qword_1EA2DE090, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  swift_arrayDestroy();
  unint64_t v45 = (unint64_t)v19;
  sub_1C2270C8C(0, (unint64_t *)&qword_1EBB6F968, v38, MEMORY[0x1E4FBB320]);
  sub_1C226BF44();
  uint64_t v39 = sub_1C254F390();
  swift_bridgeObjectRelease();
  return v39;
}

unint64_t static SharedFeedItemIdentifierFactory.makePrefixComponent(feedItemKind:)()
{
  return 0xD000000000000016;
}

uint64_t sub_1C226B818(void *a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v11 = 0x656C69666F72505BLL;
    unint64_t v12 = 0xE90000000000003ALL;
    id v6 = a1;
    id v7 = objc_msgSend(v6, sel_identifier);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();

    unint64_t v8 = v11;
    unint64_t v9 = v12;
  }
  else
  {
    unint64_t v9 = 0x80000001C2578680;
    unint64_t v8 = 0xD000000000000013;
  }
  uint64_t v11 = v8;
  unint64_t v12 = v9;
  sub_1C254F5A0();
  return v11;
}

unint64_t static SharedFeedItemIdentifierFactory.makeTagComponentForSnippetItem()()
{
  return 0xD000000000000014;
}

uint64_t static SharedFeedItemIdentifierFactory.makeComponent(sharingId:)()
{
  return 0x676E69726168535BLL;
}

unint64_t static SharedFeedItemIdentifierFactory.makeComponent(categoryKind:)()
{
  return 0xD000000000000010;
}

uint64_t static SharedFeedItemIdentifierFactory.makeComboItemIdentifier(for:feedItemKind:profile:)(unsigned __int8 *a1, char *a2, uint64_t a3)
{
  return sub_1C226BB1C(a1, a2, a3, 0xD000000000000012, 0x80000001C25786E0);
}

unint64_t static SharedFeedItemIdentifierFactory.makeTagComponentForComboItem()()
{
  return 0xD000000000000012;
}

uint64_t static SharedFeedItemIdentifierFactory.makeNewRecordsItemIdentifier(for:feedItemKind:profile:)(unsigned __int8 *a1, char *a2, uint64_t a3)
{
  return sub_1C226BB1C(a1, a2, a3, 0xD000000000000019, 0x80000001C2578700);
}

uint64_t sub_1C226BB1C(unsigned __int8 *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v7 = sub_1C254CB40();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  char v12 = *a2;
  id v13 = (void *)sub_1C254CF00();
  unint64_t v40 = 0;
  unint64_t v41 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v40 = 0xD000000000000016;
  unint64_t v41 = 0x80000001C2578660;
  LOBYTE(v39) = v12;
  FeedItemKind.rawValue.getter();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  unint64_t v14 = v40;
  if (v13)
  {
    unint64_t v40 = 0x656C69666F72505BLL;
    unint64_t v41 = 0xE90000000000003ALL;
    unint64_t v36 = v14;
    id v15 = v13;
    id v16 = objc_msgSend(v15, sel_identifier);
    sub_1C254CB20();

    sub_1C254CAF0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    sub_1C254F5A0();

    unint64_t v17 = v40;
    unint64_t v18 = v41;
  }
  else
  {
    unint64_t v17 = 0xD000000000000013;
    unint64_t v18 = 0x80000001C2578680;
  }
  unint64_t v40 = v17;
  unint64_t v41 = v18;
  sub_1C254F5A0();

  swift_bridgeObjectRelease();
  unint64_t v20 = v40;
  unint64_t v19 = v41;
  unint64_t v40 = 0;
  unint64_t v41 = 0xE000000000000000;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  unint64_t v40 = 0xD000000000000010;
  unint64_t v41 = 0x80000001C25786C0;
  uint64_t v39 = v11;
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  unint64_t v22 = v40;
  unint64_t v21 = v41;
  swift_bridgeObjectRetain();
  unint64_t v23 = sub_1C226BFC0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v25 = v23[2];
  unint64_t v24 = v23[3];
  int64_t v26 = v24 >> 1;
  unint64_t v27 = v25 + 1;
  if (v24 >> 1 <= v25)
  {
    unint64_t v23 = sub_1C226BFC0((void *)(v24 > 1), v25 + 1, 1, v23);
    unint64_t v24 = v23[3];
    int64_t v26 = v24 >> 1;
  }
  void v23[2] = v27;
  unint64_t v28 = &v23[2 * v25];
  v28[4] = v20;
  void v28[5] = v19;
  if (v26 < (uint64_t)(v25 + 2)) {
    unint64_t v23 = sub_1C226BFC0((void *)(v24 > 1), v25 + 2, 1, v23);
  }
  void v23[2] = v25 + 2;
  unint64_t v29 = &v23[2 * v27];
  uint64_t v30 = v38;
  id v29[4] = v37;
  void v29[5] = v30;
  unint64_t v31 = v23[2];
  unint64_t v32 = v23[3];
  swift_bridgeObjectRetain();
  if (v31 >= v32 >> 1) {
    unint64_t v23 = sub_1C226BFC0((void *)(v32 > 1), v31 + 1, 1, v23);
  }
  void v23[2] = v31 + 1;
  unint64_t v33 = &v23[2 * v31];
  v33[4] = v22;
  v33[5] = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v40 = (unint64_t)v23;
  sub_1C2270C8C(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C226BF44();
  uint64_t v34 = sub_1C254F390();
  swift_bridgeObjectRelease();
  return v34;
}

unint64_t static SharedFeedItemIdentifierFactory.makeTagComponentForNotificationItem()()
{
  return 0xD000000000000019;
}

unint64_t sub_1C226BF44()
{
  unint64_t result = qword_1EBB6F970;
  if (!qword_1EBB6F970)
  {
    sub_1C2270C8C(255, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F970);
  }
  return result;
}

void *sub_1C226BFC0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2270C8C(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      id v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C226E54C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for SharedFeedItemIdentifierFactory()
{
  return &type metadata for SharedFeedItemIdentifierFactory;
}

uint64_t sub_1C226C100(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C21AC08C(a1, a2, a3, a4, &qword_1EA2DF3D8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
}

void *sub_1C226C148(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C22706A8(0, (unint64_t *)&qword_1EA2DEA38, MEMORY[0x1E4FBBE00]);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      id v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C226EA60(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C226C270(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C21AC08C(a1, a2, a3, a4, &qword_1EA2DF4C8, MEMORY[0x1E4F66840], MEMORY[0x1E4F66840], MEMORY[0x1E4F66840]);
}

void *sub_1C226C2B8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C21AC374(0, &qword_1EA2DF580, (uint64_t (*)(uint64_t))sub_1C22702A0, MEMORY[0x1E4FBBE00]);
      char v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C226E640(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226C410(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2270C8C(0, &qword_1EA2DF578, (uint64_t)&_s16FormattedSectionVN, MEMORY[0x1E4FBBE00]);
      char v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C226ED94(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226C554(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2270398();
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      id v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C226EFB0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226C660(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C22705C4();
      char v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C226EE8C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226C788(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2270554();
      char v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 120);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[15 * v8 + 4]) {
          memmove(v12, a4 + 4, 120 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C226F0CC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226C8A8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C22704E4();
      char v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4]) {
          memmove(v12, a4 + 4, 96 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C226F1F0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226C9CC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2270474();
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      id v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C226F314(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226CAD8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2270404();
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 95;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 7);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      id v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 7);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C226F434(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226CBE4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2270C8C(0, &qword_1EA2DF4C0, (uint64_t)&type metadata for ClinicalAccountLoginUpgradeAction.Action, MEMORY[0x1E4FBBE00]);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      id v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C226F554(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C226CD14(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C21AC08C(a1, a2, a3, a4, &qword_1EA2DF650, (uint64_t (*)(uint64_t))sub_1C2228228, (uint64_t (*)(void))sub_1C2228228, (uint64_t (*)(void))sub_1C2228228);
}

void *sub_1C226CD5C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C226CD94(a1, a2, a3, a4, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90);
}

void *sub_1C226CD78(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C226CD94(a1, a2, a3, a4, &qword_1EA2DF5D8, (unint64_t *)&qword_1EA2DF5E0);
}

void *sub_1C226CD94(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_1C2270A88(0, a5, a6);
      id v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      id v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v13 = (void *)MEMORY[0x1E4FBC860];
      id v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C226F648(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1C226CED8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C21AC374(0, &qword_1EA2DF5E8, (uint64_t (*)(uint64_t))sub_1C2270B34, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      id v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C226E74C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C226D014(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C21AC08C(a1, a2, a3, a4, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4F66468], MEMORY[0x1E4F66468]);
}

void *sub_1C226D05C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C21AC374(0, &qword_1EA2DF630, (uint64_t (*)(uint64_t))sub_1C2223C88, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      id v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C226F760(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C226D198(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C21AC08C(a1, a2, a3, a4, &qword_1EA2DF638, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
}

char *sub_1C226D1E0(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C226D23C(a1, a2, a3, a4, &qword_1EA2DF620, (uint64_t)&type metadata for SettingsSection);
}

void *sub_1C226D1F4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C226DC88(a1, a2, a3, a4, &qword_1EA2DF5C0, (uint64_t (*)(uint64_t))sub_1C227071C, sub_1C227071C);
}

char *sub_1C226D228(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C226D23C(a1, a2, a3, a4, &qword_1EA2DF5B8, (uint64_t)&type metadata for NavigationType);
}

char *sub_1C226D23C(char *result, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = *((void *)a4 + 3);
  int64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v9 = a2;
    }
LABEL_8:
    int64_t v10 = *((void *)a4 + 2);
    if (v9 <= v10) {
      int64_t v11 = *((void *)a4 + 2);
    }
    else {
      int64_t v11 = v9;
    }
    if (v11)
    {
      sub_1C2270C8C(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = (char *)swift_allocObject();
      size_t v13 = _swift_stdlib_malloc_size(v12);
      *((void *)v12 + 2) = v10;
      *((void *)v12 + 3) = 2 * v13 - 64;
      size_t v14 = v12 + 32;
      if (v7)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[v10 + 32]) {
          memmove(v14, a4 + 32, v10);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
      size_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C2270750(0, v10, v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

void *sub_1C226D350(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C226DC88(a1, a2, a3, a4, &qword_1EA2DF640, (uint64_t (*)(uint64_t))sub_1C2270C24, (void (*)(void))sub_1C2270C24);
}

void *sub_1C226D384(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2270C8C(0, &qword_1EA2DF5B0, (uint64_t)&type metadata for UserDomainConceptFeedItemViewData, MEMORY[0x1E4FBBE00]);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[13 * v8 + 4]) {
          memmove(v12, a4 + 4, 104 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C226E854(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226D4CC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C226D5F8(a1, a2, a3, a4, (void (*)(void))sub_1C2270170, &qword_1EA2DF568, (void (*)(void))sub_1C227024C);
}

void *sub_1C226D508(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C226D5F8(a1, a2, a3, a4, (void (*)(void))sub_1C22700A0, &qword_1EA2DF550, (void (*)(void))sub_1C227011C);
}

void *sub_1C226D544(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C226D5F8(a1, a2, a3, a4, (void (*)(void))sub_1C226FFD0, &qword_1EA2DF538, (void (*)(void))sub_1C227004C);
}

void *sub_1C226D580(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C226D5F8(a1, a2, a3, a4, (void (*)(void))sub_1C226FF00, &qword_1EA2DF520, (void (*)(void))sub_1C226FF7C);
}

void *sub_1C226D5BC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C226D5F8(a1, a2, a3, a4, (void (*)(void))sub_1C226FE30, &qword_1EA2DF508, (void (*)(void))sub_1C226FEAC);
}

void *sub_1C226D5F8(void *result, int64_t a2, char a3, void *a4, void (*a5)(void), unint64_t *a6, void (*a7)(void))
{
  char v10 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v12 = a2;
    goto LABEL_8;
  }
  unint64_t v11 = a4[3];
  uint64_t v12 = v11 >> 1;
  if ((uint64_t)(v11 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v12 + 0x4000000000000000 >= 0)
  {
    uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v12 = a2;
    }
LABEL_8:
    uint64_t v13 = a4[2];
    if (v12 <= v13) {
      uint64_t v14 = a4[2];
    }
    else {
      uint64_t v14 = v12;
    }
    if (v14)
    {
      a5(0);
      id v15 = (void *)swift_allocObject();
      size_t v16 = _swift_stdlib_malloc_size(v15);
      _OWORD v15[2] = v13;
      v15[3] = 2 * ((uint64_t)(v16 - 32) / 40);
      unint64_t v17 = v15 + 4;
      if (v10)
      {
LABEL_13:
        if (v15 != a4 || v17 >= &a4[5 * v13 + 4]) {
          memmove(v17, a4 + 4, 40 * v13);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v15 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v17 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C226E948(0, v13, (unint64_t)v17, (uint64_t)a4, a6, a7);
LABEL_22:
    swift_bridgeObjectRelease();
    return v15;
  }
  __break(1u);
  return result;
}

void *sub_1C226D744(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2270634();
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C226F868(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1C226D850(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C226D23C(a1, a2, a3, a4, &qword_1EA2DF598, (uint64_t)&type metadata for RecordCategoryViewController.ModeSegment);
}

uint64_t sub_1C226D864(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C21AC08C(a1, a2, a3, a4, &qword_1EA2DF4D0, MEMORY[0x1E4F27928], MEMORY[0x1E4F27928], MEMORY[0x1E4F27928]);
}

void *sub_1C226D8AC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2270C8C(0, &qword_1EBB6DDA8, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBBE00]);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C226E460(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226D9DC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2270C8C(0, &qword_1EA2DF628, (uint64_t)&type metadata for RecordTitleWithSubtitleItem, MEMORY[0x1E4FBBE00]);
      char v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C226F9B4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226DB24(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2270C8C(0, &qword_1EA2DF4F8, MEMORY[0x1E4FBC958], MEMORY[0x1E4FBBE00]);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C226E460(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226DC54(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C226DC88(a1, a2, a3, a4, &qword_1EA2DF610, (uint64_t (*)(uint64_t))sub_1C2270BAC, (void (*)(void))sub_1C2270BAC);
}

void *sub_1C226DC88(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), void (*a7)(void))
{
  char v9 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v11 = a2;
    goto LABEL_8;
  }
  unint64_t v10 = a4[3];
  uint64_t v11 = v10 >> 1;
  if ((uint64_t)(v10 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v11 + 0x4000000000000000 >= 0)
  {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v11 = a2;
    }
LABEL_8:
    uint64_t v12 = a4[2];
    if (v11 <= v12) {
      uint64_t v13 = a4[2];
    }
    else {
      uint64_t v13 = v11;
    }
    if (v13)
    {
      sub_1C21AC374(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v14 = (void *)swift_allocObject();
      int64_t v15 = _swift_stdlib_malloc_size(v14);
      uint64_t v16 = v15 - 32;
      if (v15 < 32) {
        uint64_t v16 = v15 - 25;
      }
      void v14[2] = v12;
      void v14[3] = 2 * (v16 >> 3);
      unint64_t v17 = v14 + 4;
      if (v9) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v17 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[v12 + 4]) {
          memmove(v17, a4 + 4, 8 * v12);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C226EB7C(0, v12, (unint64_t)v17, (uint64_t)a4, a7);
LABEL_24:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  return result;
}

void *sub_1C226DDC0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2270C8C(0, &qword_1EA2DF608, (uint64_t)&type metadata for GatewayIdentifiedClinicalAccount, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C226FAAC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226DEF0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C21AC374(0, &qword_1EA2DF600, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C226FBA0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226E02C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C21AC374(0, &qword_1EA2DF4D8, (uint64_t (*)(uint64_t))sub_1C226F98C, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C226FC8C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C226E180(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C21AC374(0, &qword_1EA2DF4E8, (uint64_t (*)(uint64_t))sub_1C226FD98, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C226EC88(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1C226E2D4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C226D23C(a1, a2, a3, a4, &qword_1EBB6F9B8, (uint64_t)&type metadata for DisplayCategory.Kind);
}

void *sub_1C226E2E8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2270C8C(0, &qword_1EA2DF5F8, (uint64_t)&type metadata for IconTextListView.ListItem, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C2270838(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C226E418(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C21AC08C(a1, a2, a3, a4, &qword_1EA2DF5C8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordKind, (uint64_t (*)(void))type metadata accessor for CategoryRecordKind, (uint64_t (*)(void))type metadata accessor for CategoryRecordKind);
}

char *sub_1C226E460(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  unint64_t result = (char *)sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226E54C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226E640(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      sub_1C22702A0(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226E74C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1C2270B34();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226E854(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 104 * a1 + 32;
    unint64_t v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226E948(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(void))
{
  uint64_t v6 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v6 & 0x8000000000000000) == 0)
  {
    unint64_t v7 = a4 + 40 * a1 + 32;
    unint64_t v8 = a3 + 40 * v6;
    if (v7 >= v8 || v7 + 40 * v6 <= a3)
    {
      sub_1C22701EC(0, a5, a6);
      swift_arrayInitWithCopy();
      return v8;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226EA60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1C2270AE4(0, (unint64_t *)&qword_1EA2DEA40);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226EB7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      a5(0);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226EC88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1C226FD98();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226ED94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226EE8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      sub_1C21ABCB4(0, &qword_1EA2DE878);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226EFB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1C21ABCB4(0, (unint64_t *)&qword_1EA2DE7C0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226F0CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 120 * a1 + 32;
    unint64_t v6 = a3 + 120 * v4;
    if (v5 >= v6 || v5 + 120 * v4 <= a3)
    {
      sub_1C21ABCB4(0, &qword_1EA2DE840);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226F1F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 96 * a1 + 32;
    unint64_t v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      sub_1C21ABCB4(0, &qword_1EA2DE818);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226F314(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      sub_1C21ABCB4(0, &qword_1EA2DE7F8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226F434(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 7) + 32;
    unint64_t v6 = a3 + (v4 << 7);
    if (v5 >= v6 || v5 + (v4 << 7) <= a3)
    {
      sub_1C21ABCB4(0, &qword_1EA2DE7D0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226F554(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226F648(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_1C2270AE4(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226F760(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1C2223C88();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226F868(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1C22706A8(0, (unint64_t *)&qword_1EA2DF5A8, MEMORY[0x1E4FBB718]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

void sub_1C226F98C(uint64_t a1)
{
}

uint64_t sub_1C226F9B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226FAAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

char *sub_1C226FBA0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C226FC8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1C226F98C(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

void sub_1C226FD98()
{
  if (!qword_1EA2E33A0)
  {
    sub_1C21AC374(255, &qword_1EA2DF4F0, (uint64_t (*)(uint64_t))type metadata accessor for MedicalRecordChartDataSource, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E33A0);
    }
  }
}

void sub_1C226FE30()
{
  if (!qword_1EA2DF500)
  {
    sub_1C22701EC(255, &qword_1EA2DF508, (void (*)(void))sub_1C226FEAC);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF500);
    }
  }
}

unint64_t sub_1C226FEAC()
{
  unint64_t result = qword_1EA2DF510;
  if (!qword_1EA2DF510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF510);
  }
  return result;
}

void sub_1C226FF00()
{
  if (!qword_1EA2DF518)
  {
    sub_1C22701EC(255, &qword_1EA2DF520, (void (*)(void))sub_1C226FF7C);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF518);
    }
  }
}

unint64_t sub_1C226FF7C()
{
  unint64_t result = qword_1EA2DF528;
  if (!qword_1EA2DF528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF528);
  }
  return result;
}

void sub_1C226FFD0()
{
  if (!qword_1EA2DF530)
  {
    sub_1C22701EC(255, &qword_1EA2DF538, (void (*)(void))sub_1C227004C);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF530);
    }
  }
}

unint64_t sub_1C227004C()
{
  unint64_t result = qword_1EA2DF540;
  if (!qword_1EA2DF540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF540);
  }
  return result;
}

void sub_1C22700A0()
{
  if (!qword_1EA2DF548)
  {
    sub_1C22701EC(255, &qword_1EA2DF550, (void (*)(void))sub_1C227011C);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF548);
    }
  }
}

unint64_t sub_1C227011C()
{
  unint64_t result = qword_1EA2DF558;
  if (!qword_1EA2DF558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF558);
  }
  return result;
}

void sub_1C2270170()
{
  if (!qword_1EA2DF560)
  {
    sub_1C22701EC(255, &qword_1EA2DF568, (void (*)(void))sub_1C227024C);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF560);
    }
  }
}

void sub_1C22701EC(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = _s12SortedRecordVMa();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C227024C()
{
  unint64_t result = qword_1EA2DF570;
  if (!qword_1EA2DF570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF570);
  }
  return result;
}

void sub_1C22702A0(uint64_t a1)
{
}

void sub_1C22702C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C2270334()
{
  if (!qword_1EA2DF590)
  {
    unint64_t v0 = sub_1C254F340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF590);
    }
  }
}

void sub_1C2270398()
{
  if (!qword_1EA2DE7B8)
  {
    sub_1C21ABCB4(255, (unint64_t *)&qword_1EA2DE7C0);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE7B8);
    }
  }
}

void sub_1C2270404()
{
  if (!qword_1EA2DE7C8)
  {
    sub_1C21ABCB4(255, &qword_1EA2DE7D0);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE7C8);
    }
  }
}

void sub_1C2270474()
{
  if (!qword_1EA2DE7F0)
  {
    sub_1C21ABCB4(255, &qword_1EA2DE7F8);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE7F0);
    }
  }
}

void sub_1C22704E4()
{
  if (!qword_1EA2DE810)
  {
    sub_1C21ABCB4(255, &qword_1EA2DE818);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE810);
    }
  }
}

void sub_1C2270554()
{
  if (!qword_1EA2DE838)
  {
    sub_1C21ABCB4(255, &qword_1EA2DE840);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE838);
    }
  }
}

void sub_1C22705C4()
{
  if (!qword_1EA2DE870)
  {
    sub_1C21ABCB4(255, &qword_1EA2DE878);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE870);
    }
  }
}

void sub_1C2270634()
{
  if (!qword_1EA2DF5A0)
  {
    sub_1C22706A8(255, (unint64_t *)&qword_1EA2DF5A8, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF5A0);
    }
  }
}

void sub_1C22706A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C2270AE4(255, (unint64_t *)&qword_1EA2DEA40);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C227071C(uint64_t a1)
{
}

char *sub_1C2270750(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    uint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  unint64_t result = (char *)sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2270838(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C227092C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

void sub_1C2270A88(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C2270AE4(255, a3);
    unint64_t v4 = sub_1C2550820();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2270AE4(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1C2270B34()
{
  if (!qword_1EA2DF5F0)
  {
    sub_1C21AB51C(255, (unint64_t *)&unk_1EA2DE0C0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2DF5F0);
    }
  }
}

void sub_1C2270BAC()
{
  if (!qword_1EA2DF618)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6F510);
    unint64_t v0 = sub_1C254F340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF618);
    }
  }
}

void sub_1C2270C24()
{
  if (!qword_1EA2DF648)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EA2DE708);
    unint64_t v0 = sub_1C254F7A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF648);
    }
  }
}

void sub_1C2270C8C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t MedicalRecordTimelineAccountHeaderItem.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2270D08()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  sub_1C254CB20();

  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  strcpy((char *)v7, "AccountHeader.");
  HIBYTE(v7[1]) = -18;
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v7[0];
}

uint64_t static MedicalRecordTimelineAccountHeaderItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
  unint64_t v4 = *(void **)(a1 + 16);
  id v5 = *(void **)(a2 + 16);
  id v6 = v4;
  id v7 = v5;
  LOBYTE(v5) = sub_1C254FF70();

  return v5 & 1;
}

void sub_1C2270EC4()
{
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 16);
  sub_1C254FF80();
}

uint64_t MedicalRecordTimelineAccountHeaderItem.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicalRecordTimelineAccountHeaderItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2270FB0()
{
  sub_1C25509C0();
  sub_1C254F570();
  id v1 = *(id *)(v0 + 16);
  sub_1C254FF80();

  return sub_1C2550A10();
}

uint64_t sub_1C227100C()
{
  uint64_t v1 = *v0;
  sub_1C25509C0();
  sub_1C254F570();
  id v2 = *(id *)(v1 + 16);
  sub_1C254FF80();

  return sub_1C2550A10();
}

void sub_1C227106C()
{
  uint64_t v1 = *v0;
  sub_1C254F570();
  id v2 = *(id *)(v1 + 16);
  sub_1C254FF80();
}

uint64_t sub_1C22710D0()
{
  sub_1C25509C0();
  uint64_t v1 = *v0;
  sub_1C254F570();
  id v2 = *(id *)(v1 + 16);
  sub_1C254FF80();

  return sub_1C2550A10();
}

uint64_t sub_1C227112C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2271160()
{
  return sub_1C2270D08();
}

uint64_t sub_1C2271184(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
  unint64_t v4 = *(void **)(v3 + 16);
  id v5 = *(id *)(v2 + 16);
  id v6 = v4;
  char v7 = sub_1C254FF70();

  return v7 & 1;
}

char *sub_1C2271200(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_item];
  uint64_t v10 = (objc_class *)type metadata accessor for AccountView2(0);
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  id v11 = objc_allocWithZone(v10);
  unint64_t v12 = v4;
  id v13 = objc_msgSend(v11, sel_init);
  *(void *)&v12[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_accountView] = v13;
  id v14 = v13;
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v38.receiver = v12;
  v38.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell();
  int64_t v15 = (char *)objc_msgSendSuper2(&v38, sel_initWithFrame_, a1, a2, a3, a4);
  id v16 = objc_msgSend(v15, sel_contentView);
  uint64_t v17 = OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_accountView;
  objc_msgSend(v16, sel_addSubview_, *(void *)&v15[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_accountView]);

  sub_1C21ACA3C();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C255DBA0;
  id v19 = objc_msgSend(*(id *)&v15[v17], sel_leadingAnchor);
  id v20 = objc_msgSend(v15, sel_contentView);
  id v21 = objc_msgSend(v20, sel_leadingAnchor);

  id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, 14.0);
  *(void *)(v18 + 32) = v22;
  id v23 = objc_msgSend(*(id *)&v15[v17], sel_trailingAnchor);
  id v24 = objc_msgSend(v15, sel_contentView);
  id v25 = objc_msgSend(v24, sel_trailingAnchor);

  id v26 = objc_msgSend(v23, sel_constraintEqualToAnchor_constant_, v25, -16.0);
  *(void *)(v18 + 40) = v26;
  id v27 = objc_msgSend(*(id *)&v15[v17], sel_topAnchor);
  id v28 = objc_msgSend(v15, sel_contentView);
  id v29 = objc_msgSend(v28, sel_topAnchor);

  id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_constant_, v29, 16.0);
  *(void *)(v18 + 48) = v30;
  id v31 = objc_msgSend(v15, sel_contentView);
  id v32 = objc_msgSend(v31, sel_bottomAnchor);

  id v33 = objc_msgSend(*(id *)&v15[v17], sel_bottomAnchor);
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, 16.0);

  *(void *)(v18 + 56) = v34;
  sub_1C254F730();
  unint64_t v35 = self;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  unint64_t v36 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_activateConstraints_, v36);

  return v15;
}

id sub_1C22715C4(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_item];
  unint64_t v4 = (objc_class *)type metadata accessor for AccountView2(0);
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  id v5 = objc_allocWithZone(v4);
  id v6 = v1;
  id v7 = objc_msgSend(v5, sel_init);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_accountView] = v7;
  id v8 = v7;
  objc_msgSend(v8, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v11.receiver = v6;
  v11.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell();
  id v9 = objc_msgSendSuper2(&v11, sel_initWithCoder_, a1);

  return v9;
}

uint64_t sub_1C22716B0(uint64_t a1, void *a2)
{
  sub_1C2227014(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_item;
  swift_beginAccess();
  sub_1C2232E74((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C2271740();
  return sub_1C2272220((uint64_t)v5, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t sub_1C2271740()
{
  uint64_t v1 = sub_1C254E560();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  unint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22721CC(0, &qword_1EA2DF190, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v39 - v6;
  uint64_t v8 = sub_1C254CB40();
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AccountViewData(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v0[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_item];
  swift_beginAccess();
  sub_1C2227014(v15, (uint64_t)v45);
  if (!v45[3])
  {
    sub_1C2272220((uint64_t)v45, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
LABEL_6:
    sub_1C254E510();
    id v26 = v0;
    id v27 = sub_1C254E550();
    os_log_type_t v28 = sub_1C254FA20();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)id v29 = 136446210;
      uint64_t v43 = v1;
      uint64_t v44 = v30;
      sub_1C2227014(v15, (uint64_t)v45);
      sub_1C22721CC(0, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
      uint64_t v31 = sub_1C254F510();
      v45[0] = sub_1C21AD354(v31, v32, &v44);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v27, v28, "Incorrect view model for MedicalRecordTimelineAccountHeaderItem: %{public}s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v30, -1, -1);
      MEMORY[0x1C875A0B0](v29, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v43);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
  uint64_t v41 = v12;
  sub_1C22270A8();
  type metadata accessor for MedicalRecordTimelineAccountHeaderItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v16 = v44;
  id v17 = objc_msgSend(*(id *)(v44 + 16), sel_identifier);
  sub_1C254CB20();

  id v18 = objc_msgSend(*(id *)(v16 + 16), sel_title);
  uint64_t v19 = sub_1C254F470();
  uint64_t v39 = v20;
  uint64_t v40 = v19;

  id v21 = objc_msgSend(*(id *)(v16 + 16), sel_subtitle);
  if (v21)
  {
    id v22 = v21;
    uint64_t v23 = sub_1C254F470();
    uint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  uint64_t v34 = v41;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v14, v10, v43);
  unint64_t v35 = &v14[*(int *)(v11 + 20)];
  uint64_t v36 = v39;
  *(void *)unint64_t v35 = v40;
  *((void *)v35 + 1) = v36;
  uint64_t v37 = (uint64_t *)&v14[*(int *)(v11 + 24)];
  *uint64_t v37 = v23;
  v37[1] = v25;
  objc_super v38 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_accountView];
  sub_1C2256F88((uint64_t)v14, (uint64_t)v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v7, 0, 1, v11);
  sub_1C22545C4((uint64_t)v7);
  sub_1C2272220((uint64_t)v7, &qword_1EA2DF190, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  objc_msgSend(v38, sel_setNeedsDisplay);
  swift_release();
  return sub_1C2256718((uint64_t)v14);
}

uint64_t sub_1C2271CB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C2271D08(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C2271740();
  return sub_1C2272220(a1, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

uint64_t (*sub_1C2271D94(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2271DF4;
}

uint64_t sub_1C2271DF4(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2271740();
  }
  return result;
}

uint64_t sub_1C2271E28@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 0;
  uint64_t v2 = *MEMORY[0x1E4F66478];
  uint64_t v3 = sub_1C254DA60();
  unint64_t v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

id MedicalRecordTimelineAccountHeaderItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountHeaderItemCell()
{
  return self;
}

unint64_t sub_1C2271EFC()
{
  unint64_t result = qword_1EA2DF660;
  if (!qword_1EA2DF660)
  {
    type metadata accessor for MedicalRecordTimelineAccountHeaderItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DF660);
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordTimelineAccountHeaderItem()
{
  return self;
}

uint64_t sub_1C2271FD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI42MedicalRecordTimelineAccountHeaderItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a2);
}

uint64_t method lookup function for MedicalRecordTimelineAccountHeaderItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineAccountHeaderItem);
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItem.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItem.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t method lookup function for MedicalRecordTimelineAccountHeaderItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordTimelineAccountHeaderItemCell);
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItemCell.didSelectCell(_:in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordTimelineAccountHeaderItemCell.deselectionBehavior.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

void sub_1C22721CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2272220(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C22721CC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C227227C(unint64_t a1)
{
  return sub_1C2272FD4(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C2294184);
}

uint64_t sub_1C2272294(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1C226BFC0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22723E8(unint64_t a1)
{
  return sub_1C2272DBC(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_1C229488C, (void (*)(void))sub_1C2270C24);
}

uint64_t sub_1C2272414(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1C226C148(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  sub_1C2270AE4(0, (unint64_t *)&qword_1EA2DEA40);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2272594(uint64_t a1)
{
  return sub_1C2272868(a1, (uint64_t (*)(void))sub_1C226C100, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
}

uint64_t sub_1C22725C0(unint64_t a1)
{
  return sub_1C2272FD4(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C2294D44);
}

uint64_t sub_1C22725D8(unint64_t a1)
{
  return sub_1C2272FD4(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C2294FA0);
}

uint64_t sub_1C22725F0(unint64_t a1)
{
  return sub_1C2272FD4(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C22951F0);
}

uint64_t sub_1C2272608(unint64_t a1)
{
  return sub_1C2272FD4(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C2295440);
}

uint64_t sub_1C2272620(unint64_t a1)
{
  return sub_1C2272FD4(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C2295690);
}

uint64_t sub_1C2272638(unint64_t a1)
{
  return sub_1C2272FD4(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C22958E0);
}

uint64_t sub_1C2272650(unint64_t a1)
{
  return sub_1C2272FD4(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C2295D80);
}

uint64_t sub_1C2272668(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1C226CD5C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  sub_1C2270AE4(0, (unint64_t *)&qword_1EA2DED90);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22727E4(uint64_t a1)
{
  return sub_1C2272868(a1, (uint64_t (*)(void))sub_1C226D198, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
}

uint64_t sub_1C2272810(uint64_t a1)
{
  return sub_1C2272868(a1, (uint64_t (*)(void))sub_1C226C270, MEMORY[0x1E4F66840]);
}

uint64_t sub_1C227283C(uint64_t a1)
{
  return sub_1C2272868(a1, (uint64_t (*)(void))sub_1C226D014, MEMORY[0x1E4F66468]);
}

uint64_t sub_1C2272868(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t *v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

void sub_1C2272A24(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v8 = v3[3] >> 1, v8 < v5))
  {
    if (v4 <= v5) {
      int64_t v9 = v4 + v2;
    }
    else {
      int64_t v9 = v4;
    }
    uint64_t v3 = sub_1C226D350(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    int64_t v8 = v3[3] >> 1;
  }
  uint64_t v10 = v3[2];
  uint64_t v11 = v8 - v10;
  unint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
    if (!v2)
    {
LABEL_19:
      swift_bridgeObjectRelease();
      if (v12 != v11)
      {
LABEL_20:
        *(void *)uint64_t v1 = v3;
        return;
      }
LABEL_23:
      sub_1C22858FC(0, &qword_1EA2DF9A0, (uint64_t (*)(uint64_t))sub_1C2270C24, MEMORY[0x1E4FBB320]);
      goto LABEL_20;
    }
    goto LABEL_22;
  }
  if (v11 < (uint64_t)v12)
  {
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v13 = (unint64_t)&v3[v10 + 4];
  if (a1 + 32 < v13 + 8 * v12 && v13 < a1 + 32 + 8 * v12) {
    goto LABEL_26;
  }
  sub_1C2270C24();
  swift_arrayInitWithCopy();
  if (v12 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v15 = v3[2];
  BOOL v16 = __OFADD__(v15, v12);
  uint64_t v17 = v15 + v12;
  if (!v16)
  {
    v3[2] = v17;
    goto LABEL_19;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  sub_1C25506A0();
  __break(1u);
}

uint64_t sub_1C2272BD4(unint64_t a1)
{
  return sub_1C2272FD4(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C2295FDC);
}

uint64_t sub_1C2272BEC(unint64_t a1)
{
  return sub_1C2272FD4(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C2294630);
}

uint64_t sub_1C2272C04(unint64_t a1)
{
  return sub_1C2272FD4(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C229622C);
}

uint64_t sub_1C2272C1C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1C226E180(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[3 * v9 + 4];
  if (a1 + 32 < v10 + 24 * v8 && v10 < a1 + 32 + 24 * v8) {
    goto LABEL_24;
  }
  sub_1C226FD98();
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2272D90(unint64_t a1)
{
  return sub_1C2272DBC(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t))sub_1C2296488, (void (*)(void))sub_1C2284BD0);
}

uint64_t sub_1C2272DBC(unint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, unint64_t), void (*a3)(void))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C2550620();
    swift_bridgeObjectRelease();
    uint64_t v9 = v24 + v7;
    if (!__OFADD__(v24, v7)) {
      goto LABEL_5;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v8 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v9 = v8 + v7;
  if (__OFADD__(v8, v7)) {
    goto LABEL_26;
  }
LABEL_5:
  unint64_t v10 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v3 = v10;
  uint64_t v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v10 & 0x8000000000000000) == 0
    && (v10 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v12 = 1;
  }
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v14 <= v9) {
    uint64_t v14 = v9;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = MEMORY[0x1C87588F0](v12, v14, 1, v10);
  swift_bridgeObjectRelease();
  uint64_t *v3 = v15;
  uint64_t v13 = v15 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
  uint64_t v16 = *(void *)(v13 + 16);
  uint64_t v17 = (*(void *)(v13 + 24) >> 1) - v16;
  uint64_t result = a2(v13 + 8 * v16 + 32, v17, a1);
  if (v19 < v7)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    a3(0);
    goto LABEL_20;
  }
  uint64_t v20 = v19;
  if (v19 >= 1)
  {
    uint64_t v21 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v22 = __OFADD__(v21, v19);
    uint64_t v23 = v21 + v19;
    if (v22)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v23;
  }
  swift_bridgeObjectRelease();
  if (v20 == v17) {
    goto LABEL_28;
  }
LABEL_20:
  return sub_1C254F730();
}

uint64_t sub_1C2272FBC(unint64_t a1)
{
  return sub_1C2272FD4(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C2296940);
}

uint64_t sub_1C2272FD4(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x1C87588F0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *unint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();
  return sub_1C254F730();
}

uint64_t static RecordLookupError.== infix(_:_:)()
{
  return 1;
}

uint64_t RecordLookupError.hash(into:)()
{
  return sub_1C25509D0();
}

uint64_t RecordLookupError.hashValue.getter()
{
  return sub_1C2550A10();
}

uint64_t sub_1C227321C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C2273254(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  int64_t v4 = (void *)MEMORY[0x1C875A200](v3);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_stopQuery_, a2);
  }
}

uint64_t HKHealthStore.fetchRecord(recordId:categoryKind:completion:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  int v4 = *a2;
  if (v4 == 11)
  {
    uint64_t v5 = (char *)&unk_1F1D8E218;
    int64_t v6 = qword_1F1D8E228;
    if (!qword_1F1D8E228)
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = MEMORY[0x1E4FBC860];
LABEL_31:
      uint64_t aBlock = MEMORY[0x1E4FBC860];
      uint64_t v56 = *(void *)(v7 + 16);
      if (v56)
      {
        swift_bridgeObjectRetain();
        uint64_t v57 = 80;
        do
        {
          unint64_t v58 = swift_bridgeObjectRetain();
          sub_1C2272FD4(v58, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C2294D44);
          v57 += 72;
          --v56;
        }
        while (v56);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v59 = swift_allocObject();
      *(void *)(v59 + 16) = a3;
      *(void *)(v59 + 24) = a4;
      id v60 = objc_allocWithZone(MEMORY[0x1E4F2B430]);
      sub_1C21AB51C(0, &qword_1EBB6EF58);
      swift_retain();
      uint64_t v61 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      uint64_t v91 = sub_1C22835EC;
      *(void *)&long long v92 = v59;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      unint64_t v88 = 1107296256;
      uint64_t v89 = sub_1C2274608;
      uint64_t v90 = &block_descriptor_12_0;
      unint64_t v62 = _Block_copy(&aBlock);
      id v63 = objc_msgSend(v60, sel_initWithQueryDescriptors_sortDescriptors_followingAnchor_upToAndIncludingAnchor_distinctByKeyPaths_limit_resultsHandler_, v61, 0, 0, 0, 0, 1, v62);

      _Block_release(v62);
      swift_release();
      objc_msgSend(v69, sel_executeQuery_, v63);
      return (uint64_t)v63;
    }
  }
  else
  {
    sub_1C2285BD8(0, &qword_1EBB6F9B8, (uint64_t)&type metadata for DisplayCategory.Kind, MEMORY[0x1E4FBBE00]);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C255CD90;
    *(unsigned char *)(v8 + 32) = v4;
    uint64_t v5 = (char *)v8;
    int64_t v6 = 1;
  }
  uint64_t v94 = MEMORY[0x1E4FBC860];
  sub_1C2274784(0, v6, 0);
  uint64_t v7 = v94;
  id v73 = self;
  uint64_t v9 = 0;
  int64_t v70 = v6;
  os_log_t v71 = v5 + 32;
  while (1)
  {
    uint64_t v74 = v9;
    uint64_t v10 = v71[v9];
    id v11 = objc_msgSend(v73, sel_supportedRecordCategoriesByCategoryType);
    if (v11) {
      break;
    }
    uint64_t v16 = (void *)MEMORY[0x1E4FBC868];
    if (!*(void *)(MEMORY[0x1E4FBC868] + 16)) {
      goto LABEL_25;
    }
LABEL_23:
    uint64_t v39 = sub_1C21A93C4(v10);
    if (v40)
    {
      uint64_t v41 = v16[7] + 72 * v39;
      char v42 = *(unsigned char *)v41;
      uint64_t v43 = *(void **)(v41 + 8);
      uint64_t v44 = *(uint64_t (**)(uint64_t, void *, uint64_t, void *, void *))(v41 + 16);
      unint64_t v45 = *(void **)(v41 + 24);
      unint64_t v46 = *(void (**)(uint64_t, unint64_t, uint64_t, void *))(v41 + 32);
      long long v80 = *(_OWORD *)(v41 + 56);
      long long v83 = *(_OWORD *)(v41 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v47 = *((id *)&v80 + 1);
      id v48 = v43;
      swift_bridgeObjectRelease();
      long long v50 = v80;
      long long v49 = v83;
      LOBYTE(aBlock) = v42;
      unint64_t v88 = (unint64_t)v48;
      uint64_t v89 = v44;
      uint64_t v90 = v45;
      uint64_t v91 = v46;
      long long v92 = v83;
      long long v93 = v80;
      goto LABEL_27;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    id v51 = objc_msgSend(v73, sel_unknownRecordCategory);
    if (!v51) {
      goto LABEL_40;
    }
    sub_1C21AA50C(v51, (uint64_t)&aBlock);
    char v42 = aBlock;
    id v48 = (id)v88;
    uint64_t v44 = v89;
    unint64_t v45 = v90;
    unint64_t v46 = v91;
    long long v49 = v92;
    long long v50 = v93;
LABEL_27:
    uint64_t v52 = v74;
    uint64_t v94 = v7;
    unint64_t v54 = *(void *)(v7 + 16);
    unint64_t v53 = *(void *)(v7 + 24);
    if (v54 >= v53 >> 1)
    {
      long long v81 = v50;
      long long v84 = v49;
      sub_1C2274784(v53 > 1, v54 + 1, 1);
      long long v50 = v81;
      long long v49 = v84;
      uint64_t v52 = v74;
      uint64_t v7 = v94;
    }
    *(void *)(v7 + 16) = v54 + 1;
    uint64_t v55 = v7 + 72 * v54;
    *(unsigned char *)(v55 + 32) = v42;
    uint64_t v9 = v52 + 1;
    *(void *)(v55 + 40) = v48;
    *(void *)(v55 + 48) = v44;
    *(void *)(v55 + 56) = v45;
    *(void *)(v55 + 64) = v46;
    *(_OWORD *)(v55 + 72) = v49;
    *(_OWORD *)(v55 + 88) = v50;
    if (v9 == v6)
    {
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
  }
  uint64_t v12 = v11;
  unsigned int v72 = v10;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FFC0);
  sub_1C21A818C((unint64_t *)&qword_1EBB6F990, (unint64_t *)&qword_1EBB70030);
  unint64_t v13 = sub_1C254F2D0();

  sub_1C21AA128(v13);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if (!*(void *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = (void *)MEMORY[0x1E4FBC868];
LABEL_22:
    swift_bridgeObjectRelease_n();
    int64_t v6 = v70;
    uint64_t v10 = v72;
    if (!v16[2]) {
      goto LABEL_25;
    }
    goto LABEL_23;
  }
  sub_1C21A95CC();
  uint64_t v16 = (void *)sub_1C2550680();
  uint64_t v17 = *(void *)(v15 + 16);
  uint64_t v86 = v16;
  swift_bridgeObjectRetain();
  uint64_t v77 = v17;
  if (!v17) {
    goto LABEL_22;
  }
  uint64_t v18 = 0;
  unint64_t v19 = 0;
  uint64_t v76 = v15;
  while (v19 < *(void *)(v15 + 16))
  {
    uint64_t v20 = v15 + v18;
    long long v79 = *(_OWORD *)(v15 + v18 + 80);
    long long v82 = *(_OWORD *)(v15 + v18 + 96);
    char v21 = *(unsigned char *)(v15 + v18 + 40);
    uint64_t v22 = *(unsigned __int8 *)(v15 + v18 + 32);
    uint64_t v24 = *(void *)(v15 + v18 + 64);
    uint64_t v23 = *(void *)(v15 + v18 + 72);
    uint64_t v25 = *(void **)(v15 + v18 + 48);
    uint64_t v26 = *(void *)(v20 + 56);
    id v78 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v27 = *((id *)&v82 + 1);
    if (!v25) {
      goto LABEL_22;
    }
    uint64_t v75 = v27;
    unint64_t v28 = sub_1C21A93C4(v22);
    uint64_t v30 = v16[2];
    BOOL v31 = (v29 & 1) == 0;
    BOOL v32 = __OFADD__(v30, v31);
    uint64_t v33 = v30 + v31;
    if (v32) {
      goto LABEL_38;
    }
    char v34 = v29;
    if (v16[3] < v33)
    {
      sub_1C2279214(v33, 1);
      uint64_t v16 = v86;
      unint64_t v28 = sub_1C21A93C4(v22);
      if ((v34 & 1) != (v35 & 1)) {
        goto LABEL_43;
      }
    }
    if (v34) {
      goto LABEL_41;
    }
    v16[(v28 >> 6) + 8] |= 1 << v28;
    *(unsigned char *)(v16[6] + v28) = v22;
    uint64_t v36 = v16[7] + 72 * v28;
    *(unsigned char *)uint64_t v36 = v21;
    *(void *)(v36 + 8) = v78;
    *(void *)(v36 + 16) = v26;
    *(void *)(v36 + 24) = v24;
    *(void *)(v36 + 32) = v23;
    *(_OWORD *)(v36 + 40) = v79;
    *(_OWORD *)(v36 + 56) = v82;
    uint64_t v37 = v16[2];
    BOOL v32 = __OFADD__(v37, 1);
    uint64_t v38 = v37 + 1;
    if (v32) {
      goto LABEL_39;
    }
    ++v19;
    void v16[2] = v38;
    v18 += 80;
    uint64_t v15 = v76;
    if (v77 == v19) {
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  uint64_t v65 = (void *)swift_allocError();
  swift_willThrow();
  id v85 = v65;
  id v66 = v65;
  sub_1C2270AE4(0, (unint64_t *)&qword_1EBB70060);
  if (swift_dynamicCast())
  {
    uint64_t aBlock = 0;
    unint64_t v88 = 0xE000000000000000;
    sub_1C25503A0();
    sub_1C254F5A0();
    sub_1C25504F0();
    sub_1C254F5A0();
    sub_1C25505F0();
    __break(1u);
LABEL_43:
    sub_1C2550910();
    __break(1u);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

void sub_1C2273AEC(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void (*a5)(void *, uint64_t))
{
  uint64_t v7 = a2;
  if (!a2) {
    goto LABEL_11;
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1C2550620()) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
    goto LABEL_11;
  }
  uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v9 = (id)MEMORY[0x1C87588E0](0, v7);
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v9 = *(id *)(v7 + 32);
  }
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (!v7) {

  }
LABEL_11:
  sub_1C2285AF0();
  id v11 = (void *)swift_allocError();
  uint64_t v12 = v11;
  if (a4)
  {
    id v13 = a4;

    uint64_t v14 = 1;
  }
  else if (v7)
  {

    uint64_t v14 = 0;
    a4 = (void *)v7;
  }
  else
  {
    uint64_t v14 = 1;
    a4 = v11;
  }
  a5(a4, v14);
  sub_1C21A8180(a4);
}

uint64_t HKHealthStore.fetchRecords(for:with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v10 = objc_msgSend(self, sel_allSupportedSampleTypes);
  uint64_t v11 = MEMORY[0x1E4FBC870];
  if (v10)
  {
    uint64_t v12 = v10;
    sub_1C21AB51C(0, &qword_1EBB6FF78);
    unint64_t v13 = sub_1C254F710();

    uint64_t v14 = sub_1C249272C(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = MEMORY[0x1E4FBC870];
  }
  uint64_t v15 = MEMORY[0x1E4FBC838];
  uint64_t v46 = a3;
  if ((v14 & 0xC000000000000001) == 0)
  {
    uint64_t v11 = sub_1C228322C(v14);
    goto LABEL_31;
  }
  aBlock[0] = v11;
  sub_1C2550250();
  if (!sub_1C25502D0()) {
    goto LABEL_29;
  }
  sub_1C21AB51C(0, &qword_1EBB6FF78);
  do
  {
    swift_dynamicCast();
    id v16 = objc_msgSend(v47, sel_identifier);
    uint64_t v17 = sub_1C254F470();
    uint64_t v19 = v18;

    if (v17 == sub_1C254F470() && v19 == v20)
    {
      swift_bridgeObjectRelease_n();
LABEL_8:

      continue;
    }
    char v22 = sub_1C2550870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_8;
    }
    uint64_t v23 = aBlock[0];
    unint64_t v24 = *(void *)(aBlock[0] + 16);
    if (*(void *)(aBlock[0] + 24) <= v24)
    {
      sub_1C2282538(v24 + 1, (void (*)(void))sub_1C2285A5C);
      uint64_t v23 = aBlock[0];
    }
    uint64_t result = sub_1C254FF60();
    uint64_t v26 = v23 + 56;
    uint64_t v27 = -1 << *(unsigned char *)(v23 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v23 + 56 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v23 + 56 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        BOOL v33 = v29 == v32;
        if (v29 == v32) {
          unint64_t v29 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v26 + 8 * v29);
      }
      while (v34 == -1);
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(void *)(v26 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    *(void *)(*(void *)(v23 + 48) + 8 * v30) = v47;
    ++*(void *)(v23 + 16);
  }
  while (sub_1C25502D0());
  uint64_t v11 = aBlock[0];
  uint64_t v15 = MEMORY[0x1E4FBC838];
LABEL_29:
  swift_release();
LABEL_31:
  id v35 = objc_msgSend(self, sel_predicateForSamplesWithConceptIdentifier_keyPath_, a1, a2);
  sub_1C22835F4(v11, (uint64_t)v35);
  swift_release();

  sub_1C2285BD8(0, (unint64_t *)&qword_1EBB6F4E0, v15 + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1C255CEB0;
  sub_1C254F470();
  id v37 = objc_allocWithZone(MEMORY[0x1E4F29008]);
  uint64_t v38 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v39 = objc_msgSend(v37, sel_initWithKey_ascending_, v38, 0);

  *(void *)(v36 + 32) = v39;
  sub_1C254F730();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v46;
  *(void *)(v40 + 24) = a4;
  id v41 = objc_allocWithZone(MEMORY[0x1E4F2B430]);
  sub_1C21AB51C(0, &qword_1EBB6EF58);
  swift_retain();
  char v42 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  uint64_t v43 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1C2283838;
  aBlock[5] = v40;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2274608;
  aBlock[3] = &block_descriptor_18_0;
  uint64_t v44 = _Block_copy(aBlock);
  id v45 = objc_msgSend(v41, sel_initWithQueryDescriptors_sortDescriptors_followingAnchor_upToAndIncludingAnchor_distinctByKeyPaths_limit_resultsHandler_, v42, v43, 0, 0, 0, 0, v44);

  _Block_release(v44);
  swift_release();
  objc_msgSend(v5, sel_executeQuery_, v45);

  return (uint64_t)v45;
}

void sub_1C22741FC(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void (*a5)(void *, uint64_t))
{
  if (a2) {
    uint64_t v7 = sub_1C21EF864(a2);
  }
  else {
    uint64_t v7 = 0;
  }
  sub_1C2285AF0();
  uint64_t v8 = (void *)swift_allocError();
  id v9 = v8;
  if (a4)
  {
    id v10 = a4;

    swift_bridgeObjectRelease();
    uint64_t v11 = 1;
  }
  else if (v7)
  {

    uint64_t v11 = 0;
    a4 = (void *)v7;
  }
  else
  {
    uint64_t v11 = 1;
    a4 = v8;
  }
  a5(a4, v11);
  sub_1C2285A50(a4, v11);
}

uint64_t HKHealthStore.fetchRecordsForObjC(for:keyPath:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  swift_retain();

  return swift_release();
}

void sub_1C2274374(id a1, char a2, void (*a3)(uint64_t, id))
{
  if (a2)
  {
    id v6 = a1;
    sub_1C2270AE4(0, (unint64_t *)&qword_1EBB70060);
    swift_willThrowTypedImpl();
    id v7 = a1;
    a3(MEMORY[0x1E4FBC860], a1);
    sub_1C2285A50(a1, 1);
    sub_1C2285A50(a1, 1);
  }
  else
  {
    uint64_t v5 = swift_bridgeObjectRetain();
    a3(v5, 0);
    sub_1C2285A50(a1, 0);
  }
}

uint64_t sub_1C2274460(void *a1, int a2, void *a3, void *a4, void *aBlock)
{
  uint64_t v8 = _Block_copy(aBlock);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1C2284940;
  *(void *)(v10 + 24) = v9;
  id v11 = a3;
  id v12 = a4;
  id v13 = a1;
  swift_retain();
  uint64_t v14 = (void *)HKHealthStore.fetchRecords(for:with:completion:)((uint64_t)v11, (uint64_t)v12, (uint64_t)sub_1C2285CD8, v10);

  swift_release();
  return swift_release();
}

void sub_1C2274560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C21AB51C(0, &qword_1EBB6F978);
  uint64_t v5 = (void *)sub_1C254F700();
  if (a2) {
    uint64_t v6 = sub_1C254C810();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

uint64_t sub_1C2274608(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v7 = a3;
  uint64_t v9 = *(void (**)(id, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    sub_1C21AB51C(0, &qword_1EBB6F988);
    uint64_t v7 = sub_1C254F710();
  }
  swift_retain();
  id v10 = a2;
  id v11 = a4;
  id v12 = a5;
  v9(v10, v7, a4, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t sub_1C22746E4()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C227471C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C227475C()
{
  sub_1C2273254(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C2274764(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C227513C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C2274784(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C22752C8(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C22747A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2275474(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C22747C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2277A24(a1, a2, a3, (void *)*v3, &qword_1EA2DF3D8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274814(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2275640(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C2274834(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C22757D4(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274854(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C227596C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C2274874(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2275B14(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274894(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2275CD0(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C22748B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2275E80(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C22748D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2276020(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C22748F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C22761CC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274914(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C227637C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C2274934(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2276524(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274954(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C22766DC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274974(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2276870(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C2274994(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C22769FC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C22749B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2276B98(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C22749D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2276D48(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C22749F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2276EEC(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274A14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2277088(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274A34(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278624(a1, a2, a3, (void *)*v3, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90, MEMORY[0x1E4F66028]);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274A6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2277234(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274A8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C22773D0(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274AAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C22775A4(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C2274ACC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2277724(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C2274AEC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278B68(a1, a2, a3, (void *)*v3, (void (*)(void))sub_1C2285050, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB1A0]);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274B30(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278624(a1, a2, a3, (void *)*v3, &qword_1EA2DF5D8, (unint64_t *)&qword_1EA2DF5E0, (uint64_t)&protocol descriptor for LocalizedEducationSection);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274B68(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C22778A4(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C2274B88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278624(a1, a2, a3, (void *)*v3, &qword_1EA2DF838, (unint64_t *)&qword_1EA2DF840, (uint64_t)&protocol descriptor for MedicalRecordChartPointRepresentable);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274BC0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2277A24(a1, a2, a3, (void *)*v3, &qword_1EA2DF4C8, MEMORY[0x1E4F66840], MEMORY[0x1E4F66840]);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274C10(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2277C88(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C2274C30(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C22787FC(a1, a2, a3, *v3, &qword_1EA2DF620, (uint64_t)&type metadata for SettingsSection);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C2274C60(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2277A24(a1, a2, a3, (void *)*v3, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4F66468]);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274CB0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2277E14(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274CD0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2277FC8(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274CF0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278624(a1, a2, a3, (void *)*v3, &qword_1EA2DF910, &qword_1EA2DF918, (uint64_t)&protocol descriptor for TestResultValueDisplayable);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274D28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2277A24(a1, a2, a3, (void *)*v3, &qword_1EBB6FA58, (uint64_t (*)(uint64_t))type metadata accessor for BrowseCategory, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274D78(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2277A24(a1, a2, a3, (void *)*v3, &qword_1EBB6F9B0, (uint64_t (*)(uint64_t))sub_1C2285704, (uint64_t (*)(void))sub_1C2285704);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274DC8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278190(a1, a2, a3, *v3, &qword_1EA2DF700, (uint64_t)&_s13SortedSectionVN);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C2274DF8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278374(a1, a2, a3, (void *)*v3, &qword_1EA2DF768, &qword_1EA2DF770, &qword_1EA2DE888, (uint64_t)&_s23FormattedRecordMetadataVN);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274E38(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278374(a1, a2, a3, (void *)*v3, &qword_1EA2DF750, &qword_1EA2DF758, &qword_1EA2DE7E0, (uint64_t)&_s22FormattedRecord3ValuesVN);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274E78(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278374(a1, a2, a3, (void *)*v3, &qword_1EA2DF738, &qword_1EA2DF740, &qword_1EA2DE850, (uint64_t)&_s27FormattedRecordValueInRangeVN);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274EB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278374(a1, a2, a3, (void *)*v3, &qword_1EA2DF720, &qword_1EA2DF728, &qword_1EA2DE828, (uint64_t)&_s20FormattedRecordValueVN);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274EF8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278374(a1, a2, a3, (void *)*v3, &qword_1EA2DF708, &qword_1EA2DF710, &qword_1EA2DE808, (uint64_t)&_s15FormattedRecordVN);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274F38(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2277A24(a1, a2, a3, (void *)*v3, &qword_1EA2DF948, (uint64_t (*)(uint64_t))type metadata accessor for CategoryCount, (uint64_t (*)(void))type metadata accessor for CategoryCount);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274F88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278624(a1, a2, a3, (void *)*v3, &qword_1EA2DF848, (unint64_t *)&qword_1EA2DF850, (uint64_t)&protocol descriptor for TestResultRepresentable);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2274FC0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C22787FC(a1, a2, a3, *v3, &qword_1EBB6F9B8, (uint64_t)&type metadata for DisplayCategory.Kind);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C2274FF0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278ED0(a1, a2, a3, *v3, &qword_1EA2DF600, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C227502C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278998(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C227504C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278B68(a1, a2, a3, (void *)*v3, (void (*)(void))sub_1C2283E88, &qword_1EA2DF6E0, MEMORY[0x1E4FBC958]);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2275090(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2278ED0(a1, a2, a3, *v3, &qword_1EA2DF6A0, (uint64_t (*)(uint64_t))type metadata accessor for CGSize);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C22750CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2279048(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C22750EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2277A24(a1, a2, a3, (void *)*v3, &qword_1EA2DF5C8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryRecordKind, (uint64_t (*)(void))type metadata accessor for CategoryRecordKind);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C227513C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2285BD8(0, (unint64_t *)&qword_1EBB6FA60, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  id v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22752C8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2285BD8(0, (unint64_t *)&qword_1EBB70050, (uint64_t)&type metadata for DisplayCategory, MEMORY[0x1E4FBBE00]);
    id v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  id v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[72 * v8]) {
      memmove(v12, v13, 72 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[72 * v8] || v12 >= &v13[72 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2275474(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2225098();
    id v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1C2270AE4(0, (unint64_t *)&qword_1EA2DEA40);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C227560C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2277A24(a1, a2, a3, a4, &qword_1EA2DF3D8, (uint64_t (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
}

uint64_t sub_1C2275640(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2285BD8(0, &qword_1EA2E1520, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22757D4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2270398();
    id v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1C21ABCB4(0, (unint64_t *)&qword_1EA2DE7C0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C227596C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2285BD8(0, &qword_1EA2DF778, (uint64_t)&_s23FormattedRecordMetadataVN, MEMORY[0x1E4FBBE00]);
    id v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2275B14(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C22705C4();
    id v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 72 * v8) {
      memmove(v10 + 4, a4 + 4, 72 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 72 * v8 || v12 >= v13 + 72 * v8)
  {
    sub_1C21ABCB4(0, &qword_1EA2DE878);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2275CD0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2284538();
    id v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 104 * v8) {
      memmove(v10 + 4, a4 + 4, 104 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 104 * v8 || v12 >= v13 + 104 * v8)
  {
    sub_1C22845A0(0, &qword_1EA2DF830);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2275E80(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2285BD8(0, &qword_1EA2DF748, (uint64_t)&_s27FormattedRecordValueInRangeVN, MEMORY[0x1E4FBBE00]);
    id v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 72 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2276020(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2270554();
    id v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 4;
  unint64_t v13 = a4 + 4;
  size_t v14 = 15 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_1C21ABCB4(0, &qword_1EA2DE840);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22761CC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2284460();
    id v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 152);
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 152 * v8) {
      memmove(v10 + 4, a4 + 4, 152 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 152 * v8 || v12 >= v13 + 152 * v8)
  {
    sub_1C22845A0(0, &qword_1EA2DF810);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C227637C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2285BD8(0, &qword_1EA2DF730, (uint64_t)&_s20FormattedRecordValueVN, MEMORY[0x1E4FBBE00]);
    id v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2276524(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C22704E4();
    id v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 96 * v8) {
      memmove(v10 + 4, a4 + 4, 96 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 96 * v8 || v12 >= v13 + 96 * v8)
  {
    sub_1C21ABCB4(0, &qword_1EA2DE818);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22766DC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2284388();
    id v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 95;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 7);
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 7);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    sub_1C22845A0(0, &qword_1EA2DF7F0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2276870(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2285BD8(0, &qword_1EA2DF718, (uint64_t)&_s15FormattedRecordVN, MEMORY[0x1E4FBBE00]);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22769FC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2270474();
    id v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 6);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    sub_1C21ABCB4(0, &qword_1EA2DE7F8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2276B98(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C22842B0();
    id v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 96 * v8) {
      memmove(v10 + 4, a4 + 4, 96 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 96 * v8 || v12 >= v13 + 96 * v8)
  {
    sub_1C22845A0(0, &qword_1EA2DF7D0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2276D48(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2285BD8(0, &qword_1EA2DF760, (uint64_t)&_s22FormattedRecord3ValuesVN, MEMORY[0x1E4FBBE00]);
    id v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8]) {
      memmove(v12, v13, 80 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[80 * v8] || v12 >= &v13[80 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2276EEC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2270404();
    id v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 95;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 7);
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 4;
  size_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 7);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    sub_1C21ABCB4(0, &qword_1EA2DE7D0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2277088(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C22841D8();
    id v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 160 * v8) {
      memmove(v10 + 4, a4 + 4, 160 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 160 * v8 || v12 >= v13 + 160 * v8)
  {
    sub_1C22845A0(0, &qword_1EA2DF7B0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2277234(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2283D68();
    id v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1C21ABCB4(0, &qword_1EA2DF6C8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22773D0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C22858FC(0, &qword_1EA2DF6D0, (uint64_t (*)(uint64_t))sub_1C2283DD8, MEMORY[0x1E4FBBE00]);
    id v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    id v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 56 * v8) {
      memmove(v10 + 4, a4 + 4, 56 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 56 * v8 || v12 >= v13 + 56 * v8)
  {
    sub_1C2283DD8();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22775A4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2285BD8(0, &qword_1EBB6DDA8, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBBE00]);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2277724(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2285BD8(0, &qword_1EA2DF4F8, MEMORY[0x1E4FBC958], MEMORY[0x1E4FBBE00]);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22778A4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2285BD8(0, &qword_1EA2DF9D8, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBBE00]);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2277A24(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C22858FC(0, a5, a6, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (void *)swift_allocObject();
  size_t v18 = _swift_stdlib_malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  void v17[2] = v12;
  void v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  char v22 = (char *)v17 + v21;
  uint64_t v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  uint64_t v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2277C88(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2285BD8(0, &qword_1EA2DF608, (uint64_t)&type metadata for GatewayIdentifiedClinicalAccount, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2277E14(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C22858FC(0, &qword_1EA2DF868, (uint64_t (*)(uint64_t))sub_1C2284770, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1C2284770();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2277FC8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C22858FC(0, &qword_1EA2DF640, (uint64_t (*)(uint64_t))sub_1C2270C24, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1C2270C24();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C227817C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1C2278190(a1, a2, a3, a4, &qword_1EA2DF578, (uint64_t)&_s16FormattedSectionVN);
}

uint64_t sub_1C2278190(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_1C2285BD8(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 48);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v14 = v12 + 32;
  uint64_t v15 = a4 + 32;
  size_t v16 = 48 * v10;
  if (a1)
  {
    if (v12 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C227832C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2278374(a1, a2, a3, a4, &qword_1EA2DF768, &qword_1EA2DF770, &qword_1EA2DE888, (uint64_t)&_s23FormattedRecordMetadataVN);
}

uint64_t sub_1C2278350(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2278374(a1, a2, a3, a4, &qword_1EA2DF750, &qword_1EA2DF758, &qword_1EA2DE7E0, (uint64_t)&_s22FormattedRecord3ValuesVN);
}

uint64_t sub_1C2278374(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, unint64_t *a7, uint64_t a8)
{
  if (a3)
  {
    unint64_t v13 = a4[3];
    int64_t v14 = v13 >> 1;
    if ((uint64_t)(v13 >> 1) < a2)
    {
      if (v14 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v13 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v14 = a2;
      }
    }
  }
  else
  {
    int64_t v14 = a2;
  }
  uint64_t v15 = a4[2];
  if (v14 <= v15) {
    uint64_t v16 = a4[2];
  }
  else {
    uint64_t v16 = v14;
  }
  if (v16)
  {
    sub_1C2283F80(0, a5, a6, a7, a8);
    uint64_t v17 = (void *)swift_allocObject();
    size_t v18 = _swift_stdlib_malloc_size(v17);
    void v17[2] = v15;
    void v17[3] = 2 * ((uint64_t)(v18 - 32) / 56);
  }
  else
  {
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v19 = (unint64_t)(v17 + 4);
  unint64_t v20 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v17 != a4 || v19 >= v20 + 56 * v15) {
      memmove(v17 + 4, a4 + 4, 56 * v15);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v20 >= v19 + 56 * v15 || v19 >= v20 + 56 * v15)
  {
    sub_1C2283F04(0, a6, a7, a8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2278550(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2278374(a1, a2, a3, a4, &qword_1EA2DF738, &qword_1EA2DF740, &qword_1EA2DE850, (uint64_t)&_s27FormattedRecordValueInRangeVN);
}

uint64_t sub_1C2278574(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2278374(a1, a2, a3, a4, &qword_1EA2DF720, &qword_1EA2DF728, &qword_1EA2DE828, (uint64_t)&_s20FormattedRecordValueVN);
}

uint64_t sub_1C2278598(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2278374(a1, a2, a3, a4, &qword_1EA2DF708, &qword_1EA2DF710, &qword_1EA2DE808, (uint64_t)&_s15FormattedRecordVN);
}

uint64_t sub_1C22785BC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2277A24(a1, a2, a3, a4, &qword_1EA2DF950, (uint64_t (*)(uint64_t))sub_1C22853B0, (uint64_t (*)(void))sub_1C22853B0);
}

uint64_t sub_1C22785F0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2277A24(a1, a2, a3, a4, &qword_1EA2DF638, (uint64_t (*)(uint64_t))type metadata accessor for UserDomainConceptViewData, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
}

uint64_t sub_1C2278624(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (v13)
  {
    sub_1C2284614(0, a5, a6, a7, MEMORY[0x1E4FBBE00]);
    int64_t v14 = (void *)swift_allocObject();
    size_t v15 = _swift_stdlib_malloc_size(v14);
    void v14[2] = v12;
    void v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    int64_t v14 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v16 = (unint64_t)(v14 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v14 != a4 || v16 >= v17 + 40 * v12) {
      memmove(v14 + 4, a4 + 4, 40 * v12);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v17 >= v16 + 40 * v12 || v16 >= v17 + 40 * v12)
  {
    sub_1C2270AE4(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v14;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22787FC(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  int64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    int64_t v11 = *((void *)a4 + 2);
  }
  else {
    int64_t v11 = v9;
  }
  if (v11)
  {
    sub_1C2285BD8(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v14 = v12 + 32;
  size_t v15 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v14 >= &v15[v10]) {
      memmove(v14, v15, v10);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v10] || v14 >= &v15[v10])
  {
    memcpy(v14, v15, v10);
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2278964(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2277A24(a1, a2, a3, a4, &qword_1EA2DF678, (uint64_t (*)(uint64_t))type metadata accessor for AttachmentContext, (uint64_t (*)(void))type metadata accessor for AttachmentContext);
}

uint64_t sub_1C2278998(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C22858FC(0, &qword_1EA2DF4E8, (uint64_t (*)(uint64_t))sub_1C226FD98, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1C226FD98();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2278B68(char a1, int64_t a2, char a3, void *a4, void (*a5)(void), unint64_t *a6, uint64_t a7)
{
  if (a3)
  {
    unint64_t v11 = a4[3];
    int64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v12 = a2;
      }
    }
  }
  else
  {
    int64_t v12 = a2;
  }
  uint64_t v13 = a4[2];
  if (v12 <= v13) {
    uint64_t v14 = a4[2];
  }
  else {
    uint64_t v14 = v12;
  }
  if (v14)
  {
    a5(0);
    size_t v15 = (void *)swift_allocObject();
    int64_t v16 = _swift_stdlib_malloc_size(v15);
    uint64_t v17 = v16 - 32;
    if (v16 < 32) {
      uint64_t v17 = v16 - 25;
    }
    _OWORD v15[2] = v13;
    v15[3] = 2 * (v17 >> 3);
  }
  else
  {
    size_t v15 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v18 = (unint64_t)(v15 + 4);
  unint64_t v19 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v15 != a4 || v18 >= v19 + 8 * v13) {
      memmove(v15 + 4, a4 + 4, 8 * v13);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v19 >= v18 + 8 * v13 || v18 >= v19 + 8 * v13)
  {
    sub_1C2285BD8(0, a6, a7, MEMORY[0x1E4FBB320]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v15;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2278D1C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C22858FC(0, (unint64_t *)&qword_1EA2DF6A8, (uint64_t (*)(uint64_t))sub_1C2283D00, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_1C2283D00();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2278ED0(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_1C22858FC(0, a5, a6, MEMORY[0x1E4FBBE00]);
    uint64_t v12 = (char *)swift_allocObject();
    int64_t v13 = _swift_stdlib_malloc_size(v12);
    uint64_t v14 = v13 - 32;
    if (v13 < 32) {
      uint64_t v14 = v13 - 17;
    }
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * (v14 >> 4);
  }
  else
  {
    uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  size_t v15 = v12 + 32;
  int64_t v16 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v15 >= &v16[16 * v10]) {
      memmove(v15, v16, 16 * v10);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[16 * v10] || v15 >= &v16[16 * v10])
  {
    memcpy(v15, v16, 16 * v10);
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2279048(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2284C38();
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1C2285BD8(0, (unint64_t *)&qword_1EA2DE090, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C22791F0(uint64_t a1, char a2)
{
  return sub_1C2279E24(a1, a2, (unint64_t *)&qword_1EA2DE518, &qword_1EBB6FF78, 0x1E4F2B448, (unint64_t *)&qword_1EBB6FF80);
}

uint64_t sub_1C2279214(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C21A95CC();
  char v37 = a2;
  uint64_t result = sub_1C2550660();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v36 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v35) {
          goto LABEL_33;
        }
        unint64_t v21 = v36[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v21 = v36[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
              if (v34 >= 64) {
                bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v36 = -1 << v34;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v21 = v36[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      uint64_t v28 = *(void *)(v5 + 56) + 72 * v19;
      char v29 = *(unsigned char *)v28;
      unint64_t v30 = *(void **)(v28 + 8);
      uint64_t v31 = *(void *)(v28 + 16);
      long long v40 = *(_OWORD *)(v28 + 40);
      long long v38 = *(_OWORD *)(v28 + 24);
      long long v39 = *(_OWORD *)(v28 + 56);
      if ((v37 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v32 = *((id *)&v39 + 1);
        id v33 = v30;
      }
      sub_1C25509C0();
      sub_1C25509D0();
      uint64_t result = sub_1C2550A10();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 72 * v16;
      *(unsigned char *)uint64_t v17 = v29;
      *(void *)(v17 + 8) = v30;
      *(void *)(v17 + 16) = v31;
      *(_OWORD *)(v17 + 24) = v38;
      *(_OWORD *)(v17 + 40) = v40;
      *(_OWORD *)(v17 + 56) = v39;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C227956C(uint64_t a1, char a2)
{
  return sub_1C22798F8(a1, a2, &qword_1EA2DE590, &qword_1EBB6EEA8, (uint64_t)off_1E6449E10);
}

uint64_t sub_1C2279588(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C22077A4();
  char v44 = a2;
  uint64_t v6 = sub_1C2550660();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v43 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v41 = v2;
  int64_t v42 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v42) {
      break;
    }
    char v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v43 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v42) {
        goto LABEL_34;
      }
      unint64_t v24 = *(void *)(v43 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v42)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v41;
          if ((v44 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = *(void *)(v43 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v42) {
              goto LABEL_34;
            }
            unint64_t v24 = *(void *)(v43 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_21:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_22:
    uint64_t v26 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v5 + 56) + 72 * v21;
    if (v44)
    {
      long long v45 = *(_OWORD *)v29;
      long long v30 = *(_OWORD *)(v29 + 16);
      long long v31 = *(_OWORD *)(v29 + 32);
      long long v32 = *(_OWORD *)(v29 + 48);
      uint64_t v49 = *(void *)(v29 + 64);
      long long v47 = v31;
      long long v48 = v32;
      long long v46 = v30;
    }
    else
    {
      sub_1C2284EE8(v29, (uint64_t)&v45);
      swift_bridgeObjectRetain();
    }
    sub_1C25509C0();
    sub_1C254F570();
    uint64_t result = sub_1C2550A10();
    uint64_t v33 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v11 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v34) & ~*(void *)(v11 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v11 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v14 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    void *v15 = v28;
    v15[1] = v27;
    uint64_t v16 = *(void *)(v7 + 56) + 72 * v14;
    *(_OWORD *)uint64_t v16 = v45;
    long long v17 = v46;
    long long v18 = v47;
    long long v19 = v48;
    *(void *)(v16 + 64) = v49;
    *(_OWORD *)(v16 + 32) = v18;
    *(_OWORD *)(v16 + 48) = v19;
    *(_OWORD *)(v16 + 16) = v17;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v41;
  char v23 = (void *)(v5 + 64);
  if ((v44 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v23 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C22798DC(uint64_t a1, char a2)
{
  return sub_1C22798F8(a1, a2, &qword_1EA2DE578, (unint64_t *)&qword_1EBB6EEB8, 0x1E4FB1818);
}

uint64_t sub_1C22798F8(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v8 = *v5;
  sub_1C2284E6C(0, a3, a4, a5, MEMORY[0x1E4FBBD58]);
  uint64_t result = sub_1C2550660();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    unint64_t v37 = v6;
    int64_t v11 = 0;
    uint64_t v12 = (uint64_t *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v35 = -1 << v13;
    uint64_t v36 = v13;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & *(void *)(v8 + 64);
    int64_t v38 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v22 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v23 = v22 | (v11 << 6);
      }
      else
      {
        int64_t v24 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v24 >= v38) {
          goto LABEL_33;
        }
        unint64_t v25 = v12[v24];
        ++v11;
        if (!v25)
        {
          int64_t v11 = v24 + 1;
          if (v24 + 1 >= v38) {
            goto LABEL_33;
          }
          unint64_t v25 = v12[v11];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v38)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v6 = v37;
                goto LABEL_40;
              }
              if (v36 >= 64) {
                bzero((void *)(v8 + 64), 8 * v38);
              }
              else {
                *uint64_t v12 = v35;
              }
              uint64_t v6 = v37;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v25 = v12[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v11 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_42;
                }
                if (v11 >= v38) {
                  goto LABEL_33;
                }
                unint64_t v25 = v12[v11];
                ++v26;
                if (v25) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v11 = v26;
          }
        }
LABEL_30:
        unint64_t v15 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v11 << 6);
      }
      uint64_t v31 = 8 * v23;
      uint64_t v32 = *(void *)(*(void *)(v8 + 48) + v31);
      uint64_t v33 = *(void **)(*(void *)(v8 + 56) + v31);
      if ((a2 & 1) == 0) {
        id v34 = v33;
      }
      uint64_t result = sub_1C25509B0();
      uint64_t v17 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v18 = result & ~v17;
      unint64_t v19 = v18 >> 6;
      if (((-1 << v18) & ~*(void *)(v16 + 8 * (v18 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1 << v18) & ~*(void *)(v16 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v29 = v19 == v28;
          if (v19 == v28) {
            unint64_t v19 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v16 + 8 * v19);
        }
        while (v30 == -1);
        unint64_t v20 = __clz(__rbit64(~v30)) + (v19 << 6);
      }
      *(void *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      uint64_t v21 = 8 * v20;
      *(void *)(*(void *)(v10 + 48) + v21) = v32;
      *(void *)(*(void *)(v10 + 56) + v21) = v33;
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v6 = v10;
  return result;
}

unint64_t sub_1C2279BCC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2206080();
  unint64_t v28 = (void *)sub_1C2550660();
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v26 = v2;
    char v27 = (void *)(v5 + 64);
    uint64_t v7 = -1;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    unint64_t v8 = v7 & *(void *)(v5 + 64);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v13 = v12 | (v11 << 6);
      }
      else
      {
        int64_t v14 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v14 >= v9) {
          goto LABEL_22;
        }
        unint64_t v15 = v27[v14];
        ++v11;
        if (!v15)
        {
          int64_t v11 = v14 + 1;
          if (v14 + 1 >= v9) {
            goto LABEL_22;
          }
          unint64_t v15 = v27[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 2;
            if (v16 >= v9)
            {
LABEL_22:
              swift_release();
              uint64_t v3 = v26;
              if (a2)
              {
                uint64_t v25 = 1 << *(unsigned char *)(v5 + 32);
                if (v25 > 63) {
                  bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v27 = -1 << v25;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v15 = v27[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_29;
                }
                if (v11 >= v9) {
                  goto LABEL_22;
                }
                unint64_t v15 = v27[v11];
                ++v16;
                if (v15) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
LABEL_19:
        unint64_t v8 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
      }
      uint64_t v17 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v13);
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      uint64_t v21 = (void *)v17[2];
      unint64_t v20 = (void *)v17[3];
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v13);
      if ((a2 & 1) == 0)
      {
        id v23 = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v24 = v21;
      }
      unint64_t result = sub_1C228074C(v19, v18, v21, v20, v22, v28);
    }
  }
  unint64_t result = swift_release();
  void *v3 = v28;
  return result;
}

uint64_t sub_1C2279DE8(uint64_t a1, char a2)
{
  return sub_1C227E3EC(a1, a2, (void (*)(void))sub_1C2205FFC);
}

uint64_t sub_1C2279E00(uint64_t a1, char a2)
{
  return sub_1C2279E24(a1, a2, &qword_1EA2DE500, &qword_1EA2DE508, 0x1E4F2B1B0, &qword_1EA2DE510);
}

uint64_t sub_1C2279E24(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  uint64_t v7 = v6;
  uint64_t v9 = *v6;
  sub_1C2206E60(0, a3, a4, a5, a6);
  uint64_t v10 = sub_1C2550660();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_40;
  }
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v40 = v6;
  uint64_t v41 = v9 + 64;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & *(void *)(v9 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v24 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v25 = v24 | (v18 << 6);
      goto LABEL_31;
    }
    int64_t v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v26 >= v15) {
      break;
    }
    char v27 = (void *)(v9 + 64);
    unint64_t v28 = *(void *)(v41 + 8 * v26);
    ++v18;
    if (!v28)
    {
      int64_t v18 = v26 + 1;
      if (v26 + 1 >= v15) {
        goto LABEL_33;
      }
      unint64_t v28 = *(void *)(v41 + 8 * v18);
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v15)
        {
LABEL_33:
          swift_release();
          uint64_t v7 = v40;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v28 = *(void *)(v41 + 8 * v29);
        if (!v28)
        {
          while (1)
          {
            int64_t v18 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_42;
            }
            if (v18 >= v15) {
              goto LABEL_33;
            }
            unint64_t v28 = *(void *)(v41 + 8 * v18);
            ++v29;
            if (v28) {
              goto LABEL_30;
            }
          }
        }
        int64_t v18 = v29;
      }
    }
LABEL_30:
    unint64_t v14 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v18 << 6);
LABEL_31:
    uint64_t v34 = 8 * v25;
    uint64_t v35 = *(void **)(*(void *)(v9 + 48) + v34);
    uint64_t v36 = *(void **)(*(void *)(v9 + 56) + v34);
    if ((a2 & 1) == 0)
    {
      id v37 = v35;
      id v38 = v36;
    }
    uint64_t result = sub_1C254FF60();
    uint64_t v19 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v16 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v16 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v32 = v21 == v31;
        if (v21 == v31) {
          unint64_t v21 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v16 + 8 * v21);
      }
      while (v33 == -1);
      unint64_t v22 = __clz(__rbit64(~v33)) + (v21 << 6);
    }
    *(void *)(v16 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    uint64_t v23 = 8 * v22;
    *(void *)(*(void *)(v11 + 48) + v23) = v35;
    *(void *)(*(void *)(v11 + 56) + v23) = v36;
    ++*(void *)(v11 + 16);
  }
  swift_release();
  uint64_t v7 = v40;
  char v27 = (void *)(v9 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v39 = 1 << *(unsigned char *)(v9 + 32);
  if (v39 >= 64) {
    bzero(v27, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v27 = -1 << v39;
  }
  *(void *)(v9 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v7 = v11;
  return result;
}

uint64_t sub_1C227A104(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2207AB4(0, (unint64_t *)&qword_1EA2DE558);
  char v42 = a2;
  uint64_t v6 = sub_1C2550660();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    BOOL v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C25509C0();
    sub_1C254F570();
    uint64_t result = sub_1C2550A10();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C227A444(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2283FDC(0, &qword_1EA2DF780, (void (*)(uint64_t))sub_1C2284048);
  char v36 = a2;
  uint64_t v6 = sub_1C2550660();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C25509C0();
    sub_1C254F570();
    uint64_t result = sub_1C2550A10();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

void sub_1C227A784(uint64_t a1, char a2)
{
}

void sub_1C227A7A4(uint64_t a1, char a2)
{
}

void sub_1C227A7C4(uint64_t a1, char a2)
{
}

void sub_1C227A7E4(uint64_t a1, char a2)
{
}

void sub_1C227A804(uint64_t a1, char a2)
{
}

void sub_1C227A824(uint64_t a1, char a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v5 = v4;
  uint64_t v7 = *v4;
  sub_1C2283A54(0, a3, a4, (void (*)(void))sub_1C22188C0);
  BOOL v29 = (void *)sub_1C2550660();
  if (*(void *)(v7 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v4;
    BOOL v27 = (void *)(v7 + 64);
    uint64_t v9 = -1;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    unint64_t v10 = v9 & *(void *)(v7 + 64);
    int64_t v11 = (unint64_t)(v8 + 63) >> 6;
    swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v14 = v13 | (v12 << 6);
      }
      else
      {
        int64_t v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v15 >= v11) {
          goto LABEL_22;
        }
        unint64_t v16 = v27[v15];
        ++v12;
        if (!v16)
        {
          int64_t v12 = v15 + 1;
          if (v15 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v16 = v27[v12];
          if (!v16)
          {
            int64_t v17 = v15 + 2;
            if (v17 >= v11)
            {
LABEL_22:
              swift_release();
              uint64_t v5 = v26;
              if (a2)
              {
                uint64_t v25 = 1 << *(unsigned char *)(v7 + 32);
                if (v25 > 63) {
                  bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v27 = -1 << v25;
                }
                *(void *)(v7 + 16) = 0;
              }
              break;
            }
            unint64_t v16 = v27[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_29;
                }
                if (v12 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v16 = v27[v12];
                ++v17;
                if (v16) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v12 = v17;
          }
        }
LABEL_19:
        unint64_t v10 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
      }
      uint64_t v18 = *(void *)(v7 + 48) + 48 * v14;
      long long v19 = *(_OWORD *)v18;
      uint64_t v20 = *(void *)(v18 + 16);
      char v21 = *(unsigned char *)(v18 + 24);
      uint64_t v23 = *(void *)(v18 + 32);
      uint64_t v22 = *(void *)(v18 + 40);
      uint64_t v24 = *(void *)(*(void *)(v7 + 56) + 8 * v14);
      if ((a2 & 1) == 0)
      {
        long long v28 = *(_OWORD *)v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v19 = v28;
      }
      long long v30 = v19;
      uint64_t v31 = v20;
      char v32 = v21;
      uint64_t v33 = v23;
      uint64_t v34 = v22;
      sub_1C22808B8((uint64_t)&v30, v24, v29);
    }
  }
  swift_release();
  void *v5 = v29;
}

uint64_t sub_1C227AA78(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1C254CB40();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1C220722C();
  int v50 = a2;
  uint64_t v10 = sub_1C2550660();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v56 = v8;
  uint64_t v57 = v5;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  long long v46 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  char v44 = v2;
  int64_t v45 = (unint64_t)(v12 + 63) >> 6;
  long long v47 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  id v51 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v16 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v18 = 0;
  uint64_t v48 = v6;
  for (i = v9; ; uint64_t v9 = i)
  {
    if (v15)
    {
      unint64_t v22 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v23 = v22 | (v18 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v45) {
      break;
    }
    uint64_t v25 = v46;
    unint64_t v26 = v46[v24];
    ++v18;
    if (!v26)
    {
      int64_t v18 = v24 + 1;
      if (v24 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v26 = v46[v18];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v46[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v18 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v18 >= v45) {
              goto LABEL_34;
            }
            unint64_t v26 = v46[v18];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v18 = v27;
      }
    }
LABEL_21:
    unint64_t v15 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v18 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v6 + 72);
    unint64_t v29 = *(void *)(v9 + 48) + v28 * v23;
    if (v50)
    {
      (*v51)(v56, v29, v57);
      long long v30 = (unsigned __int8 *)(*(void *)(v9 + 56) + 48 * v23);
      int v55 = *v30;
      uint64_t v31 = *((void *)v30 + 1);
      uint64_t v53 = *((void *)v30 + 2);
      uint64_t v54 = v31;
      uint64_t v52 = *((void *)v30 + 3);
      unsigned __int8 v32 = v30[32];
      id v33 = (id)*((void *)v30 + 5);
    }
    else
    {
      (*v47)(v56, v29, v57);
      uint64_t v34 = (unsigned __int8 *)(*(void *)(v9 + 56) + 48 * v23);
      int v55 = *v34;
      uint64_t v35 = *((void *)v34 + 1);
      uint64_t v53 = *((void *)v34 + 2);
      uint64_t v54 = v35;
      uint64_t v52 = *((void *)v34 + 3);
      unsigned __int8 v32 = v34[32];
      id v33 = *((id *)v34 + 5);
    }
    sub_1C2283A0C((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1C254F370();
    uint64_t v36 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v16 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v37) & ~*(void *)(v16 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v16 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v19 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v51)(*(void *)(v11 + 48) + v28 * v19, v56, v57);
    uint64_t v20 = *(void *)(v11 + 56) + 48 * v19;
    *(unsigned char *)uint64_t v20 = v55;
    uint64_t v21 = v53;
    *(void *)(v20 + 8) = v54;
    *(void *)(v20 + 16) = v21;
    *(void *)(v20 + 24) = v52;
    *(unsigned char *)(v20 + 32) = v32;
    *(void *)(v20 + 40) = v33;
    ++*(void *)(v11 + 16);
    uint64_t v6 = v48;
  }
  swift_release();
  uint64_t v3 = v44;
  uint64_t v25 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v9 + 32);
  if (v43 >= 64) {
    bzero(v25, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v43;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v11;
  return result;
}

uint64_t sub_1C227AF18(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2207AB4(0, (unint64_t *)&qword_1EA2DF6B8);
  uint64_t result = sub_1C2550660();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    id v33 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v30 = -1 << v9;
    uint64_t v31 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if (a2)
              {
                if (v31 >= 64) {
                  bzero(v33, 8 * v32);
                }
                else {
                  *id v33 = v30;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 24 * v19;
      uint64_t v29 = *(void *)v28;
      long long v34 = *(_OWORD *)(v28 + 8);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1C25509B0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 24 * v16;
      *(void *)uint64_t v17 = v29;
      *(_OWORD *)(v17 + 8) = v34;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C227B200(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2207AB4(0, (unint64_t *)&qword_1EA2DE540);
  char v6 = a2;
  uint64_t v7 = sub_1C2550660();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v35 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v14 << 6);
      }
      else
      {
        int64_t v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34) {
          goto LABEL_34;
        }
        unint64_t v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          int64_t v14 = v19 + 1;
          if (v19 + 1 >= v34) {
            goto LABEL_34;
          }
          unint64_t v20 = v35[v14];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v14 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= v34) {
                  goto LABEL_34;
                }
                unint64_t v20 = v35[v14];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v14 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      int64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      BOOL v25 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v18);
      if (v6)
      {
        sub_1C2206B9C(v25, v36);
      }
      else
      {
        sub_1C21A9A38((uint64_t)v25, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_1C25509C0();
      sub_1C254F570();
      uint64_t result = sub_1C2550A10();
      uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      unint64_t v16 = (void *)(*(void *)(v8 + 48) + 16 * v15);
      *unint64_t v16 = v24;
      v16[1] = v23;
      uint64_t result = (uint64_t)sub_1C2206B9C(v36, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v8;
  return result;
}

uint64_t sub_1C227B524(uint64_t a1, char a2)
{
  return sub_1C227E3EC(a1, a2, (void (*)(void))sub_1C2284B3C);
}

uint64_t sub_1C227B53C(uint64_t a1, char a2)
{
  return sub_1C227E0BC(a1, a2, &qword_1EA2DF898, &qword_1EA2DF8A0);
}

uint64_t sub_1C227B558(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2283FDC(0, &qword_1EA2DF9C0, (void (*)(uint64_t))type metadata accessor for MedicalRecordChartableSeriesCollector);
  char v6 = a2;
  uint64_t v7 = sub_1C2550660();
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v39 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  unint64_t v37 = v2;
  int64_t v38 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v38) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v39 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v38) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v39 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v37;
          if ((v6 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v39 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v38) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v39 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v11 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (v6)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v42 = *(void *)(v25 + 32);
      long long v40 = v26;
      long long v41 = v27;
      uint64_t v28 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    }
    else
    {
      sub_1C22859F4(v25, (uint64_t)&v40);
      uint64_t v28 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
      swift_retain();
    }
    uint64_t result = sub_1C2550310();
    uint64_t v29 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v8 + 48) + 40 * v15;
    long long v17 = v40;
    long long v18 = v41;
    *(void *)(v16 + 32) = v42;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    *(void *)(*(void *)(v8 + 56) + 8 * v15) = v28;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v3 = v37;
  int64_t v22 = (void *)(v5 + 64);
  if ((v6 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v8;
  return result;
}