uint64_t sub_1C231620C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;

  v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  swift_beginAccess();
  v4 = *(void *)v3;
  v5 = *(void *)(v3 + 8);
  v6 = *(void *)(v3 + 16);
  v7 = *(void *)(v3 + 24);
  v8 = *(void **)(v3 + 32);
  v9 = *(void **)(v3 + 40);
  v10 = *(void **)(v3 + 48);
  v11 = *(void *)(v3 + 56);
  v12 = *(void *)(v3 + 64);
  v13 = *(void *)(v3 + 72);
  v14 = *(void *)(v3 + 80);
  v15 = *(void *)(v3 + 88);
  v16 = *(unsigned char *)(v3 + 100);
  v17 = *(_DWORD *)(v3 + 96);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(unsigned char *)(a1 + 100) = v16;
  *(_DWORD *)(a1 + 96) = v17;
  return sub_1C22AC0E8(v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C23162A8(long long *a1)
{
  uint64_t v2 = *((void *)a1 + 2);
  long long v31 = *(long long *)((char *)a1 + 24);
  long long v32 = *a1;
  uint64_t v3 = *((void *)a1 + 5);
  uint64_t v4 = *((void *)a1 + 8);
  long long v29 = *(long long *)((char *)a1 + 72);
  long long v30 = a1[3];
  uint64_t v5 = *((void *)a1 + 11);
  char v6 = *((unsigned char *)a1 + 100);
  int v7 = *((_DWORD *)a1 + 24);
  uint64_t v8 = v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  swift_beginAccess();
  uint64_t v10 = *(void *)v8;
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v11 = *(void *)(v8 + 16);
  uint64_t v12 = *(void *)(v8 + 24);
  v13 = *(void **)(v8 + 32);
  v14 = *(void **)(v8 + 40);
  v35 = v14;
  v15 = *(void **)(v8 + 48);
  uint64_t v16 = *(void *)(v8 + 56);
  uint64_t v17 = *(void *)(v8 + 64);
  uint64_t v18 = *(void *)(v8 + 88);
  uint64_t v25 = *(void *)(v8 + 72);
  uint64_t v26 = *(void *)(v8 + 80);
  char v33 = *(unsigned char *)(v8 + 100);
  int v34 = *(_DWORD *)(v8 + 96);
  *(_OWORD *)uint64_t v8 = v32;
  *(void *)(v8 + 16) = v2;
  *(_OWORD *)(v8 + 24) = v31;
  *(void *)(v8 + 40) = v3;
  *(_OWORD *)(v8 + 48) = v30;
  *(void *)(v8 + 64) = v4;
  *(_OWORD *)(v8 + 72) = v29;
  *(void *)(v8 + 88) = v5;
  *(_DWORD *)(v8 + 96) = v7;
  *(unsigned char *)(v8 + 100) = v6;
  uint64_t v28 = v10;
  uint64_t v27 = v18;
  uint64_t v19 = v10;
  uint64_t v20 = v9;
  v21 = v13;
  v22 = v15;
  uint64_t v23 = v16;
  sub_1C22AC0E8(v10, v9, v11, v12, v13, v14, v15);
  sub_1C22AC064(v19, v20, v11, v12, v21, v35, v22);
  v36[0] = v19;
  v36[1] = v20;
  v36[2] = v11;
  v36[3] = v12;
  v36[4] = v21;
  v36[5] = v35;
  v36[6] = v22;
  v36[7] = v23;
  v36[8] = v17;
  v36[9] = v25;
  v36[10] = v26;
  v36[11] = v27;
  char v38 = v33;
  int v37 = v34;
  sub_1C2315E54((uint64_t)v36);
  return sub_1C22AC064(v28, v20, v11, v12, v21, v35, v22);
}

void (*sub_1C2316490(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x90uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData;
  v3[16] = v1;
  v3[17] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(v5 + 8);
  uint64_t v8 = *(void *)(v5 + 16);
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = *(void **)(v5 + 32);
  uint64_t v11 = *(void **)(v5 + 40);
  uint64_t v12 = *(void **)(v5 + 48);
  uint64_t v13 = *(void *)(v5 + 56);
  uint64_t v14 = *(void *)(v5 + 64);
  uint64_t v15 = *(void *)(v5 + 72);
  uint64_t v16 = *(void *)(v5 + 80);
  uint64_t v17 = *(void *)(v5 + 88);
  char v18 = *(unsigned char *)(v5 + 100);
  int v19 = *(_DWORD *)(v5 + 96);
  *uint64_t v3 = *(void *)v5;
  v3[1] = v7;
  v3[2] = v8;
  v3[3] = v9;
  v3[4] = v10;
  v3[5] = v11;
  v3[6] = v12;
  v3[7] = v13;
  v3[8] = v14;
  v3[9] = v15;
  v3[10] = v16;
  v3[11] = v17;
  *((unsigned char *)v3 + 100) = v18;
  *((_DWORD *)v3 + 24) = v19;
  sub_1C22AC0E8(v6, v7, v8, v9, v10, v11, v12);
  return sub_1C2316564;
}

void sub_1C2316564(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (*a1)[16] + (*a1)[17];
  uint64_t v5 = **a1;
  uint64_t v6 = v3[1];
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[3];
  uint64_t v9 = (void *)v3[4];
  uint64_t v10 = (void *)v3[5];
  uint64_t v11 = (void *)v3[6];
  uint64_t v12 = v3[7];
  uint64_t v13 = v3[8];
  uint64_t v14 = v3[9];
  uint64_t v15 = v3[10];
  uint64_t v16 = v3[11];
  char v17 = *((unsigned char *)v3 + 100);
  int v18 = *((_DWORD *)v3 + 24);
  uint64_t v19 = *(void *)v4;
  uint64_t v20 = *(void *)(v4 + 16);
  uint64_t v38 = *(void *)(v4 + 24);
  v21 = *(void **)(v4 + 32);
  uint64_t v34 = *(void *)(v4 + 8);
  v35 = *(void **)(v4 + 40);
  v22 = *(void **)(v4 + 48);
  uint64_t v23 = *(void *)(v4 + 56);
  uint64_t v33 = *(void *)(v4 + 72);
  uint64_t v39 = *(void *)(v4 + 80);
  uint64_t v36 = *(void *)(v4 + 64);
  uint64_t v37 = *(void *)(v4 + 88);
  *(void *)uint64_t v4 = v5;
  *(void *)(v4 + 8) = v6;
  *(void *)(v4 + 16) = v7;
  *(void *)(v4 + 24) = v8;
  *(void *)(v4 + 32) = v9;
  *(void *)(v4 + 40) = v10;
  *(void *)(v4 + 48) = v11;
  *(void *)(v4 + 56) = v12;
  *(void *)(v4 + 64) = v13;
  *(void *)(v4 + 72) = v14;
  uint64_t v24 = *(unsigned int *)(v4 + 96);
  *(void *)(v4 + 80) = v15;
  *(void *)(v4 + 88) = v16;
  unint64_t v25 = v24 | ((unint64_t)*(unsigned __int8 *)(v4 + 100) << 32);
  *(unsigned char *)(v4 + 100) = v17;
  *(_DWORD *)(v4 + 96) = v18;
  if (a2)
  {
    sub_1C22AC0E8(v5, v6, v7, v8, v9, v10, v11);
    sub_1C22AC0E8(v19, v34, v20, v38, v21, v35, v22);
    sub_1C22AC064(v19, v34, v20, v38, v21, v35, v22);
    uint64_t v40 = v19;
    uint64_t v41 = v34;
    uint64_t v42 = v20;
    uint64_t v43 = v38;
    v44 = v21;
    v45 = v35;
    v46 = v22;
    uint64_t v47 = v23;
    uint64_t v48 = v36;
    uint64_t v49 = v33;
    uint64_t v50 = v39;
    uint64_t v51 = v37;
    char v53 = BYTE4(v25);
    int v52 = v25;
    sub_1C2315E54((uint64_t)&v40);
    sub_1C22AC064(v19, v34, v20, v38, v21, v35, v22);
    uint64_t v26 = *v3;
    uint64_t v27 = v3[1];
    uint64_t v28 = v3[2];
    uint64_t v29 = v3[3];
    long long v30 = (void *)v3[4];
    long long v31 = (void *)v3[5];
    long long v32 = (void *)v3[6];
  }
  else
  {
    sub_1C22AC0E8(v19, v34, v20, v38, v21, v35, v22);
    sub_1C22AC064(v19, v34, v20, v38, v21, v35, v22);
    uint64_t v40 = v19;
    uint64_t v41 = v34;
    uint64_t v42 = v20;
    uint64_t v43 = v38;
    v44 = v21;
    v45 = v35;
    v46 = v22;
    uint64_t v47 = v23;
    uint64_t v48 = v36;
    uint64_t v49 = v33;
    uint64_t v50 = v39;
    uint64_t v51 = v37;
    char v53 = BYTE4(v25);
    int v52 = v25;
    sub_1C2315E54((uint64_t)&v40);
    uint64_t v26 = v19;
    long long v32 = v22;
    uint64_t v27 = v34;
    uint64_t v28 = v20;
    uint64_t v29 = v38;
    long long v30 = v21;
    long long v31 = v35;
  }
  sub_1C22AC064(v26, v27, v28, v29, v30, v31, v32);
  free(v3);
}

void sub_1C23168B8()
{
  sub_1C2317448();
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode);
  swift_beginAccess();
  int v2 = *v1;
  id v3 = sub_1C2316F00();
  type metadata accessor for UILayoutPriority(0);
  sub_1C2318BE4();
  if (v2 == 1)
  {
    sub_1C254E580();
    LODWORD(v4) = v8;
    objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);

    id v5 = sub_1C2316F00();
    sub_1C254E580();
  }
  else
  {
    sub_1C254E570();
    LODWORD(v7) = v8;
    objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 0, v7);

    id v5 = sub_1C2316F00();
    sub_1C254E570();
  }
  LODWORD(v6) = v8;
  objc_msgSend(v5, sel_setContentCompressionResistancePriority_forAxis_, 1, v6);
}

uint64_t sub_1C2316A58()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode);
  swift_beginAccess();
  return *v1;
}

void sub_1C2316AA0(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode);
  swift_beginAccess();
  *id v3 = a1;
  sub_1C23168B8();
}

void (*sub_1C2316AF8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2316B58;
}

void sub_1C2316B58(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C23168B8();
  }
}

uint64_t sub_1C2316B8C()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_baseAccessibilityIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1C2316BE4(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_baseAccessibilityIdentifier);
  swift_beginAccess();
  *id v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  if (v5[1])
  {
    swift_bridgeObjectRetain();
    id v6 = sub_1C2316F00();
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    double v7 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setAccessibilityIdentifier_, v7);

    id v8 = sub_1C2316FEC();
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9);
  }
}

void (*sub_1C2316D40(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_baseAccessibilityIdentifier;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C2316DAC;
}

void sub_1C2316DAC(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = (uint64_t *)(v3[3] + v3[4]);
    uint64_t v5 = v4[1];
    if (v5)
    {
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      id v7 = sub_1C2316F00();
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      id v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8, v6, v5);

      id v9 = sub_1C2316FEC();
      uint64_t v11 = v5;
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      uint64_t v10 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10, v6, v11);
    }
  }
  free(v3);
}

id sub_1C2316F00()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___textualValueView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___textualValueView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___textualValueView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setNumberOfLines_, 3);
    objc_msgSend(v4, sel_setLineBreakMode_, 4);
    id v5 = objc_msgSend(self, sel_hk_chrValueCellPrimaryFont);
    objc_msgSend(v4, sel_setFont_, v5);

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C2316FEC()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___referenceRangeView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___referenceRangeView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___referenceRangeView);
  }
  else
  {
    uint64_t v4 = v0;
    char v10 = 1;
    id v5 = objc_allocWithZone((Class)type metadata accessor for RecordRangeView());
    id v6 = RecordRangeView.init(style:)(&v10);
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v7 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id ConceptFeedItemValueView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id ConceptFeedItemValueView.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  *((_OWORD *)v9 + 4) = 0u;
  *((_OWORD *)v9 + 5) = 0u;
  *(void *)(v9 + 93) = 0;
  v4[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode] = 0;
  char v10 = &v4[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_baseAccessibilityIdentifier];
  *char v10 = 0;
  v10[1] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_activeConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___textualValueView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___referenceRangeView] = 0;
  v20.receiver = v4;
  v20.super_class = (Class)type metadata accessor for ConceptFeedItemValueView();
  id v11 = objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  LODWORD(v12) = 1144750080;
  objc_msgSend(v11, sel_setContentCompressionResistancePriority_forAxis_, 1, v12);
  objc_msgSend(v11, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v13 = sub_1C2316F00();
  id v14 = sub_1C2316FEC();
  objc_msgSend(v11, sel_addSubview_, v13);
  objc_msgSend(v11, sel_addSubview_, v14);

  sub_1C23172CC();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C255CD90;
  uint64_t v16 = sub_1C254E8E0();
  uint64_t v17 = MEMORY[0x1E4FB1138];
  *(void *)(v15 + 32) = v16;
  *(void *)(v15 + 40) = v17;
  id v18 = v11;
  MEMORY[0x1C87583B0](v15, sel_traitCollectionDidChangeWithTraitEnvironment_previousTraitCollection_);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v18;
}

uint64_t type metadata accessor for ConceptFeedItemValueView()
{
  return self;
}

void sub_1C23172CC()
{
  if (!qword_1EA2DE1B0)
  {
    sub_1C21FE7D8();
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DE1B0);
    }
  }
}

void sub_1C2317448()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  id v3 = (uint64_t *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_activeConstraints];
  swift_beginAccess();
  sub_1C21F34D4();
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v4);

  id v5 = objc_msgSend(v0, sel_traitCollection);
  id v6 = objc_msgSend(v5, sel_preferredContentSizeCategory);

  LOBYTE(v5) = sub_1C254FD50();
  sub_1C21ACA3C();
  if ((v5 & 1) == 0)
  {
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1C25645D0;
    id v35 = sub_1C2316F00();
    id v36 = objc_msgSend(v35, sel_leadingAnchor);

    id v37 = objc_msgSend(v1, sel_leadingAnchor);
    if (qword_1EA2DD6B8 != -1) {
      swift_once();
    }
    id v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_constant_, v37, *((double *)&xmmword_1EA303AD0 + 1));

    *(void *)(v34 + 32) = v38;
    id v39 = sub_1C2316F00();
    id v40 = objc_msgSend(v39, sel_topAnchor);

    id v41 = objc_msgSend(v1, sel_topAnchor);
    id v42 = objc_msgSend(v40, sel_constraintEqualToAnchor_constant_, v41, *(double *)&xmmword_1EA303AD0);

    *(void *)(v34 + 40) = v42;
    id v43 = sub_1C2316F00();
    id v44 = objc_msgSend(v43, sel_bottomAnchor);

    id v45 = objc_msgSend(v1, sel_bottomAnchor);
    id v46 = objc_msgSend(v44, sel_constraintEqualToAnchor_constant_, v45, -*(double *)&qword_1EA303AE0);

    *(void *)(v34 + 48) = v46;
    id v47 = sub_1C2316FEC();
    id v48 = objc_msgSend(v47, sel_widthAnchor);

    id v49 = sub_1C2316FEC();
    id v50 = objc_msgSend(v49, sel_traitCollection);
    id v51 = objc_msgSend(v50, sel_preferredContentSizeCategory);

    double v52 = sub_1C2437CD8();
    if (qword_1EA2DD800 != -1) {
      swift_once();
    }
    double v53 = *(double *)&qword_1EA303C98;

    id v54 = objc_msgSend(v48, sel_constraintEqualToConstant_, v52 * v53);
    *(void *)(v34 + 56) = v54;
    id v55 = sub_1C2316FEC();
    id v56 = objc_msgSend(v55, sel_bottomAnchor);

    id v57 = sub_1C2316F00();
    id v58 = objc_msgSend(v57, sel_firstBaselineAnchor);

    id v59 = objc_msgSend(v56, sel_constraintEqualToAnchor_, v58);
    *(void *)(v34 + 64) = v59;
    id v60 = sub_1C2316FEC();
    id v61 = objc_msgSend(v60, sel_trailingAnchor);

    id v62 = objc_msgSend(v1, sel_trailingAnchor);
    id v63 = objc_msgSend(v61, sel_constraintEqualToAnchor_constant_, v62, -*(double *)&qword_1EA303AE8);

    *(void *)(v34 + 72) = v63;
    sub_1C254F730();
    *id v3 = v34;
    swift_bridgeObjectRelease();
    id v64 = sub_1C2316FEC();
    unsigned int v65 = objc_msgSend(v64, sel_isHidden);

    if (v65)
    {
      id v66 = sub_1C2316F00();
      id v31 = objc_msgSend(v66, sel_trailingAnchor);

      id v32 = objc_msgSend(v1, sel_trailingAnchor);
      id v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v32, -*(double *)&qword_1EA303AE8);
LABEL_12:
      id v67 = v33;

      swift_beginAccess();
      id v68 = v67;
      MEMORY[0x1C8757C00]();
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      goto LABEL_23;
    }
    swift_beginAccess();
    id v80 = sub_1C2316F00();
    id v81 = objc_msgSend(v80, sel_trailingAnchor);

    id v82 = sub_1C2316FEC();
    id v83 = objc_msgSend(v82, sel_leadingAnchor);

    id v84 = objc_msgSend(v81, sel_constraintEqualToAnchor_, v83);
    swift_beginAccess();
    id v68 = v84;
    MEMORY[0x1C8757C00]();
    if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_23:
      sub_1C254F790();
      sub_1C254F730();
      swift_endAccess();
      goto LABEL_24;
    }
LABEL_31:
    sub_1C254F760();
    goto LABEL_23;
  }
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C255DB90;
  id v8 = sub_1C2316F00();
  id v9 = objc_msgSend(v8, sel_leadingAnchor);

  id v10 = objc_msgSend(v1, sel_leadingAnchor);
  if (qword_1EA2DD6B8 != -1) {
    swift_once();
  }
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v10, *((double *)&xmmword_1EA303AD0 + 1));

  *(void *)(v7 + 32) = v11;
  id v12 = sub_1C2316F00();
  id v13 = objc_msgSend(v12, sel_topAnchor);

  id v14 = objc_msgSend(v1, sel_topAnchor);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, *(double *)&xmmword_1EA303AD0);

  *(void *)(v7 + 40) = v15;
  id v16 = sub_1C2316F00();
  id v17 = objc_msgSend(v16, sel_trailingAnchor);

  id v18 = objc_msgSend(v1, sel_trailingAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v18, -*(double *)&qword_1EA303AE8);

  *(void *)(v7 + 48) = v19;
  id v20 = sub_1C2316FEC();
  id v21 = objc_msgSend(v20, sel_leadingAnchor);

  id v22 = objc_msgSend(v1, sel_leadingAnchor);
  id v23 = objc_msgSend(v21, sel_constraintEqualToAnchor_constant_, v22, *((double *)&xmmword_1EA303AD0 + 1));

  *(void *)(v7 + 56) = v23;
  id v24 = sub_1C2316FEC();
  id v25 = objc_msgSend(v24, sel_trailingAnchor);

  id v26 = objc_msgSend(v1, sel_trailingAnchor);
  id v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v26, -*(double *)&qword_1EA303AE8);

  *(void *)(v7 + 64) = v27;
  sub_1C254F730();
  *id v3 = v7;
  swift_bridgeObjectRelease();
  id v28 = sub_1C2316FEC();
  unsigned int v29 = objc_msgSend(v28, sel_isHidden);

  if (v29)
  {
    id v30 = sub_1C2316F00();
    id v31 = objc_msgSend(v30, sel_bottomAnchor);

    id v32 = objc_msgSend(v1, sel_bottomAnchor);
    id v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v32, -*(double *)&qword_1EA303AE0);
    goto LABEL_12;
  }
  id v69 = sub_1C2316FEC();
  id v70 = objc_msgSend(v69, sel_topAnchor);

  id v71 = sub_1C2316F00();
  id v72 = objc_msgSend(v71, sel_bottomAnchor);

  id v68 = objc_msgSend(v70, sel_constraintEqualToAnchor_constant_, v72, 2.0);
  id v73 = sub_1C2316FEC();
  id v74 = objc_msgSend(v73, sel_bottomAnchor);

  id v75 = objc_msgSend(v1, sel_bottomAnchor);
  id v76 = objc_msgSend(v74, sel_constraintEqualToAnchor_constant_, v75, -*(double *)&qword_1EA303AE0);

  swift_beginAccess();
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v94 = sub_1C2550620();
    swift_bridgeObjectRelease();
    uint64_t v78 = v94 + 2;
    if (!__OFADD__(v94, 2)) {
      goto LABEL_17;
    }
    goto LABEL_30;
  }
  uint64_t v77 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v78 = v77 + 2;
  if (__OFADD__(v77, 2))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
LABEL_17:
  sub_1C25041B0(v78, 1);
  sub_1C254F730();
  id v79 = v68;
  MEMORY[0x1C8757C00]();
  if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v68 = v76;
  MEMORY[0x1C8757C00]();
  if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  swift_endAccess();

LABEL_24:
  id v85 = sub_1C2316F00();
  id v86 = objc_msgSend(v85, sel_heightAnchor);

  id v87 = sub_1C2316F00();
  id v88 = objc_msgSend(v87, sel_font);

  if (v88)
  {
    objc_msgSend(v88, sel_lineHeight);
    double v90 = v89;

    id v91 = objc_msgSend(v86, sel_constraintGreaterThanOrEqualToConstant_, v90);
    swift_beginAccess();
    id v92 = v91;
    MEMORY[0x1C8757C00]();
    if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
    swift_endAccess();

    swift_bridgeObjectRetain();
    v93 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_activateConstraints_, v93);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C2318150()
{
  id v1 = objc_msgSend(v0, sel_superview);
  if (v1)
  {
    id v55 = v1;
    objc_msgSend(v1, sel_bounds);
    double Width = CGRectGetWidth(v58);
    if (qword_1EA2DD6B8 != -1) {
      swift_once();
    }
    double v3 = *((double *)&xmmword_1EA303AD0 + 1);
    double v4 = *(double *)&qword_1EA303AE8;
    id v56 = sub_1C2316FEC();
    id v5 = &v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData];
    swift_beginAccess();
    uint64_t v6 = *((void *)v5 + 1);
    if (v6)
    {
      unint64_t v7 = *((unsigned int *)v5 + 24) | ((unint64_t)v5[100] << 32);
      uint64_t v9 = *((void *)v5 + 10);
      uint64_t v8 = *((void *)v5 + 11);
      uint64_t v44 = *((void *)v5 + 8);
      uint64_t v47 = *((void *)v5 + 9);
      id v10 = (void *)*((void *)v5 + 6);
      id v11 = (void *)*((void *)v5 + 4);
      id v50 = (void *)*((void *)v5 + 5);
      uint64_t v13 = *((void *)v5 + 2);
      uint64_t v12 = *((void *)v5 + 3);
      uint64_t v14 = *(void *)v5;
      sub_1C22AC0E8(*(void *)v5, v6, v13, v12, v11, v50, v10);
      id v15 = v10;
      uint64_t v38 = v8;
      unint64_t v39 = v7;
      uint64_t v36 = v47;
      uint64_t v37 = v9;
      uint64_t v35 = v44;
      sub_1C22AC064(v14, v6, v13, v12, v11, v50, v10);
    }
    else
    {
      id v10 = 0;
    }
    sub_1C2424EA8(v10);

    uint64_t v16 = *((void *)v5 + 1);
    if (v16)
    {
      uint64_t v17 = *((void *)v5 + 10);
      unint64_t v42 = *((unsigned int *)v5 + 24) | ((unint64_t)v5[100] << 32);
      uint64_t v45 = *((void *)v5 + 11);
      uint64_t v18 = *((void *)v5 + 8);
      id v19 = (void *)*((void *)v5 + 6);
      id v21 = (void *)*((void *)v5 + 4);
      id v20 = (void *)*((void *)v5 + 5);
      uint64_t v22 = *((void *)v5 + 3);
      uint64_t v53 = *((void *)v5 + 2);
      uint64_t v48 = *((void *)v5 + 9);
      uint64_t v51 = *(void *)v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v23 = v21;
      id v24 = v20;
      id v25 = v19;
      swift_bridgeObjectRetain();
      id v26 = sub_1C234B94C(Width - v3 - v4);
      sub_1C22AC064(v51, v16, v53, v22, v21, v20, v19);
      id v27 = sub_1C2316F00();
      objc_msgSend(v27, sel_setAttributedText_, v26, v18, v48, v17, v45, v42);
    }
    id v28 = sub_1C2316F00();
    uint64_t v29 = *((void *)v5 + 1);
    if (v29)
    {
      uint64_t v31 = *((void *)v5 + 8);
      uint64_t v30 = *((void *)v5 + 9);
      uint64_t v32 = *((void *)v5 + 10);
      if (v31)
      {
        if (v32)
        {
          uint64_t v46 = *(void *)v5;
          uint64_t v49 = *((void *)v5 + 2);
          id v57 = (void *)*((void *)v5 + 4);
          double v52 = (void *)*((void *)v5 + 6);
          id v54 = (void *)*((void *)v5 + 5);
          uint64_t v41 = *((void *)v5 + 11);
          uint64_t v43 = *((void *)v5 + 3);
          unint64_t v40 = *((unsigned int *)v5 + 24) | ((unint64_t)v5[100] << 32);
          swift_bridgeObjectRetain();
          sub_1C254F5A0();
          sub_1C22AC0E8(v46, v29, v49, v43, v57, v54, v52);
          swift_bridgeObjectRetain();
          sub_1C254F5A0();
          swift_bridgeObjectRelease();
          uint64_t v38 = v41;
          unint64_t v39 = v40;
          uint64_t v36 = v30;
          uint64_t v37 = v32;
          uint64_t v35 = v31;
          sub_1C22AC064(v46, v29, v49, v43, v57, v54, v52);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        uint64_t v34 = v55;
      }
      else
      {
        uint64_t v34 = v55;
        if (!v32)
        {
          id v33 = 0;
          goto LABEL_19;
        }
        swift_bridgeObjectRetain();
      }
      id v33 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v33 = 0;
      uint64_t v34 = v55;
    }
LABEL_19:
    objc_msgSend(v28, sel_setAccessibilityLabel_, v33, v35, v36, v37, v38, v39);

    sub_1C2317448();
  }
}

id ConceptFeedItemValueView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConceptFeedItemValueView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C231860C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  double v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_1C2318660(char *a1, void *a2)
{
  char v2 = *a1;
  double v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode);
  swift_beginAccess();
  *double v3 = v2;
  sub_1C23168B8();
}

uint64_t sub_1C23186BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  double v3 = (void *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_baseAccessibilityIdentifier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

void sub_1C2318714(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1C2316BE4(v1, v2);
}

uint64_t method lookup function for ConceptFeedItemValueView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConceptFeedItemValueView);
}

uint64_t dispatch thunk of ConceptFeedItemValueView.viewData.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.viewData.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.viewData.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.isInEditingMode.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.isInEditingMode.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.isInEditingMode.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.baseAccessibilityIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.baseAccessibilityIdentifier.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ConceptFeedItemValueView.baseAccessibilityIdentifier.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

void sub_1C23189F8()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_viewData];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_OWORD *)v1 + 3) = 0u;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *(void *)(v1 + 93) = 0;
  v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_isInEditingMode] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_baseAccessibilityIdentifier];
  *uint64_t v2 = 0;
  v2[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView_activeConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___textualValueView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24ConceptFeedItemValueView____lazy_storage___referenceRangeView] = 0;

  sub_1C25505F0();
  __break(1u);
}

void sub_1C2318AC0(void *a1)
{
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (!a1)
  {

LABEL_9:
    sub_1C2317448();
    return;
  }
  id v5 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  uint64_t v6 = sub_1C254F470();
  uint64_t v8 = v7;
  if (v6 == sub_1C254F470() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  char v11 = sub_1C2550870();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    goto LABEL_9;
  }
}

unint64_t sub_1C2318BE4()
{
  unint64_t result = qword_1EA2DEEC0;
  if (!qword_1EA2DEEC0)
  {
    type metadata accessor for UILayoutPriority(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DEEC0);
  }
  return result;
}

uint64_t sub_1C2318C3C(uint64_t a1)
{
  uint64_t v9 = *(void *)(a1 + 104);
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v8 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 128);
  id v4 = *(void **)(a1 + 136);
  id v5 = *(void **)(a1 + 144);
  uint64_t v6 = *(void **)(a1 + 152);
  sub_1C22AC064(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(void **)(a1 + 48));
  sub_1C22AC064(v9, v8, v2, v3, v4, v5, v6);
  return a1;
}

id sub_1C2318D24()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter);
  }
  else
  {
    id v4 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context);
    uint64_t v6 = (objc_class *)type metadata accessor for MedicationDosageFormatter();
    uint64_t v7 = (char *)objc_allocWithZone(v6);
    *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store] = v4;
    *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context] = v5;
    v13.receiver = v7;
    v13.super_class = v6;
    id v8 = v4;
    id v9 = objc_msgSendSuper2(&v13, sel_init);
    id v10 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

uint64_t sub_1C2318DF4(void *a1)
{
  id v2 = objc_msgSend(a1, sel_dosages);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  id v3 = v2;
  sub_1C21AB51C(0, &qword_1EA2DFC10);
  uint64_t v4 = sub_1C254F710();

  id v5 = sub_1C2318D24();
  if (v4 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    unint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t)sub_1C228FB74(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  unint64_t v12 = v6;
  sub_1C23199C8((uint64_t *)&v12);
  unint64_t v7 = v12;
  id v8 = v5;
  uint64_t v9 = sub_1C231AF3C(v7);
  swift_bridgeObjectRelease();
  swift_release();

  return v9;
}

id MedicationOrderFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store);
}

uint64_t MedicationOrderFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context);
}

id MedicationOrderFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  id v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id MedicationOrderFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MedicationOrderFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

unint64_t sub_1C2319018(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context);
  if (v2 == 1)
  {
    return sub_1C231956C(a1);
  }
  else if (v2)
  {
    unint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C231909C(a1);
  }
  return result;
}

uint64_t sub_1C231909C(void *a1)
{
  sub_1C231BCD0(0, (unint64_t *)&qword_1EA2DF0E8, (uint64_t (*)(uint64_t))sub_1C224F494, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255E6B0;
  *(void *)(inited + 32) = sub_1C253F768(a1);
  *(void *)(inited + 40) = sub_1C2512640(a1);
  *(void *)(inited + 48) = sub_1C231B250(a1);
  *(void *)(inited + 56) = sub_1C231B3C8(a1);
  *(void *)(inited + 64) = sub_1C231B540(a1);
  *(void *)(inited + 72) = sub_1C231B744(a1);
  uint64_t v3 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  id v4 = a1;
  uint64_t v5 = sub_1C23F657C(v4);

  uint64_t v6 = Array<A>.newlineJoined.getter(v5);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  *(void *)(inited + 80) = sub_1C2387580(v6, v8, v3);
  *(void *)(inited + 88) = sub_1C231BAE4(v4);
  *(void *)(inited + 96) = sub_1C243F974(v4);
  sub_1C254F730();
  uint64_t v28 = MEMORY[0x1E4FBC860];
  uint64_t v9 = *(void **)(inited + 32);
  if (v9)
  {
    id v10 = v9;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  unint64_t v11 = *(void **)(inited + 40);
  if (v11)
  {
    id v12 = v11;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  objc_super v13 = *(void **)(inited + 48);
  if (v13)
  {
    id v14 = v13;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v15 = *(void **)(inited + 56);
  if (v15)
  {
    id v16 = v15;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  uint64_t v17 = *(void **)(inited + 64);
  if (v17)
  {
    id v18 = v17;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v19 = *(void **)(inited + 72);
  if (v19)
  {
    id v20 = v19;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v21 = *(void **)(inited + 80);
  if (v21)
  {
    id v22 = v21;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v23 = *(void **)(inited + 88);
  if (v23)
  {
    id v24 = v23;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  id v25 = *(void **)(inited + 96);
  if (v25)
  {
    id v26 = v25;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  swift_bridgeObjectRelease();
  return v28;
}

unint64_t sub_1C231956C(void *a1)
{
  unint64_t v18 = MEMORY[0x1E4FBC860];
  unint64_t v2 = sub_1C2421E4C(a1);
  sub_1C22723E8(v2);
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  BOOL v4 = v3 != 0;
  id v5 = sub_1C231B540(a1);
  if (!v5) {
    goto LABEL_8;
  }
  id v6 = v5;
  MEMORY[0x1C8757C00]();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();

  if (!v3)
  {
    BOOL v4 = 1;
LABEL_8:
    uint64_t v7 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
    id v8 = a1;
    uint64_t v9 = sub_1C23F657C(v8);

    uint64_t v10 = Array<A>.newlineJoined.getter(v9);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    objc_super v13 = (void *)sub_1C2387580(v10, v12, v7);
    if (!v13) {
      goto LABEL_12;
    }
    id v14 = v13;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    if (!v4)
    {
LABEL_12:
      id v15 = (void *)sub_1C243F974(v8);
      if (v15)
      {
        id v16 = v15;
        MEMORY[0x1C8757C00]();
        if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();
      }
    }
  }
  return v18;
}

id MedicationOrderFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MedicationOrderFormatter.init()()
{
}

id MedicationOrderFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationOrderFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C23198B0()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store);
}

uint64_t sub_1C23198C4()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context);
}

id sub_1C23198D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = (objc_class *)type metadata accessor for MedicationOrderFormatter();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter____lazy_storage___dosagesFormatter] = 0;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

unint64_t sub_1C2319958(void *a1)
{
  uint64_t v2 = *(void *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI24MedicationOrderFormatter_context);
  if (v2 == 1) {
    return sub_1C231956C(a1);
  }
  if (!v2) {
    return sub_1C231909C(a1);
  }
  unint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

uint64_t sub_1C23199C8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C23F5310();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C2319A44(v6);
  return sub_1C2550470();
}

void sub_1C2319A44(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v161 = sub_1C254CAD0();
  uint64_t v4 = *(void *)(v161 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v161);
  v160 = (char *)&v147 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v159 = (char *)&v147 - v7;
  uint64_t v8 = a1[1];
  uint64_t v9 = sub_1C2550800();
  if (v9 < v8)
  {
    if (v8 >= 0) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v8 + 1;
    }
    if (v8 < -1)
    {
LABEL_165:
      sub_1C25505E0();
      __break(1u);
      return;
    }
    uint64_t v151 = v9;
    uint64_t v152 = v8;
    v149 = a1;
    if (v8 < 2)
    {
      objc_super v13 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v165 = MEMORY[0x1E4FBC860];
      v156 = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
      if (v8 != 1)
      {
        unint64_t v17 = *(void *)(MEMORY[0x1E4FBC860] + 16);
        if (v17 < 2) {
          goto LABEL_120;
        }
        goto LABEL_123;
      }
    }
    else
    {
      uint64_t v11 = v10 >> 1;
      sub_1C21AB51C(0, &qword_1EA2DFC10);
      uint64_t v12 = sub_1C254F780();
      *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) = v11;
      v156 = (void **)((v12 & 0xFFFFFFFFFFFFFF8) + 32);
      uint64_t v165 = v12;
    }
    uint64_t v157 = v1;
    uint64_t v14 = 0;
    uint64_t v15 = *a1;
    v158 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v150 = v15 - 8;
    objc_super v13 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v16 = v152;
    uint64_t v162 = v15;
    while (1)
    {
      uint64_t v18 = v14;
      uint64_t v19 = v14 + 1;
      if (v14 + 1 >= v16) {
        goto LABEL_47;
      }
      uint64_t v163 = v14 + 1;
      id v20 = *(void **)(v15 + 8 * v14);
      id v21 = (void **)*(id *)(v15 + 8 * v19);
      id v22 = v20;
      id v23 = &selRef_setUnsupportedSearchResults_;
      id v24 = objc_msgSend(v21, sel_timingPeriod);
      if (!v24) {
        break;
      }
      id v25 = v24;
      id v26 = objc_msgSend(v24, sel_endDate);

      if (!v26) {
        break;
      }
      v155 = (void **)v22;
      id v27 = objc_msgSend(v22, sel_timingPeriod);
      if (!v27
        || (uint64_t v28 = v27, v29 = objc_msgSend(v27, sel_endDate), v28, !v29))
      {

        LODWORD(v164) = 0;
        id v21 = v155;
        id v23 = &selRef_setUnsupportedSearchResults_;
LABEL_24:

        uint64_t v38 = v18 + 2;
        if (v18 + 2 >= v16) {
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      id v30 = objc_msgSend(v26, sel_dateForUTC);
      uint64_t v31 = v159;
      sub_1C254CA80();

      id v32 = objc_msgSend(v29, sel_dateForUTC);
      id v33 = v160;
      sub_1C254CA80();

      LODWORD(v164) = sub_1C254CA70();
      uint64_t v34 = *v158;
      uint64_t v35 = v33;
      uint64_t v36 = v161;
      (*v158)(v35, v161);
      uint64_t v37 = v36;
      uint64_t v16 = v152;
      v34(v31, v37);

      uint64_t v38 = v18 + 2;
      id v23 = &selRef_setUnsupportedSearchResults_;
      if (v18 + 2 >= v16)
      {
LABEL_37:
        uint64_t v19 = v38;
        if ((v164 & 1) == 0) {
          goto LABEL_48;
        }
LABEL_38:
        if (v38 >= v18)
        {
          if (v18 < v38)
          {
            CGRect v58 = (uint64_t *)(v150 + 8 * v38);
            uint64_t v59 = v38;
            uint64_t v60 = v18;
            id v61 = (uint64_t *)(v15 + 8 * v18);
            do
            {
              if (v60 != --v59)
              {
                if (!v15) {
                  goto LABEL_163;
                }
                uint64_t v62 = *v61;
                *id v61 = *v58;
                *CGRect v58 = v62;
              }
              ++v60;
              --v58;
              ++v61;
            }
            while (v60 < v59);
          }
          uint64_t v19 = v38;
          goto LABEL_48;
        }
        goto LABEL_160;
      }
LABEL_25:
      uint64_t v39 = v38;
      uint64_t v40 = v163;
      uint64_t v154 = v18;
      while (1)
      {
        uint64_t v38 = v39;
        uint64_t v41 = *(void **)(v15 + 8 * v40);
        id v42 = *(id *)(v15 + 8 * v39);
        id v43 = v41;
        id v44 = [v42 v23[132]];
        if (v44)
        {
          uint64_t v45 = v44;
          id v46 = objc_msgSend(v44, sel_endDate);

          if (v46)
          {
            id v47 = objc_msgSend(v43, sel_timingPeriod);
            if (v47
              && (uint64_t v48 = v47,
                  id v49 = objc_msgSend(v47, sel_endDate),
                  v48,
                  v49))
            {
              id v50 = objc_msgSend(v46, sel_dateForUTC);
              uint64_t v51 = v159;
              sub_1C254CA80();

              id v52 = objc_msgSend(v49, sel_dateForUTC);
              uint64_t v53 = v160;
              sub_1C254CA80();

              id v54 = v51;
              LODWORD(v163) = sub_1C254CA70();

              id v55 = *v158;
              id v56 = v53;
              uint64_t v18 = v154;
              uint64_t v57 = v161;
              (*v158)(v56, v161);
              v55(v54, v57);
              uint64_t v16 = v152;

              if ((v164 ^ v163))
              {
                uint64_t v15 = v162;
                id v23 = &selRef_setUnsupportedSearchResults_;
                goto LABEL_37;
              }
            }
            else
            {

              if (v164)
              {
                uint64_t v15 = v162;
                id v23 = &selRef_setUnsupportedSearchResults_;
                goto LABEL_38;
              }
            }
            goto LABEL_27;
          }
        }

        if ((v164 & 1) == 0) {
          break;
        }
LABEL_27:
        uint64_t v39 = v38 + 1;
        uint64_t v40 = v38;
        uint64_t v15 = v162;
        id v23 = &selRef_setUnsupportedSearchResults_;
        if (v38 + 1 >= v16)
        {
          ++v38;
          goto LABEL_37;
        }
      }
      uint64_t v19 = v38;
      uint64_t v15 = v162;
LABEL_47:
      id v23 = &selRef_setUnsupportedSearchResults_;
LABEL_48:
      uint64_t v14 = v19;
      if (v19 >= v16) {
        goto LABEL_72;
      }
      uint64_t v63 = v19 - v18;
      if (__OFSUB__(v14, v18)) {
        goto LABEL_156;
      }
      if (v63 >= v151) {
        goto LABEL_72;
      }
      if (__OFADD__(v18, v151)) {
        goto LABEL_158;
      }
      if (v18 + v151 >= v16) {
        uint64_t v64 = v16;
      }
      else {
        uint64_t v64 = v18 + v151;
      }
      if (v64 < v18)
      {
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
        goto LABEL_165;
      }
      if (v14 == v64) {
        goto LABEL_72;
      }
      v148 = v13;
      unsigned int v65 = (void **)(v150 + 8 * v14);
      id v66 = &selRef_addSubview_;
      uint64_t v153 = v64;
      uint64_t v154 = v18;
      while (2)
      {
        id v67 = *(void **)(v15 + 8 * v14);
        v155 = v65;
        uint64_t v163 = v14;
        while (2)
        {
          id v68 = *v65;
          id v69 = v67;
          id v164 = v68;
          id v70 = [v69 v23[132]];
          if (!v70
            || (id v71 = v70, v72 = [v70 v66[255]],
                           v71,
                           !v72))
          {

            goto LABEL_68;
          }
          id v73 = [v164 v23[132]];
          if (v73)
          {
            id v74 = v73;
            id v75 = [v73 v66[255]];

            if (v75)
            {
              id v76 = objc_msgSend(v72, sel_dateForUTC);
              uint64_t v77 = v159;
              sub_1C254CA80();

              id v78 = objc_msgSend(v75, sel_dateForUTC);
              id v79 = v160;
              sub_1C254CA80();

              LOBYTE(v78) = sub_1C254CA70();
              id v80 = *v158;
              id v81 = v79;
              id v66 = &selRef_addSubview_;
              uint64_t v82 = v161;
              (*v158)(v81, v161);
              id v83 = v77;
              uint64_t v15 = v162;
              v80(v83, v82);
              id v23 = &selRef_setUnsupportedSearchResults_;

              uint64_t v14 = v163;
              if ((v78 & 1) == 0) {
                goto LABEL_59;
              }
LABEL_68:
              if (!v15) {
                goto LABEL_161;
              }
              id v84 = *v65;
              id v67 = v65[1];
              *unsigned int v65 = v67;
              v65[1] = v84;
              --v65;
              if (v14 == ++v18) {
                goto LABEL_59;
              }
              continue;
            }
          }
          break;
        }

        uint64_t v14 = v163;
LABEL_59:
        ++v14;
        uint64_t v18 = v154;
        unsigned int v65 = v155 + 1;
        if (v14 != v153) {
          continue;
        }
        break;
      }
      uint64_t v14 = v153;
      objc_super v13 = v148;
LABEL_72:
      if (v14 < v18) {
        goto LABEL_151;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        objc_super v13 = sub_1C23F277C(0, *((void *)v13 + 2) + 1, 1, v13);
      }
      unint64_t v86 = *((void *)v13 + 2);
      unint64_t v85 = *((void *)v13 + 3);
      unint64_t v17 = v86 + 1;
      if (v86 >= v85 >> 1) {
        objc_super v13 = sub_1C23F277C((char *)(v85 > 1), v86 + 1, 1, v13);
      }
      *((void *)v13 + 2) = v17;
      id v87 = v13 + 32;
      id v88 = &v13[16 * v86 + 32];
      *(void *)id v88 = v18;
      *((void *)v88 + 1) = v14;
      if (v86)
      {
        uint64_t v163 = v14;
        while (1)
        {
          unint64_t v89 = v17 - 1;
          if (v17 >= 4)
          {
            uint64_t v94 = &v87[16 * v17];
            uint64_t v95 = *((void *)v94 - 8);
            uint64_t v96 = *((void *)v94 - 7);
            BOOL v100 = __OFSUB__(v96, v95);
            uint64_t v97 = v96 - v95;
            if (v100) {
              goto LABEL_140;
            }
            uint64_t v99 = *((void *)v94 - 6);
            uint64_t v98 = *((void *)v94 - 5);
            BOOL v100 = __OFSUB__(v98, v99);
            uint64_t v92 = v98 - v99;
            char v93 = v100;
            if (v100) {
              goto LABEL_141;
            }
            unint64_t v101 = v17 - 2;
            v102 = &v87[16 * v17 - 32];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v100 = __OFSUB__(v103, v104);
            uint64_t v105 = v103 - v104;
            if (v100) {
              goto LABEL_143;
            }
            BOOL v100 = __OFADD__(v92, v105);
            uint64_t v106 = v92 + v105;
            if (v100) {
              goto LABEL_146;
            }
            if (v106 >= v97)
            {
              v124 = &v87[16 * v89];
              uint64_t v126 = *(void *)v124;
              uint64_t v125 = *((void *)v124 + 1);
              BOOL v100 = __OFSUB__(v125, v126);
              uint64_t v127 = v125 - v126;
              if (v100) {
                goto LABEL_150;
              }
              BOOL v117 = v92 < v127;
              goto LABEL_110;
            }
          }
          else
          {
            if (v17 != 3)
            {
              uint64_t v118 = *((void *)v13 + 4);
              uint64_t v119 = *((void *)v13 + 5);
              BOOL v100 = __OFSUB__(v119, v118);
              uint64_t v111 = v119 - v118;
              char v112 = v100;
              goto LABEL_104;
            }
            uint64_t v91 = *((void *)v13 + 4);
            uint64_t v90 = *((void *)v13 + 5);
            BOOL v100 = __OFSUB__(v90, v91);
            uint64_t v92 = v90 - v91;
            char v93 = v100;
          }
          if (v93) {
            goto LABEL_142;
          }
          unint64_t v101 = v17 - 2;
          v107 = &v87[16 * v17 - 32];
          uint64_t v109 = *(void *)v107;
          uint64_t v108 = *((void *)v107 + 1);
          BOOL v110 = __OFSUB__(v108, v109);
          uint64_t v111 = v108 - v109;
          char v112 = v110;
          if (v110) {
            goto LABEL_145;
          }
          v113 = &v87[16 * v89];
          uint64_t v115 = *(void *)v113;
          uint64_t v114 = *((void *)v113 + 1);
          BOOL v100 = __OFSUB__(v114, v115);
          uint64_t v116 = v114 - v115;
          if (v100) {
            goto LABEL_148;
          }
          if (__OFADD__(v111, v116)) {
            goto LABEL_149;
          }
          if (v111 + v116 >= v92)
          {
            BOOL v117 = v92 < v116;
LABEL_110:
            if (v117) {
              unint64_t v89 = v101;
            }
            goto LABEL_112;
          }
LABEL_104:
          if (v112) {
            goto LABEL_144;
          }
          v120 = &v87[16 * v89];
          uint64_t v122 = *(void *)v120;
          uint64_t v121 = *((void *)v120 + 1);
          BOOL v100 = __OFSUB__(v121, v122);
          uint64_t v123 = v121 - v122;
          if (v100) {
            goto LABEL_147;
          }
          if (v123 < v111) {
            goto LABEL_14;
          }
LABEL_112:
          unint64_t v128 = v89 - 1;
          if (v89 - 1 >= v17)
          {
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
            goto LABEL_159;
          }
          if (!v15) {
            goto LABEL_162;
          }
          v129 = v13;
          uint64_t v130 = v15;
          v131 = &v87[16 * v128];
          v132 = v87;
          uint64_t v133 = *(void *)v131;
          v134 = v132;
          unint64_t v135 = v89;
          v136 = &v132[16 * v89];
          uint64_t v137 = *((void *)v136 + 1);
          uint64_t v138 = v130;
          uint64_t v139 = v157;
          sub_1C231A8FC((void **)(v130 + 8 * *(void *)v131), (void **)(v130 + 8 * *(void *)v136), (void **)(v130 + 8 * v137), v156);
          uint64_t v157 = v139;
          if (v139) {
            goto LABEL_120;
          }
          if (v137 < v133) {
            goto LABEL_137;
          }
          if (v135 > *((void *)v129 + 2)) {
            goto LABEL_138;
          }
          *(void *)v131 = v133;
          *(void *)&v134[16 * v128 + 8] = v137;
          unint64_t v140 = *((void *)v129 + 2);
          if (v135 >= v140) {
            goto LABEL_139;
          }
          id v87 = v134;
          objc_super v13 = v129;
          unint64_t v17 = v140 - 1;
          memmove(v136, v136 + 16, 16 * (v140 - 1 - v135));
          *((void *)v129 + 2) = v140 - 1;
          uint64_t v14 = v163;
          uint64_t v15 = v138;
          if (v140 <= 2) {
            goto LABEL_14;
          }
        }
      }
      unint64_t v17 = 1;
LABEL_14:
      uint64_t v16 = v152;
      if (v14 >= v152)
      {
        uint64_t v2 = v157;
        if (v17 < 2)
        {
LABEL_120:
          swift_bridgeObjectRelease();
          *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_1C254F730();
          swift_bridgeObjectRelease();
          return;
        }
LABEL_123:
        uint64_t v141 = *v149;
        while (1)
        {
          unint64_t v142 = v17 - 2;
          if (v17 < 2) {
            goto LABEL_152;
          }
          if (!v141) {
            goto LABEL_164;
          }
          uint64_t v143 = *(void *)&v13[16 * v142 + 32];
          uint64_t v144 = *(void *)&v13[16 * v17 + 24];
          sub_1C231A8FC((void **)(v141 + 8 * v143), (void **)(v141 + 8 * *(void *)&v13[16 * v17 + 16]), (void **)(v141 + 8 * v144), v156);
          if (v2) {
            goto LABEL_120;
          }
          if (v144 < v143) {
            goto LABEL_153;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            objc_super v13 = sub_1C23F321C((uint64_t)v13);
          }
          if (v142 >= *((void *)v13 + 2)) {
            goto LABEL_154;
          }
          v145 = &v13[16 * v142 + 32];
          *(void *)v145 = v143;
          *((void *)v145 + 1) = v144;
          unint64_t v146 = *((void *)v13 + 2);
          if (v17 > v146) {
            goto LABEL_155;
          }
          memmove(&v13[16 * v17 + 16], &v13[16 * v17 + 32], 16 * (v146 - v17));
          *((void *)v13 + 2) = v146 - 1;
          unint64_t v17 = v146 - 1;
          if (v146 <= 2) {
            goto LABEL_120;
          }
        }
      }
    }
    LODWORD(v164) = 1;
    id v26 = v22;
    goto LABEL_24;
  }
  if (v8 < 0) {
    goto LABEL_157;
  }
  if (v8) {
    sub_1C231A620(0, v8, 1, a1);
  }
}

void sub_1C231A620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v39 = a1;
  uint64_t v44 = sub_1C254CAD0();
  uint64_t v7 = MEMORY[0x1F4188790](v44);
  id v43 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  id v42 = (char *)&v37 - v10;
  uint64_t v38 = a2;
  if (a3 != a2)
  {
    uint64_t v11 = *a4;
    uint64_t v12 = *a4 + 8 * a3;
    uint64_t v41 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v13 = v12 - 8;
    uint64_t v14 = &selRef_setUnsupportedSearchResults_;
LABEL_6:
    uint64_t v15 = *(void **)(v11 + 8 * a3);
    uint64_t v16 = v39;
    uint64_t v40 = v13;
    uint64_t v45 = a3;
    while (1)
    {
      unint64_t v17 = *(void **)v13;
      id v18 = v15;
      id v19 = v17;
      id v20 = [v18 v14[132]];
      if (v20
        && (id v21 = v20, v22 = objc_msgSend(v20, sel_endDate), v21, v22))
      {
        id v23 = v14[132];
        id v47 = v19;
        id v24 = [v19 v23];
        if (!v24
          || (id v25 = v24,
              id v26 = objc_msgSend(v24, sel_endDate),
              v25,
              !v26))
        {

LABEL_5:
          ++a3;
          uint64_t v13 = v40 + 8;
          if (a3 == v38) {
            return;
          }
          goto LABEL_6;
        }
        id v27 = objc_msgSend(v22, sel_dateForUTC);
        uint64_t v28 = v42;
        sub_1C254CA80();

        id v29 = objc_msgSend(v26, sel_dateForUTC);
        uint64_t v30 = v11;
        uint64_t v31 = v43;
        sub_1C254CA80();

        int v46 = sub_1C254CA70();
        id v32 = *v41;
        id v33 = v31;
        uint64_t v11 = v30;
        uint64_t v14 = &selRef_setUnsupportedSearchResults_;
        uint64_t v34 = v44;
        (*v41)(v33, v44);
        uint64_t v35 = v28;
        a3 = v45;
        v32(v35, v34);

        if ((v46 & 1) == 0) {
          goto LABEL_5;
        }
      }
      else
      {
      }
      if (!v11) {
        break;
      }
      uint64_t v36 = *(void **)v13;
      uint64_t v15 = *(void **)(v13 + 8);
      *(void *)uint64_t v13 = v15;
      *(void *)(v13 + 8) = v36;
      v13 -= 8;
      if (a3 == ++v16) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C231A8FC(void **a1, void **a2, void **a3, void **a4)
{
  uint64_t v69 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v69 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v69);
  id v68 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v70 = (char *)&v64 - v11;
  uint64_t v12 = (char *)a2 - (char *)a1;
  uint64_t v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0) {
    uint64_t v13 = (char *)a2 - (char *)a1;
  }
  uint64_t v14 = v13 >> 3;
  id v72 = a3;
  uint64_t v15 = (char *)a3 - (char *)a2;
  uint64_t v16 = v15 / 8;
  uint64_t v77 = a1;
  id v76 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7) {
      goto LABEL_58;
    }
    if (a4 != a2 || &a2[v16] <= a4) {
      memmove(a4, a2, 8 * v16);
    }
    uint64_t v38 = &a4[v16];
    id v75 = v38;
    uint64_t v77 = a2;
    if (v15 < 8 || a1 >= a2)
    {
LABEL_57:
      sub_1C23F2978(&v77, &v76, &v75);
      return 1;
    }
    uint64_t v64 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v39 = v72 - 1;
    uint64_t v40 = a2;
    id v74 = a4;
    while (1)
    {
      uint64_t v41 = v39 + 1;
      id v72 = v38;
      id v43 = *--v38;
      id v42 = v43;
      uint64_t v44 = *--v40;
      id v45 = v42;
      id v73 = v44;
      id v46 = objc_msgSend(v45, sel_timingPeriod);
      if (v46
        && (id v47 = v46, v48 = objc_msgSend(v46, sel_endDate), v47, v48))
      {
        id v71 = v48;
        id v49 = objc_msgSend(v73, sel_timingPeriod);
        if (!v49
          || (id v50 = v49,
              uint64_t v51 = (void (**)(char *, uint64_t))objc_msgSend(v49, sel_endDate),
              v50,
              (id v67 = v51) == 0))
        {

LABEL_51:
          id v75 = v38;
          uint64_t v60 = v41;
          BOOL v61 = v41 >= v72;
          uint64_t v62 = v74;
          if (!v61 || v39 >= v72 || v60 != v72) {
            *uint64_t v39 = *v38;
          }
          uint64_t v40 = a2;
          if (v38 <= v62) {
            goto LABEL_57;
          }
          goto LABEL_38;
        }
        id v66 = v39 + 1;
        id v52 = objc_msgSend(v71, sel_dateForUTC);
        sub_1C254CA80();

        uint64_t v53 = v67;
        id v54 = objc_msgSend(v67, sel_dateForUTC);
        id v55 = v68;
        sub_1C254CA80();

        int v65 = sub_1C254CA70();
        id v56 = *v64;
        uint64_t v57 = v69;
        (*v64)(v55, v69);
        v56(v70, v57);
        uint64_t v41 = v66;

        if ((v65 & 1) == 0) {
          goto LABEL_51;
        }
      }
      else
      {
      }
      BOOL v58 = v41 == a2;
      uint64_t v59 = v74;
      uint64_t v38 = v72;
      if (!v58 || v39 >= a2) {
        *uint64_t v39 = *v40;
      }
      uint64_t v77 = v40;
      if (v38 <= v59) {
        goto LABEL_57;
      }
LABEL_38:
      --v39;
      a2 = v40;
      if (v40 <= a1) {
        goto LABEL_57;
      }
    }
  }
  if (v12 >= -7)
  {
    if (a4 != a1 || &a1[v14] <= a4) {
      memmove(a4, a1, 8 * v14);
    }
    id v73 = &a4[v14];
    id v75 = v73;
    unint64_t v17 = v72;
    if (v12 >= 8 && a2 < v72)
    {
      id v67 = (void (**)(char *, uint64_t))(v8 + 8);
      id v18 = &selRef_setUnsupportedSearchResults_;
      id v19 = v70;
      while (1)
      {
        id v20 = *a2;
        id v74 = a4;
        id v21 = *a4;
        id v22 = v20;
        id v23 = v21;
        id v24 = [v22 v18[132]];
        if (!v24) {
          break;
        }
        id v25 = v24;
        id v26 = objc_msgSend(v24, sel_endDate);

        if (!v26) {
          break;
        }
        id v27 = [v23 v18[132]];
        if (v27
          && (uint64_t v28 = v27, v29 = objc_msgSend(v27, sel_endDate),
                         v28,
                         v29))
        {
          id v30 = objc_msgSend(v26, sel_dateForUTC);
          sub_1C254CA80();

          id v31 = objc_msgSend(v29, sel_dateForUTC);
          id v32 = v68;
          sub_1C254CA80();

          LODWORD(v71) = sub_1C254CA70();
          id v33 = *v67;
          uint64_t v34 = v32;
          unint64_t v17 = v72;
          uint64_t v35 = v69;
          (*v67)(v34, v69);
          v33(v19, v35);

          id v18 = &selRef_setUnsupportedSearchResults_;
          if (v71) {
            goto LABEL_18;
          }
        }
        else
        {

          id v18 = &selRef_setUnsupportedSearchResults_;
        }
        uint64_t v37 = v74;
        if (a1 != v74) {
          *a1 = *v74;
        }
        a4 = v37 + 1;
        id v76 = a4;
        uint64_t v36 = a2;
LABEL_26:
        uint64_t v77 = ++a1;
        if (a4 < v73)
        {
          a2 = v36;
          if (v36 < v17) {
            continue;
          }
        }
        goto LABEL_57;
      }

LABEL_18:
      uint64_t v36 = a2 + 1;
      a4 = v74;
      if (a1 < a2 || a1 >= v36 || a1 != a2) {
        *a1 = *a2;
      }
      goto LABEL_26;
    }
    goto LABEL_57;
  }
LABEL_58:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C231AF3C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v17 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2274CD0(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v3 = v17;
    unint64_t v15 = v1 & 0xC000000000000001;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
    uint64_t v5 = 0;
    unint64_t v6 = v1;
    while (v2 != v5)
    {
      if (v15) {
        id v7 = (id)MEMORY[0x1C87588E0](v5, v1);
      }
      else {
        id v7 = *(id *)(v1 + 8 * v5 + 32);
      }
      id v8 = v7;
      id v9 = sub_1C23423F8(v8);
      if (v9)
      {
        id v10 = v9;
        sub_1C21ACA3C();
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_1C255CEB0;
        *(void *)(v11 + 32) = v10;
        uint64_t v16 = v11;
        sub_1C254F730();
        uint64_t v12 = v16;
      }
      else
      {

        uint64_t v12 = MEMORY[0x1E4FBC860];
      }
      unint64_t v14 = *(void *)(v17 + 16);
      unint64_t v13 = *(void *)(v17 + 24);
      if (v14 >= v13 >> 1) {
        sub_1C2274CD0(v13 > 1, v14 + 1, 1);
      }
      ++v5;
      *(void *)(v17 + 16) = v14 + 1;
      *(void *)(v17 + 8 * v14 + 32) = v12;
      unint64_t v1 = v6;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MedicationOrderFormatter()
{
  return self;
}

unint64_t sub_1C231B140(uint64_t a1)
{
  unint64_t result = sub_1C231B168();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C231B168()
{
  unint64_t result = qword_1EA2E0F28;
  if (!qword_1EA2E0F28)
  {
    type metadata accessor for MedicationOrderFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0F28);
  }
  return result;
}

uint64_t method lookup function for MedicationOrderFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationOrderFormatter);
}

uint64_t dispatch thunk of MedicationOrderFormatter.structuredItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicationOrderFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of MedicationOrderFormatter.displayItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

id sub_1C231B250(void *a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(a1, sel_writtenDate, 0xE000000000000000);
  id v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  id v11 = sub_1C23898E0(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1C231B3C8(void *a1)
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(a1, sel_endedDate, 0xE000000000000000);
  id v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  id v11 = sub_1C23898E0(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1C231B540(void *a1)
{
  id v1 = objc_msgSend(a1, sel_prescriber);
  if (v1)
  {
    uint64_t v2 = sub_1C254F470();
    unint64_t v4 = v3;

    uint64_t v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5)
    {
      id v1 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v1, sel_setDisplayItemType_, 15);
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v6 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      id v7 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v7, 0xE000000000000000);

      uint64_t v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setSubtitle_, v8);

      objc_msgSend(v1, sel_setSeparatorStyle_, 0);
      objc_msgSend(v1, sel_setSeparatorHidden_, 0);
      objc_msgSend(v1, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v1;
}

id sub_1C231B744(void *a1)
{
  sub_1C231BCD0(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v19 - v3;
  if ((uint64_t)objc_msgSend(a1, sel_numberOfFills) < 1) {
    return 0;
  }
  uint64_t v5 = sub_1C254CBD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1C231BCD0(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255CD90;
  id v7 = objc_msgSend(a1, sel_numberOfFills);
  uint64_t v8 = MEMORY[0x1E4FBB5C8];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v6 + 64) = v8;
  *(void *)(v6 + 32) = v7;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v9 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v10 = sub_1C254F4A0();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v4);
  uint64_t v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0) {
    uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (!v13)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v14 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
  objc_msgSend(v14, sel_setDisplayItemType_, 15);
  id v15 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v16 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setTitle_, v16);

  uint64_t v17 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setSubtitle_, v17);

  objc_msgSend(v14, sel_setSeparatorStyle_, 0);
  objc_msgSend(v14, sel_setSeparatorHidden_, 0);
  objc_msgSend(v14, sel_setExtraTopPadding_, 0);

  return v14;
}

id sub_1C231BAE4(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1C23F6588(v1);
  unint64_t v4 = v3;

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    id v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    id v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

void sub_1C231BCD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C231BD34@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  id v68 = a2;
  uint64_t v3 = sub_1C254CBD0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v85 = v3;
  uint64_t v86 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  id v80 = (char *)&v62 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  id v76 = (char *)&v62 - v11;
  uint64_t v77 = v12;
  MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v62 - v13;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  unint64_t v17 = a1[7];
  if (*(void *)(v17 + 16) == 1)
  {
    sub_1C241B5B8(a1[7]);
    if (v20)
    {
      uint64_t v15 = v18;
      uint64_t v16 = v19;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v16 = 0;
    }
  }
  sub_1C23273B4(0, &qword_1EA2DE7A8, (uint64_t)&_s13FormattedDataVN, (uint64_t (*)(void, uint64_t))_s7PDFDataVMa);
  uint64_t v22 = (uint64_t)a1 + *(int *)(v21 + 28);
  uint64_t v23 = v22 + *(int *)(_s13ConfigurationVMa() + 36);
  id v24 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
  id v78 = v14;
  uint64_t v84 = v86 + 16;
  id v67 = v24;
  v24(v14, (char *)v23, v85);
  id v79 = &v62;
  uint64_t v25 = *a1;
  uint64_t v26 = a1[1];
  uint64_t v27 = a1[3];
  uint64_t v71 = a1[2];
  uint64_t v72 = v25;
  uint64_t v28 = a1[5];
  uint64_t v70 = a1[4];
  uint64_t v29 = a1[6];
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v87 = v22;
  unint64_t v60 = v22;
  uint64_t v88 = v29;
  uint64_t v73 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v75 = v26;
  swift_bridgeObjectRetain();
  uint64_t v74 = v27;
  swift_bridgeObjectRetain();
  id v31 = v83;
  uint64_t v32 = sub_1C231F52C((uint64_t)sub_1C231C5A0, (uint64_t)(&v62 - 4), sub_1C23F3724, (uint64_t (*)(uint64_t, uint64_t))sub_1C231F888);
  if (v31)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v81 = v16;
    uint64_t v82 = v15;
    id v83 = v7;
    uint64_t v33 = v88;
    MEMORY[0x1F4188790](v32);
    unint64_t v60 = v17;
    uint64_t v61 = v87;
    uint64_t v66 = sub_1C22686B4((void (*)(void *__return_ptr, void *))sub_1C231F28C, (uint64_t)(&v62 - 4), v33);
    uint64_t v69 = 0;
    swift_release();
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v34 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    unint64_t v60 = 0xE000000000000000;
    uint64_t v65 = sub_1C254C730();
    uint64_t v64 = v35;
    swift_bridgeObjectRelease();

    id v36 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    unint64_t v60 = 0xE000000000000000;
    uint64_t v63 = sub_1C254C730();
    uint64_t v62 = v37;
    swift_bridgeObjectRelease();

    uint64_t v38 = v76;
    uint64_t v39 = v78;
    uint64_t v40 = v85;
    uint64_t v41 = v67;
    v67(v76, v78, v85);
    uint64_t v42 = v86;
    unint64_t v43 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
    uint64_t v77 = swift_allocObject();
    uint64_t v44 = *(void (**)(unint64_t, char *, uint64_t))(v42 + 32);
    v44(v77 + v43, v38, v40);
    id v45 = v80;
    v41(v80, v39, v40);
    uint64_t v46 = swift_allocObject();
    v44(v46 + v43, v45, v40);
    id v47 = v83;
    v44((unint64_t)v83, v39, v40);
    uint64_t v48 = swift_allocObject();
    v44(v48 + v43, v47, v40);
    sub_1C23273B4(0, &qword_1EA2E0F30, (uint64_t)&_s10SortedDataVN, (uint64_t (*)(void, uint64_t))_s7PDFDataVMa);
    uint64_t v50 = v49;
    uint64_t v51 = v68;
    sub_1C22177F8(v87, (uint64_t)v68 + *(int *)(v49 + 28));
    uint64_t v52 = v75;
    *uint64_t v51 = v72;
    v51[1] = v52;
    uint64_t v53 = v74;
    v51[2] = v71;
    v51[3] = v53;
    uint64_t v54 = v73;
    v51[4] = v70;
    v51[5] = v54;
    uint64_t v55 = v81;
    v51[6] = v82;
    v51[7] = v55;
    v51[8] = v66;
    v51[9] = 0x676F6C656C707061;
    v51[10] = 0xE90000000000006FLL;
    uint64_t v56 = v64;
    v51[11] = v65;
    v51[12] = v56;
    uint64_t v57 = v62;
    v51[13] = v63;
    v51[14] = v57;
    uint64_t v58 = v77;
    v51[15] = sub_1C231F2B0;
    v51[16] = v58;
    v51[17] = sub_1C231F2CC;
    v51[18] = v46;
    v51[19] = sub_1C231F3FC;
    v51[20] = v48;
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v51, 0, 1, v50);
  }
  return result;
}

BOOL sub_1C231C3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void (*)(uint64_t))MEMORY[0x1E4F27A78];
  sub_1C2326E14(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v19 - v8;
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t v14 = a3 + *(int *)(_s13ConfigurationVMa() + 36);
  v19[2] = v11;
  v19[3] = v10;
  v19[0] = v13;
  v19[1] = v12;
  uint64_t v15 = sub_1C254CBD0();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v9, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
  sub_1C2218914();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C25501B0();
  sub_1C2326ED0((uint64_t)v9, (unint64_t *)&qword_1EA2E2D90, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17 == -1;
}

BOOL sub_1C231C5A0(uint64_t a1, uint64_t a2)
{
  return sub_1C231C3D4(a1, a2, *(void *)(v2 + 16));
}

void *sub_1C231C5C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v8 = a1[4];
  char v9 = *((unsigned char *)a1 + 40);
  switch(v9)
  {
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C231CAAC(v8, a2, a3);
      break;
    case 2:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C231CE40(v8, a2, a3);
      break;
    case 3:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C231D1D4(v8, a2, a3);
      break;
    case 4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C231D568(v8, a2, a3);
      break;
    default:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C231C718(v8, a2, a3);
      break;
  }
  *(void *)a4 = v5;
  *(void *)(a4 + 8) = v4;
  *(void *)(a4 + 16) = v7;
  *(void *)(a4 + 24) = v6;
  *(void *)(a4 + 32) = result;
  *(unsigned char *)(a4 + 40) = v9;
  return result;
}

void *sub_1C231C718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s13ConfigurationVMa();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v10 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = a3 + *(int *)(v11 + 44);
  uint64_t v41 = a2;
  uint64_t v42 = v14;
  uint64_t v15 = sub_1C2326AFC(a1, (void (*)(void *__return_ptr, _OWORD *, uint64_t))sub_1C2326DC0, (uint64_t)v40, (uint64_t)v43, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_1C2274EF8, (uint64_t (*)(uint64_t))sub_1C24BBB28);
  uint64_t v39 = v14;
  *(void *)&v47[0] = v15;
  swift_bridgeObjectRetain();
  sub_1C231F7D8((uint64_t (*)(long long *, long long *))sub_1C2326DC8, (uint64_t)v38);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)&v47[0];
  sub_1C22177F8(a3, (uint64_t)v13);
  sub_1C22177F8((uint64_t)v13, (uint64_t)v10);
  unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v35 = swift_allocObject();
  sub_1C22179D4((uint64_t)v13, v35 + v17);
  uint64_t v18 = *(void *)(v16 + 16);
  if (v18)
  {
    id v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_retain();
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v34 = v16;
    uint64_t v20 = (uint64_t *)(v16 + 80);
    do
    {
      long long v22 = *((_OWORD *)v20 - 3);
      long long v23 = *((_OWORD *)v20 - 1);
      v47[1] = *((_OWORD *)v20 - 2);
      v47[2] = v23;
      v47[0] = v22;
      uint64_t v24 = *v20;
      sub_1C2326DE8((uint64_t)v47);
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = (void *)MEMORY[0x1C87594F0](v25);
      sub_1C231D8FC((uint64_t)v47, (uint64_t)v36, v24, v44);
      uint64_t v27 = v44[0];
      uint64_t v28 = v44[1];
      uint64_t v30 = v44[2];
      uint64_t v29 = v44[3];
      uint64_t v37 = v44[4];
      sub_1C22841AC((uint64_t)v47);
      swift_bridgeObjectRelease();
      sub_1C2327340((uint64_t)v44, (uint64_t)v45, &qword_1EA2E0F38, &qword_1EA2DF508, (void (*)(void))sub_1C226FEAC);
      if (v46)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_1C226D5BC(0, v19[2] + 1, 1, v19);
        }
        unint64_t v32 = v19[2];
        unint64_t v31 = v19[3];
        if (v32 >= v31 >> 1) {
          uint64_t v19 = sub_1C226D5BC((void *)(v31 > 1), v32 + 1, 1, v19);
        }
        v19[2] = v32 + 1;
        uint64_t v21 = &v19[5 * v32];
        v21[4] = v27;
        v21[5] = v28;
        v21[6] = v30;
        v21[7] = v29;
        v21[8] = v37;
      }
      v20 += 7;
      --v18;
    }
    while (v18);
    swift_release();
    uint64_t v10 = v36;
  }
  else
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_release();
  swift_release();
  sub_1C221810C((uint64_t)v10);
  return v19;
}

void *sub_1C231CAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s13ConfigurationVMa();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v10 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = a3 + *(int *)(v11 + 44);
  uint64_t v41 = a2;
  uint64_t v42 = v14;
  uint64_t v15 = sub_1C2326AFC(a1, (void (*)(void *__return_ptr, _OWORD *, uint64_t))sub_1C2326F2C, (uint64_t)v40, (uint64_t)v43, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_1C2274EB8, (uint64_t (*)(uint64_t))sub_1C24BBB28);
  uint64_t v39 = v14;
  *(void *)&v47[0] = v15;
  swift_bridgeObjectRetain();
  sub_1C231F728((uint64_t (*)(long long *, long long *))sub_1C2326DC8, (uint64_t)v38);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)&v47[0];
  sub_1C22177F8(a3, (uint64_t)v13);
  sub_1C22177F8((uint64_t)v13, (uint64_t)v10);
  unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v35 = swift_allocObject();
  sub_1C22179D4((uint64_t)v13, v35 + v17);
  uint64_t v18 = *(void *)(v16 + 16);
  if (v18)
  {
    id v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_retain();
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v34 = v16;
    uint64_t v20 = (uint64_t *)(v16 + 80);
    do
    {
      long long v22 = *((_OWORD *)v20 - 3);
      long long v23 = *((_OWORD *)v20 - 1);
      v47[1] = *((_OWORD *)v20 - 2);
      v47[2] = v23;
      v47[0] = v22;
      uint64_t v24 = *v20;
      sub_1C2326DE8((uint64_t)v47);
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = (void *)MEMORY[0x1C87594F0](v25);
      sub_1C231D8FC((uint64_t)v47, (uint64_t)v36, v24, v44);
      uint64_t v27 = v44[0];
      uint64_t v28 = v44[1];
      uint64_t v30 = v44[2];
      uint64_t v29 = v44[3];
      uint64_t v37 = v44[4];
      sub_1C22841AC((uint64_t)v47);
      swift_bridgeObjectRelease();
      sub_1C2327340((uint64_t)v44, (uint64_t)v45, &qword_1EA2E0F40, &qword_1EA2DF520, (void (*)(void))sub_1C226FF7C);
      if (v46)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_1C226D580(0, v19[2] + 1, 1, v19);
        }
        unint64_t v32 = v19[2];
        unint64_t v31 = v19[3];
        if (v32 >= v31 >> 1) {
          uint64_t v19 = sub_1C226D580((void *)(v31 > 1), v32 + 1, 1, v19);
        }
        v19[2] = v32 + 1;
        uint64_t v21 = &v19[5 * v32];
        v21[4] = v27;
        v21[5] = v28;
        v21[6] = v30;
        v21[7] = v29;
        v21[8] = v37;
      }
      v20 += 7;
      --v18;
    }
    while (v18);
    swift_release();
    uint64_t v10 = v36;
  }
  else
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_release();
  swift_release();
  sub_1C221810C((uint64_t)v10);
  return v19;
}

void *sub_1C231CE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s13ConfigurationVMa();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v10 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = a3 + *(int *)(v11 + 44);
  uint64_t v41 = a2;
  uint64_t v42 = v14;
  uint64_t v15 = sub_1C2326AFC(a1, (void (*)(void *__return_ptr, _OWORD *, uint64_t))sub_1C2327010, (uint64_t)v40, (uint64_t)v43, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_1C2274E78, (uint64_t (*)(uint64_t))sub_1C24BBB28);
  uint64_t v39 = v14;
  *(void *)&v47[0] = v15;
  swift_bridgeObjectRetain();
  sub_1C231F678((uint64_t (*)(long long *, long long *))sub_1C2326DC8, (uint64_t)v38);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)&v47[0];
  sub_1C22177F8(a3, (uint64_t)v13);
  sub_1C22177F8((uint64_t)v13, (uint64_t)v10);
  unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v35 = swift_allocObject();
  sub_1C22179D4((uint64_t)v13, v35 + v17);
  uint64_t v18 = *(void *)(v16 + 16);
  if (v18)
  {
    id v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_retain();
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v34 = v16;
    uint64_t v20 = (uint64_t *)(v16 + 80);
    do
    {
      long long v22 = *((_OWORD *)v20 - 3);
      long long v23 = *((_OWORD *)v20 - 1);
      v47[1] = *((_OWORD *)v20 - 2);
      v47[2] = v23;
      v47[0] = v22;
      uint64_t v24 = *v20;
      sub_1C2326DE8((uint64_t)v47);
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = (void *)MEMORY[0x1C87594F0](v25);
      sub_1C231D8FC((uint64_t)v47, (uint64_t)v36, v24, v44);
      uint64_t v27 = v44[0];
      uint64_t v28 = v44[1];
      uint64_t v30 = v44[2];
      uint64_t v29 = v44[3];
      uint64_t v37 = v44[4];
      sub_1C22841AC((uint64_t)v47);
      swift_bridgeObjectRelease();
      sub_1C2327340((uint64_t)v44, (uint64_t)v45, &qword_1EA2E0F48, &qword_1EA2DF538, (void (*)(void))sub_1C227004C);
      if (v46)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_1C226D544(0, v19[2] + 1, 1, v19);
        }
        unint64_t v32 = v19[2];
        unint64_t v31 = v19[3];
        if (v32 >= v31 >> 1) {
          uint64_t v19 = sub_1C226D544((void *)(v31 > 1), v32 + 1, 1, v19);
        }
        v19[2] = v32 + 1;
        uint64_t v21 = &v19[5 * v32];
        v21[4] = v27;
        v21[5] = v28;
        v21[6] = v30;
        v21[7] = v29;
        v21[8] = v37;
      }
      v20 += 7;
      --v18;
    }
    while (v18);
    swift_release();
    uint64_t v10 = v36;
  }
  else
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_release();
  swift_release();
  sub_1C221810C((uint64_t)v10);
  return v19;
}

void *sub_1C231D1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s13ConfigurationVMa();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v10 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = a3 + *(int *)(v11 + 44);
  uint64_t v41 = a2;
  uint64_t v42 = v14;
  uint64_t v15 = sub_1C2326AFC(a1, (void (*)(void *__return_ptr, _OWORD *, uint64_t))sub_1C2327094, (uint64_t)v40, (uint64_t)v43, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_1C2274E38, (uint64_t (*)(uint64_t))sub_1C24BBB28);
  uint64_t v39 = v14;
  *(void *)&v47[0] = v15;
  swift_bridgeObjectRetain();
  sub_1C231F5C8((uint64_t (*)(long long *, long long *))sub_1C2326DC8, (uint64_t)v38);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)&v47[0];
  sub_1C22177F8(a3, (uint64_t)v13);
  sub_1C22177F8((uint64_t)v13, (uint64_t)v10);
  unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v35 = swift_allocObject();
  sub_1C22179D4((uint64_t)v13, v35 + v17);
  uint64_t v18 = *(void *)(v16 + 16);
  if (v18)
  {
    id v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_retain();
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v34 = v16;
    uint64_t v20 = (uint64_t *)(v16 + 80);
    do
    {
      long long v22 = *((_OWORD *)v20 - 3);
      long long v23 = *((_OWORD *)v20 - 1);
      v47[1] = *((_OWORD *)v20 - 2);
      v47[2] = v23;
      v47[0] = v22;
      uint64_t v24 = *v20;
      sub_1C2326DE8((uint64_t)v47);
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = (void *)MEMORY[0x1C87594F0](v25);
      sub_1C231D8FC((uint64_t)v47, (uint64_t)v36, v24, v44);
      uint64_t v27 = v44[0];
      uint64_t v28 = v44[1];
      uint64_t v30 = v44[2];
      uint64_t v29 = v44[3];
      uint64_t v37 = v44[4];
      sub_1C22841AC((uint64_t)v47);
      swift_bridgeObjectRelease();
      sub_1C2327340((uint64_t)v44, (uint64_t)v45, &qword_1EA2E0F50, &qword_1EA2DF550, (void (*)(void))sub_1C227011C);
      if (v46)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_1C226D508(0, v19[2] + 1, 1, v19);
        }
        unint64_t v32 = v19[2];
        unint64_t v31 = v19[3];
        if (v32 >= v31 >> 1) {
          uint64_t v19 = sub_1C226D508((void *)(v31 > 1), v32 + 1, 1, v19);
        }
        v19[2] = v32 + 1;
        uint64_t v21 = &v19[5 * v32];
        v21[4] = v27;
        v21[5] = v28;
        v21[6] = v30;
        v21[7] = v29;
        v21[8] = v37;
      }
      v20 += 7;
      --v18;
    }
    while (v18);
    swift_release();
    uint64_t v10 = v36;
  }
  else
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_release();
  swift_release();
  sub_1C221810C((uint64_t)v10);
  return v19;
}

void *sub_1C231D568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s13ConfigurationVMa();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v10 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = a3 + *(int *)(v11 + 44);
  uint64_t v41 = a2;
  uint64_t v42 = v14;
  uint64_t v15 = sub_1C2326AFC(a1, (void (*)(void *__return_ptr, _OWORD *, uint64_t))sub_1C2327100, (uint64_t)v40, (uint64_t)v43, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_1C2274DF8, (uint64_t (*)(uint64_t))sub_1C24BBB28);
  uint64_t v39 = v14;
  *(void *)&v47[0] = v15;
  swift_bridgeObjectRetain();
  sub_1C231F47C((uint64_t (*)(long long *, long long *))sub_1C2326DC8, (uint64_t)v38);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)&v47[0];
  sub_1C22177F8(a3, (uint64_t)v13);
  sub_1C22177F8((uint64_t)v13, (uint64_t)v10);
  unint64_t v17 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v35 = swift_allocObject();
  sub_1C22179D4((uint64_t)v13, v35 + v17);
  uint64_t v18 = *(void *)(v16 + 16);
  if (v18)
  {
    id v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_retain();
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v34 = v16;
    uint64_t v20 = (uint64_t *)(v16 + 80);
    do
    {
      long long v22 = *((_OWORD *)v20 - 3);
      long long v23 = *((_OWORD *)v20 - 1);
      v47[1] = *((_OWORD *)v20 - 2);
      v47[2] = v23;
      v47[0] = v22;
      uint64_t v24 = *v20;
      sub_1C2326DE8((uint64_t)v47);
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = (void *)MEMORY[0x1C87594F0](v25);
      sub_1C231D8FC((uint64_t)v47, (uint64_t)v36, v24, v44);
      uint64_t v27 = v44[0];
      uint64_t v28 = v44[1];
      uint64_t v30 = v44[2];
      uint64_t v29 = v44[3];
      uint64_t v37 = v44[4];
      sub_1C22841AC((uint64_t)v47);
      swift_bridgeObjectRelease();
      sub_1C2327340((uint64_t)v44, (uint64_t)v45, &qword_1EA2E0F58, &qword_1EA2DF568, (void (*)(void))sub_1C227024C);
      if (v46)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_1C226D4CC(0, v19[2] + 1, 1, v19);
        }
        unint64_t v32 = v19[2];
        unint64_t v31 = v19[3];
        if (v32 >= v31 >> 1) {
          uint64_t v19 = sub_1C226D4CC((void *)(v31 > 1), v32 + 1, 1, v19);
        }
        v19[2] = v32 + 1;
        uint64_t v21 = &v19[5 * v32];
        v21[4] = v27;
        v21[5] = v28;
        v21[6] = v30;
        v21[7] = v29;
        v21[8] = v37;
      }
      v20 += 7;
      --v18;
    }
    while (v18);
    swift_release();
    uint64_t v10 = v36;
  }
  else
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_release();
  swift_release();
  sub_1C221810C((uint64_t)v10);
  return v19;
}

uint64_t sub_1C231D8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v8 = sub_1C254E560();
  uint64_t v52 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v51 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2326E14(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v46 - v11;
  uint64_t v13 = sub_1C254CAD0();
  uint64_t v53 = *(void *)(v13 - 8);
  uint64_t v54 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v50 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2326E14(0, &qword_1EA2E41A0, MEMORY[0x1E4F27D68]);
  MEMORY[0x1F4188790](v15 - 8);
  unint64_t v17 = (char *)&v46 - v16;
  sub_1C2326E14(0, &qword_1EA2E33C0, MEMORY[0x1E4F27CA0]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v46 - v19;
  uint64_t v21 = sub_1C254C6F0();
  uint64_t v56 = *(void *)(v21 - 8);
  uint64_t v57 = v21;
  MEMORY[0x1F4188790](v21);
  long long v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = a1;
  sub_1C2284124(a1, (uint64_t)v58);
  sub_1C2284124((uint64_t)v58, (uint64_t)&v59);
  if (v60)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v24 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1C254C730();
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();

    goto LABEL_10;
  }
  uint64_t v47 = v8;
  uint64_t v48 = a3;
  uint64_t v49 = v4;
  uint64_t v28 = sub_1C254CCC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v20, 1, 1, v28);
  uint64_t v29 = sub_1C254CD20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v17, 1, 1, v29);
  sub_1C254C6D0();
  uint64_t v30 = _s13ConfigurationVMa();
  uint64_t v31 = v55;
  sub_1C254CC50();
  uint64_t v33 = v53;
  uint64_t v32 = v54;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v12, 1, v54) != 1)
  {
    uint64_t v41 = v50;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v50, v12, v32);
    uint64_t v42 = *(void **)(v31 + *(int *)(v30 + 24));
    unint64_t v43 = (void *)sub_1C254CA50();
    id v44 = objc_msgSend(v42, sel_stringFromDate_, v43);

    uint64_t v25 = sub_1C254F470();
    uint64_t v27 = v45;

    (*(void (**)(char *, uint64_t))(v33 + 8))(v41, v32);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v23, v57);
    a3 = v48;
LABEL_10:
    uint64_t v39 = *(void *)(v61 + 32);
    uint64_t v40 = *(void *)(v61 + 40);
    sub_1C2326DE8(v61);
    uint64_t result = swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  sub_1C2326ED0((uint64_t)v12, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  uint64_t v34 = v51;
  sub_1C254E510();
  uint64_t v35 = sub_1C254E550();
  os_log_type_t v36 = sub_1C254FA20();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v37 = 0;
    _os_log_impl(&dword_1C21A1000, v35, v36, "[PDF]: Failed to create a date from date components.", v37, 2u);
    MEMORY[0x1C875A0B0](v37, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v47);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v23, v57);
  uint64_t v25 = 0;
  uint64_t v27 = 0;
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  a3 = 0;
LABEL_11:
  *a4 = v25;
  a4[1] = v27;
  a4[2] = v39;
  a4[3] = v40;
  a4[4] = a3;
  return result;
}

__n128 sub_1C231DFC0@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X8>)
{
  uint64_t v8 = a1;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12 != 1)
  {
    uint64_t v10 = a1[2].n128_i64[0];
    uint64_t v13 = a1[2].n128_i64[1];
    if (v13)
    {
      if (v12)
      {
        swift_bridgeObjectRetain_n();
        unint64_t v14 = sub_1C21A6470(v10, v13);
        if (v15)
        {
          uint64_t v16 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v14);
          uint64_t v10 = *v16;
          uint64_t v11 = v16[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v10 = 0;
          uint64_t v11 = 0;
        }
        sub_1C22841AC((uint64_t)v8);
        sub_1C22841AC((uint64_t)v8);
      }
      else
      {
        uint64_t v10 = 0;
        uint64_t v11 = 0;
      }
    }
    else
    {
      uint64_t v11 = 0;
    }
  }
  *(void *)(swift_allocObject() + 16) = a3;
  int64_t v17 = *(void *)(a2 + 16);
  if (v17)
  {
    uint64_t v30 = v11;
    uint64_t v31 = a4;
    uint64_t v32 = v10;
    uint64_t v33 = v8;
    unint64_t v35 = MEMORY[0x1E4FBC860];
    v29[5] = a3;
    swift_bridgeObjectRetain_n();
    sub_1C2274854(0, v17, 0);
    unint64_t v18 = v35;
    uint64_t v19 = (_OWORD *)(a2 + 40);
    do
    {
      uint64_t v20 = *((void *)v19 - 1);
      long long v34 = *v19;
      unint64_t v35 = v18;
      unint64_t v22 = *(void *)(v18 + 16);
      unint64_t v21 = *(void *)(v18 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22 >= v21 >> 1)
      {
        sub_1C2274854(v21 > 1, v22 + 1, 1);
        unint64_t v18 = v35;
      }
      uint64_t v19 = (_OWORD *)((char *)v19 + 24);
      *(void *)(v18 + 16) = v22 + 1;
      unint64_t v23 = v18 + 24 * v22;
      *(void *)(v23 + 32) = v20;
      *(_OWORD *)(v23 + 40) = v34;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    uint64_t v24 = swift_release();
    uint64_t v10 = v32;
    uint64_t v8 = v33;
    uint64_t v11 = v30;
    a4 = v31;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = swift_release();
    unint64_t v18 = MEMORY[0x1E4FBC860];
  }
  MEMORY[0x1F4188790](v24);
  v29[2] = a4;
  unint64_t v35 = v18;
  swift_bridgeObjectRetain();
  sub_1C231F52C((uint64_t)sub_1C2326EA0, (uint64_t)v29, sub_1C23F374C, (uint64_t (*)(uint64_t, uint64_t))sub_1C231FE8C);
  swift_bridgeObjectRelease();
  unint64_t v25 = v8[1].n128_u64[0];
  unsigned __int8 v26 = v8[1].n128_u8[8];
  unint64_t v27 = v35;
  __n128 result = *v8;
  *a5 = *v8;
  a5[1].n128_u64[0] = v25;
  a5[1].n128_u8[8] = v26;
  a5[2].n128_u64[0] = v10;
  a5[2].n128_u64[1] = v11;
  a5[3].n128_u64[0] = v27;
  return result;
}

__n128 sub_1C231E268@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X8>)
{
  uint64_t v7 = a1;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v53 = a3;
  uint64_t v11 = *(void *)(a3 + 16);
  if (v11 != 1)
  {
    uint64_t v9 = a1[2].n128_i64[0];
    uint64_t v12 = a1[2].n128_i64[1];
    if (v12)
    {
      if (v11)
      {
        swift_bridgeObjectRetain_n();
        unint64_t v13 = sub_1C21A6470(v9, v12);
        if (v14)
        {
          char v15 = (uint64_t *)(*(void *)(v53 + 56) + 16 * v13);
          uint64_t v9 = *v15;
          uint64_t v10 = v15[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v9 = 0;
          uint64_t v10 = 0;
        }
        sub_1C22841AC((uint64_t)v7);
        sub_1C22841AC((uint64_t)v7);
      }
      else
      {
        uint64_t v9 = 0;
        uint64_t v10 = 0;
      }
    }
    else
    {
      uint64_t v10 = 0;
    }
  }
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v53;
  *(void *)(v16 + 16) = v53;
  int64_t v18 = *(void *)(a2 + 16);
  if (!v18)
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = swift_release();
    unint64_t v21 = MEMORY[0x1E4FBC860];
    goto LABEL_28;
  }
  v47[5] = v16;
  uint64_t v48 = v10;
  uint64_t v49 = a4;
  uint64_t v50 = v9;
  uint64_t v51 = v7;
  uint64_t v52 = a5;
  unint64_t v59 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain_n();
  sub_1C22749D4(0, v18, 0);
  uint64_t v19 = (uint64_t *)(a2 + 56);
  uint64_t v20 = v17;
  unint64_t v21 = v59;
  do
  {
    uint64_t v22 = *(v19 - 2);
    uint64_t v23 = *(v19 - 1);
    uint64_t v24 = *v19;
    uint64_t v25 = v19[1];
    uint64_t v26 = v19[2];
    uint64_t v27 = v19[3];
    uint64_t v28 = v19[4];
    uint64_t v29 = v19[6];
    uint64_t v30 = *(void *)(v20 + 16);
    uint64_t v57 = *(v19 - 3);
    unint64_t v58 = v21;
    uint64_t v55 = v25;
    uint64_t v56 = v23;
    uint64_t v54 = v27;
    if (v30 == 1) {
      goto LABEL_13;
    }
    uint64_t v31 = v19[5];
    if (!v29)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    if (!v30)
    {
LABEL_13:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v32 = sub_1C21A6470(v31, v29);
      if (v33)
      {
        long long v34 = (uint64_t *)(*(void *)(v20 + 56) + 16 * v32);
        uint64_t v31 = *v34;
        uint64_t v35 = v34[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease_n();
        goto LABEL_21;
      }
      swift_bridgeObjectRelease_n();
    }
    uint64_t v31 = 0;
LABEL_20:
    uint64_t v35 = 0;
LABEL_21:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C22D3458(v57, v22, v56, v24, v55, v26, v54, v28, (uint64_t *)v60, v31, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v21 = v58;
    unint64_t v59 = v58;
    unint64_t v37 = *(void *)(v58 + 16);
    unint64_t v36 = *(void *)(v58 + 24);
    if (v37 >= v36 >> 1)
    {
      sub_1C22749D4(v36 > 1, v37 + 1, 1);
      unint64_t v21 = v59;
    }
    *(void *)(v21 + 16) = v37 + 1;
    uint64_t v38 = (_OWORD *)(v21 + 80 * v37);
    v38[2] = v60[0];
    long long v39 = v60[1];
    long long v40 = v60[2];
    long long v41 = v60[4];
    v38[5] = v60[3];
    v38[6] = v41;
    v38[3] = v39;
    v38[4] = v40;
    v19 += 10;
    --v18;
    uint64_t v20 = v53;
  }
  while (v18);
  swift_bridgeObjectRelease();
  uint64_t v42 = swift_release();
  uint64_t v7 = v51;
  a5 = v52;
  uint64_t v9 = v50;
  a4 = v49;
  uint64_t v10 = v48;
LABEL_28:
  MEMORY[0x1F4188790](v42);
  v47[2] = a4;
  unint64_t v59 = v21;
  swift_bridgeObjectRetain();
  sub_1C231F52C((uint64_t)sub_1C23270A0, (uint64_t)v47, sub_1C23F3774, (uint64_t (*)(uint64_t, uint64_t))sub_1C2320774);
  swift_bridgeObjectRelease();
  unint64_t v43 = v7[1].n128_u64[0];
  unsigned __int8 v44 = v7[1].n128_u8[8];
  unint64_t v45 = v59;
  __n128 result = *v7;
  *a5 = *v7;
  a5[1].n128_u64[0] = v43;
  a5[1].n128_u8[8] = v44;
  a5[2].n128_u64[0] = v9;
  a5[2].n128_u64[1] = v10;
  a5[3].n128_u64[0] = v45;
  return result;
}

__n128 sub_1C231E6DC@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X8>)
{
  uint64_t v8 = a1;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12 != 1)
  {
    uint64_t v10 = a1[2].n128_i64[0];
    uint64_t v13 = a1[2].n128_i64[1];
    if (v13)
    {
      if (v12)
      {
        swift_bridgeObjectRetain_n();
        unint64_t v14 = sub_1C21A6470(v10, v13);
        if (v15)
        {
          uint64_t v16 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v14);
          uint64_t v10 = *v16;
          uint64_t v11 = v16[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v10 = 0;
          uint64_t v11 = 0;
        }
        sub_1C22841AC((uint64_t)v8);
        sub_1C22841AC((uint64_t)v8);
      }
      else
      {
        uint64_t v10 = 0;
        uint64_t v11 = 0;
      }
    }
    else
    {
      uint64_t v11 = 0;
    }
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  int64_t v18 = *(void *)(a2 + 16);
  if (v18)
  {
    v35[4] = v17;
    uint64_t v36 = v11;
    uint64_t v37 = a4;
    uint64_t v38 = v10;
    long long v39 = v8;
    long long v40 = a5;
    unint64_t v46 = MEMORY[0x1E4FBC860];
    v35[5] = a3;
    swift_bridgeObjectRetain_n();
    sub_1C22748B4(0, v18, 0);
    unint64_t v19 = v46;
    uint64_t v20 = (uint64_t *)(a2 + 48);
    do
    {
      uint64_t v21 = *(v20 - 2);
      uint64_t v22 = *(v20 - 1);
      uint64_t v23 = v20[1];
      uint64_t v44 = *v20;
      uint64_t v45 = v21;
      uint64_t v24 = v20[2];
      uint64_t v25 = v20[3];
      uint64_t v26 = v20[5];
      uint64_t v42 = v20[4];
      uint64_t v43 = v24;
      int v41 = *((unsigned __int8 *)v20 + 48);
      unint64_t v27 = *(void *)(v19 + 16);
      unint64_t v28 = *(void *)(v19 + 24);
      unint64_t v46 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v27 >= v28 >> 1)
      {
        sub_1C22748B4(v28 > 1, v27 + 1, 1);
        unint64_t v19 = v46;
      }
      *(void *)(v19 + 16) = v27 + 1;
      unint64_t v29 = v19 + 72 * v27;
      *(void *)(v29 + 32) = v45;
      *(void *)(v29 + 40) = v22;
      *(void *)(v29 + 48) = v44;
      *(void *)(v29 + 56) = v23;
      *(void *)(v29 + 64) = v43;
      *(void *)(v29 + 72) = v25;
      *(void *)(v29 + 80) = v42;
      *(void *)(v29 + 88) = v26;
      *(unsigned char *)(v29 + 96) = v41;
      v20 += 9;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    uint64_t v30 = swift_release();
    uint64_t v8 = v39;
    a5 = v40;
    a4 = v37;
    uint64_t v10 = v38;
    uint64_t v11 = v36;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = swift_release();
    unint64_t v19 = MEMORY[0x1E4FBC860];
  }
  MEMORY[0x1F4188790](v30);
  v35[2] = a4;
  unint64_t v46 = v19;
  swift_bridgeObjectRetain();
  sub_1C231F52C((uint64_t)sub_1C232701C, (uint64_t)v35, sub_1C23F379C, (uint64_t (*)(uint64_t, uint64_t))sub_1C232139C);
  swift_bridgeObjectRelease();
  unint64_t v31 = v8[1].n128_u64[0];
  unsigned __int8 v32 = v8[1].n128_u8[8];
  unint64_t v33 = v46;
  __n128 result = *v8;
  *a5 = *v8;
  a5[1].n128_u64[0] = v31;
  a5[1].n128_u8[8] = v32;
  a5[2].n128_u64[0] = v10;
  a5[2].n128_u64[1] = v11;
  a5[3].n128_u64[0] = v33;
  return result;
}

__n128 sub_1C231E9CC@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X8>)
{
  uint64_t v8 = a1;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12 != 1)
  {
    uint64_t v10 = a1[2].n128_i64[0];
    uint64_t v13 = a1[2].n128_i64[1];
    if (v13)
    {
      if (v12)
      {
        swift_bridgeObjectRetain_n();
        unint64_t v14 = sub_1C21A6470(v10, v13);
        if (v15)
        {
          uint64_t v16 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v14);
          uint64_t v10 = *v16;
          uint64_t v11 = v16[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v10 = 0;
          uint64_t v11 = 0;
        }
        sub_1C22841AC((uint64_t)v8);
        sub_1C22841AC((uint64_t)v8);
      }
      else
      {
        uint64_t v10 = 0;
        uint64_t v11 = 0;
      }
    }
    else
    {
      uint64_t v11 = 0;
    }
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  int64_t v18 = *(void *)(a2 + 16);
  if (v18)
  {
    v34[5] = v17;
    uint64_t v35 = v11;
    uint64_t v36 = a4;
    uint64_t v37 = v10;
    uint64_t v38 = v8;
    long long v39 = a5;
    unint64_t v42 = MEMORY[0x1E4FBC860];
    v34[6] = a3;
    swift_bridgeObjectRetain_n();
    sub_1C2274914(0, v18, 0);
    unint64_t v19 = v42;
    uint64_t v20 = (uint64_t *)(a2 + 72);
    do
    {
      uint64_t v21 = *(v20 - 5);
      uint64_t v22 = *(v20 - 4);
      uint64_t v24 = *(v20 - 3);
      uint64_t v23 = *(v20 - 2);
      uint64_t v25 = *v20;
      uint64_t v40 = *(v20 - 1);
      uint64_t v41 = v21;
      unint64_t v42 = v19;
      unint64_t v26 = *(void *)(v19 + 16);
      unint64_t v27 = *(void *)(v19 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v26 >= v27 >> 1)
      {
        sub_1C2274914(v27 > 1, v26 + 1, 1);
        unint64_t v19 = v42;
      }
      v20 += 6;
      *(void *)(v19 + 16) = v26 + 1;
      unint64_t v28 = (void *)(v19 + 48 * v26);
      v28[4] = v41;
      v28[5] = v22;
      v28[6] = v24;
      v28[7] = v23;
      v28[8] = v40;
      v28[9] = v25;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    uint64_t v29 = swift_release();
    uint64_t v8 = v38;
    a5 = v39;
    a4 = v36;
    uint64_t v10 = v37;
    uint64_t v11 = v35;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = swift_release();
    unint64_t v19 = MEMORY[0x1E4FBC860];
  }
  MEMORY[0x1F4188790](v29);
  v34[2] = a4;
  unint64_t v42 = v19;
  swift_bridgeObjectRetain();
  sub_1C231F52C((uint64_t)sub_1C2326EA0, (uint64_t)v34, sub_1C23F37C4, (uint64_t (*)(uint64_t, uint64_t))sub_1C2321EB8);
  swift_bridgeObjectRelease();
  unint64_t v30 = v8[1].n128_u64[0];
  unsigned __int8 v31 = v8[1].n128_u8[8];
  unint64_t v32 = v42;
  __n128 result = *v8;
  *a5 = *v8;
  a5[1].n128_u64[0] = v30;
  a5[1].n128_u8[8] = v31;
  a5[2].n128_u64[0] = v10;
  a5[2].n128_u64[1] = v11;
  a5[3].n128_u64[0] = v32;
  return result;
}

__n128 sub_1C231EC90@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X8>)
{
  uint64_t v8 = a1;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12 != 1)
  {
    uint64_t v10 = a1[2].n128_i64[0];
    uint64_t v13 = a1[2].n128_i64[1];
    if (v13)
    {
      if (v12)
      {
        swift_bridgeObjectRetain_n();
        unint64_t v14 = sub_1C21A6470(v10, v13);
        if (v15)
        {
          uint64_t v16 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v14);
          uint64_t v10 = *v16;
          uint64_t v11 = v16[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v10 = 0;
          uint64_t v11 = 0;
        }
        sub_1C22841AC((uint64_t)v8);
        sub_1C22841AC((uint64_t)v8);
      }
      else
      {
        uint64_t v10 = 0;
        uint64_t v11 = 0;
      }
    }
    else
    {
      uint64_t v11 = 0;
    }
  }
  *(void *)(swift_allocObject() + 16) = a3;
  int64_t v17 = *(void *)(a2 + 16);
  if (v17)
  {
    uint64_t v31 = v11;
    uint64_t v32 = a4;
    uint64_t v33 = v10;
    long long v34 = v8;
    unint64_t v35 = MEMORY[0x1E4FBC860];
    v30[5] = a3;
    swift_bridgeObjectRetain_n();
    sub_1C2274974(0, v17, 0);
    unint64_t v18 = v35;
    unint64_t v19 = (uint64_t *)(a2 + 40);
    do
    {
      uint64_t v20 = *(v19 - 1);
      uint64_t v21 = *v19;
      unint64_t v35 = v18;
      unint64_t v23 = *(void *)(v18 + 16);
      unint64_t v22 = *(void *)(v18 + 24);
      swift_bridgeObjectRetain();
      if (v23 >= v22 >> 1)
      {
        sub_1C2274974(v22 > 1, v23 + 1, 1);
        unint64_t v18 = v35;
      }
      v19 += 2;
      *(void *)(v18 + 16) = v23 + 1;
      unint64_t v24 = v18 + 16 * v23;
      *(void *)(v24 + 32) = v20;
      *(void *)(v24 + 40) = v21;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_release();
    uint64_t v10 = v33;
    uint64_t v8 = v34;
    uint64_t v11 = v31;
    a4 = v32;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = swift_release();
    unint64_t v18 = MEMORY[0x1E4FBC860];
  }
  MEMORY[0x1F4188790](v25);
  v30[2] = a4;
  unint64_t v35 = v18;
  swift_bridgeObjectRetain();
  sub_1C231F52C((uint64_t)sub_1C2326EA0, (uint64_t)v30, sub_1C23F37EC, (uint64_t (*)(uint64_t, uint64_t))sub_1C2322EB8);
  swift_bridgeObjectRelease();
  unint64_t v26 = v8[1].n128_u64[0];
  unsigned __int8 v27 = v8[1].n128_u8[8];
  unint64_t v28 = v35;
  __n128 result = *v8;
  *a5 = *v8;
  a5[1].n128_u64[0] = v26;
  a5[1].n128_u8[8] = v27;
  a5[2].n128_u64[0] = v10;
  a5[2].n128_u64[1] = v11;
  a5[3].n128_u64[0] = v28;
  return result;
}

BOOL sub_1C231EF18(long long *a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = (void (*)(uint64_t))MEMORY[0x1E4F27A78];
  sub_1C2326E14(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v16 - v8;
  long long v10 = *a1;
  long long v11 = *a1;
  long long v17 = *a2;
  long long v18 = v10;
  v16[0] = *a2;
  v16[1] = v11;
  uint64_t v12 = sub_1C254CBD0();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v9, a3, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
  sub_1C21F10AC((uint64_t)&v18);
  sub_1C21F10AC((uint64_t)&v17);
  sub_1C2218914();
  uint64_t v14 = sub_1C25501B0();
  sub_1C2326ED0((uint64_t)v9, (unint64_t *)&qword_1EA2E2D90, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 == -1;
}

BOOL sub_1C231F0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v10 = (void (*)(uint64_t))MEMORY[0x1E4F27A78];
  sub_1C2326E14(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v18 - v12;
  v18[2] = a1;
  v18[3] = a2;
  v18[0] = a3;
  v18[1] = a4;
  uint64_t v14 = sub_1C254CBD0();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a5, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  sub_1C2218914();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C25501B0();
  sub_1C2326ED0((uint64_t)v13, (unint64_t *)&qword_1EA2E2D90, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16 == -1;
}

void *sub_1C231F28C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C231C5C0(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1C231F2B0(uint64_t a1)
{
  return sub_1C231F2E4(a1, sub_1C2395200);
}

uint64_t sub_1C231F2CC(uint64_t a1)
{
  return sub_1C231F2E4(a1, sub_1C2395488);
}

uint64_t sub_1C231F2E4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_1C254CBD0() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a2(a1, v5);
}

uint64_t objectdestroyTm_3()
{
  uint64_t v1 = sub_1C254CBD0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C231F3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C254CBD0() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1C2395710(a1, a2, v6);
}

uint64_t sub_1C231F47C(uint64_t (*a1)(long long *, long long *), uint64_t a2)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = (void *)sub_1C23F3738(v5);
  }
  uint64_t result = sub_1C23224B4(a1, a2, &qword_1EA2DF770, &qword_1EA2DE888, (uint64_t)&_s23FormattedRecordMetadataVN, (void (*)(char **, void *, char **))sub_1C23F2BC0);
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C231F52C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v9 = *v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = a3(v9);
  }
  uint64_t result = a4(a1, a2);
  *uint64_t v4 = v9;
  return result;
}

uint64_t sub_1C231F5C8(uint64_t (*a1)(long long *, long long *), uint64_t a2)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = (void *)sub_1C23F3760(v5);
  }
  uint64_t result = sub_1C23224B4(a1, a2, &qword_1EA2DF758, &qword_1EA2DE7E0, (uint64_t)&_s22FormattedRecord3ValuesVN, (void (*)(char **, void *, char **))sub_1C23F2BC0);
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C231F678(uint64_t (*a1)(long long *, long long *), uint64_t a2)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = (void *)sub_1C23F3788(v5);
  }
  uint64_t result = sub_1C23224B4(a1, a2, &qword_1EA2DF740, &qword_1EA2DE850, (uint64_t)&_s27FormattedRecordValueInRangeVN, (void (*)(char **, void *, char **))sub_1C23F2BC0);
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C231F728(uint64_t (*a1)(long long *, long long *), uint64_t a2)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = (void *)sub_1C23F37B0(v5);
  }
  uint64_t result = sub_1C23224B4(a1, a2, &qword_1EA2DF728, &qword_1EA2DE828, (uint64_t)&_s20FormattedRecordValueVN, (void (*)(char **, void *, char **))sub_1C23F2BC0);
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C231F7D8(uint64_t (*a1)(long long *, long long *), uint64_t a2)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = (void *)sub_1C23F37D8(v5);
  }
  uint64_t result = sub_1C23224B4(a1, a2, &qword_1EA2DF710, &qword_1EA2DE808, (uint64_t)&_s15FormattedRecordVN, (void (*)(char **, void *, char **))sub_1C23F2BC0);
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C231F888(uint64_t (*a1)(uint64_t *, uint64_t *))
{
  uint64_t v3 = v1[1];
  uint64_t result = sub_1C2550800();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_116;
    }
    if (v3) {
      return sub_1C23236B4(0, v3, 1, a1);
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 > -2)
    {
      uint64_t v6 = result;
      uint64_t v86 = v1;
      if (v3 < 2)
      {
        uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v91 = (char *)(MEMORY[0x1E4FBC860] + 32);
        uint64_t v87 = MEMORY[0x1E4FBC860];
        if (v3 != 1)
        {
          unint64_t v29 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_82:
          id v78 = v9;
          if (v29 >= 2)
          {
            uint64_t v79 = *v86;
            do
            {
              unint64_t v80 = v29 - 2;
              if (v29 < 2) {
                goto LABEL_109;
              }
              if (!v79) {
                goto LABEL_121;
              }
              uint64_t v81 = v78;
              uint64_t v82 = *(void *)&v78[16 * v80 + 32];
              uint64_t v83 = *(void *)&v78[16 * v29 + 24];
              sub_1C2324810((char *)(v79 + 48 * v82), (char *)(v79 + 48 * *(void *)&v78[16 * v29 + 16]), v79 + 48 * v83, v91, a1);
              if (v2) {
                break;
              }
              if (v83 < v82) {
                goto LABEL_110;
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v81 = sub_1C23F321C((uint64_t)v81);
              }
              if (v80 >= *((void *)v81 + 2)) {
                goto LABEL_111;
              }
              uint64_t v84 = &v81[16 * v80 + 32];
              *(void *)uint64_t v84 = v82;
              *((void *)v84 + 1) = v83;
              unint64_t v85 = *((void *)v81 + 2);
              if (v29 > v85) {
                goto LABEL_112;
              }
              memmove(&v81[16 * v29 + 16], &v81[16 * v29 + 32], 16 * (v85 - v29));
              id v78 = v81;
              *((void *)v81 + 2) = v85 - 1;
              unint64_t v29 = v85 - 1;
            }
            while (v85 > 2);
          }
LABEL_93:
          swift_bridgeObjectRelease();
          *(void *)(v87 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v7 = v5 >> 1;
        uint64_t v8 = sub_1C254F780();
        *(void *)(v8 + 16) = v7;
        uint64_t v87 = v8;
        uint64_t v91 = (char *)(v8 + 32);
      }
      uint64_t v10 = 0;
      uint64_t v11 = *v1;
      uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v88 = v6;
      uint64_t v89 = v3;
      while (1)
      {
        char v12 = sub_1C23242E4(&v93, v11, v3, v10, a1);
        if (v2) {
          goto LABEL_93;
        }
        uint64_t v13 = v93;
        if (v12)
        {
          if (v93 < v10) {
            goto LABEL_114;
          }
          if (v10 < v93)
          {
            uint64_t v14 = 48 * v93;
            uint64_t v15 = 48 * v10;
            uint64_t v16 = v93;
            uint64_t v17 = v10;
            do
            {
              if (v17 != --v16)
              {
                if (!v11) {
                  goto LABEL_120;
                }
                long long v18 = (_OWORD *)(v11 + v15);
                uint64_t v19 = v11 + v14;
                long long v20 = *(_OWORD *)(v11 + v15);
                long long v21 = *(_OWORD *)(v11 + v15 + 16);
                uint64_t v22 = *(void *)(v11 + v15 + 32);
                char v23 = *(unsigned char *)(v11 + v15 + 40);
                long long v25 = *(_OWORD *)(v11 + v14 - 32);
                long long v24 = *(_OWORD *)(v11 + v14 - 16);
                *long long v18 = *(_OWORD *)(v11 + v14 - 48);
                v18[1] = v25;
                v18[2] = v24;
                *(_OWORD *)(v19 - 48) = v20;
                *(_OWORD *)(v19 - 32) = v21;
                *(void *)(v19 - 16) = v22;
                *(unsigned char *)(v19 - 8) = v23;
              }
              ++v17;
              v14 -= 48;
              v15 += 48;
            }
            while (v17 < v16);
          }
        }
        if (v13 < v3)
        {
          if (__OFSUB__(v13, v10)) {
            goto LABEL_115;
          }
          if (v13 - v10 < v6)
          {
            if (__OFADD__(v10, v6)) {
              goto LABEL_117;
            }
            if (v10 + v6 >= v3) {
              uint64_t v26 = v3;
            }
            else {
              uint64_t v26 = v10 + v6;
            }
            if (v26 < v10)
            {
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
              break;
            }
            sub_1C23236B4(v10, v26, v13, a1);
            uint64_t v13 = v26;
          }
        }
        if (v13 < v10) {
          goto LABEL_113;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1C23F277C(0, *((void *)v9 + 2) + 1, 1, v9);
        }
        unint64_t v28 = *((void *)v9 + 2);
        unint64_t v27 = *((void *)v9 + 3);
        unint64_t v29 = v28 + 1;
        uint64_t v90 = v13;
        if (v28 >= v27 >> 1) {
          uint64_t v9 = sub_1C23F277C((char *)(v27 > 1), v28 + 1, 1, v9);
        }
        *((void *)v9 + 2) = v29;
        unint64_t v30 = v9 + 32;
        uint64_t v31 = (uint64_t *)&v9[16 * v28 + 32];
        *uint64_t v31 = v10;
        v31[1] = v13;
        if (v28)
        {
          while (1)
          {
            unint64_t v32 = v29 - 1;
            if (v29 >= 4)
            {
              uint64_t v37 = &v30[16 * v29];
              uint64_t v38 = *((void *)v37 - 8);
              uint64_t v39 = *((void *)v37 - 7);
              BOOL v43 = __OFSUB__(v39, v38);
              uint64_t v40 = v39 - v38;
              if (v43) {
                goto LABEL_98;
              }
              uint64_t v42 = *((void *)v37 - 6);
              uint64_t v41 = *((void *)v37 - 5);
              BOOL v43 = __OFSUB__(v41, v42);
              uint64_t v35 = v41 - v42;
              char v36 = v43;
              if (v43) {
                goto LABEL_99;
              }
              unint64_t v44 = v29 - 2;
              uint64_t v45 = &v30[16 * v29 - 32];
              uint64_t v47 = *(void *)v45;
              uint64_t v46 = *((void *)v45 + 1);
              BOOL v43 = __OFSUB__(v46, v47);
              uint64_t v48 = v46 - v47;
              if (v43) {
                goto LABEL_101;
              }
              BOOL v43 = __OFADD__(v35, v48);
              uint64_t v49 = v35 + v48;
              if (v43) {
                goto LABEL_104;
              }
              if (v49 >= v40)
              {
                id v67 = &v30[16 * v32];
                uint64_t v69 = *(void *)v67;
                uint64_t v68 = *((void *)v67 + 1);
                BOOL v43 = __OFSUB__(v68, v69);
                uint64_t v70 = v68 - v69;
                if (v43) {
                  goto LABEL_108;
                }
                BOOL v60 = v35 < v70;
                goto LABEL_68;
              }
            }
            else
            {
              if (v29 != 3)
              {
                uint64_t v61 = *((void *)v9 + 4);
                uint64_t v62 = *((void *)v9 + 5);
                BOOL v43 = __OFSUB__(v62, v61);
                uint64_t v54 = v62 - v61;
                char v55 = v43;
                goto LABEL_62;
              }
              uint64_t v34 = *((void *)v9 + 4);
              uint64_t v33 = *((void *)v9 + 5);
              BOOL v43 = __OFSUB__(v33, v34);
              uint64_t v35 = v33 - v34;
              char v36 = v43;
            }
            if (v36) {
              goto LABEL_100;
            }
            unint64_t v44 = v29 - 2;
            uint64_t v50 = &v30[16 * v29 - 32];
            uint64_t v52 = *(void *)v50;
            uint64_t v51 = *((void *)v50 + 1);
            BOOL v53 = __OFSUB__(v51, v52);
            uint64_t v54 = v51 - v52;
            char v55 = v53;
            if (v53) {
              goto LABEL_103;
            }
            uint64_t v56 = &v30[16 * v32];
            uint64_t v58 = *(void *)v56;
            uint64_t v57 = *((void *)v56 + 1);
            BOOL v43 = __OFSUB__(v57, v58);
            uint64_t v59 = v57 - v58;
            if (v43) {
              goto LABEL_106;
            }
            if (__OFADD__(v54, v59)) {
              goto LABEL_107;
            }
            if (v54 + v59 >= v35)
            {
              BOOL v60 = v35 < v59;
LABEL_68:
              if (v60) {
                unint64_t v32 = v44;
              }
              goto LABEL_70;
            }
LABEL_62:
            if (v55) {
              goto LABEL_102;
            }
            uint64_t v63 = &v30[16 * v32];
            uint64_t v65 = *(void *)v63;
            uint64_t v64 = *((void *)v63 + 1);
            BOOL v43 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v43) {
              goto LABEL_105;
            }
            if (v66 < v54) {
              goto LABEL_78;
            }
LABEL_70:
            unint64_t v71 = v32 - 1;
            if (v32 - 1 >= v29)
            {
              __break(1u);
LABEL_95:
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
LABEL_98:
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
              goto LABEL_118;
            }
            if (!v11) {
              goto LABEL_119;
            }
            uint64_t v72 = v9;
            uint64_t v73 = &v30[16 * v71];
            uint64_t v74 = *(void *)v73;
            uint64_t v75 = &v30[16 * v32];
            uint64_t v76 = *((void *)v75 + 1);
            sub_1C2324810((char *)(v11 + 48 * *(void *)v73), (char *)(v11 + 48 * *(void *)v75), v11 + 48 * v76, v91, a1);
            if (v76 < v74) {
              goto LABEL_95;
            }
            if (v32 > *((void *)v72 + 2)) {
              goto LABEL_96;
            }
            *(void *)uint64_t v73 = v74;
            *(void *)&v30[16 * v71 + 8] = v76;
            unint64_t v77 = *((void *)v72 + 2);
            if (v32 >= v77) {
              goto LABEL_97;
            }
            uint64_t v9 = v72;
            unint64_t v29 = v77 - 1;
            memmove(&v30[16 * v32], v75 + 16, 16 * (v77 - 1 - v32));
            *((void *)v72 + 2) = v77 - 1;
            if (v77 <= 2) {
              goto LABEL_78;
            }
          }
        }
        unint64_t v29 = 1;
LABEL_78:
        uint64_t v3 = v89;
        uint64_t v10 = v90;
        uint64_t v6 = v88;
        if (v90 >= v89) {
          goto LABEL_82;
        }
      }
    }
    uint64_t result = sub_1C25505E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C231FE8C(uint64_t (*a1)(uint64_t *, uint64_t *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v137 = a2;
  uint64_t v5 = v2[1];
  uint64_t result = sub_1C2550800();
  if (result >= v5)
  {
    if (v5 < 0) {
      goto LABEL_141;
    }
    if (v5) {
      return sub_1C2323870(0, v5, 1, a1, v137);
    }
  }
  else
  {
    if (v5 >= 0) {
      uint64_t v7 = v5;
    }
    else {
      uint64_t v7 = v5 + 1;
    }
    if (v5 > -2)
    {
      uint64_t v126 = v5;
      uint64_t v119 = result;
      BOOL v117 = v2;
      if (v5 < 2)
      {
        uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
        __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
        uint64_t v120 = MEMORY[0x1E4FBC860];
        if (v5 != 1)
        {
          unint64_t v44 = *(void *)(MEMORY[0x1E4FBC860] + 16);
          goto LABEL_103;
        }
      }
      else
      {
        uint64_t v8 = v7 >> 1;
        uint64_t v9 = sub_1C254F780();
        *(void *)(v9 + 16) = v8;
        uint64_t v120 = v9;
        __dst = (char *)(v9 + 32);
      }
      uint64_t v11 = 0;
      uint64_t v12 = *v2;
      uint64_t v118 = *v2 + 32;
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v13 = v126;
      uint64_t v129 = *v2;
      while (1)
      {
        uint64_t v14 = v11;
        uint64_t v15 = v11 + 1;
        uint64_t v123 = v11;
        if (v11 + 1 < v13)
        {
          uint64_t v121 = v10;
          uint64_t v16 = (uint64_t *)(v12 + 24 * v15);
          uint64_t v17 = v16[1];
          uint64_t v18 = v16[2];
          uint64_t v134 = *v16;
          uint64_t v135 = v17;
          uint64_t v136 = v18;
          uint64_t v19 = (uint64_t *)(v12 + 24 * v11);
          uint64_t v20 = v19[1];
          uint64_t v21 = v19[2];
          uint64_t v131 = *v19;
          uint64_t v132 = v20;
          uint64_t v133 = v21;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v22 = a1(&v134, &v131);
          if (v4)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_118;
          }
          int v23 = v22;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v15 = v14 + 2;
          if (v14 + 2 < v126)
          {
            long long v24 = (void *)(v118 + 24 * v14);
            long long v25 = v24;
            while (1)
            {
              uint64_t v26 = v15;
              uint64_t v27 = v24[1];
              uint64_t v28 = v25[3];
              v25 += 3;
              uint64_t v29 = v24[4];
              uint64_t v134 = v24[2];
              uint64_t v135 = v28;
              uint64_t v136 = v29;
              uint64_t v30 = *v24;
              uint64_t v131 = *(v24 - 1);
              uint64_t v132 = v30;
              uint64_t v133 = v27;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              int v31 = a1(&v134, &v131);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v23 ^ v31)) {
                break;
              }
              uint64_t v15 = v26 + 1;
              long long v24 = v25;
              if (v126 == v26 + 1)
              {
                uint64_t v15 = v126;
                goto LABEL_21;
              }
            }
            uint64_t v15 = v26;
LABEL_21:
            uint64_t v14 = v123;
          }
          uint64_t v10 = v121;
          uint64_t v12 = v129;
          if (v23)
          {
            if (v15 < v14) {
              goto LABEL_145;
            }
            uint64_t v13 = v126;
            if (v14 < v15)
            {
              uint64_t v32 = 24 * v15;
              uint64_t v33 = 24 * v14;
              uint64_t v34 = v15;
              uint64_t v35 = v14;
              do
              {
                if (v35 != --v34)
                {
                  if (!v129) {
                    goto LABEL_148;
                  }
                  uint64_t v36 = v129 + v33;
                  uint64_t v37 = v129 + v32;
                  uint64_t v38 = *(void *)(v129 + v33);
                  long long v39 = *(_OWORD *)(v129 + v33 + 8);
                  long long v40 = *(_OWORD *)(v129 + v32 - 24);
                  *(void *)(v36 + 16) = *(void *)(v129 + v32 - 8);
                  *(_OWORD *)uint64_t v36 = v40;
                  *(void *)(v37 - 24) = v38;
                  *(_OWORD *)(v37 - 16) = v39;
                }
                ++v35;
                v32 -= 24;
                v33 += 24;
              }
              while (v35 < v34);
            }
          }
          else
          {
            uint64_t v13 = v126;
          }
        }
        if (v15 >= v13) {
          goto LABEL_41;
        }
        if (__OFSUB__(v15, v14)) {
          goto LABEL_142;
        }
        if (v15 - v14 >= v119)
        {
LABEL_41:
          if (v15 < v14) {
            goto LABEL_140;
          }
          goto LABEL_42;
        }
        if (__OFADD__(v14, v119)) {
          goto LABEL_143;
        }
        uint64_t v41 = v14 + v119 >= v13 ? v13 : v14 + v119;
        if (v41 < v14) {
          break;
        }
        if (v15 == v41) {
          goto LABEL_41;
        }
        uint64_t v122 = v10;
        uint64_t v127 = v4;
        uint64_t v93 = (void *)(v12 + 24 * v15);
        uint64_t v115 = v41;
        do
        {
          uint64_t v94 = (uint64_t *)(v12 + 24 * v15);
          uint64_t v95 = *v94;
          uint64_t v96 = v94[1];
          uint64_t v97 = v94[2];
          uint64_t v98 = v14;
          uint64_t v116 = v93;
          uint64_t v99 = v93;
          uint64_t v125 = v15;
          while (1)
          {
            uint64_t v134 = v95;
            uint64_t v135 = v96;
            uint64_t v100 = *(v99 - 3);
            uint64_t v101 = *(v99 - 2);
            uint64_t v136 = v97;
            uint64_t v102 = *(v99 - 1);
            uint64_t v131 = v100;
            uint64_t v132 = v101;
            uint64_t v133 = v102;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v103 = a1(&v134, &v131);
            if (v127)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_119;
            }
            char v104 = v103;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v104 & 1) == 0) {
              break;
            }
            uint64_t v12 = v129;
            uint64_t v105 = v125;
            if (!v129) {
              goto LABEL_147;
            }
            uint64_t v95 = *v99;
            uint64_t v96 = v99[1];
            uint64_t v97 = v99[2];
            *(_OWORD *)uint64_t v99 = *(_OWORD *)(v99 - 3);
            v99[2] = *(v99 - 1);
            *(v99 - 2) = v96;
            *(v99 - 1) = v97;
            *(v99 - 3) = v95;
            v99 -= 3;
            if (v125 == ++v98) {
              goto LABEL_99;
            }
          }
          uint64_t v12 = v129;
          uint64_t v105 = v125;
LABEL_99:
          uint64_t v15 = v105 + 1;
          uint64_t v93 = v116 + 3;
          uint64_t v14 = v123;
        }
        while (v15 != v115);
        uint64_t v15 = v115;
        uint64_t v4 = 0;
        uint64_t v10 = v122;
        if (v115 < v123) {
          goto LABEL_140;
        }
LABEL_42:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_1C23F277C(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v43 = *((void *)v10 + 2);
        unint64_t v42 = *((void *)v10 + 3);
        unint64_t v44 = v43 + 1;
        uint64_t v12 = v129;
        if (v43 >= v42 >> 1)
        {
          uint64_t v106 = sub_1C23F277C((char *)(v42 > 1), v43 + 1, 1, v10);
          uint64_t v12 = v129;
          uint64_t v10 = v106;
        }
        *((void *)v10 + 2) = v44;
        uint64_t v45 = v10 + 32;
        uint64_t v46 = &v10[16 * v43 + 32];
        *(void *)uint64_t v46 = v123;
        *((void *)v46 + 1) = v15;
        uint64_t v124 = v15;
        if (v43)
        {
LABEL_47:
          unint64_t v47 = v44 - 1;
          if (v44 >= 4)
          {
            uint64_t v52 = &v45[16 * v44];
            uint64_t v53 = *((void *)v52 - 8);
            uint64_t v54 = *((void *)v52 - 7);
            BOOL v58 = __OFSUB__(v54, v53);
            uint64_t v55 = v54 - v53;
            if (v58) {
              goto LABEL_125;
            }
            uint64_t v57 = *((void *)v52 - 6);
            uint64_t v56 = *((void *)v52 - 5);
            BOOL v58 = __OFSUB__(v56, v57);
            uint64_t v50 = v56 - v57;
            char v51 = v58;
            if (v58) {
              goto LABEL_126;
            }
            unint64_t v59 = v44 - 2;
            BOOL v60 = &v45[16 * v44 - 32];
            uint64_t v62 = *(void *)v60;
            uint64_t v61 = *((void *)v60 + 1);
            BOOL v58 = __OFSUB__(v61, v62);
            uint64_t v63 = v61 - v62;
            if (v58) {
              goto LABEL_128;
            }
            BOOL v58 = __OFADD__(v50, v63);
            uint64_t v64 = v50 + v63;
            if (v58) {
              goto LABEL_131;
            }
            if (v64 >= v55)
            {
              uint64_t v82 = &v45[16 * v47];
              uint64_t v84 = *(void *)v82;
              uint64_t v83 = *((void *)v82 + 1);
              BOOL v58 = __OFSUB__(v83, v84);
              uint64_t v85 = v83 - v84;
              if (v58) {
                goto LABEL_135;
              }
              BOOL v75 = v50 < v85;
            }
            else
            {
LABEL_60:
              if (v51) {
                goto LABEL_127;
              }
              unint64_t v59 = v44 - 2;
              uint64_t v65 = &v45[16 * v44 - 32];
              uint64_t v67 = *(void *)v65;
              uint64_t v66 = *((void *)v65 + 1);
              BOOL v68 = __OFSUB__(v66, v67);
              uint64_t v69 = v66 - v67;
              char v70 = v68;
              if (v68) {
                goto LABEL_130;
              }
              unint64_t v71 = &v45[16 * v47];
              uint64_t v73 = *(void *)v71;
              uint64_t v72 = *((void *)v71 + 1);
              BOOL v58 = __OFSUB__(v72, v73);
              uint64_t v74 = v72 - v73;
              if (v58) {
                goto LABEL_133;
              }
              if (__OFADD__(v69, v74)) {
                goto LABEL_134;
              }
              if (v69 + v74 < v50) {
                goto LABEL_72;
              }
              BOOL v75 = v50 < v74;
            }
            if (v75) {
              unint64_t v47 = v59;
            }
          }
          else
          {
            if (v44 == 3)
            {
              uint64_t v49 = *((void *)v10 + 4);
              uint64_t v48 = *((void *)v10 + 5);
              BOOL v58 = __OFSUB__(v48, v49);
              uint64_t v50 = v48 - v49;
              char v51 = v58;
              goto LABEL_60;
            }
            uint64_t v76 = *((void *)v10 + 4);
            uint64_t v77 = *((void *)v10 + 5);
            BOOL v58 = __OFSUB__(v77, v76);
            uint64_t v69 = v77 - v76;
            char v70 = v58;
LABEL_72:
            if (v70) {
              goto LABEL_129;
            }
            id v78 = &v45[16 * v47];
            uint64_t v80 = *(void *)v78;
            uint64_t v79 = *((void *)v78 + 1);
            BOOL v58 = __OFSUB__(v79, v80);
            uint64_t v81 = v79 - v80;
            if (v58) {
              goto LABEL_132;
            }
            if (v81 < v69) {
              goto LABEL_89;
            }
          }
          unint64_t v86 = v47 - 1;
          if (v47 - 1 >= v44)
          {
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
            break;
          }
          if (!v12) {
            goto LABEL_146;
          }
          uint64_t v87 = v10;
          uint64_t v88 = &v45[16 * v86];
          uint64_t v89 = *(void *)v88;
          uint64_t v90 = &v45[16 * v47];
          uint64_t v91 = *((void *)v90 + 1);
          sub_1C2324D48((char *)(v12 + 24 * *(void *)v88), (char *)(v12 + 24 * *(void *)v90), v12 + 24 * v91, __dst, a1);
          if (v4) {
            goto LABEL_118;
          }
          if (v91 < v89) {
            goto LABEL_122;
          }
          if (v47 > *((void *)v87 + 2)) {
            goto LABEL_123;
          }
          *(void *)uint64_t v88 = v89;
          *(void *)&v45[16 * v86 + 8] = v91;
          unint64_t v92 = *((void *)v87 + 2);
          if (v47 >= v92) {
            goto LABEL_124;
          }
          uint64_t v10 = v87;
          unint64_t v44 = v92 - 1;
          memmove(&v45[16 * v47], v90 + 16, 16 * (v92 - 1 - v47));
          *((void *)v87 + 2) = v92 - 1;
          uint64_t v12 = v129;
          if (v92 <= 2) {
            goto LABEL_89;
          }
          goto LABEL_47;
        }
        unint64_t v44 = 1;
LABEL_89:
        uint64_t v11 = v124;
        uint64_t v13 = v126;
        if (v124 >= v126)
        {
LABEL_103:
          if (v44 >= 2)
          {
            uint64_t v107 = *v117;
            do
            {
              unint64_t v108 = v44 - 2;
              if (v44 < 2) {
                goto LABEL_136;
              }
              if (!v107) {
                goto LABEL_149;
              }
              uint64_t v109 = v10;
              BOOL v110 = v10 + 32;
              uint64_t v111 = *(void *)&v10[16 * v108 + 32];
              uint64_t v112 = *(void *)&v10[16 * v44 + 24];
              sub_1C2324D48((char *)(v107 + 24 * v111), (char *)(v107 + 24 * *(void *)&v110[16 * v44 - 16]), v107 + 24 * v112, __dst, a1);
              if (v4) {
                break;
              }
              if (v112 < v111) {
                goto LABEL_137;
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v109 = sub_1C23F321C((uint64_t)v109);
              }
              if (v108 >= *((void *)v109 + 2)) {
                goto LABEL_138;
              }
              v113 = &v109[16 * v108 + 32];
              *(void *)v113 = v111;
              *((void *)v113 + 1) = v112;
              unint64_t v114 = *((void *)v109 + 2);
              if (v44 > v114) {
                goto LABEL_139;
              }
              uint64_t v10 = v109;
              memmove(&v109[16 * v44 + 16], &v109[16 * v44 + 32], 16 * (v114 - v44));
              *((void *)v109 + 2) = v114 - 1;
              unint64_t v44 = v114 - 1;
            }
            while (v114 > 2);
          }
LABEL_118:
          swift_bridgeObjectRelease();
LABEL_119:
          *(void *)(v120 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
      }
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
    }
    uint64_t result = sub_1C25505E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2320774(uint64_t (*a1)(uint64_t *, uint64_t *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v199 = a2;
  uint64_t v5 = v2[1];
  uint64_t result = sub_1C2550800();
  if (result >= v5)
  {
    if (v5 < 0) {
      goto LABEL_139;
    }
    if (v5) {
      return sub_1C23239E4(0, v5, 1, a1);
    }
    return result;
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 <= -2) {
    goto LABEL_148;
  }
  uint64_t v162 = v5;
  uint64_t v158 = result;
  v156 = v2;
  if (v5 < 2)
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v159 = MEMORY[0x1E4FBC860];
    if (v5 != 1)
    {
      unint64_t v68 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_103:
      if (v68 >= 2)
      {
        uint64_t v145 = *v156;
        do
        {
          unint64_t v146 = v68 - 2;
          if (v68 < 2) {
            goto LABEL_134;
          }
          if (!v145) {
            goto LABEL_147;
          }
          uint64_t v147 = v10;
          v148 = v10 + 32;
          uint64_t v149 = *(void *)&v10[16 * v146 + 32];
          uint64_t v150 = *(void *)&v10[16 * v68 + 24];
          sub_1C23251A4((char *)(v145 + 80 * v149), (char *)(v145 + 80 * *(void *)&v148[16 * v68 - 16]), v145 + 80 * v150, __dst, a1);
          if (v4) {
            break;
          }
          if (v150 < v149) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v147 = sub_1C23F321C((uint64_t)v147);
          }
          if (v146 >= *((void *)v147 + 2)) {
            goto LABEL_136;
          }
          uint64_t v151 = &v147[16 * v146 + 32];
          *(void *)uint64_t v151 = v149;
          *((void *)v151 + 1) = v150;
          unint64_t v152 = *((void *)v147 + 2);
          if (v68 > v152) {
            goto LABEL_137;
          }
          uint64_t v10 = v147;
          memmove(&v147[16 * v68 + 16], &v147[16 * v68 + 32], 16 * (v152 - v68));
          *((void *)v147 + 2) = v152 - 1;
          unint64_t v68 = v152 - 1;
        }
        while (v152 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v159 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v7 >> 1;
    uint64_t v9 = sub_1C254F780();
    *(void *)(v9 + 16) = v8;
    uint64_t v159 = v9;
    __dst = (char *)(v9 + 32);
  }
  uint64_t v11 = 0;
  uint64_t v12 = *v2;
  uint64_t v157 = *v2 + 120;
  uint64_t v155 = *v2 + 72;
  uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v13 = v162;
  uint64_t v174 = *v2;
  while (1)
  {
    uint64_t v14 = v11;
    uint64_t v15 = v11 + 1;
    uint64_t v160 = v11;
    uint64_t v161 = v10;
    if (v11 + 1 < v13)
    {
      uint64_t v16 = (uint64_t *)(v12 + 80 * v15);
      uint64_t v17 = v16[1];
      uint64_t v18 = v16[2];
      uint64_t v19 = v16[3];
      uint64_t v20 = v16[4];
      uint64_t v21 = v16[5];
      uint64_t v22 = v16[6];
      uint64_t v23 = v16[7];
      uint64_t v24 = v16[8];
      uint64_t v25 = v16[9];
      uint64_t v189 = *v16;
      uint64_t v190 = v17;
      uint64_t v191 = v18;
      uint64_t v192 = v19;
      uint64_t v193 = v20;
      uint64_t v194 = v21;
      uint64_t v195 = v22;
      uint64_t v196 = v23;
      uint64_t v197 = v24;
      uint64_t v198 = v25;
      uint64_t v26 = (uint64_t *)(v12 + 80 * v11);
      uint64_t v27 = v26[1];
      uint64_t v28 = v26[2];
      uint64_t v29 = v26[3];
      uint64_t v30 = v26[4];
      uint64_t v31 = v26[5];
      uint64_t v175 = v4;
      uint64_t v32 = v26[6];
      uint64_t v33 = v26[7];
      uint64_t v34 = v26[8];
      uint64_t v35 = v26[9];
      uint64_t v179 = *v26;
      uint64_t v180 = v27;
      uint64_t v181 = v28;
      uint64_t v182 = v29;
      uint64_t v183 = v30;
      uint64_t v184 = v31;
      uint64_t v185 = v32;
      uint64_t v186 = v33;
      uint64_t v187 = v34;
      uint64_t v188 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int v164 = a1(&v189, &v179);
      if (v175)
      {
LABEL_115:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_116;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v160;
      uint64_t v15 = v160 + 2;
      if (v160 + 2 < v162)
      {
        uint64_t v36 = (void *)(v157 + 80 * v160);
        uint64_t v37 = v36;
        while (1)
        {
          uint64_t v170 = v15;
          uint64_t v39 = v36[6];
          uint64_t v38 = v36[7];
          uint64_t v40 = v37[10];
          uint64_t v165 = v37 + 10;
          uint64_t v42 = v36[8];
          uint64_t v41 = v36[9];
          uint64_t v43 = v36[11];
          uint64_t v44 = v36[12];
          uint64_t v45 = v36[13];
          uint64_t v46 = v36[14];
          uint64_t v47 = v36[4];
          uint64_t v189 = v36[5];
          uint64_t v190 = v39;
          uint64_t v191 = v38;
          uint64_t v192 = v42;
          uint64_t v193 = v41;
          uint64_t v194 = v40;
          uint64_t v195 = v43;
          uint64_t v196 = v44;
          uint64_t v197 = v45;
          uint64_t v198 = v46;
          uint64_t v48 = *(v36 - 5);
          uint64_t v49 = *(v36 - 4);
          uint64_t v50 = *(v36 - 3);
          uint64_t v51 = *(v36 - 2);
          uint64_t v52 = *(v36 - 1);
          uint64_t v53 = *v36;
          uint64_t v54 = v36[1];
          uint64_t v55 = v36[2];
          uint64_t v56 = v36[3];
          uint64_t v179 = v48;
          uint64_t v180 = v49;
          uint64_t v181 = v50;
          uint64_t v182 = v51;
          uint64_t v183 = v52;
          uint64_t v184 = v53;
          uint64_t v185 = v54;
          uint64_t v186 = v55;
          uint64_t v187 = v56;
          uint64_t v188 = v47;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          LODWORD(v49) = a1(&v189, &v179);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v164 ^ v49)) {
            break;
          }
          uint64_t v15 = v170 + 1;
          uint64_t v37 = v165;
          uint64_t v36 = v165;
          if (v162 == v170 + 1)
          {
            uint64_t v15 = v162;
            goto LABEL_21;
          }
        }
        uint64_t v15 = v170;
LABEL_21:
        uint64_t v14 = v160;
      }
      uint64_t v12 = v174;
      uint64_t v4 = 0;
      uint64_t v10 = v161;
      if (v164)
      {
        if (v15 < v14) {
          goto LABEL_143;
        }
        if (v14 < v15)
        {
          uint64_t v57 = 80 * v15;
          uint64_t v58 = 80 * v14;
          uint64_t v59 = v15;
          uint64_t v60 = v15;
          uint64_t v61 = v14;
          do
          {
            if (v61 != --v60)
            {
              if (!v12) {
                goto LABEL_146;
              }
              uint64_t v62 = v12 + v57;
              long long v176 = *(_OWORD *)(v12 + v58);
              long long v168 = *(_OWORD *)(v12 + v58 + 32);
              long long v171 = *(_OWORD *)(v12 + v58 + 16);
              uint64_t v63 = *(void *)(v12 + v58 + 48);
              uint64_t v64 = *(void *)(v12 + v58 + 56);
              long long v166 = *(_OWORD *)(v12 + v58 + 64);
              memmove((void *)(v12 + v58), (const void *)(v12 + v57 - 80), 0x50uLL);
              uint64_t v12 = v174;
              *(_OWORD *)(v62 - 80) = v176;
              *(_OWORD *)(v62 - 64) = v171;
              *(_OWORD *)(v62 - 48) = v168;
              *(void *)(v62 - 32) = v63;
              *(void *)(v62 - 24) = v64;
              *(_OWORD *)(v62 - 16) = v166;
              uint64_t v10 = v161;
            }
            ++v61;
            v57 -= 80;
            v58 += 80;
          }
          while (v61 < v60);
          uint64_t v15 = v59;
          uint64_t v14 = v160;
        }
      }
    }
    if (v15 >= v162) {
      goto LABEL_41;
    }
    if (__OFSUB__(v15, v14)) {
      goto LABEL_140;
    }
    if (v15 - v14 >= v158) {
      goto LABEL_41;
    }
    if (__OFADD__(v14, v158)) {
      goto LABEL_141;
    }
    uint64_t v65 = v14 + v158 >= v162 ? v162 : v14 + v158;
    if (v65 < v14) {
      break;
    }
    if (v15 != v65)
    {
      uint64_t v177 = v4;
      BOOL v117 = (void *)(v155 + 80 * v15);
      uint64_t v153 = v65;
      do
      {
        uint64_t v118 = (uint64_t *)(v12 + 80 * v15);
        uint64_t v119 = *v118;
        uint64_t v120 = v118[1];
        uint64_t v121 = v118[2];
        uint64_t v122 = v118[3];
        uint64_t v123 = v118[4];
        uint64_t v124 = v118[5];
        uint64_t v125 = v118[6];
        uint64_t v126 = v118[7];
        uint64_t v127 = v118[8];
        uint64_t v128 = v118[9];
        uint64_t v154 = v117;
        uint64_t v173 = v15;
        while (1)
        {
          uint64_t v163 = v14;
          uint64_t v189 = v119;
          uint64_t v190 = v120;
          uint64_t v191 = v121;
          uint64_t v192 = v122;
          uint64_t v193 = v123;
          uint64_t v194 = v124;
          uint64_t v195 = v125;
          uint64_t v196 = v126;
          uint64_t v197 = v127;
          uint64_t v198 = v128;
          uint64_t v129 = (long long *)(v117 - 19);
          uint64_t v169 = *(v117 - 18);
          uint64_t v130 = *(v117 - 17);
          uint64_t v131 = *(v117 - 16);
          uint64_t v132 = *(v117 - 15);
          uint64_t v133 = *(v117 - 14);
          uint64_t v134 = *(v117 - 13);
          uint64_t v135 = *(v117 - 12);
          uint64_t v137 = *(v117 - 11);
          uint64_t v136 = *(v117 - 10);
          uint64_t v179 = *(v117 - 19);
          uint64_t v180 = v169;
          uint64_t v181 = v130;
          uint64_t v182 = v131;
          uint64_t v183 = v132;
          uint64_t v184 = v133;
          uint64_t v185 = v134;
          uint64_t v186 = v135;
          uint64_t v187 = v137;
          uint64_t v188 = v136;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v138 = a1(&v189, &v179);
          if (v177) {
            goto LABEL_115;
          }
          char v139 = v138;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v139 & 1) == 0) {
            break;
          }
          uint64_t v12 = v174;
          uint64_t v140 = v173;
          if (!v174) {
            goto LABEL_145;
          }
          uint64_t v119 = *(v117 - 9);
          uint64_t v120 = *(v117 - 8);
          uint64_t v121 = *(v117 - 7);
          uint64_t v122 = *(v117 - 6);
          uint64_t v123 = *(v117 - 5);
          uint64_t v124 = *(v117 - 4);
          uint64_t v125 = *(v117 - 3);
          uint64_t v126 = *(v117 - 2);
          uint64_t v127 = *(v117 - 1);
          uint64_t v128 = *v117;
          long long v141 = *(_OWORD *)(v117 - 13);
          *(_OWORD *)(v117 - 5) = *(_OWORD *)(v117 - 15);
          *(_OWORD *)(v117 - 3) = v141;
          *(_OWORD *)(v117 - 1) = *(_OWORD *)(v117 - 11);
          long long v143 = *v129;
          long long v142 = *(_OWORD *)(v117 - 17);
          *(v117 - 10) = v128;
          v117 -= 10;
          v129[5] = v143;
          v129[6] = v142;
          *(v117 - 9) = v119;
          *(v117 - 8) = v120;
          *(v117 - 7) = v121;
          *(v117 - 6) = v122;
          *(v117 - 5) = v123;
          *(v117 - 4) = v124;
          *(v117 - 3) = v125;
          *(v117 - 2) = v126;
          ++v14;
          *(v117 - 1) = v127;
          if (v173 == v163 + 1) {
            goto LABEL_99;
          }
        }
        uint64_t v12 = v174;
        uint64_t v140 = v173;
LABEL_99:
        uint64_t v15 = v140 + 1;
        BOOL v117 = v154 + 10;
        uint64_t v14 = v160;
      }
      while (v15 != v153);
      uint64_t v15 = v153;
      uint64_t v4 = 0;
      uint64_t v10 = v161;
      if (v153 < v160) {
        goto LABEL_138;
      }
      goto LABEL_42;
    }
LABEL_41:
    if (v15 < v14) {
      goto LABEL_138;
    }
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1C23F277C(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v67 = *((void *)v10 + 2);
    unint64_t v66 = *((void *)v10 + 3);
    unint64_t v68 = v67 + 1;
    uint64_t v12 = v174;
    if (v67 >= v66 >> 1)
    {
      uint64_t v144 = sub_1C23F277C((char *)(v66 > 1), v67 + 1, 1, v10);
      uint64_t v12 = v174;
      uint64_t v10 = v144;
    }
    *((void *)v10 + 2) = v68;
    uint64_t v69 = v10 + 32;
    char v70 = &v10[16 * v67 + 32];
    *(void *)char v70 = v160;
    *((void *)v70 + 1) = v15;
    uint64_t v172 = v15;
    if (v67)
    {
      while (1)
      {
        unint64_t v71 = v68 - 1;
        if (v68 >= 4)
        {
          uint64_t v76 = &v69[16 * v68];
          uint64_t v77 = *((void *)v76 - 8);
          uint64_t v78 = *((void *)v76 - 7);
          BOOL v82 = __OFSUB__(v78, v77);
          uint64_t v79 = v78 - v77;
          if (v82) {
            goto LABEL_123;
          }
          uint64_t v81 = *((void *)v76 - 6);
          uint64_t v80 = *((void *)v76 - 5);
          BOOL v82 = __OFSUB__(v80, v81);
          uint64_t v74 = v80 - v81;
          char v75 = v82;
          if (v82) {
            goto LABEL_124;
          }
          unint64_t v83 = v68 - 2;
          uint64_t v84 = &v69[16 * v68 - 32];
          uint64_t v86 = *(void *)v84;
          uint64_t v85 = *((void *)v84 + 1);
          BOOL v82 = __OFSUB__(v85, v86);
          uint64_t v87 = v85 - v86;
          if (v82) {
            goto LABEL_126;
          }
          BOOL v82 = __OFADD__(v74, v87);
          uint64_t v88 = v74 + v87;
          if (v82) {
            goto LABEL_129;
          }
          if (v88 >= v79)
          {
            uint64_t v106 = &v69[16 * v71];
            uint64_t v108 = *(void *)v106;
            uint64_t v107 = *((void *)v106 + 1);
            BOOL v82 = __OFSUB__(v107, v108);
            uint64_t v109 = v107 - v108;
            if (v82) {
              goto LABEL_133;
            }
            BOOL v99 = v74 < v109;
            goto LABEL_78;
          }
        }
        else
        {
          if (v68 != 3)
          {
            uint64_t v100 = *((void *)v10 + 4);
            uint64_t v101 = *((void *)v10 + 5);
            BOOL v82 = __OFSUB__(v101, v100);
            uint64_t v93 = v101 - v100;
            char v94 = v82;
            goto LABEL_72;
          }
          uint64_t v73 = *((void *)v10 + 4);
          uint64_t v72 = *((void *)v10 + 5);
          BOOL v82 = __OFSUB__(v72, v73);
          uint64_t v74 = v72 - v73;
          char v75 = v82;
        }
        if (v75) {
          goto LABEL_125;
        }
        unint64_t v83 = v68 - 2;
        uint64_t v89 = &v69[16 * v68 - 32];
        uint64_t v91 = *(void *)v89;
        uint64_t v90 = *((void *)v89 + 1);
        BOOL v92 = __OFSUB__(v90, v91);
        uint64_t v93 = v90 - v91;
        char v94 = v92;
        if (v92) {
          goto LABEL_128;
        }
        uint64_t v95 = &v69[16 * v71];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v82 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v82) {
          goto LABEL_131;
        }
        if (__OFADD__(v93, v98)) {
          goto LABEL_132;
        }
        if (v93 + v98 >= v74)
        {
          BOOL v99 = v74 < v98;
LABEL_78:
          if (v99) {
            unint64_t v71 = v83;
          }
          goto LABEL_80;
        }
LABEL_72:
        if (v94) {
          goto LABEL_127;
        }
        uint64_t v102 = &v69[16 * v71];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v82 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v82) {
          goto LABEL_130;
        }
        if (v105 < v93) {
          goto LABEL_89;
        }
LABEL_80:
        unint64_t v110 = v71 - 1;
        if (v71 - 1 >= v68)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v12) {
          goto LABEL_144;
        }
        uint64_t v111 = v10;
        uint64_t v112 = &v69[16 * v110];
        uint64_t v113 = *(void *)v112;
        unint64_t v114 = &v69[16 * v71];
        uint64_t v115 = *((void *)v114 + 1);
        sub_1C23251A4((char *)(v12 + 80 * *(void *)v112), (char *)(v12 + 80 * *(void *)v114), v12 + 80 * v115, __dst, a1);
        if (v4) {
          goto LABEL_116;
        }
        if (v115 < v113) {
          goto LABEL_120;
        }
        if (v71 > *((void *)v111 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v112 = v113;
        *(void *)&v69[16 * v110 + 8] = v115;
        unint64_t v116 = *((void *)v111 + 2);
        if (v71 >= v116) {
          goto LABEL_122;
        }
        uint64_t v10 = v111;
        unint64_t v68 = v116 - 1;
        memmove(&v69[16 * v71], v114 + 16, 16 * (v116 - 1 - v71));
        *((void *)v111 + 2) = v116 - 1;
        uint64_t v12 = v174;
        if (v116 <= 2) {
          goto LABEL_89;
        }
      }
    }
    unint64_t v68 = 1;
LABEL_89:
    uint64_t v13 = v162;
    uint64_t v11 = v172;
    if (v172 >= v162) {
      goto LABEL_103;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_1C25505E0();
  __break(1u);
  return result;
}

uint64_t sub_1C232139C(uint64_t (*a1)(uint64_t *, uint64_t *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v192 = a2;
  uint64_t v5 = v2[1];
  uint64_t result = sub_1C2550800();
  if (result >= v5)
  {
    if (v5 < 0) {
      goto LABEL_139;
    }
    if (v5) {
      return sub_1C2323C34(0, v5, 1, a1);
    }
    return result;
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 <= -2) {
    goto LABEL_148;
  }
  uint64_t v160 = v5;
  uint64_t v156 = result;
  uint64_t v154 = v2;
  if (v5 < 2)
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v157 = MEMORY[0x1E4FBC860];
    if (v5 != 1)
    {
      unint64_t v66 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_103:
      if (v66 >= 2)
      {
        uint64_t v145 = *v154;
        do
        {
          unint64_t v146 = v66 - 2;
          if (v66 < 2) {
            goto LABEL_134;
          }
          if (!v145) {
            goto LABEL_147;
          }
          uint64_t v147 = *(void *)&v10[16 * v146 + 32];
          uint64_t v148 = *(void *)&v10[16 * v66 + 24];
          sub_1C232579C((char *)(v145 + 72 * v147), (char *)(v145 + 72 * *(void *)&v10[16 * v66 + 16]), v145 + 72 * v148, __dst, a1);
          if (v4) {
            break;
          }
          if (v148 < v147) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v10 = sub_1C23F321C((uint64_t)v10);
          }
          if (v146 >= *((void *)v10 + 2)) {
            goto LABEL_136;
          }
          uint64_t v149 = &v10[16 * v146 + 32];
          *(void *)uint64_t v149 = v147;
          *((void *)v149 + 1) = v148;
          unint64_t v150 = *((void *)v10 + 2);
          if (v66 > v150) {
            goto LABEL_137;
          }
          memmove(&v10[16 * v66 + 16], &v10[16 * v66 + 32], 16 * (v150 - v66));
          *((void *)v10 + 2) = v150 - 1;
          unint64_t v66 = v150 - 1;
        }
        while (v150 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v157 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v7 >> 1;
    uint64_t v9 = sub_1C254F780();
    *(void *)(v9 + 16) = v8;
    uint64_t v157 = v9;
    __dst = (char *)(v9 + 32);
  }
  uint64_t v11 = 0;
  uint64_t v12 = *v2;
  uint64_t v155 = *v2 + 104;
  uint64_t v153 = *v2 - 72;
  uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v13 = v160;
  uint64_t v170 = *v2;
  while (1)
  {
    uint64_t v14 = v11;
    uint64_t v15 = v11 + 1;
    uint64_t v158 = v11;
    uint64_t v159 = v10;
    if (v11 + 1 < v13)
    {
      uint64_t v16 = (uint64_t *)(v12 + 72 * v15);
      uint64_t v17 = *v16;
      uint64_t v18 = v16[1];
      uint64_t v19 = v16[2];
      uint64_t v20 = v16[3];
      uint64_t v21 = v4;
      uint64_t v22 = v16[4];
      uint64_t v23 = v16[5];
      uint64_t v24 = v16[6];
      uint64_t v25 = v16[7];
      LOBYTE(v16) = *((unsigned char *)v16 + 64);
      uint64_t v183 = v17;
      uint64_t v184 = v18;
      uint64_t v185 = v19;
      uint64_t v186 = v20;
      uint64_t v187 = v22;
      uint64_t v188 = v23;
      uint64_t v189 = v24;
      uint64_t v190 = v25;
      char v191 = (char)v16;
      uint64_t v26 = (uint64_t *)(v12 + 72 * v14);
      uint64_t v27 = *v26;
      uint64_t v28 = v26[1];
      uint64_t v29 = v26[2];
      uint64_t v30 = v26[3];
      uint64_t v31 = v26[4];
      uint64_t v32 = v26[5];
      uint64_t v33 = v26[6];
      uint64_t v34 = v26[7];
      LOBYTE(v26) = *((unsigned char *)v26 + 64);
      uint64_t v174 = v27;
      uint64_t v175 = v28;
      uint64_t v176 = v29;
      uint64_t v177 = v30;
      uint64_t v178 = v31;
      uint64_t v179 = v32;
      uint64_t v180 = v33;
      uint64_t v181 = v34;
      char v182 = (char)v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int v162 = a1(&v183, &v174);
      if (v21)
      {
LABEL_115:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_116;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v14 + 2;
      uint64_t v13 = v160;
      if (v14 + 2 < v160)
      {
        uint64_t v35 = v155 + 72 * v14;
        while (1)
        {
          uint64_t v166 = v15;
          uint64_t v36 = *(void *)(v35 + 48);
          uint64_t v37 = *(void *)(v35 + 56);
          uint64_t v38 = *(void *)(v35 + 64);
          uint64_t v39 = *(void *)(v35 + 72);
          uint64_t v40 = *(void *)(v35 + 80);
          uint64_t v41 = *(void *)(v35 + 88);
          uint64_t v42 = *(void *)(v35 + 96);
          char v43 = *(unsigned char *)(v35 + 104);
          uint64_t v183 = *(void *)(v35 + 40);
          uint64_t v184 = v36;
          uint64_t v185 = v37;
          uint64_t v186 = v38;
          uint64_t v187 = v39;
          uint64_t v188 = v40;
          uint64_t v189 = v41;
          uint64_t v190 = v42;
          char v191 = v43;
          uint64_t v44 = *(void *)(v35 - 24);
          uint64_t v45 = *(void *)(v35 - 16);
          uint64_t v46 = *(void *)(v35 - 8);
          uint64_t v47 = *(void *)v35;
          uint64_t v48 = *(void *)(v35 + 8);
          uint64_t v49 = *(void *)(v35 + 16);
          uint64_t v50 = *(void *)(v35 + 24);
          char v51 = *(unsigned char *)(v35 + 32);
          uint64_t v174 = *(void *)(v35 - 32);
          uint64_t v175 = v44;
          uint64_t v176 = v45;
          uint64_t v177 = v46;
          uint64_t v178 = v47;
          uint64_t v179 = v48;
          uint64_t v180 = v49;
          uint64_t v181 = v50;
          char v182 = v51;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v52 = a1(&v183, &v174);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v162 ^ v52)) {
            break;
          }
          uint64_t v15 = v166 + 1;
          v35 += 72;
          uint64_t v13 = v160;
          if (v160 == v166 + 1)
          {
            uint64_t v15 = v160;
            goto LABEL_21;
          }
        }
        uint64_t v13 = v160;
        uint64_t v15 = v166;
LABEL_21:
        uint64_t v14 = v158;
      }
      uint64_t v53 = v170;
      uint64_t v4 = 0;
      uint64_t v10 = v159;
      if (v162)
      {
        if (v15 < v14) {
          goto LABEL_143;
        }
        if (v14 < v15)
        {
          uint64_t v54 = 72 * v15;
          uint64_t v55 = v14;
          uint64_t v56 = 72 * v14;
          uint64_t v167 = v15;
          uint64_t v57 = v15;
          uint64_t v58 = v55;
          do
          {
            if (v58 != --v57)
            {
              if (!v53) {
                goto LABEL_146;
              }
              uint64_t v59 = v53 + v54;
              long long v171 = *(_OWORD *)(v53 + v56);
              long long v163 = *(_OWORD *)(v53 + v56 + 32);
              long long v164 = *(_OWORD *)(v53 + v56 + 16);
              uint64_t v60 = *(void *)(v53 + v56 + 48);
              uint64_t v61 = *(void *)(v53 + v56 + 56);
              char v62 = *(unsigned char *)(v53 + v56 + 64);
              memmove((void *)(v53 + v56), (const void *)(v53 + v54 - 72), 0x48uLL);
              uint64_t v53 = v170;
              *(_OWORD *)(v59 - 72) = v171;
              *(_OWORD *)(v59 - 56) = v164;
              *(_OWORD *)(v59 - 40) = v163;
              *(void *)(v59 - 24) = v60;
              *(void *)(v59 - 16) = v61;
              *(unsigned char *)(v59 - 8) = v62;
              uint64_t v10 = v159;
            }
            ++v58;
            v54 -= 72;
            v56 += 72;
          }
          while (v58 < v57);
          uint64_t v13 = v160;
          uint64_t v15 = v167;
          uint64_t v14 = v158;
        }
      }
    }
    if (v15 >= v13) {
      goto LABEL_41;
    }
    if (__OFSUB__(v15, v14)) {
      goto LABEL_140;
    }
    if (v15 - v14 >= v156) {
      goto LABEL_41;
    }
    if (__OFADD__(v14, v156)) {
      goto LABEL_141;
    }
    uint64_t v63 = v14 + v156 >= v13 ? v13 : v14 + v156;
    if (v63 < v14) {
      break;
    }
    if (v15 != v63)
    {
      uint64_t v172 = v4;
      uint64_t v114 = v153 + 72 * v15;
      uint64_t v151 = v63;
      do
      {
        uint64_t v152 = v114;
        uint64_t v169 = v15;
        while (1)
        {
          uint64_t v161 = v14;
          uint64_t v115 = (_OWORD *)(v114 + 72);
          uint64_t v116 = *(void *)(v114 + 80);
          uint64_t v117 = *(void *)(v114 + 88);
          uint64_t v119 = *(void *)(v114 + 96);
          uint64_t v118 = *(void *)(v114 + 104);
          uint64_t v121 = *(void *)(v114 + 112);
          uint64_t v120 = *(void *)(v114 + 120);
          uint64_t v122 = *(void *)(v114 + 128);
          char v123 = *(unsigned char *)(v114 + 136);
          uint64_t v183 = *(void *)(v114 + 72);
          uint64_t v184 = v116;
          uint64_t v185 = v117;
          uint64_t v186 = v119;
          uint64_t v187 = v118;
          uint64_t v188 = v121;
          uint64_t v189 = v120;
          uint64_t v190 = v122;
          char v191 = v123;
          uint64_t v124 = *(void *)(v114 + 8);
          uint64_t v125 = *(void *)(v114 + 16);
          uint64_t v126 = *(void *)(v114 + 24);
          uint64_t v127 = *(void *)(v114 + 32);
          uint64_t v128 = *(void *)(v114 + 40);
          uint64_t v129 = *(void *)(v114 + 48);
          uint64_t v130 = *(void *)(v114 + 56);
          char v131 = *(unsigned char *)(v114 + 64);
          uint64_t v174 = *(void *)v114;
          uint64_t v175 = v124;
          uint64_t v176 = v125;
          uint64_t v177 = v126;
          uint64_t v178 = v127;
          uint64_t v179 = v128;
          uint64_t v180 = v129;
          uint64_t v181 = v130;
          char v182 = v131;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v132 = a1(&v183, &v174);
          if (v172) {
            goto LABEL_115;
          }
          char v133 = v132;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v133 & 1) == 0) {
            break;
          }
          uint64_t v134 = v169;
          if (!v170) {
            goto LABEL_145;
          }
          long long v135 = *(_OWORD *)(v114 + 72);
          long long v136 = *(_OWORD *)(v114 + 88);
          long long v137 = *(_OWORD *)(v114 + 104);
          uint64_t v138 = *(void *)(v114 + 120);
          uint64_t v139 = *(void *)(v114 + 128);
          char v140 = *(unsigned char *)(v114 + 136);
          long long v141 = *(_OWORD *)(v114 + 48);
          *(_OWORD *)(v114 + 104) = *(_OWORD *)(v114 + 32);
          *(_OWORD *)(v114 + 120) = v141;
          *(void *)(v114 + 136) = *(void *)(v114 + 64);
          long long v143 = *(_OWORD *)v114;
          long long v142 = *(_OWORD *)(v114 + 16);
          *(_OWORD *)uint64_t v114 = v135;
          *(_OWORD *)(v114 + 16) = v136;
          *(_OWORD *)(v114 + 32) = v137;
          *(void *)(v114 + 48) = v138;
          *(void *)(v114 + 56) = v139;
          *(unsigned char *)(v114 + 64) = v140;
          v114 -= 72;
          uint64_t v14 = v161 + 1;
          *uint64_t v115 = v143;
          v115[1] = v142;
          if (v169 == v161 + 1) {
            goto LABEL_99;
          }
        }
        uint64_t v134 = v169;
LABEL_99:
        uint64_t v15 = v134 + 1;
        uint64_t v114 = v152 + 72;
        uint64_t v14 = v158;
      }
      while (v15 != v151);
      uint64_t v15 = v151;
      uint64_t v4 = 0;
      uint64_t v10 = v159;
      if (v151 < v158) {
        goto LABEL_138;
      }
      goto LABEL_42;
    }
LABEL_41:
    if (v15 < v14) {
      goto LABEL_138;
    }
LABEL_42:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1C23F277C(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v65 = *((void *)v10 + 2);
    unint64_t v64 = *((void *)v10 + 3);
    unint64_t v66 = v65 + 1;
    uint64_t v12 = v170;
    if (v65 >= v64 >> 1)
    {
      uint64_t v144 = sub_1C23F277C((char *)(v64 > 1), v65 + 1, 1, v10);
      uint64_t v12 = v170;
      uint64_t v10 = v144;
    }
    *((void *)v10 + 2) = v66;
    unint64_t v67 = v10 + 32;
    unint64_t v68 = &v10[16 * v65 + 32];
    *(void *)unint64_t v68 = v158;
    *((void *)v68 + 1) = v15;
    uint64_t v168 = v15;
    if (v65)
    {
      while (1)
      {
        unint64_t v69 = v66 - 1;
        if (v66 >= 4)
        {
          uint64_t v74 = &v67[16 * v66];
          uint64_t v75 = *((void *)v74 - 8);
          uint64_t v76 = *((void *)v74 - 7);
          BOOL v80 = __OFSUB__(v76, v75);
          uint64_t v77 = v76 - v75;
          if (v80) {
            goto LABEL_123;
          }
          uint64_t v79 = *((void *)v74 - 6);
          uint64_t v78 = *((void *)v74 - 5);
          BOOL v80 = __OFSUB__(v78, v79);
          uint64_t v72 = v78 - v79;
          char v73 = v80;
          if (v80) {
            goto LABEL_124;
          }
          unint64_t v81 = v66 - 2;
          BOOL v82 = &v67[16 * v66 - 32];
          uint64_t v84 = *(void *)v82;
          uint64_t v83 = *((void *)v82 + 1);
          BOOL v80 = __OFSUB__(v83, v84);
          uint64_t v85 = v83 - v84;
          if (v80) {
            goto LABEL_126;
          }
          BOOL v80 = __OFADD__(v72, v85);
          uint64_t v86 = v72 + v85;
          if (v80) {
            goto LABEL_129;
          }
          if (v86 >= v77)
          {
            uint64_t v104 = &v67[16 * v69];
            uint64_t v106 = *(void *)v104;
            uint64_t v105 = *((void *)v104 + 1);
            BOOL v80 = __OFSUB__(v105, v106);
            uint64_t v107 = v105 - v106;
            if (v80) {
              goto LABEL_133;
            }
            BOOL v97 = v72 < v107;
            goto LABEL_78;
          }
        }
        else
        {
          if (v66 != 3)
          {
            uint64_t v98 = *((void *)v10 + 4);
            uint64_t v99 = *((void *)v10 + 5);
            BOOL v80 = __OFSUB__(v99, v98);
            uint64_t v91 = v99 - v98;
            char v92 = v80;
            goto LABEL_72;
          }
          uint64_t v71 = *((void *)v10 + 4);
          uint64_t v70 = *((void *)v10 + 5);
          BOOL v80 = __OFSUB__(v70, v71);
          uint64_t v72 = v70 - v71;
          char v73 = v80;
        }
        if (v73) {
          goto LABEL_125;
        }
        unint64_t v81 = v66 - 2;
        uint64_t v87 = &v67[16 * v66 - 32];
        uint64_t v89 = *(void *)v87;
        uint64_t v88 = *((void *)v87 + 1);
        BOOL v90 = __OFSUB__(v88, v89);
        uint64_t v91 = v88 - v89;
        char v92 = v90;
        if (v90) {
          goto LABEL_128;
        }
        uint64_t v93 = &v67[16 * v69];
        uint64_t v95 = *(void *)v93;
        uint64_t v94 = *((void *)v93 + 1);
        BOOL v80 = __OFSUB__(v94, v95);
        uint64_t v96 = v94 - v95;
        if (v80) {
          goto LABEL_131;
        }
        if (__OFADD__(v91, v96)) {
          goto LABEL_132;
        }
        if (v91 + v96 >= v72)
        {
          BOOL v97 = v72 < v96;
LABEL_78:
          if (v97) {
            unint64_t v69 = v81;
          }
          goto LABEL_80;
        }
LABEL_72:
        if (v92) {
          goto LABEL_127;
        }
        uint64_t v100 = &v67[16 * v69];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v80 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v80) {
          goto LABEL_130;
        }
        if (v103 < v91) {
          goto LABEL_89;
        }
LABEL_80:
        unint64_t v108 = v69 - 1;
        if (v69 - 1 >= v66)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v12) {
          goto LABEL_144;
        }
        uint64_t v109 = &v67[16 * v108];
        uint64_t v110 = *(void *)v109;
        uint64_t v111 = &v67[16 * v69];
        uint64_t v112 = *((void *)v111 + 1);
        sub_1C232579C((char *)(v12 + 72 * *(void *)v109), (char *)(v12 + 72 * *(void *)v111), v12 + 72 * v112, __dst, a1);
        if (v4) {
          goto LABEL_116;
        }
        if (v112 < v110) {
          goto LABEL_120;
        }
        if (v69 > *((void *)v10 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v109 = v110;
        *(void *)&v67[16 * v108 + 8] = v112;
        unint64_t v113 = *((void *)v10 + 2);
        if (v69 >= v113) {
          goto LABEL_122;
        }
        unint64_t v66 = v113 - 1;
        memmove(&v67[16 * v69], v111 + 16, 16 * (v113 - 1 - v69));
        *((void *)v10 + 2) = v113 - 1;
        uint64_t v12 = v170;
        if (v113 <= 2) {
          goto LABEL_89;
        }
      }
    }
    unint64_t v66 = 1;
LABEL_89:
    uint64_t v13 = v160;
    uint64_t v11 = v168;
    if (v168 >= v160) {
      goto LABEL_103;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_1C25505E0();
  __break(1u);
  return result;
}

uint64_t sub_1C2321EB8(uint64_t (*a1)(uint64_t *, uint64_t *))
{
  uint64_t v3 = v1[1];
  uint64_t result = sub_1C2550800();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_116;
    }
    if (v3) {
      return sub_1C2323E3C(0, v3, 1, a1);
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 > -2)
    {
      uint64_t v6 = result;
      uint64_t v86 = v1;
      if (v3 < 2)
      {
        uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
        uint64_t v91 = (char *)(MEMORY[0x1E4FBC860] + 32);
        uint64_t v87 = MEMORY[0x1E4FBC860];
        if (v3 != 1)
        {
          unint64_t v29 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_82:
          uint64_t v78 = v9;
          if (v29 >= 2)
          {
            uint64_t v79 = *v86;
            do
            {
              unint64_t v80 = v29 - 2;
              if (v29 < 2) {
                goto LABEL_109;
              }
              if (!v79) {
                goto LABEL_121;
              }
              unint64_t v81 = v78;
              uint64_t v82 = *(void *)&v78[16 * v80 + 32];
              uint64_t v83 = *(void *)&v78[16 * v29 + 24];
              sub_1C2325D40((char *)(v79 + 48 * v82), (char *)(v79 + 48 * *(void *)&v78[16 * v29 + 16]), v79 + 48 * v83, v91, a1);
              if (v2) {
                break;
              }
              if (v83 < v82) {
                goto LABEL_110;
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                unint64_t v81 = sub_1C23F321C((uint64_t)v81);
              }
              if (v80 >= *((void *)v81 + 2)) {
                goto LABEL_111;
              }
              uint64_t v84 = &v81[16 * v80 + 32];
              *(void *)uint64_t v84 = v82;
              *((void *)v84 + 1) = v83;
              unint64_t v85 = *((void *)v81 + 2);
              if (v29 > v85) {
                goto LABEL_112;
              }
              memmove(&v81[16 * v29 + 16], &v81[16 * v29 + 32], 16 * (v85 - v29));
              uint64_t v78 = v81;
              *((void *)v81 + 2) = v85 - 1;
              unint64_t v29 = v85 - 1;
            }
            while (v85 > 2);
          }
LABEL_93:
          swift_bridgeObjectRelease();
          *(void *)(v87 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v7 = v5 >> 1;
        uint64_t v8 = sub_1C254F780();
        *(void *)(v8 + 16) = v7;
        uint64_t v87 = v8;
        uint64_t v91 = (char *)(v8 + 32);
      }
      uint64_t v10 = 0;
      uint64_t v11 = *v1;
      uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v88 = v6;
      uint64_t v89 = v3;
      while (1)
      {
        char v12 = sub_1C2324588(&v93, v11, v3, v10, a1);
        if (v2) {
          goto LABEL_93;
        }
        uint64_t v13 = v93;
        if (v12)
        {
          if (v93 < v10) {
            goto LABEL_114;
          }
          if (v10 < v93)
          {
            uint64_t v14 = 48 * v93;
            uint64_t v15 = 48 * v10;
            uint64_t v16 = v93;
            uint64_t v17 = v10;
            do
            {
              if (v17 != --v16)
              {
                if (!v11) {
                  goto LABEL_120;
                }
                uint64_t v18 = (_OWORD *)(v11 + v15);
                uint64_t v19 = v11 + v14;
                long long v20 = *(_OWORD *)(v11 + v15);
                long long v21 = *(_OWORD *)(v11 + v15 + 16);
                uint64_t v22 = *(void *)(v11 + v15 + 32);
                uint64_t v23 = *(void *)(v11 + v15 + 40);
                long long v25 = *(_OWORD *)(v11 + v14 - 32);
                long long v24 = *(_OWORD *)(v11 + v14 - 16);
                *uint64_t v18 = *(_OWORD *)(v11 + v14 - 48);
                v18[1] = v25;
                v18[2] = v24;
                *(_OWORD *)(v19 - 48) = v20;
                *(_OWORD *)(v19 - 32) = v21;
                *(void *)(v19 - 16) = v22;
                *(void *)(v19 - 8) = v23;
              }
              ++v17;
              v14 -= 48;
              v15 += 48;
            }
            while (v17 < v16);
          }
        }
        if (v13 < v3)
        {
          if (__OFSUB__(v13, v10)) {
            goto LABEL_115;
          }
          if (v13 - v10 < v6)
          {
            if (__OFADD__(v10, v6)) {
              goto LABEL_117;
            }
            if (v10 + v6 >= v3) {
              uint64_t v26 = v3;
            }
            else {
              uint64_t v26 = v10 + v6;
            }
            if (v26 < v10)
            {
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
              break;
            }
            sub_1C2323E3C(v10, v26, v13, a1);
            uint64_t v13 = v26;
          }
        }
        if (v13 < v10) {
          goto LABEL_113;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1C23F277C(0, *((void *)v9 + 2) + 1, 1, v9);
        }
        unint64_t v28 = *((void *)v9 + 2);
        unint64_t v27 = *((void *)v9 + 3);
        unint64_t v29 = v28 + 1;
        uint64_t v90 = v13;
        if (v28 >= v27 >> 1) {
          uint64_t v9 = sub_1C23F277C((char *)(v27 > 1), v28 + 1, 1, v9);
        }
        *((void *)v9 + 2) = v29;
        uint64_t v30 = v9 + 32;
        uint64_t v31 = (uint64_t *)&v9[16 * v28 + 32];
        *uint64_t v31 = v10;
        v31[1] = v13;
        if (v28)
        {
          while (1)
          {
            unint64_t v32 = v29 - 1;
            if (v29 >= 4)
            {
              uint64_t v37 = &v30[16 * v29];
              uint64_t v38 = *((void *)v37 - 8);
              uint64_t v39 = *((void *)v37 - 7);
              BOOL v43 = __OFSUB__(v39, v38);
              uint64_t v40 = v39 - v38;
              if (v43) {
                goto LABEL_98;
              }
              uint64_t v42 = *((void *)v37 - 6);
              uint64_t v41 = *((void *)v37 - 5);
              BOOL v43 = __OFSUB__(v41, v42);
              uint64_t v35 = v41 - v42;
              char v36 = v43;
              if (v43) {
                goto LABEL_99;
              }
              unint64_t v44 = v29 - 2;
              uint64_t v45 = &v30[16 * v29 - 32];
              uint64_t v47 = *(void *)v45;
              uint64_t v46 = *((void *)v45 + 1);
              BOOL v43 = __OFSUB__(v46, v47);
              uint64_t v48 = v46 - v47;
              if (v43) {
                goto LABEL_101;
              }
              BOOL v43 = __OFADD__(v35, v48);
              uint64_t v49 = v35 + v48;
              if (v43) {
                goto LABEL_104;
              }
              if (v49 >= v40)
              {
                unint64_t v67 = &v30[16 * v32];
                uint64_t v69 = *(void *)v67;
                uint64_t v68 = *((void *)v67 + 1);
                BOOL v43 = __OFSUB__(v68, v69);
                uint64_t v70 = v68 - v69;
                if (v43) {
                  goto LABEL_108;
                }
                BOOL v60 = v35 < v70;
                goto LABEL_68;
              }
            }
            else
            {
              if (v29 != 3)
              {
                uint64_t v61 = *((void *)v9 + 4);
                uint64_t v62 = *((void *)v9 + 5);
                BOOL v43 = __OFSUB__(v62, v61);
                uint64_t v54 = v62 - v61;
                char v55 = v43;
                goto LABEL_62;
              }
              uint64_t v34 = *((void *)v9 + 4);
              uint64_t v33 = *((void *)v9 + 5);
              BOOL v43 = __OFSUB__(v33, v34);
              uint64_t v35 = v33 - v34;
              char v36 = v43;
            }
            if (v36) {
              goto LABEL_100;
            }
            unint64_t v44 = v29 - 2;
            uint64_t v50 = &v30[16 * v29 - 32];
            uint64_t v52 = *(void *)v50;
            uint64_t v51 = *((void *)v50 + 1);
            BOOL v53 = __OFSUB__(v51, v52);
            uint64_t v54 = v51 - v52;
            char v55 = v53;
            if (v53) {
              goto LABEL_103;
            }
            uint64_t v56 = &v30[16 * v32];
            uint64_t v58 = *(void *)v56;
            uint64_t v57 = *((void *)v56 + 1);
            BOOL v43 = __OFSUB__(v57, v58);
            uint64_t v59 = v57 - v58;
            if (v43) {
              goto LABEL_106;
            }
            if (__OFADD__(v54, v59)) {
              goto LABEL_107;
            }
            if (v54 + v59 >= v35)
            {
              BOOL v60 = v35 < v59;
LABEL_68:
              if (v60) {
                unint64_t v32 = v44;
              }
              goto LABEL_70;
            }
LABEL_62:
            if (v55) {
              goto LABEL_102;
            }
            uint64_t v63 = &v30[16 * v32];
            uint64_t v65 = *(void *)v63;
            uint64_t v64 = *((void *)v63 + 1);
            BOOL v43 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v43) {
              goto LABEL_105;
            }
            if (v66 < v54) {
              goto LABEL_78;
            }
LABEL_70:
            unint64_t v71 = v32 - 1;
            if (v32 - 1 >= v29)
            {
              __break(1u);
LABEL_95:
              __break(1u);
LABEL_96:
              __break(1u);
LABEL_97:
              __break(1u);
LABEL_98:
              __break(1u);
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              __break(1u);
LABEL_104:
              __break(1u);
LABEL_105:
              __break(1u);
LABEL_106:
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
              goto LABEL_118;
            }
            if (!v11) {
              goto LABEL_119;
            }
            uint64_t v72 = v9;
            char v73 = &v30[16 * v71];
            uint64_t v74 = *(void *)v73;
            uint64_t v75 = &v30[16 * v32];
            uint64_t v76 = *((void *)v75 + 1);
            sub_1C2325D40((char *)(v11 + 48 * *(void *)v73), (char *)(v11 + 48 * *(void *)v75), v11 + 48 * v76, v91, a1);
            if (v76 < v74) {
              goto LABEL_95;
            }
            if (v32 > *((void *)v72 + 2)) {
              goto LABEL_96;
            }
            *(void *)char v73 = v74;
            *(void *)&v30[16 * v71 + 8] = v76;
            unint64_t v77 = *((void *)v72 + 2);
            if (v32 >= v77) {
              goto LABEL_97;
            }
            uint64_t v9 = v72;
            unint64_t v29 = v77 - 1;
            memmove(&v30[16 * v32], v75 + 16, 16 * (v77 - 1 - v32));
            *((void *)v72 + 2) = v77 - 1;
            if (v77 <= 2) {
              goto LABEL_78;
            }
          }
        }
        unint64_t v29 = 1;
LABEL_78:
        uint64_t v3 = v89;
        uint64_t v10 = v90;
        uint64_t v6 = v88;
        if (v90 >= v89) {
          goto LABEL_82;
        }
      }
    }
    uint64_t result = sub_1C25505E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C23224B4(uint64_t (*a1)(long long *, long long *), uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(char **, void *, char **))
{
  uint64_t v11 = v7;
  uint64_t v177 = a2;
  uint64_t v12 = v6[1];
  uint64_t result = sub_1C2550800();
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_141;
    }
    if (v12) {
      return sub_1C2323FF8(0, v12, 1, (uint64_t (*)(void *, long long *))a1);
    }
  }
  else
  {
    if (v12 >= 0) {
      uint64_t v14 = v12;
    }
    else {
      uint64_t v14 = v12 + 1;
    }
    if (v12 > -2)
    {
      uint64_t v159 = v12;
      uint64_t v155 = result;
      uint64_t v149 = v6;
      if (v12 < 2)
      {
        uint64_t v16 = MEMORY[0x1E4FBC860];
        uint64_t v161 = (char *)(MEMORY[0x1E4FBC860] + 32);
        if (v12 != 1)
        {
          unint64_t v68 = *(void *)(MEMORY[0x1E4FBC860] + 16);
          uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
          goto LABEL_102;
        }
      }
      else
      {
        uint64_t v15 = v14 >> 1;
        sub_1C2326F94(0, a3, a4, a5);
        uint64_t v16 = sub_1C254F780();
        *(void *)(v16 + 16) = v15;
        uint64_t v161 = (char *)(v16 + 32);
      }
      uint64_t v17 = 0;
      uint64_t v18 = *v6;
      uint64_t v150 = *v6 + 80;
      uint64_t v148 = *v6 + 48;
      uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v20 = v159;
      uint64_t v163 = *v6;
      uint64_t v156 = v16;
      while (1)
      {
        uint64_t v21 = v17;
        uint64_t v22 = v17 + 1;
        if (v17 + 1 < v20)
        {
          uint64_t v23 = (long long *)(v18 + 56 * v22);
          uint64_t v24 = *((void *)v23 + 2);
          char v25 = *((unsigned char *)v23 + 24);
          uint64_t v26 = *((void *)v23 + 4);
          uint64_t v27 = *((void *)v23 + 5);
          uint64_t v28 = v21;
          uint64_t v29 = *((void *)v23 + 6);
          long long v171 = *v23;
          uint64_t v172 = v24;
          char v173 = v25;
          uint64_t v174 = v26;
          uint64_t v175 = v27;
          uint64_t v176 = v29;
          uint64_t v30 = (long long *)(v18 + 56 * v21);
          uint64_t v31 = *((void *)v30 + 2);
          char v32 = *((unsigned char *)v30 + 24);
          uint64_t v33 = *((void *)v30 + 4);
          uint64_t v34 = *((void *)v30 + 5);
          uint64_t v35 = *((void *)v30 + 6);
          long long v165 = *v30;
          uint64_t v166 = v31;
          char v167 = v32;
          uint64_t v168 = v33;
          uint64_t v169 = v34;
          uint64_t v170 = v35;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v36 = a1(&v171, &v165);
          if (v11)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_117;
          }
          int v37 = v36;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v22 = v28 + 2;
          uint64_t v21 = v28;
          if (v28 + 2 < v159)
          {
            uint64_t v151 = v19;
            uint64_t v153 = v28;
            uint64_t v38 = v150 + 56 * v28;
            while (1)
            {
              uint64_t v39 = v22;
              uint64_t v40 = *(void *)(v38 + 48);
              char v41 = *(unsigned char *)(v38 + 56);
              uint64_t v42 = *(void *)(v38 + 64);
              uint64_t v43 = *(void *)(v38 + 72);
              uint64_t v44 = *(void *)(v38 + 80);
              long long v171 = *(_OWORD *)(v38 + 32);
              uint64_t v172 = v40;
              char v173 = v41;
              uint64_t v174 = v42;
              uint64_t v175 = v43;
              uint64_t v176 = v44;
              uint64_t v45 = *(void *)(v38 - 8);
              char v46 = *(unsigned char *)v38;
              uint64_t v47 = *(void *)(v38 + 8);
              uint64_t v48 = *(void *)(v38 + 16);
              uint64_t v49 = *(void *)(v38 + 24);
              long long v165 = *(_OWORD *)(v38 - 24);
              uint64_t v166 = v45;
              char v167 = v46;
              uint64_t v168 = v47;
              uint64_t v169 = v48;
              uint64_t v170 = v49;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              int v50 = a1(&v171, &v165);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v37 ^ v50)) {
                break;
              }
              uint64_t v22 = v39 + 1;
              v38 += 56;
              if (v159 == v39 + 1)
              {
                uint64_t v22 = v159;
                uint64_t v19 = v151;
                goto LABEL_21;
              }
            }
            uint64_t v19 = v151;
            uint64_t v22 = v39;
LABEL_21:
            uint64_t v21 = v153;
          }
          uint64_t v18 = v163;
          if (v37)
          {
            if (v22 < v21) {
              goto LABEL_145;
            }
            if (v21 < v22)
            {
              uint64_t v51 = 56 * v22;
              uint64_t v52 = v22;
              uint64_t v53 = v21;
              uint64_t v54 = 56 * v21;
              do
              {
                if (v53 != --v52)
                {
                  if (!v163) {
                    goto LABEL_148;
                  }
                  uint64_t v55 = v163 + v54;
                  uint64_t v56 = *(void *)(v163 + v54 + 16);
                  uint64_t v57 = v163 + v51;
                  char v58 = *(unsigned char *)(v163 + v54 + 24);
                  uint64_t v59 = *(void *)(v163 + v54 + 48);
                  long long v60 = *(_OWORD *)(v163 + v54);
                  long long v61 = *(_OWORD *)(v163 + v54 + 32);
                  long long v62 = *(_OWORD *)(v163 + v51 - 40);
                  long long v63 = *(_OWORD *)(v163 + v51 - 24);
                  long long v64 = *(_OWORD *)(v163 + v51 - 56);
                  *(void *)(v55 + 48) = *(void *)(v163 + v51 - 8);
                  *(_OWORD *)(v55 + 16) = v62;
                  *(_OWORD *)(v55 + 32) = v63;
                  *(_OWORD *)uint64_t v55 = v64;
                  *(_OWORD *)(v57 - 56) = v60;
                  *(void *)(v57 - 40) = v56;
                  *(unsigned char *)(v57 - 32) = v58;
                  *(_OWORD *)(v57 - 24) = v61;
                  *(void *)(v57 - 8) = v59;
                }
                ++v53;
                v51 -= 56;
                v54 += 56;
              }
              while (v53 < v52);
            }
          }
        }
        if (v22 >= v159) {
          goto LABEL_40;
        }
        if (__OFSUB__(v22, v21)) {
          goto LABEL_142;
        }
        if (v22 - v21 >= v155)
        {
LABEL_40:
          if (v22 < v21) {
            goto LABEL_140;
          }
          goto LABEL_41;
        }
        if (__OFADD__(v21, v155)) {
          goto LABEL_143;
        }
        uint64_t v65 = v21 + v155 >= v159 ? v159 : v21 + v155;
        if (v65 < v21) {
          break;
        }
        if (v22 == v65) {
          goto LABEL_40;
        }
        uint64_t v152 = v19;
        uint64_t v154 = v21;
        uint64_t v160 = v11;
        uint64_t v117 = v148 + 56 * v22;
        uint64_t v146 = v65;
        do
        {
          uint64_t v118 = (uint64_t *)(v18 + 56 * v22);
          uint64_t v119 = *v118;
          uint64_t v120 = v118[1];
          uint64_t v121 = v118[2];
          char v122 = *((unsigned char *)v118 + 24);
          uint64_t v123 = v118[4];
          uint64_t v124 = v118[5];
          uint64_t v125 = v118[6];
          uint64_t v126 = v154;
          uint64_t v147 = v117;
          uint64_t v158 = v22;
          while (1)
          {
            *(void *)&long long v171 = v119;
            *((void *)&v171 + 1) = v120;
            uint64_t v172 = v121;
            char v173 = v122 & 1;
            uint64_t v174 = v123;
            uint64_t v175 = v124;
            uint64_t v176 = v125;
            uint64_t v127 = *(void *)(v117 - 88);
            char v128 = *(unsigned char *)(v117 - 80);
            uint64_t v129 = *(void *)(v117 - 72);
            uint64_t v130 = *(void *)(v117 - 64);
            uint64_t v131 = *(void *)(v117 - 56);
            uint64_t v132 = v117 - 104;
            long long v165 = *(_OWORD *)(v117 - 104);
            uint64_t v166 = v127;
            char v167 = v128;
            uint64_t v168 = v129;
            uint64_t v169 = v130;
            uint64_t v170 = v131;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v133 = a1(&v171, &v165);
            if (v160)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_118;
            }
            char v134 = v133;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v134 & 1) == 0) {
              break;
            }
            uint64_t v18 = v163;
            uint64_t v135 = v158;
            if (!v163) {
              goto LABEL_147;
            }
            uint64_t v125 = *(void *)v117;
            uint64_t v136 = *(void *)(v117 - 56);
            *(void *)(v117 - 56) = *(void *)v117;
            v117 -= 56;
            uint64_t v119 = *(void *)(v117 + 8);
            uint64_t v120 = *(void *)(v117 + 16);
            uint64_t v121 = *(void *)(v117 + 24);
            char v122 = *(unsigned char *)(v117 + 32);
            uint64_t v123 = *(void *)(v117 + 40);
            uint64_t v124 = *(void *)(v117 + 48);
            long long v137 = *(_OWORD *)(v132 + 16);
            *(_OWORD *)(v132 + 56) = *(_OWORD *)v132;
            *(_OWORD *)(v132 + 72) = v137;
            *(_OWORD *)(v132 + 88) = *(_OWORD *)(v132 + 32);
            *(void *)(v132 + 104) = v136;
            *(void *)(v117 - 48) = v119;
            *(void *)(v117 - 40) = v120;
            *(void *)(v117 - 32) = v121;
            *(unsigned char *)(v117 - 24) = v122;
            ++v126;
            *(void *)(v117 - 16) = v123;
            *(void *)(v117 - 8) = v124;
            if (v158 == v126) {
              goto LABEL_98;
            }
          }
          uint64_t v18 = v163;
          uint64_t v135 = v158;
LABEL_98:
          uint64_t v22 = v135 + 1;
          uint64_t v117 = v147 + 56;
        }
        while (v22 != v146);
        uint64_t v22 = v146;
        uint64_t v11 = 0;
        uint64_t v19 = v152;
        uint64_t v21 = v154;
        if (v146 < v154) {
          goto LABEL_140;
        }
LABEL_41:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_1C23F277C(0, *((void *)v19 + 2) + 1, 1, v19);
        }
        unint64_t v67 = *((void *)v19 + 2);
        unint64_t v66 = *((void *)v19 + 3);
        unint64_t v68 = v67 + 1;
        uint64_t v18 = v163;
        if (v67 >= v66 >> 1)
        {
          uint64_t v18 = v163;
          uint64_t v19 = sub_1C23F277C((char *)(v66 > 1), v67 + 1, 1, v19);
        }
        *((void *)v19 + 2) = v68;
        uint64_t v69 = v19 + 32;
        uint64_t v70 = &v19[16 * v67 + 32];
        *(void *)uint64_t v70 = v21;
        *((void *)v70 + 1) = v22;
        uint64_t v157 = v22;
        if (v67)
        {
LABEL_46:
          unint64_t v71 = v68 - 1;
          if (v68 >= 4)
          {
            uint64_t v76 = &v69[16 * v68];
            uint64_t v77 = *((void *)v76 - 8);
            uint64_t v78 = *((void *)v76 - 7);
            BOOL v82 = __OFSUB__(v78, v77);
            uint64_t v79 = v78 - v77;
            if (v82) {
              goto LABEL_125;
            }
            uint64_t v81 = *((void *)v76 - 6);
            uint64_t v80 = *((void *)v76 - 5);
            BOOL v82 = __OFSUB__(v80, v81);
            uint64_t v74 = v80 - v81;
            char v75 = v82;
            if (v82) {
              goto LABEL_126;
            }
            unint64_t v83 = v68 - 2;
            uint64_t v84 = &v69[16 * v68 - 32];
            uint64_t v86 = *(void *)v84;
            uint64_t v85 = *((void *)v84 + 1);
            BOOL v82 = __OFSUB__(v85, v86);
            uint64_t v87 = v85 - v86;
            if (v82) {
              goto LABEL_128;
            }
            BOOL v82 = __OFADD__(v74, v87);
            uint64_t v88 = v74 + v87;
            if (v82) {
              goto LABEL_131;
            }
            if (v88 >= v79)
            {
              uint64_t v106 = &v69[16 * v71];
              uint64_t v108 = *(void *)v106;
              uint64_t v107 = *((void *)v106 + 1);
              BOOL v82 = __OFSUB__(v107, v108);
              uint64_t v109 = v107 - v108;
              if (v82) {
                goto LABEL_135;
              }
              BOOL v99 = v74 < v109;
            }
            else
            {
LABEL_59:
              if (v75) {
                goto LABEL_127;
              }
              unint64_t v83 = v68 - 2;
              uint64_t v89 = &v69[16 * v68 - 32];
              uint64_t v91 = *(void *)v89;
              uint64_t v90 = *((void *)v89 + 1);
              BOOL v92 = __OFSUB__(v90, v91);
              uint64_t v93 = v90 - v91;
              char v94 = v92;
              if (v92) {
                goto LABEL_130;
              }
              uint64_t v95 = &v69[16 * v71];
              uint64_t v97 = *(void *)v95;
              uint64_t v96 = *((void *)v95 + 1);
              BOOL v82 = __OFSUB__(v96, v97);
              uint64_t v98 = v96 - v97;
              if (v82) {
                goto LABEL_133;
              }
              if (__OFADD__(v93, v98)) {
                goto LABEL_134;
              }
              if (v93 + v98 < v74) {
                goto LABEL_71;
              }
              BOOL v99 = v74 < v98;
            }
            if (v99) {
              unint64_t v71 = v83;
            }
          }
          else
          {
            if (v68 == 3)
            {
              uint64_t v73 = *((void *)v19 + 4);
              uint64_t v72 = *((void *)v19 + 5);
              BOOL v82 = __OFSUB__(v72, v73);
              uint64_t v74 = v72 - v73;
              char v75 = v82;
              goto LABEL_59;
            }
            uint64_t v100 = *((void *)v19 + 4);
            uint64_t v101 = *((void *)v19 + 5);
            BOOL v82 = __OFSUB__(v101, v100);
            uint64_t v93 = v101 - v100;
            char v94 = v82;
LABEL_71:
            if (v94) {
              goto LABEL_129;
            }
            uint64_t v102 = &v69[16 * v71];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v82 = __OFSUB__(v103, v104);
            uint64_t v105 = v103 - v104;
            if (v82) {
              goto LABEL_132;
            }
            if (v105 < v93) {
              goto LABEL_88;
            }
          }
          unint64_t v110 = v71 - 1;
          if (v71 - 1 >= v68)
          {
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
            break;
          }
          if (!v18) {
            goto LABEL_146;
          }
          uint64_t v111 = v19;
          uint64_t v112 = &v69[16 * v110];
          uint64_t v113 = *(void *)v112;
          uint64_t v114 = &v69[16 * v71];
          uint64_t v115 = *((void *)v114 + 1);
          sub_1C232625C((char *)(v18 + 56 * *(void *)v112), (char *)(v18 + 56 * *(void *)v114), v18 + 56 * v115, v161, a1, v177, a6);
          if (v11) {
            goto LABEL_117;
          }
          if (v115 < v113) {
            goto LABEL_122;
          }
          if (v71 > *((void *)v111 + 2)) {
            goto LABEL_123;
          }
          *(void *)uint64_t v112 = v113;
          *(void *)&v69[16 * v110 + 8] = v115;
          unint64_t v116 = *((void *)v111 + 2);
          if (v71 >= v116) {
            goto LABEL_124;
          }
          uint64_t v19 = v111;
          unint64_t v68 = v116 - 1;
          memmove(&v69[16 * v71], v114 + 16, 16 * (v116 - 1 - v71));
          *((void *)v111 + 2) = v116 - 1;
          uint64_t v18 = v163;
          if (v116 <= 2) {
            goto LABEL_88;
          }
          goto LABEL_46;
        }
        unint64_t v68 = 1;
LABEL_88:
        uint64_t v17 = v157;
        uint64_t v20 = v159;
        uint64_t v16 = v156;
        if (v157 >= v159)
        {
LABEL_102:
          uint64_t v156 = v16;
          if (v68 >= 2)
          {
            uint64_t v138 = *v149;
            do
            {
              unint64_t v139 = v68 - 2;
              if (v68 < 2) {
                goto LABEL_136;
              }
              if (!v138) {
                goto LABEL_149;
              }
              char v140 = v19;
              long long v141 = v19 + 32;
              uint64_t v142 = *(void *)&v19[16 * v139 + 32];
              uint64_t v143 = *(void *)&v19[16 * v68 + 24];
              sub_1C232625C((char *)(v138 + 56 * v142), (char *)(v138 + 56 * *(void *)&v141[16 * v68 - 16]), v138 + 56 * v143, v161, a1, v177, a6);
              if (v11) {
                break;
              }
              if (v143 < v142) {
                goto LABEL_137;
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                char v140 = sub_1C23F321C((uint64_t)v140);
              }
              if (v139 >= *((void *)v140 + 2)) {
                goto LABEL_138;
              }
              uint64_t v144 = &v140[16 * v139 + 32];
              *(void *)uint64_t v144 = v142;
              *((void *)v144 + 1) = v143;
              unint64_t v145 = *((void *)v140 + 2);
              if (v68 > v145) {
                goto LABEL_139;
              }
              uint64_t v19 = v140;
              memmove(&v140[16 * v68 + 16], &v140[16 * v68 + 32], 16 * (v145 - v68));
              *((void *)v140 + 2) = v145 - 1;
              unint64_t v68 = v145 - 1;
            }
            while (v145 > 2);
          }
LABEL_117:
          swift_bridgeObjectRelease();
LABEL_118:
          *(void *)(v156 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
      }
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
    }
    uint64_t result = sub_1C25505E0();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2322EB8(uint64_t (*a1)(uint64_t *, uint64_t *), uint64_t a2)
{
  uint64_t v123 = a2;
  uint64_t v4 = v2[1];
  uint64_t result = sub_1C2550800();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_139;
    }
    if (v4) {
      return sub_1C23241C8(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 <= -2) {
    goto LABEL_148;
  }
  uint64_t v110 = result;
  uint64_t v106 = v2;
  if (v4 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    unint64_t v116 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v4 != 1)
    {
      unint64_t v35 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v111 = v9;
      if (v35 >= 2)
      {
        uint64_t v94 = *v106;
        do
        {
          unint64_t v95 = v35 - 2;
          if (v35 < 2) {
            goto LABEL_134;
          }
          if (!v94) {
            goto LABEL_147;
          }
          uint64_t v96 = v12;
          uint64_t v97 = v12 + 32;
          uint64_t v98 = *(void *)&v12[16 * v95 + 32];
          uint64_t v99 = *(void *)&v12[16 * v35 + 24];
          sub_1C2326764((char *)(v94 + 16 * v98), (char *)(v94 + 16 * *(void *)&v97[16 * v35 - 16]), v94 + 16 * v99, v116, a1);
          if (v3) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v96 = sub_1C23F321C((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_136;
          }
          uint64_t v100 = v96;
          uint64_t v101 = v96 + 32;
          uint64_t v102 = &v96[16 * v95 + 32];
          *(void *)uint64_t v102 = v98;
          *((void *)v102 + 1) = v99;
          unint64_t v103 = *((void *)v96 + 2);
          if (v35 > v103) {
            goto LABEL_137;
          }
          uint64_t v12 = v100;
          memmove(&v101[16 * v35 - 16], &v101[16 * v35], 16 * (v103 - v35));
          *((void *)v12 + 2) = v103 - 1;
          unint64_t v35 = v103 - 1;
        }
        while (v103 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v111 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v111 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_1C254F780();
    *(void *)(v8 + 16) = v7;
    uint64_t v111 = v8;
    unint64_t v116 = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *v2;
  uint64_t v107 = *v2 + 24;
  uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v115 = v4;
  uint64_t v117 = *v2;
  while (1)
  {
    uint64_t v13 = v10;
    uint64_t v14 = v10 + 1;
    if (v10 + 1 < v4)
    {
      uint64_t v15 = (uint64_t *)(v11 + 16 * v14);
      uint64_t v16 = v15[1];
      uint64_t v121 = *v15;
      uint64_t v122 = v16;
      uint64_t v17 = (uint64_t *)(v11 + 16 * v10);
      uint64_t v18 = v17[1];
      uint64_t v119 = *v17;
      uint64_t v120 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int v112 = a1(&v121, &v119);
      if (v3)
      {
LABEL_115:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_116;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v13 + 2;
      if (v13 + 2 < v4)
      {
        uint64_t v108 = v13;
        uint64_t v19 = (void *)(v107 + 16 * v13);
        uint64_t v20 = v19;
        while (1)
        {
          uint64_t v21 = v14;
          uint64_t v22 = v20[2];
          v20 += 2;
          uint64_t v23 = *v19;
          uint64_t v121 = v19[1];
          uint64_t v122 = v22;
          uint64_t v119 = *(v19 - 1);
          uint64_t v120 = v23;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v24 = a1(&v121, &v119);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v112 ^ v24)) {
            break;
          }
          ++v14;
          uint64_t v19 = v20;
          uint64_t v4 = v115;
          if (v115 == v21 + 1)
          {
            uint64_t v14 = v115;
            goto LABEL_22;
          }
        }
        uint64_t v4 = v115;
LABEL_22:
        uint64_t v13 = v108;
      }
      uint64_t v11 = v117;
      if (v112)
      {
        if (v14 < v13) {
          goto LABEL_143;
        }
        if (v13 < v14)
        {
          uint64_t v25 = 16 * v14;
          uint64_t v26 = 16 * v13;
          uint64_t v27 = v14;
          uint64_t v28 = v13;
          do
          {
            if (v28 != --v27)
            {
              if (!v117) {
                goto LABEL_146;
              }
              uint64_t v29 = v117 + v25;
              uint64_t v30 = *(void *)(v117 + v26);
              uint64_t v31 = *(void *)(v117 + v26 + 8);
              *(_OWORD *)(v117 + v26) = *(_OWORD *)(v117 + v25 - 16);
              *(void *)(v29 - 16) = v30;
              *(void *)(v29 - 8) = v31;
            }
            ++v28;
            v25 -= 16;
            v26 += 16;
          }
          while (v28 < v27);
        }
      }
    }
    if (v14 >= v4) {
      goto LABEL_40;
    }
    if (__OFSUB__(v14, v13)) {
      goto LABEL_140;
    }
    if (v14 - v13 >= v110) {
      goto LABEL_40;
    }
    uint64_t v32 = v13 + v110;
    if (__OFADD__(v13, v110)) {
      goto LABEL_141;
    }
    if (v32 >= v4) {
      uint64_t v32 = v4;
    }
    if (v32 < v13) {
      break;
    }
    if (v14 != v32)
    {
      uint64_t v104 = v12;
      uint64_t v105 = v32;
      uint64_t v84 = (void *)(v11 + 16 * v14);
      uint64_t v109 = v13;
      do
      {
        uint64_t v85 = (uint64_t *)(v11 + 16 * v14);
        uint64_t v86 = *v85;
        uint64_t v87 = v85[1];
        uint64_t v88 = v13;
        uint64_t v114 = v84;
        while (1)
        {
          uint64_t v89 = v14;
          uint64_t v121 = v86;
          uint64_t v122 = v87;
          uint64_t v90 = *(v84 - 1);
          uint64_t v119 = *(v84 - 2);
          uint64_t v120 = v90;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v91 = a1(&v121, &v119);
          if (v3) {
            goto LABEL_115;
          }
          char v92 = v91;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v92 & 1) == 0) {
            break;
          }
          uint64_t v11 = v117;
          if (!v117) {
            goto LABEL_145;
          }
          uint64_t v86 = *v84;
          uint64_t v87 = v84[1];
          *(_OWORD *)uint64_t v84 = *((_OWORD *)v84 - 1);
          *(v84 - 1) = v87;
          *(v84 - 2) = v86;
          v84 -= 2;
          ++v88;
          uint64_t v14 = v89;
          if (v89 == v88) {
            goto LABEL_98;
          }
        }
        uint64_t v11 = v117;
        uint64_t v14 = v89;
LABEL_98:
        ++v14;
        uint64_t v84 = v114 + 2;
        uint64_t v13 = v109;
      }
      while (v14 != v105);
      uint64_t v14 = v105;
      uint64_t v12 = v104;
      if (v105 < v109) {
        goto LABEL_138;
      }
      goto LABEL_41;
    }
LABEL_40:
    if (v14 < v13) {
      goto LABEL_138;
    }
LABEL_41:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1C23F277C(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v35 = v34 + 1;
    uint64_t v11 = v117;
    if (v34 >= v33 >> 1)
    {
      uint64_t v93 = sub_1C23F277C((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v117;
      uint64_t v12 = v93;
    }
    *((void *)v12 + 2) = v35;
    int v36 = v12 + 32;
    int v37 = &v12[16 * v34 + 32];
    *(void *)int v37 = v13;
    *((void *)v37 + 1) = v14;
    uint64_t v113 = v14;
    if (v34)
    {
      while (1)
      {
        unint64_t v38 = v35 - 1;
        if (v35 >= 4)
        {
          uint64_t v43 = &v36[16 * v35];
          uint64_t v44 = *((void *)v43 - 8);
          uint64_t v45 = *((void *)v43 - 7);
          BOOL v49 = __OFSUB__(v45, v44);
          uint64_t v46 = v45 - v44;
          if (v49) {
            goto LABEL_123;
          }
          uint64_t v48 = *((void *)v43 - 6);
          uint64_t v47 = *((void *)v43 - 5);
          BOOL v49 = __OFSUB__(v47, v48);
          uint64_t v41 = v47 - v48;
          char v42 = v49;
          if (v49) {
            goto LABEL_124;
          }
          unint64_t v50 = v35 - 2;
          uint64_t v51 = &v36[16 * v35 - 32];
          uint64_t v53 = *(void *)v51;
          uint64_t v52 = *((void *)v51 + 1);
          BOOL v49 = __OFSUB__(v52, v53);
          uint64_t v54 = v52 - v53;
          if (v49) {
            goto LABEL_126;
          }
          BOOL v49 = __OFADD__(v41, v54);
          uint64_t v55 = v41 + v54;
          if (v49) {
            goto LABEL_129;
          }
          if (v55 >= v46)
          {
            uint64_t v73 = &v36[16 * v38];
            uint64_t v75 = *(void *)v73;
            uint64_t v74 = *((void *)v73 + 1);
            BOOL v49 = __OFSUB__(v74, v75);
            uint64_t v76 = v74 - v75;
            if (v49) {
              goto LABEL_133;
            }
            BOOL v66 = v41 < v76;
            goto LABEL_77;
          }
        }
        else
        {
          if (v35 != 3)
          {
            uint64_t v67 = *((void *)v12 + 4);
            uint64_t v68 = *((void *)v12 + 5);
            BOOL v49 = __OFSUB__(v68, v67);
            uint64_t v60 = v68 - v67;
            char v61 = v49;
            goto LABEL_71;
          }
          uint64_t v40 = *((void *)v12 + 4);
          uint64_t v39 = *((void *)v12 + 5);
          BOOL v49 = __OFSUB__(v39, v40);
          uint64_t v41 = v39 - v40;
          char v42 = v49;
        }
        if (v42) {
          goto LABEL_125;
        }
        unint64_t v50 = v35 - 2;
        uint64_t v56 = &v36[16 * v35 - 32];
        uint64_t v58 = *(void *)v56;
        uint64_t v57 = *((void *)v56 + 1);
        BOOL v59 = __OFSUB__(v57, v58);
        uint64_t v60 = v57 - v58;
        char v61 = v59;
        if (v59) {
          goto LABEL_128;
        }
        long long v62 = &v36[16 * v38];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v49 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v49) {
          goto LABEL_131;
        }
        if (__OFADD__(v60, v65)) {
          goto LABEL_132;
        }
        if (v60 + v65 >= v41)
        {
          BOOL v66 = v41 < v65;
LABEL_77:
          if (v66) {
            unint64_t v38 = v50;
          }
          goto LABEL_79;
        }
LABEL_71:
        if (v61) {
          goto LABEL_127;
        }
        uint64_t v69 = &v36[16 * v38];
        uint64_t v71 = *(void *)v69;
        uint64_t v70 = *((void *)v69 + 1);
        BOOL v49 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v49) {
          goto LABEL_130;
        }
        if (v72 < v60) {
          goto LABEL_88;
        }
LABEL_79:
        unint64_t v77 = v38 - 1;
        if (v38 - 1 >= v35)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v11) {
          goto LABEL_144;
        }
        uint64_t v78 = v12;
        uint64_t v79 = &v36[16 * v77];
        uint64_t v80 = *(void *)v79;
        uint64_t v81 = &v36[16 * v38];
        uint64_t v82 = *((void *)v81 + 1);
        sub_1C2326764((char *)(v11 + 16 * *(void *)v79), (char *)(v11 + 16 * *(void *)v81), v11 + 16 * v82, v116, a1);
        if (v3) {
          goto LABEL_116;
        }
        if (v82 < v80) {
          goto LABEL_120;
        }
        if (v38 > *((void *)v78 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v79 = v80;
        *(void *)&v36[16 * v77 + 8] = v82;
        unint64_t v83 = *((void *)v78 + 2);
        if (v38 >= v83) {
          goto LABEL_122;
        }
        uint64_t v12 = v78;
        unint64_t v35 = v83 - 1;
        memmove(&v36[16 * v38], v81 + 16, 16 * (v83 - 1 - v38));
        *((void *)v78 + 2) = v83 - 1;
        uint64_t v11 = v117;
        if (v83 <= 2) {
          goto LABEL_88;
        }
      }
    }
    unint64_t v35 = 1;
LABEL_88:
    uint64_t v10 = v113;
    uint64_t v4 = v115;
    if (v113 >= v115)
    {
      uint64_t v9 = v111;
      goto LABEL_103;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  uint64_t result = sub_1C25505E0();
  __break(1u);
  return result;
}

uint64_t sub_1C23236B4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, void *))
{
  if (a3 != a2)
  {
    uint64_t v6 = result;
    uint64_t v30 = *v4;
    uint64_t v7 = *v4 + 48 * a3 - 48;
    uint64_t v27 = result;
LABEL_4:
    uint64_t v29 = v7;
    uint64_t v31 = a3;
    while (1)
    {
      uint64_t v8 = (_OWORD *)(v7 + 48);
      uint64_t v10 = *(void *)(v7 + 56);
      uint64_t v9 = *(void *)(v7 + 64);
      uint64_t v12 = *(void *)(v7 + 72);
      uint64_t v11 = *(void *)(v7 + 80);
      char v13 = *(unsigned char *)(v7 + 88);
      v35[0] = *(void *)(v7 + 48);
      v35[1] = v10;
      uint64_t v37 = v10;
      v35[2] = v9;
      v35[3] = v12;
      v35[4] = v11;
      char v36 = v13;
      uint64_t v14 = *(void *)(v7 + 8);
      uint64_t v15 = *(void *)(v7 + 16);
      uint64_t v16 = *(void *)(v7 + 24);
      uint64_t v17 = *(void *)(v7 + 32);
      char v18 = *(unsigned char *)(v7 + 40);
      v33[0] = *(void *)v7;
      v33[1] = v14;
      v33[2] = v15;
      v33[3] = v16;
      v33[4] = v17;
      char v34 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v19 = a4(v35, v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        break;
      }
      if ((v19 & 1) == 0)
      {
        uint64_t v26 = v31;
LABEL_11:
        a3 = v26 + 1;
        uint64_t v7 = v29 + 48;
        uint64_t v6 = v27;
        if (a3 != a2) {
          goto LABEL_4;
        }
        return result;
      }
      if (!v30)
      {
        __break(1u);
        return result;
      }
      long long v21 = *(_OWORD *)(v7 + 48);
      long long v20 = *(_OWORD *)(v7 + 64);
      long long v22 = *(_OWORD *)(v7 + 16);
      long long v23 = *(_OWORD *)(v7 + 32);
      *uint64_t v8 = *(_OWORD *)v7;
      *(_OWORD *)(v7 + 64) = v22;
      uint64_t v24 = *(void *)(v7 + 80);
      char v25 = *(unsigned char *)(v7 + 88);
      *(_OWORD *)uint64_t v7 = v21;
      *(_OWORD *)(v7 + 16) = v20;
      *(void *)(v7 + 32) = v24;
      *(unsigned char *)(v7 + 40) = v25;
      v7 -= 48;
      ++v6;
      v8[2] = v23;
      uint64_t v26 = v31;
      if (v31 == v6) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_1C2323870(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, void *), uint64_t a5)
{
  v26[4] = a5;
  if (a3 != a2)
  {
    uint64_t v7 = result;
    uint64_t v8 = *v5;
    uint64_t v9 = (void *)(*v5 + 24 * a3);
    uint64_t v19 = result;
    uint64_t v22 = *v5;
LABEL_4:
    uint64_t v10 = (uint64_t *)(v8 + 24 * a3);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    uint64_t v13 = v10[2];
    long long v21 = v9;
    uint64_t v23 = a3;
    while (1)
    {
      v26[0] = v11;
      v26[1] = v12;
      uint64_t v14 = *(v9 - 3);
      uint64_t v15 = *(v9 - 2);
      v26[2] = v13;
      uint64_t v16 = *(v9 - 1);
      v25[0] = v14;
      v25[1] = v15;
      v25[2] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v17 = a4(v26, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v6) {
        break;
      }
      if ((v17 & 1) == 0)
      {
        uint64_t v8 = v22;
        uint64_t v18 = v23;
LABEL_11:
        a3 = v18 + 1;
        uint64_t v9 = v21 + 3;
        uint64_t v7 = v19;
        if (a3 != a2) {
          goto LABEL_4;
        }
        return result;
      }
      uint64_t v8 = v22;
      if (!v22)
      {
        __break(1u);
        return result;
      }
      uint64_t v11 = *v9;
      uint64_t v12 = v9[1];
      uint64_t v13 = v9[2];
      *(_OWORD *)uint64_t v9 = *(_OWORD *)(v9 - 3);
      v9[2] = *(v9 - 1);
      *(v9 - 2) = v12;
      *(v9 - 1) = v13;
      *(v9 - 3) = v11;
      v9 -= 3;
      ++v7;
      uint64_t v18 = v23;
      if (v23 == v7) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_1C23239E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, void *))
{
  if (a3 != a2)
  {
    uint64_t v5 = *v4;
    uint64_t v6 = (void *)(*v4 + 80 * a3 + 72);
    uint64_t v33 = result;
    uint64_t v36 = *v4;
LABEL_4:
    uint64_t v7 = (uint64_t *)(v5 + 80 * a3);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v10 = v7[2];
    uint64_t v11 = v7[3];
    uint64_t v12 = v7[4];
    uint64_t v13 = v7[5];
    uint64_t v14 = v7[6];
    uint64_t v15 = v7[7];
    uint64_t v16 = v7[8];
    uint64_t v17 = v7[9];
    unint64_t v35 = v6;
    uint64_t v37 = a3;
    while (1)
    {
      uint64_t v39 = result;
      uint64_t v18 = *(v6 - 19);
      uint64_t v19 = *(v6 - 18);
      long long v20 = (long long *)(v6 - 19);
      v43[0] = v8;
      v43[1] = v9;
      v43[2] = v10;
      v43[3] = v11;
      v43[4] = v12;
      v43[5] = v13;
      v43[6] = v14;
      v43[7] = v15;
      v43[8] = v16;
      v43[9] = v17;
      uint64_t v21 = *(v6 - 17);
      uint64_t v22 = *(v6 - 16);
      uint64_t v23 = *(v6 - 15);
      uint64_t v24 = *(v6 - 13);
      uint64_t v40 = *(v6 - 12);
      uint64_t v41 = *(v6 - 14);
      uint64_t v25 = *(v6 - 11);
      uint64_t v26 = *(v6 - 10);
      v42[0] = v18;
      v42[1] = v19;
      v42[2] = v21;
      v42[3] = v22;
      v42[4] = v23;
      v42[5] = v41;
      v42[6] = v24;
      v42[7] = v40;
      v42[8] = v25;
      v42[9] = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v27 = v44;
      char v28 = a4(v43, v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v44 = v27;
      if (v27) {
        break;
      }
      if ((v28 & 1) == 0)
      {
        uint64_t v5 = v36;
        uint64_t v32 = v37;
LABEL_11:
        a3 = v32 + 1;
        uint64_t v6 = v35 + 10;
        uint64_t result = v33;
        if (a3 != a2) {
          goto LABEL_4;
        }
        return result;
      }
      uint64_t v5 = v36;
      if (!v36)
      {
        __break(1u);
        return result;
      }
      uint64_t v8 = *(v6 - 9);
      uint64_t v9 = *(v6 - 8);
      uint64_t v10 = *(v6 - 7);
      uint64_t v11 = *(v6 - 6);
      uint64_t v12 = *(v6 - 5);
      uint64_t v13 = *(v6 - 4);
      uint64_t v14 = *(v6 - 3);
      uint64_t v15 = *(v6 - 2);
      uint64_t v16 = *(v6 - 1);
      uint64_t v17 = *v6;
      long long v29 = *(_OWORD *)(v6 - 13);
      *(_OWORD *)(v6 - 5) = *(_OWORD *)(v6 - 15);
      *(_OWORD *)(v6 - 3) = v29;
      *(_OWORD *)(v6 - 1) = *(_OWORD *)(v6 - 11);
      long long v31 = *v20;
      long long v30 = *(_OWORD *)(v6 - 17);
      *(v6 - 10) = v17;
      v6 -= 10;
      v20[5] = v31;
      v20[6] = v30;
      *(v6 - 9) = v8;
      *(v6 - 8) = v9;
      *(v6 - 7) = v10;
      *(v6 - 6) = v11;
      *(v6 - 5) = v12;
      *(v6 - 4) = v13;
      *(v6 - 3) = v14;
      *(v6 - 2) = v15;
      uint64_t result = v39 + 1;
      *(v6 - 1) = v16;
      uint64_t v32 = v37;
      if (v37 == v39 + 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_1C2323C34(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, void *))
{
  if (a3 != a2)
  {
    uint64_t v38 = *v4;
    uint64_t v6 = *v4 + 72 * a3 - 72;
    uint64_t v35 = result;
LABEL_4:
    uint64_t v37 = v6;
    uint64_t v39 = a3;
    while (1)
    {
      uint64_t v41 = result;
      uint64_t v7 = (_OWORD *)(v6 + 72);
      uint64_t v9 = *(void *)(v6 + 80);
      uint64_t v8 = *(void *)(v6 + 88);
      uint64_t v11 = *(void *)(v6 + 96);
      uint64_t v10 = *(void *)(v6 + 104);
      uint64_t v13 = *(void *)(v6 + 112);
      uint64_t v12 = *(void *)(v6 + 120);
      uint64_t v14 = *(void *)(v6 + 128);
      char v15 = *(unsigned char *)(v6 + 136);
      v44[0] = *(void *)(v6 + 72);
      v44[1] = v9;
      uint64_t v46 = v9;
      v44[2] = v8;
      v44[3] = v11;
      v44[4] = v10;
      uint64_t v44[5] = v13;
      v44[6] = v12;
      v44[7] = v14;
      char v45 = v15;
      uint64_t v16 = *(void *)(v6 + 8);
      uint64_t v17 = *(void *)(v6 + 16);
      uint64_t v18 = *(void *)(v6 + 24);
      uint64_t v19 = *(void *)(v6 + 32);
      uint64_t v20 = *(void *)(v6 + 40);
      uint64_t v21 = *(void *)(v6 + 48);
      uint64_t v22 = *(void *)(v6 + 56);
      char v23 = *(unsigned char *)(v6 + 64);
      v42[0] = *(void *)v6;
      v42[1] = v16;
      v42[2] = v17;
      v42[3] = v18;
      v42[4] = v19;
      v42[5] = v20;
      v42[6] = v21;
      v42[7] = v22;
      char v43 = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v24 = a4(v44, v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        break;
      }
      if ((v24 & 1) == 0)
      {
        uint64_t v34 = v39;
LABEL_11:
        a3 = v34 + 1;
        uint64_t v6 = v37 + 72;
        uint64_t result = v35;
        if (a3 != a2) {
          goto LABEL_4;
        }
        return result;
      }
      if (!v38)
      {
        __break(1u);
        return result;
      }
      long long v25 = *(_OWORD *)(v6 + 72);
      long long v26 = *(_OWORD *)(v6 + 88);
      long long v27 = *(_OWORD *)(v6 + 104);
      uint64_t v28 = *(void *)(v6 + 120);
      uint64_t v29 = *(void *)(v6 + 128);
      char v30 = *(unsigned char *)(v6 + 136);
      long long v31 = *(_OWORD *)(v6 + 48);
      *(_OWORD *)(v6 + 104) = *(_OWORD *)(v6 + 32);
      *(_OWORD *)(v6 + 120) = v31;
      *(void *)(v6 + 136) = *(void *)(v6 + 64);
      long long v33 = *(_OWORD *)v6;
      long long v32 = *(_OWORD *)(v6 + 16);
      *(_OWORD *)uint64_t v6 = v25;
      *(_OWORD *)(v6 + 16) = v26;
      *(_OWORD *)(v6 + 32) = v27;
      *(void *)(v6 + 48) = v28;
      *(void *)(v6 + 56) = v29;
      *(unsigned char *)(v6 + 64) = v30;
      v6 -= 72;
      uint64_t result = v41 + 1;
      *uint64_t v7 = v33;
      v7[1] = v32;
      uint64_t v34 = v39;
      if (v39 == v41 + 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_1C2323E3C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, void *))
{
  if (a3 != a2)
  {
    uint64_t v6 = *v4;
    uint64_t v7 = (void *)(*v4 + 48 * a3 + 40);
    uint64_t v26 = result;
    uint64_t v29 = *v4;
LABEL_4:
    uint64_t v8 = (uint64_t *)(v6 + 48 * a3);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    uint64_t v11 = v8[2];
    uint64_t v12 = v8[3];
    uint64_t v13 = v8[4];
    uint64_t v14 = v8[5];
    uint64_t v28 = v7;
    uint64_t v30 = a3;
    while (1)
    {
      uint64_t v15 = *(v7 - 11);
      uint64_t v17 = *(v7 - 10);
      uint64_t v16 = v7 - 11;
      v34[0] = v9;
      v34[1] = v10;
      v34[2] = v11;
      v34[3] = v12;
      v34[4] = v13;
      v34[5] = v14;
      uint64_t v18 = *(v7 - 9);
      uint64_t v19 = *(v7 - 8);
      uint64_t v20 = *(v7 - 7);
      uint64_t v21 = *(v7 - 6);
      uint64_t v32 = result;
      v33[0] = v15;
      v33[1] = v17;
      v33[2] = v18;
      v34[8] = v17;
      v33[3] = v19;
      v33[4] = v20;
      void v33[5] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v22 = a4(v34, v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        break;
      }
      if ((v22 & 1) == 0)
      {
        uint64_t v6 = v29;
        uint64_t v25 = v30;
LABEL_11:
        a3 = v25 + 1;
        uint64_t v7 = v28 + 6;
        uint64_t result = v26;
        if (a3 != a2) {
          goto LABEL_4;
        }
        return result;
      }
      uint64_t v6 = v29;
      if (!v29)
      {
        __break(1u);
        return result;
      }
      uint64_t v14 = *v7;
      long long v24 = *(_OWORD *)(v7 - 9);
      long long v23 = *(_OWORD *)(v7 - 7);
      *(v7 - 6) = *v7;
      v7 -= 6;
      uint64_t v9 = v7[1];
      uint64_t v10 = v7[2];
      uint64_t v11 = v7[3];
      uint64_t v12 = v7[4];
      uint64_t v13 = v7[5];
      v16[3] = *v16;
      v16[4] = v24;
      v16[5] = v23;
      *(v7 - 5) = v9;
      *(v7 - 4) = v10;
      *(v7 - 3) = v11;
      *(v7 - 2) = v12;
      *(v7 - 1) = v13;
      uint64_t result = v32 + 1;
      uint64_t v25 = v30;
      if (v30 == v32 + 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_1C2323FF8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, long long *))
{
  if (a3 != a2)
  {
    uint64_t v6 = *v4;
    uint64_t v7 = *v4 + 56 * a3 + 48;
    uint64_t v26 = result;
    uint64_t v29 = *v4;
LABEL_4:
    uint64_t v8 = (uint64_t *)(v6 + 56 * a3);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    uint64_t v11 = v8[2];
    char v12 = *((unsigned char *)v8 + 24);
    uint64_t v13 = v8[4];
    uint64_t v14 = v8[5];
    uint64_t v15 = v8[6];
    uint64_t v28 = v7;
    uint64_t v30 = a3;
    while (1)
    {
      uint64_t v43 = result;
      v38[0] = v9;
      v38[1] = v10;
      v38[2] = v11;
      char v39 = v12 & 1;
      uint64_t v40 = v13;
      uint64_t v41 = v14;
      uint64_t v42 = v15;
      uint64_t v16 = *(void *)(v7 - 88);
      char v17 = *(unsigned char *)(v7 - 80);
      uint64_t v18 = *(void *)(v7 - 72);
      uint64_t v19 = *(void *)(v7 - 64);
      uint64_t v20 = *(void *)(v7 - 56);
      uint64_t v21 = v7 - 104;
      long long v32 = *(_OWORD *)(v7 - 104);
      uint64_t v33 = v16;
      char v34 = v17;
      uint64_t v35 = v18;
      uint64_t v36 = v19;
      uint64_t v37 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v22 = a4(v38, &v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        break;
      }
      if ((v22 & 1) == 0)
      {
        uint64_t v6 = v29;
        uint64_t v25 = v30;
LABEL_11:
        a3 = v25 + 1;
        uint64_t v7 = v28 + 56;
        uint64_t result = v26;
        if (a3 != a2) {
          goto LABEL_4;
        }
        return result;
      }
      uint64_t v6 = v29;
      if (!v29)
      {
        __break(1u);
        return result;
      }
      uint64_t v15 = *(void *)v7;
      uint64_t v23 = *(void *)(v7 - 56);
      *(void *)(v7 - 56) = *(void *)v7;
      v7 -= 56;
      uint64_t v9 = *(void *)(v7 + 8);
      uint64_t v10 = *(void *)(v7 + 16);
      uint64_t v11 = *(void *)(v7 + 24);
      char v12 = *(unsigned char *)(v7 + 32);
      uint64_t v13 = *(void *)(v7 + 40);
      uint64_t v14 = *(void *)(v7 + 48);
      long long v24 = *(_OWORD *)(v21 + 16);
      *(_OWORD *)(v21 + 56) = *(_OWORD *)v21;
      *(_OWORD *)(v21 + 72) = v24;
      *(_OWORD *)(v21 + 88) = *(_OWORD *)(v21 + 32);
      *(void *)(v21 + 104) = v23;
      *(void *)(v7 - 48) = v9;
      *(void *)(v7 - 40) = v10;
      *(void *)(v7 - 32) = v11;
      *(unsigned char *)(v7 - 24) = v12;
      uint64_t result = v43 + 1;
      *(void *)(v7 - 16) = v13;
      *(void *)(v7 - 8) = v14;
      uint64_t v25 = v30;
      if (v30 == result) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_1C23241C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, void *))
{
  uint64_t v21 = a4;
  if (a3 != a2)
  {
    uint64_t v6 = result;
    uint64_t v7 = *v4;
    uint64_t v8 = (void *)(*v4 + 16 * a3);
    uint64_t v15 = result;
LABEL_4:
    uint64_t v9 = (uint64_t *)(v7 + 16 * a3);
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    char v17 = v8;
    uint64_t v18 = a3;
    while (1)
    {
      v20[0] = v10;
      v20[1] = v11;
      uint64_t v12 = *(v8 - 1);
      v19[0] = *(v8 - 2);
      v19[1] = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v13 = v21(v20, v19);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        break;
      }
      if ((v13 & 1) == 0)
      {
        uint64_t v14 = v18;
LABEL_11:
        a3 = v14 + 1;
        uint64_t v8 = v17 + 2;
        uint64_t v6 = v15;
        if (a3 != a2) {
          goto LABEL_4;
        }
        return result;
      }
      if (!v7)
      {
        __break(1u);
        return result;
      }
      uint64_t v10 = *v8;
      uint64_t v11 = v8[1];
      *(_OWORD *)uint64_t v8 = *((_OWORD *)v8 - 1);
      *(v8 - 1) = v11;
      *(v8 - 2) = v10;
      v8 -= 2;
      ++v6;
      uint64_t v14 = v18;
      if (v18 == v6) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_1C23242E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v6 = a4 + 1;
  if (a4 + 1 >= a3)
  {
    char v22 = 0;
    *a1 = v6;
  }
  else
  {
    uint64_t v8 = (uint64_t *)(a2 + 48 * v6);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    uint64_t v11 = v8[2];
    uint64_t v12 = v8[3];
    uint64_t v13 = v8[4];
    LOBYTE(v8) = *((unsigned char *)v8 + 40);
    uint64_t v47 = v9;
    uint64_t v48 = v10;
    uint64_t v49 = v11;
    uint64_t v50 = v12;
    uint64_t v51 = v13;
    char v52 = (char)v8;
    uint64_t v14 = (uint64_t *)(a2 + 48 * a4);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = v14[2];
    uint64_t v18 = v14[3];
    uint64_t v19 = v14[4];
    LOBYTE(v14) = *((unsigned char *)v14 + 40);
    uint64_t v41 = v15;
    uint64_t v42 = v16;
    uint64_t v43 = v17;
    uint64_t v44 = v18;
    uint64_t v45 = v19;
    char v46 = (char)v14;
    uint64_t v53 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v21 = a5(&v47, &v41);
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      int v39 = v21;
      uint64_t v38 = a5;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = a4 + 2;
      if (a4 + 2 >= a3)
      {
LABEL_10:
        char v22 = v39;
      }
      else
      {
        uint64_t v24 = v53 + 48 * a4 + 72;
        while (1)
        {
          uint64_t v25 = *(void *)(v24 + 32);
          uint64_t v26 = *(void *)(v24 + 40);
          uint64_t v27 = *(void *)(v24 + 48);
          uint64_t v28 = *(void *)(v24 + 56);
          char v29 = *(unsigned char *)(v24 + 64);
          uint64_t v47 = *(void *)(v24 + 24);
          uint64_t v48 = v25;
          uint64_t v53 = v25;
          uint64_t v49 = v26;
          uint64_t v50 = v27;
          uint64_t v51 = v28;
          char v52 = v29;
          uint64_t v30 = *(void *)(v24 - 16);
          uint64_t v31 = *(void *)(v24 - 8);
          uint64_t v32 = *(void *)v24;
          uint64_t v33 = *(void *)(v24 + 8);
          char v34 = *(unsigned char *)(v24 + 16);
          uint64_t v41 = *(void *)(v24 - 24);
          uint64_t v42 = v30;
          uint64_t v43 = v31;
          uint64_t v44 = v32;
          uint64_t v45 = v33;
          char v46 = v34;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v35 = v38(&v47, &v41);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v22 = v39;
          if ((v39 ^ v35)) {
            break;
          }
          ++v23;
          v24 += 48;
          if (a3 == v23)
          {
            uint64_t v23 = a3;
            goto LABEL_10;
          }
        }
      }
      *a1 = v23;
    }
  }
  return v22 & 1;
}

uint64_t sub_1C2324588(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v6 = a4 + 1;
  if (a4 + 1 >= a3)
  {
    char v22 = 0;
    *a1 = v6;
  }
  else
  {
    uint64_t v8 = (uint64_t *)(a2 + 48 * v6);
    uint64_t v9 = v8[1];
    uint64_t v10 = v8[2];
    uint64_t v11 = v8[3];
    uint64_t v12 = v8[4];
    uint64_t v13 = v8[5];
    uint64_t v48 = *v8;
    uint64_t v49 = v9;
    uint64_t v50 = v10;
    uint64_t v51 = v11;
    uint64_t v52 = v12;
    uint64_t v53 = v13;
    uint64_t v14 = (uint64_t *)(a2 + 48 * a4);
    uint64_t v15 = v14[1];
    uint64_t v16 = v14[2];
    uint64_t v17 = v14[3];
    uint64_t v18 = v14[4];
    uint64_t v19 = v14[5];
    uint64_t v42 = *v14;
    uint64_t v43 = v15;
    uint64_t v44 = v16;
    uint64_t v45 = v17;
    uint64_t v46 = v18;
    uint64_t v47 = v19;
    uint64_t v54 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v21 = a5(&v48, &v42);
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      int v40 = v21;
      int v39 = a5;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = a4 + 2;
      if (a4 + 2 >= a3)
      {
LABEL_10:
        char v22 = v40;
      }
      else
      {
        uint64_t v24 = (void *)(v54 + 48 * a4 + 72);
        uint64_t v25 = v24;
        while (1)
        {
          uint64_t v26 = v24[5];
          uint64_t v54 = v24[4];
          uint64_t v27 = v25[6];
          v25 += 6;
          uint64_t v28 = v24[7];
          uint64_t v29 = v24[8];
          uint64_t v30 = v24[2];
          uint64_t v48 = v24[3];
          uint64_t v49 = v54;
          uint64_t v50 = v26;
          uint64_t v51 = v27;
          uint64_t v52 = v28;
          uint64_t v53 = v29;
          uint64_t v31 = *(v24 - 3);
          uint64_t v32 = *(v24 - 2);
          uint64_t v33 = *(v24 - 1);
          uint64_t v34 = *v24;
          uint64_t v35 = v24[1];
          uint64_t v42 = v31;
          uint64_t v43 = v32;
          uint64_t v44 = v33;
          uint64_t v45 = v34;
          uint64_t v46 = v35;
          uint64_t v47 = v30;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v36 = v39(&v48, &v42);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v22 = v40;
          if ((v40 ^ v36)) {
            break;
          }
          ++v23;
          uint64_t v24 = v25;
          if (a3 == v23)
          {
            uint64_t v23 = a3;
            goto LABEL_10;
          }
        }
      }
      *a1 = v23;
    }
  }
  return v22 & 1;
}

uint64_t sub_1C2324810(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v6 = v5;
  uint64_t v8 = a2;
  uint64_t v9 = __src;
  int64_t v10 = a2 - __src;
  int64_t v11 = (a2 - __src) / 48;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = (uint64_t)(a3 - (void)a2) / 48;
  uint64_t v88 = __src;
  v87[0] = __dst;
  if (v11 < v13)
  {
    if (v10 > -48)
    {
      size_t v14 = 48 * v11;
      if (__dst != __src || &__src[v14] <= __dst) {
        memmove(__dst, __src, v14);
      }
      BOOL v66 = &__dst[v14];
      uint64_t v86 = &__dst[v14];
      if ((unint64_t)v8 < a3 && v10 >= 48)
      {
        uint64_t v15 = __dst;
        while (1)
        {
          uint64_t v70 = v9;
          uint64_t v72 = v8;
          uint64_t v16 = *((void *)v8 + 1);
          uint64_t v17 = *((void *)v8 + 2);
          uint64_t v18 = *((void *)v8 + 3);
          uint64_t v19 = *((void *)v8 + 4);
          char v20 = v8[40];
          uint64_t v80 = *(void *)v8;
          uint64_t v81 = v16;
          uint64_t v82 = v17;
          uint64_t v83 = v18;
          uint64_t v84 = v19;
          char v85 = v20;
          uint64_t v21 = *((void *)v15 + 1);
          uint64_t v22 = *((void *)v15 + 2);
          uint64_t v23 = *((void *)v15 + 3);
          uint64_t v24 = *((void *)v15 + 4);
          char v25 = v15[40];
          uint64_t v74 = *(void *)v15;
          uint64_t v75 = v21;
          uint64_t v76 = v22;
          uint64_t v77 = v23;
          uint64_t v78 = v24;
          char v79 = v25;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v26 = a5(&v80, &v74);
          if (v6) {
            goto LABEL_48;
          }
          char v27 = v26;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v27)
          {
            uint64_t v28 = v70;
            uint64_t v29 = v72 + 48;
            if (v70 >= v72 && v70 < v29)
            {
              uint64_t v6 = 0;
              if (v70 != v72)
              {
                long long v30 = *(_OWORD *)v72;
                long long v31 = *((_OWORD *)v72 + 2);
                *((_OWORD *)v70 + 1) = *((_OWORD *)v72 + 1);
                *((_OWORD *)v70 + 2) = v31;
                *(_OWORD *)uint64_t v70 = v30;
              }
              goto LABEL_20;
            }
            long long v34 = *(_OWORD *)v72;
            long long v35 = *((_OWORD *)v72 + 2);
            *((_OWORD *)v70 + 1) = *((_OWORD *)v72 + 1);
            *((_OWORD *)v70 + 2) = v35;
            *(_OWORD *)uint64_t v70 = v34;
          }
          else
          {
            uint64_t v28 = v70;
            uint64_t v29 = v72;
            if (v70 != v15)
            {
              long long v32 = *(_OWORD *)v15;
              long long v33 = *((_OWORD *)v15 + 2);
              *((_OWORD *)v70 + 1) = *((_OWORD *)v15 + 1);
              *((_OWORD *)v70 + 2) = v33;
              *(_OWORD *)uint64_t v70 = v32;
            }
            v15 += 48;
            v87[0] = v15;
          }
          uint64_t v6 = 0;
LABEL_20:
          uint64_t v9 = v28 + 48;
          uint64_t v88 = v9;
          if (v15 < v66)
          {
            uint64_t v8 = v29;
            if ((unint64_t)v29 < a3) {
              continue;
            }
          }
          break;
        }
      }
LABEL_47:
      sub_1C23F2AF4((void **)&v88, v87, &v86);
      return 1;
    }
LABEL_50:
    uint64_t result = sub_1C25506A0();
    __break(1u);
    return result;
  }
  if (v12 <= -48) {
    goto LABEL_50;
  }
  uint64_t v36 = 48 * v13;
  if (__dst != a2 || &a2[v36] <= __dst) {
    memmove(__dst, a2, 48 * v13);
  }
  uint64_t v37 = &__dst[v36];
  uint64_t v86 = &__dst[v36];
  uint64_t v88 = v8;
  if (v9 >= v8 || v12 < 48) {
    goto LABEL_47;
  }
  uint64_t v64 = __dst;
  uint64_t v38 = (char *)(a3 - 48);
  int v39 = v8;
  uint64_t v71 = v9;
  while (1)
  {
    uint64_t v69 = v38;
    uint64_t v73 = v8;
    uint64_t v65 = v37;
    uint64_t v40 = *((void *)v37 - 6);
    uint64_t v42 = *((void *)v37 - 5);
    uint64_t v41 = v37 - 48;
    uint64_t v43 = *((void *)v37 - 4);
    uint64_t v44 = *((void *)v37 - 3);
    uint64_t v45 = *((void *)v37 - 2);
    char v46 = *(v37 - 8);
    uint64_t v80 = v40;
    uint64_t v81 = v42;
    uint64_t v82 = v43;
    uint64_t v83 = v44;
    uint64_t v84 = v45;
    char v85 = v46;
    uint64_t v47 = *((void *)v39 - 6);
    uint64_t v48 = *((void *)v39 - 5);
    v39 -= 48;
    uint64_t v49 = *((void *)v39 + 2);
    uint64_t v50 = *((void *)v39 + 3);
    uint64_t v51 = *((void *)v39 + 4);
    char v52 = v39[40];
    uint64_t v74 = v47;
    uint64_t v75 = v48;
    uint64_t v76 = v49;
    uint64_t v77 = v50;
    uint64_t v78 = v51;
    char v79 = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v53 = a5(&v80, &v74);
    if (v6) {
      break;
    }
    char v54 = v53;
    uint64_t v55 = v69 + 48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v54)
    {
      uint64_t v56 = v69;
      uint64_t v37 = v65;
      if (v55 != v73 || v69 >= v73)
      {
        long long v57 = *(_OWORD *)v39;
        long long v58 = *((_OWORD *)v39 + 2);
        *((_OWORD *)v69 + 1) = *((_OWORD *)v39 + 1);
        *((_OWORD *)v69 + 2) = v58;
        *(_OWORD *)uint64_t v69 = v57;
      }
      uint64_t v88 = v39;
    }
    else
    {
      uint64_t v86 = v41;
      int v39 = v73;
      uint64_t v56 = v69;
      if (v55 >= v65 && v69 < v65)
      {
        uint64_t v6 = 0;
        if (v55 != v65)
        {
          long long v59 = *(_OWORD *)v41;
          long long v60 = *((_OWORD *)v41 + 2);
          *((_OWORD *)v69 + 1) = *((_OWORD *)v41 + 1);
          *((_OWORD *)v69 + 2) = v60;
          *(_OWORD *)uint64_t v69 = v59;
        }
        uint64_t v37 = v41;
        goto LABEL_43;
      }
      long long v61 = *(_OWORD *)v41;
      long long v62 = *((_OWORD *)v41 + 2);
      *((_OWORD *)v69 + 1) = *((_OWORD *)v41 + 1);
      *((_OWORD *)v69 + 2) = v62;
      *(_OWORD *)uint64_t v69 = v61;
      uint64_t v37 = v41;
    }
    uint64_t v6 = 0;
LABEL_43:
    if (v39 > v71)
    {
      uint64_t v38 = v56 - 48;
      uint64_t v8 = v39;
      if (v37 > v64) {
        continue;
      }
    }
    goto LABEL_47;
  }
LABEL_48:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C23F2AF4((void **)&v88, v87, &v86);
  return 1;
}

uint64_t sub_1C2324D48(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = a2 - __src;
  int64_t v10 = (a2 - __src) / 24;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = (uint64_t)(a3 - (void)a2) / 24;
  long long v60 = __src;
  long long v59 = __dst;
  if (v10 >= v12)
  {
    if (v11 > -24)
    {
      uint64_t v28 = v5;
      if (__dst != a2 || &a2[24 * v12] <= __dst) {
        memmove(__dst, a2, 24 * v12);
      }
      uint64_t v29 = &__dst[24 * v12];
      long long v58 = v29;
      long long v60 = v7;
      if (v8 < v7 && v11 >= 24)
      {
        uint64_t v45 = __dst;
        char v46 = v8;
        unint64_t v30 = a3 - 24;
        long long v31 = v7;
        while (1)
        {
          uint64_t v47 = v29;
          uint64_t v49 = v7;
          uint64_t v32 = *((void *)v29 - 3);
          uint64_t v33 = *((void *)v29 - 2);
          v29 -= 24;
          uint64_t v34 = *((void *)v29 + 2);
          uint64_t v55 = v32;
          uint64_t v56 = v33;
          uint64_t v57 = v34;
          uint64_t v35 = *((void *)v31 - 3);
          uint64_t v36 = *((void *)v31 - 2);
          v31 -= 24;
          uint64_t v37 = *((void *)v31 + 2);
          uint64_t v52 = v35;
          uint64_t v53 = v36;
          uint64_t v54 = v37;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v38 = a5(&v55, &v52);
          if (v28) {
            break;
          }
          char v39 = v38;
          uint64_t v40 = (char *)(v30 + 24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v39)
          {
            uint64_t v29 = v47;
            unint64_t v41 = (unint64_t)v46;
            if (v40 != v49 || v30 >= (unint64_t)v49)
            {
              long long v42 = *(_OWORD *)v31;
              *(void *)(v30 + 16) = *((void *)v31 + 2);
              *(_OWORD *)unint64_t v30 = v42;
            }
            long long v60 = v31;
          }
          else
          {
            long long v58 = v29;
            unint64_t v41 = (unint64_t)v46;
            long long v31 = v49;
            if (v40 < v47 || v30 >= (unint64_t)v47 || v40 != v47)
            {
              long long v43 = *(_OWORD *)v29;
              *(void *)(v30 + 16) = *((void *)v29 + 2);
              *(_OWORD *)unint64_t v30 = v43;
            }
          }
          uint64_t v28 = 0;
          if ((unint64_t)v31 > v41)
          {
            v30 -= 24;
            uint64_t v7 = v31;
            if (v29 > v45) {
              continue;
            }
          }
          goto LABEL_45;
        }
LABEL_44:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_45:
      sub_1C23F2BC4((void **)&v60, (const void **)&v59, &v58);
      return 1;
    }
  }
  else if (v9 > -24)
  {
    if (__dst != __src || &__src[24 * v10] <= __dst) {
      memmove(__dst, __src, 24 * v10);
    }
    uint64_t v48 = &__dst[24 * v10];
    long long v58 = v48;
    if ((unint64_t)v7 < a3 && v9 >= 24)
    {
      uint64_t v13 = __dst;
      uint64_t v14 = v5;
      while (1)
      {
        uint64_t v15 = v8;
        uint64_t v16 = *((void *)v7 + 1);
        uint64_t v17 = v7;
        uint64_t v18 = *((void *)v7 + 2);
        uint64_t v55 = *(void *)v7;
        uint64_t v56 = v16;
        uint64_t v57 = v18;
        uint64_t v19 = *((void *)v13 + 1);
        uint64_t v20 = *((void *)v13 + 2);
        uint64_t v52 = *(void *)v13;
        uint64_t v53 = v19;
        uint64_t v54 = v20;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v21 = a5(&v55, &v52);
        if (v14) {
          goto LABEL_44;
        }
        char v22 = v21;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v22)
        {
          uint64_t v23 = v17 + 24;
          uint64_t v24 = v15;
          if (v15 >= v17 && v15 < v23)
          {
            uint64_t v14 = 0;
            if (v15 != v17)
            {
              long long v25 = *(_OWORD *)v17;
              *((void *)v15 + 2) = *((void *)v17 + 2);
              *(_OWORD *)uint64_t v15 = v25;
            }
            goto LABEL_20;
          }
          long long v27 = *(_OWORD *)v17;
          *((void *)v15 + 2) = *((void *)v17 + 2);
          *(_OWORD *)uint64_t v15 = v27;
        }
        else
        {
          uint64_t v24 = v15;
          if (v15 != v13)
          {
            long long v26 = *(_OWORD *)v13;
            *((void *)v15 + 2) = *((void *)v13 + 2);
            *(_OWORD *)uint64_t v15 = v26;
          }
          v13 += 24;
          long long v59 = v13;
          uint64_t v23 = v17;
        }
        uint64_t v14 = 0;
LABEL_20:
        uint64_t v8 = v24 + 24;
        long long v60 = v8;
        if (v13 < v48)
        {
          uint64_t v7 = v23;
          if ((unint64_t)v23 < a3) {
            continue;
          }
        }
        goto LABEL_45;
      }
    }
    goto LABEL_45;
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C23251A4(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = a2 - __src;
  int64_t v8 = (a2 - __src) / 80;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = (uint64_t)(a3 - (void)a2) / 80;
  uint64_t v97 = __src;
  uint64_t v96 = __dst;
  uint64_t v70 = __dst;
  if (v8 >= v10)
  {
    if (v9 > -80)
    {
      if (__dst != a2 || &a2[80 * v10] <= __dst)
      {
        memmove(__dst, a2, 80 * v10);
        __dst = v70;
      }
      uint64_t v33 = &__dst[80 * v10];
      unint64_t v95 = v33;
      uint64_t v97 = v5;
      if (v6 >= v5 || v9 < 80) {
        goto LABEL_44;
      }
      uint64_t v34 = (char *)(a3 - 80);
      uint64_t v35 = v5;
      __dstb = v6;
      while (1)
      {
        uint64_t v67 = v34;
        __srcb = v5;
        uint64_t v63 = v33;
        uint64_t v36 = *((void *)v33 - 10);
        uint64_t v37 = *((void *)v33 - 9);
        char v38 = v33 - 80;
        uint64_t v39 = *((void *)v33 - 8);
        uint64_t v40 = *((void *)v38 + 3);
        uint64_t v41 = *((void *)v38 + 4);
        uint64_t v42 = *((void *)v38 + 5);
        uint64_t v43 = *((void *)v38 + 6);
        uint64_t v44 = *((void *)v38 + 7);
        uint64_t v45 = *((void *)v38 + 8);
        uint64_t v46 = *((void *)v38 + 9);
        uint64_t v85 = v36;
        uint64_t v86 = v37;
        uint64_t v87 = v39;
        uint64_t v88 = v40;
        uint64_t v89 = v41;
        uint64_t v90 = v42;
        uint64_t v91 = v43;
        uint64_t v92 = v44;
        uint64_t v93 = v45;
        uint64_t v94 = v46;
        uint64_t v47 = *((void *)v35 - 10);
        uint64_t v48 = *((void *)v35 - 9);
        v35 -= 80;
        uint64_t v49 = *((void *)v35 + 2);
        uint64_t v50 = *((void *)v35 + 3);
        uint64_t v51 = *((void *)v35 + 4);
        uint64_t v52 = *((void *)v35 + 5);
        uint64_t v53 = *((void *)v35 + 6);
        uint64_t v54 = *((void *)v35 + 7);
        uint64_t v56 = *((void *)v35 + 8);
        uint64_t v55 = *((void *)v35 + 9);
        uint64_t v75 = v47;
        uint64_t v76 = v48;
        uint64_t v77 = v49;
        uint64_t v78 = v50;
        uint64_t v79 = v51;
        uint64_t v80 = v52;
        uint64_t v81 = v53;
        uint64_t v82 = v54;
        uint64_t v83 = v56;
        uint64_t v84 = v55;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v57 = a5(&v85, &v75);
        if (v74) {
          goto LABEL_43;
        }
        char v58 = v57;
        long long v59 = v67 + 80;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v58)
        {
          long long v60 = v67;
          if (v59 != __srcb || v67 >= __srcb) {
            memmove(v67, v35, 0x50uLL);
          }
          uint64_t v97 = v35;
          long long v61 = __dstb;
          uint64_t v33 = v63;
        }
        else
        {
          unint64_t v95 = v38;
          long long v60 = v67;
          if (v59 < v63 || v67 >= v63 || v59 != v63) {
            memmove(v67, v38, 0x50uLL);
          }
          uint64_t v35 = __srcb;
          uint64_t v33 = v38;
          long long v61 = __dstb;
        }
        if (v33 > v70)
        {
          uint64_t v34 = v60 - 80;
          uint64_t v5 = v35;
          if (v35 > v61) {
            continue;
          }
        }
        goto LABEL_44;
      }
    }
  }
  else if (v7 > -80)
  {
    if (__dst != __src || &__src[80 * v8] <= __dst)
    {
      memmove(__dst, __src, 80 * v8);
      __dst = v70;
    }
    uint64_t v64 = &__dst[80 * v8];
    unint64_t v95 = v64;
    if ((unint64_t)v5 >= a3 || v7 < 80) {
      goto LABEL_44;
    }
    while (1)
    {
      __dsta = v6;
      uint64_t v11 = *((void *)v5 + 1);
      uint64_t v12 = *((void *)v5 + 2);
      uint64_t v13 = *((void *)v5 + 3);
      uint64_t v14 = *((void *)v5 + 4);
      uint64_t v15 = *((void *)v5 + 5);
      uint64_t v16 = *((void *)v5 + 6);
      uint64_t v17 = *((void *)v5 + 7);
      uint64_t v18 = *((void *)v5 + 8);
      uint64_t v19 = *((void *)v5 + 9);
      uint64_t v71 = __dst;
      __srca = v5;
      uint64_t v85 = *(void *)v5;
      uint64_t v86 = v11;
      uint64_t v87 = v12;
      uint64_t v88 = v13;
      uint64_t v89 = v14;
      uint64_t v90 = v15;
      uint64_t v91 = v16;
      uint64_t v92 = v17;
      uint64_t v93 = v18;
      uint64_t v94 = v19;
      uint64_t v20 = *((void *)__dst + 1);
      uint64_t v21 = *((void *)__dst + 2);
      uint64_t v22 = *((void *)__dst + 3);
      uint64_t v23 = *((void *)__dst + 4);
      uint64_t v24 = *((void *)__dst + 5);
      uint64_t v25 = *((void *)__dst + 6);
      uint64_t v26 = *((void *)__dst + 7);
      uint64_t v27 = *((void *)__dst + 8);
      uint64_t v28 = *((void *)__dst + 9);
      uint64_t v75 = *(void *)__dst;
      uint64_t v76 = v20;
      uint64_t v77 = v21;
      uint64_t v78 = v22;
      uint64_t v79 = v23;
      uint64_t v80 = v24;
      uint64_t v81 = v25;
      uint64_t v82 = v26;
      uint64_t v83 = v27;
      uint64_t v84 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v29 = a5(&v85, &v75);
      if (v74) {
        break;
      }
      char v30 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v30)
      {
        long long v31 = __srca + 80;
        uint64_t v32 = __dsta;
        if (__dsta < __srca || __dsta >= v31 || __dsta != __srca) {
          memmove(__dsta, __srca, 0x50uLL);
        }
        __dst = v71;
      }
      else
      {
        uint64_t v32 = __dsta;
        long long v31 = __srca;
        if (__dsta != v71 || __dsta >= v71 + 80) {
          memmove(__dsta, v71, 0x50uLL);
        }
        uint64_t v96 = v71 + 80;
        __dst = v71 + 80;
      }
      uint64_t v6 = v32 + 80;
      uint64_t v97 = v6;
      if (__dst < v64)
      {
        uint64_t v5 = v31;
        if ((unint64_t)v31 < a3) {
          continue;
        }
      }
      goto LABEL_44;
    }
LABEL_43:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_44:
    sub_1C23F2C94((void **)&v97, &v96, &v95);
    return 1;
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C232579C(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = a2 - __src;
  int64_t v8 = (a2 - __src) / 72;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = (uint64_t)(a3 - (void)a2) / 72;
  uint64_t v93 = __src;
  v92[0] = __dst;
  uint64_t v68 = __dst;
  if (v8 >= v10)
  {
    if (v9 > -72)
    {
      uint64_t v33 = 72 * v10;
      if (__dst != a2 || &a2[v33] <= __dst)
      {
        memmove(__dst, a2, 72 * v10);
        __dst = v68;
      }
      uint64_t v34 = &__dst[v33];
      uint64_t v91 = &__dst[v33];
      uint64_t v93 = v5;
      if (v6 < v5 && v9 >= 72)
      {
        uint64_t v35 = (char *)(a3 - 72);
        uint64_t v36 = v5;
        __dstb = v6;
        while (1)
        {
          uint64_t v65 = v35;
          __srcb = v5;
          long long v61 = v34;
          uint64_t v38 = *((void *)v34 - 9);
          uint64_t v37 = *((void *)v34 - 8);
          v34 -= 72;
          uint64_t v39 = *((void *)v34 + 2);
          uint64_t v40 = *((void *)v34 + 3);
          uint64_t v41 = *((void *)v34 + 4);
          uint64_t v42 = *((void *)v34 + 5);
          uint64_t v43 = *((void *)v34 + 6);
          uint64_t v44 = *((void *)v34 + 7);
          char v45 = v34[64];
          uint64_t v82 = v38;
          uint64_t v83 = v37;
          uint64_t v84 = v39;
          uint64_t v85 = v40;
          uint64_t v86 = v41;
          uint64_t v87 = v42;
          uint64_t v88 = v43;
          uint64_t v89 = v44;
          char v90 = v45;
          uint64_t v46 = *((void *)v36 - 9);
          uint64_t v47 = *((void *)v36 - 8);
          v36 -= 72;
          uint64_t v48 = *((void *)v36 + 2);
          uint64_t v49 = *((void *)v36 + 3);
          uint64_t v50 = *((void *)v36 + 4);
          uint64_t v51 = *((void *)v36 + 5);
          uint64_t v52 = *((void *)v36 + 6);
          uint64_t v53 = *((void *)v36 + 7);
          char v54 = v36[64];
          uint64_t v73 = v46;
          uint64_t v74 = v47;
          uint64_t v75 = v48;
          uint64_t v76 = v49;
          uint64_t v77 = v50;
          uint64_t v78 = v51;
          uint64_t v79 = v52;
          uint64_t v80 = v53;
          char v81 = v54;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v55 = a5(&v82, &v73);
          if (v72) {
            goto LABEL_43;
          }
          char v56 = v55;
          uint64_t v72 = 0;
          char v57 = v65 + 72;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v56)
          {
            char v58 = v65;
            if (v57 != __srcb || v65 >= __srcb) {
              memmove(v65, v36, 0x48uLL);
            }
            uint64_t v93 = v36;
            long long v59 = __dstb;
            uint64_t v34 = v61;
          }
          else
          {
            uint64_t v91 = v34;
            char v58 = v65;
            if (v57 < v61 || v65 >= v61)
            {
              memmove(v65, v34, 0x48uLL);
              uint64_t v36 = __srcb;
            }
            else
            {
              uint64_t v36 = __srcb;
              if (v57 != v61) {
                memmove(v65, v34, 0x48uLL);
              }
            }
            long long v59 = __dstb;
          }
          if (v34 > v68)
          {
            uint64_t v35 = v58 - 72;
            uint64_t v5 = v36;
            if (v36 > v59) {
              continue;
            }
          }
          break;
        }
      }
LABEL_42:
      sub_1C23F2D60((void **)&v93, v92, &v91);
      return 1;
    }
  }
  else if (v7 > -72)
  {
    size_t v11 = 72 * v8;
    if (__dst != __src || &__src[v11] <= __dst)
    {
      memmove(__dst, __src, v11);
      __dst = v68;
    }
    long long v62 = &__dst[v11];
    uint64_t v91 = &__dst[v11];
    if ((unint64_t)v5 < a3 && v7 >= 72)
    {
      while (1)
      {
        __dsta = v6;
        uint64_t v12 = *((void *)v5 + 1);
        uint64_t v13 = *((void *)v5 + 2);
        uint64_t v14 = *((void *)v5 + 3);
        uint64_t v15 = *((void *)v5 + 4);
        uint64_t v16 = *((void *)v5 + 5);
        uint64_t v17 = *((void *)v5 + 6);
        uint64_t v18 = *((void *)v5 + 7);
        uint64_t v69 = __dst;
        __srca = v5;
        char v19 = v5[64];
        uint64_t v82 = *(void *)v5;
        uint64_t v83 = v12;
        uint64_t v84 = v13;
        uint64_t v85 = v14;
        uint64_t v86 = v15;
        uint64_t v87 = v16;
        uint64_t v88 = v17;
        uint64_t v89 = v18;
        char v90 = v19;
        uint64_t v20 = *((void *)__dst + 1);
        uint64_t v21 = *((void *)__dst + 2);
        uint64_t v22 = *((void *)__dst + 3);
        uint64_t v23 = *((void *)__dst + 4);
        uint64_t v24 = *((void *)__dst + 5);
        uint64_t v25 = *((void *)__dst + 6);
        uint64_t v26 = *((void *)__dst + 7);
        char v27 = __dst[64];
        uint64_t v73 = *(void *)__dst;
        uint64_t v74 = v20;
        uint64_t v75 = v21;
        uint64_t v76 = v22;
        uint64_t v77 = v23;
        uint64_t v78 = v24;
        uint64_t v79 = v25;
        uint64_t v80 = v26;
        char v81 = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v28 = a5(&v82, &v73);
        if (v72) {
          break;
        }
        char v29 = v28;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v29)
        {
          char v30 = __srca + 72;
          long long v31 = __dsta;
          if (__dsta < __srca || __dsta >= v30 || __dsta != __srca) {
            memmove(__dsta, __srca, 0x48uLL);
          }
          __dst = v69;
        }
        else
        {
          long long v31 = __dsta;
          uint64_t v32 = v69;
          char v30 = __srca;
          if (__dsta != v69)
          {
            memmove(__dsta, v69, 0x48uLL);
            uint64_t v32 = v69;
          }
          __dst = v32 + 72;
          v92[0] = __dst;
        }
        uint64_t v72 = 0;
        uint64_t v6 = v31 + 72;
        uint64_t v93 = v6;
        if (__dst < v62)
        {
          uint64_t v5 = v30;
          if ((unint64_t)v30 < a3) {
            continue;
          }
        }
        goto LABEL_42;
      }
LABEL_43:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C23F2D60((void **)&v93, v92, &v91);
      return 1;
    }
    goto LABEL_42;
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2325D40(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v6 = v5;
  int64_t v7 = __dst;
  int64_t v8 = a2;
  uint64_t v9 = __src;
  int64_t v10 = a2 - __src;
  int64_t v11 = (a2 - __src) / 48;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = (uint64_t)(a3 - (void)a2) / 48;
  uint64_t v85 = __src;
  v84[0] = __dst;
  if (v11 < v13)
  {
    if (v10 > -48)
    {
      if (__dst != __src || &__src[48 * v11] <= __dst) {
        memmove(__dst, __src, 48 * v11);
      }
      uint64_t v63 = &v7[48 * v11];
      uint64_t v83 = v63;
      if ((unint64_t)v8 < a3 && v10 >= 48)
      {
        while (1)
        {
          uint64_t v67 = v9;
          uint64_t v69 = v8;
          uint64_t v14 = *((void *)v8 + 1);
          uint64_t v15 = *((void *)v8 + 2);
          uint64_t v16 = *((void *)v8 + 3);
          uint64_t v17 = *((void *)v8 + 4);
          uint64_t v18 = *((void *)v8 + 5);
          uint64_t v77 = *(void *)v8;
          uint64_t v78 = v14;
          uint64_t v79 = v15;
          uint64_t v80 = v16;
          uint64_t v81 = v17;
          uint64_t v82 = v18;
          uint64_t v19 = *((void *)v7 + 1);
          uint64_t v20 = *((void *)v7 + 2);
          uint64_t v21 = *((void *)v7 + 3);
          uint64_t v22 = *((void *)v7 + 4);
          uint64_t v23 = *((void *)v7 + 5);
          uint64_t v71 = *(void *)v7;
          uint64_t v72 = v19;
          uint64_t v73 = v20;
          uint64_t v74 = v21;
          uint64_t v75 = v22;
          uint64_t v76 = v23;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v24 = a5(&v77, &v71);
          if (v6) {
            goto LABEL_47;
          }
          char v25 = v24;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v25)
          {
            uint64_t v26 = v67;
            char v27 = v69 + 48;
            if (v67 >= v69 && v67 < v27)
            {
              uint64_t v6 = 0;
              if (v67 != v69)
              {
                long long v28 = *(_OWORD *)v69;
                long long v29 = *((_OWORD *)v69 + 2);
                *((_OWORD *)v67 + 1) = *((_OWORD *)v69 + 1);
                *((_OWORD *)v67 + 2) = v29;
                *(_OWORD *)uint64_t v67 = v28;
              }
              goto LABEL_19;
            }
            long long v32 = *(_OWORD *)v69;
            long long v33 = *((_OWORD *)v69 + 2);
            *((_OWORD *)v67 + 1) = *((_OWORD *)v69 + 1);
            *((_OWORD *)v67 + 2) = v33;
            *(_OWORD *)uint64_t v67 = v32;
          }
          else
          {
            uint64_t v26 = v67;
            char v27 = v69;
            if (v67 != v7)
            {
              long long v30 = *(_OWORD *)v7;
              long long v31 = *((_OWORD *)v7 + 2);
              *((_OWORD *)v67 + 1) = *((_OWORD *)v7 + 1);
              *((_OWORD *)v67 + 2) = v31;
              *(_OWORD *)uint64_t v67 = v30;
            }
            v7 += 48;
            v84[0] = v7;
          }
          uint64_t v6 = 0;
LABEL_19:
          uint64_t v9 = v26 + 48;
          uint64_t v85 = v9;
          if (v7 < v63)
          {
            int64_t v8 = v27;
            if ((unint64_t)v27 < a3) {
              continue;
            }
          }
          break;
        }
      }
LABEL_46:
      sub_1C23F2E30((void **)&v85, v84, &v83);
      return 1;
    }
LABEL_49:
    uint64_t result = sub_1C25506A0();
    __break(1u);
    return result;
  }
  if (v12 <= -48) {
    goto LABEL_49;
  }
  if (__dst != a2 || &a2[48 * v13] <= __dst) {
    memmove(__dst, a2, 48 * v13);
  }
  uint64_t v34 = &v7[48 * v13];
  uint64_t v83 = v34;
  uint64_t v85 = v8;
  if (v9 >= v8 || v12 < 48) {
    goto LABEL_46;
  }
  long long v61 = v7;
  uint64_t v35 = (char *)(a3 - 48);
  uint64_t v36 = v8;
  uint64_t v68 = v9;
  while (1)
  {
    BOOL v66 = v35;
    uint64_t v70 = v8;
    unint64_t v62 = (unint64_t)v34;
    uint64_t v37 = *((void *)v34 - 6);
    uint64_t v39 = *((void *)v34 - 5);
    uint64_t v38 = v34 - 48;
    uint64_t v40 = *((void *)v34 - 4);
    uint64_t v41 = *((void *)v34 - 3);
    uint64_t v42 = *((void *)v34 - 2);
    uint64_t v43 = *((void *)v38 + 5);
    uint64_t v77 = v37;
    uint64_t v78 = v39;
    uint64_t v79 = v40;
    uint64_t v80 = v41;
    uint64_t v81 = v42;
    uint64_t v82 = v43;
    uint64_t v44 = *((void *)v36 - 6);
    uint64_t v45 = *((void *)v36 - 5);
    v36 -= 48;
    uint64_t v46 = *((void *)v36 + 2);
    uint64_t v47 = *((void *)v36 + 3);
    uint64_t v48 = *((void *)v36 + 4);
    uint64_t v49 = *((void *)v36 + 5);
    uint64_t v71 = v44;
    uint64_t v72 = v45;
    uint64_t v73 = v46;
    uint64_t v74 = v47;
    uint64_t v75 = v48;
    uint64_t v76 = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v50 = a5(&v77, &v71);
    if (v6) {
      break;
    }
    char v51 = v50;
    uint64_t v52 = v66 + 48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v51)
    {
      uint64_t v53 = v66;
      uint64_t v34 = (char *)v62;
      if (v52 != v70 || v66 >= v70)
      {
        long long v54 = *(_OWORD *)v36;
        long long v55 = *((_OWORD *)v36 + 2);
        *((_OWORD *)v66 + 1) = *((_OWORD *)v36 + 1);
        *((_OWORD *)v66 + 2) = v55;
        *(_OWORD *)BOOL v66 = v54;
      }
      uint64_t v85 = v36;
    }
    else
    {
      uint64_t v83 = v38;
      uint64_t v36 = v70;
      uint64_t v53 = v66;
      if ((unint64_t)v52 >= v62 && (unint64_t)v66 < v62)
      {
        uint64_t v6 = 0;
        if (v52 != (char *)v62)
        {
          long long v56 = *(_OWORD *)v38;
          long long v57 = *((_OWORD *)v38 + 2);
          *((_OWORD *)v66 + 1) = *((_OWORD *)v38 + 1);
          *((_OWORD *)v66 + 2) = v57;
          *(_OWORD *)BOOL v66 = v56;
        }
        uint64_t v34 = v38;
        goto LABEL_42;
      }
      long long v58 = *(_OWORD *)v38;
      long long v59 = *((_OWORD *)v38 + 2);
      *((_OWORD *)v66 + 1) = *((_OWORD *)v38 + 1);
      *((_OWORD *)v66 + 2) = v59;
      *(_OWORD *)BOOL v66 = v58;
      uint64_t v34 = v38;
    }
    uint64_t v6 = 0;
LABEL_42:
    if (v36 > v68)
    {
      uint64_t v35 = v53 - 48;
      int64_t v8 = v36;
      if (v34 > v61) {
        continue;
      }
    }
    goto LABEL_46;
  }
LABEL_47:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C23F2E30((void **)&v85, v84, &v83);
  return 1;
}

uint64_t sub_1C232625C(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(long long *, long long *), uint64_t a6, void (*a7)(char **, void *, char **))
{
  int64_t v7 = a2;
  int64_t v8 = __src;
  int64_t v9 = a2 - __src;
  int64_t v10 = (a2 - __src) / 56;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = (uint64_t)(a3 - (void)a2) / 56;
  uint64_t v86 = __src;
  v85[0] = __dst;
  uint64_t v64 = __dst;
  if (v10 < v12)
  {
    if (v9 > -56)
    {
      if (__dst != __src || &__src[56 * v10] <= __dst)
      {
        memmove(__dst, __src, 56 * v10);
        __dst = v64;
      }
      BOOL v66 = &__dst[56 * v10];
      uint64_t v84 = v66;
      if ((unint64_t)v7 < a3 && v9 >= 56)
      {
        uint64_t v63 = (char *)v85[0];
        uint64_t v13 = v86;
        while (1)
        {
          uint64_t v65 = v13;
          uint64_t v14 = v8;
          uint64_t v15 = *((void *)v7 + 2);
          char v16 = v7[24];
          uint64_t v17 = *((void *)v7 + 4);
          uint64_t v18 = *((void *)v7 + 5);
          uint64_t v19 = *((void *)v7 + 6);
          uint64_t v20 = v7;
          long long v78 = *(_OWORD *)v7;
          uint64_t v79 = v15;
          char v80 = v16;
          uint64_t v81 = v17;
          uint64_t v82 = v18;
          uint64_t v83 = v19;
          uint64_t v21 = *((void *)__dst + 2);
          char v22 = __dst[24];
          uint64_t v23 = *((void *)__dst + 4);
          uint64_t v24 = *((void *)__dst + 5);
          uint64_t v25 = *((void *)__dst + 6);
          uint64_t v26 = __dst;
          long long v72 = *(_OWORD *)__dst;
          uint64_t v73 = v21;
          char v74 = v22;
          uint64_t v75 = v23;
          uint64_t v76 = v24;
          uint64_t v77 = v25;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v27 = a5(&v78, &v72);
          if (v71)
          {
            v85[0] = v63;
            uint64_t v86 = v65;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a7(&v86, v85, &v84);
            return 1;
          }
          char v28 = v27;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v28) {
            break;
          }
          __dst = v26 + 56;
          long long v30 = v26;
          long long v29 = v20;
          uint64_t v63 = v26 + 56;
          if (v14 != v26) {
            goto LABEL_18;
          }
LABEL_19:
          uint64_t v13 = v14 + 56;
          if (__dst < v66)
          {
            int64_t v7 = v29;
            int64_t v8 = v14 + 56;
            if ((unint64_t)v29 < a3) {
              continue;
            }
          }
          v85[0] = v63;
          uint64_t v86 = v14 + 56;
          goto LABEL_41;
        }
        long long v29 = v20 + 56;
        __dst = v26;
        if (v14 < v20 || v14 >= v29)
        {
          long long v30 = v20;
        }
        else
        {
          long long v30 = v20;
          if (v14 == v20) {
            goto LABEL_19;
          }
        }
LABEL_18:
        long long v31 = *(_OWORD *)v30;
        long long v32 = *((_OWORD *)v30 + 1);
        long long v33 = *((_OWORD *)v30 + 2);
        *((void *)v14 + 6) = *((void *)v30 + 6);
        *((_OWORD *)v14 + 1) = v32;
        *((_OWORD *)v14 + 2) = v33;
        *(_OWORD *)uint64_t v14 = v31;
        goto LABEL_19;
      }
LABEL_41:
      a7(&v86, v85, &v84);
      return 1;
    }
    goto LABEL_45;
  }
  if (v11 <= -56)
  {
LABEL_45:
    uint64_t result = sub_1C25506A0();
    __break(1u);
    return result;
  }
  if (__dst != a2 || &a2[56 * v12] <= __dst)
  {
    memmove(__dst, a2, 56 * v12);
    __dst = v64;
  }
  uint64_t v34 = &__dst[56 * v12];
  uint64_t v84 = v34;
  uint64_t v86 = v7;
  if (v8 >= v7 || v11 < 56) {
    goto LABEL_41;
  }
  unint64_t v62 = v8;
  unint64_t v35 = a3 - 56;
  uint64_t v36 = v7;
  while (1)
  {
    uint64_t v67 = v34;
    uint64_t v69 = v7;
    long long v37 = *(_OWORD *)(v34 - 56);
    v34 -= 56;
    uint64_t v38 = *((void *)v34 + 2);
    char v39 = v34[24];
    uint64_t v40 = *((void *)v34 + 4);
    uint64_t v41 = *((void *)v34 + 5);
    uint64_t v42 = *((void *)v34 + 6);
    long long v78 = v37;
    uint64_t v79 = v38;
    char v80 = v39;
    uint64_t v81 = v40;
    uint64_t v82 = v41;
    uint64_t v83 = v42;
    long long v43 = *(_OWORD *)(v36 - 56);
    v36 -= 56;
    uint64_t v44 = *((void *)v36 + 2);
    char v45 = v36[24];
    uint64_t v46 = *((void *)v36 + 4);
    uint64_t v47 = *((void *)v36 + 5);
    uint64_t v48 = *((void *)v36 + 6);
    long long v72 = v43;
    uint64_t v73 = v44;
    char v74 = v45;
    uint64_t v75 = v46;
    uint64_t v76 = v47;
    uint64_t v77 = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v49 = a5(&v78, &v72);
    if (v71) {
      break;
    }
    char v50 = v49;
    char v51 = (char *)(v35 + 56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v50)
    {
      uint64_t v34 = v67;
      uint64_t v52 = v64;
      uint64_t v53 = v62;
      if (v51 != v69 || v35 >= (unint64_t)v69)
      {
        long long v54 = *(_OWORD *)v36;
        long long v55 = *((_OWORD *)v36 + 1);
        long long v56 = *((_OWORD *)v36 + 2);
        *(void *)(v35 + 48) = *((void *)v36 + 6);
        *(_OWORD *)(v35 + 16) = v55;
        *(_OWORD *)(v35 + 32) = v56;
        *(_OWORD *)unint64_t v35 = v54;
      }
      uint64_t v86 = v36;
    }
    else
    {
      uint64_t v84 = v34;
      uint64_t v52 = v64;
      uint64_t v53 = v62;
      uint64_t v36 = v69;
      if (v51 < v67 || v35 >= (unint64_t)v67 || v51 != v67)
      {
        long long v57 = *(_OWORD *)v34;
        long long v58 = *((_OWORD *)v34 + 1);
        long long v59 = *((_OWORD *)v34 + 2);
        *(void *)(v35 + 48) = *((void *)v34 + 6);
        *(_OWORD *)(v35 + 16) = v58;
        *(_OWORD *)(v35 + 32) = v59;
        *(_OWORD *)unint64_t v35 = v57;
      }
    }
    if (v34 > v52)
    {
      v35 -= 56;
      int64_t v7 = v36;
      if (v36 > v53) {
        continue;
      }
    }
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a7(&v86, v85, &v84);
  return 1;
}

uint64_t sub_1C2326764(char *__src, char *a2, unint64_t a3, char *a4, uint64_t (*a5)(uint64_t *, uint64_t *))
{
  uint64_t v6 = a2;
  int64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v47 = __src;
  uint64_t v46 = a4;
  if (v10 >= v12 >> 4)
  {
    if (v11 <= -16) {
      goto LABEL_50;
    }
    if (a4 != a2 || &a2[16 * v13] <= a4) {
      memmove(a4, a2, 16 * v13);
    }
    uint64_t v23 = &a4[16 * v13];
    char v45 = v23;
    uint64_t v47 = v6;
    if (v7 >= v6 || v11 < 16)
    {
LABEL_49:
      sub_1C23F2A38((void **)&v47, (const void **)&v46, &v45);
      return 1;
    }
    uint64_t v24 = (char *)(a3 - 16);
    uint64_t v25 = v6;
    long long v37 = v7;
    while (1)
    {
      unint64_t v26 = (unint64_t)v23;
      uint64_t v28 = *((void *)v23 - 1);
      char v27 = v23 - 16;
      uint64_t v43 = *((void *)v23 - 2);
      uint64_t v44 = v28;
      uint64_t v29 = *((void *)v25 - 2);
      uint64_t v30 = *((void *)v25 - 1);
      v25 -= 16;
      uint64_t v41 = v29;
      uint64_t v42 = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v31 = a5(&v43, &v41);
      if (v5) {
        goto LABEL_48;
      }
      char v32 = v31;
      long long v33 = v24 + 16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v32)
      {
        uint64_t v23 = (char *)v26;
        if (v33 != v6 || v24 >= v6) {
          *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
        }
        uint64_t v47 = v25;
      }
      else
      {
        char v45 = v27;
        if ((unint64_t)v33 >= v26 && (unint64_t)v24 < v26)
        {
          unint64_t v34 = (unint64_t)v37;
          if (v33 != (char *)v26) {
            *(_OWORD *)uint64_t v24 = *(_OWORD *)v27;
          }
          uint64_t v25 = v6;
          uint64_t v23 = v27;
          unint64_t v35 = a4;
          uint64_t v5 = 0;
          goto LABEL_45;
        }
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v27;
        uint64_t v25 = v6;
        uint64_t v23 = v27;
      }
      unint64_t v35 = a4;
      uint64_t v5 = 0;
      unint64_t v34 = (unint64_t)v37;
LABEL_45:
      if ((unint64_t)v25 > v34)
      {
        v24 -= 16;
        uint64_t v6 = v25;
        if (v23 > v35) {
          continue;
        }
      }
      goto LABEL_49;
    }
  }
  if (v8 > -16)
  {
    uint64_t v14 = a4;
    if (a4 != __src || &__src[16 * v10] <= a4) {
      memmove(a4, __src, 16 * v10);
    }
    uint64_t v15 = &a4[16 * v10];
    char v45 = v15;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      while (1)
      {
        char v16 = v7;
        uint64_t v17 = *((void *)v6 + 1);
        uint64_t v43 = *(void *)v6;
        uint64_t v44 = v17;
        uint64_t v18 = *((void *)v14 + 1);
        uint64_t v41 = *(void *)v14;
        uint64_t v42 = v18;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v19 = a5(&v43, &v41);
        if (v5) {
          break;
        }
        char v20 = v19;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v20)
        {
          uint64_t v21 = v6 + 16;
          char v22 = v16;
          if (v16 < v6 || v16 >= v21)
          {
            *(_OWORD *)char v16 = *(_OWORD *)v6;
          }
          else if (v16 != v6)
          {
            *(_OWORD *)char v16 = *(_OWORD *)v6;
          }
        }
        else
        {
          char v22 = v16;
          if (v16 != v14) {
            *(_OWORD *)char v16 = *(_OWORD *)v14;
          }
          v14 += 16;
          uint64_t v46 = v14;
          uint64_t v21 = v6;
        }
        int64_t v7 = v22 + 16;
        uint64_t v47 = v7;
        if (v14 < v15)
        {
          uint64_t v6 = v21;
          if ((unint64_t)v21 < a3) {
            continue;
          }
        }
        goto LABEL_49;
      }
LABEL_48:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    goto LABEL_49;
  }
LABEL_50:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C2326AFC(uint64_t a1, void (*a2)(void *__return_ptr, _OWORD *, uint64_t), uint64_t a3, uint64_t a4, uint64_t (*a5)(BOOL, unint64_t, uint64_t), uint64_t (*a6)(uint64_t))
{
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v6) {
    return v7;
  }
  uint64_t v50 = MEMORY[0x1E4FBC860];
  a5(0, v6, 0);
  uint64_t v7 = v50;
  uint64_t result = a6(a1);
  uint64_t v12 = result;
  uint64_t v13 = 0;
  uint64_t v14 = a1 + 64;
  unint64_t v34 = v6;
  int v35 = v11;
  uint64_t v36 = a1 + 64;
  while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v17 = (unint64_t)v12 >> 6;
    if ((*(void *)(v14 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v11) {
      goto LABEL_24;
    }
    uint64_t v38 = v13;
    uint64_t v18 = *(void *)(a1 + 56);
    char v19 = (_OWORD *)(*(void *)(a1 + 48) + 48 * v12);
    long long v21 = v19[1];
    long long v20 = v19[2];
    v49[0] = *v19;
    v49[1] = v21;
    v49[2] = v20;
    uint64_t v22 = *(void *)(v18 + 8 * v12);
    sub_1C2326DE8((uint64_t)v49);
    swift_bridgeObjectRetain();
    a2(v44, v49, v22);
    uint64_t v23 = v44[1];
    uint64_t v43 = v44[0];
    uint64_t v24 = v44[2];
    char v42 = v45;
    uint64_t v40 = v47;
    uint64_t v41 = v46;
    uint64_t v39 = v48;
    sub_1C22841AC((uint64_t)v49);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v50 = v7;
    unint64_t v25 = *(void *)(v7 + 16);
    unint64_t v26 = *(void *)(v7 + 24);
    if (v25 >= v26 >> 1)
    {
      uint64_t result = a5(v26 > 1, v25 + 1, 1);
      uint64_t v7 = v50;
    }
    *(void *)(v7 + 16) = v25 + 1;
    uint64_t v27 = v7 + 56 * v25;
    *(void *)(v27 + 32) = v43;
    *(void *)(v27 + 40) = v23;
    *(void *)(v27 + 48) = v24;
    *(unsigned char *)(v27 + 56) = v42;
    *(void *)(v27 + 64) = v41;
    *(void *)(v27 + 72) = v40;
    *(void *)(v27 + 80) = v39;
    int64_t v15 = 1 << *(unsigned char *)(a1 + 32);
    if (v12 >= v15) {
      goto LABEL_25;
    }
    uint64_t v14 = a1 + 64;
    uint64_t v28 = *(void *)(v36 + 8 * v17);
    if ((v28 & (1 << v12)) == 0) {
      goto LABEL_26;
    }
    int v11 = v35;
    if (*(_DWORD *)(a1 + 36) != v35) {
      goto LABEL_27;
    }
    unint64_t v29 = v28 & (-2 << (v12 & 0x3F));
    if (v29)
    {
      int64_t v15 = __clz(__rbit64(v29)) | v12 & 0xFFFFFFFFFFFFFFC0;
      unint64_t v16 = v34;
    }
    else
    {
      unint64_t v30 = v17 + 1;
      unint64_t v31 = (unint64_t)(v15 + 63) >> 6;
      unint64_t v16 = v34;
      if (v17 + 1 < v31)
      {
        unint64_t v32 = *(void *)(v36 + 8 * v30);
        if (v32)
        {
LABEL_20:
          int64_t v15 = __clz(__rbit64(v32)) + (v30 << 6);
        }
        else
        {
          while (v31 - 2 != v17)
          {
            unint64_t v32 = *(void *)(a1 + 80 + 8 * v17++);
            if (v32)
            {
              unint64_t v30 = v17 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v13 = v38 + 1;
    uint64_t v12 = v15;
    if (v38 + 1 == v16) {
      return v7;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

double sub_1C2326DC0@<D0>(__n128 *a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  *(void *)&double result = sub_1C231EC90(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3).n128_u64[0];
  return result;
}

BOOL sub_1C2326DC8(_OWORD *a1, _OWORD *a2)
{
  return sub_1C2327108(a1, a2);
}

uint64_t sub_1C2326DE8(uint64_t a1)
{
  return a1;
}

void sub_1C2326E14(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2326E68()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

BOOL sub_1C2326EA0(uint64_t *a1, uint64_t *a2)
{
  return sub_1C231F0D0(*a1, a1[1], *a2, a2[1], *(void *)(v2 + 16));
}

uint64_t sub_1C2326ED0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C2326E14(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

double sub_1C2326F2C@<D0>(__n128 *a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  *(void *)&double result = sub_1C231E9CC(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3).n128_u64[0];
  return result;
}

void sub_1C2326F38(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(void))
{
  if (!*a2)
  {
    sub_1C22701EC(255, a3, a4);
    unint64_t v5 = sub_1C2550100();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C2326F94(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1C23273B4(255, a3, a4, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

double sub_1C2327010@<D0>(__n128 *a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  *(void *)&double result = sub_1C231E6DC(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3).n128_u64[0];
  return result;
}

BOOL sub_1C232701C(long long *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  long long v4 = a1[3];
  long long v13 = a1[2];
  long long v14 = v4;
  char v15 = *((unsigned char *)a1 + 64);
  long long v5 = a1[1];
  long long v11 = *a1;
  long long v12 = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v6;
  char v10 = *(unsigned char *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v7;
  return sub_1C22D0CE4(v9, v3) == -1;
}

double sub_1C2327094@<D0>(__n128 *a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  *(void *)&double result = sub_1C231E268(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3).n128_u64[0];
  return result;
}

BOOL sub_1C23270A0(long long *a1, long long *a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  long long v4 = a1[3];
  v10[2] = a1[2];
  v10[3] = v4;
  long long v5 = a1[4];
  long long v6 = a1[1];
  v10[0] = *a1;
  v10[1] = v6;
  long long v7 = a2[3];
  v11[2] = a2[2];
  v11[3] = v7;
  v11[4] = a2[4];
  long long v8 = *a2;
  v11[1] = a2[1];
  v10[4] = v5;
  v11[0] = v8;
  return sub_1C231EF18(v10, v11, v3);
}

double sub_1C2327100@<D0>(__n128 *a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  *(void *)&double result = sub_1C231DFC0(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3).n128_u64[0];
  return result;
}

BOOL sub_1C2327108(_OWORD *a1, _OWORD *a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  long long v4 = a1[1];
  v7[3] = *a1;
  v7[4] = v4;
  v7[5] = a1[2];
  long long v5 = a2[1];
  v7[0] = *a2;
  v7[1] = v5;
  v7[2] = a2[2];
  return sub_1C22CFB50((uint64_t)v7, v3) == -1;
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v1 = (int *)(_s13ConfigurationVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1C254CCC0();
  long long v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v6 + v1[7];
  uint64_t v10 = sub_1C254CAD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  uint64_t v11 = v6 + v1[11];
  uint64_t v12 = sub_1C254CBD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  v8(v6 + v1[14], v7);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1C2327340(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, void (*a5)(void))
{
  sub_1C2326F38(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1C23273B4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C2327410@<X0>(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(*(id *)(v1 + qword_1EA2DF3E8), sel_healthStore);
  id v4 = objc_msgSend(v3, sel_profileIdentifier);

  sub_1C254FB30();
  uint64_t v5 = type metadata accessor for HealthRecordsFeedDataSourceProvider();
  uint64_t v6 = swift_allocObject();
  sub_1C21F44EC(&v9, v6 + 16);
  *(void *)(v6 + 56) = v4;
  a1[3] = v5;
  uint64_t result = sub_1C2327D04(&qword_1EA2E0F78, v7, (void (*)(uint64_t))type metadata accessor for HealthRecordsFeedDataSourceProvider);
  a1[4] = result;
  *a1 = v6;
  return result;
}

uint64_t HealthRecordsFeedDataSourceProvider.__allocating_init(sourceProfile:store:)(uint64_t a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1C21F44EC(a2, v4 + 16);
  *(void *)(v4 + 56) = a1;
  return v4;
}

id sub_1C2327548()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalAllHealthRecordsFeedViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C2327580()
{
  qword_1EA2E0F60 = 0x4036000000000000;
}

uint64_t HealthRecordsFeedDataSourceProvider.init(sourceProfile:store:)(uint64_t a1, long long *a2)
{
  sub_1C21F44EC(a2, v2 + 16);
  *(void *)(v2 + 56) = a1;
  return v2;
}

uint64_t sub_1C23275C8()
{
  sub_1C2225098();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255CD90;
  *(void *)(v0 + 32) = sub_1C2327614();
  *(void *)(v0 + 40) = v1;
  return v0;
}

uint64_t sub_1C2327614()
{
  uint64_t v1 = sub_1C254D7E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v25 - v6;
  id v27 = v0;
  swift_beginAccess();
  sub_1C21F4424((uint64_t)(v0 + 2), (uint64_t)v26);
  __swift_project_boxed_opaque_existential_1Tm(v26, v26[3]);
  long long v8 = (void *)sub_1C254CE10();
  sub_1C2327CAC();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CD90;
  uint64_t v10 = (void *)v0[7];
  *(void *)(v9 + 32) = v10;
  uint64_t v11 = type metadata accessor for HealthRecordsFeedDataSourceProvider();
  uint64_t v13 = sub_1C2327D04(&qword_1EA2E0F80, v12, (void (*)(uint64_t))type metadata accessor for HealthRecordsFeedDataSourceProvider);
  id v14 = v10;
  v25[2] = MEMORY[0x1C8755750](v8, v9, v11, v13);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  sub_1C254D7A0();
  char v15 = (void (*)(void *, void))sub_1C254D7C0();
  uint64_t v17 = v16;
  uint64_t v18 = sub_1C254D740();
  char v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  if (v19(v17, 1, v18))
  {
    v15(v26, 0);
  }
  else
  {
    v25[1] = swift_getKeyPath();
    long long v20 = self;
    if (qword_1EA2DD6C0 != -1) {
      swift_once();
    }
    id v27 = objc_msgSend(v20, sel_absoluteDimension_, *(double *)&qword_1EA2E0F60);
    sub_1C254D730();
    v15(v26, 0);
  }
  long long v21 = (void (*)(void *, void))sub_1C254D7C0();
  if (!v19(v22, 1, v18))
  {
    swift_getKeyPath();
    id v27 = objc_msgSend(self, sel_absoluteDimension_, 0.0);
    sub_1C254D730();
  }
  v21(v26, 0);
  sub_1C22259FC();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  uint64_t v23 = sub_1C254D540();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  sub_1C2327D04((unint64_t *)&qword_1EA2DEA78, 255, (void (*)(uint64_t))sub_1C22259FC);
  return v23;
}

uint64_t HealthRecordsFeedDataSourceProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return v0;
}

uint64_t HealthRecordsFeedDataSourceProvider.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1C2327A94()
{
  sub_1C2225098();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255CD90;
  *(void *)(v0 + 32) = sub_1C2327614();
  *(void *)(v0 + 40) = v1;
  return v0;
}

uint64_t sub_1C2327AE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 16;
  swift_beginAccess();
  return sub_1C21F4424(v3, a2);
}

uint64_t type metadata accessor for InternalAllHealthRecordsFeedViewController()
{
  uint64_t result = qword_1EA2E0F68;
  if (!qword_1EA2E0F68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2327B84()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C2327BC4()
{
  return type metadata accessor for InternalAllHealthRecordsFeedViewController();
}

uint64_t type metadata accessor for HealthRecordsFeedDataSourceProvider()
{
  return self;
}

uint64_t method lookup function for HealthRecordsFeedDataSourceProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthRecordsFeedDataSourceProvider);
}

uint64_t dispatch thunk of HealthRecordsFeedDataSourceProvider.store.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of HealthRecordsFeedDataSourceProvider.store.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of HealthRecordsFeedDataSourceProvider.store.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of HealthRecordsFeedDataSourceProvider.__allocating_init(sourceProfile:store:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of HealthRecordsFeedDataSourceProvider.selectedDataSources(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

void sub_1C2327CAC()
{
  if (!qword_1EA2DEA60)
  {
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DEA60);
    }
  }
}

uint64_t sub_1C2327D04(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2327D5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254F230();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C22023A4();
  *uint64_t v5 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  char v6 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v7 = *(void *)(v1 + 64);
    if (v7)
    {
      long long v8 = *(void **)(v1 + 104);
      uint64_t v9 = *(void **)(v7 + qword_1EA2E2AE8);
      *(void *)(v7 + qword_1EA2E2AE8) = v8;
      id v10 = v8;
      swift_retain();
      sub_1C23D5F84(v9);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C2327EBC()
{
  sub_1C232A348(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v13 - v2;
  uint64_t v4 = sub_1C254F840();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  char v6 = (void *)swift_allocObject();
  uint64_t v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  swift_retain();
  if (v7 == 1)
  {
    sub_1C232A7C0((uint64_t)v3, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  else
  {
    sub_1C254F830();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v8 = sub_1C254F7D0();
      uint64_t v9 = v10;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v9 = 0;
    }
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = &unk_1EA2E0FB0;
  *(void *)(v11 + 24) = v6;
  if (v9 | v8)
  {
    v13[0] = 0;
    v13[1] = 0;
    v13[2] = v8;
    v13[3] = v9;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C232813C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(*(void *)(v0 + 24) + 16);
  type metadata accessor for PatientDetailsDataSource();
  swift_allocObject();
  id v3 = v2;
  uint64_t v4 = sub_1C23D6EC8(v3);

  uint64_t v5 = *(void **)(v1 + 104);
  char v6 = *(void **)(v4 + qword_1EA2E2AE8);
  *(void *)(v4 + qword_1EA2E2AE8) = v5;
  id v7 = v5;
  sub_1C23D5F84(v6);

  *(void *)(v1 + 64) = v4;
  swift_retain();
  swift_release();
  return v4;
}

uint64_t sub_1C23281F0()
{
  uint64_t v1 = (void *)v0;
  id v2 = objc_msgSend(*(id *)(v0 + 16), sel_provenance);
  id v3 = objc_msgSend(v2, sel_type);

  if (v3) {
    return 0;
  }
  char v6 = (void *)v1[2];
  uint64_t v5 = v1[3];
  type metadata accessor for DownloadDetailsDataSource();
  swift_allocObject();
  id v7 = v6;
  swift_retain();
  v1[9] = sub_1C2407194(v7, v5);
  swift_release();
  uint64_t result = v1[9];
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C23282B8()
{
  uint64_t v1 = (void *)v0;
  if (qword_1EA2DD8D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = 0;
  if (byte_1EA2E4618 == 1)
  {
    id v3 = *(id *)(v0 + 16);
    char v4 = sub_1C254FBA0();

    if (v4)
    {
      char v6 = (void *)v1[2];
      uint64_t v5 = v1[3];
      type metadata accessor for SharingDataSource(0);
      swift_allocObject();
      id v7 = v6;
      swift_retain();
      v1[10] = sub_1C2507C04(v7, v5);
      swift_release();
      uint64_t v8 = (void (*)(uint64_t))v1[11];
      if (v8)
      {
        sub_1C223E0BC(v1[11]);
        uint64_t v9 = swift_retain();
        v8(v9);
        sub_1C221794C((uint64_t)v8);
        swift_release();
      }
      uint64_t result = v1[10];
      if (result) {
        return swift_retain();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C2328410(void *a1)
{
  id v2 = v1;
  sub_1C232A348(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)&v20 - v5;
  uint64_t v7 = sub_1C254F230();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C22023A4();
  id v11 = a1;
  *uint64_t v10 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCBF0], v7);
  LOBYTE(a1) = sub_1C254F260();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  if (a1)
  {
    uint64_t v13 = (void *)v2[2];
    v2[2] = v11;

    if (v2[4])
    {
      id v14 = *(void **)(v2[3] + 16);
      swift_retain();
      id v15 = objc_msgSend(v14, sel_clinicalSourcesDataProvider);
      sub_1C24B6440(v11, v15);
      swift_release();
    }
    uint64_t v16 = v2[7];
    if (v16)
    {
      uint64_t v17 = sub_1C254F840();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
      uint64_t v18 = (void *)swift_allocObject();
      v18[2] = 0;
      v18[3] = 0;
      void v18[4] = v16;
      v18[5] = v11;
      swift_retain_n();
      id v19 = v11;
      sub_1C24D0A0C((uint64_t)v6, (uint64_t)&unk_1EA2E0FA0, (uint64_t)v18);
      swift_release();
      swift_release();
    }
    if (v2[9])
    {
      swift_retain();
      sub_1C2407804(v11);
      swift_release();
    }
    if (v2[10])
    {
      swift_retain();
      sub_1C2508EEC(v11);
      swift_release();
    }
    return sub_1C2327EBC();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C23286F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = self;
  id v7 = objc_msgSend(*(id *)(v1 + 16), sel_identifier);
  sub_1C254CB20();

  uint64_t v8 = (void *)sub_1C254CB00();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v9 = objc_msgSend(v6, sel__privateSourceForClinicalAccountIdentifier_name_, v8, 0);

  id v10 = objc_msgSend(*(id *)(*(void *)(v1 + 24) + 16), sel_clinicalSourcesDataProvider);
  aBlock[4] = sub_1C232A530;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C22C1540;
  aBlock[3] = &block_descriptor_34;
  id v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_fetchAccountOwnerForSource_completion_, v9, v11);
  _Block_release(v11);
}

uint64_t sub_1C23288E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254F1C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C254F200();
  uint64_t v8 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C22023A4();
  id v11 = (void *)sub_1C254FC70();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_1C232A580;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_51;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C232A588((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  sub_1C232A348(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v10, v7, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
}

void sub_1C2328BD0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (char *)sub_1C2550620();
    if (!v4) {
      goto LABEL_9;
    }
LABEL_3:
    uint64_t v5 = v4 - 1;
    if (__OFSUB__(v4, 1))
    {
      __break(1u);
    }
    else if ((a2 & 0xC000000000000001) == 0)
    {
      if (((unint64_t)v5 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v5 < *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v6 = (char *)*(id *)(a2 + 8 * (void)v5 + 32);
LABEL_8:
        uint64_t v4 = v6;
        goto LABEL_9;
      }
      __break(1u);
      return;
    }
    uint64_t v6 = (char *)MEMORY[0x1C87588E0](v5, a2);
    goto LABEL_8;
  }
  uint64_t v4 = *(char **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v4) {
    goto LABEL_3;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  id v7 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = v4;
  uint64_t v8 = v4;

  sub_1C2327D5C();
}

uint64_t sub_1C2328CC8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1C221794C(*(void *)(v0 + 88));

  return v0;
}

uint64_t sub_1C2328D38()
{
  sub_1C2328CC8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClinicalAccountDetailsDataSourceProvider()
{
  return self;
}

void *sub_1C2328D90()
{
  return sub_1C23298B8();
}

uint64_t sub_1C2328DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  uint64_t v5 = sub_1C254E560();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2328E74, 0, 0);
}

uint64_t sub_1C2328E74()
{
  uint64_t v1 = *(void **)(v0[8] + 16);
  v0[12] = v1;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C2328F28;
  return ClinicalAccountManager.newerAccount(of:)((uint64_t)v2);
}

uint64_t sub_1C2328F28(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 112) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C2329228;
  }
  else
  {
    uint64_t v6 = *(void **)(v4 + 96);
    *(void *)(v4 + 120) = a1;

    uint64_t v5 = sub_1C2329058;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C2329058()
{
  uint64_t v1 = (void *)v0[15];
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_title);
    uint64_t v3 = sub_1C254F470();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  v0[16] = v3;
  v0[17] = v5;
  sub_1C254F820();
  v0[18] = sub_1C254F810();
  uint64_t v7 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2329134, v7, v6);
}

uint64_t sub_1C2329134()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 128);
  swift_release();
  sub_1C23294E4(v2, v1);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1C23291C0, 0, 0);
}

uint64_t sub_1C23291C0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2329228()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void **)(v0 + 112);

  sub_1C254E510();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C254E550();
  os_log_type_t v5 = sub_1C254FA20();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 112);
    uint64_t v21 = *(void *)(v0 + 80);
    uint64_t v22 = *(void *)(v0 + 72);
    uint64_t v23 = *(void *)(v0 + 88);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v24 = v8;
    *(void *)(v0 + 48) = v6;
    id v9 = v6;
    id v10 = v6;
    sub_1C2270AE4(0, (unint64_t *)&qword_1EBB70060);
    sub_1C25508F0();
    id v11 = (id)HKSensitiveLogItem();
    swift_unknownObjectRelease();
    sub_1C25501E0();
    swift_unknownObjectRelease();
    uint64_t v12 = sub_1C254F4F0();
    unint64_t v14 = v13;

    *(void *)(v0 + 56) = sub_1C21AD354(v12, v14, &v24);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v4, v5, "Failed to fetch newer accounts: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v8, -1, -1);
    MEMORY[0x1C875A0B0](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    uint64_t v15 = *(void **)(v0 + 112);
    uint64_t v17 = *(void *)(v0 + 80);
    uint64_t v16 = *(void *)(v0 + 88);
    uint64_t v18 = *(void *)(v0 + 72);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  id v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1C23294E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C232A348(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  uint64_t result = MEMORY[0x1F4188790](v6 - 8);
  id v9 = (char *)&v30 - v8;
  if (a2)
  {
    uint64_t v10 = sub_1C254CBD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    sub_1C2270A88(0, (unint64_t *)&qword_1EBB6F520, (unint64_t *)&qword_1EBB6F540);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C255CD90;
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 64) = sub_1C220D950();
    *(void *)(v11 + 32) = a1;
    *(void *)(v11 + 40) = a2;
    uint64_t v12 = qword_1EBB6EF40;
    swift_bridgeObjectRetain();
    if (v12 != -1) {
      swift_once();
    }
    id v13 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    uint64_t v14 = sub_1C254F4A0();
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C232A7C0((uint64_t)v9, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
    uint64_t v17 = *(void *)(v3 + 40);
    if (v17)
    {
      uint64_t v18 = (uint64_t *)(v17 + qword_1EA2E0BF8);
      uint64_t v19 = *(void *)(v17 + qword_1EA2E0BF8);
      uint64_t v20 = *(void *)(v17 + qword_1EA2E0BF8 + 8);
      *uint64_t v18 = v14;
      v18[1] = v16;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C22FECC0(v19, v20);
      sub_1C22FB6B4();
      swift_release();
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)(v3 + 48);
    if (v21)
    {
      uint64_t v22 = *(void *)(v21 + qword_1EA2E0BF8);
      uint64_t v23 = *(void *)(v21 + qword_1EA2E0BF8 + 8);
      *(_OWORD *)(v21 + qword_1EA2E0BF8) = xmmword_1C255CEA0;
      swift_retain();
      sub_1C22FECC0(v22, v23);
      sub_1C22FB6B4();
      return swift_release();
    }
  }
  else
  {
    uint64_t v24 = *(void *)(v3 + 40);
    if (v24)
    {
      uint64_t v25 = *(void *)(v24 + qword_1EA2E0BF8);
      uint64_t v26 = *(void *)(v24 + qword_1EA2E0BF8 + 8);
      *(_OWORD *)(v24 + qword_1EA2E0BF8) = xmmword_1C255CEA0;
      swift_retain();
      sub_1C22FECC0(v25, v26);
      sub_1C22FB6B4();
      uint64_t result = swift_release();
    }
    uint64_t v27 = *(void *)(v3 + 48);
    if (v27)
    {
      uint64_t v28 = *(void *)(v27 + qword_1EA2E0BF8);
      uint64_t v29 = *(void *)(v27 + qword_1EA2E0BF8 + 8);
      *(_OWORD *)(v27 + qword_1EA2E0BF8) = xmmword_1C255CE90;
      swift_retain();
      sub_1C22FECC0(v28, v29);
      sub_1C22FB6B4();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C232986C(void *a1, uint64_t a2)
{
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  id v3 = a1;
  swift_retain();
  sub_1C2327EBC();
  sub_1C23286F8();
  return v2;
}

void *sub_1C23298B8()
{
  uint64_t v1 = v0;
  sub_1C232A348(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v67 = (char *)&v63 - v3;
  sub_1C22FEC48();
  uint64_t v76 = v4;
  uint64_t v78 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v80 = xmmword_1C25647C0;
  uint64_t v7 = (void *)v0[2];
  uint64_t v8 = v0[3];
  id v9 = *(void **)(v8 + 16);
  id v10 = v7;
  id v11 = objc_msgSend(v9, sel_clinicalSourcesDataProvider);
  type metadata accessor for AccountSourceDataSource();
  swift_allocObject();
  uint64_t v12 = sub_1C24B6158(v10, v11);
  v1[4] = v12;
  swift_retain();
  swift_release();
  uint64_t v81 = v12;
  v82[0] = MEMORY[0x1E4F66470];
  id v13 = (void *)v1[2];
  uint64_t v73 = type metadata accessor for DeleteAccountDataSource(0);
  uint64_t v14 = swift_allocObject();
  long long v75 = xmmword_1C255CEA0;
  *(_OWORD *)(v14 + qword_1EA2E0BF8) = xmmword_1C255CEA0;
  sub_1C232A348(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(sub_1C254D9B0() - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = (v18 + 32) & ~v18;
  uint64_t v20 = v19 + *(void *)(v17 + 72);
  uint64_t v72 = v16;
  uint64_t v70 = v20;
  uint64_t v69 = v18 | 7;
  uint64_t v21 = swift_allocObject();
  long long v77 = xmmword_1C255CD90;
  *(_OWORD *)(v21 + 16) = xmmword_1C255CD90;
  uint64_t v71 = v19;
  sub_1C2270A88(0, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90);
  uint64_t v68 = v22;
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v77;
  uint64_t v24 = type metadata accessor for DeleteAccountItem(0);
  swift_allocObject();
  swift_retain_n();
  id v25 = v13;
  swift_retain();
  uint64_t v26 = sub_1C22FDB64(v25, v8);
  *(void *)(v23 + 56) = v24;
  uint64_t v66 = sub_1C232A588(&qword_1EA2E0F88, (void (*)(uint64_t))type metadata accessor for DeleteAccountItem);
  *(void *)(v23 + 64) = v66;
  *(void *)(v23 + 32) = v26;
  sub_1C254D970();
  *(_OWORD *)(swift_allocObject() + 16) = v75;
  type metadata accessor for DeleteAccountSourceDataSource(0);
  *(_OWORD *)(swift_allocObject() + qword_1EA2E0BD8) = v75;
  *(void *)(v14 + qword_1EA2E0BF0) = sub_1C254DF10();
  swift_release();
  uint64_t v27 = *MEMORY[0x1E4F663B0];
  uint64_t v28 = *(void (**)(char *, void, uint64_t))(v78 + 104);
  v78 += 104;
  uint64_t v65 = v28;
  v28(v6, v27, v76);
  swift_retain();
  char v74 = v6;
  uint64_t v29 = sub_1C254D5D0();

  swift_release();
  v1[5] = v29;
  swift_retain();
  swift_release();
  uint64_t v30 = sub_1C232A588(&qword_1EA2E0F90, (void (*)(uint64_t))type metadata accessor for DeleteAccountDataSource);
  v82[1] = v29;
  v82[2] = v30;
  uint64_t v64 = v30;
  if (qword_1EA2DD8D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  if (byte_1EA2E4618 == 1)
  {
    uint64_t v33 = MEMORY[0x1E4FBC860];
    unint64_t v34 = (void *)v1[2];
    type metadata accessor for AccountLoginDataSource(0);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + qword_1EA2DE938) = v33;
    *(void *)(v35 + qword_1EA2DE930) = v8;
    swift_retain_n();
    id v36 = v34;
    uint64_t v31 = sub_1C254DF10();
    uint64_t v37 = sub_1C254F840();
    uint64_t v38 = (uint64_t)v67;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v67, 1, 1, v37);
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = 0;
    v39[3] = 0;
    v39[4] = v31;
    v39[5] = v36;
    swift_retain_n();
    id v40 = v36;
    sub_1C24D0A0C(v38, (uint64_t)&unk_1EA2E0F98, (uint64_t)v39);
    swift_release();

    swift_release();
    swift_release();
    v1[7] = v31;
    swift_retain();
    swift_release();
    uint64_t v32 = MEMORY[0x1E4F66470];
  }
  uint64_t v67 = (char *)&v81;
  v82[3] = v31;
  v82[4] = v32;
  v82[5] = sub_1C232813C();
  v82[6] = MEMORY[0x1E4F66470];
  uint64_t v41 = (void *)v1[2];
  uint64_t v42 = swift_allocObject();
  long long v75 = xmmword_1C255CE90;
  *(_OWORD *)(v42 + qword_1EA2E0BF8) = xmmword_1C255CE90;
  *(_OWORD *)(swift_allocObject() + 16) = v77;
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = v77;
  swift_allocObject();
  swift_retain_n();
  id v44 = v41;
  swift_retain();
  uint64_t v45 = sub_1C22FDB64(v44, v8);
  uint64_t v46 = v66;
  *(void *)(v43 + 56) = v24;
  *(void *)(v43 + 64) = v46;
  *(void *)(v43 + 32) = v45;
  sub_1C254D970();
  *(_OWORD *)(swift_allocObject() + 16) = v75;
  *(_OWORD *)(swift_allocObject() + qword_1EA2E0BD8) = v75;
  *(void *)(v42 + qword_1EA2E0BF0) = sub_1C254DF10();
  swift_release();
  v65(v74, *MEMORY[0x1E4F663B8], v76);
  swift_retain();
  uint64_t v47 = sub_1C254D5D0();

  swift_release();
  v1[6] = v47;
  swift_retain();
  swift_release();
  v82[7] = v47;
  v82[8] = v64;
  v82[9] = sub_1C23281F0();
  v82[10] = v48;
  v82[11] = sub_1C23282B8();
  v82[12] = v49;
  if (objc_msgSend(self, sel_isAppleInternalInstall))
  {
    uint64_t v50 = (void *)v1[2];
    type metadata accessor for InternalDetailsDataSource(0);
    swift_allocObject();
    swift_retain();
    id v51 = v50;
    uint64_t v52 = sub_1C240FCC0(v51, v8);

    swift_release();
    uint64_t v53 = MEMORY[0x1E4F66318];
  }
  else
  {
    uint64_t v52 = 0;
    uint64_t v53 = 0;
  }
  uint64_t v54 = 0;
  v82[13] = v52;
  v82[14] = v53;
  long long v55 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v57 = v82[v54 - 1];
    if (v57)
    {
      uint64_t v58 = v82[v54];
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v79 = v55;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        long long v55 = sub_1C226C148(0, v55[2] + 1, 1, v55);
        uint64_t v79 = v55;
      }
      unint64_t v61 = v55[2];
      unint64_t v60 = v55[3];
      if (v61 >= v60 >> 1)
      {
        long long v55 = sub_1C226C148((void *)(v60 > 1), v61 + 1, 1, v55);
        uint64_t v79 = v55;
      }
      uint64_t ObjectType = swift_getObjectType();
      sub_1C2332694(v61, v57, (uint64_t *)&v79, ObjectType, v58);
    }
    v54 += 2;
  }
  while (v54 != 16);
  sub_1C232A400();
  swift_arrayDestroy();
  return v55;
}

void sub_1C232A348(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C232A3B0(uint64_t a1, uint64_t a2)
{
  return sub_1C22FB810(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t objectdestroyTm_4()
{
  if ((unint64_t)(*(void *)(v0 + 24) - 1) >= 2) {
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C232A400()
{
  if (!qword_1EA2DF5A8)
  {
    sub_1C2270AE4(255, (unint64_t *)&qword_1EA2DEA40);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2DF5A8);
    }
  }
}

uint64_t sub_1C232A470(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_1C2223E3C;
  return sub_1C2220B4C(a1, v4, v5, v7, v6);
}

uint64_t sub_1C232A530(uint64_t a1)
{
  return sub_1C23288E8(a1, v1);
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t sub_1C232A540()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C232A580()
{
  sub_1C2328BD0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C232A588(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C232A5D4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_1C222399C;
  return sub_1C2220B4C(a1, v4, v5, v7, v6);
}

uint64_t sub_1C232A694()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C232A6D4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C2223E3C;
  return sub_1C2328DB4(a1, v4, v5, v6);
}

uint64_t sub_1C232A788()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C232A7C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C232A348(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id HKUIMetricColors.init(keyColor:)(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v2, sel_setKeyColor_, a1);
  id v3 = objc_msgSend(self, sel_systemLightGrayColor);
  objc_msgSend(v2, sel_setContextViewPrimaryTextColor_, v3);

  id v4 = objc_msgSend(v2, sel_contextViewPrimaryTextColor);
  objc_msgSend(v2, sel_setContextViewSecondaryTextColor_, v4);

  return v2;
}

id static HKUIMetricColors.chartFilterDefaultForSingle()()
{
  return sub_1C232A960((SEL *)&selRef_hk_chartOverlayBackgroundColor);
}

id sub_1C232A91C()
{
  swift_getObjCClassMetadata();
  id v0 = static HKUIMetricColors.chartFilterDefaultForSingle()();
  return v0;
}

id static HKUIMetricColors.chartFilterDefaultForMultiple()()
{
  return sub_1C232A960((SEL *)&selRef_hk_chartBackgroundColor);
}

id sub_1C232A960(SEL *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  id v3 = self;
  id v4 = [v3 *a1];
  objc_msgSend(v2, sel_setKeyColor_, v4);
  id v5 = objc_msgSend(v3, sel_labelColor);
  objc_msgSend(v2, sel_setContextViewPrimaryTextColor_, v5);

  id v6 = objc_msgSend(v2, sel_contextViewPrimaryTextColor);
  objc_msgSend(v2, sel_setContextViewSecondaryTextColor_, v6);

  return v2;
}

id sub_1C232AA4C()
{
  swift_getObjCClassMetadata();
  id v0 = static HKUIMetricColors.chartFilterDefaultForMultiple()();
  return v0;
}

id ConceptFeedItemBrowseTitleView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

double sub_1C232AAE8()
{
  double result = 8.0;
  xmmword_1EA303B00 = xmmword_1C2564890;
  *(_OWORD *)&qword_1EA303B10 = xmmword_1C25645C0;
  return result;
}

void sub_1C232AB08()
{
  qword_1EA303B20 = 0x4020000000000000;
}

id sub_1C232AB18()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v1 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v2) = 1132068864;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v2);
  LODWORD(v3) = 1132068864;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v3);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6FA60);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255D0E0;
  *(void *)(v4 + 32) = sub_1C254F470();
  *(void *)(v4 + 40) = v5;
  *(void *)(v4 + 48) = 0xD00000000000001ELL;
  *(void *)(v4 + 56) = 0x80000001C2564890;
  *(void *)(v4 + 64) = 0x656C746954;
  *(void *)(v4 + 72) = 0xE500000000000000;
  id v6 = v0;
  uint64_t v7 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v8 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v6, sel_setAccessibilityIdentifier_, v8);
  return v6;
}

id sub_1C232ACE4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v1 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v2) = 1148846080;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v2);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v3);
  LODWORD(v4) = 1132068864;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v4);
  objc_msgSend(v0, sel_setAdjustsFontForContentSizeCategory_, 1);
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6FA60);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C255D0E0;
  *(void *)(v5 + 32) = sub_1C254F470();
  *(void *)(v5 + 40) = v6;
  *(void *)(v5 + 48) = 0xD00000000000001ELL;
  *(void *)(v5 + 56) = 0x80000001C2564890;
  *(void *)(v5 + 64) = 1702125892;
  *(void *)(v5 + 72) = 0xE400000000000000;
  id v7 = v0;
  id v8 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v9 = (id)HKUIJoinStringsForAutomationIdentifier();

  objc_msgSend(v7, sel_setAccessibilityIdentifier_, v9);
  return v7;
}

id sub_1C232AEC4()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___bottomConstraint;
  double v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___bottomConstraint];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___bottomConstraint];
  }
  else
  {
    id v4 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel], sel_bottomAnchor);
    id v5 = objc_msgSend(v0, sel_bottomAnchor);
    if (qword_1EA2DD6C8 != -1) {
      swift_once();
    }
    id v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, -*(double *)&qword_1EA303B10);

    id v7 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v6;
    id v3 = v6;

    double v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1C232AFC8()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateChevronConstraint;
  double v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateChevronConstraint);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateChevronConstraint);
  }
  else
  {
    id v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView), sel_leadingAnchor);
    id v5 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel), sel_trailingAnchor);
    if (qword_1EA2DD6D0 != -1) {
      swift_once();
    }
    id v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v5, *(double *)&qword_1EA303B20);

    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    double v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1C232B0D4()
{
  return sub_1C232B0FC(&OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateTrailingConstraint, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel);
}

id sub_1C232B0E8()
{
  return sub_1C232B0FC(&OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___chevronTrailingConstraint, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView);
}

id sub_1C232B0FC(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  id v4 = *(void **)&v2[*a1];
  if (v4)
  {
    id v5 = *(id *)&v2[*a1];
  }
  else
  {
    id v6 = objc_msgSend(*(id *)&v2[*a2], sel_trailingAnchor);
    id v7 = objc_msgSend(v2, sel_trailingAnchor);
    if (qword_1EA2DD6C8 != -1) {
      swift_once();
    }
    id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v7, -*(double *)&qword_1EA303B18);

    id v9 = *(void **)&v2[v3];
    *(void *)&v2[v3] = v8;
    id v5 = v8;

    id v4 = 0;
  }
  id v10 = v4;
  return v5;
}

void *sub_1C232B1F8()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_headerImage);
  swift_beginAccess();
  double v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1C232B248(void *a1)
{
}

uint64_t (*sub_1C232B254())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C232B2B0()
{
  return sub_1C223A124(&OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title);
}

uint64_t sub_1C232B2BC(uint64_t a1, uint64_t a2)
{
  return sub_1C2239780(a1, a2, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title);
}

uint64_t (*sub_1C232B2C8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C232B324()
{
  return sub_1C223A124(&OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateString);
}

uint64_t sub_1C232B330(uint64_t a1, uint64_t a2)
{
  return sub_1C2239780(a1, a2, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateString);
}

uint64_t (*sub_1C232B33C())()
{
  return j__swift_endAccess;
}

void *sub_1C232B398()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryColor);
  swift_beginAccess();
  double v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1C232B3E8(void *a1)
{
}

uint64_t (*sub_1C232B3F4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C232B450()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesChevron);
  swift_beginAccess();
  return *v1;
}

void sub_1C232B498(unsigned __int8 a1)
{
  id v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesChevron);
  swift_beginAccess();
  *id v3 = a1;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView), sel_setHidden_, a1 & 1);
  id v4 = sub_1C232AFC8();
  objc_msgSend(v4, sel_setActive_, (*v3 & 1) == 0);

  id v5 = sub_1C232B0D4();
  objc_msgSend(v5, sel_setActive_, *v3);
}

void (*sub_1C232B54C(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesChevron;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C232B5B8;
}

void sub_1C232B5B8(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView), sel_setHidden_, *(unsigned __int8 *)(v4 + v5));
    id v6 = sub_1C232AFC8();
    objc_msgSend(v6, sel_setActive_, (*(unsigned char *)(v4 + v5) & 1) == 0);

    id v7 = sub_1C232B0D4();
    objc_msgSend(v7, sel_setActive_, *(unsigned __int8 *)(v4 + v5));
  }
  free(v3);
}

uint64_t sub_1C232B66C()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesHeaderSymbolForAccessibilitySizing);
  swift_beginAccess();
  return *v1;
}

void sub_1C232B6B4(char a1)
{
  id v3 = (unsigned char *)(v1
               + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesHeaderSymbolForAccessibilitySizing);
  swift_beginAccess();
  *id v3 = a1;
  sub_1C232C660();
}

void (*sub_1C232B70C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C232B76C;
}

void sub_1C232B76C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C232C660();
  }
}

uint64_t sub_1C232B7A0()
{
  return sub_1C223A124(&OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_baseAccessibilityIdentifier);
}

void sub_1C232B7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v6 = (void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_baseAccessibilityIdentifier);
  swift_beginAccess();
  *id v6 = a1;
  v6[1] = a2;
  swift_bridgeObjectRelease();
  if (v6[1])
  {
    id v7 = *(void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel);
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRetain();
    id v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);

    id v9 = *(void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel);
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    id v10 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);
  }
}

void (*sub_1C232B8F4(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_baseAccessibilityIdentifier;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C232B960;
}

void sub_1C232B960(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = (uint64_t *)(v4 + v3[4]);
    uint64_t v6 = v5[1];
    if (v6)
    {
      uint64_t v7 = *v5;
      id v8 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel);
      uint64_t v12 = *v5;
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRetain();
      id v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setAccessibilityIdentifier_, v9, v12, v6);

      id v10 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel);
      uint64_t v13 = v6;
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      id v11 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setAccessibilityIdentifier_, v11, v7, v13);
    }
  }
  free(v3);
}

uint64_t sub_1C232BAA8(uint64_t a1, void *a2)
{
  sub_1C223B448(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData;
  swift_beginAccess();
  sub_1C223B514((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C232BB1C();
  return sub_1C223B578((uint64_t)v5);
}

void sub_1C232BB1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData);
  swift_beginAccess();
  uint64_t v3 = v2[3];
  if (v3)
  {
    uint64_t v4 = v2[4];
    uint64_t v5 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
    uint64_t v6 = *(void *)(v3 - 8);
    MEMORY[0x1F4188790](v5);
    id v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v3);
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v10 = (void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_headerImage);
  swift_beginAccess();
  id v11 = *v10;
  *id v10 = (void *)v9;

  uint64_t v12 = v2[3];
  if (v12)
  {
    uint64_t v13 = v2[4];
    uint64_t v14 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
    uint64_t v15 = *(void *)(v12 - 8);
    MEMORY[0x1F4188790](v14);
    uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
    uint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v12);
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
  }
  uint64_t v21 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title);
  swift_beginAccess();
  uint64_t *v21 = v18;
  v21[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = v2[3];
  if (!v22) {
    goto LABEL_9;
  }
  uint64_t v23 = v2[4];
  uint64_t v24 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
  uint64_t v25 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v25 + 16))(v27);
  uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  unint64_t v30 = v29;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v22);
  if (!v30)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    unint64_t v30 = 0xE100000000000000;
    uint64_t v28 = 32;
  }
  uint64_t v31 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateString);
  swift_beginAccess();
  *uint64_t v31 = v28;
  v31[1] = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = v2[3];
  if (v32)
  {
    uint64_t v33 = v2[4];
    unint64_t v34 = __swift_project_boxed_opaque_existential_1Tm(v2, v2[3]);
    uint64_t v35 = *(void *)(v32 - 8);
    MEMORY[0x1F4188790](v34);
    uint64_t v37 = (char *)&v41 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v35 + 16))(v37);
    uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 32))(v32, v33);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v32);
  }
  else
  {
    uint64_t v38 = 0;
  }
  uint64_t v39 = (void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryColor);
  swift_beginAccess();
  id v40 = *v39;
  *uint64_t v39 = (void *)v38;

  sub_1C232C660();
  sub_1C232C910();
  sub_1C232CB60();
}

uint64_t sub_1C232C014@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData;
  swift_beginAccess();
  return sub_1C223B448(v3, a1);
}

uint64_t sub_1C232C068(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData;
  swift_beginAccess();
  sub_1C223B514(a1, v3);
  swift_endAccess();
  sub_1C232BB1C();
  return sub_1C223B578(a1);
}

void (*sub_1C232C0D8(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C232C138;
}

void sub_1C232C138(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C232BB1C();
  }
}

char *ConceptFeedItemBrowseTitleView.init(frame:)(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_minimumViewHeight] = 0x404E000000000000;
  uint64_t v9 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryIconImageView;
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB1838]);
  id v11 = v4;
  id v12 = objc_msgSend(v10, sel_init);
  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v4[v9] = v12;
  uint64_t v13 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel;
  *(void *)&v11[v13] = sub_1C232AB18();
  uint64_t v14 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel;
  *(void *)&v11[v14] = sub_1C232ACE4();
  uint64_t v15 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView;
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  objc_msgSend(v16, sel_setContentMode_, 4);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
  uint64_t v17 = (void *)sub_1C254FEF0();
  objc_msgSend(v16, sel_setImage_, v17);

  id v18 = objc_msgSend(self, sel_tertiaryLabelColor);
  objc_msgSend(v16, sel_setTintColor_, v18);

  objc_msgSend(v16, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v19) = 1148846080;
  objc_msgSend(v16, sel_setContentHuggingPriority_forAxis_, 0, v19);
  LODWORD(v20) = 1148846080;
  objc_msgSend(v16, sel_setContentCompressionResistancePriority_forAxis_, 0, v20);
  *(void *)&v11[v15] = v16;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___bottomConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateChevronConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateTrailingConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___chevronTrailingConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_activeConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_headerImage] = 0;
  uint64_t v21 = &v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  uint64_t v22 = &v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateString];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  *(void *)&v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryColor] = 0;
  v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesChevron] = 0;
  v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesHeaderSymbolForAccessibilitySizing] = 1;
  uint64_t v23 = &v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_baseAccessibilityIdentifier];
  *(void *)uint64_t v23 = 0;
  *((void *)v23 + 1) = 0;
  uint64_t v24 = &v11[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData];
  *(_OWORD *)uint64_t v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((void *)v24 + 4) = 0;

  v35.receiver = v11;
  v35.super_class = (Class)type metadata accessor for ConceptFeedItemBrowseTitleView();
  uint64_t v25 = (char *)objc_msgSendSuper2(&v35, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v25, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  uint64_t v26 = *(void **)&v25[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel];
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  uint64_t v27 = (void *)sub_1C254FE50();
  objc_msgSend(v26, sel_setFont_, v27);

  uint64_t v28 = *(void **)&v25[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel];
  unint64_t v29 = (void *)sub_1C254FE50();
  objc_msgSend(v28, sel_setFont_, v29);

  objc_msgSend(v25, sel_addSubview_, *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryIconImageView]);
  objc_msgSend(v25, sel_addSubview_, v26);
  objc_msgSend(v25, sel_addSubview_, v28);
  objc_msgSend(v25, sel_addSubview_, *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView]);
  sub_1C232CB60();
  sub_1C223C3E4(0, (unint64_t *)&qword_1EA2DE1B0, (void (*)(uint64_t))sub_1C21FE7D8);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1C255CD90;
  uint64_t v31 = sub_1C254E8E0();
  uint64_t v32 = MEMORY[0x1E4FB1138];
  *(void *)(v30 + 32) = v31;
  *(void *)(v30 + 40) = v32;
  uint64_t v33 = v25;
  MEMORY[0x1C87583B0](v30, sel_traitCollectionDidChangeWithTraitEnvironment_previousTraitCollection_);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v33;
}

void sub_1C232C660()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryIconImageView];
  uint64_t v2 = &v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_headerImage];
  swift_beginAccess();
  objc_msgSend(v1, sel_setImage_, *(void *)v2);
  id v3 = objc_msgSend(v0, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  LOBYTE(v3) = sub_1C254FD50();
  objc_msgSend(v1, sel_setHidden_, v3 & 1);
  uint64_t v5 = &v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title];
  swift_beginAccess();
  if (*((void *)v5 + 1))
  {
    uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel];
    sub_1C223C3E4(0, (unint64_t *)&qword_1EA2E4460, (void (*)(uint64_t))sub_1C21F0FE8);
    uint64_t inited = swift_initStackObject();
    id v8 = (void **)MEMORY[0x1E4FB0700];
    *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
    uint64_t v9 = *v8;
    *(void *)(inited + 32) = *v8;
    id v10 = self;
    swift_bridgeObjectRetain();
    id v11 = v9;
    id v12 = objc_msgSend(v10, sel_labelColor);
    *(void *)(inited + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
    *(void *)(inited + 40) = v12;
    sub_1C2203C38(inited);
    id v13 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v14 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1C21F1054();
    uint64_t v15 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v13, sel_initWithString_attributes_, v14, v15);

    objc_msgSend(v6, sel_setAttributedText_, v16);
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel], sel_setAttributedText_, 0);
    objc_msgSend(v1, sel_setImage_, 0);
  }
}

uint64_t type metadata accessor for ConceptFeedItemBrowseTitleView()
{
  return self;
}

void sub_1C232C910()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel);
  swift_beginAccess();
  sub_1C223C3E4(0, (unint64_t *)&qword_1EA2E4460, (void (*)(uint64_t))sub_1C21F0FE8);
  uint64_t inited = swift_initStackObject();
  id v3 = (void **)MEMORY[0x1E4FB0700];
  *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
  id v4 = *v3;
  *(void *)(inited + 32) = *v3;
  uint64_t v5 = self;
  swift_bridgeObjectRetain();
  id v6 = v4;
  id v7 = objc_msgSend(v5, sel_secondaryLabelColor);
  *(void *)(inited + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
  *(void *)(inited + 40) = v7;
  sub_1C2203C38(inited);
  id v8 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C21F1054();
  id v10 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v8, sel_initWithString_attributes_, v9, v10);

  objc_msgSend(v1, sel_setAttributedText_, v11);
}

void sub_1C232CB60()
{
  uint64_t v1 = self;
  uint64_t v2 = (uint64_t *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_activeConstraints];
  swift_beginAccess();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  id v3 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_deactivateConstraints_, v3);

  id v4 = objc_msgSend(v0, sel_heightAnchor);
  id v5 = objc_msgSend(v4, sel_constraintGreaterThanOrEqualToConstant_, *(double *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_minimumViewHeight]);

  LODWORD(v6) = 1148829696;
  objc_msgSend(v5, sel_setPriority_, v6);
  id v7 = sub_1C232B0E8();
  LODWORD(v8) = 1148846080;
  objc_msgSend(v7, sel_setPriority_, v8);

  id v9 = objc_msgSend(v0, sel_traitCollection);
  id v10 = objc_msgSend(v9, sel_preferredContentSizeCategory);

  LOBYTE(v9) = sub_1C254FD50();
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v87 = v2;
  uint64_t v86 = v5;
  if (v9)
  {
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C255E110;
    id v12 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel];
    id v13 = objc_msgSend(v12, sel_leadingAnchor);
    id v14 = objc_msgSend(v0, sel_leadingAnchor);
    if (qword_1EA2DD6C8 != -1) {
      swift_once();
    }
    id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, *((double *)&xmmword_1EA303B00 + 1));

    *(void *)(v11 + 32) = v15;
    id v16 = objc_msgSend(v12, sel_topAnchor);
    id v17 = objc_msgSend(v0, sel_topAnchor);
    id v18 = objc_msgSend(v16, (SEL)&selRef_chartDataCacheController + 7, v17, *(double *)&xmmword_1EA303B00);

    *(void *)(v11 + 40) = v18;
    double v19 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel];
    id v20 = objc_msgSend(v19, sel_topAnchor);
    id v21 = objc_msgSend(v12, sel_bottomAnchor);
    id v22 = objc_msgSend(v20, (SEL)&selRef_chartDataCacheController + 7, v21, 2.0);

    *(void *)(v11 + 48) = v22;
    id v23 = objc_msgSend(v19, (SEL)&selRef_minusOrderedSet_ + 2);
    id v24 = objc_msgSend(v0, (SEL)&selRef_minusOrderedSet_ + 2);
    id v25 = objc_msgSend(v23, (SEL)&selRef_chartDataCacheController + 7, v24, *((double *)&xmmword_1EA303B00 + 1));

    *(void *)(v11 + 56) = v25;
    id v26 = objc_msgSend(v19, sel_bottomAnchor);
    id v27 = objc_msgSend(v0, sel_safeAreaLayoutGuide);
    id v28 = objc_msgSend(v27, sel_bottomAnchor);

    id v29 = objc_msgSend(v26, (SEL)&selRef_chartDataCacheController + 7, v28, -*(double *)&qword_1EA303B10);
    *(void *)(v11 + 64) = v29;
    uint64_t v30 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView];
    id v31 = objc_msgSend(v30, (SEL)&selRef_minusOrderedSet_ + 2);
    id v32 = objc_msgSend(v12, sel_trailingAnchor);
    id v33 = objc_msgSend(v31, sel_constraintGreaterThanOrEqualToAnchor_constant_, v32, *(double *)&qword_1EA303B18);

    *(void *)(v11 + 72) = v33;
    id v34 = objc_msgSend(v30, (SEL)&selRef_minusOrderedSet_ + 2);
    id v35 = objc_msgSend(v19, sel_trailingAnchor);
    id v36 = objc_msgSend(v34, sel_constraintGreaterThanOrEqualToAnchor_constant_, v35, *(double *)&qword_1EA303B18);

    *(void *)(v11 + 80) = v36;
    *(void *)(v11 + 88) = sub_1C232B0E8();
    id v37 = objc_msgSend(v30, sel_firstBaselineAnchor);
    id v38 = objc_msgSend(v12, sel_firstBaselineAnchor);
    id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

    id v40 = v86;
    *(void *)(v11 + 96) = v39;
    *(void *)(v11 + 104) = v86;
    sub_1C254F730();
    *uint64_t v87 = v11;
    id v41 = v86;
    swift_bridgeObjectRelease();
    uint64_t v42 = v1;
  }
  else
  {
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1C25648A0;
    *(void *)(v43 + 32) = sub_1C232B0E8();
    id v44 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryIconImageView];
    id v45 = objc_msgSend(v44, sel_leadingAnchor);
    id v46 = objc_msgSend(v0, sel_leadingAnchor);
    if (qword_1EA2DD6C8 != -1) {
      swift_once();
    }
    id v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_constant_, v46, *((double *)&xmmword_1EA303B00 + 1));

    *(void *)(v43 + 40) = v47;
    id v48 = objc_msgSend(v44, sel_centerYAnchor);
    id v49 = objc_msgSend(v0, sel_centerYAnchor);
    id v50 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v49);

    *(void *)(v43 + 48) = v50;
    id v51 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel];
    id v52 = objc_msgSend(v51, sel_leadingAnchor);
    id v53 = objc_msgSend(v44, sel_trailingAnchor);
    id v54 = objc_msgSend(v52, sel_constraintEqualToAnchor_constant_, v53, 16.0);

    *(void *)(v43 + 56) = v54;
    id v55 = objc_msgSend(v51, sel_topAnchor);
    id v56 = objc_msgSend(v0, sel_topAnchor);
    id v57 = objc_msgSend(v55, sel_constraintEqualToAnchor_constant_, v56, *(double *)&xmmword_1EA303B00);

    *(void *)(v43 + 64) = v57;
    id v58 = objc_msgSend(v51, sel_trailingAnchor);
    long long v59 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel];
    id v60 = objc_msgSend(v59, sel_leadingAnchor);
    id v85 = v44;
    id v61 = objc_msgSend(v58, sel_constraintLessThanOrEqualToAnchor_constant_, v60, -*(double *)&qword_1EA303B18);

    *(void *)(v43 + 72) = v61;
    *(void *)(v43 + 80) = sub_1C232AEC4();
    id v62 = objc_msgSend(v59, sel_topAnchor);
    id v63 = objc_msgSend(v0, sel_topAnchor);
    id v64 = objc_msgSend(v62, sel_constraintEqualToAnchor_constant_, v63, *(double *)&xmmword_1EA303B00);

    *(void *)(v43 + 88) = v64;
    id v65 = objc_msgSend(v59, sel_bottomAnchor);
    id v66 = objc_msgSend(v0, sel_bottomAnchor);
    id v67 = objc_msgSend(v65, sel_constraintGreaterThanOrEqualToAnchor_constant_, v66, -*(double *)&qword_1EA303B10);

    *(void *)(v43 + 96) = v67;
    id v68 = objc_msgSend(v59, sel_leadingAnchor);
    id v69 = objc_msgSend(v51, sel_trailingAnchor);
    if (qword_1EA2DD6D0 != -1) {
      swift_once();
    }
    id v70 = objc_msgSend(v68, sel_constraintEqualToAnchor_constant_, v69, *(double *)&qword_1EA303B20);

    *(void *)(v43 + 104) = v70;
    id v71 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView], sel_centerYAnchor);
    id v72 = objc_msgSend(v59, sel_centerYAnchor);
    id v73 = objc_msgSend(v71, sel_constraintEqualToAnchor_, v72);

    *(void *)(v43 + 112) = v73;
    id v40 = v86;
    *(void *)(v43 + 120) = sub_1C232AFC8();
    *(void *)(v43 + 128) = v86;
    sub_1C254F730();
    *uint64_t v87 = v43;
    id v74 = v86;
    swift_bridgeObjectRelease();
    id v75 = objc_msgSend(v44, sel_image);
    uint64_t v42 = v1;
    if (v75)
    {
      uint64_t v76 = v75;
      id v77 = objc_msgSend(v85, sel_widthAnchor);
      id v78 = objc_msgSend(v85, sel_heightAnchor);
      objc_msgSend(v76, sel_size);
      double v80 = v79;
      objc_msgSend(v76, sel_size);
      id v82 = objc_msgSend(v77, sel_constraintEqualToAnchor_multiplier_, v78, v80 / v81);

      swift_beginAccess();
      id v83 = v82;
      MEMORY[0x1C8757C00]();
      if (*(void *)((*v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
      swift_endAccess();
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v84 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_activateConstraints_, v84);
}

id ConceptFeedItemBrowseTitleView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConceptFeedItemBrowseTitleView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C232D850@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_headerImage, a2);
}

void sub_1C232D85C(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1C232D87C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title, a2);
}

uint64_t sub_1C232D888(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2239700(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title);
}

uint64_t sub_1C232D8A8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateString, a2);
}

uint64_t sub_1C232D8B4(uint64_t *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2239700(a1, a2, a3, a4, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateString);
}

id sub_1C232D8D4@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryColor, a2);
}

void sub_1C232D8E0(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1C232D900@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_11Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesChevron, a2);
}

void sub_1C232D90C(unsigned __int8 *a1)
{
}

uint64_t sub_1C232D934@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_11Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesHeaderSymbolForAccessibilitySizing, a2);
}

void sub_1C232D940(char *a1, void *a2)
{
  char v2 = *a1;
  id v3 = (unsigned char *)(*a2
               + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesHeaderSymbolForAccessibilitySizing);
  swift_beginAccess();
  *id v3 = v2;
  sub_1C232C660();
}

uint64_t sub_1C232D99C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_baseAccessibilityIdentifier, a2);
}

void sub_1C232D9A8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1C232B7AC(v1, v2);
}

uint64_t sub_1C232D9E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData;
  swift_beginAccess();
  return sub_1C223B448(v3, a2);
}

uint64_t method lookup function for ConceptFeedItemBrowseTitleView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ConceptFeedItemBrowseTitleView);
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.headerImage.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.headerImage.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.headerImage.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.title.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.title.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.title.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.dateString.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.dateString.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.dateString.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.categoryColor.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.categoryColor.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.categoryColor.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.hidesChevron.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.hidesChevron.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.hidesChevron.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.hidesHeaderSymbolForAccessibilitySizing.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.hidesHeaderSymbolForAccessibilitySizing.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.hidesHeaderSymbolForAccessibilitySizing.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.baseAccessibilityIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.baseAccessibilityIdentifier.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.baseAccessibilityIdentifier.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x210))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.viewData.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x218))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.viewData.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x220))();
}

uint64_t dispatch thunk of ConceptFeedItemBrowseTitleView.viewData.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x228))();
}

void sub_1C232DFFC()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_minimumViewHeight] = 0x404E000000000000;
  uint64_t v2 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryIconImageView;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  objc_msgSend(v3, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  *(void *)&v1[v2] = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_titleLabel;
  *(void *)&v1[v4] = sub_1C232AB18();
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateLabel;
  *(void *)&v1[v5] = sub_1C232ACE4();
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_chevronView;
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  objc_msgSend(v7, sel_setContentMode_, 4);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
  double v8 = (void *)sub_1C254FEF0();
  objc_msgSend(v7, sel_setImage_, v8);

  id v9 = objc_msgSend(self, sel_tertiaryLabelColor);
  objc_msgSend(v7, sel_setTintColor_, v9);

  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v10) = 1148846080;
  objc_msgSend(v7, sel_setContentHuggingPriority_forAxis_, 0, v10);
  LODWORD(v11) = 1148846080;
  objc_msgSend(v7, sel_setContentCompressionResistancePriority_forAxis_, 0, v11);
  *(void *)&v1[v6] = v7;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___bottomConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateChevronConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___dateTrailingConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView____lazy_storage___chevronTrailingConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_activeConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_headerImage] = 0;
  id v12 = &v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_title];
  *id v12 = 0;
  v12[1] = 0;
  id v13 = &v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_dateString];
  void *v13 = 0;
  v13[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_categoryColor] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesChevron] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_hidesHeaderSymbolForAccessibilitySizing] = 1;
  id v14 = &v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_baseAccessibilityIdentifier];
  void *v14 = 0;
  v14[1] = 0;
  id v15 = &v1[OBJC_IVAR____TtC15HealthRecordsUI30ConceptFeedItemBrowseTitleView_viewData];
  *(_OWORD *)id v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((void *)v15 + 4) = 0;

  sub_1C25505F0();
  __break(1u);
}

void sub_1C232E2D4(void *a1)
{
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (!a1)
  {

LABEL_9:
    sub_1C232C660();
    sub_1C232C910();
    sub_1C232CB60();
    return;
  }
  id v5 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  uint64_t v6 = sub_1C254F470();
  uint64_t v8 = v7;
  if (v6 == sub_1C254F470() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  char v11 = sub_1C2550870();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    goto LABEL_9;
  }
}

uint64_t type metadata accessor for RecordConceptsDataSource()
{
  uint64_t result = qword_1EA2E1050;
  if (!qword_1EA2E1050) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C232E44C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C232E49C()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DA90();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C232E570()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254F230();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *id v5 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  char v6 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = qword_1EA2E1048;
  id v8 = objc_msgSend(*(id *)(v1 + qword_1EA2E1048), sel_conceptNameItems);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE708);
  unint64_t v9 = sub_1C254F710();

  unint64_t v10 = sub_1C232EBC4(v9, (void (*)(unint64_t, id))sub_1C232EBBC);
  swift_bridgeObjectRelease();
  unint64_t v20 = v10;
  if (objc_msgSend(*(id *)(v1 + v7), sel_state) == (id)1)
  {
    sub_1C232ED20();
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_arrayDestroy();
    type metadata accessor for TitleSubtitleDetailItem(0);
    id v15 = (void *)swift_allocObject();
    uint64_t v16 = sub_1C254CB30();
    v15[2] = 0xD000000000000013;
    v15[3] = 0x80000001C257D5F0;
    v15[4] = 0xD00000000000001CLL;
    v15[5] = 0x80000001C257D610;
    uint64_t v17 = MEMORY[0x1E4FBC860];
    v15[6] = 0;
    v15[7] = v17;
    v15[8] = v12;
    v15[9] = v14;
    MEMORY[0x1C8757C00](v16);
    if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_4:
      sub_1C254F790();
      sub_1C254F730();
      unint64_t v10 = v20;
      goto LABEL_5;
    }
LABEL_7:
    sub_1C254F760();
    goto LABEL_4;
  }
LABEL_5:
  sub_1C228A7B0(v10);
  swift_bridgeObjectRelease();
  sub_1C254DA30();
  return swift_bridgeObjectRelease();
}

void *sub_1C232E84C(uint64_t a1, void *a2)
{
  sub_1C2201F2C();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CDA0;
  *(void *)(inited + 32) = 0x43747065636E6F43;
  *(void *)(inited + 40) = 0xEB000000006C6C65;
  uint64_t v23 = a1;
  *(void *)(inited + 48) = sub_1C2550810();
  *(void *)(inited + 56) = v5;
  sub_1C232ED20();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  swift_setDeallocating();
  swift_arrayDestroy();
  id v10 = objc_msgSend(a2, sel_title, v23);
  if (!v10) {
    __break(1u);
  }
  uint64_t v11 = v10;
  uint64_t v12 = sub_1C254F470();
  uint64_t v14 = v13;

  id v15 = objc_msgSend(a2, sel_subtitle);
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_1C254F470();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
  }
  type metadata accessor for TitleSubtitleDetailItem(0);
  unint64_t v20 = (void *)swift_allocObject();
  sub_1C254CB30();
  void v20[2] = v12;
  v20[3] = v14;
  v20[4] = v17;
  v20[5] = v19;
  uint64_t v21 = MEMORY[0x1E4FBC860];
  v20[6] = 0;
  v20[7] = v21;
  v20[8] = v7;
  v20[9] = v9;
  return v20;
}

void sub_1C232EA08()
{
}

void sub_1C232EA24()
{
}

void sub_1C232EA40()
{
}

void sub_1C232EA6C()
{
}

uint64_t sub_1C232EA7C()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C232EACC()
{
  return type metadata accessor for RecordConceptsDataSource();
}

unint64_t sub_1C232EAD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C254E890();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C254E810();
  uint64_t v3 = sub_1C254D2A0();
  swift_allocObject();
  uint64_t v4 = sub_1C254D280();
  a1[3] = v3;
  unint64_t result = sub_1C2239150();
  a1[4] = result;
  *a1 = v4;
  return result;
}

void *sub_1C232EBBC(uint64_t a1, void *a2)
{
  return sub_1C232E84C(a1, a2);
}

uint64_t sub_1C232EBC4(unint64_t a1, void (*a2)(unint64_t, id))
{
  uint64_t v10 = MEMORY[0x1E4FBC860];
  sub_1C2550490();
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x1C87588E0](v4, a1);
LABEL_7:
        uint64_t v6 = v5;
        unint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_12;
        }
        a2(v4, v5);

        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
        ++v4;
        if (v7 == v3) {
          goto LABEL_14;
        }
      }
      if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_12:
      __break(1u);
LABEL_13:
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C2550620();
      if (!v3) {
        goto LABEL_14;
      }
    }
    id v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_7;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1C232ED20()
{
  sub_1C2201F2C();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255CD90;
  *(void *)(v0 + 32) = sub_1C254F470();
  *(void *)(v0 + 40) = v1;
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1C2272294(v2);
  uint64_t v3 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v4 = (id)HKUIJoinStringsForAutomationIdentifier();

  if (v4)
  {
    sub_1C254F470();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C232EDF8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1C21AD0C0();
  swift_allocObject();
  id v4 = a1;
  uint64_t result = sub_1C254EAF0();
  *a2 = result;
  return result;
}

uint64_t sub_1C232EE80()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C232EEB8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C232EDF8(*(void **)(v1 + 16), a1);
}

uint64_t sub_1C232EEC0(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1C232FA08(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790]();
  unint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a3;
  long long v10[5] = sub_1C232F058;
  v10[6] = v8;
  swift_retain();
  id v11 = a3;
  sub_1C24D0A0C((uint64_t)v7, (uint64_t)&unk_1EA2E1068, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1C232F018(uint64_t a1, uint64_t a2)
{
  return sub_1C232EEC0(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1C232F020()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C232F058(__int16 a1)
{
  uint64_t v2 = *(uint64_t (**)(__int16 *))(v1 + 16);
  __int16 v4 = a1 & 0x1FF;
  return v2(&v4);
}

uint64_t sub_1C232F098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[31] = a5;
  v6[32] = a6;
  v6[30] = a4;
  uint64_t v7 = sub_1C254E560();
  v6[33] = v7;
  v6[34] = *(void *)(v7 - 8);
  v6[35] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C232F15C, 0, 0);
}

uint64_t sub_1C232F15C()
{
  uint64_t v1 = (void *)v0[30];
  v0[2] = v0;
  v0[7] = v0 + 28;
  v0[3] = sub_1C232F258;
  uint64_t v2 = swift_continuation_init();
  v0[23] = MEMORY[0x1E4F143A8];
  v0[24] = 0x40000000;
  v0[25] = sub_1C232F934;
  v0[26] = &block_descriptor_0;
  v0[27] = v2;
  objc_msgSend(v1, sel_deviceConfigurationSupportsHealthRecords_, v0 + 23);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C232F258()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 288) = v1;
  if (v1) {
    uint64_t v2 = sub_1C232F614;
  }
  else {
    uint64_t v2 = sub_1C232F368;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C232F368()
{
  if (*(void *)(v0 + 224) == 1)
  {
    uint64_t v1 = *(void **)(v0 + 240);
    *(void *)(v0 + 80) = v0;
    *(void *)(v0 + 120) = v0 + 296;
    *(void *)(v0 + 88) = sub_1C232F4BC;
    uint64_t v2 = swift_continuation_init();
    *(void *)(v0 + 144) = MEMORY[0x1E4F143A8];
    *(void *)(v0 + 152) = 0x40000000;
    *(void *)(v0 + 160) = sub_1C232F9E4;
    *(void *)(v0 + 168) = &block_descriptor_11;
    *(void *)(v0 + 176) = v2;
    objc_msgSend(v1, sel_hasGatewayBackedHealthRecordsAccountWithCompletion_, v0 + 144);
    return MEMORY[0x1F41881E8](v0 + 80);
  }
  else
  {
    (*(void (**)(void))(v0 + 248))(0);
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_1C232F4BC()
{
  return MEMORY[0x1F4188298](sub_1C232F59C, 0, 0);
}

uint64_t sub_1C232F59C()
{
  (*(void (**)(BOOL))(v0 + 248))((*(unsigned char *)(v0 + 296) & 1) == 0);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C232F614()
{
  uint64_t v1 = (void *)v0[36];
  swift_willThrow();
  sub_1C254E510();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C254E550();
  os_log_type_t v5 = sub_1C254FA20();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[36];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[29] = v10;
    sub_1C2550120();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1C21A1000, v4, v5, "HKClinicalAccountStore.requiresOnboardingPublisher failed with error: %@", v7, 0xCu);
    sub_1C232FA08(0, (unint64_t *)&qword_1EBB6F230, (void (*)(uint64_t))sub_1C224B3D4);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v8, -1, -1);
    MEMORY[0x1C875A0B0](v7, -1, -1);
  }
  else
  {
    id v11 = (void *)v0[36];
  }
  uint64_t v13 = v0[35];
  uint64_t v12 = (void *)v0[36];
  uint64_t v14 = v0[33];
  uint64_t v15 = v0[34];
  uint64_t v16 = (void (*)(void))v0[31];

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  v16(0);

  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1C232F824()
{
  swift_unknownObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C232F86C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  id v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *id v9 = v2;
  v9[1] = sub_1C222399C;
  return sub_1C232F098(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1C232F934(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C2206F9C();
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    **(void **)(*(void *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1C232F9E4(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
  return MEMORY[0x1F41881F8]();
}

void sub_1C232FA08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t NSSecureCodingBox.value.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)(*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v1)
                                                                            + 0x50)
                                                                - 8)
                                                    + 16))(a1, &v1[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v1) + 0x68)]);
}

id NSSecureCodingBox.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone(v1);
  id v5 = sub_1C2330EBC(a1);
  (*(void (**)(uint64_t))(*(void *)(*((void *)v2 + 10) - 8) + 8))(a1);
  return v5;
}

id NSSecureCodingBox.init(_:)(uint64_t a1)
{
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *v1;
  id v4 = sub_1C2330EBC(a1);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(a1);
  return v4;
}

uint64_t sub_1C232FBCC()
{
  return 1;
}

uint64_t static NSSecureCodingBox.supportsSecureCoding.getter()
{
  return 1;
}

id NSSecureCodingBox.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return NSSecureCodingBox.init(coder:)(a1);
}

id NSSecureCodingBox.init(coder:)(void *a1)
{
  uint64_t v3 = *MEMORY[0x1E4FBC8C8] & *v1;
  uint64_t v4 = sub_1C254E560();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  id v24 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v3 + 80);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = v1;
  id v12 = objc_msgSend(a1, sel_decodeDataObject);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v22 = v8;
    id v23 = a1;
    uint64_t v14 = v11;
    uint64_t v15 = sub_1C254C940();
    unint64_t v17 = v16;

    sub_1C254C400();
    swift_allocObject();
    sub_1C254C3F0();
    sub_1C254C3E0();
    sub_1C2205E6C(v15, v17);
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v14[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v14) + 0x68)], v10, v7);

    uint64_t v18 = (objc_class *)type metadata accessor for NSSecureCodingBox();
    v27.receiver = v14;
    v27.super_class = v18;
    id v19 = objc_msgSendSuper2(&v27, sel_init);
  }
  else
  {

    type metadata accessor for NSSecureCodingBox();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v19;
}

id sub_1C2330124(uint64_t a1, uint64_t a2, void *a3)
{
  return NSSecureCodingBox.init(coder:)(a3);
}

void sub_1C233014C(void *a1)
{
  uint64_t v2 = sub_1C254E560();
  MEMORY[0x1F4188790](v2);
  sub_1C254C470();
  swift_allocObject();
  sub_1C254C460();
  uint64_t v3 = sub_1C254C450();
  unint64_t v5 = v4;
  swift_release();
  uint64_t v6 = (void *)sub_1C254C930();
  sub_1C2205E6C(v3, v5);
  objc_msgSend(a1, sel_encodeDataObject_, v6);
}

void sub_1C23304DC(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1C233014C(v4);
}

id NSSecureCodingBox.__allocating_init(from:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return NSSecureCodingBox.init(from:)(a1);
}

id NSSecureCodingBox.init(from:)(uint64_t a1)
{
  unint64_t v16 = (void *)(*MEMORY[0x1E4FBC8C8] & *v1);
  uint64_t v4 = v16[10];
  uint64_t v13 = *(void *)(v4 - 8);
  id v5 = (void *)MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v12 - v6;
  __swift_project_boxed_opaque_existential_1Tm(v5, v5[3]);
  uint64_t v8 = v1;
  sub_1C2550A40();
  if (v2)
  {
    id v9 = v16;

    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    type metadata accessor for NSSecureCodingBox();
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1Tm(v15, v15[3]);
    v12[1] = v16[11];
    sub_1C2550880();
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v8 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v8) + 0x68), v7, v4);

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    uint64_t v11 = (objc_class *)type metadata accessor for NSSecureCodingBox();
    v14.receiver = v8;
    v14.super_class = v11;
    id v9 = objc_msgSendSuper2(&v14, sel_init);
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  return v9;
}

uint64_t sub_1C2330818(void *a1)
{
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C2550A60();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1C2550890();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

id NSSecureCodingBox.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void NSSecureCodingBox.init()()
{
}

void sub_1C233099C()
{
}

uint64_t sub_1C23309F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C2550870();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C2330A74()
{
  return 0x65756C6176;
}

uint64_t sub_1C2330A88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C23309F4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C2330AC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C221E058();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C2330AF8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C2330B4C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

id NSSecureCodingBox.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NSSecureCodingBox();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2330C28(char *a1)
{
  return (*(uint64_t (**)(char *))(*(void *)(*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)a1) + 0x50)
                                                       - 8)
                                           + 8))(&a1[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)a1) + 0x68)]);
}

uint64_t sub_1C2330C90(void *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = *MEMORY[0x1E4FBC8C8] & *v2;
  v10[1] = *(void *)(v4 + 0x50);
  v10[0] = *(void *)(v4 + 96);
  type metadata accessor for NSSecureCodingBox.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1C25507E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C2550A70();
  sub_1C25507D0();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_1C2330E6C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = NSSecureCodingBox.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C2330E98(void *a1)
{
  return sub_1C2330C90(a1);
}

id sub_1C2330EBC(uint64_t a1)
{
  (*(void (**)(char *, uint64_t, void))(*(void *)(*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v1)
                                                                          + 0x50)
                                                              - 8)
                                                  + 16))(&v1[*(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v1) + 0x68)], a1, *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v1) + 0x50));
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for NSSecureCodingBox();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for NSSecureCodingBox()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C2330FB8()
{
}

uint64_t type metadata accessor for NSSecureCodingBox.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C2331000()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for NSSecureCodingBox(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NSSecureCodingBox);
}

uint64_t dispatch thunk of NSSecureCodingBox.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of NSSecureCodingBox.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of NSSecureCodingBox.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of NSSecureCodingBox.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of NSSecureCodingBox.encode(using:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of NSSecureCodingBox.encode(to:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t sub_1C23311C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

unsigned char *sub_1C23311C8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2331264);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C233128C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C23312A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C23312C4()
{
  return swift_getWitnessTable();
}

uint64_t UserDomainConceptListViewDataSourceProvider.__allocating_init(categoryKind:predicate:sourceProfile:store:healthStore:collectionView:enableSwipeActions:)(char *a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, void *a6)
{
  uint64_t v12 = swift_allocObject();
  char v13 = *a1;
  *(unsigned char *)(v12 + 80) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v12 + 16) = v13;
  *(void *)(v12 + 24) = a2;
  *(void *)(v12 + 32) = a3;
  sub_1C21F44EC(a4, v12 + 40);
  *(void *)(v12 + 88) = a5;
  swift_unknownObjectWeakAssign();

  return v12;
}

uint64_t UserDomainConceptListViewDataSourceProvider.init(categoryKind:predicate:sourceProfile:store:healthStore:collectionView:enableSwipeActions:)(char *a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, void *a6)
{
  char v12 = *a1;
  *(unsigned char *)(v6 + 80) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v6 + 16) = v12;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  sub_1C21F44EC(a4, v6 + 40);
  *(void *)(v6 + 88) = a5;
  swift_unknownObjectWeakAssign();

  return v6;
}

uint64_t sub_1C2331410()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C233141C@<X0>(char a1@<W1>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C254DB50();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  char v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  objc_super v14 = (char *)&v21 - v13;
  if (a1)
  {
    sub_1C254DA90();
    if ((a2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  sub_1C254DAE0();
  if (a2)
  {
LABEL_5:
    sub_1C254DA80();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v12, v8);
  }
LABEL_6:
  sub_1C254DAF0();
  sub_1C254DB20();
  sub_1C254DB30();
  sub_1C22DD8FC();
  uint64_t v16 = *(int *)(v15 + 48);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a3, v14, v8);
  uint64_t v17 = MEMORY[0x1C875A200](v4 + 96);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  *(void *)(a3 + v16) = v17;
  uint64_t v18 = *MEMORY[0x1E4F66498];
  uint64_t v19 = sub_1C254DA70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(a3, v18, v19);
}

uint64_t sub_1C2331620(int a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return sub_1C23326AC(a1, a2, a3, a4, a7);
}

uint64_t sub_1C2331628(unsigned __int8 *a1)
{
  unsigned __int8 v12 = *a1;
  char v11 = *(unsigned char *)(v1 + 16);
  uint64_t v3 = *(void **)(v1 + 24);
  uint64_t v2 = *(void **)(v1 + 32);
  sub_1C21F4424(v1 + 40, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1Tm(v10, v10[3]);
  id v4 = v2;
  id v5 = v3;
  uint64_t v6 = (void *)sub_1C254CE10();
  id v7 = objc_allocWithZone((Class)type metadata accessor for UDCOlderOtherLabsDataSource());
  uint64_t v8 = sub_1C229DBF0(&v12, (uint64_t)&v11, v5, v2, v6);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  sub_1C23329D4();
  return v8;
}

id *UserDomainConceptListViewDataSourceProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 5));
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t UserDomainConceptListViewDataSourceProvider.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 5));
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2331788()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 216))();
}

void *sub_1C23317CC(void *a1)
{
  uint64_t v3 = sub_1C254E240();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

  sub_1C2437CD8();
  id v78 = (void *)sub_1C23326AC(1, 1, 0, 0, 1);
  uint64_t v9 = sub_1C23326AC(1, 0, 0, 0, 0);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C254C730();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();

  uint64_t v75 = sub_1C23326AC(1, 0, v11, v13, 0);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v1 + 16) == 2)
  {
    uint64_t v14 = _s15HealthRecordsUI20UDCDataSourceFactoryC018makeOnboardingDataE013configuration0a10ExperienceC008SnapshotiE0_pAC20SectionConfigurationC_tFZ_0(v9);
    uint64_t v16 = v15;
    uint64_t v17 = sub_1C226C148(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    if (v19 >= v18 >> 1) {
      uint64_t v17 = sub_1C226C148((void *)(v18 > 1), v19 + 1, 1, v17);
    }
    v17[2] = v19 + 1;
    unint64_t v20 = &v17[2 * v19];
    v20[4] = v14;
    v20[5] = v16;
  }
  else
  {
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
  }
  _s15HealthRecordsUI20UDCDataSourceFactoryC014makePinnedDataE013configuration0a10ExperienceC008SnapshotiE0_pAC20SectionConfigurationC_tFZ_0(v78);
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = sub_1C226C148(0, v17[2] + 1, 1, v17);
  }
  unint64_t v26 = v17[2];
  unint64_t v25 = v17[3];
  uint64_t v76 = v9;
  if (v26 >= v25 >> 1) {
    uint64_t v17 = sub_1C226C148((void *)(v25 > 1), v26 + 1, 1, v17);
  }
  v17[2] = v26 + 1;
  objc_super v27 = &v17[2 * v26];
  v27[4] = v22;
  v27[5] = v24;
  id v28 = *(void (**)(char *, void, uint64_t))(v4 + 104);
  v28(v6, *MEMORY[0x1E4F67618], v3);
  uint64_t v29 = _s15HealthRecordsUI20UDCDataSourceFactoryC017makeSectionedDataE03for13configuration0a10ExperienceC008SnapshotiE0_p0A12PlatformCore03AllI14SummarySectionV10IdentifierO_AC0R13ConfigurationCtFZ_0((uint64_t)v6, (uint64_t)v78);
  uint64_t v31 = v30;
  id v32 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v77 = v4 + 8;
  v32(v6, v3);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = sub_1C226C148(0, v17[2] + 1, 1, v17);
  }
  unint64_t v34 = v17[2];
  unint64_t v33 = v17[3];
  if (v34 >= v33 >> 1) {
    uint64_t v17 = sub_1C226C148((void *)(v33 > 1), v34 + 1, 1, v17);
  }
  v17[2] = v34 + 1;
  id v35 = &v17[2 * v34];
  v35[4] = v29;
  void v35[5] = v31;
  v28(v6, *MEMORY[0x1E4F67620], v3);
  uint64_t v36 = _s15HealthRecordsUI20UDCDataSourceFactoryC017makeSectionedDataE03for13configuration0a10ExperienceC008SnapshotiE0_p0A12PlatformCore03AllI14SummarySectionV10IdentifierO_AC0R13ConfigurationCtFZ_0((uint64_t)v6, (uint64_t)v78);
  uint64_t v38 = v37;
  v32(v6, v3);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = sub_1C226C148(0, v17[2] + 1, 1, v17);
  }
  unint64_t v40 = v17[2];
  unint64_t v39 = v17[3];
  if (v40 >= v39 >> 1) {
    uint64_t v17 = sub_1C226C148((void *)(v39 > 1), v40 + 1, 1, v17);
  }
  v17[2] = v40 + 1;
  id v41 = &v17[2 * v40];
  v41[4] = v36;
  v41[5] = v38;
  v28(v6, *MEMORY[0x1E4F67630], v3);
  uint64_t v42 = _s15HealthRecordsUI20UDCDataSourceFactoryC017makeSectionedDataE03for13configuration0a10ExperienceC008SnapshotiE0_p0A12PlatformCore03AllI14SummarySectionV10IdentifierO_AC0R13ConfigurationCtFZ_0((uint64_t)v6, (uint64_t)v78);
  uint64_t v44 = v43;
  v32(v6, v3);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = sub_1C226C148(0, v17[2] + 1, 1, v17);
  }
  unint64_t v46 = v17[2];
  unint64_t v45 = v17[3];
  if (v46 >= v45 >> 1) {
    uint64_t v17 = sub_1C226C148((void *)(v45 > 1), v46 + 1, 1, v17);
  }
  v17[2] = v46 + 1;
  id v47 = &v17[2 * v46];
  _OWORD v47[4] = v42;
  v47[5] = v44;
  v28(v6, *MEMORY[0x1E4F67628], v3);
  uint64_t v48 = _s15HealthRecordsUI20UDCDataSourceFactoryC017makeSectionedDataE03for13configuration0a10ExperienceC008SnapshotiE0_p0A12PlatformCore03AllI14SummarySectionV10IdentifierO_AC0R13ConfigurationCtFZ_0((uint64_t)v6, (uint64_t)v78);
  uint64_t v50 = v49;
  v32(v6, v3);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = sub_1C226C148(0, v17[2] + 1, 1, v17);
  }
  unint64_t v52 = v17[2];
  unint64_t v51 = v17[3];
  if (v52 >= v51 >> 1) {
    uint64_t v17 = sub_1C226C148((void *)(v51 > 1), v52 + 1, 1, v17);
  }
  v17[2] = v52 + 1;
  id v53 = &v17[2 * v52];
  v53[4] = v48;
  v53[5] = v50;
  v28(v6, *MEMORY[0x1E4F67600], v3);
  uint64_t v54 = _s15HealthRecordsUI20UDCDataSourceFactoryC017makeSectionedDataE03for13configuration0a10ExperienceC008SnapshotiE0_p0A12PlatformCore03AllI14SummarySectionV10IdentifierO_AC0R13ConfigurationCtFZ_0((uint64_t)v6, (uint64_t)v78);
  uint64_t v56 = v55;
  v32(v6, v3);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v17 = sub_1C226C148(0, v17[2] + 1, 1, v17);
  }
  uint64_t v57 = v76;
  unint64_t v59 = v17[2];
  unint64_t v58 = v17[3];
  if (v59 >= v58 >> 1) {
    uint64_t v17 = sub_1C226C148((void *)(v58 > 1), v59 + 1, 1, v17);
  }
  v17[2] = v59 + 1;
  id v60 = &v17[2 * v59];
  v60[4] = v54;
  _OWORD v60[5] = v56;
  uint64_t v61 = _s15HealthRecordsUI20UDCDataSourceFactoryC023makeNavigationItemsDataE013configuration0a10ExperienceC008SnapshotjE0_pAC20SectionConfigurationC_tFZ_0(v57);
  uint64_t v63 = v62;
  unint64_t v65 = v17[2];
  unint64_t v64 = v17[3];
  if (v65 >= v64 >> 1) {
    uint64_t v17 = sub_1C226C148((void *)(v64 > 1), v65 + 1, 1, v17);
  }
  uint64_t v66 = v75;
  v17[2] = v65 + 1;
  id v67 = &v17[2 * v65];
  v67[4] = v61;
  v67[5] = v63;
  uint64_t v68 = _s15HealthRecordsUI20UDCDataSourceFactoryC037makeRemovedCategoryNavigationItemDataE013configuration0a10ExperienceC008SnapshotlE0_pAC20SectionConfigurationC_tFZ_0(v66);
  uint64_t v70 = v69;
  unint64_t v72 = v17[2];
  unint64_t v71 = v17[3];
  if (v72 >= v71 >> 1) {
    uint64_t v17 = sub_1C226C148((void *)(v71 > 1), v72 + 1, 1, v17);
  }
  v17[2] = v72 + 1;
  id v73 = &v17[2 * v72];
  v73[4] = v68;
  v73[5] = v70;
  swift_release();
  swift_release();
  swift_release();
  return v17;
}

void *sub_1C2331F28()
{
  uint64_t v1 = (void *)sub_1C23326AC(1, 1, 0, 0, 0);
  uint64_t v2 = sub_1C23326AC(1, 0, 0, 0, 0);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  if ((v3 - 1) > 1)
  {
    id v8 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    _s15HealthRecordsUI20UDCDataSourceFactoryC014makePinnedDataE013configuration0a10ExperienceC008SnapshotiE0_pAC20SectionConfigurationC_tFZ_0(v1);
    uint64_t v5 = v4;
    uint64_t v7 = v6;
    id v8 = sub_1C226C148(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v10 = v8[2];
    unint64_t v9 = v8[3];
    if (v10 >= v9 >> 1) {
      id v8 = sub_1C226C148((void *)(v9 > 1), v10 + 1, 1, v8);
    }
    v8[2] = v10 + 1;
    uint64_t v11 = &v8[2 * v10];
    v11[4] = v5;
    long long v11[5] = v7;
  }
  uint64_t v12 = _s15HealthRecordsUI20UDCDataSourceFactoryC025makeUserDomainConceptDataE013configuration0a10ExperienceC008SnapshotkE0_pAC20SectionConfigurationC_tFZ_0((uint64_t)v1);
  uint64_t v14 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v8 = sub_1C226C148(0, v8[2] + 1, 1, v8);
  }
  unint64_t v16 = v8[2];
  unint64_t v15 = v8[3];
  if (v16 >= v15 >> 1) {
    id v8 = sub_1C226C148((void *)(v15 > 1), v16 + 1, 1, v8);
  }
  v8[2] = v16 + 1;
  uint64_t v17 = &v8[2 * v16];
  v17[4] = v12;
  v17[5] = v14;
  if (v3 == 2)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v18 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C254C730();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();

    uint64_t v22 = sub_1C23326AC(1, 0, v19, v21, 0);
    swift_bridgeObjectRelease();
    uint64_t v23 = _s15HealthRecordsUI20UDCDataSourceFactoryC023makeNavigationItemsDataE013configuration0a10ExperienceC008SnapshotjE0_pAC20SectionConfigurationC_tFZ_0(v2);
    uint64_t v25 = v24;
    unint64_t v27 = v8[2];
    unint64_t v26 = v8[3];
    if (v27 >= v26 >> 1) {
      id v8 = sub_1C226C148((void *)(v26 > 1), v27 + 1, 1, v8);
    }
    v8[2] = v27 + 1;
    id v28 = &v8[2 * v27];
    v28[4] = v23;
    v28[5] = v25;
    uint64_t v29 = _s15HealthRecordsUI20UDCDataSourceFactoryC037makeRemovedCategoryNavigationItemDataE013configuration0a10ExperienceC008SnapshotlE0_pAC20SectionConfigurationC_tFZ_0(v22);
    uint64_t v31 = v30;
    unint64_t v33 = v8[2];
    unint64_t v32 = v8[3];
    if (v33 >= v32 >> 1) {
      id v8 = sub_1C226C148((void *)(v32 > 1), v33 + 1, 1, v8);
    }
    v8[2] = v33 + 1;
    unint64_t v34 = &v8[2 * v33];
    v34[4] = v29;
    v34[5] = v31;
    swift_release();
  }
  swift_release();
  swift_release();
  return v8;
}

uint64_t sub_1C233223C()
{
  sub_1C2332A2C(0, (unint64_t *)&qword_1EA2DEA38, (uint64_t (*)(uint64_t))sub_1C22250F0, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C255CD90;
  unsigned __int8 v13 = 2;
  char v12 = *(unsigned char *)(v0 + 16);
  int v3 = *(void **)(v0 + 24);
  uint64_t v2 = *(void **)(v0 + 32);
  sub_1C21F4424(v0 + 40, (uint64_t)v11);
  __swift_project_boxed_opaque_existential_1Tm(v11, v11[3]);
  id v4 = v2;
  id v5 = v3;
  uint64_t v6 = (void *)sub_1C254CE10();
  id v7 = objc_allocWithZone((Class)type metadata accessor for UDCOlderOtherLabsDataSource());
  uint64_t v8 = sub_1C229DBF0(&v13, (uint64_t)&v12, v5, v2, v6);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  unint64_t v9 = sub_1C23329D4();
  *(void *)(v1 + 32) = v8;
  *(void *)(v1 + 40) = v9;
  return v1;
}

uint64_t sub_1C2332368()
{
  sub_1C2332A2C(0, (unint64_t *)&qword_1EA2DEA38, (uint64_t (*)(uint64_t))sub_1C22250F0, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C255CD90;
  unsigned __int8 v13 = 1;
  char v12 = *(unsigned char *)(v0 + 16);
  int v3 = *(void **)(v0 + 24);
  uint64_t v2 = *(void **)(v0 + 32);
  sub_1C21F4424(v0 + 40, (uint64_t)v11);
  __swift_project_boxed_opaque_existential_1Tm(v11, v11[3]);
  id v4 = v2;
  id v5 = v3;
  uint64_t v6 = (void *)sub_1C254CE10();
  id v7 = objc_allocWithZone((Class)type metadata accessor for UDCOlderOtherLabsDataSource());
  uint64_t v8 = sub_1C229DBF0(&v13, (uint64_t)&v12, v5, v2, v6);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  unint64_t v9 = sub_1C23329D4();
  *(void *)(v1 + 32) = v8;
  *(void *)(v1 + 40) = v9;
  return v1;
}

uint64_t _s15HealthRecordsUI45UserDomainConceptLatestViewDataSourceProviderC12categoryKind9predicate13sourceProfile5store11healthStore010collectionH018enableSwipeActionsAcA15DisplayCategoryV0M0O_So11NSPredicateC0A8Platform0jP0OAQ0a10ExperienceS0_pSo08HKHealthS0CSo012UICollectionH0CSbtcfC_0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = swift_allocObject();
  char v13 = *a1;
  sub_1C21F4424(a4, (uint64_t)v15);
  *(unsigned char *)(v12 + 80) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v12 + 16) = v13;
  *(void *)(v12 + 24) = a2;
  *(void *)(v12 + 32) = a3;
  sub_1C21F44EC(v15, v12 + 40);
  *(void *)(v12 + 88) = a5;
  swift_unknownObjectWeakAssign();

  __swift_destroy_boxed_opaque_existential_1Tm(a4);
  return v12;
}

uint64_t _s15HealthRecordsUI45UserDomainConceptLatestViewDataSourceProviderC12categoryKind9predicate13sourceProfile5store11healthStore010collectionH018enableSwipeActionsAcA15DisplayCategoryV0M0O_So11NSPredicateC0A8Platform0jP0OAQ0a10ExperienceS0_pSo08HKHealthS0CSo012UICollectionH0CSbtcfc_0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  char v12 = *a1;
  sub_1C21F4424(a4, (uint64_t)v14);
  *(unsigned char *)(v6 + 80) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v6 + 16) = v12;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  sub_1C21F44EC(v14, v6 + 40);
  *(void *)(v6 + 88) = a5;
  swift_unknownObjectWeakAssign();

  __swift_destroy_boxed_opaque_existential_1Tm(a4);
  return v6;
}

id *_s15HealthRecordsUI45UserDomainConceptLatestViewDataSourceProviderCfd_0()
{
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 5));
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t _s15HealthRecordsUI45UserDomainConceptLatestViewDataSourceProviderCfD_0()
{
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 5));
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2332694(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *a3;
  *(void *)(v5 + 16) = result + 1;
  uint64_t v6 = v5 + 16 * result;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a5;
  return result;
}

uint64_t sub_1C23326AC(int a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6 = v5;
  int v34 = a5;
  uint64_t v33 = a3;
  v32[1] = a1;
  uint64_t v9 = sub_1C254DB50();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  char v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)v32 - v14;
  uint64_t v16 = sub_1C254DA70();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_1C254DA90();
    if (!a4) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  sub_1C254DAE0();
  if (a4)
  {
LABEL_5:
    sub_1C254DA80();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v13, v9);
  }
LABEL_6:
  sub_1C254DAF0();
  sub_1C254DB20();
  sub_1C254DB30();
  sub_1C22DD8FC();
  uint64_t v21 = *(int *)(v20 + 48);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v15, v9);
  uint64_t v22 = MEMORY[0x1C875A200](v6 + 96);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  *(void *)&v19[v21] = v22;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E4F66498], v16);
  char v23 = *(unsigned char *)(v6 + 16);
  uint64_t v25 = *(void **)(v6 + 24);
  uint64_t v24 = *(void **)(v6 + 32);
  sub_1C21F4424(v6 + 40, (uint64_t)v35);
  char v26 = *(unsigned char *)(v6 + 80);
  type metadata accessor for UDCDataSourceFactory.SectionConfiguration();
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = v23;
  *(void *)(v27 + 24) = v25;
  *(void *)(v27 + 32) = v24;
  sub_1C21F44EC(v35, v27 + 40);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v27 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_layoutType, v19, v16);
  *(unsigned char *)(v27 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_navigationType) = v26;
  id v28 = (void *)(v27 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_footerText);
  *id v28 = v33;
  v28[1] = a4;
  *(unsigned char *)(v27 + OBJC_IVAR____TtCC15HealthRecordsUI20UDCDataSourceFactory20SectionConfiguration_sortByDate) = v34 & 1;
  swift_bridgeObjectRetain();
  id v29 = v25;
  id v30 = v24;
  return v27;
}

unint64_t sub_1C23329D4()
{
  unint64_t result = qword_1EA2E1240;
  if (!qword_1EA2E1240)
  {
    type metadata accessor for UDCOlderOtherLabsDataSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1240);
  }
  return result;
}

void sub_1C2332A2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for UserDomainConceptListViewDataSourceProvider()
{
  return self;
}

uint64_t method lookup function for UserDomainConceptListViewDataSourceProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UserDomainConceptListViewDataSourceProvider);
}

uint64_t dispatch thunk of UserDomainConceptListViewDataSourceProvider.__allocating_init(categoryKind:predicate:sourceProfile:store:healthStore:collectionView:enableSwipeActions:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of UserDomainConceptListViewDataSourceProvider.selectedDataSources(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of UserDomainConceptListViewDataSourceProvider.layoutType(swipeActions:showHeader:showFooter:estimatedRowHeight:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)v5 + 224))(a1, a2, a3, a4, a5 & 1);
}

uint64_t dispatch thunk of UserDomainConceptListViewDataSourceProvider.sectionConfiguration(swipeActions:showHeader:footerText:estimatedRowHeight:sortByDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)v6 + 232))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of UserDomainConceptListViewDataSourceProvider.makeDataSource(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t type metadata accessor for UserDomainConceptLatestViewDataSourceProvider()
{
  return self;
}

uint64_t type metadata accessor for UserDomainConceptAlphabeticalViewDataSourceProvider()
{
  return self;
}

uint64_t type metadata accessor for UserDomainConceptOtherViewDataSourceProvider()
{
  return self;
}

uint64_t type metadata accessor for UserDomainConceptOlderViewDataSourceProvider()
{
  return self;
}

unint64_t static ActionButtonCell.defaultReuseIdentifier.getter()
{
  return 0xD000000000000010;
}

id ActionButtonCell.titleLabel.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel);
}

void *sub_1C2332CD0()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_icon);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1C2332D7C(void *a1)
{
  sub_1C2333D04(a1);
}

void (*sub_1C2332DB4(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_icon;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C2332E20;
}

void sub_1C2332E20(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    uint64_t v6 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView);
    objc_msgSend(v6, sel_setHidden_, *(void *)(v4 + v5) == 0);
    objc_msgSend(v6, sel_setImage_, *(void *)(v4 + v5));
    sub_1C233387C();
  }
  free(v3);
}

uint64_t sub_1C2332EF8()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_actionEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1C2332F8C(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_actionEnabled);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_1C2332FD8())()
{
  return j__swift_endAccess;
}

id ActionButtonCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a3)
  {
    uint64_t v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id ActionButtonCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel;
  id v7 = self;
  unint64_t v8 = v3;
  id v9 = objc_msgSend(v7, sel_labelColor);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v10, sel_setFont_, 0);
  objc_msgSend(v10, sel_setNumberOfLines_, 1);
  objc_msgSend(v10, sel_setTextColor_, v9);

  *(void *)&v3[v6] = v10;
  *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabelLeadingConstraint] = 0;
  uint64_t v11 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView;
  *(void *)&v8[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_nonBusyTitleLabelColor] = 0;
  *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_icon] = 0;
  v8[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_actionEnabled] = 1;

  if (a3)
  {
    uint64_t v12 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  v16.receiver = v8;
  v16.super_class = (Class)type metadata accessor for ActionButtonCell();
  id v13 = objc_msgSendSuper2(&v16, sel_initWithStyle_reuseIdentifier_, a1, v12);

  id v14 = v13;
  sub_1C23332CC();

  return v14;
}

id sub_1C23332CC()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView];
  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v1, sel_setHidden_, 1);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel];
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v3 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB28C8]);
  objc_msgSend(v2, sel_setFont_, v3);

  id v4 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  id v5 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v5, sel_addSubview_, v1);

  id v6 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v6, sel_addSubview_, v2);

  id v7 = objc_msgSend(v1, sel_widthAnchor);
  id v8 = objc_msgSend(v1, sel_heightAnchor);
  id v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_multiplier_, v8, 1.0);

  objc_msgSend(v9, sel_setActive_, 1);
  id v10 = objc_msgSend(v1, sel_leadingAnchor);
  id v11 = objc_msgSend(v0, sel_contentView);
  id v12 = objc_msgSend(v11, sel_leadingAnchor);

  id v13 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v12, 16.0);
  objc_msgSend(v13, sel_setActive_, 1);

  id v14 = objc_msgSend(v1, sel_topAnchor);
  id v15 = objc_msgSend(v0, sel_contentView);
  id v16 = objc_msgSend(v15, sel_topAnchor);

  id v17 = objc_msgSend(v14, sel_constraintEqualToSystemSpacingBelowAnchor_multiplier_, v16, 1.0);
  objc_msgSend(v17, sel_setActive_, 1);

  id v18 = objc_msgSend(v0, sel_contentView);
  id v19 = objc_msgSend(v18, sel_bottomAnchor);

  id v20 = objc_msgSend(v1, sel_bottomAnchor);
  id v21 = objc_msgSend(v19, sel_constraintGreaterThanOrEqualToSystemSpacingBelowAnchor_multiplier_, v20, 1.0);

  objc_msgSend(v21, sel_setActive_, 1);
  id v22 = objc_msgSend(v2, sel_trailingAnchor);
  id v23 = objc_msgSend(v0, sel_contentView);
  id v24 = objc_msgSend(v23, sel_trailingAnchor);

  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v24, -16.0);
  objc_msgSend(v25, sel_setActive_, 1);

  id v26 = objc_msgSend(v2, sel_firstBaselineAnchor);
  id v27 = objc_msgSend(v0, sel_contentView);
  id v28 = objc_msgSend(v27, sel_topAnchor);

  id result = objc_msgSend(v2, sel_font);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v30 = result;
  objc_msgSend(result, sel__scaledValueForValue_, 29.0);
  double v32 = v31;

  id v33 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v28, v32);
  objc_msgSend(v33, sel_setActive_, 1);

  id v34 = objc_msgSend(v2, sel_lastBaselineAnchor);
  id v35 = objc_msgSend(v0, sel_contentView);
  id v36 = objc_msgSend(v35, sel_bottomAnchor);

  id result = objc_msgSend(v2, sel_font);
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v37 = result;
  objc_msgSend(result, sel__scaledValueForValue_, 15.0);
  double v39 = v38;

  id v40 = objc_msgSend(v34, sel_constraintEqualToAnchor_constant_, v36, -v39);
  objc_msgSend(v40, sel_setActive_, 1);

  return sub_1C233387C();
}

id sub_1C233387C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabelLeadingConstraint;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabelLeadingConstraint];
  if (v2) {
    objc_msgSend(v2, sel_setActive_, 0);
  }
  id v3 = &v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_icon];
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  id v5 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel], sel_leadingAnchor);
  if (v4)
  {
    id v6 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView], sel_trailingAnchor);
    id v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v6, 8.0);
  }
  else
  {
    id v8 = objc_msgSend(v0, sel_contentView);
    id v6 = objc_msgSend(v8, sel_leadingAnchor);

    id v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_constant_, v6, 16.0);
  }
  id v9 = v7;

  id v10 = *(void **)&v0[v1];
  *(void *)&v0[v1] = v9;

  id result = *(id *)&v0[v1];
  if (result) {
    return objc_msgSend(result, sel_setActive_, 1);
  }
  return result;
}

void sub_1C23339CC(char a1)
{
  if (a1)
  {
    id v2 = objc_msgSend(v1, sel_accessoryView);

    if (!v2)
    {
      id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
      id v4 = objc_msgSend(self, sel_secondaryLabelColor);
      objc_msgSend(v3, sel_setColor_, v4);

      objc_msgSend(v1, sel_setAccessoryView_, v3);
      objc_msgSend(v3, sel_startAnimating);
    }
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView], sel_setAlpha_, 0.5);
    uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_nonBusyTitleLabelColor;
    id v6 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_nonBusyTitleLabelColor];
    id v7 = v6;
    id v8 = v6;
    if (!v6)
    {
      id v8 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel], sel_textColor);
      id v7 = *(void **)&v1[v5];
    }
    *(void *)&v1[v5] = v8;
    id v9 = v6;

    id v10 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel];
    id v17 = objc_msgSend(self, sel_tertiaryLabelColor);
    objc_msgSend(v10, sel_setTextColor_, v17);
    id v11 = v17;
  }
  else
  {
    objc_msgSend(v1, sel_setAccessoryView_, 0);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView], sel_setAlpha_, 1.0);
    id v12 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel];
    uint64_t v13 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_nonBusyTitleLabelColor;
    id v14 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_nonBusyTitleLabelColor];
    if (v14)
    {
      id v15 = *(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_nonBusyTitleLabelColor];
    }
    else
    {
      id v15 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel], sel_textColor);
      id v14 = 0;
    }
    id v16 = v14;
    objc_msgSend(v12, sel_setTextColor_, v15);

    id v11 = *(void **)&v1[v13];
    *(void *)&v1[v13] = 0;
  }
}

id ActionButtonCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActionButtonCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C2333D04(void *a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_icon);
  swift_beginAccess();
  id v4 = (void *)*v3;
  *id v3 = a1;
  id v5 = a1;

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView);
  objc_msgSend(v6, sel_setHidden_, *v3 == 0);
  objc_msgSend(v6, sel_setImage_, *v3);
  return sub_1C233387C();
}

uint64_t type metadata accessor for ActionButtonCell()
{
  return self;
}

id sub_1C2333DC8@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  id v3 = (void **)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_icon);
  swift_beginAccess();
  id v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_1C2333E2C(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_1C2333D04(v1);
}

uint64_t sub_1C2333E7C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_actionEnabled);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1C2333ED0(char *a1, void *a2)
{
  char v2 = *a1;
  id v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_actionEnabled);
  uint64_t result = swift_beginAccess();
  *id v3 = v2;
  return result;
}

uint64_t method lookup function for ActionButtonCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ActionButtonCell);
}

uint64_t dispatch thunk of ActionButtonCell.icon.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ActionButtonCell.icon.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ActionButtonCell.icon.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of ActionButtonCell.actionEnabled.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ActionButtonCell.actionEnabled.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ActionButtonCell.actionEnabled.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ActionButtonCell.setBusy(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

void sub_1C23340AC()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabel;
  id v2 = objc_msgSend(self, sel_labelColor);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v3, sel_setFont_, 0);
  objc_msgSend(v3, sel_setNumberOfLines_, 1);
  objc_msgSend(v3, sel_setTextColor_, v2);

  *(void *)&v0[v1] = v3;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_titleLabelLeadingConstraint] = 0;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_iconView;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_nonBusyTitleLabelColor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_icon] = 0;
  v0[OBJC_IVAR____TtC15HealthRecordsUI16ActionButtonCell_actionEnabled] = 1;

  sub_1C25505F0();
  __break(1u);
}

uint64_t static DateInterval.pastSevenDays.getter()
{
  return sub_1C233422C((void (*)(char *))static DateInterval.weekInterval(ending:));
}

uint64_t static DateInterval.today.getter()
{
  return sub_1C233422C((void (*)(char *))static DateInterval.dayInterval(containing:));
}

uint64_t sub_1C233422C(void (*a1)(char *))
{
  uint64_t v2 = sub_1C254CAD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CA90();
  a1(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t static DateInterval.dayInterval(containing:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v38 = a2;
  uint64_t v2 = sub_1C254CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2334DDC(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  id v34 = (char *)&v31 - v7;
  uint64_t v8 = sub_1C254CCC0();
  uint64_t v31 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C254CAD0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v37 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  id v36 = (char *)&v31 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  id v33 = (char *)&v31 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  id v35 = (char *)&v31 - v21;
  MEMORY[0x1F4188790](v20);
  id v23 = (char *)&v31 - v22;
  sub_1C254CC80();
  sub_1C254CC00();
  id v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v11, v8);
  sub_1C254CC80();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F27BF0], v2);
  uint64_t v25 = (uint64_t)v34;
  sub_1C254CC60();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v24(v11, v31);
  id v26 = v33;
  id v27 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v27(v33, v32, v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v25, 1, v12) == 1)
  {
    id v28 = v35;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v35, v26, v12);
    sub_1C22178C0(v25);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
    id v28 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v35, v25, v12);
  }
  v27(v36, (uint64_t)v23, v12);
  v27(v37, (uint64_t)v28, v12);
  sub_1C254C4F0();
  id v29 = *(void (**)(char *, uint64_t))(v13 + 8);
  v29(v28, v12);
  return ((uint64_t (*)(char *, uint64_t))v29)(v23, v12);
}

uint64_t static DateInterval.dayInterval(containing:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C254CAD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_date);
  sub_1C254CA80();

  static DateInterval.dayInterval(containing:)((uint64_t)v7, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void static DateInterval.dayInterval(containing:)(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C254CAD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2334DDC(0, &qword_1EA2E1278, (uint64_t (*)(uint64_t))sub_1C2334E40, MEMORY[0x1E4F29518]);
  uint64_t v6 = (void *)sub_1C254F280();
  id v7 = objc_msgSend(v6, sel_date);
  sub_1C254CA80();

  static DateInterval.dayInterval(containing:)((uint64_t)v5, a1);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t static DateInterval.weekInterval(ending:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  uint64_t v2 = sub_1C254CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C254CCC0();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2334DDC(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)&v26 - v10;
  uint64_t v12 = sub_1C254CAD0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  id v29 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  id v28 = (char *)&v26 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v26 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v26 - v21;
  sub_1C254CC80();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F27BF0], v2);
  uint64_t v23 = v30;
  sub_1C254CC60();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v27);
  id v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v24(v20, v23, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v22, v20, v12);
    sub_1C22178C0((uint64_t)v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v22, v11, v12);
  }
  v24(v28, (uint64_t)v22, v12);
  v24(v29, v23, v12);
  sub_1C254C4F0();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v22, v12);
}

void sub_1C2334DDC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C2334E40()
{
  unint64_t result = qword_1EA2E1280;
  if (!qword_1EA2E1280)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E1280);
  }
  return result;
}

uint64_t DateInterval.contains(_:)(void *a1)
{
  uint64_t v2 = sub_1C254CAD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(a1, sel_date);
  sub_1C254CA80();

  LOBYTE(v6) = sub_1C254C510();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t DateInterval.contains(_:)()
{
  uint64_t v0 = sub_1C254CAD0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2334DDC(0, &qword_1EA2E1278, (uint64_t (*)(uint64_t))sub_1C2334E40, MEMORY[0x1E4F29518]);
  uint64_t v4 = (void *)sub_1C254F280();
  id v5 = objc_msgSend(v4, sel_date);
  sub_1C254CA80();

  LOBYTE(v5) = sub_1C254C510();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);

  return v5 & 1;
}

BOOL UIView.isRTL.getter()
{
  return objc_msgSend(v0, sel_effectiveUserInterfaceLayoutDirection) == (id)1;
}

uint64_t UIView.sizeThatFits(width:)(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C2550850();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v2, sel_sizeThatFits_, a1, 1.79769313e308);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBBEA8], v4);
  id v8 = objc_msgSend(v2, sel_traitCollection);
  objc_msgSend(v8, sel_displayScale);
  sub_1C254CDC0();
  objc_msgSend(v8, sel_displayScale);
  sub_1C254CDC0();

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

double UIView.height(forWidth:)(double a1)
{
  objc_msgSend(v1, sel_sizeThatFits_, a1, 1.79769313e308);
  return v2;
}

id sub_1C23352A8()
{
  id v0 = _sSo6UIViewC15HealthRecordsUIE11makeChevronAByFZ_0();
  return v0;
}

double UIView.size(forWidth:)(double a1)
{
  objc_msgSend(v1, sel_sizeThatFits_, a1, 1.79769313e308);
  return a1;
}

__C::CGRect __swiftcall UIView.insetRect(_:by:)(__C::CGRect _, NSDirectionalEdgeInsets by)
{
  double trailing = by.trailing;
  double leading = by.leading;
  double top = by.top;
  double height = _.size.height;
  double width = _.size.width;
  double y = _.origin.y;
  double x = _.origin.x;
  if (objc_msgSend(v2, sel_effectiveUserInterfaceLayoutDirection) == (id)1) {
    double v10 = trailing;
  }
  else {
    double v10 = leading;
  }
  double v11 = UIEdgeInsetsInsetRect(x, y, width, height, top, v10);
  result.size.double height = v14;
  result.size.double width = v13;
  result.origin.double y = v12;
  result.origin.double x = v11;
  return result;
}

id _sSo6UIViewC15HealthRecordsUIE11makeChevronAByFZ_0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
  objc_msgSend(v0, sel_setContentMode_, 4);
  sub_1C2335510();
  uint64_t v1 = (void *)sub_1C254FEF0();
  objc_msgSend(v0, sel_setImage_, v1);

  id v2 = objc_msgSend(self, sel_tertiaryLabelColor);
  objc_msgSend(v0, sel_setTintColor_, v2);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  LODWORD(v3) = 1148846080;
  objc_msgSend(v0, sel_setContentHuggingPriority_forAxis_, 0, v3);
  LODWORD(v4) = 1148846080;
  objc_msgSend(v0, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);
  return v0;
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

unint64_t sub_1C2335510()
{
  unint64_t result = qword_1EBB6EEB8;
  if (!qword_1EBB6EEB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB6EEB8);
  }
  return result;
}

unint64_t RecordCategoryViewController.ModeSegment.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 5;
  if (result < 5) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

uint64_t RecordCategoryViewController.ModeSegment.rawValue.getter()
{
  return *v0;
}

unint64_t sub_1C2335570()
{
  unint64_t result = qword_1EA2E1288;
  if (!qword_1EA2E1288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1288);
  }
  return result;
}

unint64_t sub_1C23355C4@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return RecordCategoryViewController.ModeSegment.init(rawValue:)(*a1, a2);
}

unsigned char *_s11ModeSegmentOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2335698);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordCategoryViewController.ModeSegment()
{
  return &type metadata for RecordCategoryViewController.ModeSegment;
}

uint64_t _s11DisplayModeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x1E) {
    goto LABEL_17;
  }
  if (a2 + 226 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 226) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 226;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 226;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 226;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v6 >= 0x1D) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *_s11DisplayModeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 226 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 226) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1D)
  {
    unsigned int v6 = ((a2 - 30) >> 8) + 1;
    *unint64_t result = a2 - 30;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2335848);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1C2335870(unsigned char *a1)
{
  int v1 = (char)*a1;
  if (v1 >= 0) {
    return *a1 >> 6;
  }
  else {
    return (v1 & 7u) + 2;
  }
}

unsigned char *sub_1C233588C(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_1C233589C(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *unint64_t result = *result & 7 | ((_BYTE)a2 << 6);
  }
  else {
    *unint64_t result = (a2 + 6) & 7 | 0x80;
  }
  return result;
}

ValueMetadata *_s11DisplayModeOMa()
{
  return &_s11DisplayModeON;
}

uint64_t sub_1C23358E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  if (v2 >> 6)
  {
    if (v2 >> 6 == 1)
    {
      if ((v3 & 0xC0) == 0x40) {
        return ((v3 ^ v2) & 0x3F) == 0;
      }
    }
    else if (v3 == 128)
    {
      return 1;
    }
  }
  else if (v3 < 0x40)
  {
    return ((v3 ^ v2) & 1) == 0;
  }
  return 0;
}

char *sub_1C2335944(unsigned char *a1)
{
  if (*a1 == 2) {
    return (char *)&unk_1F1D8E8A0;
  }
  sub_1C2335B10();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255D0E0;
  *(_WORD *)(inited + 32) = 513;
  *(unsigned char *)(inited + 34) = 5;
  int v1 = sub_1C226D850(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v4 = *((void *)v1 + 2);
  unint64_t v3 = *((void *)v1 + 3);
  if (v4 >= v3 >> 1) {
    int v1 = sub_1C226D850((char *)(v3 > 1), v4 + 1, 1, v1);
  }
  *((void *)v1 + 2) = v4 + 1;
  v1[v4 + 32] = 1;
  int v5 = *(unsigned __int8 *)(inited + 33);
  if (v5 != 5)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v1 = sub_1C226D850(0, *((void *)v1 + 2) + 1, 1, v1);
    }
    unint64_t v7 = *((void *)v1 + 2);
    unint64_t v6 = *((void *)v1 + 3);
    if (v7 >= v6 >> 1) {
      int v1 = sub_1C226D850((char *)(v6 > 1), v7 + 1, 1, v1);
    }
    *((void *)v1 + 2) = v7 + 1;
    v1[v7 + 32] = v5;
  }
  int v8 = *(unsigned __int8 *)(inited + 34);
  if (v8 != 5)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v1 = sub_1C226D850(0, *((void *)v1 + 2) + 1, 1, v1);
    }
    unint64_t v10 = *((void *)v1 + 2);
    unint64_t v9 = *((void *)v1 + 3);
    if (v10 >= v9 >> 1) {
      int v1 = sub_1C226D850((char *)(v9 > 1), v10 + 1, 1, v1);
    }
    *((void *)v1 + 2) = v10 + 1;
    v1[v10 + 32] = v8;
  }
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1C2335B10()
{
  if (!qword_1EA2E1290)
  {
    sub_1C2335B68();
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E1290);
    }
  }
}

void sub_1C2335B68()
{
  if (!qword_1EA2E1298)
  {
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E1298);
    }
  }
}

unsigned char *_s12NoDataReasonOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2335C8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12NoDataReasonOMa()
{
  return &_s12NoDataReasonON;
}

unint64_t sub_1C2335CC8()
{
  unint64_t result = qword_1EA2E12A0;
  if (!qword_1EA2E12A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E12A0);
  }
  return result;
}

uint64_t static ViewControllerFactoryError.== infix(_:_:)()
{
  return 1;
}

uint64_t ViewControllerFactoryError.hash(into:)()
{
  return sub_1C25509D0();
}

uint64_t ViewControllerFactoryError.hashValue.getter()
{
  return sub_1C2550A10();
}

BOOL static ViewControllerStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ViewControllerStyle.hash(into:)()
{
  return sub_1C25509D0();
}

uint64_t ViewControllerStyle.hashValue.getter()
{
  return sub_1C2550A10();
}

uint64_t ConceptViewControllerFactory.makeViewController(forConcept:fromDisplayCategory:highlightedRecord:using:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v16 = a2[1];
  long long v17 = *a2;
  long long v14 = a2[3];
  long long v15 = a2[2];
  uint64_t v10 = *((void *)a2 + 8);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2ADE8]), sel_initWithRawIdentifier_, a1);
  v18[0] = v17;
  v18[1] = v16;
  v18[2] = v15;
  v18[3] = v14;
  uint64_t v19 = v10;
  uint64_t v12 = (*(uint64_t (**)(id, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8))(v11, v18, a3, a4, a5, a6);

  return v12;
}

unint64_t sub_1C2335F0C()
{
  unint64_t result = qword_1EA2E12A8;
  if (!qword_1EA2E12A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E12A8);
  }
  return result;
}

unint64_t sub_1C2335F64()
{
  unint64_t result = qword_1EA2E12B0;
  if (!qword_1EA2E12B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E12B0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ViewControllerFactoryError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2336054);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewControllerFactoryError()
{
  return &type metadata for ViewControllerFactoryError;
}

unsigned char *storeEnumTagSinglePayload for ViewControllerStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2336158);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewControllerStyle()
{
  return &type metadata for ViewControllerStyle;
}

uint64_t dispatch thunk of AccountViewControllerFactory.makeViewController(forAccount:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AccountViewControllerFactory.makeSettingsViewControllerAssumingHealthRecordsAreAvailable(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AccountViewControllerFactory.makeAccountDetailViewController(forAccountID:using:style:sourceIdentifier:standalone:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of AccountViewControllerFactory.makeAccountDetailViewController(for:using:style:sourceIdentifier:standalone:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

uint64_t dispatch thunk of AccountViewControllerFactory.viewControllerIsAccountDetailViewController(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of AccountViewControllerFactory.makeAndPresentAddAccountViewController(for:from:onboardingContext:gatewayProxyToTry:sourceIdentifier:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 48))();
}

uint64_t dispatch thunk of AccountViewControllerFactory.makeAndPresentOnboardingTileViewController(for:from:sourceIdentifier:animated:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 56))();
}

uint64_t dispatch thunk of CategoryViewControllerFactory.makeViewController(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ConceptViewControllerFactory.makeViewController(forConcept:fromDisplayCategory:highlightedRecord:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of RecordViewControllerFactory.makeViewController(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of RecordViewControllerFactory.makeDetailViewController(for:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

unint64_t static AccountUpgradeTileCell.reuseIdentifier.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1C23362EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = OBJC_IVAR___HRAccountUpgradeTileCell_accounts;
  unint64_t v4 = *(void *)(v1 + OBJC_IVAR___HRAccountUpgradeTileCell_accounts);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v16 != 1) {
      goto LABEL_13;
    }
  }
  else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
  {
LABEL_13:
    uint64_t v17 = sub_1C254CB40();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v13 = v17;
    uint64_t v14 = a1;
    uint64_t v15 = 1;
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(v1 + v3);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C2550620();
    if (result) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_5:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v8 = (id)MEMORY[0x1C87588E0](0, v5);
  }
  else
  {
    if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v8 = *(id *)(v5 + 32);
  }
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v9, sel_identifier);

  sub_1C254CB20();
  uint64_t v11 = sub_1C254CB40();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  uint64_t v13 = v11;
  uint64_t v14 = a1;
  uint64_t v15 = 0;
LABEL_14:
  return v12(v14, v15, 1, v13);
}

id AccountUpgradeTileCell.__allocating_init(profile:presentingViewController:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return AccountUpgradeTileCell.init(profile:presentingViewController:)(a1, a2);
}

id AccountUpgradeTileCell.init(profile:presentingViewController:)(void *a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR___HRAccountUpgradeTileCell_accounts] = MEMORY[0x1E4FBC860];
  *(void *)&v2[OBJC_IVAR___HRAccountUpgradeTileCell_cancellable] = 0;
  *(void *)&v2[OBJC_IVAR___HRAccountUpgradeTileCell_tileView] = 0;
  *(void *)&v2[OBJC_IVAR___HRAccountUpgradeTileCell_profile] = a1;
  *(void *)&v2[OBJC_IVAR___HRAccountUpgradeTileCell_viewController] = a2;
  id v4 = a1;
  id v5 = a2;
  uint64_t v6 = (void *)sub_1C254F430();
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for AccountUpgradeTileCell();
  id v7 = objc_msgSendSuper2(&v11, sel_initWithStyle_reuseIdentifier_, 0, v6);

  id v8 = v7;
  sub_1C2337774();
  sub_1C2336768();
  id v9 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EA2DD778 != -1) {
    swift_once();
  }
  objc_msgSend(v9, sel_addObserver_selector_name_object_, v8, sel_reloadDataSource, qword_1EA2E2890, 0);

  return v8;
}

uint64_t type metadata accessor for AccountUpgradeTileCell()
{
  return self;
}

uint64_t sub_1C2336768()
{
  sub_1C233843C(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v31 - v2;
  sub_1C2260EF0();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2261050();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  uint64_t v33 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void **)(v0 + OBJC_IVAR___HRAccountUpgradeTileCell_profile);
  type metadata accessor for ClinicalAccountManager();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = MEMORY[0x1E4FBC870];
  v14[5] = 0;
  v14[6] = 0;
  v14[4] = v15;
  long long v14[2] = v13;
  id v16 = v13;
  v14[3] = objc_msgSend(v16, sel_clinicalAccountStore);
  id v17 = objc_msgSend(v16, sel_healthStore);
  type metadata accessor for AccountStatusSummaryTileSettingsManager();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = MEMORY[0x1E4FBC868];
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = v19;
  id v20 = v17;
  sub_1C21A6E94();

  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AC28];
  sub_1C226113C(0, (unint64_t *)&qword_1EA2DF330, MEMORY[0x1E4F1AC28]);
  sub_1C226100C(&qword_1EA2DF340, (unint64_t *)&qword_1EA2DF330, v21);
  swift_retain();
  sub_1C254EB10();
  sub_1C2338510(&qword_1EA2DF360, (void (*)(uint64_t))sub_1C2260EF0);
  uint64_t v22 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v35 = v22;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v34 = (id)sub_1C254FC70();
  uint64_t v23 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v3, 1, 1, v23);
  id v24 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
  sub_1C226113C(0, &qword_1EA2DF350, MEMORY[0x1E4F1AAE0]);
  sub_1C226100C(&qword_1EA2DF358, &qword_1EA2DF350, v24);
  sub_1C22611AC();
  sub_1C254EC70();
  sub_1C2338558((uint64_t)v3, (unint64_t *)&qword_1EBB6F4A0, (void (*)(uint64_t))v31[1]);

  swift_release();
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v31[0];
  swift_unknownObjectWeakInit();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v25;
  *(void *)(v27 + 24) = v18;
  sub_1C2338510(&qword_1EA2DF368, (void (*)(uint64_t))sub_1C2261050);
  swift_retain();
  uint64_t v28 = v32;
  uint64_t v29 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v28);
  *(void *)(v26 + OBJC_IVAR___HRAccountUpgradeTileCell_cancellable) = v29;
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1C2336CA4(unint64_t *a1, uint64_t a2)
{
  sub_1C233843C(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v58 = (char *)&v54 - v5;
  uint64_t v60 = sub_1C254CB40();
  uint64_t v6 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  id v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v54 - v10;
  uint64_t v12 = sub_1C254E290();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = *a1;
  swift_beginAccess();
  uint64_t v17 = MEMORY[0x1C875A200](a2 + 16);
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v69 = MEMORY[0x1E4FBC860];
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4F67690], v12);
    unint64_t v64 = sub_1C24F6714((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    unint64_t v63 = v16;
    uint64_t v56 = v8;
    uint64_t v57 = (char *)v18;
    uint64_t v59 = v6;
    if (v16 >> 62) {
      goto LABEL_38;
    }
    uint64_t v19 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v20 = v60;
    while (v19)
    {
      unint64_t v21 = 0;
      uint64_t v22 = v64[2];
      unint64_t v65 = v63 & 0xC000000000000001;
      uint64_t v66 = v22;
      unint64_t v61 = v63 + 32;
      uint64_t v62 = v63 & 0xFFFFFFFFFFFFFF8;
      uint64_t v23 = (void (**)(char *, uint64_t))(v59 + 8);
      uint64_t v55 = v64 + 9;
      while (1)
      {
        if (v65)
        {
          id v24 = (id)MEMORY[0x1C87588E0](v21, v63);
        }
        else
        {
          if (v21 >= *(void *)(v62 + 16)) {
            goto LABEL_36;
          }
          id v24 = *(id *)(v61 + 8 * v21);
        }
        uint64_t v25 = v24;
        if (__OFADD__(v21++, 1))
        {
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        id v27 = objc_msgSend(v24, sel_identifier);
        sub_1C254CB20();

        uint64_t v28 = sub_1C254CAF0();
        uint64_t v30 = v29;
        (*v23)(v11, v20);
        if (!v66) {
          goto LABEL_17;
        }
        if ((v64[4] != v28 || v64[5] != v30) && (sub_1C2550870() & 1) == 0)
        {
          if (v66 == 1) {
            goto LABEL_17;
          }
          if ((v64[6] != v28 || v64[7] != v30) && (sub_1C2550870() & 1) == 0) {
            break;
          }
        }

        swift_bridgeObjectRelease();
LABEL_6:
        if (v21 == v19) {
          goto LABEL_39;
        }
      }
      if (v66 == 2)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        id v31 = v25;
        MEMORY[0x1C8757C00]();
        if (*(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();

        goto LABEL_6;
      }
      uint64_t v32 = v55;
      uint64_t v33 = 2;
      while (1)
      {
        uint64_t v34 = v33 + 1;
        if (__OFADD__(v33, 1)) {
          break;
        }
        BOOL v35 = *(v32 - 1) == v28 && *v32 == v30;
        if (v35 || (sub_1C2550870() & 1) != 0)
        {

          swift_bridgeObjectRelease();
          uint64_t v20 = v60;
          goto LABEL_6;
        }
        v32 += 2;
        ++v33;
        BOOL v35 = v34 == v66;
        uint64_t v20 = v60;
        if (v35) {
          goto LABEL_17;
        }
      }
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1C2550620();
      uint64_t v20 = v60;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = OBJC_IVAR___HRAccountUpgradeTileCell_accounts;
    uint64_t v37 = v57;
    *(void *)&v57[OBJC_IVAR___HRAccountUpgradeTileCell_accounts] = v69;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v38 = *(char **)&v37[OBJC_IVAR___HRAccountUpgradeTileCell_tileView];
    if (v38)
    {
      uint64_t v39 = *(void *)&v38[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 24];
      uint64_t v40 = *(void *)&v38[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider + 32];
      __swift_project_boxed_opaque_existential_1Tm(&v38[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider], v39);
      id v41 = *(void (**)(uint64_t, uint64_t))(v40 + 48);
      uint64_t v42 = v38;
      uint64_t v43 = (uint64_t)v58;
      v41(v39, v40);
      uint64_t v45 = v59;
      uint64_t v44 = v60;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v43, 1, v60) == 1)
      {
        sub_1C2338558(v43, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
        unint64_t v46 = (char *)sub_1C22C9DF8();
        id v47 = sub_1C22C9C40();
        objc_msgSend(v46, sel_setImage_, v47);
      }
      else
      {
        uint64_t v48 = (uint64_t)v56;
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v56, v43, v44);
        if (qword_1EBB6D898 != -1) {
          swift_once();
        }
        uint64_t v49 = qword_1EBB6EB60;
        v67[1] = 0;
        v67[2] = 0;
        v67[0] = 1;
        char v68 = 1;
        unint64_t v46 = v42;
        sub_1C2406048(v48, v67, v49, v46);

        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v48, v44);
      }
    }
    unint64_t v50 = *(void *)&v37[v36];
    if (v50 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_1C2550620();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    objc_msgSend(v37, sel_setHidden_, v51 == 0);
    id v52 = objc_msgSend(*(id *)&v37[OBJC_IVAR___HRAccountUpgradeTileCell_viewController], sel_tableView);
    if (v52)
    {
      id v53 = v52;
      swift_bridgeObjectRelease();
      objc_msgSend(v53, sel_reloadData);
    }
    else
    {
      __break(1u);
    }
  }
}

BOOL sub_1C2337434()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR___HRAccountUpgradeTileCell_accounts);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  return v2 != 0;
}

uint64_t sub_1C23374A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = sub_1C254F820();
  v4[4] = sub_1C254F810();
  return MEMORY[0x1F4188298](sub_1C233751C, 0, 0);
}

uint64_t sub_1C233751C()
{
  *(void *)(v0 + 40) = sub_1C254F810();
  uint64_t v2 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C23375A8, v2, v1);
}

uint64_t sub_1C23375A8()
{
  swift_release();
  sub_1C2336768();
  uint64_t v1 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C2220E8C, v1, v0);
}

void sub_1C2337774()
{
  uint64_t v1 = OBJC_IVAR___HRAccountUpgradeTileCell_tileView;
  if (*(void *)&v0[OBJC_IVAR___HRAccountUpgradeTileCell_tileView]) {
    return;
  }
  uint64_t v2 = (char *)objc_allocWithZone((Class)type metadata accessor for AccountUpgradeTileView());
  uint64_t v3 = v0;
  id v4 = sub_1C234912C((uint64_t)v3, v2);
  uint64_t v5 = *(void **)&v0[v1];
  *(void *)&v0[v1] = v4;

  id v6 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v6);

  id v7 = objc_msgSend(v3, sel_contentView);
  if (!*(void *)&v0[v1])
  {
    __break(1u);
    goto LABEL_11;
  }
  id v8 = v7;
  objc_msgSend(v7, sel_addSubview_);

  uint64_t v9 = *(void **)&v0[v1];
  if (!v9)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  objc_msgSend(v9, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB2788]);
  uint64_t v10 = *(void **)&v0[v1];
  if (!v10)
  {
LABEL_12:
    __break(1u);
    return;
  }
  id v11 = v10;
  id v12 = objc_msgSend(v3, sel_contentView);
  if (qword_1EA2DD958 != -1) {
    swift_once();
  }
  objc_msgSend(v11, sel_hk_alignConstraintsWithView_insets_, xmmword_1EA2E52A8, *(double *)&qword_1EA2E52B8, unk_1EA2E52C0);
}

void sub_1C2337930()
{
  sub_1C233843C(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v26 - v2;
  id v4 = *(void **)&v0[OBJC_IVAR___HRAccountUpgradeTileCell_profile];
  type metadata accessor for ClinicalAccountManager();
  uint64_t v5 = (void *)swift_allocObject();
  uint64_t v6 = MEMORY[0x1E4FBC870];
  v5[5] = 0;
  v5[6] = 0;
  v5[4] = v6;
  v5[2] = v4;
  v5[3] = objc_msgSend(v4, sel_clinicalAccountStore);
  uint64_t v7 = OBJC_IVAR___HRAccountUpgradeTileCell_accounts;
  unint64_t v8 = *(void *)&v0[OBJC_IVAR___HRAccountUpgradeTileCell_accounts];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v14 >= 2) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
LABEL_3:
    uint64_t v9 = *(void **)&v0[OBJC_IVAR___HRAccountUpgradeTileCell_viewController];
    id v10 = objc_msgSend(v9, sel_parentViewController);
    if (!v10) {
      id v10 = v9;
    }
    id v27 = v10;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v0;
    id v12 = v0;
    ClinicalAccountManager.presentAccounts(presentingViewController:completion:)(v27, (uint64_t)sub_1C2338348, v11);
    swift_release();
    swift_release();
    uint64_t v13 = v27;

    return;
  }
  unint64_t v15 = *(void *)&v0[v7];
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1C2550620()) {
      goto LABEL_11;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v16) {
    goto LABEL_18;
  }
LABEL_11:
  if ((v15 & 0xC000000000000001) != 0)
  {
    id v17 = (id)MEMORY[0x1C87588E0](0, v15);
  }
  else
  {
    if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v17 = *(id *)(v15 + 32);
  }
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void **)&v0[OBJC_IVAR___HRAccountUpgradeTileCell_viewController];
  id v20 = objc_msgSend(v19, sel_parentViewController);
  if (!v20) {
    id v20 = v19;
  }
  type metadata accessor for ClinicalAccountUpgradeManager();
  swift_allocObject();
  id v21 = v18;
  swift_retain();
  id v22 = v20;
  uint64_t v23 = sub_1C244C200(v21, (uint64_t)v5, v22);

  swift_release();
  uint64_t v24 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v3, 1, 1, v24);
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = 0;
  void v25[3] = 0;
  v25[4] = v23;
  sub_1C24D0A0C((uint64_t)v3, (uint64_t)&unk_1EA2DF398, (uint64_t)v25);
  swift_release();

  swift_release();
}

uint64_t sub_1C2337CE8()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR___HRAccountUpgradeTileCell_profile], sel_healthStore);
  type metadata accessor for AccountStatusSummaryTileSettingsManager();
  uint64_t inited = swift_initStackObject();
  uint64_t v4 = MEMORY[0x1E4FBC868];
  *(void *)(inited + 16) = v2;
  *(void *)(inited + 24) = v4;
  sub_1C21A6E94();
  unint64_t v5 = *(void *)&v1[OBJC_IVAR___HRAccountUpgradeTileCell_accounts];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  swift_bridgeObjectRetain();
  uint64_t v7 = v1;
  sub_1C24F5B48(v5, (uint64_t)sub_1C2338218, v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_setDeallocating();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2337DEC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1C233843C(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v8 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1C254F820();
  id v9 = a1;
  uint64_t v10 = sub_1C254F810();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = MEMORY[0x1E4FBCFD8];
  v11[2] = v10;
  v11[3] = v12;
  void v11[4] = v9;
  sub_1C24D0A0C((uint64_t)v7, a3, (uint64_t)v11);
  return swift_release();
}

id AccountUpgradeTileCell.__allocating_init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a3)
  {
    uint64_t v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

void AccountUpgradeTileCell.init(style:reuseIdentifier:)()
{
}

id AccountUpgradeTileCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountUpgradeTileCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL sub_1C23380A4()
{
  unint64_t v1 = *(void *)(*v0 + OBJC_IVAR___HRAccountUpgradeTileCell_accounts);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  return v2 > 1;
}

uint64_t sub_1C2338114@<X0>(uint64_t a1@<X8>)
{
  return sub_1C23362EC(a1);
}

void sub_1C2338138()
{
}

uint64_t sub_1C233815C()
{
  return sub_1C2337CE8();
}

uint64_t method lookup function for AccountUpgradeTileCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountUpgradeTileCell);
}

uint64_t dispatch thunk of AccountUpgradeTileCell.__allocating_init(profile:presentingViewController:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of AccountUpgradeTileCell.hasUpgradableAccounts.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t sub_1C23381E0()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2338218()
{
  return sub_1C2337DEC(*(void **)(v0 + 16), (uint64_t)&unk_1F1D95380, (uint64_t)&unk_1EA2E12E8);
}

uint64_t sub_1C2338254(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_1C2223E3C;
  return sub_1C23374A0(a1, v4, v5, v6);
}

uint64_t sub_1C2338308()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2338348()
{
  return sub_1C2337DEC(*(void **)(v0 + 16), (uint64_t)&unk_1F1D953F8, (uint64_t)&unk_1EA2E12F0);
}

uint64_t sub_1C2338384(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_1C222399C;
  return sub_1C23374A0(a1, v4, v5, v6);
}

void sub_1C233843C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2338490()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C23384C8()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C2338508(unint64_t *a1)
{
  sub_1C2336CA4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C2338510(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2338558(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C233843C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id PDFConfigurationViewController.__allocating_init(profile:account:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  memset(v9, 0, sizeof(v9));
  uint64_t v10 = 0;
  id v6 = objc_allocWithZone((Class)type metadata accessor for PDFConfigurationViewController());
  id v7 = PDFConfigurationViewController.init(profile:account:category:)(a1, a2, (uint64_t *)v9);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v7;
}

id sub_1C2338648()
{
  uint64_t v1 = OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___cancelBarButtonItem;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___cancelBarButtonItem);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___cancelBarButtonItem);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 1, v0, sel_didTapCancel_);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C23386D0()
{
  uint64_t v1 = OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___actionBarButtonItem;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___actionBarButtonItem);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___actionBarButtonItem);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 9, v0, sel_didTapSave_);
    objc_msgSend(v4, sel_setEnabled_, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C233876C()
{
  uint64_t v1 = OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___tableView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___tableView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___tableView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ContentSizedTableView()), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setScrollEnabled_, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C233881C()
{
  uint64_t v1 = OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___collectionView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___collectionView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___collectionView);
  }
  else
  {
    uint64_t v4 = v0;
    sub_1C233A7D4();
    id v5 = objc_allocWithZone((Class)sub_1C254DC40());
    id v6 = (void *)sub_1C254DC30();
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v6, sel_setShowsHorizontalScrollIndicator_, 0);
    id v7 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1C23388CC()
{
  uint64_t v1 = OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___scrollView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___scrollView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___scrollView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BE0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1C2338964()
{
  uint64_t v1 = OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfPaddingConstraints;
  if (*(void *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfPaddingConstraints))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfPaddingConstraints);
  }
  else
  {
    uint64_t v3 = v0;
    sub_1C2340900(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C255CD70;
    id v5 = sub_1C233881C();
    id v6 = objc_msgSend(v5, sel_topAnchor);

    id v7 = sub_1C233876C();
    id v8 = objc_msgSend(v7, sel_bottomAnchor);

    uint64_t v9 = OBJC_IVAR___HRPDFConfigurationViewController_pdfPadding;
    id v10 = objc_msgSend(v6, sel_constraintEqualToAnchor_constant_, v8, *(double *)(v3 + OBJC_IVAR___HRPDFConfigurationViewController_pdfPadding));

    *(void *)(v4 + 32) = v10;
    id v11 = sub_1C23388CC();
    id v12 = objc_msgSend(v11, sel_bottomAnchor);

    id v13 = sub_1C233881C();
    id v14 = objc_msgSend(v13, sel_bottomAnchor);

    id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, *(double *)(v3 + v9));
    *(void *)(v4 + 40) = v15;
    sub_1C254F730();
    uint64_t v2 = v4;
    *(void *)(v3 + v1) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

id sub_1C2338B38()
{
  uint64_t v1 = OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfHeightConstraint;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfHeightConstraint);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfHeightConstraint);
  }
  else
  {
    id v4 = sub_1C233881C();
    id v5 = objc_msgSend(v4, sel_heightAnchor);

    id v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, 0.0);
    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id PDFConfigurationViewController.init(profile:account:)(void *a1, void *a2)
{
  memset(v7, 0, sizeof(v7));
  uint64_t v8 = 0;
  id v4 = objc_allocWithZone((Class)type metadata accessor for PDFConfigurationViewController());
  id v5 = PDFConfigurationViewController.init(profile:account:category:)(a1, a2, (uint64_t *)v7);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

id PDFConfigurationViewController.__allocating_init(profile:account:category:)(void *a1, void *a2, uint64_t *a3)
{
  id v7 = objc_allocWithZone(v3);
  return PDFConfigurationViewController.init(profile:account:category:)(a1, a2, a3);
}

uint64_t type metadata accessor for PDFConfigurationViewController()
{
  return self;
}

id PDFConfigurationViewController.init(profile:account:category:)(void *a1, void *a2, uint64_t *a3)
{
  id v68 = a2;
  id v73 = a1;
  uint64_t v5 = sub_1C254CBD0();
  MEMORY[0x1F4188790](v5 - 8);
  id v67 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254CAD0();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v72 = (uint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254CCC0();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v71 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s13ConfigurationVMa();
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v69 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v70 = (uint64_t)&v54 - v14;
  uint64_t v57 = (void *)sub_1C254FC60();
  uint64_t v55 = *(v57 - 1);
  MEMORY[0x1F4188790](v57);
  uint64_t v56 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C254FC00();
  MEMORY[0x1F4188790](v16);
  uint64_t v17 = sub_1C254F200();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v66 = *a3;
  uint64_t v65 = a3[1];
  uint64_t v64 = a3[2];
  uint64_t v63 = a3[3];
  uint64_t v62 = a3[4];
  uint64_t v61 = a3[5];
  uint64_t v60 = a3[6];
  uint64_t v59 = a3[7];
  uint64_t v58 = a3[8];
  uint64_t v18 = &v3[OBJC_IVAR___HRPDFConfigurationViewController_tableCellIdentifier];
  *(void *)uint64_t v18 = 1819043139;
  *((void *)v18 + 1) = 0xE400000000000000;
  *(void *)&v3[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___cancelBarButtonItem] = 0;
  *(void *)&v3[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___actionBarButtonItem] = 0;
  *(void *)&v3[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___tableView] = 0;
  *(void *)&v3[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___collectionView] = 0;
  *(void *)&v3[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___scrollView] = 0;
  *(void *)&v3[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView] = 0;
  *(void *)&v3[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView] = 0;
  *(void *)&v3[OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView] = 0;
  uint64_t v19 = OBJC_IVAR___HRPDFConfigurationViewController_pdfPadding;
  uint64_t v20 = qword_1EA2DD6E0;
  id v21 = v3;
  if (v20 != -1) {
    swift_once();
  }
  *(void *)&v3[v19] = qword_1EA2E1308;
  *(void *)&v21[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfPaddingConstraints] = 0;
  *(void *)&v21[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfHeightConstraint] = 0;
  id v22 = &v21[OBJC_IVAR___HRPDFConfigurationViewController_state];
  *(void *)id v22 = 0;
  *((void *)v22 + 1) = 0;
  *((void *)v22 + 2) = 0;
  *((void *)v22 + 3) = 1;
  *(void *)&v21[OBJC_IVAR___HRPDFConfigurationViewController_dataProviderToken] = 0;
  *(void *)&v21[OBJC_IVAR___HRPDFConfigurationViewController_generatorCancellable] = 0;
  *(void *)&v21[OBJC_IVAR___HRPDFConfigurationViewController_previewCancellable] = 0;
  uint64_t v23 = &v21[OBJC_IVAR___HRPDFConfigurationViewController_pdfGenerationToken];
  *(_OWORD *)uint64_t v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  uint64_t v24 = OBJC_IVAR___HRPDFConfigurationViewController_queue;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  sub_1C254F1E0();
  v75[0] = MEMORY[0x1E4FBC860];
  sub_1C23406D0((unint64_t *)&qword_1EBB6FF88, MEMORY[0x1E4FBCC10]);
  uint64_t v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C21ACE4C(0, &qword_1EBB6FF50, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C233F188((unint64_t *)&qword_1EBB6FF58, &qword_1EBB6FF50, v25);
  sub_1C2550200();
  (*(void (**)(char *, void, void *))(v55 + 104))(v56, *MEMORY[0x1E4FBCC58], v57);
  *(void *)&v21[v24] = sub_1C254FCB0();
  id v26 = v73;
  swift_unknownObjectUnownedInit();
  *(void *)&v21[OBJC_IVAR___HRPDFConfigurationViewController_previewDataSource] = objc_msgSend(objc_allocWithZone((Class)sub_1C254D830()), sel_init);
  id v27 = objc_msgSend(v26, sel_conceptStore);
  uint64_t v28 = (objc_class *)type metadata accessor for MedicalRecordFormatter();
  uint64_t v29 = (char *)objc_allocWithZone(v28);
  *(void *)&v29[OBJC_IVAR___HRMedicalRecordFormatter_store] = v27;
  *(void *)&v29[OBJC_IVAR___HRMedicalRecordFormatter_context] = 0;
  v76.receiver = v29;
  v76.super_class = v28;
  uint64_t v57 = objc_msgSendSuper2(&v76, sel_init);
  sub_1C254CC80();
  sub_1C254CAC0();
  id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v30, sel_setDateStyle_, 2);
  objc_msgSend(v30, sel_setTimeStyle_, 0);
  if (qword_1EA2DD718 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1C254CD20();
  __swift_project_value_buffer(v31, (uint64_t)qword_1EA2E2020);
  uint64_t v32 = (void *)sub_1C254CD10();
  objc_msgSend(v30, sel_setTimeZone_, v32);

  id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  uint64_t v34 = (void *)sub_1C254F430();
  objc_msgSend(v33, sel_setDateFormat_, v34);

  BOOL v35 = (void *)sub_1C254CD10();
  objc_msgSend(v33, sel_setTimeZone_, v35);

  id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  objc_msgSend(v36, sel_setDateStyle_, 1);
  objc_msgSend(v36, sel_setTimeStyle_, 0);
  uint64_t v37 = (void *)sub_1C254CD10();
  objc_msgSend(v36, sel_setTimeZone_, v37);

  uint64_t v38 = (uint64_t)v67;
  sub_1C254CBC0();
  id v39 = objc_msgSend(self, sel_currentTraitCollection);
  uint64_t v40 = (char *)objc_msgSend(v39, sel_layoutDirection);

  id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28EE0]), sel_init);
  objc_msgSend(v41, sel_setMinimumFractionDigits_, 0);
  objc_msgSend(v41, sel_setMaximumFractionDigits_, 2);
  id v42 = v57;
  uint64_t v43 = v70;
  sub_1C2391B78(v71, v72, v30, v33, v36, v38, v40, v41, v70, (uint64_t)v57);
  v75[0] = v66;
  v75[1] = v65;
  v75[2] = v64;
  v75[3] = v63;
  v75[4] = v62;
  v75[5] = v61;
  v75[6] = v60;
  v75[7] = v59;
  v75[8] = v58;
  uint64_t v44 = v69;
  sub_1C22177F8(v43, v69);
  type metadata accessor for PDFConfigurationDataSource();
  swift_allocObject();
  id v45 = v68;
  id v46 = v68;
  *(void *)&v21[OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource] = sub_1C245B93C(v45, v75, v44);
  id v47 = v73;
  id v48 = objc_msgSend(v73, sel_healthStore);
  type metadata accessor for PDFDataProvider();
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v48;
  *(void *)&v21[OBJC_IVAR___HRPDFConfigurationViewController_dataProvider] = v49;
  id v50 = objc_msgSend(v47, sel_healthStore);
  sub_1C22177F8(v43, v44);
  type metadata accessor for PDFReportGenerator();
  swift_allocObject();
  *(void *)&v21[OBJC_IVAR___HRPDFConfigurationViewController_reportGenerator] = sub_1C23DDD8C((uint64_t)v50, v44);

  uint64_t v51 = (objc_class *)type metadata accessor for PDFConfigurationViewController();
  v74.receiver = v21;
  v74.super_class = v51;
  id v52 = objc_msgSendSuper2(&v74, sel_initWithNibName_bundle_, 0, 0);

  sub_1C221810C(v43);
  return v52;
}

void sub_1C233976C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254DC10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (objc_class *)type metadata accessor for PDFConfigurationViewController();
  v88.receiver = v0;
  v88.super_class = v6;
  objc_msgSendSuper2(&v88, sel_viewDidLoad);
  uint64_t v7 = *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource];
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v9 = objc_msgSend(Strong, sel_clinicalAccountStore);

  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (*(void *)(v7 + 104))
  {
    uint64_t v11 = swift_retain();
    sub_1C233A270(v11);
  }
  else
  {
    uint64_t v12 = (void *)swift_allocObject();
    void v12[2] = v7;
    v12[3] = sub_1C233F7D4;
    v12[4] = v10;
    aBlock[4] = sub_1C233F824;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C233F830;
    aBlock[3] = &block_descriptor_35;
    uint64_t v13 = _Block_copy(aBlock);
    swift_retain_n();
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_fetchAllAccountsWithCompletion_, v13);
    _Block_release(v13);
  }
  swift_release_n();

  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v14 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v15 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v15);

  id v16 = objc_msgSend(v1, sel_navigationItem);
  id v17 = sub_1C2338648();
  objc_msgSend(v16, sel_setLeftBarButtonItem_, v17);

  id v18 = objc_msgSend(v1, sel_navigationItem);
  id v19 = sub_1C23386D0();
  objc_msgSend(v18, sel_setRightBarButtonItem_, v19);

  id v20 = objc_msgSend(v1, sel_view);
  if (!v20)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v21 = v20;
  id v22 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
  objc_msgSend(v21, sel_setBackgroundColor_, v22);

  id v23 = sub_1C233876C();
  objc_msgSend(v23, sel_setDelegate_, v1);

  id v24 = sub_1C233876C();
  objc_msgSend(v24, sel_setDataSource_, v1);

  id v25 = sub_1C233876C();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E13C8);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v27 = (void *)sub_1C254F430();
  objc_msgSend(v25, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v27);

  id v28 = sub_1C233876C();
  id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 2.22507386e-308);
  objc_msgSend(v28, sel_setTableFooterView_, v29);

  id v30 = sub_1C233876C();
  objc_msgSend(v30, sel_setSectionFooterHeight_, 0.0);

  id v31 = sub_1C233881C();
  objc_msgSend(v31, sel_setDataSource_, *(void *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_previewDataSource]);

  id v32 = sub_1C233881C();
  id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1AA0]), sel_initWithTarget_action_, v1, sel_didPinchPDF_);
  objc_msgSend(v32, sel_addGestureRecognizer_, v33);

  id v34 = sub_1C233881C();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F66530], v2);
  sub_1C254DC20();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v35 = objc_msgSend(v1, sel_view);
  if (!v35)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v36 = v35;
  id v37 = sub_1C23388CC();
  objc_msgSend(v36, sel_addSubview_, v37);

  id v38 = sub_1C23388CC();
  id v39 = sub_1C233876C();
  objc_msgSend(v38, sel_addSubview_, v39);

  id v40 = sub_1C23388CC();
  id v41 = sub_1C233881C();
  objc_msgSend(v40, sel_addSubview_, v41);

  id v42 = sub_1C23388CC();
  id v43 = objc_msgSend(v1, sel_view);
  objc_msgSend(v42, sel_hk_alignConstraintsWithView_, v43);

  uint64_t v44 = self;
  sub_1C2338964();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  id v45 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v86 = v44;
  objc_msgSend(v44, sel_activateConstraints_, v45);

  sub_1C2340900(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1C2565090;
  id v47 = sub_1C233876C();
  id v48 = objc_msgSend(v47, sel_topAnchor);

  id v49 = sub_1C23388CC();
  id v50 = objc_msgSend(v49, sel_topAnchor);

  id v51 = objc_msgSend(v48, sel_constraintEqualToAnchor_, v50);
  *(void *)(v46 + 32) = v51;
  id v52 = sub_1C233876C();
  id v53 = objc_msgSend(v52, sel_leadingAnchor);

  id v54 = sub_1C23388CC();
  id v55 = objc_msgSend(v54, sel_leadingAnchor);

  id v56 = objc_msgSend(v53, sel_constraintEqualToAnchor_, v55);
  *(void *)(v46 + 40) = v56;
  id v57 = sub_1C233876C();
  id v58 = objc_msgSend(v57, sel_widthAnchor);

  id v59 = objc_msgSend(v1, sel_view);
  if (!v59)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v60 = v59;
  id v61 = objc_msgSend(v59, sel_widthAnchor);

  id v62 = objc_msgSend(v58, sel_constraintEqualToAnchor_, v61);
  *(void *)(v46 + 48) = v62;
  id v63 = sub_1C233876C();
  id v64 = objc_msgSend(v63, sel_trailingAnchor);

  id v65 = sub_1C23388CC();
  id v66 = objc_msgSend(v65, sel_trailingAnchor);

  id v67 = objc_msgSend(v64, sel_constraintEqualToAnchor_, v66);
  *(void *)(v46 + 56) = v67;
  id v68 = sub_1C233881C();
  id v69 = objc_msgSend(v68, sel_leadingAnchor);

  id v70 = sub_1C23388CC();
  id v71 = objc_msgSend(v70, sel_leadingAnchor);

  id v72 = objc_msgSend(v69, sel_constraintEqualToAnchor_, v71);
  *(void *)(v46 + 64) = v72;
  id v73 = sub_1C233881C();
  id v74 = objc_msgSend(v73, sel_widthAnchor);

  id v75 = objc_msgSend(v1, sel_view);
  if (v75)
  {
    objc_super v76 = v75;
    id v77 = objc_msgSend(v75, sel_widthAnchor);

    id v78 = objc_msgSend(v74, sel_constraintEqualToAnchor_, v77);
    *(void *)(v46 + 72) = v78;
    *(void *)(v46 + 80) = sub_1C2338B38();
    id v79 = sub_1C233881C();
    id v80 = objc_msgSend(v79, sel_trailingAnchor);

    id v81 = sub_1C23388CC();
    id v82 = objc_msgSend(v81, sel_trailingAnchor);

    id v83 = objc_msgSend(v80, sel_constraintEqualToAnchor_, v82);
    *(void *)(v46 + 88) = v83;
    aBlock[0] = v46;
    sub_1C254F730();
    uint64_t v84 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    objc_msgSend(v86, sel_activateConstraints_, v84);

    return;
  }
LABEL_14:
  __break(1u);
}

uint64_t sub_1C233A270(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C875A200](v1);
  if (result)
  {
    uint64_t v3 = (char *)result;
    uint64_t v4 = swift_allocObject();
    swift_beginAccess();
    uint64_t v5 = (void *)MEMORY[0x1C875A200](v1);
    swift_unknownObjectWeakInit();

    uint64_t v6 = *(NSObject **)&v3[OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource];
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v7;
    v8[3] = sub_1C234094C;
    v8[4] = v4;
    swift_retain_n();
    swift_retain();
    uint64_t v9 = sub_1C2492DAC(v6, 1, (uint64_t)sub_1C2340994, (uint64_t)v8);
    swift_release();
    swift_release();
    *(void *)&v3[OBJC_IVAR___HRPDFConfigurationViewController_dataProviderToken] = v9;

    swift_release_n();
    return swift_release();
  }
  return result;
}

void sub_1C233A3F8(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C875A200](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_1C233B114();
  }
}

void sub_1C233A54C()
{
  id v1 = sub_1C233A7D4();
  id v2 = sub_1C233881C();
  objc_msgSend(v2, sel_setCollectionViewLayout_animated_, v1, 0);

  objc_msgSend(v1, sel_itemSize);
  double v4 = v3;
  id v5 = sub_1C2338B38();
  objc_msgSend(v5, sel_setConstant_, v4);

  id v6 = sub_1C23388CC();
  id v7 = objc_msgSend(v6, sel_safeAreaLayoutGuide);

  objc_msgSend(v7, sel_layoutFrame);
  double Height = CGRectGetHeight(v22);
  id v9 = sub_1C233876C();
  objc_msgSend(v9, sel_contentSize);
  double v11 = v10;

  double v12 = (Height - v11 - v4) * 0.5;
  if (qword_1EA2DD6E0 != -1) {
    swift_once();
  }
  double v13 = *(double *)&qword_1EA2E1308;
  if (v12 > *(double *)&qword_1EA2E1308) {
    double v13 = v12;
  }
  uint64_t v14 = OBJC_IVAR___HRPDFConfigurationViewController_pdfPadding;
  if (v13 == *(double *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pdfPadding])
  {

LABEL_17:
    v21.receiver = v0;
    v21.super_class = (Class)type metadata accessor for PDFConfigurationViewController();
    objc_msgSendSuper2(&v21, sel_viewDidLayoutSubviews);

    return;
  }
  *(double *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pdfPadding] = v13;
  unint64_t v15 = sub_1C2338964();
  unint64_t v16 = v15;
  if (!(v15 >> 62))
  {
    uint64_t v17 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_9;
    }
LABEL_16:

    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C2550620();
  if (!v17) {
    goto LABEL_16;
  }
LABEL_9:
  if (v17 >= 1)
  {
    for (uint64_t i = 0; i != v17; ++i)
    {
      if ((v16 & 0xC000000000000001) != 0) {
        id v19 = (id)MEMORY[0x1C87588E0](i, v16);
      }
      else {
        id v19 = *(id *)(v16 + 8 * i + 32);
      }
      id v20 = v19;
      objc_msgSend(v19, sel_setConstant_, *(double *)&v0[v14]);
    }
    goto LABEL_16;
  }
  __break(1u);
}

id sub_1C233A7D4()
{
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    id v2 = result;
    objc_msgSend(result, sel_bounds);
    double v4 = v3;

    id v5 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v5, sel_bounds);
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;
    CGFloat v13 = v12;

    v19.origin.double x = v7;
    v19.origin.double y = v9;
    v19.size.double width = v11;
    v19.size.double height = v13;
    double v14 = round(CGRectGetHeight(v19) * 0.5);
    unint64_t v15 = (objc_class *)sub_1C254DB80();
    sub_1C254DB60();
    double v17 = round(v14 / v16);
    if (qword_1EA2DD6D8 != -1) {
      swift_once();
    }
    if (v4 - (*(double *)&qword_1EA2E1300 + *(double *)&qword_1EA2E1300) < v17) {
      sub_1C254DB60();
    }
    id v18 = objc_allocWithZone(v15);
    return (id)sub_1C254DB70();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C233A9AC(uint8_t *a1)
{
  id v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1C254E560();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  CGFloat v11 = (char *)&v55 - v10;
  uint64_t v12 = sub_1C254E340();
  MEMORY[0x1F4188790](v12 - 8);
  CGFloat v13 = (uint64_t *)&v2[OBJC_IVAR___HRPDFConfigurationViewController_state];
  uint64_t v14 = *(void *)&v2[OBJC_IVAR___HRPDFConfigurationViewController_state + 24];
  if (v14)
  {
    if (v14 != 1)
    {
      uint64_t v56 = ObjectType;
      *(void *)&long long v57 = v6;
      id v58 = a1;
      uint64_t v16 = *v13;
      unint64_t v15 = v13[1];
      uint64_t v17 = v13[2];
      sub_1C2205E14(*v13, v15);
      swift_bridgeObjectRetain();
      sub_1C23408F0(v16, v15, v17, v14);
      sub_1C2205E14(v16, v15);
      sub_1C254E2E0();
      id v18 = (objc_class *)sub_1C254DD20();
      id v19 = objc_allocWithZone(v18);
      uint64_t v59 = v16;
      unint64_t v60 = v15;
      uint64_t v61 = v17;
      uint64_t v20 = sub_1C254DD10();
      if (v20)
      {
        objc_super v21 = (void *)v20;
        if (qword_1EBB6D840 != -1) {
          swift_once();
        }
        LOBYTE(v63) = 11;
        sub_1C23CD65C(1, 14, 0, (char *)&v63, 0);
        sub_1C2340900(0, &qword_1EA2E1520, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBBE00]);
        uint64_t v22 = swift_allocObject();
        long long v57 = xmmword_1C255CD90;
        *(_OWORD *)(v22 + 16) = xmmword_1C255CD90;
        *(void *)(v22 + 56) = v18;
        *(void *)(v22 + 32) = v21;
        id v23 = objc_allocWithZone(MEMORY[0x1E4F9F2E8]);
        id v24 = v21;
        id v25 = (void *)sub_1C254F700();
        swift_bridgeObjectRelease();
        id v26 = objc_msgSend(v23, sel_initWithActivityItems_applicationActivities_, v25, 0);

        sub_1C21ACE4C(0, &qword_1EA2E1528, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, MEMORY[0x1E4FBBE00]);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = v57;
        id v28 = (void *)*MEMORY[0x1E4F9F378];
        *(void *)(v27 + 32) = *MEMORY[0x1E4F9F378];
        type metadata accessor for ActivityType(0);
        id v29 = v28;
        id v30 = (void *)sub_1C254F700();
        swift_bridgeObjectRelease();
        objc_msgSend(v26, sel_setExcludedActivityTypes_, v30);

        id v31 = objc_msgSend(v26, sel_popoverPresentationController);
        if (v31)
        {
          id v32 = v31;
          objc_msgSend(v31, sel_setSourceItem_, v58);
        }
        objc_msgSend(v2, sel_presentViewController_animated_completion_, v26, 1, 0);

        uint64_t v34 = v59;
        unint64_t v33 = v60;
        sub_1C2205E6C(v59, v60);
        sub_1C2340254(v34, v33, v61, v14);
      }
      else
      {
        sub_1C254E510();
        uint64_t v44 = v2;
        id v45 = sub_1C254E550();
        os_log_type_t v46 = sub_1C254FA40();
        if (os_log_type_enabled(v45, v46))
        {
          id v47 = (uint8_t *)swift_slowAlloc();
          uint64_t v48 = swift_slowAlloc();
          uint64_t v63 = v48;
          *(_DWORD *)id v47 = 136446210;
          id v58 = v47 + 4;
          uint64_t v62 = v56;
          swift_getMetatypeMetadata();
          uint64_t v49 = sub_1C254F4F0();
          uint64_t v62 = sub_1C21AD354(v49, v50, &v63);
          sub_1C2550120();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C21A1000, v45, v46, "[%{public}s]: Unable to instantiate activity item source", v47, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C875A0B0](v48, -1, -1);
          MEMORY[0x1C875A0B0](v47, -1, -1);

          uint64_t v52 = v59;
          unint64_t v51 = v60;
          sub_1C2205E6C(v59, v60);
          sub_1C2340254(v52, v51, v61, v14);
        }
        else
        {
          uint64_t v54 = v59;
          unint64_t v53 = v60;
          sub_1C2340254(v59, v60, v61, v14);
          sub_1C2205E6C(v54, v53);
        }
        (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v5);
      }
    }
  }
  else
  {
    sub_1C254E510();
    id v35 = v2;
    id v36 = sub_1C254E550();
    os_log_type_t v37 = sub_1C254FA40();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v61 = v5;
      uint64_t v39 = v6;
      id v40 = (uint8_t *)v38;
      uint64_t v41 = swift_slowAlloc();
      uint64_t v62 = ObjectType;
      uint64_t v63 = v41;
      *(_DWORD *)id v40 = 136446210;
      swift_getMetatypeMetadata();
      uint64_t v42 = sub_1C254F4F0();
      uint64_t v62 = sub_1C21AD354(v42, v43, &v63);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v36, v37, "[%{public}s]: No PDF data generated", v40, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v41, -1, -1);
      MEMORY[0x1C875A0B0](v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v61);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
}

uint64_t sub_1C233B114()
{
  id v1 = v0;
  uint64_t v2 = sub_1C254F1C0();
  uint64_t v36 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v34 = &v30[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v35 = sub_1C254F200();
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1C254F230();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (uint64_t *)&v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *uint64_t v9 = sub_1C254FC70();
  uint64_t v10 = *MEMORY[0x1E4FBCBF0];
  uint64_t v38 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 104);
  v38(v9, v10, v6);
  char v11 = sub_1C254F260();
  os_log_type_t v37 = *(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8);
  uint64_t result = v37(v9, v6);
  if (v11)
  {
    uint64_t v32 = v2;
    id v13 = sub_1C233876C();
    objc_msgSend(v13, sel_reloadData);

    uint64_t v14 = *(void *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_dataProviderToken];
    if (v14)
    {
      swift_beginAccess();
      if ((*(unsigned char *)(v14 + 16) & 1) == 0)
      {
        *(unsigned char *)(v14 + 16) = 1;
        swift_beginAccess();
        unsigned int v31 = v10;
        unint64_t v15 = v5;
        uint64_t v16 = *(void (**)(uint64_t))(v14 + 24);
        swift_retain();
        uint64_t v17 = swift_retain();
        v16(v17);
        uint64_t v5 = v15;
        uint64_t v10 = v31;
        swift_release();
        swift_release();
      }
    }
    if (*(void *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_generatorCancellable])
    {
      swift_retain();
      sub_1C254EA00();
      swift_release();
    }
    if (*(void *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_previewCancellable])
    {
      swift_retain();
      sub_1C254EA00();
      swift_release();
    }
    long long aBlock = 0u;
    long long v40 = 0u;
    uint64_t v18 = (uint64_t)&v1[OBJC_IVAR___HRPDFConfigurationViewController_pdfGenerationToken];
    swift_beginAccess();
    sub_1C23402A4((uint64_t)&aBlock, v18);
    swift_endAccess();
    *uint64_t v9 = sub_1C254FC70();
    v38(v9, v10, v6);
    LOBYTE(v18) = sub_1C254F260();
    uint64_t result = v37(v9, v6);
    if (v18)
    {
      id v19 = &v1[OBJC_IVAR___HRPDFConfigurationViewController_state];
      uint64_t v20 = *(void *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_state];
      unint64_t v21 = *(void *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_state + 8];
      uint64_t v22 = *(void *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_state + 16];
      uint64_t v23 = *(void *)&v1[OBJC_IVAR___HRPDFConfigurationViewController_state + 24];
      *(void *)id v19 = 0;
      *((void *)v19 + 1) = 0;
      *((void *)v19 + 2) = 0;
      *((void *)v19 + 3) = 1;
      sub_1C2340254(v20, v21, v22, v23);
      sub_1C233C62C();
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v1;
      uint64_t v41 = sub_1C2340330;
      uint64_t v42 = v24;
      *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v40 = sub_1C224E544;
      *((void *)&v40 + 1) = &block_descriptor_86;
      id v25 = _Block_copy(&aBlock);
      id v26 = v1;
      sub_1C254F1E0();
      uint64_t v43 = MEMORY[0x1E4FBC860];
      sub_1C23406D0((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
      uint64_t v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
      sub_1C21ACE4C(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
      sub_1C233F188((unint64_t *)&qword_1EBB6FF40, (unint64_t *)&qword_1EBB6FF30, v27);
      id v28 = v34;
      uint64_t v29 = v32;
      sub_1C2550200();
      MEMORY[0x1C87581B0](0, v5, v28, v25);
      _Block_release(v25);
      (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v28, v29);
      (*(void (**)(unsigned char *, uint64_t))(v33 + 8))(v5, v35);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C233B6CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  char v5 = *(unsigned char *)(v2 + 32);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v3;
  *(void *)(v7 + 32) = v4;
  *(unsigned char *)(v7 + 40) = v5;
  swift_retain();
  uint64_t v8 = sub_1C2492DAC((dispatch_group_t)v2, 0, (uint64_t)sub_1C2340370, v7);
  swift_release();
  swift_release();
  *(void *)(a1 + OBJC_IVAR___HRPDFConfigurationViewController_dataProviderToken) = v8;
  return swift_release();
}

uint64_t sub_1C233B7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(v47) = a5;
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v7 = sub_1C254F1C0();
  uint64_t v44 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1C254F200();
  uint64_t v10 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21ACE4C(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v48 = (char *)&v43 - v14;
  sub_1C2340380();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C23404E0();
  uint64_t v21 = v20;
  uint64_t v50 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v49 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C875A200](a2 + 16);
  if (result)
  {
    uint64_t v24 = (void *)result;
    if (*(void *)(a1 + 16))
    {
      uint64_t v25 = *(void *)(result + OBJC_IVAR___HRPDFConfigurationViewController_reportGenerator);
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v24;
      *(void *)(v26 + 24) = v25;
      uint64_t v27 = v45;
      *(void *)(v26 + 32) = a1;
      *(void *)(v26 + 40) = v27;
      *(void *)(v26 + 48) = v46;
      *(unsigned char *)(v26 + 56) = v47 & 1;
      id v28 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AC28];
      sub_1C23405CC(0, &qword_1EA2E14C8, MEMORY[0x1E4F1AC28]);
      uint64_t v47 = v21;
      sub_1C234049C(&qword_1EA2E14E0, &qword_1EA2E14C8, v28);
      id v29 = v24;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C254EB10();
      sub_1C23406D0(&qword_1EA2E1508, (void (*)(uint64_t))sub_1C2340380);
      uint64_t v30 = sub_1C254EBC0();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      aBlock[0] = v30;
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
      id v52 = (id)sub_1C254FC70();
      uint64_t v31 = sub_1C254FC20();
      uint64_t v32 = (uint64_t)v48;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v48, 1, 1, v31);
      uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
      sub_1C23405CC(0, &qword_1EA2E14F0, MEMORY[0x1E4F1AAE0]);
      sub_1C234049C((unint64_t *)&unk_1EA2E14F8, &qword_1EA2E14F0, v33);
      sub_1C22611AC();
      uint64_t v34 = v49;
      sub_1C254EC70();
      sub_1C2340108(v32, (uint64_t)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21ACE4C);

      swift_release();
      *(void *)(swift_allocObject() + 16) = v29;
      sub_1C23406D0(&qword_1EA2E1510, (void (*)(uint64_t))sub_1C23404E0);
      uint64_t v35 = (char *)v29;
      uint64_t v36 = v47;
      uint64_t v37 = sub_1C254EC10();
      swift_release();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v36);
      *(void *)&v35[OBJC_IVAR___HRPDFConfigurationViewController_generatorCancellable] = v37;

      return swift_release();
    }
    else
    {
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
      uint64_t v50 = sub_1C254FC70();
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v24;
      aBlock[4] = sub_1C2340718;
      aBlock[5] = v38;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C224E544;
      aBlock[3] = &block_descriptor_102;
      uint64_t v39 = _Block_copy(aBlock);
      id v40 = v24;
      swift_release();
      sub_1C254F1E0();
      aBlock[0] = MEMORY[0x1E4FBC860];
      sub_1C23406D0((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
      uint64_t v41 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
      sub_1C21ACE4C(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
      sub_1C233F188((unint64_t *)&qword_1EBB6FF40, (unint64_t *)&qword_1EBB6FF30, v41);
      sub_1C2550200();
      uint64_t v42 = (void *)v50;
      MEMORY[0x1C87581B0](0, v12, v9, v39);
      _Block_release(v39);

      (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v7);
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v43);
    }
  }
  return result;
}

void sub_1C233C000(uint64_t a1)
{
  uint64_t v2 = sub_1C254F230();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *char v5 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCBF0], v2);
  char v6 = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v7 = (_OWORD *)(a1 + OBJC_IVAR___HRPDFConfigurationViewController_state);
    uint64_t v8 = *(void *)(a1 + OBJC_IVAR___HRPDFConfigurationViewController_state);
    unint64_t v9 = *(void *)(a1 + OBJC_IVAR___HRPDFConfigurationViewController_state + 8);
    uint64_t v10 = *(void *)(a1 + OBJC_IVAR___HRPDFConfigurationViewController_state + 16);
    uint64_t v11 = *(void *)(a1 + OBJC_IVAR___HRPDFConfigurationViewController_state + 24);
    *uint64_t v7 = 0u;
    v7[1] = 0u;
    sub_1C2340254(v8, v9, v10, v11);
    sub_1C233C62C();
  }
  else
  {
    __break(1u);
  }
}

void sub_1C233C14C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254F230();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = a1[3];
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  *uint64_t v7 = sub_1C254FC70();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  LOBYTE(a1) = sub_1C254F260();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (a1)
  {
    uint64_t v12 = (uint64_t *)(a2 + OBJC_IVAR___HRPDFConfigurationViewController_state);
    uint64_t v13 = *(void *)(a2 + OBJC_IVAR___HRPDFConfigurationViewController_state);
    unint64_t v14 = *(void *)(a2 + OBJC_IVAR___HRPDFConfigurationViewController_state + 8);
    uint64_t v15 = *(void *)(a2 + OBJC_IVAR___HRPDFConfigurationViewController_state + 16);
    uint64_t v16 = *(void *)(a2 + OBJC_IVAR___HRPDFConfigurationViewController_state + 24);
    *uint64_t v12 = v8;
    v12[1] = v9;
    void v12[2] = v10;
    v12[3] = v11;
    sub_1C2340720(v8, v9, v10, v11);
    sub_1C2340254(v13, v14, v15, v16);
    sub_1C233C62C();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C233C2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C254F1C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1C254F200();
  uint64_t v12 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  unint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C875A200](a2 + 16);
  if (result)
  {
    uint64_t v16 = (void *)result;
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    uint64_t v22 = sub_1C254FC70();
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = v16;
    v17[3] = a1;
    v17[4] = a3;
    v17[5] = a4;
    aBlock[4] = sub_1C23409E8;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C224E544;
    aBlock[3] = &block_descriptor_123;
    uint64_t v18 = _Block_copy(aBlock);
    id v21 = v16;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    sub_1C254F1E0();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1C23406D0((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
    id v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C21ACE4C(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C233F188((unint64_t *)&qword_1EBB6FF40, (unint64_t *)&qword_1EBB6FF30, v19);
    sub_1C2550200();
    uint64_t v20 = (void *)v22;
    MEMORY[0x1C87581B0](0, v14, v11, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v23);
  }
  return result;
}

void sub_1C233C62C()
{
  uint64_t v1 = sub_1C254DC10();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_state);
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_state + 8);
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_state + 16);
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_state + 24);
  if (!v8) {
    goto LABEL_7;
  }
  if (v8 == 1)
  {
    sub_1C254D460();
    swift_allocObject();
    sub_1C254D450();
    sub_1C254D820();
    swift_release();
    id v9 = sub_1C23386D0();
    objc_msgSend(v9, sel_setEnabled_, 0);

    id v10 = sub_1C233881C();
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F66530], v1);
    sub_1C254DC20();

LABEL_8:
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    goto LABEL_9;
  }
  uint64_t v22 = *(void *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_state + 16);
  sub_1C2205E14(v5, (unint64_t)v6);
  swift_bridgeObjectRetain();
  sub_1C2205E14(v5, (unint64_t)v6);
  id v11 = objc_allocWithZone(MEMORY[0x1E4F38DA0]);
  sub_1C2205E14(v5, (unint64_t)v6);
  uint64_t v12 = (void *)sub_1C254C930();
  id v13 = objc_msgSend(v11, sel_initWithData_, v12);
  sub_1C2205E6C(v5, (unint64_t)v6);

  if (!v13)
  {
    sub_1C2205E6C(v5, (unint64_t)v6);
    uint64_t v7 = v22;
LABEL_7:
    uint64_t v22 = v7;
    sub_1C254D460();
    swift_allocObject();
    sub_1C254D450();
    id v21 = v6;
    sub_1C254D820();
    swift_release();
    id v18 = sub_1C23386D0();
    objc_msgSend(v18, sel_setEnabled_, 0);

    id v19 = sub_1C233881C();
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F66528], v1);
    sub_1C254DC20();

    sub_1C2340254(v5, (unint64_t)v21, v22, v8);
    goto LABEL_8;
  }
  sub_1C254D460();
  swift_allocObject();
  id v21 = v13;
  sub_1C254D450();
  sub_1C254D820();
  swift_release();
  id v14 = sub_1C23386D0();
  objc_msgSend(v14, sel_setEnabled_, 1);

  id v15 = sub_1C233881C();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F66520], v1);
  sub_1C254DC20();

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  id v16 = sub_1C233881C();
  objc_msgSend(v16, sel_reloadData);

  id v17 = sub_1C233881C();
  objc_msgSend(v17, sel_setContentOffset_animated_, 1, 0.0, 0.0);
  sub_1C2340254(v5, (unint64_t)v6, v22, v8);

  sub_1C2205E6C(v5, (unint64_t)v6);
LABEL_9:
  id v20 = sub_1C233881C();
  objc_msgSend(v20, sel_reloadData);
}

uint64_t sub_1C233CA74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = a1;
  *(void *)(v13 + 32) = a2;
  *(void *)(v13 + 40) = a3;
  *(void *)(v13 + 48) = a4;
  *(unsigned char *)(v13 + 56) = a5 & 1;
  sub_1C23405CC(0, &qword_1EA2E14C8, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C254EAF0();
  *a6 = result;
  return result;
}

void sub_1C233CB7C(void (*a1)(_OWORD *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  swift_beginAccess();
  uint64_t v16 = MEMORY[0x1C875A200](a3 + 16);
  if (v16)
  {
    id v17 = (void *)v16;
    int v18 = a8 & 1;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_1C23407F4;
    *(void *)(v19 + 24) = v15;
    swift_retain();
    sub_1C23DE0A8(a5, a6, a7, v18, (uint64_t)sub_1C2340830, v19, (uint64_t *)v21);
    swift_release();
    uint64_t v20 = (uint64_t)v17 + OBJC_IVAR___HRPDFConfigurationViewController_pdfGenerationToken;
    swift_beginAccess();
    sub_1C23402A4((uint64_t)v21, v20);
    swift_endAccess();
  }
  else
  {
    swift_retain();
    swift_release();
    char v22 = 0;
    memset(v21, 0, sizeof(v21));
    a1(v21);
  }
}

id PDFConfigurationViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void PDFConfigurationViewController.init(nibName:bundle:)()
{
}

id PDFConfigurationViewController.__deallocating_deinit(uint64_t a1)
{
  return sub_1C233F71C(a1, type metadata accessor for PDFConfigurationViewController);
}

Swift::Int __swiftcall PDFConfigurationViewController.tableView(_:numberOfRowsInSection:)(UITableView *_, Swift::Int numberOfRowsInSection)
{
  return 3;
}

id PDFConfigurationViewController.tableView(_:cellForRowAt:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254E890();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)sub_1C254F430();
  id v9 = (void *)sub_1C254CD30();
  id v10 = objc_msgSend(a1, sel_dequeueReusableCellWithIdentifier_forIndexPath_, v8, v9);

  uint64_t v11 = *(void *)(v2 + OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource);
  uint64_t v12 = sub_1C2460094();
  uint64_t v14 = v13;
  sub_1C254E880();
  swift_bridgeObjectRetain();
  uint64_t v38 = v12;
  sub_1C254E860();
  uint64_t v15 = sub_1C254CD60();
  uint64_t v39 = v5;
  if (v15 == 2)
  {
    uint64_t v16 = v4;
    sub_1C245B714();
  }
  else
  {
    uint64_t v16 = v4;
    if (v15 == 1)
    {
      sub_1C245B5A8();
    }
    else if (!v15)
    {
      sub_1C245B348();
    }
  }
  uint64_t v37 = v11;
  sub_1C254E740();
  id v17 = self;
  id v18 = objc_msgSend(v17, sel_labelColor);
  uint64_t v19 = (void (*)(uint64_t *, void))sub_1C254E7A0();
  sub_1C254E780();
  v19(&v44, 0);
  id v20 = objc_msgSend(v17, sel_secondaryLabelColor);
  id v21 = (void (*)(uint64_t *, void))sub_1C254E7F0();
  sub_1C254E780();
  v21(&v44, 0);
  uint64_t v22 = v16;
  uint64_t v46 = v16;
  uint64_t v47 = MEMORY[0x1E4FB0F88];
  uint64_t v23 = __swift_allocate_boxed_opaque_existential_1(&v44);
  uint64_t v24 = v39;
  (*(void (**)(uint64_t *, char *, uint64_t))(v39 + 16))(v23, v7, v22);
  MEMORY[0x1C8757FA0](&v44);
  uint64_t v25 = sub_1C254CD60();
  if ((unint64_t)(v25 - 1) >= 2 && (v25 || !*(void *)(v37 + 40)))
  {
    uint64_t v27 = 0;
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = 1;
    uint64_t v27 = 3;
  }
  objc_msgSend(v10, sel_setSelectionStyle_, v27);
  objc_msgSend(v10, sel_setAccessoryType_, v26);
  if (v14)
  {
    uint64_t v44 = v38;
    uint64_t v45 = v14;
    uint64_t v42 = 32;
    unint64_t v43 = 0xE100000000000000;
    uint64_t v40 = 0;
    unint64_t v41 = 0xE000000000000000;
    sub_1C2218914();
    uint64_t v28 = MEMORY[0x1E4FBB1A0];
    uint64_t v29 = sub_1C2550170();
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    sub_1C2340900(0, (unint64_t *)&qword_1EBB6FA60, v28, MEMORY[0x1E4FBBE00]);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1C255CDA0;
    *(void *)(v32 + 32) = 0x6F6974704F464450;
    *(void *)(v32 + 40) = 0xEA0000000000736ELL;
    uint64_t v44 = v29;
    uint64_t v45 = v31;
    swift_bridgeObjectRetain();
    sub_1C254F5A0();
    swift_bridgeObjectRelease();
    uint64_t v33 = v45;
    *(void *)(v32 + 48) = v44;
    *(void *)(v32 + 56) = v33;
    uint64_t v34 = (void *)sub_1C254F700();
    id v35 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v10, sel_setAccessibilityIdentifier_, v35);
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v22);
  return v10;
}

void PDFConfigurationViewController.tableView(_:didSelectRowAt:)(void *a1, uint64_t a2)
{
  uint64_t v5 = (void *)sub_1C254CD30();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v5, 1);

  id v6 = sub_1C245CE20(a2, v2);
  sub_1C233D5C4(v6);
}

void sub_1C233D5C4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1C254E560();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v20 = a1;
    id v9 = objc_msgSend(v2, sel_navigationController);
    if (v9)
    {
      id v10 = v9;
      objc_msgSend(v9, sel_pushViewController_animated_, v20, 1);
    }
    uint64_t v11 = v20;
  }
  else
  {
    sub_1C254E510();
    id v12 = v2;
    uint64_t v13 = sub_1C254E550();
    os_log_type_t v14 = sub_1C254FA40();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v21 = ObjectType;
      uint64_t v22 = v16;
      *(_DWORD *)uint64_t v15 = 136446210;
      id v20 = v15 + 4;
      swift_getMetatypeMetadata();
      uint64_t v17 = sub_1C254F4F0();
      uint64_t v21 = sub_1C21AD354(v17, v18, &v22);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v13, v14, "[%{public}s]: Cannot present, view controller is nil", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v16, -1, -1);
      MEMORY[0x1C875A0B0](v15, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1C233D99C(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR___HRPDFConfigurationViewController_configurationDataSource);
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(unsigned char *)(v5 + 32) = a3 & 1;
  if ((a3 & 1) == 0)
  {
    uint64_t v6 = *(void *)(v5 + 40);
    if (v6)
    {
      *(void *)(v6 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMinYear) = a1;
      uint64_t v7 = *(void *)(v5 + 40);
      if (v7) {
        *(void *)(v7 + OBJC_IVAR____TtC15HealthRecordsUI25YearRangePickerDataSource_selectedMaxYear) = a2;
      }
    }
  }
  *(unsigned char *)(v5 + 33) = a4;
  return sub_1C233B114();
}

void sub_1C233D9F0(void *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  sub_1C21ACE4C(0, (unint64_t *)&qword_1EA2E14B0, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v117 - v5;
  uint64_t v7 = sub_1C254CD90();
  uint64_t v123 = *(uint8_t **)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v122 = (char *)&v117 - v11;
  uint64_t v124 = (void *)sub_1C254E560();
  uint64_t v12 = *(v124 - 1);
  MEMORY[0x1F4188790](v124);
  os_log_type_t v14 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v117 - v16;
  *(void *)&double v19 = MEMORY[0x1F4188790](v18).n128_u64[0];
  uint64_t v21 = (char *)&v117 - v20;
  uint64_t v22 = (char *)objc_msgSend(a1, sel_state, v19);
  if ((unint64_t)(v22 - 4) < 2)
  {
    sub_1C254E510();
    id v32 = v1;
    uint64_t v33 = sub_1C254E550();
    os_log_type_t v34 = sub_1C254FA40();
    if (os_log_type_enabled(v33, v34))
    {
      id v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v125 = ObjectType;
      uint64_t v126 = v36;
      *(_DWORD *)id v35 = 136446210;
      swift_getMetatypeMetadata();
      uint64_t v37 = sub_1C254F4F0();
      uint64_t v125 = sub_1C21AD354(v37, v38, &v126);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v33, v34, "[%{public}s]: PDF zoom gesture failed or was cancelled", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v36, -1, -1);
      MEMORY[0x1C875A0B0](v35, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, void *))(v12 + 8))(v17, v124);
    goto LABEL_12;
  }
  if (v22 == (char *)3)
  {
    sub_1C254E510();
    id v39 = v1;
    uint64_t v40 = sub_1C254E550();
    os_log_type_t v41 = sub_1C254FA40();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v125 = ObjectType;
      uint64_t v126 = v43;
      *(_DWORD *)uint64_t v42 = 136446210;
      uint64_t v123 = v42 + 4;
      swift_getMetatypeMetadata();
      uint64_t v44 = sub_1C254F4F0();
      uint64_t v125 = sub_1C21AD354(v44, v45, &v126);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v40, v41, "[%{public}s]: PDF zoom gesture ended", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v43, -1, -1);
      MEMORY[0x1C875A0B0](v42, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, void *))(v12 + 8))(v14, v124);
    objc_msgSend(a1, sel_scale);
    if (v116 > 1.2)
    {
      sub_1C233E75C();
      return;
    }
LABEL_12:
    sub_1C233E6B0();
    return;
  }
  if (v22 != (char *)1) {
    return;
  }
  sub_1C254E510();
  uint64_t v23 = v1;
  uint64_t v24 = sub_1C254E550();
  os_log_type_t v25 = sub_1C254FA40();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v120 = v23;
  uint64_t v121 = v7;
  if (v26)
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    id v119 = (id)swift_slowAlloc();
    uint64_t v125 = ObjectType;
    uint64_t v126 = (uint64_t)v119;
    *(_DWORD *)uint64_t v27 = 136446210;
    id v118 = v27 + 4;
    swift_getMetatypeMetadata();
    uint64_t v28 = sub_1C254F4F0();
    uint64_t v125 = sub_1C21AD354(v28, v29, &v126);
    id v30 = v120;
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v24, v25, "[%{public}s]: PDF zoom gesture began", v27, 0xCu);
    id v31 = v119;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v31, -1, -1);
    MEMORY[0x1C875A0B0](v27, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, void *))(v12 + 8))(v21, v124);
  uint64_t v46 = v123;
  id v47 = sub_1C233881C();
  id v48 = sub_1C233881C();
  objc_msgSend(a1, sel_locationInView_, v48);
  double v50 = v49;
  double v52 = v51;

  id v53 = objc_msgSend(v47, sel_indexPathForItemAtPoint_, v50, v52);
  if (!v53)
  {
    (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v46 + 7))(v6, 1, 1, v121);
    goto LABEL_32;
  }
  sub_1C254CD40();

  uint64_t v54 = (void (*)(char *, char *, uint64_t))*((void *)v46 + 4);
  uint64_t v55 = v121;
  v54(v6, v9, v121);
  (*((void (**)(char *, void, uint64_t, uint64_t))v46 + 7))(v6, 0, 1, v55);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v46 + 6))(v6, 1, v55) == 1)
  {
LABEL_32:
    sub_1C2340108((uint64_t)v6, (uint64_t)&qword_1EA2E14B0, MEMORY[0x1E4F27DE8], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C21ACE4C);
    return;
  }
  uint64_t v56 = v122;
  v54(v122, v6, v55);
  long long v57 = v120;
  id v58 = sub_1C233881C();
  uint64_t v59 = (void *)sub_1C254CD30();
  id v60 = objc_msgSend(v58, sel_cellForItemAtIndexPath_, v59);

  if (!v60)
  {
LABEL_34:
    (*((void (**)(char *, uint64_t))v46 + 1))(v56, v121);
    return;
  }
  sub_1C254D300();
  if (!swift_dynamicCastClass())
  {

    goto LABEL_34;
  }
  uint64_t v61 = (void *)sub_1C254D2F0();
  uint64_t v62 = OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView;
  uint64_t v63 = *(void **)&v57[OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView];
  *(void *)&v57[OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView] = v61;
  id v64 = v61;

  id v65 = objc_msgSend(v57, sel_view);
  if (!v65)
  {
    __break(1u);
    goto LABEL_41;
  }
  id v66 = v65;
  objc_msgSend(v65, sel_bounds);
  double v68 = v67;
  double v70 = v69;
  double v72 = v71;
  double v74 = v73;

  id v75 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, v68, v70, v72, v74);
  uint64_t v76 = OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView;
  id v77 = *(void **)&v57[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView];
  *(void *)&v57[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView] = v75;

  id v78 = objc_msgSend(v64, sel_image);
  id v79 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v78);

  id v80 = v57;
  uint64_t v81 = OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView;
  id v82 = *(void **)&v80[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView];
  *(void *)&v80[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView] = v79;

  id v83 = objc_msgSend(v64, sel_window);
  uint64_t v84 = v121;
  if (v83)
  {
    id v85 = v83;
    id v86 = objc_msgSend(v64, sel_superview);
    if (!v86)
    {
LABEL_37:

      uint64_t v46 = v123;
      goto LABEL_38;
    }
    uint64_t v87 = v86;
    id v88 = objc_msgSend(v120, sel_view);
    if (v88)
    {
      uint64_t v89 = v88;
      char v90 = objc_msgSend(v88, sel_superview);

      if (v90)
      {
        uint64_t v124 = v87;
        uint64_t v87 = v90;
        id v91 = v120;
        uint64_t v92 = *(void **)&v120[v76];
        if (v92)
        {
          uint64_t v93 = *(void **)&v120[v62];
          if (v93)
          {
            uint64_t v94 = *(void **)&v120[v81];
            if (v94)
            {
              id v95 = v92;
              id v96 = v93;
              id v118 = v94;
              id v119 = v96;
              objc_msgSend(v96, sel_setAlpha_, 0.0);
              id v97 = objc_msgSend(v91, sel_view);
              if (v97)
              {
                uint64_t v98 = v97;
                objc_msgSend(v97, sel_frame);
                double v100 = v99;
                double v102 = v101;

                objc_msgSend(v87, sel_convertPoint_toCoordinateSpace_, v85, v100, v102);
                double v104 = v103;
                double v106 = v105;
                objc_msgSend(v95, (SEL)&selRef_couldFetchAdditionalResults);
                objc_msgSend(v95, sel_setFrame_, v104, v106);
                id v107 = objc_msgSend(self, sel_whiteColor);
                objc_msgSend(v95, sel_setBackgroundColor_, v107);

                objc_msgSend(v95, sel_setAlpha_, 0.0);
                id v108 = objc_msgSend(v95, sel_layer);
                sub_1C254CDB0();
                objc_msgSend(v108, sel_setCornerRadius_);

                objc_msgSend(v95, sel_setClipsToBounds_, 1);
                objc_msgSend(v85, sel_addSubview_, v95);
                objc_msgSend(v85, sel_bringSubviewToFront_, v95);
                id v109 = v118;
                objc_msgSend(v64, sel_bounds);
                objc_msgSend(v109, sel_bounds);
                objc_msgSend(v109, sel_setBounds_);

                id v110 = v109;
                objc_msgSend(v64, (SEL)&selRef_couldFetchAdditionalResults);
                id v111 = v124;
                objc_msgSend(v124, sel_convertPoint_toCoordinateSpace_, v85);
                double v113 = v112;
                double v115 = v114;
                objc_msgSend(v110, (SEL)&selRef_couldFetchAdditionalResults);
                objc_msgSend(v110, sel_setFrame_, v113, v115);

                objc_msgSend(v85, sel_addSubview_, v110);
                objc_msgSend(v85, sel_bringSubviewToFront_, v110);

                (*((void (**)(char *, uint64_t))v123 + 1))(v122, v121);
                return;
              }
              goto LABEL_42;
            }
          }
        }

        id v85 = v124;
      }

      id v85 = v87;
      uint64_t v84 = v121;
      goto LABEL_37;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    return;
  }
LABEL_38:
  sub_1C233E6B0();

  (*((void (**)(char *, uint64_t))v46 + 1))(v122, v84);
}

void sub_1C233E6B0()
{
  uint64_t v1 = OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView);
  if (v2) {
    objc_msgSend(v2, sel_setAlpha_, 1.0);
  }
  uint64_t v3 = OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView), sel_removeFromSuperview);
  uint64_t v4 = OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView;
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView);
  if (v5) {
    objc_msgSend(v5, sel_removeFromSuperview);
  }
  uint64_t v6 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = 0;

  uint64_t v7 = *(void **)(v0 + v3);
  *(void *)(v0 + v3) = 0;

  uint64_t v8 = *(void **)(v0 + v4);
  *(void *)(v0 + v4) = 0;
}

void sub_1C233E75C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView];
  uint64_t v2 = OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView];
  uint64_t v4 = OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView;
  uint64_t v5 = *(void **)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView];
  *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView] = 0;
  uint64_t v6 = *(void **)&v0[v2];
  *(void *)&v0[v2] = 0;
  id v7 = v3;
  id v19 = v5;

  uint64_t v8 = *(void **)&v0[v4];
  *(void *)&v0[v4] = 0;

  id v20 = self;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = v1;
  os_log_type_t v25 = sub_1C23401A8;
  BOOL v26 = (void *)v9;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v22 = 1107296256;
  uint64_t v23 = sub_1C224E544;
  uint64_t v24 = &block_descriptor_68;
  uint64_t v10 = _Block_copy(&aBlock);
  id v11 = v1;
  id v12 = v7;
  swift_release();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v0;
  v13[3] = v5;
  void v13[4] = v1;
  v13[5] = v3;
  os_log_type_t v25 = sub_1C2340200;
  BOOL v26 = v13;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v22 = 1107296256;
  uint64_t v23 = sub_1C246035C;
  uint64_t v24 = &block_descriptor_74;
  os_log_type_t v14 = _Block_copy(&aBlock);
  id v15 = v11;
  id v16 = v12;
  id v17 = v19;
  uint64_t v18 = v0;
  swift_release();
  objc_msgSend(v20, sel_animateWithDuration_delay_options_animations_completion_, 0x10000, v10, v14, 0.3, 0.0);
  _Block_release(v14);
  _Block_release(v10);
}

id sub_1C233E9EC(id result, void *a2)
{
  if (result) {
    uint64_t result = objc_msgSend(result, sel_setAlpha_, 1.0);
  }
  if (a2)
  {
    CGAffineTransformMakeScale(&v3, 2.0, 2.0);
    objc_msgSend(a2, sel_setTransform_, &v3);
    return objc_msgSend(a2, sel_setAlpha_, 0.0);
  }
  return result;
}

uint64_t sub_1C233EA70(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v8 = sub_1C254F1C0();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v29 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C254F200();
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v31 = v10;
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C254F220();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  id v19 = (char *)&v28 - v18;
  sub_1C233EE9C();
  if (a3) {
    objc_msgSend(a3, sel_setAlpha_, 1.0);
  }
  if (a4) {
    objc_msgSend(a4, sel_removeFromSuperview);
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  id v20 = (void *)sub_1C254FC70();
  sub_1C254F210();
  MEMORY[0x1C8757760](v16, 0.2);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v14 + 8);
  v28(v16, v13);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a5;
  aBlock[4] = sub_1C2340244;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_80;
  uint64_t v22 = _Block_copy(aBlock);
  id v23 = a5;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C23406D0((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  uint64_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C21ACE4C(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C233F188((unint64_t *)&qword_1EBB6FF40, (unint64_t *)&qword_1EBB6FF30, v24);
  os_log_type_t v25 = v29;
  uint64_t v26 = v33;
  sub_1C2550200();
  MEMORY[0x1C8758120](v19, v12, v25, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
  return ((uint64_t (*)(char *, uint64_t))v28)(v19, v13);
}

void sub_1C233EE9C()
{
  uint64_t v1 = (uint64_t *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_state];
  unint64_t v2 = *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_state + 24];
  if (v2 >= 2)
  {
    uint64_t v4 = *v1;
    unint64_t v3 = v1[1];
    uint64_t v5 = v1[2];
    sub_1C2205E14(*v1, v3);
    swift_bridgeObjectRetain();
    sub_1C2205E14(v4, v3);
    id v6 = objc_allocWithZone(MEMORY[0x1E4F38DA0]);
    sub_1C2205E14(v4, v3);
    id v7 = (void *)sub_1C254C930();
    id v8 = objc_msgSend(v6, sel_initWithData_, v7);
    sub_1C2205E6C(v4, v3);

    if (v8)
    {
      uint64_t v9 = (objc_class *)type metadata accessor for PDFPreviewViewController();
      uint64_t v10 = (char *)objc_allocWithZone(v9);
      *(void *)&v10[OBJC_IVAR____TtC15HealthRecordsUI24PDFPreviewViewController_pdfDocument] = v8;
      v19.receiver = v10;
      v19.super_class = v9;
      id v18 = v8;
      id v11 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
      uint64_t v12 = qword_1EBB6EF40;
      id v13 = v11;
      if (v12 != -1) {
        swift_once();
      }
      id v14 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      uint64_t v15 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_setTitle_, v15, 0xE000000000000000);

      id v16 = objc_msgSend(v0, sel_navigationController);
      if (v16)
      {
        uint64_t v17 = v16;
        objc_msgSend(v16, sel_pushViewController_animated_, v13, 0);
        sub_1C2340254(v4, v3, v5, v2);
        sub_1C2205E6C(v4, v3);
      }
      else
      {
        sub_1C2340254(v4, v3, v5, v2);
        sub_1C2205E6C(v4, v3);
      }
    }
    else
    {
      sub_1C2205E6C(v4, v3);
      sub_1C2340254(v4, v3, v5, v2);
    }
  }
}

void sub_1C233F168()
{
  qword_1EA2E1300 = 0x402E000000000000;
}

void sub_1C233F178()
{
  qword_1EA2E1308 = 0x403E000000000000;
}

uint64_t sub_1C233F188(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C21ACE4C(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1C233F3D8()
{
  return sub_1C233F71C(0, type metadata accessor for ContentSizedTableView);
}

void sub_1C233F450()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for PDFPreviewViewController();
  objc_msgSendSuper2(&v5, sel_viewDidLoad);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F38DB8]), sel_init);
  objc_msgSend(v0, sel_setView_, v1);

  id v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    unint64_t v3 = v2;
    self;
    uint64_t v4 = (void *)swift_dynamicCastObjCClass();
    if (v4) {
      objc_msgSend(v4, sel_setDocument_, *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI24PDFPreviewViewController_pdfDocument]);
    }
  }
}

void sub_1C233F564(char a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for PDFPreviewViewController();
  objc_msgSendSuper2(&v10, sel_viewWillAppear_, a1 & 1);
  id v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    uint64_t v4 = v3;
    self;
    objc_super v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      objc_msgSend(v5, sel_scaleFactorForSizeToFit);
      double v7 = v6;

      id v8 = objc_msgSend(v1, sel_view);
      if (v8)
      {
        uint64_t v9 = v8;
        self;
        uint64_t v4 = (void *)swift_dynamicCastObjCClass();
        if (!v4) {
      }
        }
      else
      {
        uint64_t v4 = 0;
      }
      objc_msgSend(v4, sel_setScaleFactor_, v7);
    }
  }
}

void sub_1C233F6C8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1C233F704(uint64_t a1)
{
  return sub_1C233F71C(a1, type metadata accessor for PDFPreviewViewController);
}

id sub_1C233F71C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1C233F79C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C233F7D4()
{
  return sub_1C233A270(v0);
}

uint64_t sub_1C233F7DC()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C233F824(uint64_t a1, void *a2)
{
  return sub_1C245C420(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1C233F830(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  objc_super v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
    uint64_t v4 = sub_1C254F710();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

void sub_1C233F8DC()
{
  uint64_t v12 = sub_1C254FC60();
  uint64_t v10 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v11 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1C254FC00();
  MEMORY[0x1F4188790](v2);
  uint64_t v3 = sub_1C254F200();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = &v0[OBJC_IVAR___HRPDFConfigurationViewController_tableCellIdentifier];
  *(void *)uint64_t v4 = 1819043139;
  *((void *)v4 + 1) = 0xE400000000000000;
  *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___cancelBarButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___actionBarButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___tableView] = 0;
  *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___collectionView] = 0;
  *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___scrollView] = 0;
  *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationBackgroundView] = 0;
  *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pinchAnimationView] = 0;
  *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_pinchedPageImageView] = 0;
  uint64_t v5 = OBJC_IVAR___HRPDFConfigurationViewController_pdfPadding;
  if (qword_1EA2DD6E0 != -1) {
    swift_once();
  }
  *(void *)&v0[v5] = qword_1EA2E1308;
  *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfPaddingConstraints] = 0;
  *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController____lazy_storage___pdfHeightConstraint] = 0;
  id v6 = &v0[OBJC_IVAR___HRPDFConfigurationViewController_state];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  *((void *)v6 + 2) = 0;
  *((void *)v6 + 3) = 1;
  *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_dataProviderToken] = 0;
  *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_generatorCancellable] = 0;
  *(void *)&v0[OBJC_IVAR___HRPDFConfigurationViewController_previewCancellable] = 0;
  double v7 = &v0[OBJC_IVAR___HRPDFConfigurationViewController_pdfGenerationToken];
  *(_OWORD *)double v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  uint64_t v8 = OBJC_IVAR___HRPDFConfigurationViewController_queue;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  sub_1C254F1E0();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  sub_1C23406D0((unint64_t *)&qword_1EBB6FF88, MEMORY[0x1E4FBCC10]);
  uint64_t v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C21ACE4C(0, &qword_1EBB6FF50, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C233F188((unint64_t *)&qword_1EBB6FF58, &qword_1EBB6FF50, v9);
  sub_1C2550200();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v11, *MEMORY[0x1E4FBCC58], v12);
  *(void *)&v0[v8] = sub_1C254FCB0();

  sub_1C25505F0();
  __break(1u);
}

uint64_t method lookup function for PDFConfigurationViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PDFConfigurationViewController);
}

uint64_t dispatch thunk of PDFConfigurationViewController.__allocating_init(profile:account:category:)()
{
  return (*(uint64_t (**)(void))(v0 + 656))();
}

uint64_t type metadata accessor for ContentSizedTableView()
{
  return self;
}

uint64_t type metadata accessor for PDFPreviewViewController()
{
  return self;
}

uint64_t *destroy for PDFConfigurationViewController.State(uint64_t *result)
{
  if ((unint64_t)result[3] >= 0xFFFFFFFF)
  {
    sub_1C2205E6C(*result, result[1]);
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *initializeWithCopy for PDFConfigurationViewController.State(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a2[3];
  LODWORD(v5) = -1;
  if (v4 < 0xFFFFFFFF) {
    uint64_t v5 = a2[3];
  }
  if ((v5 + 1) <= 1 && v5 == -1)
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_1C2205E14(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    a1[2] = a2[2];
    a1[3] = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for PDFConfigurationViewController.State(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = *(void *)(a1 + 24);
  if (v4 >= 0xFFFFFFFF) {
    LODWORD(v4) = -1;
  }
  unsigned int v5 = v4 + 1;
  unint64_t v6 = a2[3];
  if (v6 >= 0xFFFFFFFF) {
    LODWORD(v6) = -1;
  }
  unsigned int v7 = v6 + 1;
  if (v5 > 1)
  {
    if (v7 <= 1 && v6 == -1) {
      goto LABEL_12;
    }
LABEL_17:
    long long v10 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    return a1;
  }
  if (v7 > 1)
  {
    if (v5) {
      goto LABEL_17;
    }
LABEL_16:
    sub_1C2205E6C(*(void *)a1, *(void *)(a1 + 8));
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (!v5)
  {
    if (v6 == -1)
    {
      uint64_t v12 = *a2;
      unint64_t v13 = a2[1];
      sub_1C2205E14(*a2, v13);
      uint64_t v14 = *(void *)a1;
      unint64_t v15 = *(void *)(a1 + 8);
      *(void *)a1 = v12;
      *(void *)(a1 + 8) = v13;
      sub_1C2205E6C(v14, v15);
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    goto LABEL_16;
  }
  if (v6 != -1) {
    goto LABEL_17;
  }
LABEL_12:
  uint64_t v8 = *a2;
  unint64_t v9 = a2[1];
  sub_1C2205E14(*a2, v9);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for PDFConfigurationViewController.State(uint64_t a1, uint64_t a2)
{
  LODWORD(v4) = -1;
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL) {
    uint64_t v4 = *(void *)(a1 + 24);
  }
  unsigned int v5 = v4 + 1;
  if (v5 > 1) {
    goto LABEL_13;
  }
  unint64_t v6 = *(void *)(a2 + 24);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF) {
    uint64_t v7 = *(void *)(a2 + 24);
  }
  unsigned int v8 = v7 + 1;
  if (v8 > 1)
  {
    if (!v5)
    {
      uint64_t v9 = *(void *)a1;
      unint64_t v10 = *(void *)(a1 + 8);
      goto LABEL_12;
    }
LABEL_13:
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    return a1;
  }
  if (v5) {
    goto LABEL_13;
  }
  uint64_t v9 = *(void *)a1;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v8)
  {
LABEL_12:
    sub_1C2205E6C(v9, v10);
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C2205E6C(v9, v10);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PDFConfigurationViewController.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 2) {
    return (v3 - 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PDFConfigurationViewController.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1C23400A4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

double sub_1C23400C4(uint64_t a1, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_DWORD *)a1 = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PDFConfigurationViewController.State()
{
  return &type metadata for PDFConfigurationViewController.State;
}

uint64_t sub_1C2340108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C2340168()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1C23401A8()
{
  return sub_1C233E9EC(*(id *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1C23401B0()
{
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C2340200(uint64_t a1)
{
  return sub_1C233EA70(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1C234020C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1C2340244()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_removeFromSuperview);
}

uint64_t sub_1C2340254(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1) {
    return sub_1C2340264(result, a2, a3, a4);
  }
  return result;
}

uint64_t sub_1C2340264(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_1C2205E6C(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C23402A4(uint64_t a1, uint64_t a2)
{
  sub_1C2340900(0, (unint64_t *)&qword_1EBB6EF00, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2340330()
{
  return sub_1C233B6CC(*(void *)(v0 + 16));
}

uint64_t sub_1C2340338()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1C2340370(uint64_t a1)
{
  return sub_1C233B7CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

void sub_1C2340380()
{
  if (!qword_1EA2E14C0)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AC28];
    sub_1C23405CC(255, &qword_1EA2E14C8, MEMORY[0x1E4F1AC28]);
    sub_1C234049C(&qword_1EA2E14E0, &qword_1EA2E14C8, v0);
    unint64_t v1 = sub_1C254EB20();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E14C0);
    }
  }
}

void sub_1C2340434()
{
  if (!qword_1EA2E14D8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E14D8);
    }
  }
}

uint64_t sub_1C234049C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C23405CC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C23404E0()
{
  if (!qword_1EA2E14E8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, void, void))MEMORY[0x1E4F1AAE0];
    sub_1C23405CC(255, &qword_1EA2E14F0, MEMORY[0x1E4F1AAE0]);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    sub_1C234049C((unint64_t *)&unk_1EA2E14F8, &qword_1EA2E14F0, v0);
    sub_1C22611AC();
    unint64_t v1 = sub_1C254E9B0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E14E8);
    }
  }
}

void sub_1C23405CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_1C21ACE4C(255, &qword_1EA2E14D0, (uint64_t (*)(uint64_t))sub_1C2340434, MEMORY[0x1E4FBB718]);
    unint64_t v7 = a3(a1, v6, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C234066C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 57, 7);
}

uint64_t sub_1C23406B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C233CA74(*(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56), a1);
}

void sub_1C23406C8(uint64_t *a1)
{
  sub_1C233C14C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C23406D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2340718()
{
  sub_1C233C000(*(void *)(v0 + 16));
}

uint64_t sub_1C2340720(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_1C2205E14(result, a2);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C2340760()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 57, 7);
}

void sub_1C23407A8(void (*a1)(_OWORD *), uint64_t a2)
{
  sub_1C233CB7C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(unsigned char *)(v2 + 56));
}

uint64_t sub_1C23407BC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C23407F4(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(unsigned char *))(v1 + 16);
  sub_1C2340870(a1, (uint64_t)v4);
  return v2(v4);
}

uint64_t sub_1C2340830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v5 = *(uint64_t (**)(void *))(v4 + 16);
  v7[0] = a1;
  v7[1] = a2;
  v7[2] = a3;
  v7[3] = a4;
  char v8 = 0;
  return v5(v7);
}

uint64_t sub_1C2340870(uint64_t a1, uint64_t a2)
{
  sub_1C23405CC(0, &qword_1EA2E1518, MEMORY[0x1E4FBC448]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C23408F0(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1) {
    return sub_1C2340720(result, a2, a3, a4);
  }
  return result;
}

void sub_1C2340900(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C234094C()
{
  sub_1C233A3F8(v0);
}

uint64_t sub_1C2340954()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2340994(uint64_t a1)
{
  return sub_1C233C2D8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1C23409A0()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C23409E8()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  uint64_t v2 = sub_1C245D1A0();
  return v1(v2);
}

id BaseAccountFeedItemView.headerView.getter()
{
  return *(id *)(v0 + qword_1EBB6ED50);
}

id sub_1C2340A80()
{
  uint64_t v1 = qword_1EBB6ED38;
  uint64_t v2 = *(void **)(v0 + qword_1EBB6ED38);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EBB6ED38);
  }
  else
  {
    uint64_t v4 = v0;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = (void *)(*(uint64_t (**)(void))(ObjectType + 232))();
    unint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

void sub_1C2340B00(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + qword_1EBB6ED38);
  *(void *)(v1 + qword_1EBB6ED38) = a1;
}

id BaseAccountFeedItemView.actionLabel.getter()
{
  return *(id *)(v0 + qword_1EBB6ED60);
}

void sub_1C2340B24()
{
}

void sub_1C2340B80(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = v2;
    swift_bridgeObjectRetain();
    sub_1C2255590(a1, a2);
    id v6 = sub_1C2340A80();
    sub_1C2201F2C();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C255CDA0;
    *(void *)(v7 + 32) = a1;
    *(void *)(v7 + 40) = a2;
    *(void *)(v7 + 48) = 0x56746E65746E6F43;
    *(void *)(v7 + 56) = 0xEB00000000776569;
    swift_bridgeObjectRetain();
    UIAccessibilityIdentification.hrui_setAccessibilityIdentifier(_:)((Swift::OpaquePointer)v7);

    swift_bridgeObjectRelease();
    id v8 = *(void **)(v3 + qword_1EBB6ED60);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C255CDA0;
    *(void *)(v9 + 32) = a1;
    *(void *)(v9 + 40) = a2;
    strcpy((char *)(v9 + 48), "ActionButton");
    *(unsigned char *)(v9 + 61) = 0;
    *(_WORD *)(v9 + 62) = -5120;
    unint64_t v10 = (void *)sub_1C254F700();
    id v11 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v8, sel_setAccessibilityIdentifier_, v11);
    swift_bridgeObjectRelease();
  }
}

void sub_1C2340D60()
{
}

id sub_1C2340DBC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(void))(ObjectType + 240))())
  {
    uint64_t v3 = *(void *)&v0[qword_1EBB6ED50];
    objc_msgSend(*(id *)&v1[qword_1EBB6ED50], sel_setPreservesSuperviewLayoutMargins_, 1);
    objc_msgSend(v1, sel_addSubview_, v3);
    uint64_t v4 = *(void **)&v1[qword_1EBB6ED58];
    id v5 = objc_msgSend(self, sel_opaqueSeparatorColor);
    objc_msgSend(v4, sel_setBackgroundColor_, v5);

    objc_msgSend(v1, sel_addSubview_, v4);
  }
  id v6 = sub_1C2340A80();
  objc_msgSend(v6, sel_setLayoutMargins_, *MEMORY[0x1E4FB2848], *(double *)(MEMORY[0x1E4FB2848] + 8), *(double *)(MEMORY[0x1E4FB2848] + 16), *(double *)(MEMORY[0x1E4FB2848] + 24));

  id v7 = sub_1C2340A80();
  objc_msgSend(v1, sel_addSubview_, v7);

  id v8 = *(void **)&v1[qword_1EBB6ED60];
  objc_msgSend(v8, sel_setPreservesSuperviewLayoutMargins_, 1);
  id v9 = objc_msgSend(v1, sel_tintColor);
  objc_msgSend(v8, sel_setTextColor_, v9);

  return objc_msgSend(v1, sel_addSubview_, v8);
}

void sub_1C2340F54()
{
  uint64_t v1 = *(void **)(v0 + qword_1EBB6ED60);
  id v2 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v1, sel_setFont_, v2);
}

id sub_1C2340FDC()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for BaseAccountFeedItemView();
  objc_msgSendSuper2(&v3, sel_layoutMarginsDidChange);
  id v1 = sub_1C2340A80();
  objc_msgSend(v1, sel_setLayoutMargins_, *MEMORY[0x1E4FB2848], *(double *)(MEMORY[0x1E4FB2848] + 8), *(double *)(MEMORY[0x1E4FB2848] + 16), *(double *)(MEMORY[0x1E4FB2848] + 24));

  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t type metadata accessor for BaseAccountFeedItemView()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C23410A8(void *a1)
{
  id v1 = a1;
  sub_1C2340FDC();
}

void sub_1C23410F0()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for BaseAccountFeedItemView();
  objc_msgSendSuper2(&v3, sel_tintColorDidChange);
  id v1 = *(void **)&v0[qword_1EBB6ED60];
  id v2 = objc_msgSend(v0, sel_tintColor);
  objc_msgSend(v1, sel_setTextColor_, v2);
}

void sub_1C23411AC(void *a1)
{
  id v1 = a1;
  sub_1C23410F0();
}

void sub_1C23411F4(void *a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for BaseAccountFeedItemView();
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, a1);
  if (a1)
  {
    objc_msgSend(a1, sel_displayPixel);
    double v4 = v3;
  }
  else
  {
    double v4 = 0.0;
  }
  id v5 = objc_msgSend(v1, sel_traitCollection);
  objc_msgSend(v5, sel_displayPixel);
  double v7 = v6;

  if (!a1 || v4 != v7) {
    objc_msgSend(v1, sel_setNeedsLayout);
  }
}

void sub_1C23412F0(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_1C23411F4(a3);
}

id sub_1C234135C()
{
  id v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for BaseAccountFeedItemView();
  objc_msgSendSuper2(&v6, sel_layoutSubviews);
  objc_msgSend(v1, sel_bounds);
  CGFloat Width = CGRectGetWidth(v8);
  if ((*(uint64_t (**)(void))(ObjectType + 240))())
  {
    sub_1C2341550((uint64_t)v7, Width);
    objc_msgSend(*(id *)&v1[qword_1EBB6ED50], sel_setFrame_, v7[0], v7[1], v7[2], v7[3]);
    objc_msgSend(*(id *)&v1[qword_1EBB6ED58], sel_setFrame_, v7[4], v7[5], v7[6], v7[7]);
  }
  else
  {
    sub_1C2341550((uint64_t)v7, Width);
  }
  id v4 = sub_1C2340A80();
  objc_msgSend(v4, sel_setFrame_, v7[8], v7[9], v7[10], v7[11]);

  return objc_msgSend(*(id *)&v1[qword_1EBB6ED60], sel_setFrame_, v7[12], v7[13], v7[14], v7[15]);
}

void sub_1C2341508(void *a1)
{
  id v1 = a1;
  sub_1C234135C();
}

double sub_1C2341550@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>)
{
  double v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_1C2550850();
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = MEMORY[0x1F4188790](v7).n128_u64[0];
  id v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(v3, sel_traitCollection, v9);
  objc_msgSend(v12, sel_displayPixel);
  CGFloat v51 = v13;

  objc_msgSend(v3, sel_directionalLayoutMargins);
  double MinX = v14;
  id v16 = objc_msgSend(v3, sel_directionalLayoutMargins);
  double v18 = v17;
  double v19 = a2 - MinX - v17;
  if ((*(uint64_t (**)(id))(ObjectType + 240))(v16))
  {
    id v20 = *(void **)&v3[qword_1EBB6ED50];
    objc_msgSend(v20, sel_sizeThatFits_, a2, 1.79769313e308);
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E4FBBEA8], v7);
    id v21 = objc_msgSend(v20, sel_traitCollection);
    objc_msgSend(v21, sel_displayScale);
    sub_1C254CDC0();
    double v23 = v22;
    objc_msgSend(v21, sel_displayScale);
    sub_1C254CDC0();
    CGFloat v25 = v24;
    double v49 = v24;

    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    if (v23 <= a2) {
      a2 = v23;
    }
    CGFloat v50 = a2;
    if (objc_msgSend(v3, sel_effectiveUserInterfaceLayoutDirection) != (id)1) {
      double v18 = MinX;
    }
    v54.origin.double x = 0.0;
    v54.origin.double y = 0.0;
    v54.size.double width = a2;
    v54.size.double height = v25;
    CGFloat MaxY = CGRectGetMaxY(v54);
    double v27 = *(double *)&v3[qword_1EBB6ED40];
    double v28 = MaxY + v27;
    id v29 = sub_1C2340A80();
    objc_msgSend(v29, sel_sizeThatFits_, v19, 1.79769313e308);
    CGFloat v31 = v30;

    v55.origin.double x = v18;
    v55.origin.double y = v28;
    v55.size.double width = v19;
    CGFloat v32 = v51;
    v55.size.double height = v51;
    double MinX = CGRectGetMinX(v55);
    v56.origin.double x = v18;
    v56.origin.double y = v28;
    v56.size.double width = v19;
    v56.size.double height = v32;
    double v33 = v27 + CGRectGetMaxY(v56);
    double v34 = sub_1C23419E8(v19);
    double v52 = v35;
    double v53 = v34;
    v57.origin.double x = v18;
    v57.origin.double y = v28;
    v57.size.double width = v19;
    v57.size.double height = v32;
    CGFloat v36 = CGRectGetMinX(v57);
    v58.origin.double x = MinX;
    v58.origin.double y = v33;
    v58.size.double width = v19;
    v58.size.double height = v31;
    double v37 = CGRectGetMaxY(v58);
    double v38 = v49;
    CGFloat v39 = v50;
    uint64_t v40 = &qword_1EBB6ED48;
    double v41 = v19;
  }
  else
  {
    id v42 = sub_1C2340A80();
    objc_msgSend(v42, sel_sizeThatFits_, v19, 1.79769313e308);
    CGFloat v31 = v43;

    if (objc_msgSend(v3, sel_effectiveUserInterfaceLayoutDirection) == (id)1) {
      double MinX = v18;
    }
    double v33 = *(double *)&v3[qword_1EBB6ED40];
    double v44 = sub_1C23419E8(v19);
    double v52 = v45;
    double v53 = v44;
    v59.origin.double x = MinX;
    v59.origin.double y = v33;
    v59.size.double width = v19;
    v59.size.double height = v31;
    CGFloat v36 = CGRectGetMinX(v59);
    v60.origin.double x = MinX;
    v60.origin.double y = v33;
    v60.size.double width = v19;
    v60.size.double height = v31;
    double v37 = CGRectGetMaxY(v60);
    uint64_t v40 = &qword_1EBB6D970;
    CGFloat v39 = 0.0;
    double v38 = 0.0;
    double v18 = 0.0;
    double v28 = 0.0;
    double v41 = 0.0;
    CGFloat v32 = 0.0;
  }
  double v46 = v37 + *(double *)&v3[*v40];
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(CGFloat *)(a1 + 16) = v39;
  *(double *)(a1 + 24) = v38;
  *(double *)(a1 + 32) = v18;
  *(double *)(a1 + 40) = v28;
  *(double *)(a1 + 48) = v41;
  *(CGFloat *)(a1 + 56) = v32;
  *(double *)(a1 + 64) = MinX;
  *(double *)(a1 + 72) = v33;
  *(double *)(a1 + 80) = v19;
  *(CGFloat *)(a1 + 88) = v31;
  *(CGFloat *)(a1 + 96) = v36;
  *(double *)(a1 + 104) = v46;
  double result = v52;
  *(double *)(a1 + 112) = v53;
  *(double *)(a1 + 120) = result;
  return result;
}

CGFloat sub_1C234194C(CGFloat a1)
{
  sub_1C2341550((uint64_t)&v3, a1);
  CGRectGetMaxY(v4);
  return a1;
}

double sub_1C234199C(void *a1, CGFloat a2)
{
  id v3 = a1;
  double v4 = sub_1C234194C(a2);

  return v4;
}

double sub_1C23419E8(double a1)
{
  id v3 = *(void **)(v1 + qword_1EBB6ED60);
  id v4 = objc_msgSend(v3, sel_text);
  double v5 = 0.0;
  if (v4)
  {
    objc_super v6 = v4;
    uint64_t v7 = sub_1C254F470();
    unint64_t v9 = v8;

    swift_bridgeObjectRelease();
    uint64_t v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0) {
      uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
    }
    if (v10)
    {
      objc_msgSend(v3, sel_sizeThatFits_, a1, 1.79769313e308);
      return a1;
    }
  }
  return v5;
}

id BaseAccountFeedItemView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id BaseAccountFeedItemView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = qword_1EBB6ED50;
  id v10 = objc_allocWithZone((Class)type metadata accessor for AccountView(0));
  id v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_init);
  uint64_t v12 = qword_1EBB6ED58;
  *(void *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  *(void *)&v11[qword_1EBB6ED38] = 0;
  uint64_t v13 = qword_1EBB6ED60;
  *(void *)&v11[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  *(void *)&v11[qword_1EBB6ED40] = 0x4028000000000000;
  *(void *)&v11[qword_1EBB6ED48] = 0x4020000000000000;
  *(void *)&v11[qword_1EBB6D970] = 0x4018000000000000;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for BaseAccountFeedItemView();
  return objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_1C2341C78(double a1, double a2, double a3, double a4)
{
  return BaseAccountFeedItemView.init(frame:)(a1, a2, a3, a4);
}

id BaseAccountFeedItemView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id BaseAccountFeedItemView.init(coder:)(void *a1)
{
  uint64_t v3 = qword_1EBB6ED50;
  id v4 = objc_allocWithZone((Class)type metadata accessor for AccountView(0));
  double v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);
  uint64_t v6 = qword_1EBB6ED58;
  *(void *)&v5[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  *(void *)&v5[qword_1EBB6ED38] = 0;
  uint64_t v7 = qword_1EBB6ED60;
  *(void *)&v5[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  *(void *)&v5[qword_1EBB6ED40] = 0x4028000000000000;
  *(void *)&v5[qword_1EBB6ED48] = 0x4020000000000000;
  *(void *)&v5[qword_1EBB6D970] = 0x4018000000000000;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for BaseAccountFeedItemView();
  id v8 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);

  return v8;
}

id sub_1C2341E3C(uint64_t a1, uint64_t a2, void *a3)
{
  return BaseAccountFeedItemView.init(coder:)(a3);
}

void sub_1C2341E64()
{
  uint64_t v1 = *(void **)(v0 + qword_1EBB6ED60);
}

id BaseAccountFeedItemView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseAccountFeedItemView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C2341F38@<X0>(void *a1@<X8>)
{
  id result = sub_1C2340A80();
  *a1 = result;
  return result;
}

void sub_1C2341F64(id *a1)
{
}

uint64_t sub_1C2341F90()
{
  return 16;
}

__n128 sub_1C2341F9C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C2341FA8()
{
  return swift_initClassMetadata2();
}

void sub_1C2342010(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_1EBB6ED60);
}

uint64_t method lookup function for BaseAccountFeedItemView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BaseAccountFeedItemView);
}

uint64_t dispatch thunk of BaseAccountFeedItemView.contentView.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of static BaseAccountFeedItemView.makeContentView()()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of static BaseAccountFeedItemView.shouldLayoutAccountHeaderAndSeparator()()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of BaseAccountFeedItemView.apply(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF8))();
}

id MedicationDosageFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  double v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t sub_1C234218C(uint64_t a1)
{
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    unint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v2 = (uint64_t)sub_1C228FB74(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  unint64_t v8 = v2;
  sub_1C23199C8((uint64_t *)&v8);
  unint64_t v3 = v8;
  id v4 = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C231AF3C(v3);
  swift_release();

  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C234224C(uint64_t a1)
{
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    unint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v2 = (uint64_t)sub_1C228FB74(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  unint64_t v8 = v2;
  sub_1C23199C8((uint64_t *)&v8);
  unint64_t v3 = v8;
  id v4 = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C2342934(v3);
  swift_release();

  swift_bridgeObjectRelease();
  return v5;
}

id MedicationDosageFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store);
}

uint64_t MedicationDosageFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context);
}

id MedicationDosageFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for MedicationDosageFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t sub_1C2342374(void *a1)
{
  sub_1C224F52C();
  id v2 = sub_1C23423F8(a1);
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  id v3 = v2;
  sub_1C21ACA3C();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255CEB0;
  *(void *)(v4 + 32) = v3;
  uint64_t v6 = v4;
  sub_1C254F730();
  return v6;
}

id sub_1C23423F8(void *a1)
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v28 - v3;
  uint64_t v5 = sub_1C254CBD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C255CDA0;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C254C730();
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();

  uint64_t v11 = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v12 = sub_1C220D950();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 32) = v8;
  *(void *)(v6 + 40) = v10;
  id v13 = objc_msgSend(a1, sel_hr_dosageTimePeriodString);
  uint64_t v14 = sub_1C254F470();
  uint64_t v16 = v15;

  *(void *)(v6 + 96) = v11;
  *(void *)(v6 + 104) = v12;
  *(void *)(v6 + 72) = v14;
  *(void *)(v6 + 80) = v16;
  id v17 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v4);
  id v18 = objc_msgSend(a1, sel_instruction);
  if (!v18) {
    goto LABEL_8;
  }
  double v19 = v18;
  uint64_t v20 = sub_1C254F470();
  unint64_t v22 = v21;

  uint64_t v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0) {
    uint64_t v23 = v20 & 0xFFFFFFFFFFFFLL;
  }
  if (!v23)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    id v24 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C254C730();
    unint64_t v22 = v25;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  id v26 = sub_1C2389A40(v20, v22);

  swift_bridgeObjectRelease_n();
  return v26;
}

id MedicationDosageFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MedicationDosageFormatter.init()()
{
}

id MedicationDosageFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDosageFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C2342898()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store);
}

uint64_t sub_1C23428AC()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context);
}

id sub_1C23428C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = (objc_class *)type metadata accessor for MedicationDosageFormatter();
  id v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI25MedicationDosageFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

uint64_t sub_1C2342934(unint64_t a1)
{
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      sub_1C224F52C();
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v5 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v6 = (id)MEMORY[0x1C87588E0](i - 4, a1);
          uint64_t v7 = i - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_14;
          }
        }
        else
        {
          id v6 = *(id *)(a1 + 8 * i);
          uint64_t v7 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
        }
        id v8 = v6;
        id v9 = sub_1C23423F8(v8);
        if (v9)
        {
          id v10 = v9;
          sub_1C21ACA3C();
          uint64_t v11 = swift_allocObject();
          *(_OWORD *)(v11 + 16) = xmmword_1C255CEB0;
          *(void *)(v11 + 32) = v10;
          unint64_t v13 = v11;
          sub_1C254F730();
          unint64_t v4 = v13;
        }
        else
        {

          unint64_t v4 = MEMORY[0x1E4FBC860];
        }
        sub_1C22723E8(v4);
        if (v7 == v2)
        {
          swift_bridgeObjectRelease();
          return v14;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t type metadata accessor for MedicationDosageFormatter()
{
  return self;
}

unint64_t sub_1C2342AE8(uint64_t a1)
{
  unint64_t result = sub_1C2342B10();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C2342B10()
{
  unint64_t result = qword_1EA2E15B0;
  if (!qword_1EA2E15B0)
  {
    type metadata accessor for MedicationDosageFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E15B0);
  }
  return result;
}

uint64_t method lookup function for MedicationDosageFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationDosageFormatter);
}

uint64_t dispatch thunk of MedicationDosageFormatter.structuredItems(from:country:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of MedicationDosageFormatter.displayItems(from:country:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicationDosageFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_1C2342C2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2342C90(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v2) {
      break;
    }
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2550490();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x1C87588E0](v4, a1);
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      id v6 = v5;
      ++v4;
      id v7 = objc_msgSend(v5, sel_mainRecord);

      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      if (v2 == v4) {
        return v8;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t SignedClinicalDataImporter.__allocating_init(healthStore:data:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_cachedSource) = 0;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F677D0]), sel_initWithHealthStore_, a1);
  sub_1C2342ED0(a2, v4 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data);
  return v4;
}

uint64_t SignedClinicalDataImporter.init(healthStore:data:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_cachedSource) = 0;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F677D0]), sel_initWithHealthStore_, a1);
  sub_1C2342ED0(a2, v2 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data);
  return v2;
}

uint64_t sub_1C2342ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SignedClinicalDataImporter.DataType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SignedClinicalDataImporter.DataType(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E15C8);
}

id sub_1C2342F54()
{
  uint64_t v1 = sub_1C254CAD0();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2347600(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v41 - v5;
  uint64_t v7 = sub_1C254C900();
  uint64_t v48 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (char *)&v41 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v16 = type metadata accessor for SignedClinicalDataImporter.DataType(0);
  MEMORY[0x1F4188790](v16);
  id v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_cachedSource);
  if (!v19)
  {
    uint64_t v42 = OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_cachedSource;
    double v43 = 0;
    double v44 = v12;
    double v45 = v6;
    double v46 = v15;
    id v47 = (void *)v7;
    sub_1C2343CD0(v0 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data, (uint64_t)v18);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v23 = v48;
    id v24 = *(void (**)(void))(v48 + 32);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v25 = v0;
      uint64_t v26 = v48;
      id v20 = v47;
      ((void (*)(char *, char *, void *))v24)(v9, v18, v47);
      sub_1C21AB51C(0, &qword_1EA2E15E0);
      sub_1C254C840();
      uint64_t v27 = v49;
      id v28 = sub_1C2343620();
      if (v27)
      {
        swift_willThrow();
        id v29 = v9;
LABEL_11:
        (*(void (**)(char *, id))(v26 + 8))(v29, v20);
        return v20;
      }
      double v37 = v28;
      (*(void (**)(char *, id))(v26 + 8))(v9, v20);
      double v38 = *(void **)(v0 + v42);
      *(void *)(v25 + v42) = v37;
      id v20 = v37;
    }
    else
    {
      double v30 = v47;
      id v29 = v46;
      v24();
      char v31 = sub_1C254C8B0();
      sub_1C21AB51C(0, &qword_1EA2E15E8);
      uint64_t v32 = (uint64_t)v44;
      (*(void (**)(char *, char *, void *))(v23 + 16))(v44, v29, v30);
      uint64_t v33 = (uint64_t)v45;
      (*(void (**)(char *, uint64_t, uint64_t, void *))(v23 + 56))(v45, 1, 1, v30);
      sub_1C254CAC0();
      uint64_t v34 = v49;
      id v35 = sub_1C23433A4(v32, v33, (uint64_t)v3, 0, 0);
      if (v34)
      {
        uint64_t v26 = v23;
        if (v31) {
          sub_1C254C890();
        }
        id v20 = v47;
        goto LABEL_11;
      }
      CGFloat v39 = v35;
      uint64_t v40 = v23;
      id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F677C8]), sel_initWithFile_type_, v35, 1);

      if (v31) {
        sub_1C254C890();
      }
      (*(void (**)(char *, void *))(v40 + 8))(v29, v47);
    }
    double v19 = v43;
    goto LABEL_3;
  }
  id v20 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_cachedSource);
LABEL_3:
  id v21 = v19;
  return v20;
}

id sub_1C23433A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v23[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v7 = (void *)sub_1C254C870();
  uint64_t v8 = sub_1C254C900();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1C254C870();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  }
  uint64_t v11 = (void *)sub_1C254CA50();
  if (a5)
  {
    unint64_t v12 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v12 = 0;
  }
  v23[0] = 0;
  id v13 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_signedClinicalDataFileWithURL_sourceURL_receivedDate_countryOfOrigin_error_, v7, v10, v11, v12, v23);

  id v14 = v23[0];
  if (v13)
  {
    uint64_t v15 = sub_1C254CAD0();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
    id v17 = v14;
    v16(a3, v15);
  }
  else
  {
    id v18 = v23[0];
    sub_1C254C820();

    swift_willThrow();
    uint64_t v19 = sub_1C254CAD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a3, v19);
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v13;
}

id sub_1C2343620()
{
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  v5[0] = 0;
  id v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_sourceWithQRCodeValue_error_, v0, v5);

  if (v1)
  {
    id v2 = v5[0];
  }
  else
  {
    id v3 = v5[0];
    sub_1C254C820();

    swift_willThrow();
  }
  return v1;
}

void SignedClinicalDataImporter.parseRecords(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v29 = a1;
  uint64_t v28 = sub_1C254E560();
  uint64_t v5 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v27[-v7];
  uint64_t v9 = sub_1C254C900();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for SignedClinicalDataImporter.DataType(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = &v27[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2343CD0(v3 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v15, v9);
    uint64_t v16 = (void *)sub_1C254C870();
    unsigned int v17 = objc_msgSend(v16, sel_hk_isRewrittenEUDigitalCOVIDCertificateQRCodeURL);

    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    if (v17) {
      char v18 = 2;
    }
    else {
      char v18 = 1;
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v15, v9);
    char v18 = 0;
  }
  id v19 = sub_1C2342F54();
  sub_1C254E510();
  id v20 = sub_1C254E550();
  os_log_type_t v21 = sub_1C254FA40();
  if (os_log_type_enabled(v20, v21))
  {
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v22 = 0;
    _os_log_impl(&dword_1C21A1000, v20, v21, "SignedClinicalDataImporter: parsing SCD records", v22, 2u);
    MEMORY[0x1C875A0B0](v22, -1, -1);
  }

  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v28);
  uint64_t v23 = *(void **)(v3 + 24);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v29;
  *(void *)(v24 + 16) = v3;
  *(void *)(v24 + 24) = v25;
  *(void *)(v24 + 32) = a2;
  *(unsigned char *)(v24 + 40) = v18;
  aBlock[4] = sub_1C23460A0;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23447F8;
  aBlock[3] = &block_descriptor_36;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v23, sel_parseSignedClinicalData_options_completion_, v19, 1, v26);

  _Block_release(v26);
}

uint64_t sub_1C2343CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SignedClinicalDataImporter.DataType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2343D34(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v24 = a6;
  uint64_t v11 = sub_1C254F1C0();
  uint64_t v27 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = sub_1C254F200();
  uint64_t v14 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v25 = sub_1C254FC70();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = a3;
  *(void *)(v17 + 40) = a4;
  *(void *)(v17 + 48) = a5;
  *(unsigned char *)(v17 + 56) = v24;
  aBlock[4] = sub_1C23475EC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_47_0;
  char v18 = _Block_copy(aBlock);
  id v19 = a1;
  id v20 = a2;
  swift_retain();
  swift_retain();
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C220DA34();
  sub_1C2347600(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  os_log_type_t v21 = (void *)v25;
  MEMORY[0x1C87581B0](0, v16, v13, v18);
  _Block_release(v18);

  (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v13, v11);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v26);
}

void sub_1C234402C(void *a1, void *a2, uint64_t a3, void (*a4)(void), uint64_t a5, char a6)
{
  id v47 = a4;
  uint64_t v48 = sub_1C254E560();
  uint64_t v11 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v45 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v45 - v16;
  if (a1)
  {
    id v18 = a1;
    sub_1C254E510();
    id v19 = sub_1C254E550();
    os_log_type_t v20 = sub_1C254FA40();
    if (os_log_type_enabled(v19, v20))
    {
      char v21 = a6;
      id v22 = v18;
      uint64_t v23 = v11;
      int v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v24 = 0;
      _os_log_impl(&dword_1C21A1000, v19, v20, "SignedClinicalDataImporter: parsing SCD records completed", v24, 2u);
      uint64_t v25 = v24;
      uint64_t v11 = v23;
      id v18 = v22;
      a6 = v21;
      MEMORY[0x1C875A0B0](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v48);
    id v26 = objc_msgSend(v18, sel_items);
    sub_1C21AB51C(0, &qword_1EA2E15D8);
    unint64_t v27 = sub_1C254F710();

    unint64_t v28 = sub_1C2342C90(v27);
    swift_bridgeObjectRelease();
    id v29 = objc_allocWithZone((Class)type metadata accessor for SignedClinicalDataPreviewViewController());
    swift_retain();
    id v31 = SignedClinicalDataPreviewViewController.init(records:importer:)(v28, a3);
    id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B78]), sel_initWithRootViewController_, v31);
    objc_msgSend(v32, sel_setModalPresentationStyle_, 2);
    if (qword_1EBB6D840 != -1) {
      swift_once();
    }
    LOBYTE(v50) = a6;
    *(_WORD *)((char *)&v50 + 1) = 0;
    uint64_t v33 = &v50;
    AnalyticsManager.postSignedClinicalDataImportEvent(_:)((HealthRecordsUI::SignedClinicalDataImportEvent)v33);
    ((void (*)(id))v47)(v32);
  }
  else
  {
    v45[2] = a5;
    if (a2) {
      id v30 = a2;
    }
    else {
      id v30 = objc_msgSend(self, sel_hk_error_userInfo_, 0, 0);
    }
    id v34 = a2;
    sub_1C254E510();
    id v35 = v30;
    id v36 = v30;
    double v37 = sub_1C254E550();
    os_log_type_t v38 = sub_1C254FA20();
    if (os_log_type_enabled(v37, v38))
    {
      CGFloat v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v46 = v11;
      uint64_t v41 = v40;
      uint64_t v50 = v40;
      *(_DWORD *)CGFloat v39 = 136315138;
      swift_getErrorValue();
      uint64_t v42 = sub_1C2550940();
      uint64_t v49 = sub_1C21AD354(v42, v43, &v50);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v37, v38, "SignedClinicalDataImporter: failed to parse SCD, error: %s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v41, -1, -1);
      MEMORY[0x1C875A0B0](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v14, v48);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v48);
    }
    id v44 = sub_1C2345EAC(a2, 0, 0);
    v47();
  }
}

void sub_1C23447F8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void SignedClinicalDataImporter.parseAndVerifyRecords(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)aBlock - v9 + 16;
  id v11 = sub_1C2342F54();
  sub_1C254E510();
  uint64_t v12 = sub_1C254E550();
  os_log_type_t v13 = sub_1C254FA40();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_1C21A1000, v12, v13, "SignedClinicalDataImporter: parsing & verifying SCD records", v14, 2u);
    MEMORY[0x1C875A0B0](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v15 = *(void **)(v3 + 24);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  aBlock[4] = sub_1C23460F0;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23447F8;
  aBlock[3] = &block_descriptor_6_1;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_parseSignedClinicalData_options_completion_, v11, 0, v17);

  _Block_release(v17);
}

uint64_t sub_1C2344C70(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C254F1C0();
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C254F200();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  os_log_type_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v14 = (void *)sub_1C254FC70();
  uint64_t v15 = (void *)swift_allocObject();
  long long v15[2] = a1;
  v15[3] = a3;
  void v15[4] = a4;
  v15[5] = a2;
  aBlock[4] = sub_1C2347590;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  aBlock[3] = &block_descriptor_41_0;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a1;
  swift_retain();
  id v18 = a2;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C220DA34();
  sub_1C2347600(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C21FFDEC();
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v20);
}

uint64_t sub_1C2344F4C(void *a1, void (*a2)(uint64_t), uint64_t a3, void *a4)
{
  uint64_t v7 = sub_1C254E560();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  os_log_type_t v13 = (char *)v39 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v39 - v15;
  if (a1)
  {
    id v17 = a1;
    sub_1C254E510();
    id v18 = sub_1C254E550();
    os_log_type_t v19 = sub_1C254FA40();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_1C21A1000, v18, v19, "SignedClinicalDataImporter: parsing & verifying SCD records completed", v20, 2u);
      MEMORY[0x1C875A0B0](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    id v21 = objc_msgSend(v17, sel_items);
    sub_1C21AB51C(0, &qword_1EA2E15D8);
    unint64_t v22 = sub_1C254F710();

    uint64_t v23 = sub_1C2342C90(v22);
    swift_bridgeObjectRelease();
    a2(v23);

    return swift_bridgeObjectRelease();
  }
  else
  {
    if (a4)
    {
      id v25 = a4;
      sub_1C254E510();
      id v26 = a4;
      id v27 = a4;
      unint64_t v28 = sub_1C254E550();
      os_log_type_t v29 = sub_1C254FA20();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v41 = a2;
        id v31 = (uint8_t *)v30;
        uint64_t v40 = swift_slowAlloc();
        uint64_t v43 = v40;
        *(_DWORD *)id v31 = 136315138;
        v39[1] = v31 + 4;
        swift_getErrorValue();
        uint64_t v32 = sub_1C2550940();
        uint64_t v42 = sub_1C21AD354(v32, v33, &v43);
        sub_1C2550120();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C21A1000, v28, v29, "SignedClinicalDataImporter: failed to parse & verify SCD, error: %s", v31, 0xCu);
        uint64_t v34 = v40;
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v34, -1, -1);
        id v35 = v31;
        a2 = v41;
        MEMORY[0x1C875A0B0](v35, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      sub_1C254E510();
      id v36 = sub_1C254E550();
      os_log_type_t v37 = sub_1C254FA20();
      if (os_log_type_enabled(v36, v37))
      {
        os_log_type_t v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v38 = 0;
        _os_log_impl(&dword_1C21A1000, v36, v37, "SignedClinicalDataImporter: failed to parse & verify SCD, no error returned", v38, 2u);
        MEMORY[0x1C875A0B0](v38, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
    return ((uint64_t (*)(void))a2)(0);
  }
}

void SignedClinicalDataImporter.storeRecords(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v28 = a1;
  uint64_t v27 = sub_1C254E560();
  uint64_t v5 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v26[-v7];
  uint64_t v9 = sub_1C254C900();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for SignedClinicalDataImporter.DataType(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = &v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2343CD0(v3 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v15, v9);
    uint64_t v16 = (void *)sub_1C254C870();
    unsigned int v17 = objc_msgSend(v16, sel_hk_isRewrittenEUDigitalCOVIDCertificateQRCodeURL);

    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    if (v17) {
      char v18 = 2;
    }
    else {
      char v18 = 1;
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v15, v9);
    char v18 = 0;
  }
  id v19 = sub_1C2342F54();
  sub_1C254E510();
  uint64_t v20 = sub_1C254E550();
  os_log_type_t v21 = sub_1C254FA40();
  if (os_log_type_enabled(v20, v21))
  {
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v22 = 0;
    _os_log_impl(&dword_1C21A1000, v20, v21, "SignedClinicalDataImporter: storing SCD records", v22, 2u);
    MEMORY[0x1C875A0B0](v22, -1, -1);
  }

  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v27);
  uint64_t v23 = *(void **)(v3 + 24);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v3;
  *(unsigned char *)(v24 + 24) = v18;
  *(void *)(v24 + 32) = v28;
  *(void *)(v24 + 40) = a2;
  aBlock[4] = sub_1C23460FC;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23447F8;
  aBlock[3] = &block_descriptor_12_1;
  id v25 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v23, sel_storeSignedClinicalData_completion_, v19, v25);

  _Block_release(v25);
}

void sub_1C234595C(void *a1, void *a2, uint64_t a3, char a4, void (*a5)(uint64_t, uint64_t, void), uint64_t a6)
{
  uint64_t v11 = sub_1C254E560();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    LOBYTE(v31) = a4;
    id v15 = a1;
    sub_1C23471EC(v15, a2, (char *)&v31, a5, a6);
  }
  else
  {
    sub_1C254E510();
    id v16 = a2;
    id v17 = a2;
    char v18 = sub_1C254E550();
    os_log_type_t v19 = sub_1C254FA20();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v28 = a5;
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v31 = v27;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v29 = a6;
      if (a2)
      {
        swift_getErrorValue();
        uint64_t v21 = sub_1C2550940();
        unint64_t v23 = v22;
      }
      else
      {
        unint64_t v23 = 0xE500000000000000;
        uint64_t v21 = 0x7D6C696E7BLL;
      }
      uint64_t v30 = sub_1C21AD354(v21, v23, &v31);
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v18, v19, "SignedClinicalDataImporter: failed to store SCD, error: %s", v20, 0xCu);
      uint64_t v24 = v27;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v24, -1, -1);
      MEMORY[0x1C875A0B0](v20, -1, -1);

      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      a5 = v28;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
    if (qword_1EBB6D840 != -1) {
      swift_once();
    }
    LOBYTE(v31) = a4;
    *(_WORD *)((char *)&v31 + 1) = 257;
    id v25 = &v31;
    AnalyticsManager.postSignedClinicalDataImportEvent(_:)((HealthRecordsUI::SignedClinicalDataImportEvent)v25);
    a5(0, 0, a2);
  }
}

BOOL sub_1C2345C5C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __n128 v3 = MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v2 + 16))(v5, v6, a1, v3);
  uint64_t v7 = sub_1C2550840();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
  }
  else
  {
    uint64_t v8 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v9, v5, a1);
  }
  uint64_t v10 = (void *)sub_1C254C810();

  if (objc_msgSend(v10, sel_hk_isHealthKitError))
  {
    id v11 = objc_msgSend(v10, sel_code);

    return v11 == (id)115;
  }
  else
  {

    return 0;
  }
}

uint64_t SignedClinicalDataImporter.deinit()
{
  sub_1C234610C(v0 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data);
  return v0;
}

uint64_t SignedClinicalDataImporter.__deallocating_deinit()
{
  sub_1C234610C(v0 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data);
  return swift_deallocClassInstance();
}

id sub_1C2345EAC(void *a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EA2DD680 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EA2E0B60;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  if (!a3)
  {
    id v6 = (id)qword_1EA2E0B60;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (a1) {
    a1 = (void *)sub_1C254C810();
  }
  id v9 = objc_msgSend(self, sel_basicAlertControllerWithTitle_message_internalError_, v7, v8, a1, 0xE000000000000000);

  return v9;
}

uint64_t sub_1C2346098()
{
  return objectdestroyTm_5(41);
}

uint64_t sub_1C23460A0(void *a1, void *a2)
{
  return sub_1C2343D34(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40));
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t sub_1C23460B8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C23460F0(void *a1, void *a2)
{
  return sub_1C2344C70(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_1C23460FC(void *a1, void *a2)
{
  sub_1C234595C(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), *(void (**)(uint64_t, uint64_t, void))(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1C234610C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SignedClinicalDataImporter.DataType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2346168()
{
  return type metadata accessor for SignedClinicalDataImporter(0);
}

uint64_t type metadata accessor for SignedClinicalDataImporter(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E15B8);
}

uint64_t sub_1C2346190()
{
  uint64_t result = type metadata accessor for SignedClinicalDataImporter.DataType(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SignedClinicalDataImporter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SignedClinicalDataImporter);
}

uint64_t dispatch thunk of SignedClinicalDataImporter.__allocating_init(healthStore:data:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t *initializeBufferWithCopyOfBuffer for SignedClinicalDataImporter.DataType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v6 = sub_1C254C900();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SignedClinicalDataImporter.DataType(uint64_t a1)
{
  uint64_t v2 = sub_1C254C900();
  __n128 v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for SignedClinicalDataImporter.DataType(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_1C254C900();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for SignedClinicalDataImporter.DataType(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C234610C(a1);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_1C254C900();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for SignedClinicalDataImporter.DataType(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_1C254C900();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for SignedClinicalDataImporter.DataType(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C234610C(a1);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_1C254C900();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C2346628()
{
  uint64_t result = sub_1C254C900();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C23466B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C254E560();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)aBlock - v11 + 16;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  void v13[4] = a4;
  swift_retain();
  swift_retain();
  id v14 = sub_1C2342F54();
  sub_1C254E510();
  id v15 = sub_1C254E550();
  os_log_type_t v16 = sub_1C254FA40();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = v8;
    char v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v18 = 0;
    _os_log_impl(&dword_1C21A1000, v15, v16, "SignedClinicalDataImporter: parsing & verifying SCD records", v18, 2u);
    os_log_type_t v19 = v18;
    uint64_t v8 = v17;
    MEMORY[0x1C875A0B0](v19, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  uint64_t v20 = *(void **)(a1 + 24);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1C23471E0;
  *(void *)(v21 + 24) = v13;
  aBlock[4] = sub_1C234769C;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23447F8;
  aBlock[3] = &block_descriptor_35_1;
  unint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_parseSignedClinicalData_options_completion_, v14, 0, v22);

  _Block_release(v22);
  return swift_release();
}

uint64_t sub_1C2346AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C254E560();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  uint64_t v38 = v9;
  MEMORY[0x1F4188790](v8);
  v36[2] = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v36 - v12;
  uint64_t v14 = sub_1C254C900();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SignedClinicalDataImporter.DataType(0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (void *)swift_allocObject();
  _OWORD v21[2] = a2;
  v21[3] = a3;
  v36[3] = a3;
  unint64_t v22 = v21;
  v21[4] = a4;
  sub_1C2343CD0(a1 + OBJC_IVAR____TtC15HealthRecordsUI26SignedClinicalDataImporter_data, (uint64_t)v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v36[4] = a4;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v20, v14);
    swift_retain();
    swift_retain();
    uint64_t v24 = (void *)sub_1C254C870();
    unsigned int v25 = objc_msgSend(v24, sel_hk_isRewrittenEUDigitalCOVIDCertificateQRCodeURL);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if (v25) {
      char v26 = 2;
    }
    else {
      char v26 = 1;
    }
  }
  else
  {
    uint64_t v27 = *(void (**)(char *, uint64_t))(v15 + 8);
    swift_retain();
    swift_retain();
    v27(v20, v14);
    char v26 = 0;
  }
  id v28 = sub_1C2342F54();
  sub_1C254E510();
  uint64_t v29 = sub_1C254E550();
  os_log_type_t v30 = sub_1C254FA40();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl(&dword_1C21A1000, v29, v30, "SignedClinicalDataImporter: storing SCD records", v31, 2u);
    MEMORY[0x1C875A0B0](v31, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v37);
  uint64_t v32 = *(void **)(a1 + 24);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = a1;
  *(unsigned char *)(v33 + 24) = v26;
  *(void *)(v33 + 32) = sub_1C234713C;
  *(void *)(v33 + 40) = v22;
  aBlock[4] = sub_1C2347680;
  aBlock[5] = v33;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23447F8;
  aBlock[3] = &block_descriptor_25;
  uint64_t v34 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v32, sel_storeSignedClinicalData_completion_, v28, v34);

  _Block_release(v34);
  return swift_release();
}

uint64_t sub_1C2347134()
{
  return objectdestroyTm_5(40);
}

void sub_1C234713C(uint64_t a1, int a2, void *a3)
{
  sub_1C23DB4E8(a1, a2, a3, *(void *)(v3 + 16), *(void (**)(void, void))(v3 + 24), *(void *)(v3 + 32));
}

uint64_t objectdestroy_8Tm_0()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C234718C()
{
  return objectdestroyTm_5(40);
}

uint64_t objectdestroyTm_5(uint64_t a1)
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t sub_1C23471E0(uint64_t a1)
{
  return sub_1C23DA804(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

void sub_1C23471EC(void *a1, void *a2, char *a3, void (*a4)(uint64_t, uint64_t, void), uint64_t a5)
{
  uint64_t v10 = sub_1C254E560();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v30 - v15;
  char v17 = *a3;
  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  char v31 = v17;
  __int16 v32 = 1;
  uint64_t v18 = &v31;
  AnalyticsManager.postSignedClinicalDataImportEvent(_:)((HealthRecordsUI::SignedClinicalDataImportEvent)v18);
  id v19 = objc_msgSend(a1, sel_items);
  sub_1C21AB51C(0, &qword_1EA2E15D8);
  unint64_t v20 = sub_1C254F710();

  uint64_t v21 = sub_1C2342C90(v20);
  swift_bridgeObjectRelease();
  if (a2)
  {
    v30[0] = a5;
    swift_getErrorValue();
    uint64_t v22 = v30[2];
    id v23 = a2;
    if (sub_1C2345C5C(v22))
    {
      sub_1C254E510();
      uint64_t v24 = sub_1C254E550();
      os_log_type_t v25 = sub_1C254FA40();
      if (os_log_type_enabled(v24, v25))
      {
        char v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v26 = 0;
        _os_log_impl(&dword_1C21A1000, v24, v25, "SignedClinicalDataImporter: storing SCD records completed (all records were duplicates)", v26, 2u);
        MEMORY[0x1C875A0B0](v26, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      a4(v21, 1, 0);
      swift_bridgeObjectRelease();

      return;
    }
  }
  sub_1C254E510();
  uint64_t v27 = sub_1C254E550();
  os_log_type_t v28 = sub_1C254FA40();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl(&dword_1C21A1000, v27, v28, "SignedClinicalDataImporter: storing SCD records completed", v29, 2u);
    MEMORY[0x1C875A0B0](v29, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  a4(v21, 0, 0);
  swift_bridgeObjectRelease();
}

uint64_t sub_1C2347548()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C2347590()
{
  return sub_1C2344F4C(*(void **)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1C234759C()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 57, 7);
}

void sub_1C23475EC()
{
  sub_1C234402C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void (**)(void))(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
}

void sub_1C2347600(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C23476A0(uint64_t a1, void *a2)
{
  sub_1C2227014(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1C2232E74((uint64_t)v5, v3);
  swift_endAccess();
  sub_1C2347714();
  return sub_1C2227100((uint64_t)v5);
}

uint64_t sub_1C2347714()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254E560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C234829C(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28]);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v39 - v7;
  uint64_t v9 = sub_1C254E710();
  uint64_t v40 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C254E890();
  uint64_t v41 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v15, (uint64_t)v43);
  if (!v44)
  {
    sub_1C2227100((uint64_t)v43);
LABEL_12:
    sub_1C254E510();
    id v31 = v1;
    __int16 v32 = sub_1C254E550();
    os_log_type_t v33 = sub_1C254FA20();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v41 = v2;
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v42 = (void *)v35;
      *(_DWORD *)uint64_t v34 = 136446210;
      sub_1C2227014(v15, (uint64_t)v43);
      sub_1C234829C(0, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
      uint64_t v36 = sub_1C254F510();
      v43[0] = sub_1C21AD354(v36, v37, (uint64_t *)&v42);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v32, v33, "Incorrect view model for TextItemCell: %{public}s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v35, -1, -1);
      MEMORY[0x1C875A0B0](v34, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v41);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  uint64_t v39 = v12;
  sub_1C22270A8();
  type metadata accessor for TextItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v16 = v42;
  MEMORY[0x1C87582A0]();
  swift_bridgeObjectRetain();
  sub_1C254E860();
  char v17 = (void *)v16[4];
  if (v17)
  {
    id v18 = v17;
    id v19 = (void (*)(uint64_t *, void))sub_1C254E7A0();
    sub_1C254E770();
    v19(v43, 0);
  }
  unint64_t v20 = (void *)v16[5];
  uint64_t v21 = v39;
  if (v20)
  {
    id v22 = v20;
    id v23 = (void (*)(uint64_t *, void))sub_1C254E7A0();
    sub_1C254E780();
    v23(v43, 0);
  }
  uint64_t v44 = v21;
  uint64_t v45 = MEMORY[0x1E4FB0F88];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v43);
  uint64_t v25 = v41;
  (*(void (**)(uint64_t *, char *, uint64_t))(v41 + 16))(boxed_opaque_existential_1, v14, v21);
  MEMORY[0x1C8758230](v43);
  char v26 = (void *)v16[6];
  if (v26)
  {
    id v27 = v26;
    sub_1C254E6D0();
    id v28 = v27;
    sub_1C254E6C0();
    uint64_t v29 = v40;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v8, v11, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v8, 0, 1, v9);
    MEMORY[0x1C8758250](v8);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
    uint64_t v21 = v39;
  }
  swift_bridgeObjectRetain();
  sub_1C254FD80();
  if (v16[9])
  {
    swift_bridgeObjectRetain();
    os_log_type_t v30 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    os_log_type_t v30 = 0;
  }
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v30);
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v21);
}

uint64_t sub_1C2347D40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI12TextItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C2347D94(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI12TextItemCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C2347714();
  return sub_1C2227100(a1);
}

uint64_t (*sub_1C2347E04(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2347E64;
}

uint64_t sub_1C2347E64(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2347714();
  }
  return result;
}

id TextItemCell.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id TextItemCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI12TextItemCell_item];
  uint64_t v10 = (objc_class *)type metadata accessor for TextItemCell();
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v12.receiver = v4;
  v12.super_class = v10;
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
}

uint64_t type metadata accessor for TextItemCell()
{
  return self;
}

id TextItemCell.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id TextItemCell.init(coder:)(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC15HealthRecordsUI12TextItemCell_item];
  uint64_t v4 = (objc_class *)type metadata accessor for TextItemCell();
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  v7.receiver = v1;
  v7.super_class = v4;
  id v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id TextItemCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C234818C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI12TextItemCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a2);
}

uint64_t method lookup function for TextItemCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TextItemCell);
}

uint64_t dispatch thunk of TextItemCell.item.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x58))();
}

uint64_t dispatch thunk of TextItemCell.item.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of TextItemCell.item.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

void sub_1C234829C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C23482F0(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C2227014(v3, (uint64_t)v5);
  if (v6)
  {
    sub_1C22270A8();
    type metadata accessor for AccountUpgradeItem(0);
    if (swift_dynamicCast())
    {
      swift_release();
      objc_msgSend(v1, sel_setNeedsUpdateConfiguration);
    }
  }
  else
  {
    sub_1C2349610((uint64_t)v5, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  }
  return sub_1C2349610(a1, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
}

void (*sub_1C23483FC(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_item;
  v3[6] = v1;
  v3[7] = v4;
  swift_beginAccess();
  return sub_1C2348468;
}

void sub_1C2348468(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_1C2227014(v3[6] + v3[7], (uint64_t)v3);
    if (v3[3])
    {
      sub_1C22270A8();
      type metadata accessor for AccountUpgradeItem(0);
      if (swift_dynamicCast())
      {
        uint64_t v4 = (void *)v3[6];
        swift_release();
        objc_msgSend(v4, sel_setNeedsUpdateConfiguration);
      }
    }
    else
    {
      sub_1C2349610((uint64_t)v3, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
    }
  }
  free(v3);
}

uint64_t sub_1C2348638()
{
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for AccountUpgradeCell();
  id v1 = objc_msgSendSuper2(&v12, sel__bridgedConfigurationState);
  sub_1C254E680();

  uint64_t v2 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_item;
  swift_beginAccess();
  sub_1C2227014(v2, (uint64_t)&v9);
  if (*((void *)&v10 + 1))
  {
    sub_1C22270A8();
    type metadata accessor for AccountUpgradeItem(0);
    if (swift_dynamicCast())
    {
      uint64_t v3 = v8;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C2349610((uint64_t)&v9, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  }
  uint64_t v3 = 0;
LABEL_6:
  if (qword_1EA2DD6E8 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_1EA2E15F8;
  if (v3)
  {
    type metadata accessor for AccountUpgradeItem(0);
    sub_1C2349564();
    id v5 = v4;
    swift_retain();
    sub_1C2550330();
  }
  else
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    id v6 = (id)qword_1EA2E15F8;
  }
  sub_1C254E6B0();
  return swift_release();
}

void sub_1C23487D4()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_hasSetUpViews;
  if ((*((unsigned char *)v0 + OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_hasSetUpViews) & 1) == 0)
  {
    uint64_t v2 = (char *)objc_allocWithZone((Class)type metadata accessor for AccountUpgradeTileView());
    id v3 = v0;
    id v4 = sub_1C2349470((uint64_t)v3, v2);
    id v5 = objc_msgSend(v3, sel_contentView);
    objc_msgSend(v5, sel_addSubview_, v4);

    id v6 = objc_msgSend(v3, sel_contentView);
    id v7 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
    objc_msgSend(v6, sel_setBackgroundColor_, v7);

    objc_msgSend(v4, sel_setMaximumContentSizeCategory_, *MEMORY[0x1E4FB2788]);
    id v8 = objc_msgSend(v3, sel_contentView);
    objc_msgSend(v4, sel_hk_alignConstraintsWithView_, v8);

    *((unsigned char *)v0 + v1) = 1;
  }
}

id sub_1C2348B38()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AccountUpgradeCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AccountUpgradeCell()
{
  return self;
}

uint64_t sub_1C2348BD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

void (*sub_1C2348C28(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C23483FC(v2);
  return sub_1C2231658;
}

uint64_t sub_1C2348C80()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_disableAction);
}

uint64_t sub_1C2348C94()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI18AccountUpgradeCell_hideDismiss);
}

uint64_t sub_1C2348CA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t sub_1C2348D14()
{
  uint64_t result = sub_1C254F430();
  qword_1EA2E15F8 = result;
  return result;
}

id sub_1C2348D4C(uint64_t a1, char *a2)
{
  sub_1C23495BC(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)v21 - v5 + 16;
  uint64_t v7 = sub_1C254CB40();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  long long v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v11 = type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItemCell();
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___clipboardIcon] = 1;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___iconView] = 0;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___titleLabel] = 0;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___bodyLabel] = 0;
  v24[3] = v11;
  v24[4] = &off_1F1D947B8;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___separator] = 0;
  v24[0] = a1;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___actionButton] = 0;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___dismissButton] = 0;
  sub_1C21F4424((uint64_t)v24, (uint64_t)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider]);
  objc_super v12 = (objc_class *)type metadata accessor for AccountUpgradeTileView();
  v23.receiver = a2;
  v23.super_class = v12;
  id v13 = objc_msgSendSuper2(&v23, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1C22C91BC();
  uint64_t v14 = a1 + OBJC_IVAR____TtC15HealthRecordsUI47MedicalRecordTimelineAccountUpgradeTileItemCell_item;
  swift_beginAccess();
  sub_1C2227014(v14, (uint64_t)v21);
  if (v22)
  {
    sub_1C22270A8();
    type metadata accessor for MedicalRecordTimelineAccountUpgradeTileItem();
    if (swift_dynamicCast())
    {
      unint64_t v15 = *(void *)(v20 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_1C2550620();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v16 > 1)
      {

        goto LABEL_13;
      }
    }
  }
  else
  {
    sub_1C2349610((uint64_t)v21, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
  }
  sub_1C230E1B8((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {

    sub_1C2349610((uint64_t)v6, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    if (qword_1EBB6D898 != -1) {
      swift_once();
    }
    uint64_t v17 = qword_1EBB6EB60;
    v21[1] = 0;
    _OWORD v21[2] = 0;
    v21[0] = 1;
    LOBYTE(v22) = 1;
    id v18 = v13;
    sub_1C2406048((uint64_t)v10, v21, v17, v18);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
LABEL_13:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
  return v13;
}

id sub_1C234912C(uint64_t a1, char *a2)
{
  sub_1C23495BC(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v20[-1] - v5;
  uint64_t v7 = sub_1C254CB40();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  long long v10 = (char *)&v20[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AccountUpgradeTileCell();
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___clipboardIcon] = 1;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___iconView] = 0;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___titleLabel] = 0;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___bodyLabel] = 0;
  v23[3] = v11;
  unsigned char v23[4] = &off_1F1D95300;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___separator] = 0;
  v23[0] = a1;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___actionButton] = 0;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___dismissButton] = 0;
  sub_1C21F4424((uint64_t)v23, (uint64_t)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider]);
  objc_super v12 = (objc_class *)type metadata accessor for AccountUpgradeTileView();
  v22.receiver = a2;
  v22.super_class = v12;
  id v13 = objc_msgSendSuper2(&v22, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1C22C91BC();
  unint64_t v14 = *(void *)(a1 + OBJC_IVAR___HRAccountUpgradeTileCell_accounts);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v15 >= 2) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2)
  {
LABEL_3:

    goto LABEL_10;
  }
  sub_1C23362EC((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {

    sub_1C2349610((uint64_t)v6, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    if (qword_1EBB6D898 != -1) {
      swift_once();
    }
    uint64_t v16 = qword_1EBB6EB60;
    v20[1] = 0;
    void v20[2] = 0;
    v20[0] = 1;
    char v21 = 1;
    id v17 = v13;
    sub_1C2406048((uint64_t)v10, v20, v16, v17);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
LABEL_10:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
  return v13;
}

id sub_1C2349470(uint64_t a1, char *a2)
{
  uint64_t v4 = type metadata accessor for AccountUpgradeCell();
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___clipboardIcon] = 1;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___iconView] = 0;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___titleLabel] = 0;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___bodyLabel] = 0;
  v8[3] = v4;
  v8[4] = &off_1F1D95C08;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___separator] = 0;
  v8[0] = a1;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___actionButton] = 0;
  *(void *)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView____lazy_storage___dismissButton] = 0;
  sub_1C21F4424((uint64_t)v8, (uint64_t)&a2[OBJC_IVAR____TtC15HealthRecordsUI22AccountUpgradeTileView_configurationProvider]);
  v7.receiver = a2;
  v7.super_class = (Class)type metadata accessor for AccountUpgradeTileView();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1C22C91BC();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  return v5;
}

unint64_t sub_1C2349564()
{
  unint64_t result = qword_1EA2E1620;
  if (!qword_1EA2E1620)
  {
    type metadata accessor for AccountUpgradeItem(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1620);
  }
  return result;
}

void sub_1C23495BC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2349610(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C23495BC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id sub_1C234966C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___titleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    id v6 = objc_msgSend(self, sel_labelColor);
    objc_msgSend(v5, sel_setTextColor_, v6);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    objc_super v7 = (void *)sub_1C254FE50();
    objc_msgSend(v5, sel_setFont_, v7);

    objc_msgSend(v5, sel_setAdjustsFontForContentSizeCategory_, 1);
    LODWORD(v8) = 1132068864;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v8);
    objc_msgSend(v5, sel_setNumberOfLines_, 0);
    uint64_t v9 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_1C23497DC()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___disclosureImageView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___disclosureImageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___disclosureImageView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_init);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
    id v6 = (void *)sub_1C254FEF0();
    objc_msgSend(v5, sel_setImage_, v6);

    id v7 = objc_msgSend(self, sel_tertiaryLabelColor);
    objc_msgSend(v5, sel_setTintColor_, v7);

    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    LODWORD(v8) = 1144750080;
    objc_msgSend(v5, sel_setContentHuggingPriority_forAxis_, 0, v8);
    LODWORD(v9) = 1148846080;
    objc_msgSend(v5, sel_setContentCompressionResistancePriority_forAxis_, 0, v9);
    id v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1C2349968(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___titleLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___disclosureImageView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_margin] = 0x4030000000000000;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_topAndBottomDistance] = 0x4020000000000000;
  double v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_item];
  id v10 = (objc_class *)type metadata accessor for NavigationCell();
  *(_OWORD *)double v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v16.receiver = v4;
  v16.super_class = v10;
  id v11 = objc_msgSendSuper2(&v16, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C2349C54();
  sub_1C234A280(v11);
  unint64_t v12 = sub_1C234A540(v11);
  id v13 = self;
  sub_1C227227C(v12);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  unint64_t v14 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_activateConstraints_, v14);

  return v11;
}

id sub_1C2349AF4(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___titleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell____lazy_storage___disclosureImageView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_margin] = 0x4030000000000000;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_topAndBottomDistance] = 0x4020000000000000;
  id v3 = &v1[OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_item];
  uint64_t v4 = (objc_class *)type metadata accessor for NavigationCell();
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  v7.receiver = v1;
  v7.super_class = v4;
  id v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

void sub_1C2349C54()
{
  id v1 = objc_msgSend(v0, sel_contentView);
  id v2 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v1, sel_setBackgroundColor_, v2);

  id v3 = objc_msgSend(v0, sel_contentView);
  id v4 = objc_msgSend(v3, sel_heightAnchor);

  id v5 = objc_msgSend(v4, sel_constraintGreaterThanOrEqualToConstant_, 60.0);
  LODWORD(v6) = 1148829696;
  objc_msgSend(v5, sel_setPriority_, v6);
  objc_msgSend(v5, sel_setActive_, 1);
  id v7 = objc_msgSend(v0, sel_contentView);
  id v8 = sub_1C234966C();
  objc_msgSend(v7, sel_addSubview_, v8);

  id v9 = objc_msgSend(v0, sel_contentView);
  id v10 = sub_1C23497DC();
  objc_msgSend(v9, sel_addSubview_, v10);
}

void sub_1C2349DF8(void *a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for NavigationCell();
  objc_msgSendSuper2(&v7, sel_traitCollectionDidChange_, a1);
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_legibilityWeight);

  if (!a1 || v4 != objc_msgSend(a1, sel_legibilityWeight))
  {
    id v5 = sub_1C234966C();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    double v6 = (void *)sub_1C254FE50();
    objc_msgSend(v5, sel_setFont_, v6);
  }
}

void sub_1C2349F6C()
{
  uint64_t v1 = sub_1C254E560();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_item;
  swift_beginAccess();
  sub_1C2227014(v5, (uint64_t)v20);
  if (!v20[3])
  {
    sub_1C2227100((uint64_t)v20);
LABEL_6:
    sub_1C254E510();
    id v10 = v0;
    id v11 = sub_1C254E550();
    os_log_type_t v12 = sub_1C254FA20();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v18 = v1;
      unint64_t v14 = (uint8_t *)v13;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = v15;
      *(_DWORD *)unint64_t v14 = 136446210;
      sub_1C2227014(v5, (uint64_t)v20);
      sub_1C23495BC(0, (unint64_t *)&qword_1EA2E5330, (void (*)(uint64_t))sub_1C22270A8);
      uint64_t v16 = sub_1C254F510();
      v20[0] = sub_1C21AD354(v16, v17, &v19);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v11, v12, "Incorrect view model for NavigationCell: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v15, -1, -1);
      MEMORY[0x1C875A0B0](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    return;
  }
  sub_1C22270A8();
  type metadata accessor for NavigationItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v6 = v19;
  id v7 = sub_1C234966C();
  LOBYTE(v20[0]) = *(unsigned char *)(v6 + 32);
  LOBYTE(v19) = *(unsigned char *)(v6 + 33);
  sub_1C234B76C(v20, (unsigned __int8 *)&v19);
  if (v8)
  {
    id v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v9 = 0;
  }
  objc_msgSend(v7, sel_setText_, v9);
  swift_release();
}

uint64_t sub_1C234A280(void *a1)
{
  uint64_t v18 = MEMORY[0x1E4FBC860];
  id v2 = sub_1C234966C();
  id v3 = objc_msgSend(v2, sel_leadingAnchor);

  id v4 = objc_msgSend(a1, sel_contentView);
  id v5 = objc_msgSend(v4, sel_leadingAnchor);

  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 16.0);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v7 = sub_1C234966C();
  id v8 = objc_msgSend(v7, sel_topAnchor);

  id v9 = objc_msgSend(a1, sel_contentView);
  id v10 = objc_msgSend(v9, sel_topAnchor);

  id v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v10, 8.0);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v12 = sub_1C234966C();
  id v13 = objc_msgSend(v12, sel_bottomAnchor);

  id v14 = objc_msgSend(a1, sel_contentView);
  id v15 = objc_msgSend(v14, sel_bottomAnchor);

  id v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v15, -8.0);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  return v18;
}

uint64_t sub_1C234A540(void *a1)
{
  uint64_t v18 = MEMORY[0x1E4FBC860];
  id v2 = sub_1C23497DC();
  id v3 = objc_msgSend(v2, sel_leadingAnchor);

  id v4 = sub_1C234966C();
  id v5 = objc_msgSend(v4, sel_trailingAnchor);

  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 8.0);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v7 = sub_1C23497DC();
  id v8 = objc_msgSend(v7, sel_trailingAnchor);

  id v9 = objc_msgSend(a1, sel_contentView);
  id v10 = objc_msgSend(v9, sel_trailingAnchor);

  id v11 = objc_msgSend(v8, sel_constraintEqualToAnchor_constant_, v10, -16.0);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  id v12 = sub_1C23497DC();
  id v13 = objc_msgSend(v12, sel_centerYAnchor);

  id v14 = objc_msgSend(a1, sel_contentView);
  id v15 = objc_msgSend(v14, sel_centerYAnchor);

  id v16 = objc_msgSend(v13, sel_constraintEqualToAnchor_, v15);
  MEMORY[0x1C8757C00]();
  if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  return v18;
}

void sub_1C234A7FC(uint64_t a1, void *a2)
{
  sub_1C23495BC(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v10 = (char *)&v92 - v9;
  uint64_t v11 = v2 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_item;
  swift_beginAccess();
  sub_1C2227014(v11, (uint64_t)v103);
  if (v104)
  {
    sub_1C22270A8();
    type metadata accessor for NavigationItem();
    uint64_t v12 = swift_dynamicCast();
    if (v12)
    {
      uint64_t v13 = v102[0];
      uint64_t v14 = *(unsigned __int8 *)(v102[0] + 33);
      uint64_t v15 = 3;
      switch(*(unsigned char *)(v102[0] + 32))
      {
        case 1:
          uint64_t v15 = 2;
          goto LABEL_5;
        case 2:
LABEL_5:
          uint64_t v99 = a1;
          double v100 = a2;
          if (qword_1EBB6EF30 == -1) {
            goto LABEL_6;
          }
          goto LABEL_57;
        case 3:
          id v97 = v7;
          id v30 = objc_msgSend(self, sel_supportedRecordCategoriesByCategoryType);
          if (!v30)
          {
            __break(1u);
LABEL_60:
            sub_1C21AB51C(0, &qword_1EA2DE508);
            sub_1C2550910();
            __break(1u);
            JUMPOUT(0x1C234B314);
          }
          id v31 = v30;
          sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
          sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FFC0);
          sub_1C21A9630();
          uint64_t v32 = sub_1C254F2D0();

          id v33 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v14);
          uint64_t v34 = sub_1C24AA1D0(v33, v32);

          uint64_t v35 = swift_bridgeObjectRelease();
          if (!v34)
          {
LABEL_41:
            swift_release();
            return;
          }
          id v95 = v34;
          id v96 = v10;
          uint64_t v99 = a1;
          double v100 = a2;
          if (qword_1EBB6EF30 != -1) {
            uint64_t v35 = swift_once();
          }
          uint64_t v36 = *(void **)(v13 + 40);
          v102[0] = *(void *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_lock);
          MEMORY[0x1F4188790](v35);
          sub_1C254CEE0();
          sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
          sub_1C21A89AC();
          id v37 = v36;
          swift_retain();
          sub_1C254E1D0();

          swift_release();
          id v94 = *(id *)v103;
          id v38 = objc_msgSend(self, sel_predicateForMedicalRecordWithState_, 1);
          uint64_t v93 = v14;
          v103[0] = v14;
          unint64_t v39 = DisplayCategory.Kind.medicalTypes.getter();
          uint64_t v40 = sub_1C2204294(MEMORY[0x1E4FBC860]);
          if (v39 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v41 = sub_1C2550620();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v41 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          uint64_t v98 = v13;
          id v101 = v38;
          if (!v41)
          {
LABEL_44:
            swift_bridgeObjectRelease();
            if (qword_1EBB6D858 != -1) {
              swift_once();
            }
            id v66 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))sub_1C221C4B8(v40);
            swift_bridgeObjectRelease();
            uint64_t v67 = sub_1C254CB40();
            double v68 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56);
            uint64_t v69 = (uint64_t)v96;
            v68(v96, 1, 1, v67);
            uint64_t v70 = (uint64_t)v97;
            v68(v97, 1, 1, v67);
            id v71 = objc_allocWithZone((Class)type metadata accessor for MedicalRecordTimelineViewController());
            id v72 = v94;
            id v73 = v95;
            id v74 = v95;
            swift_bridgeObjectRetain();
            id v75 = sub_1C21FDDB8(v72, v73, v69, 0, 0, v70, 0, v66, 0);

            id v76 = objc_msgSend(v75, sel_navigationItem);
            objc_msgSend(v76, sel_setLargeTitleDisplayMode_, 2);
            swift_bridgeObjectRelease();

            uint64_t v77 = swift_dynamicCastClass();
            if (v77)
            {
              uint64_t v78 = v77;
              v103[0] = *(unsigned char *)(v98 + 32);
              LOBYTE(v102[0]) = v93;
              id v79 = v75;
              uint64_t v80 = sub_1C234B76C(v103, (unsigned __int8 *)v102);
              uint64_t v82 = v81;
              id v83 = (uint64_t *)(v78 + OBJC_IVAR___HRMedicalRecordTimelineViewController_overrideTitle);
              swift_beginAccess();
              *id v83 = v80;
              v83[1] = v82;

              swift_bridgeObjectRelease();
            }
            sub_1C224E4C4(v99, (uint64_t)v103);
            uint64_t v84 = v104;
            id v85 = v100;
            if (v104)
            {
              id v86 = __swift_project_boxed_opaque_existential_1Tm(v103, v104);
              uint64_t v87 = *(void *)(v84 - 8);
              __n128 v88 = MEMORY[0x1F4188790](v86);
              char v90 = (char *)&v92 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
              (*(void (**)(char *, __n128))(v87 + 16))(v90, v88);
              uint64_t v91 = sub_1C2550860();
              (*(void (**)(char *, uint64_t))(v87 + 8))(v90, v84);
              __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v103);
            }
            else
            {
              uint64_t v91 = 0;
            }
            objc_msgSend(v85, sel_showViewController_sender_, v75, v91);

            swift_unknownObjectRelease();
            swift_release();

            return;
          }
          uint64_t v13 = 4;
          break;
        default:
          goto LABEL_41;
      }
      while (1)
      {
        id v44 = (v39 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x1C87588E0](v13 - 4, v39)
            : *(id *)(v39 + 8 * v13);
        uint64_t v15 = (uint64_t)v44;
        uint64_t v45 = v13 - 3;
        if (__OFADD__(v13 - 4, 1)) {
          break;
        }
        if ((v40 & 0xC000000000000001) != 0)
        {
          if (v40 < 0) {
            uint64_t v46 = v40;
          }
          else {
            uint64_t v46 = v40 & 0xFFFFFFFFFFFFFF8;
          }
          id v47 = v44;
          id v48 = v38;
          uint64_t v49 = sub_1C25502A0();
          if (__OFADD__(v49, 1)) {
            goto LABEL_55;
          }
          uint64_t v40 = sub_1C24AB8D4(v46, v49 + 1);
        }
        else
        {
          id v50 = v44;
          id v51 = v38;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)double v103 = v40;
        unint64_t v54 = sub_1C24575D0(v15);
        uint64_t v55 = *(void *)(v40 + 16);
        BOOL v56 = (v53 & 1) == 0;
        uint64_t v57 = v55 + v56;
        if (__OFADD__(v55, v56)) {
          goto LABEL_54;
        }
        char v58 = v53;
        if (*(void *)(v40 + 24) >= v57)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1C24ADDE0();
          }
        }
        else
        {
          sub_1C2279E00(v57, isUniquelyReferenced_nonNull_native);
          unint64_t v59 = sub_1C24575D0(v15);
          if ((v58 & 1) != (v60 & 1)) {
            goto LABEL_60;
          }
          unint64_t v54 = v59;
        }
        uint64_t v40 = *(void *)v103;
        if (v58)
        {
          uint64_t v42 = *(void *)(*(void *)v103 + 56);

          id v43 = v101;
          *(void *)(v42 + 8 * v54) = v101;
          id v38 = v43;
        }
        else
        {
          *(void *)(*(void *)v103 + 8 * (v54 >> 6) + 64) |= 1 << v54;
          *(void *)(*(void *)(v40 + 48) + 8 * v54) = v15;
          id v61 = v101;
          *(void *)(*(void *)(v40 + 56) + 8 * v54) = v101;
          uint64_t v62 = *(void *)(v40 + 16);
          BOOL v63 = __OFADD__(v62, 1);
          uint64_t v64 = v62 + 1;
          if (v63) {
            goto LABEL_56;
          }
          id v38 = v61;
          *(void *)(v40 + 16) = v64;
          id v65 = (id)v15;
        }

        swift_bridgeObjectRelease();
        ++v13;
        if (v45 == v41) {
          goto LABEL_44;
        }
      }
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      uint64_t v12 = swift_once();
LABEL_6:
      id v16 = *(void **)(v13 + 40);
      v102[0] = *(void *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_lock);
      MEMORY[0x1F4188790](v12);
      sub_1C254CEE0();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
      sub_1C21A89AC();
      id v17 = v16;
      swift_retain();
      sub_1C254E1D0();

      swift_release();
      uint64_t v18 = *(void **)v103;
      if (qword_1EBB6D858 != -1) {
        swift_once();
      }
      v103[0] = *(unsigned char *)(v13 + 33);
      id v19 = objc_allocWithZone((Class)type metadata accessor for UserDomainConceptListViewController());
      id v20 = v18;
      id v21 = sub_1C2539F94(v103, v15, v20);
      sub_1C224E4C4(v99, (uint64_t)v103);
      uint64_t v22 = v104;
      objc_super v23 = v100;
      if (v104)
      {
        uint64_t v24 = __swift_project_boxed_opaque_existential_1Tm(v103, v104);
        uint64_t v25 = *(void *)(v22 - 8);
        __n128 v26 = MEMORY[0x1F4188790](v24);
        id v28 = (char *)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v25 + 16))(v28, v26);
        uint64_t v29 = sub_1C2550860();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v22);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v103);
      }
      else
      {
        uint64_t v29 = 0;
      }
      objc_msgSend(v23, sel_showViewController_sender_, v21, v29);

      swift_unknownObjectRelease();
      swift_release();
    }
  }
  else
  {
    sub_1C2227100((uint64_t)v103);
  }
}

id sub_1C234B3B0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NavigationCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NavigationCell()
{
  return self;
}

uint64_t sub_1C234B464@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_item;
  swift_beginAccess();
  return sub_1C2227014(v3, a1);
}

uint64_t sub_1C234B4B8(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI14NavigationCell_item;
  swift_beginAccess();
  sub_1C2232E74(a1, v3);
  swift_endAccess();
  sub_1C2349F6C();
  return sub_1C2227100(a1);
}

void (*sub_1C234B528(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C234B588;
}

void sub_1C234B588(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C2349F6C();
  }
}

uint64_t sub_1C234B5BC(void *a1, void *a2)
{
  v6[3] = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE010);
  v6[0] = a1;
  id v4 = a1;
  sub_1C234A7FC((uint64_t)v6, a2);
  return sub_1C224E3A4((uint64_t)v6);
}

uint64_t sub_1C234B62C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
      sub_1C254D000();
      break;
    case 2:
      sub_1C254D010();
      break;
    case 3:
      sub_1C254D030();
      break;
    default:
      sub_1C254D020();
      break;
  }
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C234B6E4()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NavigationItem()
{
  return self;
}

uint64_t sub_1C234B748()
{
  return sub_1C234B62C();
}

uint64_t sub_1C234B76C(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  uint64_t v3 = *a1;
  switch(*a1)
  {
    case 1:
      if (v2 != 2) {
        goto LABEL_10;
      }
      goto LABEL_7;
    case 2:
      if (v2 == 2) {
        goto LABEL_7;
      }
      goto LABEL_10;
    case 3:
      if (v2 == 2)
      {
LABEL_7:
        if (qword_1EBB6EF40 != -1) {
          swift_once();
        }
        id v4 = (id)qword_1EBB6FBC8;
        swift_bridgeObjectRetain();
        uint64_t v3 = sub_1C254C730();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_10:
        uint64_t v3 = 0;
      }
      break;
    default:
      return v3;
  }
  return v3;
}

id SingleValueView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id sub_1C234B94C(double a1)
{
  int v2 = v1;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  id v4 = (void *)sub_1C254FE50();
  uint64_t v5 = *MEMORY[0x1E4FB2998];
  uint64_t v6 = (void *)sub_1C254FE50();
  uint64_t v43 = *MEMORY[0x1E4FB2950];
  uint64_t v7 = sub_1C254FE50();
  uint64_t v8 = (void *)v7;
  if (!v1[10]
    || (swift_bridgeObjectRetain(),
        sub_1C254F530(),
        uint64_t v10 = v9,
        swift_bridgeObjectRelease(),
        uint64_t v7 = swift_bridgeObjectRelease(),
        uint64_t v11 = v4,
        !v10))
  {
    unint64_t v12 = v1[8];
    uint64_t v42 = v5;
    if (v12)
    {
      uint64_t v13 = v1[7];
      unint64_t v14 = v12;
    }
    else
    {
      uint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
    }
    uint64_t v41 = &v39;
    uint64_t v47 = 0;
    uint64_t v15 = MEMORY[0x1F4188790](v7);
    v38[2] = &v47;
    if ((v14 & 0x1000000000000000) != 0 || !(v14 & 0x2000000000000000 | v13 & 0x1000000000000000))
    {
      sub_1C234D8DC(v2);
      swift_bridgeObjectRetain();
      sub_1C2550390();
      swift_bridgeObjectRelease();
      sub_1C234D954(v2);
      if ((v46 & 1) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      unint64_t v39 = v38;
      uint64_t v40 = v6;
      MEMORY[0x1F4188790](v15);
      if ((v14 & 0x2000000000000000) == 0)
      {
        if ((v13 & 0x1000000000000000) != 0)
        {
          uint64_t v16 = (v14 & 0xFFFFFFFFFFFFFFFLL) + 32;
          uint64_t v17 = v13 & 0xFFFFFFFFFFFFLL;
        }
        else
        {
          uint64_t v16 = sub_1C2550440();
          uint64_t v17 = v37;
        }
        sub_1C234D8DC(v2);
        swift_bridgeObjectRetain();
        char v18 = sub_1C23595B8(v16, v17, (void (*)(uint64_t *__return_ptr))sub_1C234D9CC);
        swift_bridgeObjectRelease();
        sub_1C234D954(v2);
        uint64_t v6 = v40;
        if (v18) {
          goto LABEL_12;
        }
        goto LABEL_17;
      }
      uint64_t v44 = v13;
      uint64_t v45 = v14 & 0xFFFFFFFFFFFFFFLL;
      if (v13 <= 0x20u && ((1 << v13) & 0x100003E01) != 0)
      {
        sub_1C234D8DC(v2);
        swift_bridgeObjectRetain();
        uint64_t v6 = v40;
LABEL_16:
        swift_bridgeObjectRelease();
        sub_1C234D954(v2);
LABEL_17:
        uint64_t v11 = v6;
        goto LABEL_18;
      }
      sub_1C234D8DC(v2);
      swift_bridgeObjectRetain();
      uint64_t v35 = (unsigned __int8 *)_swift_stdlib_strtod_clocale();
      uint64_t v6 = v40;
      if (!v35) {
        goto LABEL_16;
      }
      int v36 = *v35;
      swift_bridgeObjectRelease();
      sub_1C234D954(v2);
      if (v36) {
        goto LABEL_17;
      }
    }
LABEL_12:
    uint64_t v11 = v4;
  }
LABEL_18:
  id v19 = v11;
  id v20 = sub_1C21F04A8(v19, v8);
  objc_msgSend(v20, sel_boundingRectWithSize_options_context_, 1, 0, a1, 1.79769313e308);
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  objc_msgSend(v4, sel_lineHeight);
  double v30 = v29;
  v48.origin.double x = v22;
  v48.origin.double y = v24;
  v48.size.double width = v26;
  v48.size.double height = v28;
  if (CGRectGetHeight(v48) - (v30 + v30) >= 2.22044605e-16)
  {
    id v31 = (void *)sub_1C254FE50();
    uint64_t v32 = (void *)sub_1C254FE50();
    id v33 = sub_1C21F04A8(v31, v32);

    uint64_t v8 = v32;
    id v19 = v6;
    uint64_t v6 = v4;
    id v4 = v20;
    id v20 = v33;
  }

  return v20;
}

double sub_1C234BE20()
{
  double result = 8.0;
  unk_1EA303B50 = xmmword_1C2563B40;
  unk_1EA303B60 = xmmword_1C2563B40;
  return result;
}

uint64_t sub_1C234BE38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_viewData;
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void **)(v3 + 32);
  uint64_t v9 = *(void **)(v3 + 40);
  uint64_t v10 = *(void **)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  uint64_t v12 = *(void *)(v3 + 64);
  uint64_t v13 = *(void *)(v3 + 72);
  uint64_t v14 = *(void *)(v3 + 80);
  uint64_t v15 = *(void *)(v3 + 88);
  char v16 = *(unsigned char *)(v3 + 100);
  int v17 = *(_DWORD *)(v3 + 96);
  *(void *)a2 = *(void *)v3;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = v11;
  *(void *)(a2 + 64) = v12;
  *(void *)(a2 + 72) = v13;
  *(void *)(a2 + 80) = v14;
  *(void *)(a2 + 88) = v15;
  *(unsigned char *)(a2 + 100) = v16;
  *(_DWORD *)(a2 + 96) = v17;
  return sub_1C22AC0E8(v4, v5, v6, v7, v8, v9, v10);
}

void sub_1C234BED8(uint64_t a1, void *a2)
{
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v16 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 16);
  int v2 = *(void **)(a1 + 48);
  uint64_t v11 = *(void **)(a1 + 40);
  uint64_t v12 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 80);
  char v7 = *(unsigned char *)(a1 + 100);
  int v8 = *(_DWORD *)(a1 + 96);
  uint64_t v9 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_viewData;
  uint64_t v10 = *(void *)(a1 + 88);
  swift_beginAccess();
  uint64_t v22 = *(void *)(v9 + 8);
  uint64_t v23 = *(void *)v9;
  uint64_t v20 = *(void *)(v9 + 24);
  uint64_t v21 = *(void *)(v9 + 16);
  char v18 = *(void **)(v9 + 40);
  id v19 = *(void **)(v9 + 32);
  int v17 = *(void **)(v9 + 48);
  *(void *)uint64_t v9 = v16;
  *(void *)(v9 + 8) = v15;
  *(void *)(v9 + 16) = v14;
  *(void *)(v9 + 24) = v13;
  *(void *)(v9 + 32) = v12;
  *(void *)(v9 + 40) = v11;
  *(void *)(v9 + 48) = v2;
  *(void *)(v9 + 56) = v4;
  *(void *)(v9 + 64) = v3;
  *(void *)(v9 + 72) = v5;
  *(void *)(v9 + 80) = v6;
  *(void *)(v9 + 88) = v10;
  *(_DWORD *)(v9 + 96) = v8;
  *(unsigned char *)(v9 + 100) = v7;
  sub_1C22AC0E8(v16, v15, v14, v13, v12, v11, v2);
  sub_1C22AC064(v23, v22, v21, v20, v19, v18, v17);
  sub_1C234D404();
}

uint64_t sub_1C234C054@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_viewData;
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  int v8 = *(void **)(v3 + 32);
  uint64_t v9 = *(void **)(v3 + 40);
  uint64_t v10 = *(void **)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  uint64_t v12 = *(void *)(v3 + 64);
  uint64_t v13 = *(void *)(v3 + 72);
  uint64_t v14 = *(void *)(v3 + 80);
  uint64_t v15 = *(void *)(v3 + 88);
  char v16 = *(unsigned char *)(v3 + 100);
  int v17 = *(_DWORD *)(v3 + 96);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(unsigned char *)(a1 + 100) = v16;
  *(_DWORD *)(a1 + 96) = v17;
  return sub_1C22AC0E8(v4, v5, v6, v7, v8, v9, v10);
}

void sub_1C234C0F0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[4];
  long long v19 = *(_OWORD *)(a1 + 5);
  long long v20 = *((_OWORD *)a1 + 1);
  uint64_t v5 = a1[7];
  long long v18 = *((_OWORD *)a1 + 4);
  uint64_t v6 = a1[10];
  uint64_t v7 = a1[11];
  char v8 = *((unsigned char *)a1 + 100);
  int v9 = *((_DWORD *)a1 + 24);
  uint64_t v10 = v1 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_viewData;
  swift_beginAccess();
  uint64_t v11 = *(void *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v14 = *(void *)(v10 + 24);
  uint64_t v15 = *(void **)(v10 + 32);
  char v16 = *(void **)(v10 + 40);
  int v17 = *(void **)(v10 + 48);
  *(void *)uint64_t v10 = v2;
  *(void *)(v10 + 8) = v3;
  *(_OWORD *)(v10 + 16) = v20;
  *(void *)(v10 + 32) = v4;
  *(_OWORD *)(v10 + 40) = v19;
  *(void *)(v10 + 56) = v5;
  *(_OWORD *)(v10 + 64) = v18;
  *(void *)(v10 + 80) = v6;
  *(void *)(v10 + 88) = v7;
  *(_DWORD *)(v10 + 96) = v9;
  *(unsigned char *)(v10 + 100) = v8;
  sub_1C22AC064(v11, v12, v13, v14, v15, v16, v17);
  sub_1C234D404();
}

void (*sub_1C234C1EC(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C234C24C;
}

void sub_1C234C24C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C234D404();
  }
}

id sub_1C234C280()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualValueView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualValueView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualValueView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v4, sel_setNumberOfLines_, 3);
    objc_msgSend(v4, sel_setLineBreakMode_, 4);
    objc_msgSend(v4, sel_setTextAlignment_, 0);
    id v5 = objc_msgSend(self, sel_hk_chrValueCellPrimaryFont);
    objc_msgSend(v4, sel_setFont_, v5);

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1C234C380()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualTitleView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualTitleView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualTitleView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
    objc_msgSend(v5, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    objc_msgSend(v5, sel_setNumberOfLines_, 3);
    objc_msgSend(v5, sel_setLineBreakMode_, 4);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    uint64_t v6 = (void *)sub_1C254FE50();
    objc_msgSend(v5, sel_setFont_, v6);

    id v7 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id SingleValueView.init(frame:)(double a1, double a2, double a3, double a4)
{
  int v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_viewData];
  *(_OWORD *)int v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  *((_OWORD *)v9 + 4) = 0u;
  *((_OWORD *)v9 + 5) = 0u;
  *(void *)(v9 + 93) = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_activeConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualValueView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView____lazy_storage___textualTitleView] = 0;
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for SingleValueView();
  id v10 = objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  LODWORD(v11) = 1144750080;
  objc_msgSend(v10, sel_setContentCompressionResistancePriority_forAxis_, 1, v11);
  objc_msgSend(v10, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v12 = sub_1C234C280();
  id v13 = sub_1C234C380();
  objc_msgSend(v10, sel_addSubview_, v12);
  objc_msgSend(v10, sel_addSubview_, v13);

  sub_1C234C8A8();
  return v10;
}

void sub_1C234C710(void *a1)
{
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for SingleValueView();
  objc_msgSendSuper2(&v12, sel_traitCollectionDidChange_, a1);
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_preferredContentSizeCategory);

  if (!a1)
  {

    goto LABEL_9;
  }
  id v5 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  uint64_t v6 = sub_1C254F470();
  uint64_t v8 = v7;
  if (v6 == sub_1C254F470() && v8 == v9)
  {

    swift_bridgeObjectRelease_n();
    return;
  }
  char v11 = sub_1C2550870();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
LABEL_9:
  }
    sub_1C234C8A8();
}

void sub_1C234C8A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  id v3 = (uint64_t *)&v0[OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_activeConstraints];
  swift_beginAccess();
  uint64_t v4 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  swift_bridgeObjectRetain();
  uint64_t v86 = v4;
  id v5 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v5);

  id v6 = objc_msgSend(v1, sel_traitCollection);
  id v7 = objc_msgSend(v6, sel_preferredContentSizeCategory);

  LOBYTE(v6) = sub_1C254FD50();
  sub_1C21ACA3C();
  if ((v6 & 1) == 0)
  {
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1C255EBD0;
    id v36 = sub_1C234C280();
    id v37 = objc_msgSend(v36, sel_leadingAnchor);

    id v38 = objc_msgSend(v1, sel_leadingAnchor);
    id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v38);

    *(void *)(v35 + 32) = v39;
    id v40 = sub_1C234C280();
    id v41 = objc_msgSend(v40, sel_topAnchor);

    id v42 = objc_msgSend(v1, sel_topAnchor);
    if (qword_1EA2DD6B8 != -1) {
      swift_once();
    }
    id v43 = objc_msgSend(v41, sel_constraintGreaterThanOrEqualToAnchor_constant_, v42, *(double *)&qword_1EA303AE0, v86);

    *(void *)(v35 + 40) = v43;
    id v44 = sub_1C234C280();
    id v45 = objc_msgSend(v44, sel_bottomAnchor);

    id v46 = objc_msgSend(v1, sel_bottomAnchor);
    id v47 = objc_msgSend(v45, sel_constraintEqualToAnchor_constant_, v46, -*(double *)&qword_1EA303AE0);

    *(void *)(v35 + 48) = v47;
    id v48 = sub_1C234C380();
    id v49 = objc_msgSend(v48, sel_topAnchor);

    id v50 = objc_msgSend(v1, sel_topAnchor);
    id v51 = objc_msgSend(v49, sel_constraintGreaterThanOrEqualToAnchor_constant_, v50, *(double *)&qword_1EA303AE0);

    *(void *)(v35 + 56) = v51;
    id v52 = sub_1C234C380();
    id v53 = objc_msgSend(v52, sel_widthAnchor);

    id v54 = objc_msgSend(v1, sel_widthAnchor);
    id v55 = objc_msgSend(v53, sel_constraintEqualToAnchor_multiplier_, v54, 0.5);

    *(void *)(v35 + 64) = v55;
    id v56 = sub_1C234C380();
    id v57 = objc_msgSend(v56, sel_lastBaselineAnchor);

    id v58 = sub_1C234C280();
    id v59 = objc_msgSend(v58, sel_lastBaselineAnchor);

    id v60 = objc_msgSend(v57, sel_constraintEqualToAnchor_, v59);
    *(void *)(v35 + 72) = v60;
    id v61 = sub_1C234C380();
    id v62 = objc_msgSend(v61, sel_trailingAnchor);

    id v63 = objc_msgSend(v1, sel_trailingAnchor);
    id v64 = objc_msgSend(v62, sel_constraintEqualToAnchor_, v63);

    *(void *)(v35 + 80) = v64;
    sub_1C254F730();
    *id v3 = v35;
    swift_bridgeObjectRelease();
    id v65 = sub_1C234C380();
    LODWORD(v62) = objc_msgSend(v65, sel_isHidden);

    id v66 = sub_1C234C280();
    id v32 = objc_msgSend(v66, sel_trailingAnchor);

    if (!v62)
    {
      id v81 = sub_1C234C380();
      id v82 = objc_msgSend(v81, sel_leadingAnchor);

      id v83 = objc_msgSend(v32, sel_constraintEqualToAnchor_, v82);
      swift_beginAccess();
      id v68 = v83;
      goto LABEL_18;
    }
    id v33 = objc_msgSend(v1, sel_trailingAnchor);
    id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, -*(double *)&qword_1EA303AE8);
LABEL_10:
    id v67 = v34;

    swift_beginAccess();
    id v68 = v67;
LABEL_18:
    id v80 = v68;
    MEMORY[0x1C8757C00]();
    if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
    swift_endAccess();
    goto LABEL_21;
  }
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C255DB90;
  id v9 = sub_1C234C280();
  id v10 = objc_msgSend(v9, sel_leadingAnchor);

  id v11 = objc_msgSend(v1, sel_leadingAnchor);
  if (qword_1EA2DD6B8 != -1) {
    swift_once();
  }
  id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_constant_, v11, *((double *)&xmmword_1EA303AD0 + 1), v86);

  *(void *)(v8 + 32) = v12;
  id v13 = sub_1C234C280();
  id v14 = objc_msgSend(v13, sel_topAnchor);

  id v15 = objc_msgSend(v1, sel_topAnchor);
  id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v15, *(double *)&xmmword_1EA303AD0);

  *(void *)(v8 + 40) = v16;
  id v17 = sub_1C234C280();
  id v18 = objc_msgSend(v17, sel_trailingAnchor);

  id v19 = objc_msgSend(v1, sel_trailingAnchor);
  id v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_constant_, v19, -*(double *)&qword_1EA303AE8);

  *(void *)(v8 + 48) = v20;
  id v21 = sub_1C234C380();
  id v22 = objc_msgSend(v21, sel_leadingAnchor);

  id v23 = objc_msgSend(v1, sel_leadingAnchor);
  id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_constant_, v23, *((double *)&xmmword_1EA303AD0 + 1));

  *(void *)(v8 + 56) = v24;
  id v25 = sub_1C234C380();
  id v26 = objc_msgSend(v25, sel_trailingAnchor);

  id v27 = objc_msgSend(v1, sel_trailingAnchor);
  id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, -*(double *)&qword_1EA303AE8);

  *(void *)(v8 + 64) = v28;
  sub_1C254F730();
  *id v3 = v8;
  swift_bridgeObjectRelease();
  id v29 = sub_1C234C380();
  unsigned int v30 = objc_msgSend(v29, sel_isHidden);

  if (v30)
  {
    id v31 = sub_1C234C280();
    id v32 = objc_msgSend(v31, sel_bottomAnchor);

    id v33 = objc_msgSend(v1, sel_bottomAnchor);
    id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, -*(double *)&qword_1EA303AE0);
    goto LABEL_10;
  }
  id v69 = sub_1C234C380();
  id v70 = objc_msgSend(v69, sel_topAnchor);

  id v71 = sub_1C234C280();
  id v72 = objc_msgSend(v71, sel_bottomAnchor);

  id v73 = objc_msgSend(v70, sel_constraintEqualToAnchor_constant_, v72, 2.0);
  id v74 = sub_1C234C380();
  id v75 = objc_msgSend(v74, sel_bottomAnchor);

  id v76 = objc_msgSend(v1, sel_bottomAnchor);
  id v77 = objc_msgSend(v75, sel_constraintEqualToAnchor_constant_, v76, -*(double *)&qword_1EA303AE0);

  swift_beginAccess();
  if (!((unint64_t)*v3 >> 62))
  {
    uint64_t v78 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v79 = v78 + 2;
    if (!__OFADD__(v78, 2)) {
      goto LABEL_13;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v85 = sub_1C2550620();
  swift_bridgeObjectRelease();
  uint64_t v79 = v85 + 2;
  if (__OFADD__(v85, 2)) {
    goto LABEL_24;
  }
LABEL_13:
  sub_1C25041B0(v79, 1);
  sub_1C254F730();
  id v73 = v73;
  MEMORY[0x1C8757C00]();
  if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_25:
  }
    sub_1C254F760();
  sub_1C254F790();
  sub_1C254F730();
  id v80 = v77;
  MEMORY[0x1C8757C00]();
  if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  swift_endAccess();

LABEL_21:
  swift_bridgeObjectRetain();
  uint64_t v84 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v84);
}

void sub_1C234D404()
{
  id v1 = objc_msgSend(v0, sel_superview);
  if (v1)
  {
    id v33 = v1;
    objc_msgSend(v1, sel_bounds);
    double Width = CGRectGetWidth(v44);
    if (qword_1EA2DD6F0 != -1) {
      swift_once();
    }
    double v3 = *(double *)&qword_1EA303B58;
    double v4 = *(double *)&qword_1EA303B68;
    id v5 = sub_1C234C380();
    id v6 = &v0[OBJC_IVAR____TtC15HealthRecordsUI15SingleValueView_viewData];
    swift_beginAccess();
    uint64_t v7 = *((void *)v6 + 1);
    if (v7)
    {
      uint64_t v9 = *((void *)v6 + 10);
      uint64_t v8 = *((void *)v6 + 11);
      uint64_t v11 = *((void *)v6 + 8);
      uint64_t v10 = *((void *)v6 + 9);
      id v31 = (void *)*((void *)v6 + 6);
      id v28 = (void *)*((void *)v6 + 4);
      unsigned int v30 = (void *)*((void *)v6 + 5);
      uint64_t v13 = *((void *)v6 + 2);
      uint64_t v12 = *((void *)v6 + 3);
      id v32 = v5;
      uint64_t v14 = *(void *)v6;
      unint64_t v15 = *((unsigned int *)v6 + 24) | ((unint64_t)v6[100] << 32);
      sub_1C22AC0E8(*(void *)v6, v7, v13, v12, v28, v30, v31);
      swift_bridgeObjectRetain();
      uint64_t v26 = v8;
      unint64_t v27 = v15;
      uint64_t v24 = v10;
      uint64_t v25 = v9;
      uint64_t v23 = v11;
      sub_1C22AC064(v14, v7, v13, v12, v28, v30, v31);
      id v5 = v32;
      id v16 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v16 = 0;
    }
    objc_msgSend(v5, sel_setText_, v16, v23, v24, v25, v26, v27);

    uint64_t v17 = *((void *)v6 + 1);
    if (v17)
    {
      unint64_t v29 = *((unsigned int *)v6 + 24) | ((unint64_t)v6[100] << 32);
      uint64_t v34 = *(void *)v6;
      uint64_t v35 = *((void *)v6 + 2);
      uint64_t v36 = *((void *)v6 + 3);
      id v37 = (void *)*((void *)v6 + 4);
      id v38 = (void *)*((void *)v6 + 5);
      id v39 = (void *)*((void *)v6 + 6);
      uint64_t v40 = *((void *)v6 + 8);
      uint64_t v41 = *((void *)v6 + 9);
      uint64_t v42 = *((void *)v6 + 10);
      uint64_t v43 = *((void *)v6 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v18 = v37;
      id v19 = v38;
      id v20 = v39;
      swift_bridgeObjectRetain();
      id v21 = sub_1C234B94C(Width - v3 - v4);
      sub_1C22AC064(v34, v17, v35, v36, v37, v38, v39);
      id v22 = sub_1C234C280();
      objc_msgSend(v22, sel_setAttributedText_, v21, v40, v41, v42, v43, v29);
    }
    sub_1C234C8A8();
  }
}

uint64_t type metadata accessor for SingleValueView()
{
  return self;
}

id SingleValueView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SingleValueView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for SingleValueView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SingleValueView);
}

uint64_t dispatch thunk of SingleValueView.viewData.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SingleValueView.viewData.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SingleValueView.viewData.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

unsigned char *sub_1C234D8C0@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1C235954C(a1, a2);
}

void *sub_1C234D8DC(void *a1)
{
  objc_super v2 = (void *)a1[4];
  double v3 = (void *)a1[5];
  double v4 = (void *)a1[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v2;
  id v6 = v3;
  id v7 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C234D954(void *a1)
{
  objc_super v2 = (void *)a1[4];
  double v3 = (void *)a1[5];
  double v4 = (void *)a1[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1C234D9CC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C2359618(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t type metadata accessor for ClinicalSharingAllItemsOnboardingViewController(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E1690);
}

uint64_t sub_1C234DA08()
{
  return swift_initClassMetadata2();
}

void sub_1C234DA64()
{
  if (qword_1EBB6D9B0 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6D998;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();

  qword_1EA2E1670 = v1;
  *(void *)algn_1EA2E1678 = v3;
}

id sub_1C234DB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v52 = a1;
  uint64_t v53 = a2;
  uint64_t v11 = sub_1C254E150();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  id v51 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  id v16 = (char *)v50 - v15;
  uint64_t v17 = &v6[qword_1EA2E1680];
  *(void *)uint64_t v17 = a5;
  *((void *)v17 + 1) = a6;
  id v18 = objc_allocWithZone((Class)type metadata accessor for ClinicalSharingAllItemsViewController(0));
  type metadata accessor for ClinicalSharingAllItemsDataSource();
  swift_allocObject();
  swift_retain_n();
  id v19 = v6;
  v50[2] = a6;
  swift_retain();
  id v20 = (char *)v18;
  *(void *)&v20[qword_1EA2E16A0] = sub_1C23CB598(a3, a4);

  swift_retain();
  uint64_t v21 = sub_1C254E0E0();
  v50[1] = a4;
  uint64_t v22 = v11;
  uint64_t v23 = v12;
  swift_release();
  uint64_t v24 = qword_1EA2E1688;
  *(void *)&v19[qword_1EA2E1688] = v21;

  uint64_t v25 = *(void (**)(char *, void, uint64_t))(v12 + 104);
  v25(v16, *MEMORY[0x1E4F666E0], v22);
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    unint64_t v27 = result;
    unsigned int v28 = objc_msgSend(result, sel_isiPad);

    if (v28)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v22);
      v25(v16, *MEMORY[0x1E4F666D8], v22);
    }
    uint64_t v29 = qword_1EA2DD6F8;
    id v30 = *(id *)&v19[v24];
    if (v29 != -1) {
      swift_once();
    }
    sub_1C2269E20();
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C255CD90;
    *(void *)(v31 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v31 + 64) = sub_1C220D950();
    uint64_t v32 = v53;
    *(void *)(v31 + 32) = v52;
    *(void *)(v31 + 40) = v32;
    swift_bridgeObjectRetain();
    sub_1C254F4B0();
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v51, v16, v22);
    id v33 = (id)sub_1C254E140();
    sub_1C254E060();
    id v34 = objc_msgSend(v33, sel_navigationController);
    if (v34)
    {
      uint64_t v35 = v34;
      id v36 = objc_msgSend(v34, sel_navigationBar);

      objc_msgSend(v36, sel_setHidden_, 0);
    }
    id v37 = objc_msgSend(v33, sel_navigationItem);
    id v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v33, sel_doneButtonTapped_);
    objc_msgSend(v37, sel_setRightBarButtonItem_, v38);

    id v39 = objc_msgSend(v33, sel_navigationItem);
    id v40 = objc_msgSend(v39, sel_rightBarButtonItem);

    if (v40)
    {
      sub_1C2201F2C();
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_1C255D0E0;
      *(void *)(v41 + 32) = sub_1C254F470();
      *(void *)(v41 + 40) = v42;
      uint64_t v43 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      id v44 = objc_msgSend(v43, sel_removeSpecialCharactersAndWhiteSpaces);

      uint64_t v45 = sub_1C254F470();
      uint64_t v47 = v46;

      *(void *)(v41 + 48) = v45;
      *(void *)(v41 + 56) = v47;
      *(void *)(v41 + 64) = 1701736260;
      *(void *)(v41 + 72) = 0xE400000000000000;
      id v48 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v49 = (id)HKUIJoinStringsForAutomationIdentifier();

      objc_msgSend(v40, sel_setAccessibilityIdentifier_, v49);
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();
      swift_release();

      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v22);
    return v33;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C234E0B4(void *a1)
{
  swift_unknownObjectRetain();
  uint64_t v2 = a1;
  sub_1C25501E0();
  swift_unknownObjectRelease();
  uint64_t v3 = *(void (**)(uint64_t))&v2[qword_1EA2E1680];
  uint64_t v4 = swift_retain();
  v3(v4);
  objc_msgSend(v2, sel_dismissViewControllerAnimated_completion_, 1, 0);

  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v6);
}

void sub_1C234E180()
{
}

void sub_1C234E1B0()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + qword_1EA2E1688);
}

id sub_1C234E1F4()
{
  return sub_1C234E6F0(type metadata accessor for ClinicalSharingAllItemsOnboardingViewController);
}

void sub_1C234E20C(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void **)(a1 + qword_1EA2E1688);
}

uint64_t sub_1C234E25C()
{
  return type metadata accessor for ClinicalSharingAllItemsOnboardingViewController(0);
}

uint64_t type metadata accessor for ClinicalSharingAllItemsViewController(uint64_t a1)
{
  return sub_1C220A934(a1, (uint64_t *)&unk_1EA2E16A8);
}

uint64_t sub_1C234E284()
{
  return swift_initClassMetadata2();
}

void sub_1C234E2D4()
{
}

void sub_1C234E330()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ClinicalSharingAllItemsViewController(0);
  objc_msgSendSuper2(&v6, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_collectionView);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(self, sel_systemBackgroundColor);
    objc_msgSend(v2, sel_setBackgroundColor_, v3);

    id v4 = objc_msgSend(v0, sel_collectionView);
    if (v4)
    {
      id v5 = v4;
      objc_msgSend(v4, sel_setPreservesSuperviewLayoutMargins_, 1);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1C234E410(void *a1)
{
  id v1 = a1;
  sub_1C234E330();
}

void sub_1C234E458()
{
  id v1 = v0;
  sub_1C254E100();
  uint64_t v2 = (void (*)(void))sub_1C254E110();
  v2();
  id v3 = objc_msgSend(v0, sel_collectionView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v4 = v3;
  type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell();
  sub_1C234E748((unint64_t *)&qword_1EA2DE6E8, (void (*)(uint64_t))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryCell);
  sub_1C254FAD0();

  id v5 = objc_msgSend(v1, sel_collectionView);
  if (!v5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  objc_super v6 = v5;
  sub_1C254D4E0();
  sub_1C254FAD0();

  id v7 = objc_msgSend(v1, sel_collectionView);
  if (!v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v8 = v7;
  type metadata accessor for TurnOnAllDataTypesCell();
  sub_1C234E748(&qword_1EA2DE798, (void (*)(uint64_t))type metadata accessor for TurnOnAllDataTypesCell);
  sub_1C254FAD0();

  id v9 = objc_msgSend(v1, sel_collectionView);
  if (!v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = v9;
  sub_1C254D230();
  sub_1C254FAE0();

  id v11 = objc_msgSend(v1, sel_collectionView);
  if (!v11)
  {
LABEL_13:
    __break(1u);
    return;
  }
  sub_1C254DBB0();
  sub_1C254FAF0();
}

void sub_1C234E664()
{
}

void sub_1C234E694(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1C234E6C8()
{
  return swift_release();
}

id sub_1C234E6D8()
{
  return sub_1C234E6F0(type metadata accessor for ClinicalSharingAllItemsViewController);
}

id sub_1C234E6F0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1C234E730()
{
  return swift_release();
}

uint64_t sub_1C234E740()
{
  return type metadata accessor for ClinicalSharingAllItemsViewController(0);
}

uint64_t sub_1C234E748(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id HKMedicalUserDomainConcept.hasEducation.getter()
{
  id result = objc_msgSend(v0, sel_educationContent);
  if (result)
  {
    uint64_t v2 = result;
    BOOL v3 = sub_1C25453B4();

    return (id)v3;
  }
  return result;
}

uint64_t HKMedicalUserDomainConcept.educationPrimaryContent.getter()
{
  id v1 = objc_msgSend(v0, sel_educationContent);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C234F704(1, 1, 0, (uint64_t (*)(void))sub_1C234F90C);

  return v3;
}

uint64_t HKMedicalUserDomainConcept.educationTitle.getter()
{
  id v1 = objc_msgSend(v0, sel_educationContent);
  if (v1 && (uint64_t v2 = v1, v3 = sub_1C234F704(2, 1, 1, (uint64_t (*)(void))sub_1C234F90C), v5 = v4, v2, v5))
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v6 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    sub_1C2351018(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C255CD90;
    *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v7 + 64) = sub_1C220D950();
    *(void *)(v7 + 32) = v3;
    *(void *)(v7 + 40) = v5;
    uint64_t v8 = sub_1C254F440();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v10 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C254C730();
    swift_bridgeObjectRelease();

    return v11;
  }
}

id HKMedicalUserDomainConcept.attributions.getter()
{
  id v1 = objc_msgSend(v0, sel_educationContent);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_primarySection);

  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_attributions);
    if (v4)
    {
      id v5 = v4;
      sub_1C254F710();

      id v3 = v5;
    }

    sub_1C2350FCC(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C226BF44();
    id v3 = (id)sub_1C254F390();
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t HKMedicalUserDomainConcept.educationSideEffects.getter()
{
  return 0;
}

uint64_t HKMedicalUserDomainConcept.educationPregnancyDescription.getter()
{
  return 0;
}

uint64_t HKMedicalUserDomainConcept.isPregnancyDescriptionCritical.getter()
{
  return 0;
}

uint64_t HKMedicalUserDomainConcept.educationLactationDescription.getter()
{
  return 0;
}

uint64_t HKMedicalUserDomainConcept.isLactationDescriptionCritical.getter()
{
  return 0;
}

id sub_1C234EC38()
{
  id result = objc_msgSend(*v0, sel_educationContent);
  if (result)
  {
    uint64_t v2 = result;
    BOOL v3 = sub_1C25453B4();

    return (id)v3;
  }
  return result;
}

uint64_t sub_1C234EC84()
{
  id v1 = objc_msgSend(*v0, sel_educationContent);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C234F704(1, 1, 0, (uint64_t (*)(void))sub_1C234F90C);

  return v3;
}

uint64_t sub_1C234ED0C()
{
  return HKMedicalUserDomainConcept.educationTitle.getter();
}

uint64_t sub_1C234ED30()
{
  return 0;
}

id sub_1C234ED3C()
{
  return HKMedicalUserDomainConcept.attributions.getter();
}

uint64_t sub_1C234ED60(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 56) = v3;
  *(void *)(v4 + 64) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C234EDC0()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C234EE0C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C234EE60())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C234EEB4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1Tm(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2);
}

uint64_t EducationItem.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EducationItem.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C234EF70()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 56);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C234EFC0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1Tm((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 80))(v1, v2);
}

void *EducationDataSource.__allocating_init(eduProviding:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  id v6 = sub_1C23506E8(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

void *EducationDataSource.init(eduProviding:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  __n128 v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v9 + 16))(v8, v6);
  id v10 = sub_1C2350154((uint64_t)v8, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v10;
}

uint64_t sub_1C234F158()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DA90();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void EducationDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void EducationDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C234F28C()
{
  return __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
}

uint64_t EducationDataSource.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return v0;
}

uint64_t EducationDataSource.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t sub_1C234F30C()
{
  return sub_1C254E160();
}

Swift::Void __swiftcall EducationDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C234F3DC()
{
  return sub_1C254FAD0();
}

uint64_t EducationDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1C254E890();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = v1[8];
  uint64_t v5 = v1[9];
  __swift_project_boxed_opaque_existential_1Tm(v1 + 5, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  sub_1C254E820();
  uint64_t v6 = sub_1C254D2A0();
  swift_allocObject();
  uint64_t v7 = sub_1C254D280();
  a1[3] = v6;
  uint64_t result = sub_1C23507D4((unint64_t *)&qword_1EBB6E7D8, 255, MEMORY[0x1E4F66208]);
  a1[4] = result;
  *a1 = v7;
  return result;
}

uint64_t sub_1C234F59C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1C254E890();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = *(void *)(*(void *)v1 + 72);
  __swift_project_boxed_opaque_existential_1Tm((void *)(*(void *)v1 + 40), v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  sub_1C254E820();
  uint64_t v6 = sub_1C254D2A0();
  swift_allocObject();
  uint64_t v7 = sub_1C254D280();
  a1[3] = v6;
  uint64_t result = sub_1C23507D4((unint64_t *)&qword_1EBB6E7D8, 255, MEMORY[0x1E4F66208]);
  a1[4] = result;
  *a1 = v7;
  return result;
}

uint64_t sub_1C234F6EC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1C234F704(a1, a2, a3, (uint64_t (*)(void))sub_1C234FD54);
}

uint64_t sub_1C234F704(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4();
  if (!*(void *)(v5 + 16)) {
    goto LABEL_12;
  }
  uint64_t v6 = sub_1C2350ABC(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    if (a3) {
      goto LABEL_10;
    }
LABEL_14:
    v20[0] = v9;
    sub_1C2350FCC(0, (unint64_t *)&qword_1EBB6F968, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C226BF44();
    uint64_t v18 = sub_1C254F390();
    goto LABEL_15;
  }
  uint64_t v8 = v6 + 32;
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    sub_1C21F4424(v8, (uint64_t)v20);
    uint64_t v10 = v21;
    uint64_t v11 = v22;
    __swift_project_boxed_opaque_existential_1Tm(v20, v21);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(v10, v11);
    uint64_t v14 = v13;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_1C226BFC0(0, v9[2] + 1, 1, v9);
    }
    unint64_t v16 = v9[2];
    unint64_t v15 = v9[3];
    if (v16 >= v15 >> 1) {
      uint64_t v9 = sub_1C226BFC0((void *)(v15 > 1), v16 + 1, 1, v9);
    }
    v9[2] = v16 + 1;
    uint64_t v17 = &v9[2 * v16];
    v17[4] = v12;
    v17[5] = v14;
    v8 += 40;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease_n();
  if ((a3 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_10:
  if (v9[2])
  {
    uint64_t v18 = v9[4];
    swift_bridgeObjectRetain();
LABEL_15:
    swift_bridgeObjectRelease();
    return v18;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C234F90C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C254CBD0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C2351018(0, &qword_1EA2E16C8, MEMORY[0x1E4F27A00], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v38[-v11 - 8];
  id v13 = objc_msgSend(v3, sel_sections);
  sub_1C235107C();
  unint64_t v14 = sub_1C254F710();

  uint64_t v15 = sub_1C228A7F8(v14);
  uint64_t result = swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
  {
LABEL_4:
    uint64_t v19 = *(void *)(v15 + 16);
    if (v19) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  sub_1C254CBC0();
  sub_1C254CBB0();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v17 = sub_1C254CBA0();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17) == 1)
  {
    uint64_t result = sub_1C2350F40((uint64_t)v12);
    goto LABEL_4;
  }
  uint64_t v33 = sub_1C254CB90();
  uint64_t v35 = v34;
  (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v12, v17);
  uint64_t v36 = sub_1C2350458(v15, v33, v35);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v15 = v36;
  uint64_t v19 = *(void *)(v36 + 16);
  if (!v19) {
    goto LABEL_17;
  }
LABEL_5:
  unint64_t v20 = 0;
  uint64_t v44 = MEMORY[0x1E4FBC860];
  uint64_t v21 = v15 + 32;
  while (v20 < *(void *)(v15 + 16))
  {
    sub_1C21F4424(v21, (uint64_t)&v41);
    uint64_t v22 = v42;
    uint64_t v23 = v43;
    __swift_project_boxed_opaque_existential_1Tm(&v41, v42);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23) == a1)
    {
      sub_1C21F44EC(&v41, (uint64_t)v38);
      uint64_t v24 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C2274B30(0, *(void *)(v24 + 16) + 1, 1);
        uint64_t v24 = v44;
      }
      unint64_t v26 = *(void *)(v24 + 16);
      unint64_t v25 = *(void *)(v24 + 24);
      if (v26 >= v25 >> 1) {
        sub_1C2274B30(v25 > 1, v26 + 1, 1);
      }
      uint64_t v27 = v39;
      uint64_t v28 = v40;
      uint64_t v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      MEMORY[0x1F4188790](v29);
      uint64_t v31 = &v38[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(unsigned char *))(v32 + 16))(v31);
      sub_1C2297320(v26, (uint64_t)v31, &v44, v27, v28);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v38);
    }
    else
    {
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v41);
    }
    ++v20;
    v21 += 40;
    if (v19 == v20)
    {
      swift_bridgeObjectRelease();
      return v44;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C234FD54(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1C254CBD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C2351018(0, &qword_1EA2E16C8, MEMORY[0x1E4F27A00], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v35[-v9 - 8];
  uint64_t result = (uint64_t)HKCodableHealthRecordsLocalizedEducationContent.eduSections.getter();
  uint64_t v12 = result;
  if ((a2 & 1) == 0)
  {
LABEL_4:
    uint64_t v15 = *(void *)(v12 + 16);
    if (v15) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  sub_1C254CBC0();
  sub_1C254CBB0();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v13 = sub_1C254CBA0();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
  {
    uint64_t result = sub_1C2350F40((uint64_t)v10);
    goto LABEL_4;
  }
  uint64_t v30 = sub_1C254CB90();
  uint64_t v32 = v31;
  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v10, v13);
  uint64_t v33 = sub_1C2350458(v12, v30, v32);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v12 = v33;
  uint64_t v15 = *(void *)(v33 + 16);
  if (!v15) {
    goto LABEL_17;
  }
LABEL_5:
  unint64_t v16 = 0;
  uint64_t v41 = MEMORY[0x1E4FBC860];
  uint64_t v17 = v12 + 32;
  while (v16 < *(void *)(v12 + 16))
  {
    sub_1C21F4424(v17, (uint64_t)&v38);
    uint64_t v18 = v39;
    uint64_t v19 = v40;
    __swift_project_boxed_opaque_existential_1Tm(&v38, v39);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 40))(v18, v19) == a1)
    {
      sub_1C21F44EC(&v38, (uint64_t)v35);
      uint64_t v20 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C2274B30(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v41;
      }
      unint64_t v22 = *(void *)(v20 + 16);
      unint64_t v21 = *(void *)(v20 + 24);
      if (v22 >= v21 >> 1) {
        sub_1C2274B30(v21 > 1, v22 + 1, 1);
      }
      uint64_t v23 = v36;
      uint64_t v24 = v37;
      uint64_t v25 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
      __n128 v26 = MEMORY[0x1F4188790](v25);
      uint64_t v28 = &v35[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(unsigned char *, __n128))(v29 + 16))(v28, v26);
      sub_1C2297320(v22, (uint64_t)v28, &v41, v23, v24);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
    }
    else
    {
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v38);
    }
    ++v16;
    v17 += 40;
    if (v15 == v16)
    {
      swift_bridgeObjectRelease();
      return v41;
    }
  }
  __break(1u);
  return result;
}

void *sub_1C2350154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v20[3] = a3;
  v20[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  sub_1C21F4424((uint64_t)v20, a2 + 40);
  sub_1C21F4424((uint64_t)v20, (uint64_t)v19);
  type metadata accessor for EducationItem();
  uint64_t v9 = swift_allocObject();
  type metadata accessor for EducationCell();
  sub_1C23507D4(&qword_1EA2E16B8, 255, (void (*)(uint64_t))type metadata accessor for EducationCell);
  *(void *)(v9 + 56) = sub_1C254D330();
  *(void *)(v9 + 64) = v10;
  sub_1C21F44EC(v19, v9 + 16);
  sub_1C2350FCC(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C255CEB0;
  *(void *)(inited + 32) = v9;
  *(void *)&v19[0] = inited;
  sub_1C254F730();
  unint64_t v12 = *(void *)&v19[0];
  sub_1C2351018(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C255CD90;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(a4 + 24);
  swift_retain();
  v14(a3, a4);
  sub_1C228B0BC(v12);
  swift_bridgeObjectRelease();
  sub_1C254D990();
  uint64_t v15 = ConceptsDataSource.init(arrangedSections:isHidden:)(v13, 0);
  unint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 8);
  swift_retain();
  char v17 = v16(a3, a4);
  sub_1C244073C((v17 & 1) == 0);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  return v15;
}

uint64_t sub_1C2350458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v36 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return result;
  }
  uint64_t v8 = 0;
  uint64_t v29 = a1 + 32;
  while (1)
  {
    sub_1C21F4424(v29 + 40 * v8, (uint64_t)&v33);
    uint64_t v9 = v34;
    uint64_t v10 = v35;
    __swift_project_boxed_opaque_existential_1Tm(&v33, v34);
    uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    unint64_t v12 = v11;
    uint64_t v13 = v11[2];
    if (v13)
    {
      BOOL v14 = v11[4] == a2 && v11[5] == a3;
      if (v14 || (uint64_t result = sub_1C2550870(), (result & 1) != 0))
      {
LABEL_11:
        swift_bridgeObjectRelease();
        sub_1C21F44EC(&v33, (uint64_t)v30);
        uint64_t v15 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C2274B30(0, *(void *)(v15 + 16) + 1, 1);
          uint64_t v15 = v36;
        }
        unint64_t v17 = *(void *)(v15 + 16);
        unint64_t v16 = *(void *)(v15 + 24);
        if (v17 >= v16 >> 1) {
          sub_1C2274B30(v16 > 1, v17 + 1, 1);
        }
        uint64_t v18 = v31;
        uint64_t v19 = v32;
        uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
        MEMORY[0x1F4188790](v20);
        unint64_t v22 = (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v23 + 16))(v22);
        sub_1C2297320(v17, (uint64_t)v22, &v36, v18, v19);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
        goto LABEL_4;
      }
      if (v13 != 1) {
        break;
      }
    }
LABEL_3:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);
LABEL_4:
    if (++v8 == v5) {
      return v36;
    }
  }
  uint64_t v24 = v12 + 7;
  uint64_t v25 = 1;
  while (1)
  {
    uint64_t v26 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (*(v24 - 1) == a2 && *v24 == a3) {
      goto LABEL_11;
    }
    uint64_t result = sub_1C2550870();
    if (result) {
      goto LABEL_11;
    }
    v24 += 2;
    ++v25;
    if (v26 == v13) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

void *sub_1C23506E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for EducationDataSource();
  uint64_t v10 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return sub_1C2350154((uint64_t)v9, v10, a3, a4);
}

uint64_t sub_1C23507D4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C235081C(uint64_t a1, uint64_t a2)
{
  return sub_1C23507D4(&qword_1EA2E16C0, a2, (void (*)(uint64_t))type metadata accessor for EducationDataSource);
}

uint64_t type metadata accessor for EducationDataSource()
{
  return self;
}

uint64_t sub_1C2350888@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 64);
  *a2 = *(void *)(v3 + 56);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of EducationProviding.hasEducation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EducationProviding.educationPrimaryContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EducationProviding.educationTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EducationProviding.educationSideEffects.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EducationProviding.educationPregnancyDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EducationProviding.isPregnancyDescriptionCritical.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EducationProviding.educationLactationDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EducationProviding.isLactationDescriptionCritical.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EducationProviding.attributions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of EducationProviding.uniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t type metadata accessor for EducationItem()
{
  return self;
}

uint64_t method lookup function for EducationItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EducationItem);
}

uint64_t dispatch thunk of EducationItem.reuseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of EducationItem.reuseIdentifier.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of EducationItem.reuseIdentifier.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of EducationItem.uniqueIdentifier.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t method lookup function for EducationDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EducationDataSource);
}

uint64_t dispatch thunk of EducationDataSource.__allocating_init(eduProviding:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of EducationDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t sub_1C2350ABC(uint64_t a1)
{
  uint64_t v2 = sub_1C254CBD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254CBC0();
  uint64_t v6 = sub_1C254CB60();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
    uint64_t v11 = (void *)MEMORY[0x1E4FBC868];
LABEL_19:
    uint64_t v35 = self;
    uint64_t v36 = swift_bridgeObjectRetain();
    sub_1C228FE98(v36);
    swift_bridgeObjectRelease();
    uint64_t v37 = (void *)sub_1C254F700();
    swift_release();
    id v38 = objc_msgSend(v35, sel_preferredLocalizationsFromArray_, v37);

    uint64_t v39 = (void *)sub_1C254F710();
    if (v39[2])
    {
      uint64_t v41 = v39[4];
      uint64_t v40 = v39[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v11[2])
      {
        unint64_t v42 = sub_1C21A6470(v6, v8);
        if (v43)
        {
          uint64_t v44 = *(void *)(v11[7] + 8 * v42);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_26:
          swift_bridgeObjectRelease();
          return v44;
        }
      }
      swift_bridgeObjectRelease();
      if (v11[2])
      {
        unint64_t v45 = sub_1C21A6470(v41, v40);
        if (v46)
        {
          uint64_t v44 = *(void *)(v11[7] + 8 * v45);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_26;
        }
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v49 = v6;
  uint64_t v50 = v8;
  uint64_t v10 = a1 + 32;
  uint64_t v48 = a1;
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)MEMORY[0x1E4FBC868];
  while (1)
  {
    sub_1C21F4424(v10, (uint64_t)v53);
    uint64_t v12 = v54;
    uint64_t v13 = v55;
    __swift_project_boxed_opaque_existential_1Tm(v53, v54);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
    uint64_t v16 = v15;
    sub_1C21F4424((uint64_t)v53, (uint64_t)v52);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v51 = v11;
    unint64_t v19 = sub_1C21A6470(v14, v16);
    uint64_t v20 = v11[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      break;
    }
    char v23 = v18;
    if (v11[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C24AE884();
      }
    }
    else
    {
      sub_1C227B524(v22, isUniquelyReferenced_nonNull_native);
      unint64_t v24 = sub_1C21A6470(v14, v16);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_33;
      }
      unint64_t v19 = v24;
    }
    uint64_t v11 = v51;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      v11[(v19 >> 6) + 8] |= 1 << v19;
      uint64_t v26 = (uint64_t *)(v11[6] + 16 * v19);
      *uint64_t v26 = v14;
      v26[1] = v16;
      *(void *)(v11[7] + 8 * v19) = MEMORY[0x1E4FBC860];
      uint64_t v27 = v11[2];
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        goto LABEL_32;
      }
      v11[2] = v29;
      swift_bridgeObjectRetain();
    }
    uint64_t v30 = v11[7];
    uint64_t v31 = *(void **)(v30 + 8 * v19);
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v30 + 8 * v19) = v31;
    if ((v32 & 1) == 0)
    {
      uint64_t v31 = sub_1C226CD78(0, v31[2] + 1, 1, v31);
      *(void *)(v30 + 8 * v19) = v31;
    }
    unint64_t v34 = v31[2];
    unint64_t v33 = v31[3];
    if (v34 >= v33 >> 1)
    {
      uint64_t v31 = sub_1C226CD78((void *)(v33 > 1), v34 + 1, 1, v31);
      *(void *)(v30 + 8 * v19) = v31;
    }
    void v31[2] = v34 + 1;
    sub_1C21F44EC(v52, (uint64_t)&v31[5 * v34 + 4]);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
    v10 += 40;
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = v49;
      uint64_t v8 = v50;
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  uint64_t result = sub_1C2550910();
  __break(1u);
  return result;
}

uint64_t sub_1C2350F40(uint64_t a1)
{
  sub_1C2351018(0, &qword_1EA2E16C8, MEMORY[0x1E4F27A00], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C2350FCC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C2351018(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C235107C()
{
  unint64_t result = qword_1EA2DFBA0;
  if (!qword_1EA2DFBA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DFBA0);
  }
  return result;
}

uint64_t HealthRecordsURLHandler.__allocating_init()()
{
  return swift_allocObject();
}

unint64_t HealthRecordsURLParsingResult.typeName.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for HealthRecordsURLParsingResult();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (id *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C22491F0(v1, (uint64_t)v4);
  unint64_t v5 = 0x6E676F6365726E75;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = sub_1C254CB40();
      (*(void (**)(id *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
      unint64_t v5 = 0xD000000000000010;
      break;
    case 2u:
      sub_1C235158C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for HealthRecordsURLParsingResult);
      unint64_t v5 = 0xD000000000000011;
      break;
    case 3u:
      unint64_t v5 = 0xD000000000000012;
      sub_1C23515EC();
      swift_bridgeObjectRelease();
      uint64_t v7 = sub_1C254CB40();
      (*(void (**)(id *, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
      break;
    case 4u:
      sub_1C235158C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for HealthRecordsURLParsingResult);
      unint64_t v5 = 0xD000000000000013;
      break;
    case 5u:
      sub_1C235158C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for HealthRecordsURLParsingResult);
      unint64_t v5 = 0x696472616F626E6FLL;
      break;
    case 6u:
      sub_1C235158C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for HealthRecordsURLParsingResult);
      unint64_t v5 = 0xD000000000000016;
      break;
    case 7u:
      swift_bridgeObjectRelease();
      sub_1C2249340();
      uint64_t v9 = (char *)v4 + *(int *)(v8 + 48);
      uint64_t v10 = sub_1C254CB40();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      unint64_t v5 = 0xD000000000000014;
      break;
    case 8u:
      unint64_t v5 = 0xD000000000000012;

      sub_1C22492B0();
      sub_1C23541DC((uint64_t)v4 + *(int *)(v11 + 48), (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
      break;
    case 9u:
      uint64_t v12 = sub_1C254CB40();
      (*(void (**)(id *, uint64_t))(*(void *)(v12 - 8) + 8))(v4, v12);
      unint64_t v5 = 0xD00000000000001DLL;
      break;
    case 0xAu:
      uint64_t v13 = sub_1C254C900();
      (*(void (**)(id *, uint64_t))(*(void *)(v13 - 8) + 8))(v4, v13);
      unint64_t v5 = 0xD00000000000001CLL;
      break;
    case 0xBu:
      uint64_t v14 = sub_1C254C900();
      (*(void (**)(id *, uint64_t))(*(void *)(v14 - 8) + 8))(v4, v14);
      unint64_t v5 = 0xD00000000000001ELL;
      break;
    case 0xCu:
      return v5;
    case 0xDu:
      unint64_t v5 = 0x676E6972616873;
      break;
    default:
      unint64_t v5 = 0xD00000000000001DLL;
      break;
  }
  return v5;
}

uint64_t HealthRecordsURLHandler.init()()
{
  return v0;
}

uint64_t type metadata accessor for HealthRecordsURLParsingResult()
{
  uint64_t result = qword_1EA2E16E0;
  if (!qword_1EA2E16E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C235158C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C23515EC()
{
  if (!qword_1EA2E16D0)
  {
    sub_1C254CB40();
    sub_1C22A0824();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E16D0);
    }
  }
}

uint64_t sub_1C2351660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v112 = (char *)a2;
  uint64_t v102 = *v2;
  uint64_t v4 = sub_1C254E560();
  uint64_t v107 = *(void *)(v4 - 8);
  uint64_t v108 = v4;
  MEMORY[0x1F4188790](v4);
  id v109 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB684(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v6 - 8);
  id v95 = (char *)&v91 - v7;
  uint64_t v94 = sub_1C254CB40();
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v92 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB684(0, &qword_1EA2E16D8, (void (*)(uint64_t))type metadata accessor for HealthRecordsURLParsingResult);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  id v97 = (char *)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v98 = (uint64_t *)((char *)&v91 - v12);
  uint64_t v13 = sub_1C254D210();
  uint64_t v105 = *(void *)(v13 - 8);
  uint64_t v106 = v13;
  MEMORY[0x1F4188790](v13);
  id v111 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C254C900();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  unint64_t v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  BOOL v21 = (char *)&v91 - v20;
  uint64_t v22 = type metadata accessor for HealthRecordsURLParsingResult();
  uint64_t v99 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  uint64_t v104 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  id v96 = (char *)&v91 - v26;
  MEMORY[0x1F4188790](v25);
  id v110 = (char *)&v91 - v27;
  uint64_t v113 = swift_allocBox();
  id v101 = v28;
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v29(v21, a1, v15);
  v29(v19, (uint64_t)v21, v15);
  sub_1C25508F0();
  id v30 = (id)HKSensitiveLogItem();
  swift_unknownObjectRelease();
  sub_1C25501E0();
  swift_unknownObjectRelease();
  uint64_t v103 = sub_1C254F4F0();
  unint64_t v32 = v31;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  unint64_t v33 = (void *)sub_1C254C870();
  unsigned int v34 = objc_msgSend(v33, sel_hk_isRewrittenEUDigitalCOVIDCertificateQRCodeURL);

  if (v34)
  {
    swift_bridgeObjectRelease();
    v29(v112, a1, v15);
    swift_storeEnumTagMultiPayload();
    return swift_release();
  }
  v29(v21, a1, v15);
  uint64_t v36 = v111;
  sub_1C254D200();
  if ((sub_1C254D1E0() & 1) == 0)
  {
    uint64_t v37 = (void *)sub_1C254C870();
    unsigned int v38 = objc_msgSend(v37, sel_hk_isRewrittenHealthCardQRCodeURL);

    if (!v38)
    {
      uint64_t v54 = self;
      uint64_t v55 = (void *)sub_1C254C870();
      unsigned int v56 = objc_msgSend(v54, sel_isClinicalLoginRedirectURL_, v55);

      if (v56)
      {
        id v57 = (void *)v113;
        swift_retain();
        uint64_t v58 = sub_1C254C870();
        uint64_t v59 = swift_allocObject();
        id v100 = v54;
        *(void *)(v59 + 16) = sub_1C23545A8;
        *(void *)(v59 + 24) = v57;
        id v118 = sub_1C23545C0;
        uint64_t v119 = v59;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v115 = 1107296256;
        double v116 = sub_1C2352A58;
        uint64_t v117 = &block_descriptor_15;
        id v60 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        uint64_t v61 = swift_allocObject();
        id v62 = v101;
        *(void *)(v61 + 16) = v101;
        uint64_t v63 = swift_allocObject();
        *(void *)(v63 + 16) = sub_1C23545FC;
        *(void *)(v63 + 24) = v61;
        id v96 = (char *)v61;
        id v118 = sub_1C2354614;
        uint64_t v119 = v63;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v115 = 1107296256;
        double v116 = sub_1C2352E44;
        uint64_t v117 = &block_descriptor_24;
        id v64 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        objc_msgSend(v100, sel_parseClinicalLoginRedirectURL_resultHandler_errorHandler_, v58, v60, v64);
        _Block_release(v60);

        _Block_release(v64);
        LOBYTE(v58) = swift_isEscapingClosureAtFileLocation();
        uint64_t result = swift_release();
        if (v58)
        {
          __break(1u);
        }
        else
        {
          char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          uint64_t result = swift_release();
          uint64_t v39 = (uint64_t)v110;
          uint64_t v36 = v111;
          if ((isEscapingClosureAtFileLocation & 1) == 0)
          {
            swift_beginAccess();
            sub_1C22491F0((uint64_t)v62, v39);
            swift_release();
            uint64_t v99 = 0;
            id v97 = 0;
            uint64_t v98 = 0;
            id v101 = sub_1C23545FC;
            id v100 = v57;
            uint64_t v40 = sub_1C23545A8;
            unint64_t v42 = v109;
            uint64_t v43 = (uint64_t)v104;
            uint64_t v41 = v96;
            goto LABEL_8;
          }
        }
        __break(1u);
      }
      else
      {
        id v66 = (void *)sub_1C254C870();
        unsigned int v67 = objc_msgSend(v54, sel_isClinicalOnboardingURL_, v66);

        id v68 = (unsigned char *)v113;
        if (!v67)
        {
          id v77 = v98;
          sub_1C2353280(v98);
          uint64_t v78 = v99;
          uint64_t v79 = (unsigned int (*)(uint64_t *, uint64_t, uint64_t))*((void *)v99 + 6);
          if (v79(v77, 1, v22) != 1)
          {
            uint64_t v39 = (uint64_t)v110;
            sub_1C2354238((uint64_t)v77, (uint64_t)v110);
            goto LABEL_7;
          }
          sub_1C23541DC((uint64_t)v77, &qword_1EA2E16D8, (void (*)(uint64_t))type metadata accessor for HealthRecordsURLParsingResult);
          if (URL.isCategoryRoomURL.getter())
          {
            swift_bridgeObjectRelease();
            sub_1C235790C(&qword_1EA2DF020, MEMORY[0x1E4F276F0]);
            uint64_t v103 = sub_1C2550810();
            unint64_t v32 = v80;
            URL.chrDisplayCategoryKind.getter(&aBlock);
            if (aBlock == 11)
            {
              uint64_t v81 = 1;
              uint64_t v82 = (uint64_t)v97;
            }
            else
            {
              uint64_t v82 = (uint64_t)v97;
              *id v97 = aBlock;
              swift_storeEnumTagMultiPayload();
              uint64_t v81 = 0;
            }
            uint64_t v90 = (uint64_t)v96;
            (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v78 + 7))(v82, v81, 1, v22);
            if (v79((uint64_t *)v82, 1, v22) == 1)
            {
              swift_storeEnumTagMultiPayload();
              sub_1C23541DC(v82, &qword_1EA2E16D8, (void (*)(uint64_t))type metadata accessor for HealthRecordsURLParsingResult);
            }
            else
            {
              sub_1C2354238(v82, v90);
            }
            unint64_t v42 = v109;
            uint64_t v39 = (uint64_t)v110;
            uint64_t v43 = (uint64_t)v104;
            sub_1C2354238(v90, (uint64_t)v110);
          }
          else
          {
            if (URL.isViewHealthRecordURL.getter())
            {
              swift_bridgeObjectRelease();
              sub_1C235790C(&qword_1EA2DF020, MEMORY[0x1E4F276F0]);
              uint64_t v103 = sub_1C2550810();
              unint64_t v32 = v83;
              BOOL v84 = URL.isViewHealthRecordURL.getter();
              uint64_t v39 = (uint64_t)v110;
              if (v84)
              {
                sub_1C254C860();
                uint64_t v85 = (uint64_t)v95;
                sub_1C254CAE0();
                swift_bridgeObjectRelease();
                uint64_t v86 = v93;
                uint64_t v87 = v94;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v85, 1, v94) != 1)
                {
                  __n128 v88 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 32);
                  uint64_t v89 = v92;
                  v88(v92, v85, v87);
                  v88((char *)v39, (uint64_t)v89, v87);
                  goto LABEL_6;
                }
              }
              else
              {
                uint64_t v85 = (uint64_t)v95;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v95, 1, 1, v94);
              }
              sub_1C23541DC(v85, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
              goto LABEL_6;
            }
            sub_1C254D1F0();
            unint64_t v42 = v109;
            uint64_t v39 = (uint64_t)v110;
            uint64_t v43 = (uint64_t)v104;
            swift_storeEnumTagMultiPayload();
          }
          uint64_t v40 = 0;
          id v100 = 0;
          id v101 = 0;
          uint64_t v41 = 0;
          uint64_t v99 = 0;
          id v97 = 0;
          uint64_t v98 = 0;
          goto LABEL_8;
        }
        swift_retain();
        uint64_t v69 = sub_1C254C870();
        uint64_t v70 = swift_allocObject();
        id v100 = v54;
        *(void *)(v70 + 16) = sub_1C2354508;
        *(void *)(v70 + 24) = v68;
        id v118 = sub_1C2354520;
        uint64_t v119 = v70;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v115 = 1107296256;
        double v116 = sub_1C23530C0;
        uint64_t v117 = &block_descriptor_37;
        id v71 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        uint64_t v72 = swift_allocObject();
        *(void *)(v72 + 16) = v101;
        uint64_t v73 = swift_allocObject();
        *(void *)(v73 + 16) = sub_1C2354564;
        *(void *)(v73 + 24) = v72;
        id v96 = (char *)v72;
        id v118 = sub_1C235457C;
        uint64_t v119 = v73;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v115 = 1107296256;
        double v116 = sub_1C235323C;
        uint64_t v117 = &block_descriptor_9_1;
        id v74 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        objc_msgSend(v100, sel_parseClinicalOnboardingURL_resultHandler_errorHandler_, v69, v71, v74);
        _Block_release(v71);

        _Block_release(v74);
        LOBYTE(v69) = swift_isEscapingClosureAtFileLocation();
        uint64_t result = swift_release();
        if ((v69 & 1) == 0)
        {
          char v75 = swift_isEscapingClosureAtFileLocation();
          uint64_t result = swift_release();
          uint64_t v39 = (uint64_t)v110;
          if ((v75 & 1) == 0)
          {
            id v76 = v101;
            swift_beginAccess();
            sub_1C22491F0((uint64_t)v76, v39);
            swift_release();
            uint64_t v40 = 0;
            id v100 = 0;
            id v101 = 0;
            uint64_t v41 = 0;
            uint64_t v98 = (uint64_t *)sub_1C2354564;
            uint64_t v99 = sub_1C2354508;
            id v97 = v68;
            unint64_t v42 = v109;
            uint64_t v43 = (uint64_t)v104;
            goto LABEL_8;
          }
LABEL_41:
          __break(1u);
          return result;
        }
      }
      __break(1u);
      goto LABEL_41;
    }
  }
  uint64_t v39 = (uint64_t)v110;
  v29(v110, a1, v15);
LABEL_6:
  swift_storeEnumTagMultiPayload();
LABEL_7:
  uint64_t v40 = 0;
  id v100 = 0;
  id v101 = 0;
  uint64_t v41 = 0;
  uint64_t v99 = 0;
  id v97 = 0;
  uint64_t v98 = 0;
  unint64_t v42 = v109;
  uint64_t v43 = (uint64_t)v104;
LABEL_8:
  sub_1C254E510();
  sub_1C22491F0(v39, v43);
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_1C254E550();
  os_log_type_t v45 = sub_1C254FA40();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = swift_slowAlloc();
    id v96 = v41;
    uint64_t v47 = v46;
    uint64_t v48 = v43;
    uint64_t v49 = swift_slowAlloc();
    uint64_t v120 = v49;
    *(_DWORD *)uint64_t v47 = 136446722;
    uint64_t v121 = v102;
    swift_getMetatypeMetadata();
    uint64_t v50 = sub_1C254F4F0();
    uint64_t v104 = v40;
    uint64_t v121 = sub_1C21AD354(v50, v51, &v120);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v121 = sub_1C21AD354(v103, v32, &v120);
    sub_1C2550120();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v47 + 22) = 2082;
    unint64_t v52 = HealthRecordsURLParsingResult.typeName.getter();
    uint64_t v121 = sub_1C21AD354(v52, v53, &v120);
    uint64_t v39 = (uint64_t)v110;
    uint64_t v40 = v104;
    sub_1C2550120();
    swift_bridgeObjectRelease();
    sub_1C235158C(v48, (uint64_t (*)(void))type metadata accessor for HealthRecordsURLParsingResult);
    _os_log_impl(&dword_1C21A1000, v44, v45, "[%{public}s]: parsed URL %{public}s to type %{public}s", (uint8_t *)v47, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v49, -1, -1);
    MEMORY[0x1C875A0B0](v47, -1, -1);

    (*(void (**)(char *, uint64_t))(v107 + 8))(v109, v108);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v111, v106);
  }
  else
  {

    sub_1C235158C(v43, (uint64_t (*)(void))type metadata accessor for HealthRecordsURLParsingResult);
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v42, v108);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v36, v106);
  }
  sub_1C2354238(v39, (uint64_t)v112);
  swift_release();
  sub_1C221794C((uint64_t)v40);
  sub_1C221794C((uint64_t)v101);
  sub_1C221794C((uint64_t)v99);
  return sub_1C221794C((uint64_t)v98);
}

uint64_t sub_1C2352928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HealthRecordsURLParsingResult();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = swift_projectBox();
  sub_1C2249340();
  uint64_t v11 = (char *)v8 + *(int *)(v10 + 48);
  *uint64_t v8 = a1;
  v8[1] = a2;
  uint64_t v12 = sub_1C254CB40();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, a3, v12);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C23579C4((uint64_t)v8, v9);
  return 1;
}

uint64_t sub_1C2352A58(uint64_t a1)
{
  uint64_t v2 = sub_1C254CB40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, char *))(a1 + 32);
  uint64_t v7 = sub_1C254F470();
  uint64_t v9 = v8;
  sub_1C254CB20();
  char v10 = v6(v7, v9, v5);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10 & 1;
}

uint64_t sub_1C2352B70(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HealthRecordsURLParsingResult();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB684(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v23 - v10;
  uint64_t v12 = sub_1C254CB40();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)sub_1C254C810();
  sub_1C21F4914(a2, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {

    sub_1C23541DC((uint64_t)v11, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
LABEL_6:
    sub_1C22492B0();
    uint64_t v20 = (uint64_t)&v8[*(int *)(v19 + 48)];
    *(void *)uint64_t v8 = a1;
    sub_1C21F4914(a2, v20);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    id v21 = a1;
    goto LABEL_7;
  }
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v17(v15, v11, v12);
  unsigned int v18 = objc_msgSend(v16, sel_hk_OAuth2_isAccessDeniedError);

  if (!v18)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    a2 = v24;
    a3 = v25;
    goto LABEL_6;
  }
  v17(v8, v15, v12);
  swift_storeEnumTagMultiPayload();
  a3 = v25;
  swift_beginAccess();
LABEL_7:
  sub_1C23579C4((uint64_t)v8, a3);
  return 0;
}

uint64_t sub_1C2352E44(uint64_t a1, void *a2, uint64_t a3)
{
  sub_1C21AB684(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = *(uint64_t (**)(void))(a1 + 32);
  if (a3)
  {
    sub_1C254CB20();
    uint64_t v10 = sub_1C254CB40();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = sub_1C254CB40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  id v12 = a2;
  char v13 = v9();

  sub_1C23541DC((uint64_t)v8, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  return v13 & 1;
}

uint64_t sub_1C2352FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = type metadata accessor for HealthRecordsURLParsingResult();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = swift_projectBox();
  *uint64_t v16 = a1;
  v16[1] = a2;
  _OWORD v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  v16[5] = a6;
  v16[6] = a7;
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C23579C4((uint64_t)v16, v17);
  return 1;
}

uint64_t sub_1C23530C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;
  uint64_t v11 = sub_1C254F470();
  uint64_t v13 = v12;
  if (a4)
  {
    uint64_t v14 = sub_1C254F470();
    a4 = v15;
  }
  else
  {
    uint64_t v14 = 0;
  }
  char v16 = v7(v8, v10, v11, v13, v14, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16 & 1;
}

uint64_t sub_1C2353180(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HealthRecordsURLParsingResult();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v6 = a1;
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  id v7 = a1;
  sub_1C23579C4((uint64_t)v6, a2);
  return 0;
}

uint64_t sub_1C235323C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  char v4 = v2();

  return v4 & 1;
}

uint64_t sub_1C2353280@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v97 = *v1;
  uint64_t v3 = sub_1C254E560();
  uint64_t v99 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v100 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB684(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v103 = (char *)&v95 - v6;
  uint64_t v7 = sub_1C254CB40();
  uint64_t v101 = *(void *)(v7 - 8);
  uint64_t v102 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v98 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1C254C5B0();
  uint64_t v105 = *(void *)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  double v112 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB684(0, &qword_1EA2E1700, MEMORY[0x1E4F26EA0]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v104 = (char *)&v95 - v11;
  sub_1C21AB684(0, &qword_1EA2E1708, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v108 = (char *)&v95 - v13;
  uint64_t v14 = sub_1C254C620();
  uint64_t v109 = *(void *)(v14 - 8);
  uint64_t v110 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v106 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C254C900();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v107 = v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v95 - v21;
  id v23 = objc_msgSend(self, sel__hk_urlForViewHealthRecords);
  sub_1C254C8A0();

  uint64_t v115 = sub_1C254C850();
  sub_1C254C8E0();
  if (!v24)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
LABEL_37:
    swift_bridgeObjectRelease();
    uint64_t v67 = type metadata accessor for HealthRecordsURLParsingResult();
    id v68 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56);
    uint64_t v69 = a1;
    goto LABEL_38;
  }
  uint64_t v113 = v16;
  double v114 = v22;
  sub_1C254C8C0();
  if (!v25)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v114, v113);
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
  uint64_t v95 = v3;
  id v96 = a1;
  uint64_t v26 = sub_1C254C8E0();
  if (v27)
  {
    uint64_t v26 = sub_1C254F500();
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = 0;
  }
  uint64_t v30 = sub_1C254F500();
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();
  if (!v29)
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = v113;
    unsigned int v34 = v114;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v114, v113);
    goto LABEL_16;
  }
  if (v26 == v30 && v29 == v32)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = v113;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v114, v113);
    goto LABEL_14;
  }
  char v35 = sub_1C2550870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = v113;
  unsigned int v34 = v114;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v114, v113);
  if ((v35 & 1) == 0)
  {
LABEL_16:
    uint64_t v40 = *(void (**)(char *, uint64_t))(v17 + 8);
    v40(v20, v33);
    swift_bridgeObjectRelease();
LABEL_36:
    v40(v34, v33);
    a1 = v96;
    goto LABEL_37;
  }
LABEL_14:
  uint64_t v36 = sub_1C254C8C0();
  if (v37)
  {
    uint64_t v36 = sub_1C254F500();
    uint64_t v39 = v38;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v39 = 0;
  }
  uint64_t v41 = sub_1C254F500();
  uint64_t v43 = v42;
  swift_bridgeObjectRelease();
  if (!v39)
  {
    uint64_t v40 = *(void (**)(char *, uint64_t))(v17 + 8);
    v40(v20, v33);
    swift_bridgeObjectRelease();
LABEL_35:
    unsigned int v34 = v114;
    goto LABEL_36;
  }
  if (v36 == v41 && v39 == v43)
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = *(void (**)(char *, uint64_t))(v17 + 8);
    v40(v20, v33);
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  char v44 = sub_1C2550870();
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v17 + 8);
  v40(v20, v33);
  swift_bridgeObjectRelease();
  if ((v44 & 1) == 0) {
    goto LABEL_35;
  }
LABEL_24:
  os_log_type_t v45 = v114;
  uint64_t v46 = (uint64_t)v108;
  sub_1C254C5E0();
  uint64_t v48 = v109;
  uint64_t v47 = v110;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v46, 1, v110) == 1)
  {
    sub_1C23541DC(v46, &qword_1EA2E1708, MEMORY[0x1E4F26ED8]);
  }
  else
  {
    unint64_t v51 = v106;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v106, v46, v47);
    uint64_t v52 = sub_1C254C5C0();
    uint64_t v50 = v52;
    if (!v52)
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v47);
      uint64_t v49 = 0;
      goto LABEL_41;
    }
    uint64_t v53 = *(void *)(v52 + 16);
    if (v53)
    {
      uint64_t v54 = *(void (**)(char *, unint64_t, uint64_t))(v105 + 16);
      unint64_t v55 = v52 + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
      unsigned int v56 = (void (**)(char *, uint64_t))(v105 + 8);
      uint64_t v57 = *(void *)(v105 + 72);
      swift_bridgeObjectRetain();
      uint64_t v58 = v111;
      uint64_t v59 = v112;
      while (1)
      {
        v54(v59, v55, v58);
        if (sub_1C254C590() == 6517363 && v60 == 0xE300000000000000) {
          break;
        }
        char v61 = sub_1C2550870();
        swift_bridgeObjectRelease();
        if (v61) {
          goto LABEL_64;
        }
        uint64_t v58 = v111;
        uint64_t v59 = v112;
        (*v56)(v112, v111);
        v55 += v57;
        if (!--v53)
        {
          swift_bridgeObjectRelease();
          uint64_t v62 = 1;
          uint64_t v33 = v113;
          os_log_type_t v45 = v114;
          uint64_t v63 = (void *)v115;
          uint64_t v65 = (uint64_t)v104;
          uint64_t v64 = v105;
          id v66 = v106;
          goto LABEL_65;
        }
      }
      swift_bridgeObjectRelease();
LABEL_64:
      uint64_t v33 = v113;
      os_log_type_t v45 = v114;
      uint64_t v63 = (void *)v115;
      uint64_t v58 = v111;
      uint64_t v65 = (uint64_t)v104;
      uint64_t v64 = v105;
      id v66 = v106;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v65, v112, v58);
      uint64_t v62 = 0;
LABEL_65:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v65, v62, 1, v58);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v65, 1, v58) == 1)
      {
        (*(void (**)(char *, uint64_t))(v109 + 8))(v66, v110);
        sub_1C23541DC(v65, &qword_1EA2E1700, MEMORY[0x1E4F26EA0]);
        uint64_t v49 = 0;
        uint64_t v50 = 0;
      }
      else
      {
        uint64_t v93 = v58;
        uint64_t v49 = sub_1C254C5A0();
        uint64_t v50 = v94;
        (*(void (**)(char *, uint64_t))(v109 + 8))(v66, v110);
        (*v56)((char *)v65, v93);
      }
      goto LABEL_42;
    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v47);
    swift_bridgeObjectRelease();
  }
  uint64_t v49 = 0;
  uint64_t v50 = 0;
LABEL_41:
  uint64_t v63 = (void *)v115;
LABEL_42:
  switch(v63[2])
  {
    case 0:
      goto LABEL_50;
    case 1:
      if (v63[4] == 47 && v63[5] == 0xE100000000000000 || (sub_1C2550870() & 1) != 0) {
        goto LABEL_50;
      }
      goto LABEL_58;
    case 2:
      if ((v63[6] != 0x72656469766F7250 || v63[7] != 0xEE00686372616553) && (sub_1C2550870() & 1) == 0) {
        goto LABEL_58;
      }
LABEL_50:
      v40(v45, v33);
      swift_bridgeObjectRelease();
      uint64_t v72 = v96;
      *id v96 = v49;
      v72[1] = v50;
      uint64_t v73 = type metadata accessor for HealthRecordsURLParsingResult();
      swift_storeEnumTagMultiPayload();
      id v68 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56);
      uint64_t v69 = v72;
      goto LABEL_51;
    case 3:
      if ((v63[6] != 0x746E756F636341 || v63[7] != 0xE700000000000000) && (sub_1C2550870() & 1) == 0) {
        goto LABEL_58;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v74 = v103;
      sub_1C254CAE0();
      uint64_t v75 = (uint64_t)v74;
      swift_bridgeObjectRelease();
      uint64_t v76 = v101;
      id v77 = v74;
      uint64_t v78 = v102;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v77, 1, v102) != 1)
      {
        v40(v45, v33);
        uint64_t v87 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 32);
        __n128 v88 = v98;
        v87(v98, v75, v78);
        sub_1C23515EC();
        uint64_t v90 = v78;
        uint64_t v91 = v96;
        uint64_t v92 = (uint64_t *)((char *)v96 + *(int *)(v89 + 48));
        v87((char *)v96, (uint64_t)v88, v90);
        *uint64_t v92 = v49;
        v92[1] = v50;
        uint64_t v73 = type metadata accessor for HealthRecordsURLParsingResult();
        swift_storeEnumTagMultiPayload();
        id v68 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56);
        uint64_t v69 = v91;
LABEL_51:
        uint64_t v70 = 0;
        uint64_t v67 = v73;
        return v68(v69, v70, 1, v67);
      }
      swift_bridgeObjectRelease();
      sub_1C23541DC(v75, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
      uint64_t v79 = v100;
      sub_1C254E510();
      unint64_t v80 = sub_1C254E550();
      os_log_type_t v81 = sub_1C254FA20();
      if (os_log_type_enabled(v80, v81))
      {
        uint64_t v82 = (uint8_t *)swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        uint64_t v117 = v83;
        *(_DWORD *)uint64_t v82 = 136446210;
        uint64_t v84 = sub_1C235429C();
        uint64_t v116 = sub_1C21AD354(v84, v85, &v117);
        sub_1C2550120();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C21A1000, v80, v81, "[%{public}s]: this URL is a “view account details” URL but doesn't contain a valid account UUID", v82, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C875A0B0](v83, -1, -1);
        MEMORY[0x1C875A0B0](v82, -1, -1);

        (*(void (**)(char *, uint64_t))(v99 + 8))(v100, v95);
        uint64_t v86 = v45;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v99 + 8))(v79, v95);
LABEL_59:
        uint64_t v86 = v45;
      }
      v40(v86, v33);
      uint64_t v67 = type metadata accessor for HealthRecordsURLParsingResult();
      id v68 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56);
      uint64_t v69 = v96;
      break;
    default:
LABEL_58:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_59;
  }
LABEL_38:
  uint64_t v70 = 1;
  return v68(v69, v70, 1, v67);
}

uint64_t sub_1C23541DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C21AB684(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2354238(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HealthRecordsURLParsingResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C235429C()
{
  return sub_1C254F4F0();
}

uint64_t HealthRecordsURLHandler.deinit()
{
  return v0;
}

uint64_t HealthRecordsURLHandler.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C23542E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  sub_1C2357954();
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = sub_1C254CB40();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  v18(v16, a1, v17);
  uint64_t v19 = &v16[*(int *)(v11 + 56)];
  uint64_t v25 = a2;
  *(void *)uint64_t v19 = a2;
  *((void *)v19 + 1) = a3;
  v18(v13, v26, v17);
  uint64_t v20 = v27;
  uint64_t v21 = &v13[*(int *)(v11 + 56)];
  *(void *)uint64_t v21 = v27;
  *((void *)v21 + 1) = a6;
  sub_1C235790C((unint64_t *)&qword_1EA2DE1E8, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_1C254F420())
  {
    char v22 = (a3 | a6) == 0;
    if (a3 && a6)
    {
      if (v25 == v20 && a3 == a6) {
        char v22 = 1;
      }
      else {
        char v22 = sub_1C2550870();
      }
    }
  }
  else
  {
    char v22 = 0;
  }
  sub_1C235158C((uint64_t)v13, (uint64_t (*)(void))sub_1C2357954);
  sub_1C235158C((uint64_t)v16, (uint64_t (*)(void))sub_1C2357954);
  return v22 & 1;
}

uint64_t sub_1C2354508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1C2352FA8(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1C2354510()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2354520()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t sub_1C2354554()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2354564(void *a1)
{
  return sub_1C2353180(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C235456C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C235457C()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1C23545A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2352928(a1, a2, a3);
}

uint64_t sub_1C23545B0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C23545C0()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1C23545EC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C23545FC(void *a1, uint64_t a2)
{
  return sub_1C2352B70(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1C2354604()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2354614()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t _s15HealthRecordsUI0aB16URLParsingResultO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  v238 = (void *)a1;
  v239 = (char *)a2;
  uint64_t v2 = sub_1C254C900();
  uint64_t v234 = *(void *)(v2 - 8);
  uint64_t v235 = v2;
  MEMORY[0x1F4188790](v2);
  v228 = (char *)&v207 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  v229 = (char *)&v207 - v5;
  sub_1C21FE83C();
  uint64_t v208 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v209 = (uint64_t)&v207 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB684(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v8 - 8);
  v207 = (char *)&v207 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v210 = (uint64_t)&v207 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v213 = (uint64_t)&v207 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v212 = (uint64_t)&v207 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v211 = (uint64_t)&v207 - v17;
  sub_1C23515EC();
  uint64_t v217 = v18;
  MEMORY[0x1F4188790](v18);
  v218 = (char *)&v207 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v227 = (uint64_t)&v207 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v231 = (uint64_t)&v207 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v230 = (uint64_t)&v207 - v25;
  uint64_t v26 = sub_1C254CB40();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v236 = v26;
  uint64_t v237 = v27;
  MEMORY[0x1F4188790](v26);
  v220 = (char *)&v207 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  v219 = (char *)&v207 - v30;
  MEMORY[0x1F4188790](v31);
  v233 = (char *)&v207 - v32;
  MEMORY[0x1F4188790](v33);
  v232 = (char *)&v207 - v34;
  MEMORY[0x1F4188790](v35);
  v216 = (char *)&v207 - v36;
  MEMORY[0x1F4188790](v37);
  v221 = (char *)&v207 - v38;
  uint64_t v39 = type metadata accessor for HealthRecordsURLParsingResult();
  MEMORY[0x1F4188790](v39);
  uint64_t v226 = (uint64_t)&v207 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v41);
  uint64_t v225 = (uint64_t)&v207 - v42;
  MEMORY[0x1F4188790](v43);
  uint64_t v224 = (uint64_t)&v207 - v44;
  MEMORY[0x1F4188790](v45);
  v214 = (id *)((char *)&v207 - v46);
  MEMORY[0x1F4188790](v47);
  v222 = (void **)((char *)&v207 - v48);
  MEMORY[0x1F4188790](v49);
  v223 = (char *)&v207 - v50;
  MEMORY[0x1F4188790](v51);
  v215 = (id *)((char *)&v207 - v52);
  MEMORY[0x1F4188790](v53);
  unint64_t v55 = (id *)((char *)&v207 - v54);
  MEMORY[0x1F4188790](v56);
  uint64_t v58 = (uint64_t *)((char *)&v207 - v57);
  MEMORY[0x1F4188790](v59);
  char v61 = (char *)&v207 - v60;
  MEMORY[0x1F4188790](v62);
  uint64_t v64 = (char *)&v207 - v63;
  MEMORY[0x1F4188790](v65);
  uint64_t v67 = (char *)&v207 - v66;
  MEMORY[0x1F4188790](v68);
  uint64_t v70 = (char *)&v207 - v69;
  MEMORY[0x1F4188790](v71);
  uint64_t v73 = (unsigned __int8 *)&v207 - v72;
  sub_1C2357828();
  MEMORY[0x1F4188790](v74 - 8);
  uint64_t v76 = (char *)&v207 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = (uint64_t)&v76[*(int *)(v77 + 56)];
  sub_1C22491F0((uint64_t)v238, (uint64_t)v76);
  v238 = (void *)v78;
  sub_1C22491F0((uint64_t)v239, v78);
  v239 = v76;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v79 = (uint64_t)v239;
      sub_1C22491F0((uint64_t)v239, (uint64_t)v70);
      uint64_t v82 = (uint64_t)v238;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v83 = v236;
        uint64_t v84 = v237;
        unint64_t v85 = *(void (**)(char *, char *, uint64_t))(v237 + 32);
        uint64_t v86 = v221;
        v85(v221, v70, v236);
        uint64_t v87 = v216;
        v85(v216, (char *)v82, v83);
        char v88 = sub_1C254CB10();
        uint64_t v89 = *(void (**)(char *, uint64_t))(v84 + 8);
        v89(v87, v83);
        uint64_t v90 = v86;
        uint64_t v91 = v83;
        goto LABEL_55;
      }
      (*(void (**)(char *, uint64_t))(v237 + 8))(v70, v236);
      goto LABEL_67;
    case 2u:
      uint64_t v79 = (uint64_t)v239;
      sub_1C22491F0((uint64_t)v239, (uint64_t)v67);
      swift_bridgeObjectRelease();
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_67;
      }
      goto LABEL_11;
    case 3u:
      uint64_t v79 = (uint64_t)v239;
      sub_1C22491F0((uint64_t)v239, (uint64_t)v64);
      uint64_t v92 = (uint64_t)v238;
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v93 = v217;
        uint64_t v94 = *(int *)(v217 + 48);
        uint64_t v95 = (uint64_t *)(v230 + v94);
        id v96 = (uint64_t *)&v64[v94];
        uint64_t v97 = v236;
        uint64_t v98 = *(void (**)(void))(v237 + 32);
        v98();
        uint64_t v99 = *v96;
        uint64_t v100 = v96[1];
        *uint64_t v95 = v99;
        v95[1] = v100;
        uint64_t v101 = *(int *)(v93 + 48);
        uint64_t v102 = (uint64_t *)(v231 + v101);
        uint64_t v103 = (uint64_t *)(v92 + v101);
        v98();
        uint64_t v104 = *v103;
        uint64_t v105 = v103[1];
        uint64_t *v102 = *v103;
        v102[1] = v105;
        uint64_t v106 = (uint64_t *)(v227 + *(int *)(v93 + 48));
        uint64_t v107 = *(void (**)(void))(v237 + 16);
        v107();
        *uint64_t v106 = v99;
        v106[1] = v100;
        uint64_t v108 = *(int *)(v93 + 48);
        uint64_t v109 = (uint64_t)v218;
        uint64_t v110 = (uint64_t *)&v218[v108];
        ((void (*)(char *, uint64_t, uint64_t))v107)(v218, v231, v97);
        *uint64_t v110 = v104;
        v110[1] = v105;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v111 = v227;
        char v88 = sub_1C23542E8(v227, v99, v100, v109, v104, v105);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C235158C(v231, (uint64_t (*)(void))sub_1C23515EC);
        sub_1C235158C(v230, (uint64_t (*)(void))sub_1C23515EC);
        double v112 = *(void (**)(uint64_t, uint64_t))(v237 + 8);
        v112(v109, v97);
        v112(v111, v97);
        uint64_t v113 = type metadata accessor for HealthRecordsURLParsingResult;
        goto LABEL_68;
      }
      sub_1C235158C((uint64_t)v64, (uint64_t (*)(void))sub_1C23515EC);
      goto LABEL_67;
    case 4u:
      uint64_t v79 = (uint64_t)v239;
      sub_1C22491F0((uint64_t)v239, (uint64_t)v61);
      swift_bridgeObjectRelease();
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_67;
      }
LABEL_11:
      swift_bridgeObjectRelease();
      goto LABEL_26;
    case 5u:
      sub_1C22491F0((uint64_t)v239, (uint64_t)v58);
      uint64_t v115 = *v58;
      uint64_t v114 = v58[1];
      uint64_t v117 = v58[2];
      uint64_t v116 = v58[3];
      uint64_t v119 = v58[4];
      uint64_t v118 = v58[5];
      uint64_t v120 = v58[6];
      uint64_t v121 = v238;
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v79 = (uint64_t)v239;
        goto LABEL_67;
      }
      uint64_t v237 = v120;
      uint64_t v122 = *v121;
      uint64_t v123 = v121[1];
      uint64_t v125 = v121[2];
      uint64_t v124 = v121[3];
      uint64_t v126 = v121;
      uint64_t v127 = v121[4];
      uint64_t v128 = v121[5];
      uint64_t v236 = v127;
      v238 = (void *)v126[6];
      if (v115 == v122 && v114 == v123)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v188 = sub_1C2550870();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v188 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v88 = 0;
          char v133 = type metadata accessor for HealthRecordsURLParsingResult;
          uint64_t v79 = (uint64_t)v239;
          goto LABEL_69;
        }
      }
      if (v117 == v125 && v116 == v124)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v79 = (uint64_t)v239;
      }
      else
      {
        char v193 = sub_1C2550870();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v79 = (uint64_t)v239;
        if ((v193 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_75;
        }
      }
      if (v118)
      {
        uint64_t v194 = (void *)v237;
        if (v128)
        {
          if (v119 == v236 && v118 == v128)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            char v198 = sub_1C2550870();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v198 & 1) == 0)
            {
              char v133 = type metadata accessor for HealthRecordsURLParsingResult;
              char v88 = 0;
              goto LABEL_69;
            }
          }
          goto LABEL_78;
        }
LABEL_75:
        swift_bridgeObjectRelease();
        char v88 = 0;
        uint64_t v113 = type metadata accessor for HealthRecordsURLParsingResult;
        goto LABEL_68;
      }
      uint64_t v194 = (void *)v237;
      if (v128) {
        goto LABEL_75;
      }
LABEL_78:
      BOOL v81 = v194 == v238;
LABEL_79:
      char v88 = v81;
      uint64_t v113 = type metadata accessor for HealthRecordsURLParsingResult;
LABEL_68:
      char v133 = v113;
LABEL_69:
      sub_1C235158C(v79, (uint64_t (*)(void))v133);
      return v88 & 1;
    case 6u:
      uint64_t v79 = (uint64_t)v239;
      sub_1C22491F0((uint64_t)v239, (uint64_t)v55);
      id v243 = *v55;
      sub_1C2206F9C();
      sub_1C21AB51C(0, &qword_1EA2E0D70);
      if (!swift_dynamicCast()) {
        goto LABEL_66;
      }
      uint64_t v129 = v242;
      uint64_t v130 = (uint64_t)v238;
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v131 = v215;
        sub_1C22491F0(v130, (uint64_t)v215);
        id v241 = *v131;
        if (swift_dynamicCast())
        {
          uint64_t v132 = v240;
          sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
          char v88 = sub_1C254FF70();

          char v133 = type metadata accessor for HealthRecordsURLParsingResult;
          uint64_t v134 = v130;
          goto LABEL_90;
        }
      }
      else
      {
      }
LABEL_66:

      goto LABEL_67;
    case 7u:
      uint64_t v79 = (uint64_t)v239;
      uint64_t v135 = v223;
      sub_1C22491F0((uint64_t)v239, (uint64_t)v223);
      uint64_t v137 = *(void *)v135;
      uint64_t v136 = *((void *)v135 + 1);
      sub_1C2249340();
      uint64_t v139 = *(int *)(v138 + 48);
      char v140 = &v135[v139];
      long long v141 = v238;
      if (swift_getEnumCaseMultiPayload() != 7)
      {
        (*(void (**)(char *, uint64_t))(v237 + 8))(&v135[v139], v236);
        swift_bridgeObjectRelease();
        goto LABEL_67;
      }
      uint64_t v143 = *v141;
      uint64_t v142 = v141[1];
      uint64_t v144 = v236;
      unint64_t v145 = *(void (**)(char *, char *, uint64_t))(v237 + 32);
      v145(v232, v140, v236);
      v145(v233, (char *)v141 + v139, v144);
      if (v137 == v143 && v136 == v142)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v146 = v237;
        uint64_t v147 = *(void (**)(char *, char *, uint64_t))(v237 + 16);
        uint64_t v148 = v219;
        v147(v219, v232, v144);
        uint64_t v149 = v220;
        v147(v220, v233, v144);
      }
      else
      {
        char v189 = sub_1C2550870();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v146 = v237;
        uint64_t v190 = *(void (**)(char *, char *, uint64_t))(v237 + 16);
        uint64_t v148 = v219;
        v190(v219, v232, v144);
        uint64_t v149 = v220;
        v190(v220, v233, v144);
        char v88 = 0;
        if ((v189 & 1) == 0) {
          goto LABEL_54;
        }
      }
      char v88 = sub_1C254CB10();
LABEL_54:
      uint64_t v89 = *(void (**)(char *, uint64_t))(v146 + 8);
      v89(v149, v144);
      v89(v148, v144);
      v89(v233, v144);
      uint64_t v90 = v232;
      uint64_t v91 = v144;
LABEL_55:
      v89(v90, v91);
      uint64_t v113 = type metadata accessor for HealthRecordsURLParsingResult;
      goto LABEL_68;
    case 8u:
      char v167 = v222;
      sub_1C22491F0((uint64_t)v239, (uint64_t)v222);
      uint64_t v168 = *v167;
      sub_1C22492B0();
      uint64_t v170 = v169;
      uint64_t v171 = (uint64_t)v167 + *(int *)(v169 + 48);
      id v243 = v168;
      sub_1C2206F9C();
      sub_1C21AB51C(0, &qword_1EA2E0D70);
      if (!swift_dynamicCast()) {
        goto LABEL_57;
      }
      uint64_t v172 = v242;
      uint64_t v173 = (uint64_t)v238;
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        uint64_t v174 = v214;
        sub_1C22491F0(v173, (uint64_t)v214);
        uint64_t v175 = (uint64_t)v174 + *(int *)(v170 + 48);
        id v241 = *v174;
        if (swift_dynamicCast())
        {
          uint64_t v176 = v240;
          uint64_t v177 = v211;
          sub_1C235788C(v171, v211);
          uint64_t v178 = v212;
          sub_1C235788C(v175, v212);
          sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
          char v179 = sub_1C254FF70();
          uint64_t v180 = v213;
          sub_1C21F4914(v177, v213);
          uint64_t v181 = v210;
          sub_1C21F4914(v178, v210);
          if ((v179 & 1) == 0)
          {

            uint64_t v197 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
            sub_1C23541DC(v181, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
            sub_1C23541DC(v180, (unint64_t *)&qword_1EA2DEFF0, v197);
            sub_1C23541DC(v178, (unint64_t *)&qword_1EA2DEFF0, v197);
            sub_1C23541DC(v177, (unint64_t *)&qword_1EA2DEFF0, v197);
            char v88 = 0;
            uint64_t v79 = (uint64_t)v239;
            goto LABEL_89;
          }
          uint64_t v182 = v209;
          uint64_t v183 = v209 + *(int *)(v208 + 48);
          sub_1C21F4914(v180, v209);
          sub_1C21F4914(v181, v183);
          uint64_t v184 = v237;
          uint64_t v185 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v237 + 48);
          if (v185(v182, 1, v236) == 1)
          {

            uint64_t v186 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
            sub_1C23541DC(v181, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
            sub_1C23541DC(v213, (unint64_t *)&qword_1EA2DEFF0, v186);
            sub_1C23541DC(v178, (unint64_t *)&qword_1EA2DEFF0, v186);
            sub_1C23541DC(v177, (unint64_t *)&qword_1EA2DEFF0, v186);
            int v187 = v185(v183, 1, v236);
            uint64_t v79 = (uint64_t)v239;
            if (v187 == 1)
            {
              sub_1C23541DC(v182, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
              char v88 = 1;
LABEL_88:
              uint64_t v173 = (uint64_t)v238;
LABEL_89:

              char v133 = type metadata accessor for HealthRecordsURLParsingResult;
              uint64_t v134 = v173;
LABEL_90:
              sub_1C235158C(v134, (uint64_t (*)(void))type metadata accessor for HealthRecordsURLParsingResult);
              goto LABEL_69;
            }
          }
          else
          {
            uint64_t v199 = (uint64_t)v207;
            sub_1C21F4914(v182, (uint64_t)v207);
            int v200 = v185(v183, 1, v236);
            uint64_t v201 = v199;
            uint64_t v79 = (uint64_t)v239;
            if (v200 != 1)
            {
              v203 = v221;
              uint64_t v204 = v236;
              (*(void (**)(char *, uint64_t, uint64_t))(v184 + 32))(v221, v183, v236);
              sub_1C235790C((unint64_t *)&qword_1EA2DE1E8, MEMORY[0x1E4F27990]);
              char v88 = sub_1C254F420();

              v205 = *(void (**)(char *, uint64_t))(v184 + 8);
              v205(v203, v204);
              v206 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
              sub_1C23541DC(v181, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
              sub_1C23541DC(v213, (unint64_t *)&qword_1EA2DEFF0, v206);
              sub_1C23541DC(v212, (unint64_t *)&qword_1EA2DEFF0, v206);
              sub_1C23541DC(v177, (unint64_t *)&qword_1EA2DEFF0, v206);
              v205(v207, v204);
              sub_1C23541DC(v209, (unint64_t *)&qword_1EA2DEFF0, v206);
              goto LABEL_88;
            }

            v202 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
            sub_1C23541DC(v181, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
            sub_1C23541DC(v213, (unint64_t *)&qword_1EA2DEFF0, v202);
            sub_1C23541DC(v212, (unint64_t *)&qword_1EA2DEFF0, v202);
            sub_1C23541DC(v177, (unint64_t *)&qword_1EA2DEFF0, v202);
            (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v201, v236);
          }
          sub_1C235158C(v182, (uint64_t (*)(void))sub_1C21FE83C);
          char v88 = 0;
          goto LABEL_88;
        }

        uint64_t v196 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
        sub_1C23541DC(v175, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);

        uint64_t v192 = v171;
        char v191 = v196;
      }
      else
      {

LABEL_57:
        char v191 = (void (*)(uint64_t))MEMORY[0x1E4F27990];
        uint64_t v192 = v171;
      }
      sub_1C23541DC(v192, (unint64_t *)&qword_1EA2DEFF0, v191);
      uint64_t v79 = (uint64_t)v239;
      goto LABEL_67;
    case 9u:
      uint64_t v79 = (uint64_t)v239;
      uint64_t v150 = v224;
      sub_1C22491F0((uint64_t)v239, v224);
      uint64_t v151 = (uint64_t)v238;
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v153 = *(void (**)(uint64_t, uint64_t))(v237 + 8);
      if (EnumCaseMultiPayload != 9)
      {
        v153(v150, v236);
        goto LABEL_67;
      }
      uint64_t v154 = v151;
      uint64_t v155 = v236;
      v153(v154, v236);
      v153(v150, v155);
LABEL_26:
      char v88 = 1;
      uint64_t v113 = type metadata accessor for HealthRecordsURLParsingResult;
      goto LABEL_68;
    case 0xAu:
      uint64_t v79 = (uint64_t)v239;
      uint64_t v156 = v225;
      sub_1C22491F0((uint64_t)v239, v225);
      uint64_t v157 = (uint64_t)v238;
      if (swift_getEnumCaseMultiPayload() == 10) {
        goto LABEL_28;
      }
      goto LABEL_30;
    case 0xBu:
      uint64_t v79 = (uint64_t)v239;
      uint64_t v156 = v226;
      sub_1C22491F0((uint64_t)v239, v226);
      uint64_t v157 = (uint64_t)v238;
      if (swift_getEnumCaseMultiPayload() == 11)
      {
LABEL_28:
        uint64_t v158 = v234;
        uint64_t v159 = *(void (**)(char *, uint64_t, uint64_t))(v234 + 32);
        uint64_t v160 = v229;
        uint64_t v161 = v156;
        uint64_t v162 = v235;
        v159(v229, v161, v235);
        uint64_t v163 = v228;
        v159(v228, v157, v162);
        char v88 = MEMORY[0x1C8754D90](v160, v163);
        long long v164 = *(void (**)(char *, uint64_t))(v158 + 8);
        v164(v163, v162);
        v164(v160, v162);
        uint64_t v113 = type metadata accessor for HealthRecordsURLParsingResult;
      }
      else
      {
LABEL_30:
        (*(void (**)(uint64_t, uint64_t))(v234 + 8))(v156, v235);
LABEL_67:
        char v88 = 0;
        uint64_t v113 = (uint64_t (*)())sub_1C2357828;
      }
      goto LABEL_68;
    case 0xCu:
      int v165 = swift_getEnumCaseMultiPayload();
      uint64_t v79 = (uint64_t)v239;
      if (v165 != 12) {
        goto LABEL_67;
      }
      goto LABEL_34;
    case 0xDu:
      int v166 = swift_getEnumCaseMultiPayload();
      uint64_t v79 = (uint64_t)v239;
      if (v166 != 13) {
        goto LABEL_67;
      }
LABEL_34:
      char v133 = type metadata accessor for HealthRecordsURLParsingResult;
      char v88 = 1;
      goto LABEL_69;
    default:
      uint64_t v79 = (uint64_t)v239;
      sub_1C22491F0((uint64_t)v239, (uint64_t)v73);
      unint64_t v80 = (unsigned __int8 *)v238;
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_67;
      }
      BOOL v81 = *v73 == *v80;
      goto LABEL_79;
  }
}

char *initializeBufferWithCopyOfBuffer for HealthRecordsURLParsingResult(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 9u:
        uint64_t v7 = sub_1C254CB40();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 4u:
        uint64_t v10 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v10;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v11 = sub_1C254CB40();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        sub_1C23515EC();
        uint64_t v13 = *(int *)(v12 + 48);
        uint64_t v14 = &a1[v13];
        uint64_t v15 = (char **)((char *)a2 + v13);
        uint64_t v16 = v15[1];
        *(void *)uint64_t v14 = *v15;
        *((void *)v14 + 1) = v16;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v17 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v17;
        uint64_t v18 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v18;
        uint64_t v19 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v19;
        *((void *)a1 + 6) = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v20 = *a2;
        uint64_t v21 = v20;
        *(void *)a1 = v20;
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v22 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v22;
        sub_1C2249340();
        uint64_t v24 = *(int *)(v23 + 48);
        uint64_t v25 = &a1[v24];
        uint64_t v26 = (uint64_t)a2 + v24;
        uint64_t v27 = sub_1C254CB40();
        uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v25, v26, v27);
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        uint64_t v29 = *a2;
        uint64_t v30 = *a2;
        *(void *)a1 = v29;
        sub_1C22492B0();
        uint64_t v32 = *(int *)(v31 + 48);
        uint64_t v33 = &a1[v32];
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_1C254CB40();
        uint64_t v36 = *(void *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
        {
          sub_1C21AB684(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
          memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
      case 0xBu:
        uint64_t v38 = sub_1C254C900();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v38 - 8) + 16))(a1, a2, v38);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void destroy for HealthRecordsURLParsingResult(id *a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 9u:
      goto LABEL_12;
    case 2u:
    case 4u:
      goto LABEL_5;
    case 3u:
      uint64_t v3 = sub_1C254CB40();
      (*(void (**)(id *, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      sub_1C23515EC();
      goto LABEL_5;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      return;
    case 6u:
      id v4 = *a1;

      return;
    case 7u:
      swift_bridgeObjectRelease();
      sub_1C2249340();
      a1 = (id *)((char *)a1 + *(int *)(v5 + 48));
LABEL_12:
      uint64_t v2 = sub_1C254CB40();
      goto LABEL_13;
    case 8u:

      sub_1C22492B0();
      uint64_t v10 = (id *)((char *)a1 + *(int *)(v9 + 48));
      uint64_t v11 = sub_1C254CB40();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
        return;
      }
      uint64_t v6 = *(void (**)(id *, uint64_t))(v12 + 8);
      uint64_t v8 = v10;
      uint64_t v7 = v11;
      goto LABEL_14;
    case 0xAu:
    case 0xBu:
      uint64_t v2 = sub_1C254C900();
LABEL_13:
      uint64_t v6 = *(void (**)(id *, uint64_t))(*(void *)(v2 - 8) + 8);
      uint64_t v7 = v2;
      uint64_t v8 = a1;
LABEL_14:
      v6(v8, v7);
      break;
    default:
      return;
  }
}

uint64_t *initializeWithCopy for HealthRecordsURLParsingResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 9u:
      uint64_t v6 = sub_1C254CB40();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_13;
    case 2u:
    case 4u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 3u:
      uint64_t v8 = sub_1C254CB40();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      sub_1C23515EC();
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v11 = (uint64_t *)((char *)a1 + v10);
      uint64_t v12 = (uint64_t *)((char *)a2 + v10);
      uint64_t v13 = v12[1];
      *uint64_t v11 = *v12;
      v11[1] = v13;
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 5u:
      uint64_t v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      uint64_t v15 = a2[3];
      a1[2] = a2[2];
      a1[3] = v15;
      uint64_t v16 = a2[5];
      a1[4] = a2[4];
      a1[5] = v16;
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_13;
    case 6u:
      uint64_t v17 = (void *)*a2;
      id v18 = v17;
      *a1 = (uint64_t)v17;
      goto LABEL_13;
    case 7u:
      uint64_t v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      sub_1C2249340();
      uint64_t v21 = *(int *)(v20 + 48);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (uint64_t)a2 + v21;
      uint64_t v24 = sub_1C254CB40();
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v22, v23, v24);
      goto LABEL_13;
    case 8u:
      uint64_t v26 = *a2;
      id v27 = (id)*a2;
      *a1 = v26;
      sub_1C22492B0();
      uint64_t v29 = *(int *)(v28 + 48);
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      uint64_t v32 = sub_1C254CB40();
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        sub_1C21AB684(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
        memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      goto LABEL_13;
    case 0xAu:
    case 0xBu:
      uint64_t v35 = sub_1C254C900();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for HealthRecordsURLParsingResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C235158C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for HealthRecordsURLParsingResult);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 9u:
        uint64_t v6 = sub_1C254CB40();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_14;
      case 2u:
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 3u:
        uint64_t v7 = sub_1C254CB40();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        sub_1C23515EC();
        uint64_t v9 = *(int *)(v8 + 48);
        uint64_t v10 = (uint64_t *)((char *)a1 + v9);
        uint64_t v11 = (uint64_t *)((char *)a2 + v9);
        *uint64_t v10 = *v11;
        v10[1] = v11[1];
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_14;
      case 6u:
        uint64_t v12 = (void *)*a2;
        id v13 = v12;
        *a1 = (uint64_t)v12;
        goto LABEL_14;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        sub_1C2249340();
        uint64_t v15 = *(int *)(v14 + 48);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (uint64_t)a2 + v15;
        uint64_t v18 = sub_1C254CB40();
        uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        goto LABEL_14;
      case 8u:
        uint64_t v20 = *a2;
        id v21 = (id)*a2;
        *a1 = v20;
        sub_1C22492B0();
        uint64_t v23 = *(int *)(v22 + 48);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = sub_1C254CB40();
        uint64_t v27 = *(void *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          sub_1C21AB684(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
          memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        goto LABEL_14;
      case 0xAu:
      case 0xBu:
        uint64_t v29 = sub_1C254C900();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for HealthRecordsURLParsingResult(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 9u:
      uint64_t v6 = sub_1C254CB40();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_10;
    case 3u:
      uint64_t v7 = sub_1C254CB40();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      sub_1C23515EC();
      *(_OWORD *)((char *)a1 + *(int *)(v8 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 48));
      goto LABEL_10;
    case 7u:
      *a1 = *a2;
      sub_1C2249340();
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_1C254CB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      goto LABEL_10;
    case 8u:
      *(void *)a1 = *(void *)a2;
      sub_1C22492B0();
      uint64_t v15 = *(int *)(v14 + 48);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_1C254CB40();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        sub_1C21AB684(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      goto LABEL_10;
    case 0xAu:
    case 0xBu:
      uint64_t v21 = sub_1C254C900();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for HealthRecordsURLParsingResult(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C235158C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for HealthRecordsURLParsingResult);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 9u:
        uint64_t v6 = sub_1C254CB40();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_11;
      case 3u:
        uint64_t v7 = sub_1C254CB40();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        sub_1C23515EC();
        *(_OWORD *)((char *)a1 + *(int *)(v8 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 48));
        goto LABEL_11;
      case 7u:
        *a1 = *a2;
        sub_1C2249340();
        uint64_t v10 = *(int *)(v9 + 48);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_1C254CB40();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        goto LABEL_11;
      case 8u:
        *(void *)a1 = *(void *)a2;
        sub_1C22492B0();
        uint64_t v15 = *(int *)(v14 + 48);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_1C254CB40();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          sub_1C21AB684(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
          memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        goto LABEL_11;
      case 0xAu:
      case 0xBu:
        uint64_t v21 = sub_1C254C900();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_1C2357620()
{
  uint64_t v9 = &unk_1C2565730;
  uint64_t v0 = sub_1C254CB40();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(v0 - 8) + 64;
    uint64_t v10 = v2;
    uint64_t v11 = &unk_1C2565748;
    swift_getTupleTypeLayout2();
    uint64_t v12 = &v8;
    uint64_t v13 = &unk_1C2565748;
    uint64_t v14 = &unk_1C2565760;
    uint64_t v15 = &unk_1C2565778;
    swift_getTupleTypeLayout2();
    uint64_t v16 = &v7;
    sub_1C21AB684(319, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v17 = &v6;
      uint64_t v18 = v2;
      uint64_t v4 = sub_1C254C900();
      if (v5 <= 0x3F)
      {
        uint64_t v19 = *(void *)(v4 - 8) + 64;
        uint64_t v20 = v19;
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

uint64_t type metadata accessor for HealthRecordsURLHandler()
{
  return self;
}

uint64_t method lookup function for HealthRecordsURLHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthRecordsURLHandler);
}

uint64_t dispatch thunk of HealthRecordsURLHandler.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of HealthRecordsURLHandler.parse(url:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

void sub_1C2357828()
{
  if (!qword_1EA2E16F0)
  {
    type metadata accessor for HealthRecordsURLParsingResult();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E16F0);
    }
  }
}

uint64_t sub_1C235788C(uint64_t a1, uint64_t a2)
{
  sub_1C21AB684(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C235790C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2357954()
{
  if (!qword_1EA2E16F8)
  {
    sub_1C254CB40();
    sub_1C22A0824();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E16F8);
    }
  }
}

uint64_t sub_1C23579C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HealthRecordsURLParsingResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void static UIButton.Configuration.pinnedLabsConfiguration(pinned:)()
{
  uint64_t v0 = sub_1C254FFE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2550040();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2550080();
  id v8 = objc_msgSend(self, sel_configurationWithScale_, 2);
  uint64_t v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v9, v8);

  id v11 = v10;
  sub_1C2550050();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FB1250], v4);
  sub_1C254FFD0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FB1218], v0);
  sub_1C254FFF0();
  id v12 = objc_msgSend(self, sel_systemYellowColor);
  sub_1C2550030();
}

uint64_t RecordRepresentableTypeClassification<>.isOlder.getter(uint64_t a1, uint64_t a2)
{
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v21 - v12;
  __n128 v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v21 - v16;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 8))(a1, a2, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1C22178C0((uint64_t)v6);
    char v18 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v6, v7);
    sub_1C254CAC0();
    sub_1C254CA20();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
    v19(v13, v7);
    char v18 = sub_1C254CA70();
    v19(v10, v7);
    v19(v17, v7);
  }
  return v18 & 1;
}

uint64_t sub_1C2357EE8(uint64_t a1)
{
  return RecordRepresentableTypeClassification<>.isOlder.getter(a1, (uint64_t)&protocol witness table for HKMedicalRecord);
}

void sub_1C2357EF4()
{
  uint64_t v1 = sub_1C254CCC0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254CAD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UserDomainConceptViewData();
  sub_1C21EA654(v0 + *(int *)(v12 + 36), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1C22178C0((uint64_t)v7);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v13 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_1C254CC80();
    id v14 = objc_allocWithZone(MEMORY[0x1E4F67A98]);
    __n128 v15 = (void *)sub_1C254CC30();
    id v16 = objc_msgSend(v14, sel_initWithCalendar_, v15);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t v17 = (void *)sub_1C254CA50();
    id v18 = (id)HKMostRecentSampleEndDateText();

    if (v18)
    {
      sub_1C254F470();

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    else
    {
      __break(1u);
    }
  }
}

void MeaningfulDateStringRepresentable<>.dateString.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254CCC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21EA6B8();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C254CAD0();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x1F4188790](v11);
  __n128 v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 8))(a1, a2, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1C22178C0((uint64_t)v10);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v16 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
    sub_1C254CC80();
    id v17 = objc_allocWithZone(MEMORY[0x1E4F67A98]);
    id v18 = (void *)sub_1C254CC30();
    id v19 = objc_msgSend(v17, sel_initWithCalendar_, v18);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v20 = (void *)sub_1C254CA50();
    id v21 = (id)HKMostRecentSampleEndDateText();

    if (v21)
    {
      sub_1C254F470();

      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t dispatch thunk of MeaningfulDateRepresentable.meaningfulDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MeaningfulDateStringRepresentable.dateString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RecordRepresentableTypeClassification.isOlder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id AttributedValueUnitStringProvider.attributedValueStringForDisplay.getter(uint64_t a1, uint64_t a2)
{
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  uint64_t v4 = (void *)sub_1C254FE50();
  uint64_t v5 = (void *)sub_1C254FE50();
  id v6 = sub_1C2358C14(v4, v5, a1, a2);

  return v6;
}

id AttributedValueUnitStringProvider.attributedValueStringForDisplay(targetWidth:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  uint64_t v12 = (void *)sub_1C254FE50();
  void v53[3] = *MEMORY[0x1E4FB2998];
  uint64_t v54 = sub_1C254FE50();
  v53[2] = *MEMORY[0x1E4FB2950];
  v53[4] = v11;
  __n128 v13 = (void *)sub_1C254FE50();
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v53[5] = v4;
  if (v14)
  {
    sub_1C254F530();
    __n128 v15 = v12;
    id v16 = v13;
    uint64_t v17 = v4;
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v17;
    __n128 v13 = v16;
    uint64_t v12 = v15;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v20, a1);
    id v21 = v15;
    if (v19) {
      goto LABEL_21;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a1);
  }
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  if (v23) {
    unint64_t v24 = v23;
  }
  else {
    unint64_t v24 = 0xE000000000000000;
  }
  uint64_t v58 = 0;
  MEMORY[0x1F4188790](v22);
  v53[-2] = &v58;
  if ((v24 & 0x1000000000000000) != 0 || !(v24 & 0x2000000000000000 | v26 & 0x1000000000000000))
  {
    sub_1C2550390();
    swift_bridgeObjectRelease();
    if ((v57 & 1) == 0) {
      goto LABEL_20;
    }
    goto LABEL_14;
  }
  v53[1] = v53;
  MEMORY[0x1F4188790](v25);
  v53[-2] = sub_1C235965C;
  v53[-1] = v28;
  if ((v24 & 0x2000000000000000) != 0)
  {
    uint64_t v55 = v27;
    uint64_t v56 = v24 & 0xFFFFFFFFFFFFFFLL;
    BOOL v32 = v27 > 0x20u || ((1 << v27) & 0x100003E01) == 0;
    if (!v32 || (uint64_t v51 = (unsigned __int8 *)_swift_stdlib_strtod_clocale()) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    int v52 = *v51;
    swift_bridgeObjectRelease();
    if (v52) {
      goto LABEL_20;
    }
LABEL_14:
    id v21 = v12;
    goto LABEL_21;
  }
  if ((v27 & 0x1000000000000000) != 0)
  {
    uint64_t v29 = (v24 & 0xFFFFFFFFFFFFFFFLL) + 32;
    uint64_t v30 = v27 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v29 = sub_1C2550440();
  }
  char v31 = sub_1C23595B8(v29, v30, (void (*)(uint64_t *__return_ptr))sub_1C23596CC);
  swift_bridgeObjectRelease();
  if (v31) {
    goto LABEL_14;
  }
LABEL_20:
  id v21 = (void *)v54;
LABEL_21:
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a1);
  id v33 = v21;
  uint64_t v34 = v13;
  id v35 = sub_1C2358C14(v33, v13, a1, a2);
  objc_msgSend(v35, sel_boundingRectWithSize_options_context_, 1, 0, a3, 1.79769313e308);
  CGFloat v37 = v36;
  CGFloat v39 = v38;
  CGFloat v41 = v40;
  CGFloat v43 = v42;
  objc_msgSend(v12, sel_lineHeight);
  double v45 = v44;
  v59.origin.double x = v37;
  v59.origin.double y = v39;
  v59.size.double width = v41;
  v59.size.double height = v43;
  if (CGRectGetHeight(v59) - (v45 + v45) >= 2.22044605e-16)
  {
    uint64_t v47 = (void *)sub_1C254FE50();
    uint64_t v48 = (void *)sub_1C254FE50();
    id v49 = sub_1C2358C14(v47, v48, a1, a2);

    uint64_t v34 = v48;
    id v33 = (id)v54;
    uint64_t v46 = v12;
    uint64_t v12 = v35;
    id v35 = v49;
  }
  else
  {
    uint64_t v46 = (void *)v54;
  }

  return v35;
}

uint64_t AttributedValueUnitStringProvider.showNoValue.getter()
{
  return 0;
}

uint64_t AttributedValueUnitStringProvider.shouldStackUnitUnderValueIfNeeded.getter()
{
  return 0;
}

id sub_1C2358C14(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  if (!v9) {
    goto LABEL_10;
  }
  uint64_t v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v10 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    if ((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4))
    {
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v21 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();
    }
    sub_1C21F0F90();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C255CD90;
    unint64_t v23 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
    *(void *)(inited + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    *(void *)(inited + 40) = a1;
    id v24 = a1;
    id v25 = v23;
    sub_1C2203C38(inited);
    id v26 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v27 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1C21F1054();
    id v28 = (id)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

    goto LABEL_19;
  }
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  if (v11)
  {
    char v57 = a2;
    sub_1C21F0F90();
    uint64_t v12 = swift_initStackObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C255CD90;
    __n128 v13 = (void *)*MEMORY[0x1E4FB06F8];
    *(void *)(v12 + 32) = *MEMORY[0x1E4FB06F8];
    uint64_t v56 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
    *(void *)(v12 + 64) = v56;
    *(void *)(v12 + 40) = a1;
    swift_bridgeObjectRetain();
    id v55 = v13;
    id v14 = a1;
    sub_1C2203C38(v12);
    id v15 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
    id v16 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1C21F1054();
    uint64_t v17 = (void *)sub_1C254F2C0();
    swift_bridgeObjectRelease();
    id v18 = objc_msgSend(v15, sel_initWithString_attributes_, v16, v17);

    if ((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4))
    {
      uint64_t v19 = sub_1C254F580();
      swift_bridgeObjectRelease();
      if (v19 > 5)
      {
        sub_1C2203C38(MEMORY[0x1E4FBC860]);
        id v20 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
LABEL_18:
        CGFloat v41 = (void *)sub_1C254F430();
        double v42 = (void *)sub_1C254F2C0();
        swift_bridgeObjectRelease();
        id v43 = objc_msgSend(v20, sel_initWithString_attributes_, v41, v42);

        objc_msgSend(v18, sel_appendAttributedString_, v43);
        uint64_t v44 = swift_initStackObject();
        *(_OWORD *)(v44 + 16) = xmmword_1C255CDA0;
        *(void *)(v44 + 32) = v55;
        *(void *)(v44 + 40) = v57;
        double v45 = (void *)*MEMORY[0x1E4FB0700];
        *(void *)(v44 + 64) = v56;
        *(void *)(v44 + 72) = v45;
        uint64_t v46 = self;
        id v47 = v55;
        id v48 = v57;
        id v49 = v45;
        id v50 = objc_msgSend(v46, sel_secondaryLabelColor);
        *(void *)(v44 + 104) = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
        *(void *)(v44 + 80) = v50;
        sub_1C2203C38(v44);
        id v51 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        int v52 = (void *)sub_1C254F430();
        swift_bridgeObjectRelease();
        uint64_t v53 = (void *)sub_1C254F2C0();
        swift_bridgeObjectRelease();
        id v28 = objc_msgSend(v51, sel_initWithString_attributes_, v52, v53);

        objc_msgSend(v18, sel_appendAttributedString_, v28);
        goto LABEL_19;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v35 = swift_initStackObject();
    double v36 = (void **)MEMORY[0x1E4FB0710];
    *(_OWORD *)(v35 + 16) = xmmword_1C255CD90;
    CGFloat v37 = *v36;
    *(void *)(v35 + 32) = *v36;
    id v38 = objc_allocWithZone(NSNumber);
    id v39 = v37;
    id v40 = objc_msgSend(v38, sel_initWithDouble_, 2.0);
    *(void *)(v35 + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
    *(void *)(v35 + 40) = v40;
    sub_1C2203C38(v35);
    id v20 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    goto LABEL_18;
  }
  sub_1C21F0F90();
  uint64_t v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = xmmword_1C255CD90;
  uint64_t v30 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(v29 + 32) = *MEMORY[0x1E4FB06F8];
  *(void *)(v29 + 64) = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  *(void *)(v29 + 40) = a1;
  id v31 = a1;
  id v32 = v30;
  sub_1C2203C38(v29);
  id v33 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v34 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1C21F1054();
  id v28 = (id)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v33, sel_initWithString_attributes_, v34, v28);

LABEL_19:
  return v18;
}

uint64_t HKReferenceRangeViewData.valueDisplay.getter()
{
  return sub_1C2359334((SEL *)&selRef_valueString);
}

uint64_t HKReferenceRangeViewData.unitDisplay.getter()
{
  return sub_1C2359334((SEL *)&selRef_unitString);
}

uint64_t sub_1C2359334(SEL *a1)
{
  id v2 = [v1 *a1];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_1C254F470();

  return v4;
}

uint64_t sub_1C2359398(uint64_t a1, uint64_t a2)
{
  return sub_1C23593B0(a1, a2, (SEL *)&selRef_valueString);
}

uint64_t sub_1C23593A4(uint64_t a1, uint64_t a2)
{
  return sub_1C23593B0(a1, a2, (SEL *)&selRef_unitString);
}

uint64_t sub_1C23593B0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_1C254F470();

  return v6;
}

id sub_1C2359414()
{
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E3570);
  uint64_t v0 = (void *)sub_1C254FE50();
  uint64_t v1 = (void *)sub_1C254FE50();
  id v2 = sub_1C21F04A8(v0, v1);

  return v2;
}

id sub_1C2359500(void *a1, void *a2)
{
  return sub_1C21F04A8(a1, a2);
}

unsigned char *sub_1C235954C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_1C23595B8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

void *sub_1C2359618@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X2>, unsigned char *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

unsigned char *sub_1C235965C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_1C23596CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t dispatch thunk of AttributedValueUnitStringProvider.valueDisplay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AttributedValueUnitStringProvider.unitDisplay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AttributedValueUnitStringProvider.showNoValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AttributedValueUnitStringProvider.shouldStackUnitUnderValueIfNeeded.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AttributedValueUnitStringProvider.attributedValueStringForDisplay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AttributedValueUnitStringProvider.attributedValueString(forValueFont:unitFont:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

void sub_1C2359788(long long *a1, void *a2)
{
  unsigned int v3 = (void **)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientView);
  swift_beginAccess();
  BOOL v4 = *v3;
  long long v5 = *a1;
  *(_OWORD *)unsigned int v3 = *a1;
  id v6 = (id)v5;
}

id sub_1C23597F4()
{
  uint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientView);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = *v1;
  return v2;
}

void sub_1C2359848(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientView;
  swift_beginAccess();
  id v6 = *(void **)v5;
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
}

uint64_t (*sub_1C23598A8())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C2359904(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientSubscriber);
  swift_beginAccess();
  *id v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C2359970()
{
  return swift_retain();
}

uint64_t sub_1C23599BC(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientSubscriber);
  swift_beginAccess();
  *id v3 = a1;
  return swift_release();
}

uint64_t (*sub_1C2359A10())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C2359A6C(uint64_t a1, void *a2)
{
  sub_1C21F4424(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientColorProvider;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1C21F44EC(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1C2359ADC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientColorProvider;
  swift_beginAccess();
  return sub_1C21F4424(v3, a1);
}

uint64_t sub_1C2359B30(long long *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientColorProvider;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1C21F44EC(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1C2359B94())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C2359C68()
{
  uint64_t v1 = 16;
  uint64_t v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
  switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category))
  {
    case 1:
      uint64_t v1 = 21;
      goto LABEL_11;
    case 2:
      uint64_t v1 = 20;
      goto LABEL_11;
    case 3:
      uint64_t v1 = 17;
      goto LABEL_11;
    case 4:
      uint64_t v1 = 18;
      goto LABEL_11;
    case 5:
      uint64_t v1 = 22;
      goto LABEL_11;
    case 6:
      uint64_t v1 = 19;
      goto LABEL_11;
    case 7:
      goto LABEL_11;
    case 8:
      uint64_t v1 = -1;
      goto LABEL_11;
    case 9:
      uint64_t v1 = 27;
      goto LABEL_11;
    case 0xA:
      uint64_t v1 = 30;
LABEL_11:
      id v3 = objc_msgSend(self, sel_categoryWithID_, v1);
      if (v3)
      {
        BOOL v4 = v3;
        uint64_t v2 = sub_1C254FBC0();
      }
      else
      {
        uint64_t v2 = 0;
      }
      break;
    default:
      return v2;
  }
  return v2;
}

id sub_1C2359DB0()
{
  swift_getObjectType();
  uint64_t v1 = (objc_class *)type metadata accessor for RecordCategoryViewController();
  v30.receiver = v0;
  v30.super_class = v1;
  objc_msgSendSuper2(&v30, sel_viewDidLoad);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_28;
  }
  id v3 = result;
  id v4 = sub_1C235D7D4();
  objc_msgSend(v3, sel_addSubview_, v4);

  id v5 = sub_1C235D7D4();
  objc_msgSend(v5, sel_hk_alignConstraintsWithViewController_, v0);

  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v6 = result;
  id v28 = self;
  id v7 = objc_msgSend(v28, sel_systemGroupedBackgroundColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  id v8 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v8, sel__setSupportsTwoLineLargeTitles_, 1);

  id v9 = objc_msgSend(v0, sel_navigationItem);
  int v10 = v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category];
  if (v10 == 2) {
    id v11 = objc_msgSend(v0, sel_editButtonItem);
  }
  else {
    id v11 = 0;
  }
  id v12 = sub_1C235E7F8();
  v29[3] = v1;
  v29[0] = v0;
  __n128 v13 = v0;
  id v14 = _sSo15UIBarButtonItemC15HealthRecordsUIE014makeTapToRadarC06target6actionABSgypSg_10ObjectiveC8SelectorVSgtFZ_0((uint64_t)v29, (uint64_t)sel_tapToRadar_);
  sub_1C235FF70((uint64_t)v29, (uint64_t (*)(void))sub_1C224E400);
  v29[0] = MEMORY[0x1E4FBC860];
  if (v11)
  {
    id v15 = v11;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v29[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  if (v12)
  {
    id v16 = v12;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v29[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  if (v14)
  {
    id v17 = v14;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v29[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }

  sub_1C21AB51C(0, &qword_1EA2DE448);
  id v18 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setRightBarButtonItems_, v18);

  if (v10 == 2)
  {
    v29[0] = sub_1C235E204();
    sub_1C2360264(0, (unint64_t *)&qword_1EA2DFE90, (uint64_t (*)(uint64_t))sub_1C22A82E4, MEMORY[0x1E4F1AAE0]);
    sub_1C22A8378();
    uint64_t v19 = sub_1C254ECC0();
    swift_release();
    *(void *)&v13[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsCanceller] = v19;
    swift_release();
  }
  LOBYTE(v29[0]) = v10;
  id v20 = (void *)DisplayCategory.Kind.hkDisplayCategory.getter();
  if (v20)
  {
    id v21 = v20;
    id v22 = objc_msgSend(v20, sel_color);

    if (v22)
    {
      sub_1C2360460((unint64_t *)&unk_1EA2E1730, v23, (void (*)(uint64_t))type metadata accessor for RecordCategoryViewController);
      sub_1C254DD50();
LABEL_26:

      sub_1C235BBC8();
      sub_1C235F020(0, (unint64_t *)&qword_1EA2DE1B0, (uint64_t (*)(uint64_t))sub_1C21FE7D8, MEMORY[0x1E4FBBE00]);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1C255CD90;
      uint64_t v26 = sub_1C254F270();
      uint64_t v27 = sub_1C2360460(&qword_1EA2DE1C8, 255, MEMORY[0x1E4F678F8]);
      *(void *)(v25 + 32) = v26;
      *(void *)(v25 + 40) = v27;
      sub_1C254FB70();
      swift_unknownObjectRelease();
      return (id)swift_bridgeObjectRelease();
    }
  }
  id result = objc_msgSend(v13, sel_view);
  if (result)
  {
    id v24 = result;
    id v21 = objc_msgSend(v28, sel_systemBackgroundColor);
    objc_msgSend(v24, sel_setBackgroundColor_, v21);

    goto LABEL_26;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RecordCategoryViewController()
{
  return self;
}

uint64_t sub_1C235A3F4(char a1)
{
  uint64_t v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for RecordCategoryViewController();
  objc_msgSendSuper2(&v9, sel_viewIsAppearing_, a1 & 1);
  uint64_t v4 = (uint64_t)v2 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientColorProvider;
  swift_beginAccess();
  sub_1C21F4424(v4, (uint64_t)v8);
  __swift_project_boxed_opaque_existential_1Tm(v8, v8[3]);
  id v5 = objc_msgSend(v2, sel_traitCollection);
  sub_1C254D920();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  id v6 = objc_msgSend(v2, sel_traitCollection);
  sub_1C254FCE0();

  return sub_1C254FB80();
}

id sub_1C235A544()
{
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for RecordCategoryViewController();
  objc_msgSendSuper2(&v14, sel_viewWillLayoutSubviews);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentViewController];
  if (!v2) {
    goto LABEL_4;
  }
  id result = objc_msgSend(v2, sel_view);
  if (result)
  {
    uint64_t v4 = result;
    id v5 = sub_1C235D7D4();
    objc_msgSend(v5, sel_bounds);
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;

    objc_msgSend(v4, sel_setFrame_, v7, v9, v11, v13);
LABEL_4:
    sub_1C2360460((unint64_t *)&unk_1EA2E1730, v1, (void (*)(uint64_t))type metadata accessor for RecordCategoryViewController);
    return (id)sub_1C254DD40();
  }
  __break(1u);
  return result;
}

void sub_1C235A7C4(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  id v5 = v4;
  double v10 = *(void **)&v4[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsOnboardingViewController];
  if (v10
    && (sub_1C21AB51C(0, &qword_1EA2DE3F0),
        id v11 = a1,
        id v12 = v10,
        char v13 = sub_1C254FF70(),
        v11,
        v12,
        (v13 & 1) != 0))
  {
    id v14 = objc_msgSend(v5, sel_presentedViewController);

    if (!v14)
    {
      if (a3)
      {
        v20[4] = a3;
        uint64_t v20[5] = a4;
        v20[0] = MEMORY[0x1E4F143A8];
        v20[1] = 1107296256;
        void v20[2] = sub_1C224E544;
        void v20[3] = &block_descriptor_38;
        id v15 = _Block_copy(v20);
        swift_retain();
        swift_release();
      }
      else
      {
        id v15 = 0;
      }
      uint64_t v19 = (objc_class *)type metadata accessor for RecordCategoryViewController();
      v21.receiver = v5;
      v21.super_class = v19;
      objc_msgSendSuper2(&v21, sel_presentViewController_animated_completion_, v11, a2 & 1, v15);
      _Block_release(v15);
    }
  }
  else
  {
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v5;
    *(void *)(v16 + 24) = a1;
    *(unsigned char *)(v16 + 32) = a2 & 1;
    *(void *)(v16 + 40) = a3;
    *(void *)(v16 + 48) = a4;
    id v17 = a1;
    id v18 = v5;
    sub_1C223E0BC(a3);
    sub_1C235B5A0(0, sub_1C235F0D4, v16);
    swift_release();
  }
}

void sub_1C235A9C0(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a4)
  {
    void v10[4] = a4;
    long long v10[5] = a5;
    v10[0] = MEMORY[0x1E4F143A8];
    v10[1] = 1107296256;
    void v10[2] = sub_1C224E544;
    v10[3] = &block_descriptor_102_0;
    double v8 = _Block_copy(v10);
    swift_retain();
    swift_release();
  }
  else
  {
    double v8 = 0;
  }
  double v9 = (objc_class *)type metadata accessor for RecordCategoryViewController();
  v11.receiver = a1;
  v11.super_class = v9;
  objc_msgSendSuper2(&v11, sel_presentViewController_animated_completion_, a2, a3 & 1, v8);
  _Block_release(v8);
}

void sub_1C235AB7C(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v2, sel_traitCollection);
  if (v4)
  {
    id v5 = v4;
    if (a1)
    {
      sub_1C21AB51C(0, &qword_1EBB6FF98);
      id v6 = a1;
      id v7 = v5;
      char v8 = sub_1C254FF70();

      if (v8) {
        return;
      }
    }
    else
    {
    }
  }
  else if (!a1)
  {
    return;
  }
  sub_1C235ACC0(1);
}

void sub_1C235ACC0(char a1)
{
  id v3 = objc_msgSend(v1, sel_traitCollection);
  id v4 = objc_msgSend(v3, sel_horizontalSizeClass);

  if (v4 == (id)2 && v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_shouldShowPinnedLabsTip] == 1)
  {
    if (a1)
    {
      uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer;
      objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer], sel_invalidate);
      id v6 = objc_msgSend(self, sel_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_, v1, sel_showPinnedLabsPopoverIfNeeded, 0, 0, 1.0);
      id v7 = *(void **)&v1[v5];
      *(void *)&v1[v5] = v6;
    }
    else
    {
      sub_1C235B228();
    }
  }
  else
  {
    sub_1C235B5A0(1, 0, 0);
  }
}

uint64_t sub_1C235ADEC()
{
  uint64_t v1 = v0;
  sub_1C235F020(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v4 = (char *)v15 - v3;
  sub_1C235F0EC();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C235E67C();
  double v10 = (void *)sub_1C22A7398();
  swift_release();
  v15[1] = v10;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  v15[0] = (id)sub_1C254FC70();
  uint64_t v11 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  id v12 = (uint64_t (*)(void, void, void, void))MEMORY[0x1E4F1AAE0];
  sub_1C236033C(0, &qword_1EBB6F3E0, MEMORY[0x1E4F1AAE0]);
  sub_1C235F1D8((unint64_t *)&unk_1EBB6F3D0, &qword_1EBB6F3E0, v12);
  sub_1C22611AC();
  sub_1C254EC70();
  sub_1C2258214((uint64_t)v4);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C2360460(&qword_1EA2E1790, 255, (void (*)(uint64_t))sub_1C235F0EC);
  uint64_t v13 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_cancellable) = v13;
  return swift_release();
}

void sub_1C235B0F8(char *a1, uint64_t a2)
{
  char v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  id v4 = (unsigned char *)MEMORY[0x1C875A200](v3);
  if (v4)
  {
    v4[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_shouldShowPinnedLabsTip] = v2;
  }
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x1C875A200](v3);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    sub_1C235ACC0(1);
  }
}

void sub_1C235B184(char a1)
{
  if (a1)
  {
    uint64_t v2 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer;
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer), sel_invalidate);
    id v3 = objc_msgSend(self, sel_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_, v1, sel_showPinnedLabsPopoverIfNeeded, 0, 0, 1.0);
    id v4 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v3;
  }
  else
  {
    sub_1C235B228();
  }
}

void sub_1C235B228()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer], sel_invalidate);
  id v3 = *(void **)&v1[v2];
  *(void *)&v1[v2] = 0;

  id v4 = objc_msgSend(v1, sel_navigationController);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_viewControllers);

    sub_1C21AB51C(0, &qword_1EA2DE3F0);
    unint64_t v7 = sub_1C254F710();

    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (v8)
      {
LABEL_4:
        unint64_t v9 = v8 - 1;
        if (__OFSUB__(v8, 1))
        {
          __break(1u);
        }
        else if ((v7 & 0xC000000000000001) == 0)
        {
          if ((v9 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v9 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v10 = *(id *)(v7 + 8 * v9 + 32);
LABEL_9:
            id v25 = v10;
            swift_bridgeObjectRelease();
            id v4 = v25;
            goto LABEL_12;
          }
          __break(1u);
          return;
        }
        id v10 = (id)MEMORY[0x1C87588E0](v9, v7);
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
    id v4 = 0;
  }
LABEL_12:
  if (v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category] == 2)
  {
    id v26 = v4;
    uint64_t v11 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsOnboardingViewController;
    id v12 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsOnboardingViewController];
    if (v12 && (id v13 = objc_msgSend(v12, sel_presentingViewController)) != 0)
    {
    }
    else
    {
      if (!v26) {
        return;
      }
      sub_1C21AB51C(0, &qword_1EA2DE3F0);
      id v14 = v1;
      id v15 = v26;
      char v16 = sub_1C254FF70();

      if ((v16 & 1) == 0
        || (id v17 = objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile], sel_healthStore), v18 = objc_allocWithZone((Class)type metadata accessor for LabsOnboardingViewController()), v19 = sub_1C241BD60(1, v17), v20 = *(void **)&v1[v11], *(void *)&v1[v11] = v19, v20, (v21 = *(void **)&v1[v11]) == 0))
      {
        id v4 = v15;
        goto LABEL_24;
      }
      id v22 = v21;
      id v26 = objc_msgSend(v22, sel_popoverPresentationController);
      if (v26)
      {
        objc_msgSend(v26, sel_setPermittedArrowDirections_, 15);
        id v23 = v26;
        id v24 = objc_msgSend(v14, sel_editButtonItem);
        objc_msgSend(v23, sel_setBarButtonItem_, v24);
      }
      objc_msgSend(v14, sel_presentViewController_animated_completion_, v22, 1, 0);
    }
    id v4 = v26;
  }
LABEL_24:
}

void sub_1C235B5A0(char a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer;
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer), sel_invalidate);
  unint64_t v9 = *(void **)(v4 + v8);
  *(void *)(v4 + v8) = 0;

  uint64_t v10 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsOnboardingViewController;
  uint64_t v11 = *(void **)(v4 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsOnboardingViewController);
  if (v11)
  {
    id v12 = v11;
    id v13 = objc_msgSend(v12, sel_presentingViewController);

    if (v13)
    {
      if (a2)
      {
        v16[4] = a2;
        v16[5] = a3;
        v16[0] = MEMORY[0x1E4F143A8];
        v16[1] = 1107296256;
        _OWORD v16[2] = sub_1C224E544;
        v16[3] = &block_descriptor_6_2;
        a2 = _Block_copy(v16);
        swift_retain();
        swift_release();
      }
      objc_msgSend(v12, sel_dismissViewControllerAnimated_completion_, a1 & 1, a2);
      _Block_release(a2);

      id v14 = *(void **)(v4 + v10);
      *(void *)(v4 + v10) = 0;

      return;
    }
  }
  if (a2) {
    ((void (*)(void))a2)();
  }
  id v15 = *(void **)(v4 + v10);
  *(void *)(v4 + v10) = 0;
}

void sub_1C235B72C()
{
  char v5 = v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category];
  uint64_t v1 = sub_1C2335944(&v5);
  id v2 = sub_1C235D8D8();
  unint64_t v3 = (unint64_t)objc_msgSend(v2, sel_selectedSegmentIndex);

  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v3 >= *((void *)v1 + 2))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  char v4 = v1[v3 + 32];
  swift_bridgeObjectRelease();
  v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_preferredSegment] = v4;
  if (!objc_msgSend(self, sel_isMainThread))
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (objc_msgSend(v0, sel_isViewLoaded))
  {
    sub_1C235C784(v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding], *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount], v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount + 8]);
    sub_1C235C8B4();
    _s15HealthRecordsUI28RecordCategoryViewControllerC016didDismissSearchG0yySo08UISearchG0CF_0();
  }
}

id sub_1C235B954(char a1, char a2)
{
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for RecordCategoryViewController();
  uint64_t v5 = a1 & 1;
  uint64_t v6 = a2 & 1;
  objc_msgSendSuper2(&v10, sel_setEditing_animated_, v5, v6);
  uint64_t v7 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentViewController;
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentViewController];
  if (v8)
  {
    id result = objc_msgSend(v8, sel_isEditing);
    if (result == v5) {
      return result;
    }
    uint64_t v8 = *(void **)&v2[v7];
  }
  return objc_msgSend(v8, sel_setEditing_animated_, v5, v6);
}

void sub_1C235BA4C()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile];
  unint64_t v3 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category];
  uint64_t v4 = v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category];
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 8];
  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 16];
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 40];
  uint64_t v8 = *((void *)v3 + 6);
  uint64_t v9 = *((void *)v3 + 7);
  objc_super v10 = (void *)*((void *)v3 + 8);
  v16[0] = v4;
  v16[1] = (uint64_t)v6;
  _OWORD v16[2] = v5;
  long long v17 = *(_OWORD *)(v3 + 24);
  uint64_t v18 = v7;
  uint64_t v19 = v8;
  uint64_t v20 = v9;
  objc_super v21 = v10;
  objc_allocWithZone((Class)type metadata accessor for PDFConfigurationViewController());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v10;
  id v12 = v2;
  id v13 = v6;
  id v14 = PDFConfigurationViewController.init(profile:account:category:)(v12, 0, v16);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B70]), sel_initWithRootViewController_, v14);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v15, 1, 0);
}

uint64_t sub_1C235BBC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254FC50();
  uint64_t v62 = *(void *)(v2 - 8);
  uint64_t v63 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v58 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C254FD00();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  uint64_t v56 = v5;
  MEMORY[0x1F4188790](v4);
  int v52 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2360038(0);
  uint64_t v57 = v7;
  uint64_t v60 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v53 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2360080(0, &qword_1EA2E1A38, (uint64_t (*)(uint64_t))sub_1C2360038, sub_1C2360130, MEMORY[0x1E4F1AA50]);
  uint64_t v59 = v9;
  uint64_t v61 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v54 = (char *)v46 - v10;
  sub_1C235F020(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (char *)v46 - v12;
  sub_1C2360168();
  uint64_t v49 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  long long v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2360080(0, &qword_1EA2E1A60, (uint64_t (*)(uint64_t))sub_1C2360168, sub_1C2360428, MEMORY[0x1E4F1AAB0]);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v50 = v18;
  uint64_t v51 = v19;
  MEMORY[0x1F4188790](v18);
  objc_super v21 = (char *)v46 - v20;
  uint64_t v22 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_countProvider);
  swift_retain();
  sub_1C254EA80();
  swift_release();
  id v23 = v64[0];
  uint64_t v24 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_accountStateProvider);
  swift_retain();
  sub_1C254EA80();
  swift_release();
  sub_1C235C62C((uint64_t)v23, v65);
  swift_bridgeObjectRelease();
  v64[0] = *(id *)(v22 + 32);
  uint64_t v65 = *(void *)(v24 + 16);
  id v25 = (uint64_t (*)(void, void, void, void))MEMORY[0x1E4F1ABB0];
  sub_1C2360264(0, (unint64_t *)&qword_1EBB6F400, (uint64_t (*)(uint64_t))sub_1C23602D8, MEMORY[0x1E4F1ABB0]);
  sub_1C236033C(0, (unint64_t *)&qword_1EBB6F410, v25);
  sub_1C23603A0();
  sub_1C235F1D8(&qword_1EA2DE428, (unint64_t *)&qword_1EBB6F410, v25);
  sub_1C254EBF0();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  v64[0] = (id)sub_1C254FC70();
  uint64_t v26 = sub_1C254FC20();
  uint64_t v27 = *(void *)(v26 - 8);
  id v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  uint64_t v48 = v27 + 56;
  v47(v13, 1, 1, v26);
  sub_1C2360428();
  v46[1] = sub_1C22611AC();
  uint64_t v28 = v49;
  sub_1C254EC70();
  sub_1C2258214((uint64_t)v13);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v28);
  uint64_t v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_1C23604A8;
  *(void *)(v30 + 24) = v29;
  sub_1C236051C();
  uint64_t v31 = v50;
  uint64_t v32 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v31);
  *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCanceller) = v32;
  v46[0] = v1;
  swift_release();
  id v33 = objc_msgSend(self, sel_defaultCenter);
  sub_1C254FB30();
  __swift_project_boxed_opaque_existential_1Tm(v64, (uint64_t)v64[3]);
  uint64_t v34 = (void *)sub_1C254CE10();
  uint64_t v35 = v52;
  sub_1C254FD10();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v64);
  v64[0] = (id)sub_1C254FC70();
  double v36 = v47;
  v47(v13, 1, 1, v26);
  sub_1C22ECCC8();
  CGFloat v37 = v53;
  uint64_t v38 = v55;
  sub_1C254EC70();
  sub_1C2258214((uint64_t)v13);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v38);
  id v39 = v58;
  sub_1C254FC40();
  v64[0] = (id)sub_1C254FC70();
  v36(v13, 1, 1, v26);
  sub_1C2360130();
  id v40 = v54;
  uint64_t v41 = v57;
  sub_1C254EC80();
  sub_1C2258214((uint64_t)v13);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v63);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v37, v41);
  swift_allocObject();
  uint64_t v42 = v46[0];
  swift_unknownObjectWeakInit();
  sub_1C23605C0();
  uint64_t v43 = v59;
  uint64_t v44 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v40, v43);
  *(void *)(v42 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_aToZCanceller) = v44;
  return swift_release();
}

void sub_1C235C50C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C875A200](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_1C235C62C(a1, a2 & 1);
  }
}

void sub_1C235C57C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x1C875A200](v2);
  if (v3)
  {
    uint64_t v4 = (unsigned char *)v3;
    if (objc_msgSend(self, sel_isMainThread))
    {
      if (objc_msgSend(v4, sel_isViewLoaded))
      {
        sub_1C235C784(v4[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding], *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount], v4[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount + 8]);
        sub_1C235C8B4();
        _s15HealthRecordsUI28RecordCategoryViewControllerC016didDismissSearchG0yySo08UISearchG0CF_0();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1C235C62C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  long long v5 = *(_OWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 48];
  long long v18 = *(_OWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 32];
  long long v19 = v5;
  uint64_t v20 = *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 64];
  long long v6 = *(_OWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 16];
  long long v16 = *(_OWORD *)&v2[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category];
  long long v17 = v6;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
  sub_1C2201A54((uint64_t)&v16);
  sub_1C24578FC(&v16);
  if ((v9 & 1) == 0)
  {
    sub_1C2201ABC((uint64_t)&v16);
LABEL_6:
    id v13 = &v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding];
    v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding] = a2 & 1;
LABEL_7:
    if (objc_msgSend(self, sel_isMainThread, v16, v17, v18, v19, v20))
    {
      if (objc_msgSend(v3, sel_isViewLoaded))
      {
        sub_1C235C784(*v13, *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount], v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount + 8]);
        sub_1C235C8B4();
        _s15HealthRecordsUI28RecordCategoryViewControllerC016didDismissSearchG0yySo08UISearchG0CF_0();
      }
    }
    else
    {
      __break(1u);
    }
    return;
  }
  uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8 * v8);
  sub_1C2201ABC((uint64_t)&v16);
  uint64_t v11 = &v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount];
  BOOL v12 = (v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount + 8] & 1) != 0
     || *(void *)v11 < 1;
  *(void *)uint64_t v11 = v10;
  v11[8] = 0;
  id v13 = &v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding];
  int v14 = v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding];
  v3[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding] = a2 & 1;
  if (v14 != (a2 & 1) || v12) {
    goto LABEL_7;
  }
}

uint64_t sub_1C235C784(uint64_t result, uint64_t a2, char a3)
{
  if (a3)
  {
    if (result) {
      int v4 = 1;
    }
    else {
      int v4 = -128;
    }
  }
  else if (a2 < 1)
  {
    int v4 = result & 1;
  }
  else
  {
    id result = sub_1C235C834((char *)&v6);
    int v4 = v6 | 0x40;
  }
  unsigned int v5 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_displayMode);
  if (v5 >> 6)
  {
    if (v5 >> 6 != 1)
    {
      if (v4 == 128) {
        return result;
      }
      goto LABEL_17;
    }
    if ((v4 & 0xC0) != 0x40 || ((v5 ^ v4) & 0x3F) != 0) {
LABEL_17:
    }
      *(unsigned char *)(v3 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_displayMode) = v4;
  }
  else if v4 > 0x3Fu || ((v5 ^ v4))
  {
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_1C235C834@<X0>(char *a1@<X8>)
{
  uint64_t result = sub_1C235D57C();
  if ((result & 1) == 0)
  {
    char v5 = *(unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_preferredSegment);
    goto LABEL_8;
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category) != 2)
  {
LABEL_7:
    char v5 = 1;
    goto LABEL_8;
  }
  char v6 = 2;
  int v4 = sub_1C2335944(&v6);
  if (!*((void *)v4 + 2))
  {
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  char v5 = v4[32];
  uint64_t result = swift_bridgeObjectRelease();
LABEL_8:
  *a1 = v5;
  return result;
}

void sub_1C235C8B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254FB20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(self, sel_isMainThread))
  {
    if ((v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_displayMode] & 0xC0) == 0x40)
    {
      BOOL v6 = sub_1C235D57C();
      BOOL v7 = v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category] == 2;
    }
    else
    {
      BOOL v7 = 0;
      BOOL v6 = 1;
    }
    __int16 v8 = *(_WORD *)&v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_modePickerState];
    if (v8 == 2 || (BOOL v11 = (v8 & 1) == 0, v12 = (v8 & 0x100) == 0, v6 == v11) || ((v7 ^ v12) & 1) == 0)
    {
      BOOL v23 = v7;
      uint64_t v24 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_modePickerState;
      id v9 = objc_msgSend(v1, sel_navigationItem);
      BOOL v25 = v6;
      if (v6) {
        id v10 = 0;
      }
      else {
        id v10 = sub_1C235D8D8();
      }
      uint64_t v13 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentPalette;
      int v14 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentPalette];
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F66780], v2);
      id v15 = v14;
      uint64_t v16 = sub_1C254FB10();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      long long v17 = *(void **)&v1[v13];
      *(void *)&v1[v13] = v16;

      id v18 = objc_msgSend(v1, sel_navigationItem);
      id v19 = v18;
      if (v23)
      {
        id v20 = sub_1C235DF08();
        objc_msgSend(v19, sel_setSearchController_, v20);

        id v19 = objc_msgSend(v1, sel_navigationItem);
        objc_msgSend(v19, sel_setHidesSearchBarWhenScrolling_, 0);
        __int16 v21 = 256;
      }
      else
      {
        objc_msgSend(v18, sel_setSearchController_, 0);
        __int16 v21 = 0;
      }

      *(_WORD *)&v1[v24] = v21 | v25;
    }
  }
  else
  {
    __break(1u);
  }
}

void _s15HealthRecordsUI28RecordCategoryViewControllerC016didDismissSearchG0yySo08UISearchG0CF_0()
{
  uint64_t v2 = v1;
  if (!objc_msgSend(self, sel_isMainThread))
  {
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentViewController;
  id v0 = *(id *)&v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentViewController];
  int v4 = v1[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_isSearching];
  id v27 = v0;
  if (v4 == 1)
  {
    id v5 = sub_1C235DD70();
  }
  else
  {
    id v5 = sub_1C235D130();
    if (!v5)
    {
LABEL_8:

      return;
    }
  }
  BOOL v6 = v5;
  if (v0)
  {
    sub_1C21AB51C(0, &qword_1EA2DE3F0);
    id v0 = v27;
    id v27 = v6;
    char v7 = sub_1C254FF70();

    if (v7)
    {

      goto LABEL_8;
    }
    objc_msgSend(v2, sel_setEditing_animated_, 0, 1);
    objc_msgSend(v0, sel_setEditing_animated_, 0, 1);
    objc_msgSend(v0, sel_willMoveToParentViewController_, 0);
    id v8 = objc_msgSend(v0, sel_view);
    if (!v8)
    {
LABEL_28:

      __break(1u);
      return;
    }
    id v9 = v8;
    objc_msgSend(v8, sel_removeFromSuperview);
  }
  else
  {
    objc_msgSend(v2, sel_setEditing_animated_, 0, 1);
  }
  objc_msgSend(v0, sel_removeFromParentViewController);
  id v10 = *(void **)&v2[v3];
  *(void *)&v2[v3] = v6;
  id v11 = v6;

  objc_msgSend(v11, sel_willMoveToParentViewController_, v2);
  id v12 = objc_msgSend(v11, sel_view);
  if (!v12) {
    goto LABEL_26;
  }
  uint64_t v13 = v12;
  objc_msgSend(v12, sel_setPreservesSuperviewLayoutMargins_, 1);

  id v14 = sub_1C235D7D4();
  id v15 = objc_msgSend(v11, sel_view);
  if (!v15)
  {
LABEL_27:

    __break(1u);
    goto LABEL_28;
  }
  uint64_t v16 = v15;
  objc_msgSend(v14, sel_addSubview_, v15);

  objc_msgSend(v2, sel_addChildViewController_, v11);
  objc_msgSend(v11, sel_didMoveToParentViewController_, v2);
  uint64_t v17 = self;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v2;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1C235FF58;
  *(void *)(v19 + 24) = v18;
  id v33 = sub_1C225FF10;
  uint64_t v34 = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23CC224;
  uint64_t v32 = &block_descriptor_99;
  id v20 = _Block_copy(aBlock);
  __int16 v21 = v2;
  swift_retain();
  swift_release();
  objc_msgSend((id)v17, sel_performWithoutAnimation_, v20);
  _Block_release(v20);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v17)
  {
LABEL_25:
    __break(1u);
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  uint64_t v22 = (id *)&v21[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientView];
  swift_beginAccess();
  id v23 = objc_msgSend(*v22, sel_superview);

  if (v23)
  {
    id v30 = v11;
    sub_1C21AB51C(0, &qword_1EA2DE3F0);
    sub_1C21FFE74(0, &qword_1EA2E1A20);
    id v24 = v11;
    if (swift_dynamicCast())
    {
      sub_1C21F44EC(v28, (uint64_t)aBlock);
      BOOL v25 = v32;
      uint64_t v26 = v33;
      __swift_project_boxed_opaque_existential_1Tm(aBlock, (uint64_t)v32);
      (*((void (**)(void *, uint64_t (*)()))v26 + 1))(v25, v26);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)aBlock);
    }
    else
    {
      uint64_t v29 = 0;
      memset(v28, 0, sizeof(v28));

      sub_1C235FF70((uint64_t)v28, (uint64_t (*)(void))sub_1C235FFD0);
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
}

void sub_1C235D090(void *a1)
{
  id v2 = objc_msgSend(a1, sel_view);
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = v2;
  objc_msgSend(v2, sel_setNeedsLayout);

  id v4 = objc_msgSend(a1, sel_view);
  if (!v4)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v5 = v4;
  objc_msgSend(v4, sel_layoutIfNeeded);
}

id sub_1C235D130()
{
  uint64_t v1 = sub_1C254E560();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  id v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v6 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_displayMode);
  if (v6 >> 6)
  {
    if (v6 >> 6 == 1)
    {
      switch(v6 & 0x3F)
      {
        case 1u:
          id result = sub_1C235E544();
          break;
        case 2u:
          id result = sub_1C235E5E4();
          break;
        case 3u:
          if (*(unsigned char *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category) == 2)
          {
            id result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_factory), sel_makeOutOfRangeLabsViewControllerUsingProfile_, *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile), v3);
          }
          else
          {
            sub_1C254E4F0();
            uint64_t v38 = sub_1C254E550();
            os_log_type_t v39 = sub_1C254FA20();
            if (os_log_type_enabled(v38, v39))
            {
              id v40 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v40 = 0;
              _os_log_impl(&dword_1C21A1000, v38, v39, "Invalid category kind for outOfRange segment", v40, 2u);
              MEMORY[0x1C875A0B0](v40, -1, -1);
            }

            (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
            id result = 0;
          }
          break;
        case 4u:
          id result = sub_1C235E2D8();
          break;
        default:
          id result = sub_1C235E3D4();
          break;
      }
    }
    else
    {
      id v24 = (objc_class *)type metadata accessor for NoDataViewController();
      BOOL v25 = objc_allocWithZone(v24);
      *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_accountUpgradeTile] = 0;
      *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_profile] = 0;
      uint64_t v26 = &v25[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_category];
      *(_OWORD *)uint64_t v26 = 0u;
      *((_OWORD *)v26 + 1) = 0u;
      *((_OWORD *)v26 + 2) = 0u;
      *((_OWORD *)v26 + 3) = 0u;
      *((void *)v26 + 8) = 0;
      v25[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_style] = 1;
      v42.receiver = v25;
      v42.super_class = v24;
      return objc_msgSendSuper2(&v42, sel_initWithNibName_bundle_, 0, 0);
    }
  }
  else
  {
    id v8 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile);
    if (v6)
    {
      uint64_t v27 = v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category;
      char v28 = *(unsigned char *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
      id v30 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 8);
      uint64_t v29 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 16);
      uint64_t v31 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 40);
      uint64_t v32 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 48);
      uint64_t v33 = *(void *)(v27 + 56);
      uint64_t v34 = *(void **)(v27 + 64);
      v43[0] = v28;
      uint64_t v44 = v30;
      uint64_t v45 = v29;
      long long v41 = *(_OWORD *)(v27 + 24);
      long long v46 = v41;
      uint64_t v47 = v31;
      uint64_t v48 = v32;
      uint64_t v49 = v33;
      uint64_t v50 = v34;
      objc_allocWithZone((Class)type metadata accessor for PromotionListViewController());
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v35 = v34;
      id v36 = v8;
      id v37 = v30;
      return sub_1C23740DC(v36, v43);
    }
    else
    {
      id v9 = (void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
      *(void *)&long long v41 = *(unsigned __int8 *)(v0
                                           + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
      id v10 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 8);
      uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 16);
      uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 24);
      uint64_t v13 = v9[4];
      uint64_t v14 = v9[5];
      uint64_t v15 = v9[6];
      uint64_t v17 = v9[7];
      uint64_t v16 = (void *)v9[8];
      uint64_t v18 = (objc_class *)type metadata accessor for NoDataViewController();
      uint64_t v19 = objc_allocWithZone(v18);
      *(void *)&v19[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_accountUpgradeTile] = 0;
      *(void *)&v19[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_profile] = v8;
      id v20 = &v19[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_category];
      *id v20 = v41;
      v20[1] = v10;
      void v20[2] = v11;
      void v20[3] = v12;
      v20[4] = v13;
      uint64_t v20[5] = v14;
      void v20[6] = v15;
      v20[7] = v17;
      v20[8] = v16;
      v19[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_style] = 0;
      v51.receiver = v19;
      v51.super_class = v18;
      id v21 = v8;
      id v22 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v23 = v16;
      return objc_msgSendSuper2(&v51, sel_initWithNibName_bundle_, 0, 0);
    }
  }
  return result;
}

BOOL sub_1C235D57C()
{
  uint64_t v1 = sub_1C254E560();
  MEMORY[0x1F4188790](v1);
  sub_1C254FB30();
  __swift_project_boxed_opaque_existential_1Tm(v9, v9[3]);
  uint64_t v2 = (void *)sub_1C254CE10();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
  sub_1C254D110();
  double v3 = (void *)MEMORY[0x1C87555F0]();
  LOBYTE(v9[0]) = *(unsigned char *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
  id v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile), sel_healthStore);
  id v5 = objc_msgSend(v4, sel_profileIdentifier);

  id v6 = static FeedItem.predicateForHealthRecordsData(categoryKind:sourceProfile:)((unsigned __int8 *)v9, v5);
  objc_msgSend(v3, sel_setPredicate_, v6);

  uint64_t v7 = sub_1C254FD70();
  return v7 == 0;
}

id sub_1C235D7D4()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___scrollView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___scrollView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___scrollView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BE0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;

    id v6 = (void *)sub_1C235D7D4();
    objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

    uint64_t v7 = (void *)sub_1C235D7D4();
    objc_msgSend(v7, sel_setShowsVerticalScrollIndicator_, 0);

    id v8 = (void *)sub_1C235D7D4();
    objc_msgSend(v8, sel_setContentInsetAdjustmentBehavior_, 2);

    id v9 = (void *)sub_1C235D7D4();
    objc_msgSend(v9, sel_setPreservesSuperviewLayoutMargins_, 1);

    id v10 = (void *)sub_1C235D7D4();
    uint64_t v11 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v10;
    id v3 = v10;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

id sub_1C235D8D8()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___modePicker;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___modePicker);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___modePicker);
  }
  else
  {
    id v4 = sub_1C235D93C(v0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C235D93C(uint64_t a1)
{
  uint64_t v1 = a1;
  char v2 = *(unsigned char *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
  LOBYTE(v26) = v2;
  id v3 = sub_1C2335944(&v26);
  int64_t v4 = *((void *)v3 + 2);
  if (v4)
  {
    char v24 = v2;
    uint64_t v25 = v1;
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_1C2274814(0, v4, 0);
    uint64_t v5 = 0;
    uint64_t v6 = v28;
    uint64_t v7 = MEMORY[0x1E4FBB1A0];
    do
    {
      switch(v3[v5 + 32])
      {
        case 1:
          if (qword_1EBB6EF40 != -1) {
            goto LABEL_15;
          }
          break;
        case 2:
        case 4:
          if (qword_1EBB6EF40 != -1) {
            goto LABEL_15;
          }
          break;
        case 3:
          if (qword_1EBB6EF40 != -1) {
            goto LABEL_15;
          }
          break;
        default:
          if (qword_1EBB6EF40 != -1) {
LABEL_15:
          }
            swift_once();
          break;
      }
      id v8 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      unint64_t v23 = 0xE000000000000000;
      uint64_t v9 = sub_1C254C730();
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();

      uint64_t v27 = v7;
      uint64_t v28 = v6;
      *(void *)&long long v26 = v9;
      *((void *)&v26 + 1) = v11;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C2274814(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v28;
      }
      ++v5;
      *(void *)(v6 + 16) = v13 + 1;
      sub_1C2206B9C(&v26, (_OWORD *)(v6 + 32 * v13 + 32));
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
    uint64_t v1 = v25;
    char v2 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v14 = objc_allocWithZone(MEMORY[0x1E4FB1C10]);
  uint64_t v15 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v14, sel_initWithItems_, v15);

  LOBYTE(v26) = v2;
  uint64_t v17 = sub_1C2335944(&v26);
  uint64_t v18 = sub_1C252ED90(*(unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_preferredSegment), (uint64_t)v17);
  char v20 = v19;
  swift_bridgeObjectRelease();
  if (v20) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = v18;
  }
  objc_msgSend(v16, sel_setSelectedSegmentIndex_, v21, v23);
  objc_msgSend(v16, sel_addTarget_action_forControlEvents_, v1, sel_modePickerDidChange_, 4096);
  objc_msgSend(v16, sel_sizeToFit);
  return v16;
}

id sub_1C235DD70()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController;
  char v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController);
  }
  else
  {
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 8);
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 16);
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 40);
    uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 48);
    uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 56);
    uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 64);
    v19[0] = *(unsigned char *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
    char v20 = v5;
    uint64_t v21 = v4;
    long long v22 = *(_OWORD *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 24);
    uint64_t v23 = v6;
    uint64_t v24 = v7;
    uint64_t v25 = v8;
    long long v26 = v9;
    uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile);
    id v11 = objc_allocWithZone((Class)type metadata accessor for CategorySearchViewController());
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v12 = v9;
    id v13 = v10;
    id v14 = v5;
    id v15 = sub_1C244DC8C(v19, v13);
    id v16 = *(void **)v1;
    *(void *)uint64_t v1 = v15;
    *(void *)(v1 + 8) = &off_1F1D9ACC0;
    id v3 = v15;

    char v2 = 0;
  }
  id v17 = v2;
  return v3;
}

uint64_t sub_1C235DE8C(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)(v2
                + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController);
  *id v3 = a1;
  v3[1] = a2;
  return MEMORY[0x1F4181820]();
}

void (*sub_1C235DEA4(id *a1))(uint64_t a1)
{
  a1[2] = v1;
  *a1 = sub_1C235DD70();
  a1[1] = v3;
  return sub_1C235DEEC;
}

void sub_1C235DEEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void **)(v1
                + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController);
  *(_OWORD *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController) = *(_OWORD *)a1;
}

id sub_1C235DF08()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1BF8]), sel_init);
    objc_msgSend(v4, sel_setDelegate_, v0);
    objc_msgSend(v4, sel_setSearchResultsUpdater_, v0);
    objc_msgSend(v4, sel_setObscuresBackgroundDuringPresentation_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C235DFB8(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController);
  *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController) = a1;
}

void (*sub_1C235DFCC(id *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = sub_1C235DF08();
  return sub_1C235E014;
}

void sub_1C235E014(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController);
  *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController) = v2;
}

uint64_t sub_1C235E02C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___listManager;
  if (*(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___listManager))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___listManager);
  }
  else
  {
    uint64_t v3 = v0;
    if (qword_1EBB6EF30 != -1) {
      swift_once();
    }
    id v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile), sel_healthStore);
    id v5 = objc_msgSend(v4, sel_profileIdentifier);

    MEMORY[0x1F4188790](v6);
    sub_1C254CEE0();
    sub_1C254E460();
    sub_1C2360460((unint64_t *)&qword_1EBB6F240, 255, MEMORY[0x1E4F66F68]);
    swift_retain();
    sub_1C254E1D0();

    swift_release();
    uint64_t v2 = v8;
    *(void *)(v3 + v1) = v8;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1C235E204()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___viewDataPublisher;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___viewDataPublisher))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___viewDataPublisher);
  }
  else
  {
    uint64_t v3 = sub_1C235E02C();
    sub_1C23B4EE8(v3, objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile), sel_healthStore));
    id v5 = v4;
    uint64_t v7 = v6;
    uint64_t v2 = sub_1C23B10F4(v3, v4, v8, v6);

    swift_release();
    swift_release();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_1C235E2D8()
{
  return sub_1C235E3F4(&OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___udcListViewController, (uint64_t (*)(uint64_t))sub_1C235E2F8);
}

id sub_1C235E2F8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
  uint64_t v3 = sub_1C235E02C();
  id v4 = *(id *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile);
  uint64_t v5 = sub_1C235E204();
  type metadata accessor for LabsCategoryListDataProvider();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 56) = MEMORY[0x1E4FBC870];
  *(unsigned char *)(v6 + 48) = 0;
  *(void *)(v6 + 24) = v4;
  *(void *)(v6 + 16) = objc_msgSend(v4, sel_healthStore);
  *(void *)(v6 + 32) = v3;
  *(void *)(v6 + 40) = v5;
  sub_1C235FE04(0);
  return sub_1C235EEAC(v2, v6, objc_allocWithZone(v7), (uint64_t (*)(void))sub_1C235FE04);
}

void *sub_1C235E3D4()
{
  return sub_1C235E3F4(&OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___latestViewContoller, (uint64_t (*)(uint64_t))sub_1C235E464);
}

void *sub_1C235E3F4(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  uint64_t v5 = v4;
  if (v4 == (void *)1)
  {
    uint64_t v5 = (void *)a2(v2);
    uint64_t v6 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v5;
    id v7 = v5;
    sub_1C22CB0FC(v6);
  }
  sub_1C22CB10C(v4);
  return v5;
}

id sub_1C235E464(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category);
  uint64_t v3 = sub_1C235E02C();
  id v4 = *(id *)(a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile);
  uint64_t v5 = sub_1C235E204();
  type metadata accessor for LabsCategoryListDataProvider();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 56) = MEMORY[0x1E4FBC870];
  *(unsigned char *)(v6 + 48) = 1;
  *(void *)(v6 + 24) = v4;
  *(void *)(v6 + 16) = objc_msgSend(v4, sel_healthStore);
  *(void *)(v6 + 32) = v3;
  *(void *)(v6 + 40) = v5;
  sub_1C235FD98(0);
  return sub_1C235EEAC(v2, v6, objc_allocWithZone(v7), (uint64_t (*)(void))sub_1C235FD98);
}

id sub_1C235E544()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___lastUpdatedViewController;
  char v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___lastUpdatedViewController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___lastUpdatedViewController);
  }
  else
  {
    id v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_factory), sel_makeTimelineViewControllerForCategory_showsInitialSearchBar_usingProfile_filterPredicatesByType_, *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 64), 1, *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile), 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    char v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C235E5E4()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___alphabeticalViewController;
  char v2 = *(void **)(v0
                + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___alphabeticalViewController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___alphabeticalViewController);
  }
  else
  {
    id v4 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_factory), sel_makeAlphabeticalViewControllerForCategory_usingProfile_, *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category + 64), *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile));
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    char v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void *sub_1C235E67C()
{
  uint64_t v1 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___labsOnboardingTileDisplayEvaluator;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___labsOnboardingTileDisplayEvaluator))
  {
    char v2 = *(void **)(v0
                    + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___labsOnboardingTileDisplayEvaluator);
  }
  else
  {
    id v3 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_profile);
    id v4 = objc_msgSend(v3, sel_healthStore);
    type metadata accessor for UserDomainConceptDataProvider();
    uint64_t inited = swift_initStackObject();
    uint64_t v6 = MEMORY[0x1E4FBC868];
    *(void *)(inited + 16) = MEMORY[0x1E4FBC868];
    *(void *)(inited + 24) = v6;
    *(void *)(inited + 32) = v4;
    id v7 = objc_msgSend(v3, sel_healthStore);
    uint64_t v8 = sub_1C235E204();
    swift_setDeallocating();
    swift_retain();
    sub_1C236EFEC(v6, inited);
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRelease();

    type metadata accessor for LabsOnboardingTileDisplayEvaluator();
    char v2 = (void *)swift_allocObject();
    v2[3] = v8;
    v2[4] = 0;
    v2[2] = v7;
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_1C235E7F8()
{
  uint64_t v1 = qword_1F1D8E1B0;
  if (!qword_1F1D8E1B0) {
    return 0;
  }
  char v2 = &byte_1F1D8E1C0;
  while (1)
  {
    int v3 = *v2++;
    if (v3 == v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_category]) {
      break;
    }
    if (!--v1) {
      return 0;
    }
  }
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v6 = type metadata accessor for RecordCategoryViewController();
  v17[3] = v6;
  v17[0] = v0;
  id v7 = v0;
  uint64_t v8 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  if (v6)
  {
    uint64_t v9 = __swift_project_boxed_opaque_existential_1Tm(v17, v6);
    uint64_t v10 = *(void *)(v6 - 8);
    __n128 v11 = MEMORY[0x1F4188790](v9);
    id v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v10 + 16))(v13, v11);
    uint64_t v14 = sub_1C2550860();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v6);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  }
  else
  {
    uint64_t v14 = 0;
  }
  id v15 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  id v4 = objc_msgSend(v15, sel_initWithTitle_style_target_action_, v8, 0, v14, sel_presentPDFViewController, v17[0]);

  swift_unknownObjectRelease();
  return v4;
}

id RecordCategoryViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  if (a2)
  {
    uint64_t v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void RecordCategoryViewController.init(nibName:bundle:)()
{
}

id RecordCategoryViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecordCategoryViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall RecordCategoryViewController.willPresentSearchController(_:)(UISearchController *a1)
{
  objc_msgSend(v1, sel_setEditing_animated_, 0, 1);
}

Swift::Void __swiftcall RecordCategoryViewController.willDismissSearchController(_:)(UISearchController *a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_isSearching) = 0;
}

id sub_1C235EEAC(char a1, uint64_t a2, unsigned char *a3, uint64_t (*a4)(void))
{
  v15[3] = type metadata accessor for LabsCategoryListDataProvider();
  uint64_t v8 = sub_1C2360460(&qword_1EA2E1A00, 255, (void (*)(uint64_t))type metadata accessor for LabsCategoryListDataProvider);
  a3[qword_1EA2DFC80] = 1;
  void v15[4] = v8;
  v15[0] = a2;
  a3[qword_1EA2DFC78] = a1;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB15C0]), sel_init);
  v14.receiver = a3;
  v14.super_class = (Class)a4(0);
  id v10 = objc_msgSendSuper2(&v14, sel_initWithCollectionViewLayout_, v9);

  sub_1C21F4424((uint64_t)v15, (uint64_t)&v13);
  id v11 = v10;
  sub_1C254E0F0();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  return v11;
}

uint64_t sub_1C235EFC8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_traitCollection);
  sub_1C254FCE0();

  return sub_1C254FB80();
}

void sub_1C235F020(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C235F084()
{
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C235F0D4()
{
  sub_1C235A9C0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

void sub_1C235F0EC()
{
  if (!qword_1EA2E1788)
  {
    uint64_t v0 = (uint64_t (*)(void, void, void, void))MEMORY[0x1E4F1AAE0];
    sub_1C236033C(255, &qword_1EBB6F3E0, MEMORY[0x1E4F1AAE0]);
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    sub_1C235F1D8((unint64_t *)&unk_1EBB6F3D0, &qword_1EBB6F3E0, v0);
    sub_1C22611AC();
    unint64_t v1 = sub_1C254E9B0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E1788);
    }
  }
}

uint64_t sub_1C235F1D8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, void, void, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C236033C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C235F21C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C235F254(char *a1)
{
  sub_1C235B0F8(a1, v1);
}

void sub_1C235F25C()
{
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCanceller] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_aToZCanceller] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsCanceller] = 0;
  v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_shouldShowPinnedLabsTip] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_cancellable] = 0;
  v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_requiresOnboarding] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_recordCount];
  *(void *)uint64_t v1 = 0;
  v1[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentViewController] = 0;
  v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_isSearching] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientView];
  sub_1C254D800();
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v4 = MEMORY[0x1E4F66430];
  *uint64_t v2 = v3;
  v2[1] = v4;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientSubscriber] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsTipTimer] = 0;
  *(_WORD *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_modePickerState] = 2;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_currentPalette] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___scrollView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___modePicker] = 0;
  id v5 = &v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController];
  *id v5 = 0;
  v5[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___changeProvider] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___listManager] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___viewDataPublisher] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___udcListViewController] = 1;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___latestViewContoller] = 1;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___lastUpdatedViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___alphabeticalViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_labsOnboardingViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___labsOnboardingTileDisplayEvaluator] = 0;

  sub_1C25505F0();
  __break(1u);
}

void _s15HealthRecordsUI28RecordCategoryViewControllerC19updateSearchResults3forySo08UISearchG0C_tF_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254C4A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = sub_1C235DF08();
  id v7 = objc_msgSend(v6, sel_searchBar);

  id v8 = objc_msgSend(v7, sel_text);
  if (!v8) {
    goto LABEL_11;
  }
  uint64_t v9 = sub_1C254F470();
  uint64_t v11 = v10;

  v21[0] = v9;
  v21[1] = v11;
  sub_1C254C480();
  sub_1C2218914();
  uint64_t v12 = sub_1C2550160();
  unint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }
  if (!v15)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    *(unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_isSearching) = 0;
    goto LABEL_12;
  }
  uint64_t v16 = OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_isSearching;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_isSearching) & 1) == 0)
  {
    if (qword_1EBB6D840 != -1) {
      swift_once();
    }
    sub_1C23CDD28(1, 0);
  }
  id v17 = sub_1C235DD70();
  uint64_t v19 = v18;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v19 + 16))(v12, v14, ObjectType, v19);

  *(unsigned char *)(v1 + v16) = 1;
LABEL_12:
  _s15HealthRecordsUI28RecordCategoryViewControllerC016didDismissSearchG0yySo08UISearchG0CF_0();
}

id sub_1C235F674@<X0>(void *a1@<X0>, long long *a2@<X8>)
{
  uint64_t v3 = (long long *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientView);
  swift_beginAccess();
  long long v4 = *v3;
  *a2 = *v3;
  return (id)v4;
}

uint64_t sub_1C235F6E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientSubscriber);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_1C235F73C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController_gradientColorProvider;
  swift_beginAccess();
  return sub_1C21F4424(v3, a2);
}

id sub_1C235F798@<X0>(void *a1@<X8>)
{
  id result = sub_1C235DD70();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1C235F7C4(long long *a1, void *a2)
{
  id v4 = *(id *)(*a2
             + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController);
  long long v2 = *a1;
  *(_OWORD *)(*a2
            + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___resultViewController) = *a1;
  id v3 = (id)v2;
}

id sub_1C235F818@<X0>(void *a1@<X8>)
{
  id result = sub_1C235DF08();
  *a1 = result;
  return result;
}

void sub_1C235F844(void **a1, void *a2)
{
  long long v2 = *a1;
  id v4 = *(id *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController);
  *(void *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28RecordCategoryViewController____lazy_storage___searchController) = *a1;
  id v3 = v2;
}

uint64_t method lookup function for RecordCategoryViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecordCategoryViewController);
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientView.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientView.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x278))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientView.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x280))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientSubscriber.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x288))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientSubscriber.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x290))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientSubscriber.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x298))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientColorProvider.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2A0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientColorProvider.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of RecordCategoryViewController.gradientColorProvider.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.sidebarSelectionIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2D0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.updatePinnedLabsPopoverVisibility(delayed:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2E0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.setUpPinnedLabsTipVisibilityPublisher()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2E8))();
}

uint64_t dispatch thunk of RecordCategoryViewController.showPinnedLabsPopover(delayed:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2F0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.showPinnedLabsPopoverIfNeeded()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x2F8))();
}

uint64_t dispatch thunk of RecordCategoryViewController.hidePinnedLabsPopoverIfNeeded(animated:completion:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x300))();
}

uint64_t dispatch thunk of RecordCategoryViewController.resultViewController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3D0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.resultViewController.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3D8))();
}

uint64_t dispatch thunk of RecordCategoryViewController.resultViewController.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3E0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.searchController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3E8))();
}

uint64_t dispatch thunk of RecordCategoryViewController.searchController.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3F0))();
}

uint64_t dispatch thunk of RecordCategoryViewController.searchController.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x3F8))();
}

void sub_1C235FD98(uint64_t a1)
{
}

uint64_t sub_1C235FDCC()
{
  return sub_1C2360460(&qword_1EA2E19F8, 255, (void (*)(uint64_t))type metadata accessor for UDCRecentItem);
}

void sub_1C235FE04(uint64_t a1)
{
}

void sub_1C235FE38(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = type metadata accessor for UDCListCollectionViewController();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C235FEA8()
{
  return sub_1C2360460((unint64_t *)&unk_1EA2E1A10, 255, (void (*)(uint64_t))type metadata accessor for UDCAlphabeticalItem);
}

uint64_t sub_1C235FEE0()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C235FF18()
{
  return sub_1C2483D24(*(void *)(v0 + 16));
}

uint64_t sub_1C235FF20()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C235FF58()
{
  sub_1C235D090(*(void **)(v0 + 16));
}

uint64_t sub_1C235FF60()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C235FF70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C235FFD0()
{
  if (!qword_1EA2E1A28)
  {
    sub_1C21FFE74(255, &qword_1EA2E1A20);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E1A28);
    }
  }
}

void sub_1C2360038(uint64_t a1)
{
}

void sub_1C2360080(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    v11[2] = a4();
    v11[3] = sub_1C22611AC();
    unint64_t v9 = a5(a1, v11);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2360130()
{
  return sub_1C2360460(&qword_1EA2E1A40, 255, sub_1C2360038);
}

void sub_1C2360168()
{
  if (!qword_1EA2E1A48)
  {
    unint64_t v0 = (uint64_t (*)(void, void, void, void))MEMORY[0x1E4F1ABB0];
    sub_1C2360264(255, (unint64_t *)&qword_1EBB6F400, (uint64_t (*)(uint64_t))sub_1C23602D8, MEMORY[0x1E4F1ABB0]);
    sub_1C236033C(255, (unint64_t *)&qword_1EBB6F410, v0);
    sub_1C23603A0();
    sub_1C235F1D8(&qword_1EA2DE428, (unint64_t *)&qword_1EBB6F410, v0);
    unint64_t v1 = sub_1C254E8F0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E1A48);
    }
  }
}

void sub_1C2360264(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C23602D8()
{
  if (!qword_1EBB6F478)
  {
    sub_1C220732C();
    unint64_t v0 = sub_1C254F340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F478);
    }
  }
}

void sub_1C236033C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void, void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C23603A0()
{
  unint64_t result = qword_1EA2E1A50;
  if (!qword_1EA2E1A50)
  {
    sub_1C2360264(255, (unint64_t *)&qword_1EBB6F400, (uint64_t (*)(uint64_t))sub_1C23602D8, MEMORY[0x1E4F1ABB0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1A50);
  }
  return result;
}

uint64_t sub_1C2360428()
{
  return sub_1C2360460(&qword_1EA2E1A68, 255, (void (*)(uint64_t))sub_1C2360168);
}

uint64_t sub_1C2360460(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C23604A8(uint64_t a1, char a2)
{
  sub_1C235C50C(a1, a2, v2);
}

uint64_t sub_1C23604B0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C23604E8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

unint64_t sub_1C236051C()
{
  unint64_t result = qword_1EA2E1A70;
  if (!qword_1EA2E1A70)
  {
    sub_1C2360080(255, &qword_1EA2E1A60, (uint64_t (*)(uint64_t))sub_1C2360168, sub_1C2360428, MEMORY[0x1E4F1AAB0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1A70);
  }
  return result;
}

void sub_1C23605B8(uint64_t a1)
{
  sub_1C235C57C(a1, v1);
}

unint64_t sub_1C23605C0()
{
  unint64_t result = qword_1EA2E1A78;
  if (!qword_1EA2E1A78)
  {
    sub_1C2360080(255, &qword_1EA2E1A38, (uint64_t (*)(uint64_t))sub_1C2360038, sub_1C2360130, MEMORY[0x1E4F1AA50]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1A78);
  }
  return result;
}

uint64_t sub_1C2360674(unint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v24 = 0;
    uint64_t v1 = 0;
    unint64_t v2 = 0;
    unint64_t v3 = sub_1C2550520() | 0x8000000000000000;
  }
  else
  {
    uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v1 = ~v4;
    unint64_t v24 = a1 + 64;
    uint64_t v5 = -v4;
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v2 = v6 & *(void *)(a1 + 64);
    unint64_t v3 = a1;
  }
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  int64_t v23 = (unint64_t)(v1 + 64) >> 6;
  if ((v3 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v2)
    {
      uint64_t v10 = (v2 - 1) & v2;
      unint64_t v11 = __clz(__rbit64(v2)) | (v8 << 6);
      uint64_t v12 = v8;
      goto LABEL_29;
    }
    int64_t v15 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (v15 >= v23) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v24 + 8 * v15);
    uint64_t v12 = v8 + 1;
    if (!v16)
    {
      uint64_t v12 = v8 + 2;
      if (v8 + 2 >= v23) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v24 + 8 * v12);
      if (!v16)
      {
        uint64_t v12 = v8 + 3;
        if (v8 + 3 >= v23) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v24 + 8 * v12);
        if (!v16)
        {
          uint64_t v12 = v8 + 4;
          if (v8 + 4 >= v23) {
            goto LABEL_36;
          }
          unint64_t v16 = *(void *)(v24 + 8 * v12);
          if (!v16)
          {
            uint64_t v12 = v8 + 5;
            if (v8 + 5 >= v23) {
              goto LABEL_36;
            }
            unint64_t v16 = *(void *)(v24 + 8 * v12);
            if (!v16)
            {
              uint64_t v17 = v8 + 6;
              while (v23 != v17)
              {
                unint64_t v16 = *(void *)(v24 + 8 * v17++);
                if (v16)
                {
                  uint64_t v12 = v17 - 1;
                  goto LABEL_28;
                }
              }
LABEL_36:
              sub_1C21ABD08();
              return (uint64_t)v9;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_29:
    uint64_t v18 = 8 * v11;
    uint64_t v19 = *(void **)(*(void *)(v3 + 56) + v18);
    id v13 = *(id *)(*(void *)(v3 + 48) + v18);
    id v14 = v19;
    if (!v13) {
      goto LABEL_36;
    }
    while (1)
    {
      uint64_t v20 = sub_1C254F950();

      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1C226D8AC(0, v9[2] + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      unint64_t v22 = v9[2];
      unint64_t v21 = v9[3];
      if (v22 >= v21 >> 1)
      {
        uint64_t result = (uint64_t)sub_1C226D8AC((void *)(v21 > 1), v22 + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      v9[2] = v22 + 1;
      v9[v22 + 4] = v20;
      uint64_t v8 = v12;
      unint64_t v2 = v10;
      if ((v3 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1C25505B0())
      {
        sub_1C21AB51C(0, &qword_1EBB6EF58);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v25;
        swift_unknownObjectRelease();
        sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v14 = v25;
        swift_unknownObjectRelease();
        uint64_t v12 = v8;
        uint64_t v10 = v2;
        if (v25) {
          continue;
        }
      }
      goto LABEL_36;
    }
  }
  __break(1u);
  return result;
}

void sub_1C23609D8(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C2550250();
    sub_1C21AB51C(0, &qword_1EBB6FF78);
    sub_1C21A818C((unint64_t *)&qword_1EBB6FF80, &qword_1EBB6FF78);
    sub_1C254F940();
    uint64_t v1 = v19;
    uint64_t v17 = v20;
    uint64_t v2 = v21;
    int64_t v3 = v22;
    unint64_t v4 = v23;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  int64_t v16 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_1C25502D0()) {
      goto LABEL_36;
    }
    sub_1C21AB51C(0, &qword_1EBB6FF78);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v18;
    swift_unknownObjectRelease();
    int64_t v10 = v3;
    uint64_t v8 = v4;
    if (!v18) {
      goto LABEL_36;
    }
LABEL_26:
    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B3D0]), sel_initWithSampleType_predicate_, v11, 0);

    int64_t v3 = v10;
    unint64_t v4 = v8;
    if (v14)
    {
      MEMORY[0x1C8757C00]();
      if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
      int64_t v3 = v10;
      unint64_t v4 = v8;
    }
  }
  if (v4)
  {
    uint64_t v8 = (v4 - 1) & v4;
    unint64_t v9 = __clz(__rbit64(v4)) | (v3 << 6);
    int64_t v10 = v3;
LABEL_25:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v9);
    if (!v11) {
      goto LABEL_36;
    }
    goto LABEL_26;
  }
  int64_t v10 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v10 >= v16) {
      goto LABEL_36;
    }
    unint64_t v12 = *(void *)(v17 + 8 * v10);
    if (!v12)
    {
      int64_t v13 = v3 + 2;
      if (v3 + 2 >= v16) {
        goto LABEL_36;
      }
      unint64_t v12 = *(void *)(v17 + 8 * v13);
      if (v12) {
        goto LABEL_23;
      }
      int64_t v13 = v3 + 3;
      if (v3 + 3 >= v16) {
        goto LABEL_36;
      }
      unint64_t v12 = *(void *)(v17 + 8 * v13);
      if (v12) {
        goto LABEL_23;
      }
      int64_t v13 = v3 + 4;
      if (v3 + 4 >= v16) {
        goto LABEL_36;
      }
      unint64_t v12 = *(void *)(v17 + 8 * v13);
      if (v12)
      {
LABEL_23:
        int64_t v10 = v13;
      }
      else
      {
        int64_t v10 = v3 + 5;
        if (v3 + 5 >= v16) {
          goto LABEL_36;
        }
        unint64_t v12 = *(void *)(v17 + 8 * v10);
        if (!v12)
        {
          int64_t v15 = v3 + 6;
          while (v16 != v15)
          {
            unint64_t v12 = *(void *)(v17 + 8 * v15++);
            if (v12)
            {
              int64_t v10 = v15 - 1;
              goto LABEL_24;
            }
          }
LABEL_36:
          sub_1C21ABD08();
          return;
        }
      }
    }
LABEL_24:
    uint64_t v8 = (v12 - 1) & v12;
    unint64_t v9 = __clz(__rbit64(v12)) + (v10 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

void *UserDomainConceptDataProvider.__allocating_init(healthStore:)(uint64_t a1)
{
  uint64_t result = (void *)swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC868];
  result[2] = MEMORY[0x1E4FBC868];
  result[3] = v3;
  result[4] = a1;
  return result;
}

uint64_t static RecordAnchorPublisherError.== infix(_:_:)()
{
  return 1;
}

uint64_t RecordAnchorPublisherError.hash(into:)()
{
  return sub_1C25509D0();
}

id sub_1C2360DAC()
{
  id result = objc_msgSend(self, sel_predicateForMedicalRecordWithState_, 0);
  qword_1EA303B90 = (uint64_t)result;
  return result;
}

uint64_t static UserDomainConceptDataProvider.UserDomainConceptDataProviderError.== infix(_:_:)()
{
  return 1;
}

void *UserDomainConceptDataProvider.init(healthStore:)(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC868];
  v1[2] = MEMORY[0x1E4FBC868];
  v1[3] = v2;
  v1[4] = a1;
  return v1;
}

uint64_t UserDomainConceptDataProvider.deinit()
{
  swift_beginAccess();
  swift_retain();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1C236EFEC(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = MEMORY[0x1E4FBC868];
  *(void *)(v0 + 24) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v0 + 16) = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t UserDomainConceptDataProvider.__deallocating_deinit()
{
  swift_beginAccess();
  swift_retain();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1C236EFEC(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = MEMORY[0x1E4FBC868];
  *(void *)(v0 + 24) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v0 + 16) = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2360F8C()
{
  uint64_t v1 = v0;
  sub_1C236F154();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1C236F250;
  *(void *)(v7 + 24) = v1;
  sub_1C21A692C(0, &qword_1EA2E1A88, &qword_1EA2DFC00, &qword_1EA2DF420, 0x1E4F2B630);
  sub_1C236F1D8();
  swift_retain();
  sub_1C254EB10();
  sub_1C21A6D6C(&qword_1EA2E1A98, (void (*)(uint64_t))sub_1C236F154);
  uint64_t v8 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

uint64_t sub_1C2361130@<X0>(uint64_t *a1@<X8>)
{
  sub_1C21A692C(0, &qword_1EA2E1A88, &qword_1EA2DFC00, &qword_1EA2DF420, 0x1E4F2B630);
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_1C254EAF0();
  *a1 = result;
  return result;
}

void sub_1C23611BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = sub_1C236FFFC;
  v8[3] = v6;
  void v8[4] = v7;
  id v9 = objc_allocWithZone(MEMORY[0x1E4F2B670]);
  v14[4] = sub_1C23703C0;
  v14[5] = v8;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  long long v14[2] = sub_1C2364F3C;
  v14[3] = &block_descriptor_163;
  uint64_t v10 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  id v11 = objc_msgSend(v9, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, 0, 0, 0, 0, v10);
  _Block_release(v10);
  swift_release();
  id v12 = v11;
  int64_t v13 = (void *)sub_1C254F430();
  objc_msgSend(v12, sel_setDebugIdentifier_, v13);

  objc_msgSend(*(id *)(a3 + 32), sel_executeQuery_, v12);
  swift_release();
}

void sub_1C236138C(int a1, void *a2, int a3, char a4, id a5, void (*a6)(id, uint64_t), uint64_t a7, uint64_t a8)
{
  if (a5)
  {
    id v10 = a5;
    a6(a5, 1);
  }
  else
  {
    int64_t v13 = (void *)(a8 + 16);
    if (a2)
    {
      swift_beginAccess();
      id v14 = a2;
      MEMORY[0x1C8757C00]();
      if (*(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
      swift_endAccess();
    }
    if (a4)
    {
      swift_beginAccess();
      uint64_t v15 = swift_bridgeObjectRetain();
      a6((id)v15, 0);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1C23614D0(uint64_t a1)
{
  sub_1C236F294(0, &qword_1EBB6DD08, &qword_1EBB6DCD8, (void (*)(uint64_t))sub_1C236F320, &qword_1EBB6DCD0);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v12 - v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = v1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1C236F534;
  *(void *)(v9 + 24) = v8;
  sub_1C236F778(0, &qword_1EBB6DCD8, (void (*)(uint64_t))sub_1C236F320);
  sub_1C236F4E0(&qword_1EBB6DCD0, &qword_1EBB6DCD8, (void (*)(uint64_t))sub_1C236F320);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C254EB10();
  sub_1C236F53C();
  uint64_t v10 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

uint64_t sub_1C236169C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_1C236F778(0, &qword_1EBB6DCD8, (void (*)(uint64_t))sub_1C236F320);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = sub_1C254EAF0();
  *a3 = result;
  return result;
}

void sub_1C2361758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  *(void *)(v9 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v11 = swift_allocObject();
  swift_retain();
  *(void *)(v11 + 16) = sub_1C22054EC(v10);
  if (a3)
  {
    uint64_t v12 = *(void *)(a3 + 16);
    unint64_t v13 = MEMORY[0x1E4FBC860];
    if (v12)
    {
      aBlock[0] = MEMORY[0x1E4FBC860];
      sub_1C2550490();
      id v14 = (uint64_t *)(a3 + 32);
      do
      {
        uint64_t v15 = *v14++;
        objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v15);
        sub_1C2550460();
        sub_1C25504A0();
        sub_1C25504B0();
        sub_1C2550470();
        --v12;
      }
      while (v12);
      unint64_t v13 = aBlock[0];
    }
    uint64_t v16 = sub_1C249292C(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = 0;
  }
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = sub_1C23700C8;
  v17[3] = v8;
  void v17[4] = v16;
  v17[5] = v9;
  v17[6] = v11;
  id v18 = objc_allocWithZone(MEMORY[0x1E4F2B670]);
  aBlock[4] = sub_1C2370348;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2364F3C;
  void aBlock[3] = &block_descriptor_151;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v20 = objc_msgSend(v18, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, 0, 0, 0, 0, v19);
  _Block_release(v19);
  swift_release();
  id v21 = v20;
  int64_t v22 = (void *)sub_1C254F430();
  objc_msgSend(v21, sel_setDebugIdentifier_, v22);

  objc_msgSend(*(id *)(a4 + 32), sel_executeQuery_, v21);
  swift_release();
  swift_release();
}

void sub_1C2361A1C(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16 = sub_1C254CB40();
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    id v20 = a5;
    ((void (*)(void *, void, uint64_t))a6)(a5, 0, 1);

    return;
  }
  unint64_t v80 = v19;
  uint64_t v74 = v17;
  int v72 = a4;
  uint64_t v71 = (void *)(a9 + 16);
  BOOL v81 = (void *)(a10 + 16);
  if (a2)
  {
    self;
    uint64_t v21 = swift_dynamicCastObjCClass();
    if (v21)
    {
      int64_t v22 = (void *)v21;
      if (a8)
      {
        uint64_t v23 = v16;
        uint64_t v24 = a7;
        id v25 = a2;
        id v26 = objc_msgSend(v22, sel_categoryTypes);
        sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
        unint64_t v27 = sub_1C254F710();

        uint64_t v28 = sub_1C249292C(v27);
        swift_bridgeObjectRelease();
        sub_1C23620D4(v28, a8);
        char v30 = v29;
        swift_bridgeObjectRelease();
        if (v30)
        {

          a7 = v24;
        }
        else
        {
          uint64_t v32 = v71;
          swift_beginAccess();
          id v33 = v25;
          MEMORY[0x1C8757C00]();
          a7 = v24;
          if (*(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C254F760();
          }
          sub_1C254F790();
          sub_1C254F730();
          swift_endAccess();
        }
        uint64_t v16 = v23;
      }
      else
      {
        uint64_t v31 = v71;
        swift_beginAccess();
        MEMORY[0x1C8757C00](a2);
        if (*(void *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();
        swift_endAccess();
      }
    }
    self;
    uint64_t v34 = swift_dynamicCastObjCClass();
    if (v34)
    {
      unint64_t v35 = v34;
      id v36 = a2;
      id v37 = objc_msgSend((id)v35, sel_linkCollection);
      if (v37)
      {
        uint64_t v38 = v37;
        id v39 = objc_msgSend(v37, sel_links);

        sub_1C21AB51C(0, &qword_1EA2E1B38);
        unint64_t v40 = sub_1C254F710();

        v70[1] = a7;
        if (v40 >> 62)
        {
LABEL_49:
          swift_bridgeObjectRetain();
          uint64_t v41 = sub_1C2550620();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v42 = (uint64_t)v80;
        if (v41)
        {
          v70[0] = a6;
          id v78 = v36;
          unint64_t v79 = v40 & 0xC000000000000001;
          uint64_t v73 = v74 + 16;
          unint64_t v76 = v40;
          uint64_t v77 = (void (**)(uint64_t, uint64_t))(v74 + 8);
          a6 = 4;
          while (1)
          {
            uint64_t v45 = a6 - 4;
            if (v79)
            {
              id v46 = (id)MEMORY[0x1C87588E0](a6 - 4, v40);
              id v36 = (id)(a6 - 3);
              if (__OFADD__(v45, 1)) {
                goto LABEL_46;
              }
            }
            else
            {
              id v46 = *(id *)(v40 + 8 * a6);
              id v36 = (id)(a6 - 3);
              if (__OFADD__(v45, 1))
              {
LABEL_46:
                __break(1u);
LABEL_47:
                __break(1u);
LABEL_48:
                __break(1u);
                goto LABEL_49;
              }
            }
            unint64_t v40 = v35;
            uint64_t v47 = v16;
            uint64_t v48 = v46;
            id v49 = objc_msgSend(v46, sel_targetUUID, v70[0]);
            sub_1C254CB20();

            uint64_t v50 = v81;
            swift_beginAccess();
            id v75 = v78;
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v52 = v42;
            int v53 = isUniquelyReferenced_nonNull_native;
            uint64_t v82 = (void *)*v50;
            uint64_t v54 = v82;
            *uint64_t v50 = 0x8000000000000000;
            unint64_t v35 = sub_1C24573D8(v52);
            uint64_t v56 = v54[2];
            BOOL v57 = (v55 & 1) == 0;
            uint64_t v58 = v56 + v57;
            if (__OFADD__(v56, v57)) {
              goto LABEL_47;
            }
            char v59 = v55;
            if (v54[3] >= v58)
            {
              if ((v53 & 1) == 0) {
                sub_1C24AF504();
              }
              uint64_t v42 = (uint64_t)v80;
              uint64_t v62 = v82;
              if (v59) {
                goto LABEL_23;
              }
            }
            else
            {
              sub_1C227C700(v58, v53);
              uint64_t v42 = (uint64_t)v80;
              unint64_t v60 = sub_1C24573D8((uint64_t)v80);
              if ((v59 & 1) != (v61 & 1))
              {
                sub_1C2550910();
                __break(1u);
                return;
              }
              unint64_t v35 = v60;
              uint64_t v62 = v82;
              if (v59)
              {
LABEL_23:
                uint64_t v43 = v62[7];
                uint64_t v44 = 8 * v35;

                *(void *)(v43 + v44) = v40;
                unint64_t v35 = v40;
                uint64_t v42 = (uint64_t)v80;
                uint64_t v16 = v47;
                goto LABEL_24;
              }
            }
            v62[(v35 >> 6) + 8] |= 1 << v35;
            uint64_t v16 = v47;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v74 + 16))(v62[6] + *(void *)(v74 + 72) * v35, v42, v47);
            *(void *)(v62[7] + 8 * v35) = v40;
            uint64_t v63 = v62[2];
            BOOL v64 = __OFADD__(v63, 1);
            uint64_t v65 = v63 + 1;
            if (v64) {
              goto LABEL_48;
            }
            unint64_t v35 = v40;
            v62[2] = v65;
LABEL_24:
            *BOOL v81 = v62;
            swift_bridgeObjectRelease();
            (*v77)(v42, v16);
            swift_endAccess();

            ++a6;
            unint64_t v40 = v76;
            if (v36 == (id)v41)
            {

              swift_bridgeObjectRelease();
              a6 = v70[0];
              goto LABEL_43;
            }
          }
        }

        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
  }
LABEL_43:
  if (v72)
  {
    uint64_t v66 = v81;
    swift_beginAccess();
    uint64_t v67 = *v66;
    uint64_t v68 = v71;
    swift_beginAccess();
    uint64_t v69 = *v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    ((void (*)(uint64_t, uint64_t, void))a6)(v67, v69, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1C23620D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (!sub_1C25502A0()) {
      return;
    }
  }
  else if (!*(void *)(a2 + 16))
  {
    return;
  }
  unint64_t v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (!sub_1C25502A0()) {
      return;
    }
  }
  else if (!*(void *)(a1 + 16))
  {
    return;
  }
  if (!v4)
  {
    uint64_t v6 = *(void *)(v2 + 16);
    if (v5) {
      goto LABEL_11;
    }
LABEL_13:
    uint64_t v7 = *(void *)(a1 + 16);
    goto LABEL_14;
  }
  uint64_t v6 = sub_1C25502A0();
  if (!v5) {
    goto LABEL_13;
  }
LABEL_11:
  uint64_t v7 = sub_1C25502A0();
LABEL_14:
  if (v6 >= v7) {
    uint64_t v8 = a1;
  }
  else {
    uint64_t v8 = v2;
  }
  if (v6 < v7) {
    uint64_t v2 = a1;
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C2550250();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
    sub_1C21A818C((unint64_t *)&qword_1EBB6F990, (unint64_t *)&qword_1EBB70030);
    sub_1C254F940();
    uint64_t v8 = v38;
    uint64_t v35 = v39;
    uint64_t v9 = v40;
    uint64_t v10 = v41;
    unint64_t v11 = v42;
  }
  else
  {
    uint64_t v12 = -1 << *(unsigned char *)(v8 + 32);
    uint64_t v35 = v8 + 56;
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v11 = v14 & *(void *)(v8 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
  }
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
  int64_t v34 = (unint64_t)(v9 + 64) >> 6;
  unint64_t v15 = v2 & 0xC000000000000001;
  uint64_t v36 = v2 + 56;
  uint64_t v33 = v8;
  while (1)
  {
    while (1)
    {
      uint64_t v17 = v10;
      if ((v8 & 0x8000000000000000) == 0) {
        break;
      }
      if (!sub_1C25502D0()) {
        goto LABEL_59;
      }
      swift_dynamicCast();
      id v20 = v37;
      if (v15) {
        goto LABEL_26;
      }
LABEL_48:
      if (!*(void *)(v2 + 16)) {
        goto LABEL_55;
      }
      uint64_t v25 = sub_1C254FF60();
      uint64_t v26 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v27 = v25 & ~v26;
      if (((*(void *)(v36 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
        goto LABEL_55;
      }
      id v28 = *(id *)(*(void *)(v2 + 48) + 8 * v27);
      char v29 = sub_1C254FF70();

      if (v29)
      {
LABEL_56:

        swift_bridgeObjectRelease();
LABEL_58:
        sub_1C21ABD08();
        return;
      }
      uint64_t v30 = ~v26;
      while (1)
      {
        unint64_t v27 = (v27 + 1) & v30;
        if (((*(void *)(v36 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
          break;
        }
        id v31 = *(id *)(*(void *)(v2 + 48) + 8 * v27);
        char v32 = sub_1C254FF70();

        if (v32) {
          goto LABEL_56;
        }
      }
LABEL_55:

      uint64_t v8 = v33;
      unint64_t v15 = v2 & 0xC000000000000001;
    }
    if (v11)
    {
      unint64_t v18 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v19 = v18 | (v10 << 6);
      goto LABEL_47;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      return;
    }
    if (v21 >= v34) {
      goto LABEL_59;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v21);
    ++v10;
    if (!v22)
    {
      uint64_t v10 = v17 + 2;
      if (v17 + 2 >= v34) {
        goto LABEL_59;
      }
      unint64_t v22 = *(void *)(v35 + 8 * v10);
      if (!v22)
      {
        uint64_t v10 = v17 + 3;
        if (v17 + 3 >= v34) {
          goto LABEL_59;
        }
        unint64_t v22 = *(void *)(v35 + 8 * v10);
        if (!v22)
        {
          uint64_t v10 = v17 + 4;
          if (v17 + 4 >= v34) {
            goto LABEL_59;
          }
          unint64_t v22 = *(void *)(v35 + 8 * v10);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_46:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_47:
    id v20 = *(void **)(*(void *)(v8 + 48) + 8 * v19);
    id v37 = v20;
    id v24 = v20;
    if (!v15) {
      goto LABEL_48;
    }
LABEL_26:
    char v16 = sub_1C25502E0();

    if (v16)
    {
      swift_bridgeObjectRelease();
      goto LABEL_58;
    }
  }
  uint64_t v23 = v17 + 5;
  while (v34 != v23)
  {
    unint64_t v22 = *(void *)(v35 + 8 * v23++);
    if (v22)
    {
      uint64_t v10 = v23 - 1;
      goto LABEL_46;
    }
  }
LABEL_59:
  swift_bridgeObjectRelease();
  sub_1C21ABD08();
}

uint64_t sub_1C236255C()
{
  uint64_t v1 = v0;
  sub_1C21A6830();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 2;
  *(void *)(v7 + 24) = 0;
  *(unsigned char *)(v7 + 32) = 0;
  *(void *)(v7 + 40) = v1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1C236F5C0;
  *(void *)(v8 + 24) = v7;
  sub_1C21A692C(0, &qword_1EBB6F008, &qword_1EBB6F028, (unint64_t *)&qword_1EBB6EFF0, 0x1E4F2B1B8);
  sub_1C21A68B4();
  swift_retain();
  sub_1C254EB10();
  sub_1C21A6D6C(&qword_1EBB6F010, (void (*)(uint64_t))sub_1C21A6830);
  uint64_t v9 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

uint64_t sub_1C236272C@<X0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(unsigned char *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  sub_1C21A692C(0, &qword_1EBB6F008, &qword_1EBB6F028, (unint64_t *)&qword_1EBB6EFF0, 0x1E4F2B1B8);
  swift_allocObject();
  swift_retain();
  uint64_t result = sub_1C254EAF0();
  *a5 = result;
  return result;
}

void sub_1C23627F4(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  aBlock[0] = MEMORY[0x1E4FBC860];
  swift_retain();
  sub_1C2550490();
  objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a3);
  sub_1C2550460();
  sub_1C25504A0();
  sub_1C25504B0();
  sub_1C2550470();
  uint64_t v13 = self;
  sub_1C249292C(aBlock[0]);
  swift_release();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
  sub_1C21A818C((unint64_t *)&qword_1EBB6F990, (unint64_t *)&qword_1EBB70030);
  uint64_t v14 = (void *)sub_1C254F8E0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_predicateForMedicalUserDomainConceptsWithCategoryTypes_, v14);

  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v12;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1C236FFFC;
  *(void *)(v17 + 24) = v11;
  *(unsigned char *)(v17 + 32) = a5;
  *(void *)(v17 + 40) = v16;
  id v18 = objc_allocWithZone(MEMORY[0x1E4F2B670]);
  aBlock[4] = (unint64_t)sub_1C237023C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (unint64_t)sub_1C2364F3C;
  void aBlock[3] = (unint64_t)&block_descriptor_135;
  unint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  id v20 = objc_msgSend(v18, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, v15, 0, a4, 0, v19);
  _Block_release(v19);
  swift_release();
  id v21 = v20;
  unint64_t v22 = (void *)sub_1C254F430();
  objc_msgSend(v21, sel_setDebugIdentifier_, v22);

  objc_msgSend(*(id *)(a6 + 32), sel_executeQuery_, v21);
  swift_release();
}

void sub_1C2362AF0(int a1, void *a2, int a3, char a4, id a5, void (*a6)(id, uint64_t), int a7, char a8, uint64_t a9)
{
  if (a5)
  {
    id v11 = a5;
    a6(a5, 1);
  }
  else
  {
    if (a2)
    {
      self;
      uint64_t v15 = swift_dynamicCastObjCClass();
      if (v15)
      {
        uint64_t v16 = (void *)v15;
        id v17 = a2;
        if ((a8 & 1) != 0 && objc_msgSend(v16, sel_isLowUtility))
        {
        }
        else
        {
          swift_beginAccess();
          id v18 = v17;
          MEMORY[0x1C8757C00]();
          if (*(void *)((*(void *)(a9 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a9 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                             + 0x18) >> 1)
            sub_1C254F760();
          sub_1C254F790();
          sub_1C254F730();
          swift_endAccess();
        }
      }
    }
    if (a4)
    {
      swift_beginAccess();
      uint64_t v19 = swift_bridgeObjectRetain();
      a6((id)v19, 0);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1C2362C8C(void *a1, void *a2)
{
  sub_1C236F5D4();
  uint64_t v18 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  void v9[4] = v2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1C236F76C;
  *(void *)(v10 + 24) = v9;
  id v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C236F68C(0, &qword_1EA2E1AA8, (unint64_t *)&qword_1EA2E1AB0, MEMORY[0x1E4FBB718]);
  sub_1C236F718(&qword_1EA2E1AB8, &qword_1EA2E1AA8, (unint64_t *)&qword_1EA2E1AB0, v11);
  id v12 = a1;
  id v13 = a2;
  swift_retain();
  sub_1C254EB10();
  sub_1C21A6D6C(&qword_1EA2E1AC0, (void (*)(uint64_t))sub_1C236F5D4);
  uint64_t v14 = v18;
  uint64_t v15 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v14);
  return v15;
}

uint64_t sub_1C2362E94@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  void v8[4] = a3;
  sub_1C236F68C(0, &qword_1EA2E1AA8, (unint64_t *)&qword_1EA2E1AB0, MEMORY[0x1E4FBB718]);
  swift_allocObject();
  id v9 = a2;
  swift_retain();
  id v10 = a1;
  uint64_t result = sub_1C254EAF0();
  *a4 = result;
  return result;
}

void sub_1C2362F60(void (*a1)(unint64_t *), uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E39D0);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v12 = *MEMORY[0x1E4F29A70];
  swift_retain();
  id v13 = objc_msgSend(ObjCClassFromMetadata, sel_diagnosticTestResultTypeForIdentifier_, v12);
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = objc_msgSend(self, sel_predicateForMedicalRecordsAssociatedWithMedicalUserDomainConcept_, a3);
    unint64_t aBlock = MEMORY[0x1E4FBC860];
    id v16 = a4;
    if (v15)
    {
      id v17 = v15;
      MEMORY[0x1C8757C00]();
      if (*(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }
    uint64_t v36 = a5;
    if (a4)
    {
      id v18 = v16;
      MEMORY[0x1C8757C00]();
      if (*(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }

    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
    uint64_t v19 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v35 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v19);

    sub_1C21ACD78(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C255CEB0;
    *(void *)(v20 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B3D0]), sel_initWithSampleType_predicate_, v14, v35);
    sub_1C254F730();
    sub_1C254F470();
    id v21 = objc_allocWithZone(MEMORY[0x1E4F29008]);
    unint64_t v22 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(v21, sel_initWithKey_ascending_, v22, 0);

    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1C255CEB0;
    *(void *)(v24 + 32) = v23;
    sub_1C254F730();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_1C236FFFC;
    *(void *)(v25 + 24) = v10;
    id v26 = objc_allocWithZone(MEMORY[0x1E4F2B440]);
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    id v27 = v23;
    id v28 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
    char v29 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_1C2370170;
    uint64_t v42 = v25;
    unint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v38 = 1107296256;
    uint64_t v39 = sub_1C24E16D0;
    uint64_t v40 = &block_descriptor_120;
    uint64_t v30 = _Block_copy(&aBlock);
    id v31 = objc_msgSend(v26, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v28, 1, v29, v30);

    _Block_release(v30);
    swift_release();
    id v32 = v31;
    uint64_t v33 = (void *)sub_1C254F430();
    objc_msgSend(v32, sel_setDebugIdentifier_, v33);

    objc_msgSend(*(id *)(v36 + 32), sel_executeQuery_, v32);
  }
  else
  {
    swift_release();
    sub_1C2370000();
    int64_t v34 = (void *)swift_allocError();
    unint64_t aBlock = (unint64_t)v34;
    LOBYTE(v38) = 1;
    a1(&aBlock);
  }
}

void sub_1C23634A8(int a1, unint64_t a2, id a3, void (*a4)(id, uint64_t))
{
  if (!a2) {
    goto LABEL_12;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  if (!(a2 >> 62))
  {
    uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    if (a3)
    {
LABEL_13:
      id v14 = a3;
      a4(a3, 1);
      id v13 = a3;
      goto LABEL_10;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  if (!sub_1C2550620()) {
    goto LABEL_17;
  }
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v9 = (id)MEMORY[0x1C87588E0](0, a2);
    goto LABEL_7;
  }
  if (*(void *)(v7 + 16))
  {
    id v9 = *(id *)(a2 + 32);
LABEL_7:
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    self;
    uint64_t v11 = swift_dynamicCastObjCClass();
    if (v11)
    {
      uint64_t v12 = v11;
      id v15 = v10;
      a4((id)v12, 0);

      id v13 = v15;
LABEL_10:

      return;
    }

LABEL_12:
    if (a3) {
      goto LABEL_13;
    }
LABEL_18:
    a4(0, 0);
    return;
  }
  __break(1u);
}

uint64_t sub_1C2363638(void *a1, void *a2)
{
  sub_1C236F294(0, &qword_1EA2E1AC8, &qword_1EA2E1AD0, (void (*)(uint64_t))sub_1C236F7EC, &qword_1EA2E1AE8);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = (char *)&v16 - v8;
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a1;
  v10[3] = a2;
  void v10[4] = v2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1C236F8C0;
  *(void *)(v11 + 24) = v10;
  sub_1C236F778(0, &qword_1EA2E1AD0, (void (*)(uint64_t))sub_1C236F7EC);
  sub_1C236F4E0(&qword_1EA2E1AE8, &qword_1EA2E1AD0, (void (*)(uint64_t))sub_1C236F7EC);
  id v12 = a1;
  id v13 = a2;
  swift_retain();
  sub_1C254EB10();
  sub_1C236F8CC();
  uint64_t v14 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

uint64_t sub_1C236380C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  void v8[4] = a3;
  sub_1C236F778(0, &qword_1EA2E1AD0, (void (*)(uint64_t))sub_1C236F7EC);
  swift_allocObject();
  id v9 = a2;
  swift_retain();
  id v10 = a1;
  uint64_t result = sub_1C254EAF0();
  *a4 = result;
  return result;
}

void sub_1C23638D0(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = self;
  swift_retain();
  id v12 = objc_msgSend(v11, sel_predicateForMedicalRecordsAssociatedWithMedicalUserDomainConcept_, a3);
  aBlock[0] = MEMORY[0x1E4FBC860];
  id v13 = a4;
  if (v12)
  {
    id v14 = v12;
    MEMORY[0x1C8757C00]();
    if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  if (a4)
  {
    id v15 = v13;
    MEMORY[0x1C8757C00]();
    if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }

  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  uint64_t v16 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v16);

  id v18 = objc_msgSend(self, sel_medicalRecordTypesWithOptions_, 0);
  sub_1C21AB51C(0, &qword_1EBB6FF78);
  unint64_t v19 = sub_1C254F710();

  id v20 = v17;
  unint64_t v21 = sub_1C236EE60(v19, (uint64_t)v20);
  swift_bridgeObjectRelease();

  sub_1C24928FC(v21);
  swift_bridgeObjectRelease();
  unint64_t v22 = (void *)swift_allocObject();
  v22[2] = sub_1C23700C8;
  v22[3] = v10;
  v22[4] = a3;
  id v23 = objc_allocWithZone(MEMORY[0x1E4F2B428]);
  sub_1C21AB51C(0, &qword_1EBB6EF58);
  sub_1C21A818C((unint64_t *)&qword_1EBB6EFD8, &qword_1EBB6EF58);
  id v24 = a3;
  uint64_t v25 = (void *)sub_1C254F8E0();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1C237010C;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2300950;
  void aBlock[3] = &block_descriptor_108;
  id v26 = _Block_copy(aBlock);
  id v27 = objc_msgSend(v23, sel_initWithQueryDescriptors_resultsHandler_, v25, v26);

  _Block_release(v26);
  swift_release();
  id v28 = v27;
  char v29 = (void *)sub_1C254F430();
  objc_msgSend(v28, sel_setDebugIdentifier_, v29);

  objc_msgSend(*(id *)(a5 + 32), sel_executeQuery_, v28);
}

void sub_1C2363CD0(int a1, unint64_t a2, id a3, void (*a4)(id, unint64_t, uint64_t), uint64_t a5, void *a6)
{
  if (a3)
  {
    id v8 = a3;
    a4(a3, 0, 1);

    return;
  }
  if (!a2)
  {
    uint64_t v16 = 0;
LABEL_14:
    a4(v16, a2, 0);
    return;
  }
  uint64_t v10 = sub_1C2360674(a2);
  uint64_t v11 = *(void *)(v10 + 16);
  if (!v11)
  {
    unint64_t v12 = 0;
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v16 = a6;
    a2 = v12;
    goto LABEL_14;
  }
  unint64_t v12 = 0;
  id v13 = (uint64_t *)(v10 + 32);
  while (1)
  {
    uint64_t v14 = *v13++;
    BOOL v15 = __OFADD__(v12, v14);
    v12 += v14;
    if (v15) {
      break;
    }
    if (!--v11) {
      goto LABEL_13;
    }
  }
  __break(1u);
}

uint64_t sub_1C2363DB4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  sub_1C21ACF78();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a2;
  v11[3] = a1;
  void v11[4] = v3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1C236F954;
  *(void *)(v12 + 24) = v11;
  id v13 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C21A6DF8(0, &qword_1EBB6DCF8, MEMORY[0x1E4F1AC28]);
  sub_1C21A6DB4(&qword_1EBB6DCF0, &qword_1EBB6DCF8, v13);
  id v14 = a2;
  id v15 = a1;
  swift_retain();
  sub_1C254EB10();
  sub_1C21A6D6C(&qword_1EBB6DD20, (void (*)(uint64_t))sub_1C21ACF78);
  uint64_t v16 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v16;
}

uint64_t sub_1C2363FB8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  void v8[4] = a3;
  sub_1C21A6DF8(0, &qword_1EBB6DCF8, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  id v9 = a1;
  id v10 = a2;
  swift_retain();
  uint64_t result = sub_1C254EAF0();
  *a4 = result;
  return result;
}

void sub_1C236407C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  if (a3)
  {
    sub_1C21ACD78(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C255CEB0;
    id v12 = objc_allocWithZone(MEMORY[0x1E4F2B3D0]);
    swift_retain();
    id v13 = a3;
    *(void *)(v11 + 32) = objc_msgSend(v12, sel_initWithSampleType_predicate_, v13, a4);
    sub_1C254F730();
    unint64_t v14 = v11;
  }
  else
  {
    id v15 = self;
    swift_retain();
    id v16 = objc_msgSend(v15, sel_medicalRecordTypesWithOptions_, 0);
    sub_1C21AB51C(0, &qword_1EBB6FF78);
    unint64_t v17 = sub_1C254F710();

    id v18 = a4;
    unint64_t v14 = sub_1C236EE60(v17, (uint64_t)v18);
    swift_bridgeObjectRelease();
  }
  sub_1C24928FC(v14);
  swift_bridgeObjectRelease();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1C237006C;
  *(void *)(v19 + 24) = v10;
  id v20 = objc_allocWithZone(MEMORY[0x1E4F2B428]);
  sub_1C21AB51C(0, &qword_1EBB6EF58);
  sub_1C21A818C((unint64_t *)&qword_1EBB6EFD8, &qword_1EBB6EF58);
  unint64_t v21 = (void *)sub_1C254F8E0();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1C23700B0;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2300950;
  void aBlock[3] = &block_descriptor_96_0;
  unint64_t v22 = _Block_copy(aBlock);
  id v23 = objc_msgSend(v20, sel_initWithQueryDescriptors_resultsHandler_, v21, v22);

  _Block_release(v22);
  swift_release();
  id v24 = v23;
  uint64_t v25 = (void *)sub_1C254F430();
  objc_msgSend(v24, sel_setDebugIdentifier_, v25);

  objc_msgSend(*(id *)(a5 + 32), sel_executeQuery_, v24);
}

void sub_1C23643AC(int a1, unint64_t a2, id a3, void (*a4)(id, uint64_t))
{
  if (a3)
  {
    id v6 = a3;
    a4(a3, 256);

    return;
  }
  if (!a2)
  {
    id v13 = 0;
    uint64_t v14 = 1;
LABEL_14:
    a4(v13, v14);
    return;
  }
  uint64_t v7 = sub_1C2360674(a2);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
    id v9 = 0;
LABEL_13:
    swift_bridgeObjectRelease();
    id v13 = v9;
    uint64_t v14 = 0;
    goto LABEL_14;
  }
  id v9 = 0;
  uint64_t v10 = (uint64_t *)(v7 + 32);
  while (1)
  {
    uint64_t v11 = *v10++;
    BOOL v12 = __OFADD__(v9, v11);
    v9 += v11;
    if (v12) {
      break;
    }
    if (!--v8) {
      goto LABEL_13;
    }
  }
  __break(1u);
}

uint64_t sub_1C2364488@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*(unsigned char *)(result + 8) & 1) == 0 && *(void *)result > 0;
  return result;
}

uint64_t sub_1C23644AC(void *a1, uint64_t a2, char a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  sub_1C236F964();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(unsigned char *)(v16 + 24) = a4;
  *(unsigned char *)(v16 + 25) = a3;
  *(void *)(v16 + 32) = a2;
  *(void *)(v16 + 40) = v5;
  *(void *)(v16 + 48) = v10;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1C236FA20;
  *(void *)(v17 + 24) = v16;
  id v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C236F68C(0, &qword_1EA2E1B00, &qword_1EA2E1B08, MEMORY[0x1E4FBB320]);
  sub_1C236F718(&qword_1EA2E1B10, &qword_1EA2E1B00, &qword_1EA2E1B08, v18);
  id v19 = a1;
  swift_retain();
  sub_1C254EB10();
  sub_1C21A6D6C(&qword_1EA2E1B18, (void (*)(uint64_t))sub_1C236F964);
  uint64_t v20 = sub_1C254EBC0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v20;
}

uint64_t sub_1C23646E4@<X0>(void *a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(unsigned char *)(v14 + 24) = a2;
  *(unsigned char *)(v14 + 25) = a3;
  *(void *)(v14 + 32) = a4;
  *(void *)(v14 + 40) = a5;
  *(void *)(v14 + 48) = a6;
  sub_1C236F68C(0, &qword_1EA2E1B00, &qword_1EA2E1B08, MEMORY[0x1E4FBB320]);
  swift_allocObject();
  id v15 = a1;
  swift_retain();
  uint64_t result = sub_1C254EAF0();
  *a7 = result;
  return result;
}

void sub_1C23647C8(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E39D0);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v16 = *MEMORY[0x1E4F29A70];
  swift_retain();
  id v17 = objc_msgSend(ObjCClassFromMetadata, sel_diagnosticTestResultTypeForIdentifier_, v16);
  if (v17)
  {
    id v18 = v17;
    id v19 = self;
    id v20 = objc_msgSend(v19, sel_predicateForMedicalRecordsAssociatedWithMedicalUserDomainConcept_, a3);
    id v21 = objc_msgSend(v19, sel_predicateForDiagnosticTestResultCategory_, *MEMORY[0x1E4F29A40]);
    sub_1C21ACD78(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1C255CD70;
    *(void *)(v22 + 32) = v20;
    *(void *)(v22 + 40) = v21;
    uint64_t aBlock = v22;
    sub_1C254F730();
    uint64_t v55 = aBlock;
    uint64_t v48 = a7;
    id v46 = v21;
    uint64_t v47 = v20;
    if (a4)
    {
      uint64_t v23 = qword_1EA2DD700;
      id v24 = v20;
      id v25 = v21;
      if (v23 != -1) {
        swift_once();
      }
      id v26 = (id)qword_1EA303B90;
      MEMORY[0x1C8757C00]();
      if (*(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }
    else
    {
      id v28 = v20;
      id v29 = v21;
    }
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
    uint64_t v30 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v30);

    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1C255CEB0;
    *(void *)(v32 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B3D0]), sel_initWithSampleType_predicate_, v18, v31);
    sub_1C254F730();
    sub_1C254F470();
    id v33 = objc_allocWithZone(MEMORY[0x1E4F29008]);
    int64_t v34 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    id v35 = objc_msgSend(v33, sel_initWithKey_ascending_, v34, a5 & 1);

    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C255CEB0;
    *(void *)(v36 + 32) = v35;
    sub_1C254F730();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_1C236FFFC;
    *(void *)(v37 + 24) = v14;
    id v38 = objc_allocWithZone(MEMORY[0x1E4F2B440]);
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    id v39 = v35;
    uint64_t v40 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
    uint64_t v41 = (void *)sub_1C254F700();
    swift_bridgeObjectRelease();
    int v53 = sub_1C2370054;
    uint64_t v54 = v37;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v50 = 1107296256;
    objc_super v51 = sub_1C24E16D0;
    uint64_t v52 = &block_descriptor_84;
    uint64_t v42 = _Block_copy(&aBlock);
    id v43 = objc_msgSend(v38, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v40, a6, v41, v42);

    _Block_release(v42);
    swift_release();
    id v44 = v43;
    uint64_t v45 = (void *)sub_1C254F430();
    objc_msgSend(v44, sel_setDebugIdentifier_, v45);

    objc_msgSend(*(id *)(v48 + 32), sel_executeQuery_, v44);
  }
  else
  {
    swift_release();
    sub_1C2370000();
    id v27 = (void *)swift_allocError();
    uint64_t aBlock = (uint64_t)v27;
    LOBYTE(v50) = 1;
    a1(&aBlock);
  }
}

void sub_1C2364D5C(int a1, unint64_t a2, id a3, void (*a4)(uint64_t, uint64_t))
{
  if (a2 && (uint64_t v6 = sub_1C21EF870(a2)) != 0)
  {
    a4(v6, 0);
    swift_bridgeObjectRelease();
  }
  else if (a3)
  {
    id v7 = a3;
    a4((uint64_t)a3, 1);
  }
  else
  {
    a4(MEMORY[0x1E4FBC860], 0);
  }
}

uint64_t sub_1C2364E24(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v9 = a3;
  uint64_t v11 = *(void (**)(id, uint64_t, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    sub_1C21AB51C(0, &qword_1EBB6F988);
    uint64_t v9 = sub_1C254F710();
  }
  if (a4)
  {
    sub_1C21AB51C(0, &qword_1EBB6DD80);
    a4 = sub_1C254F710();
  }
  swift_retain();
  id v12 = a2;
  id v13 = a5;
  id v14 = a6;
  v11(v12, v9, a4, a5, a6);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C2364F3C(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v11 = *(void (**)(id, void *, void *, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v15 = a2;
  id v12 = a3;
  id v13 = a4;
  id v14 = a6;
  v11(v15, a3, a4, a5, a6);
  swift_release();
}

void sub_1C2365008(uint64_t a1, char a2, double a3)
{
}

uint64_t sub_1C2365048(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C21A6470(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C24AD7C8();
      goto LABEL_7;
    }
    sub_1C2279588(v15, a4 & 1);
    unint64_t v21 = sub_1C21A6470(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      id v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1C2550910();
    __break(1u);
    return result;
  }
LABEL_7:
  id v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 72 * v12;
    return sub_1C236FE74(a1, v19);
  }
LABEL_13:
  sub_1C24F6CE4(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

void sub_1C2365194(uint64_t a1, char a2, double a3)
{
}

void sub_1C23651D4(uint64_t a1, char a2, void (*a3)(void), void (*a4)(void), void (*a5)(unint64_t, uint64_t, uint64_t, __n128), double a6)
{
  uint64_t v9 = v6;
  uint64_t v13 = *v6;
  unint64_t v15 = sub_1C2457390(a6);
  uint64_t v17 = *(void *)(v13 + 16);
  BOOL v18 = (v14 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v14;
  uint64_t v21 = *(void *)(v13 + 24);
  if (v21 >= v19 && (a2 & 1) != 0)
  {
LABEL_7:
    uint64_t v22 = *v9;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = *(void *)(v22 + 56);

      *(void *)(v23 + 8 * v15) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a2 & 1) == 0)
  {
    a3();
    goto LABEL_7;
  }
  a4();
  unint64_t v24 = sub_1C2457390(a6);
  if ((v20 & 1) != (v25 & 1))
  {
LABEL_15:
    sub_1C2550910();
    __break(1u);
    return;
  }
  unint64_t v15 = v24;
  uint64_t v22 = *v9;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v16.n128_f64[0] = a6;
  a5(v15, a1, v22, v16);
}

id sub_1C236532C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char a6)
{
  id v7 = (void **)v6;
  uint64_t v13 = (void *)*v6;
  unint64_t v15 = sub_1C24574AC(a2, a3, a4, a5);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a6 & 1) != 0)
  {
LABEL_7:
    uint64_t v21 = *v7;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7];
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(v22 + 8 * v15) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a6 & 1) == 0)
  {
    sub_1C24ADBA8();
    goto LABEL_7;
  }
  sub_1C2279BCC(v18, a6 & 1);
  unint64_t v24 = sub_1C24574AC(a2, a3, a4, a5);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_15:
    id result = (id)sub_1C2550910();
    __break(1u);
    return result;
  }
  unint64_t v15 = v24;
  uint64_t v21 = *v7;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C24F6D90(v15, a2, a3, (uint64_t)a4, (uint64_t)a5, a1, v21);
  id v26 = a5;
  swift_bridgeObjectRetain();
  return a4;
}

uint64_t sub_1C23654B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C21A6470(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C24ADDC0();
    goto LABEL_7;
  }
  sub_1C2279DE8(v15, a4 & 1);
  unint64_t v21 = sub_1C21A6470(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C2550910();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C24F6DDC(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C23655F0(long long *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1C24573D8(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1C24AE18C();
      goto LABEL_7;
    }
    sub_1C227AA78(v17, a3 & 1);
    unint64_t v23 = sub_1C24573D8(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      unint64_t v14 = v23;
      uint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1C24F6DE0(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_1C2550910();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7] + 48 * v14;
  return sub_1C236FE18((uint64_t)a1, v21);
}

_OWORD *sub_1C23657C0(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C21A6470(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C24AE67C();
      goto LABEL_7;
    }
    sub_1C227B200(v15, a4 & 1);
    unint64_t v21 = sub_1C21A6470(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1C2550910();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
    return sub_1C2206B9C(a1, v19);
  }
LABEL_13:
  sub_1C24F6EAC(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

void sub_1C2365914(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

unint64_t sub_1C2365954(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1C2457670(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      unint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1C24AEA8C();
    goto LABEL_7;
  }
  sub_1C227B558(v13, a3 & 1);
  unint64_t v19 = sub_1C2457670(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_14:
    unint64_t result = sub_1C2550910();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C22859F4(a2, (uint64_t)v21);
  return sub_1C24F6F18(v10, (uint64_t)v21, a1, v16);
}

void sub_1C2365A74(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  id v7 = (void *)*v3;
  unint64_t v9 = sub_1C2457794((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1C24AEC90();
    goto LABEL_7;
  }
  sub_1C227B898(v12, a3 & 1);
  unint64_t v17 = sub_1C2457794((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_15:
    sub_1C21AB51C(0, (unint64_t *)&unk_1EA2DE0C0);
    sub_1C2550910();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C24F6F70(v9, (uint64_t)a2, a1, v15);
  id v19 = a2;
}

_OWORD *sub_1C2365BB4(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  id v7 = (void *)*v3;
  unint64_t v9 = sub_1C24572A8((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1C24AEE54();
      goto LABEL_7;
    }
    sub_1C227BBB4(v12, a3 & 1);
    unint64_t v18 = sub_1C24572A8((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for Key(0);
    unint64_t result = (_OWORD *)sub_1C2550910();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    uint64_t v16 = (_OWORD *)(v15[7] + 32 * v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
    return sub_1C2206B9C(a1, v16);
  }
LABEL_13:
  sub_1C24F6F74(v9, (uint64_t)a2, a1, v15);
  return a2;
}

void sub_1C2365CF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

uint64_t sub_1C2365D38(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v11 = (void *)*v3;
  unint64_t v13 = sub_1C2457874(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    char v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_1C24AF034();
    goto LABEL_7;
  }
  sub_1C227BF08(v16, a3 & 1);
  unint64_t v22 = sub_1C2457874(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_1C2550910();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  char v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C23703CC(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  return sub_1C24F6FDC(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_1C2365EB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C21A6470(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C24AF530();
    goto LABEL_7;
  }
  sub_1C227CB20(v15, a4 & 1);
  unint64_t v21 = sub_1C21A6470(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C2550910();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C24F707C(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C2365FF8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1C2457790(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1C24AF72C();
    goto LABEL_7;
  }
  sub_1C227CE7C(v13, a3 & 1);
  uint64_t v19 = sub_1C2457790(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    type metadata accessor for HKTimeScope(0);
    unint64_t result = sub_1C2550910();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_1C24F70C4(v10, a2, a1, v16);
}

uint64_t sub_1C2366120(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_1C2457874(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17) {
      return sub_1C236FED8(a1, v19[7] + 72 * v13, (unint64_t *)&qword_1EBB6E948);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_1C24AFB94();
    goto LABEL_7;
  }
  sub_1C227D844(v16, a3 & 1);
  unint64_t v21 = sub_1C2457874(a2);
  if ((v17 & 1) != (v22 & 1))
  {
LABEL_14:
    uint64_t result = sub_1C2550910();
    __break(1u);
    return result;
  }
  unint64_t v13 = v21;
  uint64_t v19 = *v4;
  if (v17) {
    return sub_1C236FED8(a1, v19[7] + 72 * v13, (unint64_t *)&qword_1EBB6E948);
  }
LABEL_11:
  sub_1C23703CC(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  return sub_1C24F710C(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_1C23662B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  id v7 = (void **)v6;
  char v13 = a5 & 1;
  uint64_t v14 = (void *)*v6;
  unint64_t v16 = sub_1C24576B4(a2, a3, a4, a5 & 1);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 < v19 || (a6 & 1) == 0)
  {
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_1C24AFE38();
      goto LABEL_7;
    }
    sub_1C227DCC4(v19, a6 & 1);
    unint64_t v25 = sub_1C24576B4(a2, a3, a4, v13);
    if ((v20 & 1) == (v26 & 1))
    {
      unint64_t v16 = v25;
      char v22 = *v7;
      if (v20) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1C2550910();
    __break(1u);
    return result;
  }
LABEL_7:
  char v22 = *v7;
  if (v20)
  {
LABEL_8:
    uint64_t v23 = v22[7] + 48 * v16;
    return sub_1C236FF44(a1, v23);
  }
LABEL_13:
  return sub_1C24F71C8(v16, a2, a3, a4, v13, a1, v22);
}

void sub_1C2366420(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_1C2366460(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v10 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_1C21A6470(a2, a3);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v23 = *v10;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = *(void *)(v23 + 56);

      *(void *)(v24 + 8 * v17) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    a5();
    goto LABEL_7;
  }
  a6();
  unint64_t v25 = sub_1C21A6470(a2, a3);
  if ((v21 & 1) != (v26 & 1))
  {
LABEL_15:
    sub_1C2550910();
    __break(1u);
    return;
  }
  unint64_t v17 = v25;
  uint64_t v23 = *v10;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  a7(v17, a2, a3, a1, v23);
  swift_bridgeObjectRetain();
}

uint64_t sub_1C23665D4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = (void *)*v3;
  unint64_t v14 = sub_1C24573D8(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18) {
      return sub_1C236FED8(a1, v20[7] + 72 * v14, (unint64_t *)&qword_1EBB6E958);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1C24B0208();
    goto LABEL_7;
  }
  sub_1C227E704(v17, a3 & 1);
  unint64_t v22 = sub_1C24573D8(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_1C2550910();
    __break(1u);
    return result;
  }
  unint64_t v14 = v22;
  uint64_t v20 = *v4;
  if (v18) {
    return sub_1C236FED8(a1, v20[7] + 72 * v14, (unint64_t *)&qword_1EBB6E958);
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1C24F7244(v14, (uint64_t)v11, a1, v20);
}

unint64_t sub_1C236678C(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  id v7 = (void **)v6;
  char v13 = a5 & 1;
  unint64_t v14 = (void *)*v6;
  unint64_t v16 = sub_1C24576B4(a2, a3, a4, a5 & 1);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 < v19 || (a6 & 1) == 0)
  {
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_1C24B04DC();
      goto LABEL_7;
    }
    sub_1C227EB94(v19, a6 & 1);
    unint64_t v25 = sub_1C24576B4(a2, a3, a4, v13);
    if ((v20 & 1) == (v26 & 1))
    {
      unint64_t v16 = v25;
      unint64_t v22 = *v7;
      if (v20) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    unint64_t result = sub_1C2550910();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v22 = *v7;
  if (v20)
  {
LABEL_8:
    uint64_t v23 = v22[7] + 48 * v16;
    return sub_1C236FE18((uint64_t)a1, v23);
  }
LABEL_13:
  return sub_1C24F7318(v16, a2, a3, a4, v13, a1, v22);
}

uint64_t sub_1C23668FC(uint64_t a1, long long *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  sub_1C24578FC(a2);
  unint64_t v11 = v10;
  uint64_t v12 = v8[2];
  BOOL v13 = (v9 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v15 = v9;
  uint64_t v16 = v8[3];
  if (v16 >= v14 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v17 = *v4;
    if (v15)
    {
LABEL_8:
      uint64_t v18 = v17[7];
      uint64_t result = swift_release();
      *(void *)(v18 + 8 * v11) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v16 >= v14 && (a3 & 1) == 0)
  {
    sub_1C24B06C4();
    goto LABEL_7;
  }
  sub_1C227EF5C(v14, a3 & 1);
  sub_1C24578FC(a2);
  if ((v15 & 1) != (v21 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C2550910();
    __break(1u);
    return result;
  }
  unint64_t v11 = v20;
  uint64_t v17 = *v4;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C24F7380(v11, (uint64_t)a2, a1, v17);
  return sub_1C2201A54((uint64_t)a2);
}

unint64_t sub_1C2366A2C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1C21A93C4(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1C24B0D08();
    goto LABEL_7;
  }
  sub_1C227FE08(v13, a3 & 1);
  uint64_t v19 = sub_1C21A93C4(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    unint64_t result = sub_1C2550910();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  return sub_1C24F73E0(v10, a2, a1, v16);
}

void sub_1C2366B54(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  id v7 = (void *)*v3;
  unint64_t v9 = sub_1C21AB3B8((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7] + 48 * v9;
      uint64_t v17 = *(void **)v16;
      uint64_t v18 = *(void **)(v16 + 24);
      swift_release();
      swift_release();

      swift_release();
      swift_release();

      long long v19 = a1[1];
      *(_OWORD *)uint64_t v16 = *a1;
      *(_OWORD *)(v16 + 16) = v19;
      *(_OWORD *)(v16 + 32) = a1[2];
      return;
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1C24B0EA8();
    goto LABEL_7;
  }
  sub_1C22803FC(v12, a3 & 1);
  unint64_t v20 = sub_1C21AB3B8((uint64_t)a2);
  if ((v13 & 1) != (v21 & 1))
  {
LABEL_15:
    sub_1C21AB51C(0, &qword_1EBB6FFA0);
    sub_1C2550910();
    __break(1u);
    return;
  }
  unint64_t v9 = v20;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C24F7424(v9, (uint64_t)a2, a1, v15);
  id v22 = a2;
}

void sub_1C2366CD8(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  id v7 = (void *)*v3;
  unint64_t v9 = sub_1C21AB3B8((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1C24B10B8();
    goto LABEL_7;
  }
  sub_1C2280734(v12, a3 & 1);
  unint64_t v17 = sub_1C21AB3B8((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_15:
    sub_1C21AB51C(0, &qword_1EBB6FFA0);
    sub_1C2550910();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C24F6F70(v9, (uint64_t)a2, a1, v15);
  id v19 = a2;
}

void sub_1C2366E18(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = a2;
  uint64_t v4 = *v2;
  long long v5 = *((_OWORD *)a2 + 3);
  v89[2] = *((_OWORD *)a2 + 2);
  v89[3] = v5;
  uint64_t v90 = *((void *)a2 + 8);
  long long v6 = *((_OWORD *)a2 + 1);
  v89[0] = *(_OWORD *)a2;
  v89[1] = v6;
  sub_1C25509C0();
  swift_bridgeObjectRetain();
  DisplayCategory.hash(into:)((uint64_t)v88);
  uint64_t v7 = sub_1C2550A10();
  uint64_t v8 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = v4 + 56;
  if (((*(void *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_75:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v88[0] = *v75;
    *id v75 = 0x8000000000000000;
    sub_1C2201A54((uint64_t)v3);
    sub_1C236A63C(v3, v9, isUniquelyReferenced_nonNull_native);
    *id v75 = v88[0];
    swift_bridgeObjectRelease();
    long long v57 = *((_OWORD *)v3 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)v3 + 2);
    *(_OWORD *)(a1 + 48) = v57;
    *(void *)(a1 + 64) = *((void *)v3 + 8);
    long long v58 = *((_OWORD *)v3 + 1);
    *(_OWORD *)a1 = *(_OWORD *)v3;
    *(_OWORD *)(a1 + 16) = v58;
    return;
  }
  uint64_t v11 = ~v8;
  int v12 = *v3;
  uint64_t v80 = *((void *)v3 + 4);
  uint64_t v81 = *((void *)v3 + 3);
  uint64_t v78 = *((void *)v3 + 2);
  uint64_t v79 = *((void *)v3 + 5);
  *(void *)&v89[0] = *((void *)v3 + 6);
  uint64_t v74 = *((void *)v3 + 7);
  uint64_t v84 = v4;
  uint64_t v85 = (uint64_t)v3;
  uint64_t v82 = ~v8;
  uint64_t v83 = v4 + 56;
  int v86 = v12;
  while (1)
  {
    char v13 = (void *)(*(void *)(v4 + 48) + 72 * v9);
    if (*(unsigned __int8 *)v13 != v12) {
      goto LABEL_5;
    }
    uint64_t v14 = (void *)v13[1];
    uint64_t v15 = v13[2];
    uint64_t v17 = v13[3];
    uint64_t v16 = v13[4];
    uint64_t v19 = v13[5];
    uint64_t v18 = v13[6];
    uint64_t v21 = v13[7];
    unint64_t v20 = (void *)v13[8];
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v22 = v20;
    id v23 = v14;
    if ((sub_1C254FF70() & 1) == 0)
    {

LABEL_4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v84;
      uint64_t v3 = (unsigned __int8 *)v85;
      uint64_t v11 = v82;
      uint64_t v10 = v83;

      int v12 = v86;
      goto LABEL_5;
    }
    uint64_t v87 = v22;
    if (v17)
    {
      if (!v81) {
        goto LABEL_59;
      }
      BOOL v24 = v15 == v78 && v17 == v81;
      if (!v24 && (sub_1C2550870() & 1) == 0) {
        goto LABEL_59;
      }
    }
    else if (v81)
    {
      goto LABEL_59;
    }
    BOOL v25 = v16 == v80 && v19 == v79;
    if (!v25 && (sub_1C2550870() & 1) == 0) {
      goto LABEL_59;
    }
    if ((unint64_t)v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_1C2550620();
      swift_bridgeObjectRelease();
      uint64_t v26 = v55;
    }
    else
    {
      uint64_t v26 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v27 = *(void *)&v89[0];
    uint64_t v28 = *(void *)&v89[0] >> 62;
    uint64_t v77 = *(void *)&v89[0];
    if (*(void *)&v89[0] >> 62)
    {
      uint64_t v70 = v26;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1C2550620();
      sub_1C22C04F0((uint64_t)v89);
      uint64_t v26 = v70;
      uint64_t v27 = v77;
    }
    else
    {
      uint64_t v29 = *(void *)((*(void *)&v89[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v30 = v22;
    if (v26 != v29)
    {
LABEL_70:

      goto LABEL_4;
    }
    if (v26)
    {
      uint64_t v31 = v18 & 0xFFFFFFFFFFFFFF8;
      uint64_t v32 = (v18 & 0xFFFFFFFFFFFFFF8) + 32;
      if (v18 < 0) {
        uint64_t v31 = v18;
      }
      if ((unint64_t)v18 >> 62) {
        uint64_t v32 = v31;
      }
      uint64_t v33 = v27 & 0xFFFFFFFFFFFFFF8;
      uint64_t v34 = (v27 & 0xFFFFFFFFFFFFFF8) + 32;
      uint64_t v73 = v27 & 0xFFFFFFFFFFFFFF8;
      if (v27 < 0) {
        uint64_t v33 = v27;
      }
      if (v28) {
        uint64_t v34 = v33;
      }
      if (v32 != v34) {
        break;
      }
    }
LABEL_46:
    if ((sub_1C22AB474(v21, v74) & 1) == 0) {
      goto LABEL_59;
    }
    char v42 = sub_1C254FF70();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v4 = v84;
    uint64_t v3 = (unsigned __int8 *)v85;
    uint64_t v11 = v82;
    uint64_t v10 = v83;
    int v12 = v86;
    if (v42)
    {
      swift_bridgeObjectRelease();
      sub_1C2201ABC(v85);
      uint64_t v59 = *(void *)(*v75 + 48) + 72 * v9;
      char v61 = *(void **)(v59 + 8);
      uint64_t v60 = *(void *)(v59 + 16);
      uint64_t v62 = *(void *)(v59 + 40);
      uint64_t v63 = *(void *)(v59 + 48);
      uint64_t v64 = *(void *)(v59 + 56);
      uint64_t v65 = *(void **)(v59 + 64);
      *(unsigned char *)a1 = *(unsigned char *)v59;
      *(void *)(a1 + 8) = v61;
      *(void *)(a1 + 16) = v60;
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(v59 + 24);
      *(void *)(a1 + 40) = v62;
      *(void *)(a1 + 48) = v63;
      *(void *)(a1 + 56) = v64;
      *(void *)(a1 + 64) = v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v66 = v65;
      id v67 = v61;
      return;
    }
LABEL_5:
    unint64_t v9 = (v9 + 1) & v11;
    if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_75;
    }
  }
  if ((v26 & 0x8000000000000000) == 0)
  {
    unint64_t v72 = v18 & 0xC000000000000001;
    uint64_t v68 = v26;
    if ((v18 & 0xC000000000000001) != 0)
    {
      id v35 = (id)MEMORY[0x1C87588E0](0, v18);
    }
    else
    {
      if (!*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_77;
      }
      id v35 = *(id *)(v18 + 32);
    }
    id v36 = v35;
    unint64_t v71 = v77 & 0xC000000000000001;
    if ((v77 & 0xC000000000000001) != 0)
    {
      id v37 = (id)MEMORY[0x1C87588E0](0);
    }
    else
    {
      if (!*(void *)(v73 + 16)) {
        goto LABEL_78;
      }
      id v37 = *(id *)(v77 + 32);
    }
    id v38 = v37;
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    char v39 = sub_1C254FF70();
    uint64_t v40 = v36;
    char v41 = v39;

    if ((v41 & 1) == 0)
    {
LABEL_59:

      goto LABEL_4;
    }
    if (v68 != 1)
    {
      if (v72)
      {
        id v43 = (id)MEMORY[0x1C87588E0](1, v18);
      }
      else
      {
        if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
          goto LABEL_81;
        }
        id v43 = *(id *)(v18 + 40);
      }
      id v44 = v43;
      if (v71)
      {
        id v45 = (id)MEMORY[0x1C87588E0](1, v77);
      }
      else
      {
        if (*(void *)(v73 + 16) < 2uLL) {
          goto LABEL_82;
        }
        id v45 = *(id *)(v77 + 40);
      }
      id v46 = v45;
      char v47 = sub_1C254FF70();

      if ((v47 & 1) == 0) {
        goto LABEL_59;
      }
      uint64_t v69 = 2 - v68;
      uint64_t v48 = 6;
      while (v69 + v48 != 6)
      {
        unint64_t v52 = v48 - 4;
        if (v72)
        {
          id v53 = (id)MEMORY[0x1C87588E0](v48 - 4, v18);
        }
        else
        {
          if (v52 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_79;
          }
          id v53 = *(id *)(v18 + 8 * v48);
        }
        uint64_t v54 = v53;
        if (v71)
        {
          id v49 = (id)MEMORY[0x1C87588E0](v48 - 4, v77);
        }
        else
        {
          if (v52 >= *(void *)(v73 + 16)) {
            goto LABEL_80;
          }
          id v49 = *(id *)(v77 + 8 * v48);
        }
        uint64_t v50 = v49;
        char v51 = sub_1C254FF70();

        ++v48;
        uint64_t v30 = v87;
        if ((v51 & 1) == 0) {
          goto LABEL_70;
        }
      }
    }
    goto LABEL_46;
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
}

uint64_t sub_1C23674C0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8);
  unint64_t v9 = (uint64_t *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  int v12 = (uint64_t *)((char *)&v29 - v11);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v29 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v30 = (uint64_t (*)())((char *)&v29 - v16);
  uint64_t v31 = v2;
  uint64_t v17 = *v2;
  sub_1C25509C0();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  sub_1C254F570();
  uint64_t v18 = sub_1C2550A10();
  uint64_t v19 = -1 << *(unsigned char *)(v17 + 32);
  unint64_t v20 = v18 & ~v19;
  if ((*(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
  {
    uint64_t v29 = a1;
    uint64_t v32 = ~v19;
    uint64_t v33 = *(void *)(v6 + 72);
    while (1)
    {
      unint64_t v22 = v33 * v20;
      sub_1C23703CC(*(void *)(v17 + 48) + v33 * v20, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if (*((void *)v15 + 2) == *(void *)(a2 + 16) && *((void *)v15 + 3) == *(void *)(a2 + 24)) {
        break;
      }
      char v24 = sub_1C2550870();
      sub_1C23703CC((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C23703CC(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if (v24) {
        goto LABEL_12;
      }
      sub_1C2370434((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C2370434((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C2370434((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_4:
      unint64_t v20 = (v20 + 1) & v32;
      if (((*(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v29;
        goto LABEL_18;
      }
    }
    sub_1C23703CC((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1C23703CC(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_12:
    if (*v12 == *v9 && v12[1] == v9[1])
    {
      sub_1C2370434((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C2370434((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C2370434((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_15:
      swift_bridgeObjectRelease();
      sub_1C2370434(a2, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C23703CC(*(void *)(*v31 + 48) + v22, v29, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      return 0;
    }
    char v21 = sub_1C2550870();
    sub_1C2370434((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1C2370434((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1C2370434((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    if (v21) {
      goto LABEL_15;
    }
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v26 = v31;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v28 = v30;
  sub_1C23703CC(a2, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  uint64_t v34 = *v26;
  *uint64_t v26 = 0x8000000000000000;
  sub_1C236AD04(v28, v20, isUniquelyReferenced_nonNull_native);
  *uint64_t v26 = v34;
  swift_bridgeObjectRelease();
  sub_1C22C0610(a2, a1, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  return 1;
}

uint64_t sub_1C2367908(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C254E220();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1C21A6D6C(&qword_1EA2DF688, MEMORY[0x1E4F66840]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1C254F370();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      unint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1C21A6D6C(&qword_1EA2DFE28, MEMORY[0x1E4F66840]);
      char v21 = sub_1C254F420();
      unint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C236B0CC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1C2367C2C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C254CCB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1C21A6D6C(&qword_1EA2DF9E8, MEMORY[0x1E4F27C88]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1C254F370();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      unint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1C21A6D6C((unint64_t *)&unk_1EA2E1B40, MEMORY[0x1E4F27C88]);
      char v21 = sub_1C254F420();
      unint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C236B36C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1C2367F50(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C25502B0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C25502A0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2369988(v7, result + 1);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C2281B70(v26);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C22830B4(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C254FF60();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C254FF70();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C254FF70();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C236B60C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C23681F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1C25509B0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C236B7BC(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1C23682EC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C25502B0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C21AB51C(0, &qword_1EBB6FF78);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C25502A0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2369B9C(v7, result + 1);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C2281E20(v26);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C22830B4(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C254FF60();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C21AB51C(0, &qword_1EBB6FF78);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C254FF70();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C254FF70();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C236B8E0((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C236858C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C25502B0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C21AB51C(0, &qword_1EA2DF9B0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C25502A0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C2369DB0(v7, result + 1);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C2281E38(v26);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C22830B4(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C254FF60();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C21AB51C(0, &qword_1EA2DF9B0);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C254FF70();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C254FF70();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C236BA90((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C236882C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    sub_1C25509C0();
    swift_bridgeObjectRetain();
    BrowseCategory.rawValue.getter();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    sub_1C254FF80();
    uint64_t v10 = sub_1C2550A10();
    uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v12 = v10 & ~v11;
    if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v27 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      uint64_t v22 = swift_retain();
      sub_1C236BC40(v22, v12, isUniquelyReferenced_nonNull_native);
      *uint64_t v2 = v27;
      swift_bridgeObjectRelease();
      *a1 = a2;
      return 1;
    }
    uint64_t v13 = ~v11;
    while (1)
    {
      swift_retain();
      unint64_t v14 = BrowseCategory.rawValue.getter();
      uint64_t v16 = v15;
      if (v14 == BrowseCategory.rawValue.getter() && v16 == v17)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v19 = sub_1C2550870();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          swift_release();
          goto LABEL_10;
        }
      }
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
      char v20 = sub_1C254FF70();
      swift_release();
      if (v20)
      {
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v12);
        swift_retain();
        return 0;
      }
LABEL_10:
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_20;
      }
    }
  }
  if (v6 < 0) {
    uint64_t v7 = *v2;
  }
  else {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v8 = sub_1C25502B0();
  swift_release();
  if (v8)
  {
    swift_bridgeObjectRelease();
    swift_release();
    type metadata accessor for CategoryRecordQueryDescription();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    *a1 = v26;
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t result = sub_1C25502A0();
  if (__OFADD__(result, 1))
  {
    __break(1u);
    return result;
  }
  uint64_t v23 = sub_1C2369FC4(v7, result + 1);
  uint64_t v28 = v23;
  if (*(void *)(v23 + 24) <= *(void *)(v23 + 16))
  {
    swift_retain();
    sub_1C2281E50();
    uint64_t v24 = v28;
  }
  else
  {
    uint64_t v24 = v23;
    swift_retain();
  }
  sub_1C22830B8(a2, v24);
  *uint64_t v3 = v24;
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1C2368BB8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C25502B0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C21AB51C(0, &qword_1EBB6EF58);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C25502A0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C236A214(v7, result + 1);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C2282154(v26);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C22830B4(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C254FF60();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C21AB51C(0, &qword_1EBB6EF58);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C254FF70();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        char v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C254FF70();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C236BEB8((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C2368E58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for BrowseCategory();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = *v3;
  sub_1C25509C0();
  swift_bridgeObjectRetain();
  uint64_t v31 = a2;
  BrowseCategory.rawValue.getter();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1C2550A10();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  unint64_t v16 = v14 & ~v15;
  if ((*(void *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
  {
    uint64_t v28 = v12;
    uint64_t v29 = v3;
    uint64_t v30 = a1;
    uint64_t v17 = ~v15;
    uint64_t v18 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1C23703CC(*(void *)(v13 + 48) + v18 * v16, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      unint64_t v19 = BrowseCategory.rawValue.getter();
      uint64_t v21 = v20;
      if (v19 == BrowseCategory.rawValue.getter() && v21 == v22) {
        break;
      }
      char v23 = sub_1C2550870();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C2370434((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      if (v23) {
        goto LABEL_11;
      }
      unint64_t v16 = (v16 + 1) & v17;
      if (((*(void *)(v13 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v29;
        a1 = v30;
        uint64_t v12 = v28;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease_n();
    sub_1C2370434((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
LABEL_11:
    swift_bridgeObjectRelease();
    sub_1C2370434(v31, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    sub_1C23703CC(*(void *)(*v29 + 48) + v18 * v16, v30, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_9:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = v31;
    sub_1C23703CC(v31, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    uint64_t v32 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C236C068((uint64_t)v12, v16, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v32;
    swift_bridgeObjectRelease();
    sub_1C22C0610(v25, a1, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    return 1;
  }
}

uint64_t sub_1C2369194(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C25502B0();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C25502A0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C236A428(v7, result + 1);
    uint64_t v29 = v21;
    unint64_t v22 = *(void *)(v21 + 16);
    if (*(void *)(v21 + 24) <= v22)
    {
      uint64_t v26 = v22 + 1;
      id v27 = v8;
      sub_1C2282520(v26);
      uint64_t v23 = v29;
    }
    else
    {
      uint64_t v23 = v21;
      id v24 = v8;
    }
    sub_1C22830B4(v8, v23);
    *uint64_t v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C254FF60();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1C254FF70();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1C254FF70();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C236C330((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C2369434(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UserDomainConceptViewData();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *v2;
  sub_1C25509C0();
  swift_bridgeObjectRetain();
  UserDomainConceptViewData.hash(into:)();
  uint64_t v11 = sub_1C2550A10();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1C23703CC(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      char v16 = _s15HealthRecordsUI25UserDomainConceptViewDataV2eeoiySbAC_ACtFZ_0(v9, a2);
      sub_1C2370434((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1C2370434((uint64_t)a2, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
    sub_1C23703CC(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C23703CC((uint64_t)a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C236C4E0(v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20;
    swift_bridgeObjectRelease();
    sub_1C22C0610((uint64_t)a2, a1, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
    return 1;
  }
}

uint64_t sub_1C23696B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1C25509C0();
  swift_bridgeObjectRetain();
  sub_1C254F570();
  uint64_t v8 = sub_1C2550A10();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1C2550870() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      char v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1C2550870() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1C236C730(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1C2369868(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1C25509C0();
  sub_1C25509D0();
  uint64_t v6 = sub_1C2550A10();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C236C8CC(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1C2369988(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C22C051C(0, (unint64_t *)&qword_1EA2DF690, (unint64_t *)&qword_1EA2E1530, 0x1E4F67708, &qword_1EA2DF698);
    uint64_t v2 = sub_1C2550360();
    uint64_t v15 = v2;
    sub_1C2550250();
    if (sub_1C25502D0())
    {
      sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1C2281B70(v9 + 1);
          uint64_t v2 = v15;
        }
        uint64_t result = sub_1C254FF60();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (sub_1C25502D0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1C2369B9C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C22C051C(0, qword_1EBB6E608, &qword_1EBB6FF78, 0x1E4F2B448, (unint64_t *)&qword_1EBB6FF80);
    uint64_t v2 = sub_1C2550360();
    uint64_t v15 = v2;
    sub_1C2550250();
    if (sub_1C25502D0())
    {
      sub_1C21AB51C(0, &qword_1EBB6FF78);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1C2281E20(v9 + 1);
          uint64_t v2 = v15;
        }
        uint64_t result = sub_1C254FF60();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (sub_1C25502D0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1C2369DB0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C22C051C(0, (unint64_t *)&qword_1EA2DF9A8, &qword_1EA2DF9B0, 0x1E4F2AD10, &qword_1EA2DF9B8);
    uint64_t v2 = sub_1C2550360();
    uint64_t v15 = v2;
    sub_1C2550250();
    if (sub_1C25502D0())
    {
      sub_1C21AB51C(0, &qword_1EA2DF9B0);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1C2281E38(v9 + 1);
          uint64_t v2 = v15;
        }
        uint64_t result = sub_1C254FF60();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (sub_1C25502D0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1C2369FC4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C2285868();
    uint64_t v2 = sub_1C2550360();
    uint64_t v15 = v2;
    sub_1C2550250();
    if (sub_1C25502D0())
    {
      type metadata accessor for CategoryRecordQueryDescription();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        if (*(void *)(v15 + 24) <= *(void *)(v15 + 16))
        {
          sub_1C2281E50();
          uint64_t v2 = v15;
        }
        sub_1C25509C0();
        BrowseCategory.rawValue.getter();
        sub_1C254F570();
        swift_bridgeObjectRelease();
        id v3 = *(id *)(v14 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
        sub_1C254FF80();

        uint64_t result = sub_1C2550A10();
        uint64_t v5 = v2 + 56;
        uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v7 = result & ~v6;
        unint64_t v8 = v7 >> 6;
        if (((-1 << v7) & ~*(void *)(v2 + 56 + 8 * (v7 >> 6))) != 0)
        {
          unint64_t v9 = __clz(__rbit64((-1 << v7) & ~*(void *)(v2 + 56 + 8 * (v7 >> 6)))) | v7 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v6) >> 6;
          do
          {
            if (++v8 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v8 == v11;
            if (v8 == v11) {
              unint64_t v8 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v5 + 8 * v8);
          }
          while (v13 == -1);
          unint64_t v9 = __clz(__rbit64(~v13)) + (v8 << 6);
        }
        *(void *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        *(void *)(*(void *)(v2 + 48) + 8 * v9) = v14;
        ++*(void *)(v2 + 16);
      }
      while (sub_1C25502D0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1C236A214(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C22C051C(0, (unint64_t *)&qword_1EBB6EFE0, &qword_1EBB6EF58, 0x1E4F2B3D0, (unint64_t *)&qword_1EBB6EFD8);
    uint64_t v2 = sub_1C2550360();
    uint64_t v15 = v2;
    sub_1C2550250();
    if (sub_1C25502D0())
    {
      sub_1C21AB51C(0, &qword_1EBB6EF58);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1C2282154(v9 + 1);
          uint64_t v2 = v15;
        }
        uint64_t result = sub_1C254FF60();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (sub_1C25502D0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1C236A428(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C22C051C(0, (unint64_t *)&qword_1EA2DF960, (unint64_t *)&qword_1EBB70030, 0x1E4F28ED0, (unint64_t *)&qword_1EBB6F990);
    uint64_t v2 = sub_1C2550360();
    uint64_t v15 = v2;
    sub_1C2550250();
    if (sub_1C25502D0())
    {
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1C2282520(v9 + 1);
          uint64_t v2 = v15;
        }
        uint64_t result = sub_1C254FF60();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (sub_1C25502D0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

void sub_1C236A63C(unsigned __int8 *a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*(void *)v3 + 16);
  unint64_t v7 = *(void *)(*(void *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      unint64_t v8 = v81;
      sub_1C2280A34();
    }
    else
    {
      if (v7 > v6)
      {
        sub_1C22BBED4();
        goto LABEL_81;
      }
      unint64_t v8 = v81;
      sub_1C236CA1C();
    }
    uint64_t v9 = *v8;
    long long v10 = *((_OWORD *)a1 + 3);
    v88[2] = *((_OWORD *)a1 + 2);
    v88[3] = v10;
    uint64_t v89 = *((void *)a1 + 8);
    long long v11 = *((_OWORD *)a1 + 1);
    v88[0] = *(_OWORD *)a1;
    v88[1] = v11;
    sub_1C25509C0();
    DisplayCategory.hash(into:)((uint64_t)v87);
    uint64_t v12 = sub_1C2550A10();
    uint64_t v13 = -1 << *(unsigned char *)(v9 + 32);
    a2 = v12 & ~v13;
    uint64_t v14 = v9 + 56;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v15 = ~v13;
      int v16 = *a1;
      uint64_t v85 = v9;
      uint64_t v80 = *((void *)a1 + 3);
      uint64_t v78 = *((void *)a1 + 4);
      uint64_t v76 = *((void *)a1 + 2);
      uint64_t v77 = *((void *)a1 + 5);
      *(void *)&v88[0] = *((void *)a1 + 6);
      uint64_t v74 = *((void *)a1 + 7);
      uint64_t v83 = ~v13;
      uint64_t v84 = v9 + 56;
      int v82 = v16;
      while (1)
      {
        uint64_t v17 = (void *)(*(void *)(v9 + 48) + 72 * a2);
        if (*(unsigned __int8 *)v17 != v16) {
          goto LABEL_11;
        }
        BOOL v19 = (void *)v17[1];
        uint64_t v18 = v17[2];
        uint64_t v20 = v17[3];
        uint64_t v86 = v17[4];
        uint64_t v22 = v17[5];
        uint64_t v21 = v17[6];
        uint64_t v23 = v17[7];
        id v24 = (void *)v17[8];
        sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v25 = v24;
        id v26 = v19;
        if ((sub_1C254FF70() & 1) == 0) {
          break;
        }
        uint64_t v27 = v20;
        if (v20)
        {
          uint64_t v28 = v22;
          uint64_t v29 = v23;
          if (!v80) {
            break;
          }
          BOOL v30 = v18 == v76 && v27 == v80;
          uint64_t v31 = v21;
          if (!v30 && (sub_1C2550870() & 1) == 0) {
            break;
          }
        }
        else
        {
          uint64_t v28 = v22;
          uint64_t v29 = v23;
          uint64_t v31 = v21;
          if (v80) {
            break;
          }
        }
        BOOL v32 = v86 == v78 && v28 == v77;
        if (!v32 && (sub_1C2550870() & 1) == 0) {
          break;
        }
        if ((unint64_t)v31 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v33 = sub_1C2550620();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v33 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v34 = *(void *)&v88[0];
        uint64_t v35 = *(void *)&v88[0] >> 62;
        uint64_t v75 = *(void *)&v88[0];
        if (*(void *)&v88[0] >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v62 = sub_1C2550620();
          sub_1C22C04F0((uint64_t)v88);
          uint64_t v34 = v75;
          if (v33 != v62) {
            break;
          }
        }
        else if (v33 != *(void *)((*(void *)&v88[0] & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          break;
        }
        if (v33)
        {
          uint64_t v36 = v31 & 0xFFFFFFFFFFFFFF8;
          uint64_t v37 = (v31 & 0xFFFFFFFFFFFFFF8) + 32;
          if (v31 < 0) {
            uint64_t v36 = v31;
          }
          if ((unint64_t)v31 >> 62) {
            uint64_t v37 = v36;
          }
          uint64_t v38 = v34 & 0xFFFFFFFFFFFFFF8;
          uint64_t v39 = (v34 & 0xFFFFFFFFFFFFFF8) + 32;
          uint64_t v73 = v34 & 0xFFFFFFFFFFFFFF8;
          if (v34 < 0) {
            uint64_t v38 = v34;
          }
          if (v35) {
            uint64_t v39 = v38;
          }
          if (v37 != v39)
          {
            if (v33 < 0) {
              goto LABEL_84;
            }
            unint64_t v72 = v31 & 0xC000000000000001;
            if ((v31 & 0xC000000000000001) != 0)
            {
              id v40 = (id)MEMORY[0x1C87588E0](0, v31);
            }
            else
            {
              if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_85;
              }
              id v40 = *(id *)(v31 + 32);
            }
            id v41 = v40;
            unint64_t v71 = v75 & 0xC000000000000001;
            if ((v75 & 0xC000000000000001) != 0)
            {
              id v42 = (id)MEMORY[0x1C87588E0](0);
            }
            else
            {
              if (!*(void *)(v73 + 16)) {
                goto LABEL_86;
              }
              id v42 = *(id *)(v75 + 32);
            }
            id v43 = v42;
            sub_1C21AB51C(0, &qword_1EBB6EF58);
            char v44 = sub_1C254FF70();
            id v45 = v41;
            char v46 = v44;

            if ((v46 & 1) == 0) {
              break;
            }
            if (v33 != 1)
            {
              if (v72)
              {
                id v48 = (id)MEMORY[0x1C87588E0](1, v31);
              }
              else
              {
                if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
                  goto LABEL_89;
                }
                id v48 = *(id *)(v31 + 40);
              }
              id v49 = v48;
              if (v71)
              {
                id v50 = (id)MEMORY[0x1C87588E0](1, v75);
              }
              else
              {
                if (*(void *)(v73 + 16) < 2uLL) {
                  goto LABEL_90;
                }
                id v50 = *(id *)(v75 + 40);
              }
              char v51 = v50;
              char v52 = sub_1C254FF70();
              id v53 = v49;
              char v54 = v52;

              if ((v54 & 1) == 0) {
                break;
              }
              uint64_t v70 = 2 - v33;
              uint64_t v55 = 6;
              while (v70 + v55 != 6)
              {
                unint64_t v59 = v55 - 4;
                if (v72)
                {
                  id v60 = (id)MEMORY[0x1C87588E0](v55 - 4, v31);
                }
                else
                {
                  if (v59 >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_87;
                  }
                  id v60 = *(id *)(v31 + 8 * v55);
                }
                char v61 = v60;
                if (v71)
                {
                  id v56 = (id)MEMORY[0x1C87588E0](v55 - 4, v75);
                }
                else
                {
                  if (v59 >= *(void *)(v73 + 16)) {
                    goto LABEL_88;
                  }
                  id v56 = *(id *)(v75 + 8 * v55);
                }
                long long v57 = v56;
                char v58 = sub_1C254FF70();

                ++v55;
                if ((v58 & 1) == 0) {
                  goto LABEL_10;
                }
              }
            }
          }
        }
        if ((sub_1C22AB474(v29, v74) & 1) == 0) {
          break;
        }
        char v47 = sub_1C254FF70();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v14 = v84;
        uint64_t v9 = v85;
        uint64_t v15 = v83;
        int v16 = v82;
        if (v47) {
          goto LABEL_91;
        }
LABEL_11:
        a2 = (a2 + 1) & v15;
        if (((*(void *)(v14 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_81;
        }
      }
LABEL_10:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = v85;

      uint64_t v15 = v83;
      uint64_t v14 = v84;
      int v16 = v82;
      goto LABEL_11;
    }
  }
LABEL_81:
  uint64_t v63 = *v81;
  *(void *)(*v81 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v64 = *(void *)(v63 + 48) + 72 * a2;
  *(void *)(v64 + 64) = *((void *)a1 + 8);
  long long v65 = *((_OWORD *)a1 + 3);
  *(_OWORD *)(v64 + 32) = *((_OWORD *)a1 + 2);
  *(_OWORD *)(v64 + 48) = v65;
  long long v66 = *((_OWORD *)a1 + 1);
  *(_OWORD *)uint64_t v64 = *(_OWORD *)a1;
  *(_OWORD *)(v64 + 16) = v66;
  uint64_t v67 = *(void *)(v63 + 16);
  BOOL v68 = __OFADD__(v67, 1);
  uint64_t v69 = v67 + 1;
  if (v68)
  {
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    sub_1C2550900();
    __break(1u);
  }
  else
  {
    *(void *)(v63 + 16) = v69;
  }
}

uint64_t sub_1C236AD04(uint64_t (*a1)(), unint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  long long v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (uint64_t *)((char *)&v34 - v13);
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v34 - v16;
  unint64_t v18 = *(void *)(*v3 + 16);
  unint64_t v19 = *(void *)(*v3 + 24);
  uint64_t v36 = v8;
  uint64_t v37 = v3;
  if (v19 > v18 && (a3 & 1) != 0) {
    goto LABEL_23;
  }
  if (a3)
  {
    uint64_t v35 = v15;
    sub_1C2280FDC();
  }
  else
  {
    if (v19 > v18)
    {
      sub_1C22BC110();
      goto LABEL_23;
    }
    uint64_t v35 = v15;
    sub_1C236CFC4();
  }
  uint64_t v20 = *v3;
  sub_1C25509C0();
  sub_1C254F570();
  sub_1C254F570();
  uint64_t v21 = sub_1C2550A10();
  uint64_t v22 = -1 << *(unsigned char *)(v20 + 32);
  a2 = v21 & ~v22;
  uint64_t v38 = v20;
  uint64_t v23 = v20 + 56;
  if ((*(void *)(v20 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v24 = ~v22;
    uint64_t v25 = *(void *)(v8 + 72);
    do
    {
      sub_1C23703CC(*(void *)(v38 + 48) + v25 * a2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if (*((void *)v17 + 2) == *((void *)a1 + 2) && *((void *)v17 + 3) == *((void *)a1 + 3))
      {
        sub_1C23703CC((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C23703CC((uint64_t)a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      }
      else
      {
        char v28 = sub_1C2550870();
        sub_1C23703CC((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C23703CC((uint64_t)a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        if ((v28 & 1) == 0)
        {
          sub_1C2370434((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          sub_1C2370434((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          sub_1C2370434((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
          goto LABEL_11;
        }
      }
      if (*v14 == *v11 && v14[1] == v11[1])
      {
        a1 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem;
        sub_1C2370434((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C2370434((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
        sub_1C2370434((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
LABEL_22:
        sub_1C2550900();
        __break(1u);
        break;
      }
      char v26 = sub_1C2550870();
      sub_1C2370434((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C2370434((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      sub_1C2370434((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
      if (v26) {
        goto LABEL_22;
      }
LABEL_11:
      a2 = (a2 + 1) & v24;
    }
    while (((*(void *)(v23 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_23:
  uint64_t v29 = *v37;
  *(void *)(*v37 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1C22C0610((uint64_t)a1, *(void *)(v29 + 48) + *(void *)(v36 + 72) * a2, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
  uint64_t v31 = *(void *)(v29 + 16);
  BOOL v32 = __OFADD__(v31, 1);
  uint64_t v33 = v31 + 1;
  if (v32) {
    __break(1u);
  }
  else {
    *(void *)(v29 + 16) = v33;
  }
  return result;
}

uint64_t sub_1C236B0CC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1C254E220();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  char v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1C2281380();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C22BC154();
      goto LABEL_12;
    }
    sub_1C236D330();
  }
  uint64_t v12 = *v3;
  sub_1C21A6D6C(&qword_1EA2DF688, MEMORY[0x1E4F66840]);
  uint64_t v13 = sub_1C254F370();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1C21A6D6C(&qword_1EA2DFE28, MEMORY[0x1E4F66840]);
      char v21 = sub_1C254F420();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1C2550900();
  __break(1u);
  return result;
}

uint64_t sub_1C236B36C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1C254CCB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  char v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1C2281778();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C22BC180();
      goto LABEL_12;
    }
    sub_1C236D6DC();
  }
  uint64_t v12 = *v3;
  sub_1C21A6D6C(&qword_1EA2DF9E8, MEMORY[0x1E4F27C88]);
  uint64_t v13 = sub_1C254F370();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1C21A6D6C((unint64_t *)&unk_1EA2E1B40, MEMORY[0x1E4F27C88]);
      char v21 = sub_1C254F420();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1C2550900();
  __break(1u);
  return result;
}

void sub_1C236B60C(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1C2281B70(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C22BC460();
      goto LABEL_14;
    }
    sub_1C236DD00(v8, (unint64_t *)&qword_1EA2DF690, (unint64_t *)&qword_1EA2E1530, 0x1E4F67708, &qword_1EA2DF698);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1C254FF60();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1C254FF70();

    if (v13)
    {
LABEL_13:
      sub_1C2550900();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1C254FF70();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1C236B7BC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C2281B88();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1C22BC484();
      goto LABEL_14;
    }
    sub_1C236DA88();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_1C25509B0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1C2550900();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void sub_1C236B8E0(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1C2281E20(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C22BC630();
      goto LABEL_14;
    }
    sub_1C236DD00(v8, qword_1EBB6E608, &qword_1EBB6FF78, 0x1E4F2B448, (unint64_t *)&qword_1EBB6FF80);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1C254FF60();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C21AB51C(0, &qword_1EBB6FF78);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1C254FF70();

    if (v13)
    {
LABEL_13:
      sub_1C2550900();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1C254FF70();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

void sub_1C236BA90(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1C2281E38(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C22BC80C();
      goto LABEL_14;
    }
    sub_1C236DD00(v8, (unint64_t *)&qword_1EA2DF9A8, &qword_1EA2DF9B0, 0x1E4F2AD10, &qword_1EA2DF9B8);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1C254FF60();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C21AB51C(0, &qword_1EA2DF9B0);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1C254FF70();

    if (v13)
    {
LABEL_13:
      sub_1C2550900();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1C254FF70();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1C236BC40(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v23 = result;
  unint64_t v5 = *(void *)(*v3 + 16);
  unint64_t v6 = *(void *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0) {
    goto LABEL_21;
  }
  if (a3)
  {
    sub_1C2281E50();
  }
  else
  {
    if (v6 > v5)
    {
      uint64_t result = (uint64_t)sub_1C22BC830();
      goto LABEL_21;
    }
    sub_1C236DF78();
  }
  uint64_t v7 = *v3;
  sub_1C25509C0();
  BrowseCategory.rawValue.getter();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  id v8 = *(id *)(v23 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
  sub_1C254FF80();

  uint64_t result = sub_1C2550A10();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    type metadata accessor for CategoryRecordQueryDescription();
    do
    {
      swift_retain();
      unint64_t v11 = BrowseCategory.rawValue.getter();
      uint64_t v13 = v12;
      if (v11 == BrowseCategory.rawValue.getter() && v13 == v14)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v16 = sub_1C2550870();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
        {
          uint64_t result = swift_release();
          goto LABEL_11;
        }
      }
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
      char v17 = sub_1C254FF70();
      uint64_t result = swift_release();
      if (v17)
      {
        uint64_t result = sub_1C2550900();
        __break(1u);
        break;
      }
LABEL_11:
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_21:
  uint64_t v18 = *v22;
  *(void *)(*v22 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v18 + 48) + 8 * a2) = v23;
  uint64_t v19 = *(void *)(v18 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20) {
    __break(1u);
  }
  else {
    *(void *)(v18 + 16) = v21;
  }
  return result;
}

void sub_1C236BEB8(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1C2282154(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C22BC9D8();
      goto LABEL_14;
    }
    sub_1C236DD00(v8, (unint64_t *)&qword_1EBB6EFE0, &qword_1EBB6EF58, 0x1E4F2B3D0, (unint64_t *)&qword_1EBB6EFD8);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1C254FF60();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1C254FF70();

    if (v13)
    {
LABEL_13:
      sub_1C2550900();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1C254FF70();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1C236C068(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for BrowseCategory();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v29 = v8;
  uint64_t v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C228216C();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C22BC9FC();
      goto LABEL_14;
    }
    sub_1C236E250();
  }
  uint64_t v13 = *v3;
  sub_1C25509C0();
  BrowseCategory.rawValue.getter();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1C2550A10();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v28 = v7;
    uint64_t v16 = ~v15;
    uint64_t v17 = *(void *)(v8 + 72);
    do
    {
      sub_1C23703CC(*(void *)(v13 + 48) + v17 * a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      unint64_t v18 = BrowseCategory.rawValue.getter();
      uint64_t v20 = v19;
      if (v18 == BrowseCategory.rawValue.getter() && v20 == v21) {
        goto LABEL_17;
      }
      char v22 = sub_1C2550870();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C2370434((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      if (v22) {
        goto LABEL_18;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_14:
  uint64_t v23 = *v30;
  *(void *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1C22C0610(a1, *(void *)(v23 + 48) + *(void *)(v29 + 72) * a2, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_17:
  swift_bridgeObjectRelease_n();
  sub_1C2370434((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
LABEL_18:
  uint64_t result = sub_1C2550900();
  __break(1u);
  return result;
}

void sub_1C236C330(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1C2282520(v8);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C22BCCBC();
      goto LABEL_14;
    }
    sub_1C236DD00(v8, (unint64_t *)&qword_1EA2DF960, (unint64_t *)&qword_1EBB70030, 0x1E4F28ED0, (unint64_t *)&qword_1EBB6F990);
  }
  uint64_t v9 = *v3;
  uint64_t v10 = sub_1C254FF60();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = sub_1C254FF70();

    if (v13)
    {
LABEL_13:
      sub_1C2550900();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = sub_1C254FF70();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1C236C4E0(void *a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for UserDomainConceptViewData();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C22827D8();
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_1C236E5CC();
LABEL_8:
    uint64_t v15 = *v4;
    sub_1C25509C0();
    UserDomainConceptViewData.hash(into:)();
    uint64_t v16 = sub_1C2550A10();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_1C23703CC(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
        char v20 = _s15HealthRecordsUI25UserDomainConceptViewDataV2eeoiySbAC_ACtFZ_0(v11, a1);
        sub_1C2370434((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_1C22BCCE0();
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1C22C0610((uint64_t)a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1C2550900();
  __break(1u);
  return result;
}

uint64_t sub_1C236C730(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  unint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1C2282AF4();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1C22BCD24();
      goto LABEL_22;
    }
    sub_1C236E8A4();
  }
  uint64_t v11 = *v4;
  sub_1C25509C0();
  sub_1C254F570();
  uint64_t result = sub_1C2550A10();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1C2550870(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1C2550900();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1C2550870();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1C236C8CC(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C2282DE8();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1C22BCEEC();
      goto LABEL_14;
    }
    sub_1C236EB68();
  }
  uint64_t v8 = *v3;
  sub_1C25509C0();
  sub_1C25509D0();
  uint64_t result = sub_1C2550A10();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1C2550900();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

unint64_t sub_1C236CA1C()
{
  uint64_t v1 = *v0;
  sub_1C2284E0C(0, (unint64_t *)&qword_1EA2DF888, (void (*)(void))sub_1C220732C);
  uint64_t v2 = sub_1C2550350();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    unint64_t result = swift_release();
LABEL_50:
    *uint64_t v33 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v34 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v35 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v37 = v2 + 56;
  unint64_t result = swift_retain();
  int64_t v8 = 0;
  uint64_t v36 = v1;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v40 = v8;
      unint64_t v12 = v11 | (v8 << 6);
    }
    else
    {
      int64_t v13 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_53;
      }
      if (v13 >= v35)
      {
LABEL_48:
        unint64_t result = swift_release_n();
        goto LABEL_50;
      }
      unint64_t v14 = *(void *)(v34 + 8 * v13);
      int64_t v15 = v8 + 1;
      if (!v14)
      {
        int64_t v15 = v8 + 2;
        if (v8 + 2 >= v35) {
          goto LABEL_48;
        }
        unint64_t v14 = *(void *)(v34 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 3;
          if (v8 + 3 >= v35) {
            goto LABEL_48;
          }
          unint64_t v14 = *(void *)(v34 + 8 * v15);
          if (!v14)
          {
            uint64_t v16 = v8 + 4;
            if (v8 + 4 >= v35) {
              goto LABEL_48;
            }
            unint64_t v14 = *(void *)(v34 + 8 * v16);
            if (!v14)
            {
              while (1)
              {
                int64_t v15 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_54;
                }
                if (v15 >= v35) {
                  goto LABEL_48;
                }
                unint64_t v14 = *(void *)(v34 + 8 * v15);
                ++v16;
                if (v14) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v15 = v8 + 4;
          }
        }
      }
LABEL_22:
      unint64_t v6 = (v14 - 1) & v14;
      int64_t v40 = v15;
      unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    }
    uint64_t v17 = *(void *)(v1 + 48) + 72 * v12;
    char v18 = *(unsigned char *)v17;
    uint64_t v19 = *(void **)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 24);
    uint64_t v41 = *(void *)(v17 + 32);
    long long v42 = *(_OWORD *)(v17 + 56);
    long long v43 = *(_OWORD *)(v17 + 40);
    sub_1C25509C0();
    char v39 = v18;
    sub_1C25509D0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v38 = *((id *)&v42 + 1);
    id v22 = v19;
    sub_1C254FF80();

    sub_1C25509E0();
    if (v21)
    {
      swift_bridgeObjectRetain();
      sub_1C254F570();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    if (*((void *)&v43 + 1) >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1C2550620();
      swift_bridgeObjectRelease();
      sub_1C25509D0();
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1C2550620();
      unint64_t result = swift_bridgeObjectRelease();
      if (!v23) {
        goto LABEL_34;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t result = sub_1C25509D0();
      uint64_t v23 = *(void *)((*((void *)&v43 + 1) & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v23) {
        goto LABEL_34;
      }
    }
    if (v23 < 1) {
      break;
    }
    if ((*((void *)&v43 + 1) & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v23; ++i)
      {
        MEMORY[0x1C87588E0](i, *((void *)&v43 + 1));
        sub_1C254FF80();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v25 = 0;
      do
      {
        uint64_t v26 = *(void **)(*((void *)&v43 + 1) + 8 * v25++ + 32);
        id v27 = v26;
        sub_1C254FF80();
      }
      while (v23 != v25);
    }
LABEL_34:
    swift_bridgeObjectRelease();
    if ((unint64_t)v42 >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1C2550620();
      swift_bridgeObjectRelease();
      sub_1C25509D0();
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1C2550620();
      unint64_t result = swift_bridgeObjectRelease();
      if (!v28) {
        goto LABEL_6;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t result = sub_1C25509D0();
      uint64_t v28 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v28) {
        goto LABEL_6;
      }
    }
    if (v28 < 1) {
      goto LABEL_52;
    }
    if ((v42 & 0xC000000000000001) != 0)
    {
      for (uint64_t j = 0; j != v28; ++j)
      {
        MEMORY[0x1C87588E0](j, v42);
        sub_1C254FF80();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v30 = 0;
      do
      {
        uint64_t v31 = *(void **)(v42 + 8 * v30++ + 32);
        id v32 = v31;
        sub_1C254FF80();
      }
      while (v28 != v30);
    }
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v1 = v36;
    id v9 = v38;
    sub_1C254FF80();

    sub_1C2550A10();
    unint64_t result = sub_1C2550230();
    *(void *)(v37 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v10 = *(void *)(v3 + 48) + 72 * result;
    int64_t v8 = v40;
    *(unsigned char *)uint64_t v10 = v39;
    *(void *)(v10 + 8) = v22;
    *(void *)(v10 + 16) = v20;
    *(void *)(v10 + 24) = v21;
    *(void *)(v10 + 32) = v41;
    *(_OWORD *)(v10 + 40) = v43;
    *(_OWORD *)(v10 + 56) = v42;
    ++*(void *)(v3 + 16);
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_1C236CFC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C228480C();
  uint64_t v7 = sub_1C2550350();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_1C23703CC(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    sub_1C25509C0();
    sub_1C254F570();
    sub_1C254F570();
    uint64_t result = sub_1C2550A10();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_1C22C0610((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))type metadata accessor for ClinicalSharingSelectableAuthorizationCategoryItem);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C236D330()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254E220();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C2283978();
  uint64_t v7 = sub_1C2550350();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1C21A6D6C(&qword_1EA2DF688, MEMORY[0x1E4F66840]);
    uint64_t result = sub_1C254F370();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C236D6DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C2285C24();
  uint64_t v7 = sub_1C2550350();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1C21A6D6C(&qword_1EA2DF9E8, MEMORY[0x1E4F27C88]);
    uint64_t result = sub_1C254F370();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C236DA88()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C2285004(0, &qword_1EA2DF6F8);
  uint64_t result = sub_1C2550350();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_1C25509B0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C236DD00(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_1C22C051C(0, a2, a3, a4, a5);
  uint64_t v8 = sub_1C2550350();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v6 = v9;
    return result;
  }
  uint64_t v32 = v5;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v7 + 56);
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v15 = v8 + 56;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v11 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v11 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    id v24 = *(id *)(*(void *)(v7 + 48) + 8 * v20);
    uint64_t result = sub_1C254FF60();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
    ++*(void *)(v9 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v6 = v32;
    goto LABEL_35;
  }
  unint64_t v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C236DF78()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C2285868();
  uint64_t v3 = sub_1C2550350();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  char v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    sub_1C25509C0();
    swift_retain();
    BrowseCategory.rawValue.getter();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    id v20 = *(id *)(v19 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
    sub_1C254FF80();

    uint64_t result = sub_1C2550A10();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C236E250()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BrowseCategory();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C228576C();
  uint64_t v7 = sub_1C2550350();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  BOOL v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_1C23703CC(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    sub_1C25509C0();
    BrowseCategory.rawValue.getter();
    sub_1C254F570();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C2550A10();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_1C22C0610((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C236E5CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UserDomainConceptViewData();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C2285670();
  uint64_t v7 = sub_1C2550350();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v25 = v0;
  uint64_t v26 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v13 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v14 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v16 << 6);
      goto LABEL_7;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v21);
    ++v16;
    if (!v22)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v26 + 8 * v16);
      if (!v22)
      {
        int64_t v16 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v26 + 8 * v16);
        if (!v22) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_7:
    uint64_t v19 = *(void *)(v3 + 72);
    sub_1C23703CC(*(void *)(v6 + 48) + v19 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
    sub_1C25509C0();
    UserDomainConceptViewData.hash(into:)();
    sub_1C2550A10();
    unint64_t v20 = sub_1C2550230();
    *(void *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    uint64_t result = sub_1C22C0610((uint64_t)v5, *(void *)(v8 + 48) + v20 * v19, (uint64_t (*)(void))type metadata accessor for UserDomainConceptViewData);
    ++*(void *)(v8 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13)
  {
LABEL_23:
    uint64_t result = swift_release_n();
    uint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v26 + 8 * v23);
  if (v22)
  {
    int64_t v16 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v26 + 8 * v16);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C236E8A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C2285004(0, &qword_1EA2DF900);
  uint64_t v3 = sub_1C2550350();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1C25509C0();
    swift_bridgeObjectRetain();
    sub_1C254F570();
    uint64_t result = sub_1C2550A10();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C236EB68()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C2284E0C(0, &qword_1EA2DF8E8, (void (*)(void))sub_1C2206AA8);
  uint64_t result = sub_1C2550350();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_1C25509C0();
    sub_1C25509D0();
    uint64_t result = sub_1C2550A10();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1C236EE04(void (*a1)(uint64_t *__return_ptr)@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (void *)MEMORY[0x1C87594F0]();
  a1(&v6);
  uint64_t v5 = v6;
  *a2 = v5;
}

uint64_t sub_1C236EE60(unint64_t a1, uint64_t a2)
{
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1C2550620())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C87588E0](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v7 = v6;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B3D0]), sel_initWithSampleType_predicate_, v6, a2);

      if (v9)
      {
        MEMORY[0x1C8757C00]();
        if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C254F760();
        }
        sub_1C254F790();
        sub_1C254F730();
      }
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v11;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

id sub_1C236EFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  id result = (id)swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8) {
      return (id)swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        return (id)swift_release();
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          return (id)swift_release();
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v8) {
            return (id)swift_release();
          }
          unint64_t v14 = *(void *)(v4 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_5:
    id result = objc_msgSend(*(id *)(a2 + 32), sel_stopQuery_, *(void *)(*(void *)(a1 + 56) + 8 * v12));
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v8) {
    return (id)swift_release();
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      return (id)swift_release();
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1C236F154()
{
  if (!qword_1EA2E1A80)
  {
    sub_1C21A692C(255, &qword_1EA2E1A88, &qword_1EA2DFC00, &qword_1EA2DF420, 0x1E4F2B630);
    sub_1C236F1D8();
    unint64_t v0 = sub_1C254EB20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E1A80);
    }
  }
}

unint64_t sub_1C236F1D8()
{
  unint64_t result = qword_1EA2E1A90;
  if (!qword_1EA2E1A90)
  {
    sub_1C21A692C(255, &qword_1EA2E1A88, &qword_1EA2DFC00, &qword_1EA2DF420, 0x1E4F2B630);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1A90);
  }
  return result;
}

uint64_t sub_1C236F250@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2361130(a1);
}

uint64_t sub_1C236F258()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C236F294(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t), unint64_t *a5)
{
  if (!*a2)
  {
    sub_1C236F778(255, a3, a4);
    sub_1C236F4E0(a5, a3, a4);
    unint64_t v9 = sub_1C254EB20();
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C236F320()
{
  if (!qword_1EBB6DD38)
  {
    sub_1C236F3BC();
    sub_1C236F478(255, &qword_1EBB6F028, (unint64_t *)&qword_1EBB6EFF0, 0x1E4F2B1B8, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB6DD38);
    }
  }
}

void sub_1C236F3BC()
{
  if (!qword_1EBB6DD30)
  {
    sub_1C254CB40();
    sub_1C21AB51C(255, &qword_1EBB6F030);
    sub_1C21A6D6C((unint64_t *)&qword_1EBB6F4E8, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1C254F340();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6DD30);
    }
  }
}

void sub_1C236F478(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C21AB51C(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C236F4E0(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C236F778(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C236F534@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C236169C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1C236F53C()
{
  unint64_t result = qword_1EBB6DD00;
  if (!qword_1EBB6DD00)
  {
    sub_1C236F294(255, &qword_1EBB6DD08, &qword_1EBB6DCD8, (void (*)(uint64_t))sub_1C236F320, &qword_1EBB6DCD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6DD00);
  }
  return result;
}

uint64_t sub_1C236F5C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C236272C(*(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), a1);
}

void sub_1C236F5D4()
{
  if (!qword_1EA2E1AA0)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
    sub_1C236F68C(255, &qword_1EA2E1AA8, (unint64_t *)&qword_1EA2E1AB0, MEMORY[0x1E4FBB718]);
    sub_1C236F718(&qword_1EA2E1AB8, &qword_1EA2E1AA8, (unint64_t *)&qword_1EA2E1AB0, v0);
    unint64_t v1 = sub_1C254EB20();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E1AA0);
    }
  }
}

void sub_1C236F68C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C236F478(255, a3, (unint64_t *)&qword_1EA2DFB78, 0x1E4F2AF58, a4);
    sub_1C2206F9C();
    unint64_t v5 = sub_1C254EAE0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C236F718(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C236F68C(255, a2, a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C236F76C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2362E94(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

void sub_1C236F778(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1C2206F9C();
    unint64_t v4 = sub_1C254EAE0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C236F7EC()
{
  if (!qword_1EA2E1AD8)
  {
    sub_1C236F844();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E1AD8);
    }
  }
}

void sub_1C236F844()
{
  if (!qword_1EA2E1AE0)
  {
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6EFF0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA2E1AE0);
    }
  }
}

uint64_t sub_1C236F8C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C236380C(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

unint64_t sub_1C236F8CC()
{
  unint64_t result = qword_1EA2E1AF0;
  if (!qword_1EA2E1AF0)
  {
    sub_1C236F294(255, &qword_1EA2E1AC8, &qword_1EA2E1AD0, (void (*)(uint64_t))sub_1C236F7EC, &qword_1EA2E1AE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1AF0);
  }
  return result;
}

uint64_t sub_1C236F954@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2363FB8(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

void sub_1C236F964()
{
  if (!qword_1EA2E1AF8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
    sub_1C236F68C(255, &qword_1EA2E1B00, &qword_1EA2E1B08, MEMORY[0x1E4FBB320]);
    sub_1C236F718(&qword_1EA2E1B10, &qword_1EA2E1B00, &qword_1EA2E1B08, v0);
    unint64_t v1 = sub_1C254EB20();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA2E1AF8);
    }
  }
}

uint64_t sub_1C236FA20@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C23646E4(*(void **)(v1 + 16), *(unsigned char *)(v1 + 24), *(unsigned char *)(v1 + 25), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), a1);
}

void sub_1C236FA38(void *a1@<X8>)
{
  void (*v3)(uint64_t *__return_ptr);
  void *v4;
  uint64_t v5;
  uint64_t v6;

  uint64_t v3 = *(void (**)(uint64_t *__return_ptr))(v1 + 16);
  unint64_t v4 = (void *)MEMORY[0x1C87594F0]();
  v3(&v6);
  uint64_t v5 = v6;
  *a1 = v5;
}

void sub_1C236FA90()
{
  if (!qword_1EBB6D9B8)
  {
    sub_1C236F478(255, (unint64_t *)&qword_1EBB6DD70, &qword_1EBB6DD68, 0x1E4F2B3C8, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C254EA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6D9B8);
    }
  }
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t sub_1C236FB30()
{
  return sub_1C254EA70();
}

unint64_t sub_1C236FB5C()
{
  unint64_t result = qword_1EA2E1B20;
  if (!qword_1EA2E1B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1B20);
  }
  return result;
}

unint64_t sub_1C236FBB4()
{
  unint64_t result = qword_1EA2E1B28;
  if (!qword_1EA2E1B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1B28);
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordAnchorPublisherError()
{
  return &type metadata for RecordAnchorPublisherError;
}

uint64_t method lookup function for UserDomainConceptDataProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UserDomainConceptDataProvider);
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.allUserDomainConceptsPublisher()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeAllMedicalUserDomainConceptsPublisher(withCategoryTypes:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeHighlightableUserDomainConceptsPublisher()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeLatestRecordWithValuePublisher(for:additionalPredicate:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeAllMedicalUserDomainConceptsCountPublisher(for:additionalPredicate:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeRecordCountPublisher(with:medicalType:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of UserDomainConceptDataProvider.makeLabResultsPublisher(for:limit:ascending:excludeMissingFromRemote:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

unsigned char *_s15HealthRecordsUI26RecordAnchorPublisherErrorOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C236FDE0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserDomainConceptDataProvider.UserDomainConceptDataProviderError()
{
  return &type metadata for UserDomainConceptDataProvider.UserDomainConceptDataProviderError;
}

uint64_t sub_1C236FE18(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C236FE74(uint64_t a1, uint64_t a2)
{
  sub_1C222D3E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C236FED8(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1C222D518(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C236FF44(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t objectdestroy_48Tm()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C236FFE4(void (*a1)(uint64_t *), uint64_t a2)
{
  sub_1C23647C8(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), *(unsigned char *)(v2 + 25), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

unint64_t sub_1C2370000()
{
  unint64_t result = qword_1EA2E1B30;
  if (!qword_1EA2E1B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1B30);
  }
  return result;
}

void sub_1C2370054(int a1, unint64_t a2, void *a3)
{
  sub_1C2364D5C(a1, a2, a3, *(void (**)(uint64_t, uint64_t))(v3 + 16));
}

void sub_1C2370060(uint64_t a1, uint64_t a2)
{
  sub_1C236407C(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1C237006C(uint64_t a1, __int16 a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  __int16 v6 = a2 & 0x1FF;
  return v3(&v5);
}

void sub_1C23700B0(int a1, unint64_t a2, void *a3)
{
  sub_1C23643AC(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16));
}

void sub_1C23700BC(uint64_t a1, uint64_t a2)
{
  sub_1C23638D0(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1C23700CC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C237010C(int a1, unint64_t a2, void *a3)
{
  sub_1C2363CD0(a1, a2, a3, *(void (**)(id, unint64_t, uint64_t))(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32));
}

uint64_t objectdestroy_22Tm()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C2370164(void (*a1)(unint64_t *), uint64_t a2)
{
  sub_1C2362F60(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

void sub_1C2370170(int a1, unint64_t a2, void *a3)
{
  sub_1C23634A8(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16));
}

uint64_t sub_1C2370178()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C23701B0(uint64_t a1, uint64_t a2)
{
  sub_1C23627F4(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1C23701C4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C23701FC()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C237023C(int a1, void *a2, int a3, char a4, void *a5)
{
  sub_1C2362AF0(a1, a2, a3, a4, a5, *(void (**)(id, uint64_t))(v5 + 16), *(void *)(v5 + 24), *(unsigned char *)(v5 + 32), *(void *)(v5 + 40));
}

uint64_t objectdestroy_2Tm_0()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C23702B0(uint64_t a1, uint64_t a2)
{
  sub_1C2361758(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C23702B8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *(uint64_t (**)(void *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  char v7 = a3 & 1;
  return v4(v6);
}

uint64_t sub_1C23702F8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1C2370348(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5)
{
  sub_1C2361A1C(a1, a2, a3, a4, a5, v5[2], v5[3], v5[4], v5[5], v5[6]);
}

void sub_1C2370378(uint64_t a1, uint64_t a2)
{
  sub_1C23611BC(a1, a2, v2);
}

uint64_t sub_1C2370380()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C23703C0(int a1, void *a2, int a3, char a4, void *a5)
{
  sub_1C236138C(a1, a2, a3, a4, a5, *(void (**)(id, uint64_t))(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
}

uint64_t sub_1C23703CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2370434(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1C2370644()
{
  return sub_1C23707DC(&OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView, (uint64_t (*)(uint64_t))sub_1C2370664);
}

id sub_1C2370664(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v3 = objc_msgSend(v2, sel_layer);
  id v4 = objc_msgSend(a1, sel_traitCollection);
  id v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  double v6 = sub_1C2437CD8();
  if (qword_1EA2DD810 != -1) {
    swift_once();
  }
  objc_msgSend(v3, sel_setCornerRadius_, v6 * (*(double *)&qword_1EA303CA8 + 4.0) * 0.5);

  id v7 = sub_1C221B274();
  objc_msgSend(v2, sel_setBackgroundColor_, v7);

  objc_msgSend(v2, sel_setHidden_, 1);
  return v2;
}

id sub_1C23707BC()
{
  return sub_1C23707DC(&OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView, (uint64_t (*)(uint64_t))sub_1C2370840);
}

id sub_1C23707DC(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    double v6 = (void *)a2(v2);
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C2370840(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v3 = objc_msgSend(v2, sel_layer);
  id v4 = objc_msgSend(a1, sel_traitCollection);
  id v5 = objc_msgSend(v4, sel_preferredContentSizeCategory);

  double v6 = sub_1C2437CD8();
  if (qword_1EA2DD810 != -1) {
    swift_once();
  }
  objc_msgSend(v3, sel_setCornerRadius_, v6 * *(double *)&qword_1EA303CA8 * 0.5);

  id v7 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v7);

  objc_msgSend(v2, sel_setHidden_, 1);
  return v2;
}

id sub_1C23709AC(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_onBoundsChange];
  *id v3 = 0;
  v3[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints] = MEMORY[0x1E4FBC860];
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___dotView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView____lazy_storage___innerDotView] = 0;
  v1[OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_style] = 1;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for RangePillView();
  id v4 = objc_msgSendSuper2(&v8, sel_initWithCoder_, a1);
  id v5 = v4;
  if (v4)
  {
    id v6 = v4;
    sub_1C2370A8C();
  }
  return v5;
}

uint64_t sub_1C2370A8C()
{
  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v1 = objc_msgSend(v0, sel_layer);
  id v2 = objc_msgSend(v0, sel_traitCollection);
  id v3 = objc_msgSend(v2, sel_preferredContentSizeCategory);

  double v4 = sub_1C2437CD8();
  objc_msgSend(v1, sel_setCornerRadius_, v4 * 3.0);

  id v5 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v5, sel_setMasksToBounds_, 0);

  id v6 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v6, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);

  id v7 = sub_1C2370644();
  objc_msgSend(v0, sel_addSubview_, v7);

  id v8 = sub_1C23707BC();
  objc_msgSend(v0, sel_addSubview_, v8);

  sub_1C23172CC();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CD90;
  uint64_t v10 = sub_1C254E8E0();
  uint64_t v11 = MEMORY[0x1E4FB1138];
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v11;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C23718B8();
  sub_1C254FEB0();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1C2370C98(void *a1, id a2, uint64_t a3)
{
  id v5 = objc_msgSend(a2, sel_preferredContentSizeCategory);
  double v6 = sub_1C2437CD8();

  id v7 = objc_msgSend(a1, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

  double v9 = sub_1C2437CD8();
  if (v6 != v9)
  {
    swift_beginAccess();
    uint64_t v10 = MEMORY[0x1C875A200](a3 + 16);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      id v12 = sub_1C2370644();
      id v13 = objc_msgSend(v12, sel_layer);

      id v14 = objc_msgSend(v11, sel_traitCollection);
      id v15 = objc_msgSend(v14, sel_preferredContentSizeCategory);

      double v16 = sub_1C2437CD8();
      if (qword_1EA2DD810 != -1) {
        swift_once();
      }
      objc_msgSend(v13, sel_setCornerRadius_, v16 * (*(double *)&qword_1EA303CA8 + 4.0) * 0.5);

      id v17 = sub_1C23707BC();
      id v18 = objc_msgSend(v17, sel_layer);

      id v19 = objc_msgSend(v11, sel_traitCollection);
      id v20 = objc_msgSend(v19, sel_preferredContentSizeCategory);

      double v21 = sub_1C2437CD8();
      objc_msgSend(v18, sel_setCornerRadius_, v21 * *(double *)&qword_1EA303CA8 * 0.5);

      id v22 = objc_msgSend(v11, sel_layer);
      id v23 = objc_msgSend(v11, sel_traitCollection);
      id v24 = objc_msgSend(v23, sel_preferredContentSizeCategory);

      double v25 = sub_1C2437CD8();
      objc_msgSend(v22, sel_setCornerRadius_, v25 * 3.0);
    }
  }
}

void sub_1C2370F40()
{
  id v1 = v0;
  id v2 = self;
  uint64_t v55 = OBJC_IVAR____TtC15HealthRecordsUI13RangePillView_dotConstraints;
  sub_1C21F34D4();
  swift_bridgeObjectRetain();
  id v3 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_deactivateConstraints_, v3);

  id v4 = sub_1C23707BC();
  id v5 = sub_1C2370644();
  objc_msgSend(v4, sel_setHidden_, 0);
  objc_msgSend(v5, sel_setHidden_, 0);

  sub_1C2371824();
  sub_1C254F3A0();
  id v6 = objc_msgSend(v1, sel_traitCollection);
  id v7 = objc_msgSend(v6, sel_preferredContentSizeCategory);

  double v8 = sub_1C2437CD8();
  if (qword_1EA2DD810 != -1) {
    swift_once();
  }
  double v9 = 0.5;
  if (v56 > 0.5) {
    double v9 = -0.5;
  }
  double v10 = v9 * (v8 * (*(double *)&qword_1EA303CA8 + 4.0) + -4.0);
  sub_1C21ACA3C();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C2565090;
  id v12 = sub_1C2370644();
  id v13 = objc_msgSend(v12, sel_centerXAnchor);

  id v14 = objc_msgSend(v1, sel_leadingAnchor);
  objc_msgSend(v1, sel_frame);
  id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, v56 * (v10 + CGRectGetWidth(v57)));

  *(void *)(v11 + 32) = v15;
  id v16 = sub_1C2370644();
  id v17 = objc_msgSend(v16, sel_centerYAnchor);

  id v18 = objc_msgSend(v1, sel_centerYAnchor);
  id v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

  *(void *)(v11 + 40) = v19;
  id v20 = sub_1C2370644();
  id v21 = objc_msgSend(v20, sel_heightAnchor);

  id v22 = objc_msgSend(v1, sel_traitCollection);
  id v23 = objc_msgSend(v22, (SEL)&selRef_popoverPresentationController + 6);

  double v24 = sub_1C2437CD8();
  id v25 = objc_retainAutoreleasedReturnValue(objc_msgSend(v21, sel_constraintEqualToConstant_, v24 * (*(double *)&qword_1EA303CA8
                                                                                                  + 4.0)));

  *(void *)(v11 + 48) = v25;
  id v26 = sub_1C2370644();
  id v27 = objc_msgSend(v26, sel_widthAnchor);

  id v28 = objc_msgSend(v1, (SEL)&selRef_setSections_);
  id v29 = objc_msgSend(v28, (SEL)&selRef_popoverPresentationController + 6);

  double v30 = sub_1C2437CD8();
  id v31 = objc_retainAutoreleasedReturnValue(objc_msgSend(v27, sel_constraintEqualToConstant_, v30 * (*(double *)&qword_1EA303CA8
                                                                                                  + 4.0)));

  *(void *)(v11 + 56) = v31;
  id v32 = sub_1C23707BC();
  id v33 = objc_msgSend(v32, sel_centerXAnchor);

  id v34 = sub_1C2370644();
  id v35 = objc_msgSend(v34, sel_centerXAnchor);

  id v36 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v35);
  *(void *)(v11 + 64) = v36;
  id v37 = sub_1C23707BC();
  id v38 = objc_msgSend(v37, sel_centerYAnchor);

  id v39 = sub_1C2370644();
  id v40 = objc_msgSend(v39, sel_centerYAnchor);

  id v41 = objc_msgSend(v38, sel_constraintEqualToAnchor_, v40);
  *(void *)(v11 + 72) = v41;
  id v42 = sub_1C23707BC();
  id v43 = objc_msgSend(v42, sel_heightAnchor);

  id v44 = objc_msgSend(v1, sel_traitCollection);
  id v45 = objc_msgSend(v44, (SEL)&selRef_popoverPresentationController + 6);

  double v46 = sub_1C2437CD8();
  id v47 = objc_msgSend(v43, sel_constraintEqualToConstant_, v46 * *(double *)&qword_1EA303CA8);

  *(void *)(v11 + 80) = v47;
  id v48 = sub_1C23707BC();
  id v49 = objc_msgSend(v48, sel_widthAnchor);

  id v50 = objc_msgSend(v1, sel_traitCollection);
  id v51 = objc_msgSend(v50, (SEL)&selRef_popoverPresentationController + 6);

  double v52 = sub_1C2437CD8();
  id v53 = objc_msgSend(v49, sel_constraintEqualToConstant_, v52 * *(double *)&qword_1EA303CA8);

  *(void *)(v11 + 88) = v53;
  sub_1C254F730();
  *(void *)&v1[v55] = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char v54 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_activateConstraints_, v54);
}

id sub_1C2371600()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RangePillView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RangePillView()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for RangePillView.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2371794);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RangePillView.Style()
{
  return &type metadata for RangePillView.Style;
}

unint64_t sub_1C23717D0()
{
  unint64_t result = qword_1EA2E1B80;
  if (!qword_1EA2E1B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1B80);
  }
  return result;
}

unint64_t sub_1C2371824()
{
  unint64_t result = qword_1EA2E1B90;
  if (!qword_1EA2E1B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1B90);
  }
  return result;
}

uint64_t sub_1C2371878()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C23718B0(void *a1, void *a2)
{
  sub_1C2370C98(a1, a2, v2);
}

unint64_t sub_1C23718B8()
{
  unint64_t result = qword_1EA2E3590;
  if (!qword_1EA2E3590)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E3590);
  }
  return result;
}

uint64_t HKValueRange<>.valueDisplayString(style:)(uint64_t a1)
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v30 - v4;
  id v6 = objc_msgSend(v1, sel_minValue);
  if (!v6)
  {
LABEL_7:
    id v10 = objc_msgSend(v1, sel_minValue);
    if (!v10)
    {
      id v10 = objc_msgSend(v1, sel_maxValue);
      if (!v10) {
        return 0;
      }
    }
    uint64_t v11 = v10;
    id v12 = objc_msgSend(self, sel_localizedStringFromNumber_numberStyle_, v10, a1);
    uint64_t v13 = sub_1C254F470();

    return v13;
  }
  id v7 = v6;
  id v8 = objc_msgSend(v1, sel_maxValue);
  if (!v8)
  {
    double v9 = v7;
    goto LABEL_6;
  }
  double v9 = v8;
  sub_1C2371CF0();
  if (sub_1C254FF70())
  {

LABEL_6:
    goto LABEL_7;
  }
  id v14 = self;
  id v15 = objc_msgSend(v14, sel_localizedStringFromNumber_numberStyle_, v7, a1);
  uint64_t v16 = sub_1C254F470();
  uint64_t v30 = v17;
  uint64_t v31 = v16;

  id v18 = objc_msgSend(v14, sel_localizedStringFromNumber_numberStyle_, v9, a1);
  uint64_t v19 = sub_1C254F470();
  uint64_t v21 = v20;

  uint64_t v22 = sub_1C254CBD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v5, 1, 1, v22);
  if (qword_1EA2DD660 != -1) {
    swift_once();
  }
  id v23 = (void *)qword_1EA2E0B00;
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C255CDA0;
  uint64_t v25 = MEMORY[0x1E4FBB1A0];
  *(void *)(v24 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v26 = sub_1C220D950();
  uint64_t v27 = v30;
  *(void *)(v24 + 32) = v31;
  *(void *)(v24 + 40) = v27;
  *(void *)(v24 + 96) = v25;
  *(void *)(v24 + 104) = v26;
  *(void *)(v24 + 64) = v26;
  *(void *)(v24 + 72) = v19;
  *(void *)(v24 + 80) = v21;
  id v28 = v23;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v13 = sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v5);
  return v13;
}

unint64_t sub_1C2371CF0()
{
  unint64_t result = qword_1EBB70030;
  if (!qword_1EBB70030)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB70030);
  }
  return result;
}

uint64_t sub_1C2371D30(char *a1, char *a2)
{
  return sub_1C23D8A90(*a1, *a2);
}

uint64_t sub_1C2371D3C()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2371DBC()
{
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2371E28()
{
  return sub_1C2550A10();
}

uint64_t sub_1C2371EA4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C25506C0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C2371F04(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x617461446F6ELL;
  if (*v1) {
    uint64_t v2 = 0x676E6964616F6CLL;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C2371F40()
{
  return sub_1C254F6D0();
}

uint64_t sub_1C2371FA0()
{
  return sub_1C254F6B0();
}

void sub_1C2372068()
{
  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for NoDataViewController();
  objc_msgSendSuper2(&v28, sel_viewDidLoad);
  if (v0[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_style])
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v1 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (qword_1EA2DD658 != -1) {
      swift_once();
    }
    id v1 = (id)qword_1EA2E0AE8;
    swift_bridgeObjectRetain();
  }
  sub_1C254C730();
  swift_bridgeObjectRelease();

  id v2 = objc_allocWithZone(MEMORY[0x1E4FB2070]);
  unint64_t v3 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_initWithFrame_title_style_, v3, 0, 0.0, 0.0, 0.0, 0.0, 0xE000000000000000);

  if (v4)
  {
    id v5 = v4;
    id v6 = (void *)sub_1C254F700();
    id v7 = (id)HKUIJoinStringsForAutomationIdentifier();

    objc_msgSend(v5, sel_setAccessibilityIdentifier_, v7);
  }
  id v8 = objc_msgSend(v0, sel_tableView);
  if (!v8)
  {
    __break(1u);
    goto LABEL_19;
  }
  double v9 = v8;
  objc_msgSend(v8, sel_setBackgroundView_, v4);

  id v10 = objc_msgSend(v0, sel_tableView);
  if (!v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v11 = v10;
  id v12 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v11, sel_setBackgroundColor_, v12);

  id v13 = objc_msgSend(v0, sel_tableView);
  if (!v13)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v14 = v13;
  objc_msgSend(v13, sel_setSeparatorStyle_, 0);

  id v15 = objc_msgSend(v0, sel_tableView);
  if (!v15)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v16 = v15;
  objc_msgSend(v15, sel_setScrollEnabled_, 0);

  uint64_t v17 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_profile];
  if (!v17)
  {
LABEL_17:

    return;
  }
  id v18 = v17;
  id v19 = objc_msgSend(v0, sel_tableView);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = (objc_class *)type metadata accessor for AccountUpgradeTileCell();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v23 = (void *)sub_1C254F430();
    objc_msgSend(v20, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v23);

    objc_allocWithZone(v21);
    id v24 = v18;
    uint64_t v25 = v0;
    id v26 = AccountUpgradeTileCell.init(profile:presentingViewController:)(v24, v25);
    uint64_t v27 = *(void **)&v25[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_accountUpgradeTile];
    *(void *)&v25[OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_accountUpgradeTile] = v26;

    id v4 = v27;
    goto LABEL_17;
  }
LABEL_22:
  __break(1u);
}

id sub_1C23726AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NoDataViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for NoDataViewController()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for NoDataViewController.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C237284CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NoDataViewController.Style()
{
  return &type metadata for NoDataViewController.Style;
}

unint64_t sub_1C2372888()
{
  unint64_t result = qword_1EA2E1C20;
  if (!qword_1EA2E1C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1C20);
  }
  return result;
}

unint64_t sub_1C23728DC()
{
  unint64_t result = qword_1EA2E1C28;
  if (!qword_1EA2E1C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1C28);
  }
  return result;
}

uint64_t sub_1C2372930()
{
  id v1 = *(char **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_accountUpgradeTile);
  if (!v1) {
    return 0;
  }
  if (!*(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_category + 8)
    || *(unsigned char *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI20NoDataViewController_category) != 10)
  {
    return 0;
  }
  unint64_t v3 = *(void *)&v1[OBJC_IVAR___HRAccountUpgradeTileCell_accounts];
  if (v3 >> 62)
  {
    uint64_t v5 = v1;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2550620();

    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
  }
  else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return 1;
  }
  return 0;
}

HealthRecordsUI::DisplayCategory::Kind_optional HKMedicalRecord.categoryKind.getter@<W0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = sub_1C254CB40();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254E560();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result.value = DisplayCategory.Kind.init(rawValue:)((Swift::Int)objc_msgSend(v1, sel_recordCategoryType)).value;
  char v12 = v32;
  if (v32 == 11)
  {
    sub_1C254E510();
    id v13 = v1;
    id v14 = sub_1C254E550();
    os_log_type_t v15 = sub_1C254FA20();
    int v16 = v15;
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v30 = a1;
      uint64_t v17 = swift_slowAlloc();
      int v27 = v16;
      id v18 = (uint8_t *)v17;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v32 = v28;
      uint64_t v29 = v8;
      *(_DWORD *)id v18 = 136446210;
      id v26 = v18;
      id v19 = objc_msgSend(v13, sel_UUID, v18 + 4);
      sub_1C254CB20();

      sub_1C2373844();
      uint64_t v20 = sub_1C2550810();
      unint64_t v22 = v21;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      uint64_t v31 = sub_1C21AD354(v20, v22, &v32);
      sub_1C2550120();

      a1 = v30;
      swift_bridgeObjectRelease();
      id v23 = v26;
      _os_log_impl(&dword_1C21A1000, v14, (os_log_type_t)v27, "HKMedicalRecord %{public}s is reporting record category type INVALID", v26, 0xCu);
      uint64_t v24 = v28;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v24, -1, -1);
      MEMORY[0x1C875A0B0](v23, -1, -1);

      result.value = (*(unsigned __int8 (**)(char *, uint64_t))(v29 + 8))(v10, v7);
    }
    else
    {

      result.value = (*(unsigned __int8 (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    char v12 = 0;
  }
  *a1 = v12;
  return result;
}

uint64_t HKMedicalRecord.displayNameFromFHIR.getter()
{
  id v1 = objc_msgSend(v0, sel_medicalRecordCodings);
  sub_1C21AB51C(0, &qword_1EA2DE858);
  unint64_t v2 = sub_1C254F710();

  if (v2 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2550620();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      id v15 = self;
      uint64_t v4 = 4;
      do
      {
        if ((v2 & 0xC000000000000001) != 0) {
          id v5 = (id)MEMORY[0x1C87588E0](v4 - 4, v2);
        }
        else {
          id v5 = *(id *)(v2 + 8 * v4);
        }
        uint64_t v6 = v5;
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
          goto LABEL_16;
        }
        id v8 = objc_msgSend(v5, sel_codingSystem);
        id v9 = objc_msgSend(v15, sel_textSystem);
        if (v8)
        {
          sub_1C21AB51C(0, &qword_1EA2E1C30);
          id v10 = v8;
          char v11 = sub_1C254FF70();

          if (v11)
          {
            swift_bridgeObjectRelease_n();
            id v12 = objc_msgSend(v6, sel_displayString);

            if (!v12) {
              return 0;
            }
            uint64_t v13 = sub_1C254F470();

            return v13;
          }
          id v9 = v6;
        }
        else
        {
        }
        ++v4;
      }
      while (v7 != v3);
    }
  }
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t HKMedicalRecord.firstDisplayText.getter()
{
  id v1 = objc_msgSend(v0, sel_medicalRecordCodings);
  sub_1C21AB51C(0, &qword_1EA2DE858);
  unint64_t v2 = sub_1C254F710();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C2550620();
  if (!v3) {
    goto LABEL_17;
  }
LABEL_3:
  uint64_t v4 = 4;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)MEMORY[0x1C87588E0](v4 - 4, v2);
    }
    else {
      id v5 = *(id *)(v2 + 8 * v4);
    }
    uint64_t v6 = v5;
    uint64_t v7 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    id v8 = objc_msgSend(v5, sel_displayString);
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = sub_1C254F470();
      unint64_t v12 = v11;

      swift_bridgeObjectRelease();
      uint64_t v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0) {
        uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
      }
      if (v13) {
        break;
      }
    }

    ++v4;
    if (v7 == v3) {
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease_n();
  id v14 = objc_msgSend(v6, sel_displayString);

  if (!v14) {
    return 0;
  }
  uint64_t v15 = sub_1C254F470();

  return v15;
}

id sub_1C23730EC(void *a1, uint64_t a2)
{
  return sub_1C2373364(a1, a2, (void (*)(void))HKMedicalRecord.preferredDisplayName.getter);
}

uint64_t HKMedicalRecord.preferredDisplayName.getter()
{
  if (objc_msgSend(v0, sel_recordCategoryType) == (id)8)
  {
    self;
    uint64_t v1 = swift_dynamicCastObjCClass();
    if (v1)
    {
      unint64_t v2 = (void *)v1;
      id v3 = v0;
      id v4 = objc_msgSend(v2, sel_displayName);
      if (v4)
      {
        id v5 = v4;
        uint64_t v6 = sub_1C254F470();

        id v3 = v5;
      }
      else
      {
        if (qword_1EBB6EF38 != -1) {
          swift_once();
        }
        id v17 = (id)qword_1EBB6FBB0;
        swift_bridgeObjectRetain();
        uint64_t v6 = sub_1C254C730();
        swift_bridgeObjectRelease();
      }
      goto LABEL_21;
    }
  }
  id v7 = objc_msgSend(v0, sel_primaryConcept);
  id v8 = objc_msgSend(v7, sel_localizedPreferredName);

  if (v8)
  {
    uint64_t v6 = sub_1C254F470();
    unint64_t v10 = v9;

    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v6 & 0xFFFFFFFFFFFFLL;
    }
    if (v11) {
      return v6;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = HKMedicalRecord.displayNameFromFHIR.getter();
  uint64_t v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v14 = v12 & 0xFFFFFFFFFFFFLL;
  }
  if (!v14)
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = HKMedicalRecord.firstDisplayText.getter();
    uint64_t v16 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0) {
      uint64_t v16 = v12 & 0xFFFFFFFFFFFFLL;
    }
    if (!v16)
    {
      swift_bridgeObjectRelease();
      id v3 = objc_msgSend(v0, sel_fallbackDisplayString);
      uint64_t v6 = sub_1C254F470();
LABEL_21:

      return v6;
    }
  }
  return v12;
}

id sub_1C237334C(void *a1, uint64_t a2)
{
  return sub_1C2373364(a1, a2, (void (*)(void))HKMedicalRecord.displayNameForGroupByConcept.getter);
}

id sub_1C2373364(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  id v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t HKMedicalRecord.displayNameForGroupByConcept.getter()
{
  id v1 = objc_msgSend(v0, sel_primaryConcept);
  id v2 = objc_msgSend(v1, sel_groupByConcept);

  id v3 = objc_msgSend(v2, sel_localizedPreferredName);
  if (v3)
  {
    uint64_t v4 = sub_1C254F470();
    unint64_t v6 = v5;

    uint64_t v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v7) {
      return v4;
    }
    swift_bridgeObjectRelease();
  }
  id v9 = objc_msgSend(v0, sel_preferredDisplayName);
  uint64_t v10 = sub_1C254F470();

  return v10;
}

HealthRecordsUI::DisplayCategory::Kind_optional sub_1C23734C4@<W0>(unsigned char *a1@<X8>)
{
  return HKMedicalRecord.categoryKind.getter(a1);
}

uint64_t sub_1C23734E8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1C2373580(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C23736F8(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1C23736F8(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1C2373580(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1C2517BA0(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1C25503B0();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1C25505E0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1C254F5B0();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1C25506A0();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1C25505E0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C23736F8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C237389C();
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

unint64_t sub_1C2373844()
{
  unint64_t result = qword_1EA2DE1E0;
  if (!qword_1EA2DE1E0)
  {
    sub_1C254CB40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2DE1E0);
  }
  return result;
}

void sub_1C237389C()
{
  if (!qword_1EBB6F238)
  {
    unint64_t v0 = sub_1C2550820();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F238);
    }
  }
}

uint64_t CancellationToken.__allocating_init(cancelBlock:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = a2;
  return result;
}

uint64_t sub_1C2373938()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1C237396C@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t v4 = *(void *)(v3 + 32);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *a2 = sub_1C225FF10;
  a2[1] = (uint64_t (*)())v6;
  return swift_retain();
}

uint64_t sub_1C23739EC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = *a2;
  swift_beginAccess();
  *(void *)(v6 + 24) = sub_1C2373F8C;
  *(void *)(v6 + 32) = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1C2373A7C()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain();
  return v1;
}

uint64_t sub_1C2373AC8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return swift_release();
}

uint64_t (*sub_1C2373B1C())()
{
  return j__swift_endAccess;
}

uint64_t CancellationToken.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  type metadata accessor for CancellationToken();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  *(void *)(result + 24) = sub_1C2373D78;
  *(void *)(result + 32) = v2;
  return result;
}

uint64_t sub_1C2373BD4(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_14:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2550620();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = MEMORY[0x1C87588E0](i, a1);
      }
      else
      {
        uint64_t v7 = *(void *)(a1 + 8 * i + 32);
        swift_retain();
      }
      swift_beginAccess();
      if (*(unsigned char *)(v7 + 16) != 1)
      {
        *(unsigned char *)(v7 + 16) = 1;
        swift_beginAccess();
        uint64_t v5 = *(void (**)(uint64_t))(v7 + 24);
        uint64_t v6 = swift_retain();
        v5(v6);
        swift_release();
      }
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2373D40()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2373D78()
{
  return sub_1C2373BD4(*(void *)(v0 + 16));
}

uint64_t sub_1C2373D80()
{
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(v0 + 16) & 1) == 0)
  {
    *(unsigned char *)(v0 + 16) = 1;
    swift_beginAccess();
    uint64_t v2 = *(void (**)(uint64_t))(v0 + 24);
    uint64_t v3 = swift_retain();
    v2(v3);
    return swift_release();
  }
  return result;
}

uint64_t CancellationToken.deinit()
{
  swift_release();
  return v0;
}

uint64_t sub_1C2373E18@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_1C2373E60(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 16) = v2;
  return result;
}

uint64_t method lookup function for CancellationToken(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CancellationToken);
}

uint64_t dispatch thunk of CancellationToken.isCancelled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of CancellationToken.cancelBlock.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of CancellationToken.cancelBlock.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of CancellationToken.cancelBlock.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of CancellationToken.__allocating_init(cancelBlock:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of CancellationToken.cancel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t sub_1C2373F8C()
{
  return sub_1C24F26A8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1C2373F94()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2373FD0@<X0>(uint64_t *a1@<X8>)
{
  id v3 = *(id *)(v1 + qword_1EA2DF3F0);
  sub_1C254FB30();
  uint64_t v4 = type metadata accessor for PromotionListViewDataSourceProvider();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  sub_1C21F44EC(&v8, v5 + 24);
  a1[3] = v4;
  uint64_t result = sub_1C2374CA0(&qword_1EA2E1C50, v6, (void (*)(uint64_t))type metadata accessor for PromotionListViewDataSourceProvider);
  a1[4] = result;
  *a1 = v5;
  return result;
}

uint64_t PromotionListViewDataSourceProvider.__allocating_init(predicate:store:)(uint64_t a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  sub_1C21F44EC(a2, v4 + 24);
  return v4;
}

id sub_1C23740DC(void *a1, char *a2)
{
  char v4 = *a2;
  uint64_t v5 = (void *)*((void *)a2 + 1);
  uint64_t v6 = (void *)*((void *)a2 + 8);
  id v7 = objc_msgSend(a1, sel_healthStore);
  id v8 = objc_msgSend(v7, sel_profileIdentifier);

  char v18 = v4;
  int64_t v9 = (void *)_s14HealthPlatform8FeedItemC0A9RecordsUIE012predicateForaE10Onboarding9profileId12categoryKindSo11NSPredicateCSo19HKProfileIdentifierC_AD15DisplayCategoryV0M0OSgtFZ_0(v8, &v18);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  *(void *)&v2[qword_1EA2DF3F0] = v9;
  *(void *)&v2[qword_1EA2DF3F8] = MEMORY[0x1E4FBC860];
  *(void *)&v2[qword_1EA2DF3E8] = a1;
  id v10 = objc_allocWithZone(MEMORY[0x1E4FB15C0]);
  id v11 = v9;
  id v12 = a1;
  id v13 = objc_msgSend(v10, sel_init);
  v17.receiver = v2;
  v17.super_class = (Class)type metadata accessor for FeedItemListViewController();
  id v14 = objc_msgSendSuper2(&v17, sel_initWithCollectionViewLayout_, v13);

  id v15 = v14;
  objc_msgSend(v15, sel_setTitle_, 0);

  return v15;
}

id PromotionListViewDataSourceProvider.predicate.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_1C2374274(uint64_t a1, void *a2)
{
  sub_1C21F4424(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + 24;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1C21F44EC(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1C23742DC@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_1C21F4424(v1 + 24, a1);
}

uint64_t sub_1C2374328(long long *a1)
{
  uint64_t v3 = v1 + 24;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1Tm(v3);
  sub_1C21F44EC(a1, v3);
  return swift_endAccess();
}

uint64_t PromotionListViewDataSourceProvider.init(predicate:store:)(uint64_t a1, long long *a2)
{
  *(void *)(v2 + 16) = a1;
  sub_1C21F44EC(a2, v2 + 24);
  return v2;
}

uint64_t sub_1C23743B0()
{
  sub_1C2374968(0, (unint64_t *)&qword_1EA2DEA38, (uint64_t (*)(uint64_t))sub_1C22250F0, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255CD90;
  *(void *)(v0 + 32) = sub_1C237442C();
  *(void *)(v0 + 40) = v1;
  return v0;
}

uint64_t sub_1C237442C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254D7E0();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C2374968(0, &qword_1EA2DFD80, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v32 - v4 + 8;
  sub_1C254D110();
  sub_1C2374968(0, &qword_1EA2DF320, MEMORY[0x1E4F67030], MEMORY[0x1E4FBBE00]);
  uint64_t v6 = sub_1C254CEF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  long long v31 = xmmword_1C255CDA0;
  *(_OWORD *)(v10 + 16) = xmmword_1C255CDA0;
  unint64_t v11 = v10 + v9;
  id v12 = *(void (**)(unint64_t, void, uint64_t))(v7 + 104);
  v12(v11, *MEMORY[0x1E4F67028], v6);
  v12(v11 + v8, *MEMORY[0x1E4F66FF8], v6);
  uint64_t v13 = sub_1C254C520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  sub_1C22259B4(0, (unint64_t *)&qword_1EA2DEA60);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v31;
  *(void *)(v14 + 32) = sub_1C254CF10();
  *(void *)(v14 + 40) = 0;
  id v15 = (void *)MEMORY[0x1C87555B0](v10, 0, v5, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C229E610((uint64_t)v5);
  sub_1C22259B4(0, (unint64_t *)&qword_1EBB6F4E0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C255CD70;
  objc_super v17 = *(void **)(v1 + 16);
  *(void *)(v16 + 32) = v15;
  *(void *)(v16 + 40) = v17;
  v32[0] = v16;
  sub_1C254F730();
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF60);
  id v18 = v15;
  id v19 = v17;
  uint64_t v20 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v20);

  unint64_t v22 = (void *)MEMORY[0x1C87555F0]();
  objc_msgSend(v22, sel_setPredicate_, v21);
  v32[0] = v1;
  uint64_t v23 = type metadata accessor for PromotionListViewDataSourceProvider();
  uint64_t v25 = sub_1C2374CA0(&qword_1EA2E1C38, v24, (void (*)(uint64_t))type metadata accessor for PromotionListViewDataSourceProvider);
  MEMORY[0x1C8755770](v23, v25);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FA50);
  id v26 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setSortDescriptors_, v26);

  swift_beginAccess();
  sub_1C21F4424(v1 + 24, (uint64_t)v32);
  __swift_project_boxed_opaque_existential_1Tm(v32, v32[3]);
  id v27 = v22;
  uint64_t v28 = (void *)sub_1C254CE10();
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C0F0]), sel_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_, v27, v28, 0, 0);

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
  sub_1C22259FC();
  sub_1C254D790();
  uint64_t v29 = sub_1C254D540();

  sub_1C2374CA0((unint64_t *)&qword_1EA2DEA78, 255, (void (*)(uint64_t))sub_1C22259FC);
  return v29;
}

void sub_1C2374968(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for PromotionListViewDataSourceProvider()
{
  return self;
}

uint64_t PromotionListViewDataSourceProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return v0;
}

uint64_t PromotionListViewDataSourceProvider.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_1C2374A58()
{
  sub_1C2374968(0, (unint64_t *)&qword_1EA2DEA38, (uint64_t (*)(uint64_t))sub_1C22250F0, MEMORY[0x1E4FBBE00]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255CD90;
  *(void *)(v0 + 32) = sub_1C237442C();
  *(void *)(v0 + 40) = v1;
  return v0;
}

uint64_t sub_1C2374AD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 24;
  swift_beginAccess();
  return sub_1C21F4424(v3, a2);
}

uint64_t type metadata accessor for PromotionListViewController()
{
  uint64_t result = qword_1EA2E1C40;
  if (!qword_1EA2E1C40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2374B78()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C2374BB8()
{
  return type metadata accessor for PromotionListViewController();
}

uint64_t method lookup function for PromotionListViewDataSourceProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PromotionListViewDataSourceProvider);
}

uint64_t dispatch thunk of PromotionListViewDataSourceProvider.store.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of PromotionListViewDataSourceProvider.store.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of PromotionListViewDataSourceProvider.store.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of PromotionListViewDataSourceProvider.__allocating_init(predicate:store:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of PromotionListViewDataSourceProvider.selectedDataSources(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of PromotionListViewDataSourceProvider.makePromotionDataSource()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t sub_1C2374CA0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1C2374CE8()
{
  double result = 0.0;
  xmmword_1EA2E1C58 = xmmword_1C255E100;
  *(_OWORD *)&qword_1EA2E1C68 = xmmword_1C255E100;
  return result;
}

double sub_1C2374D00()
{
  double result = 12.0;
  xmmword_1EA2E1C78 = xmmword_1C2565E80;
  *(_OWORD *)&qword_1EA2E1C88 = xmmword_1C2565E80;
  return result;
}

unint64_t static AccountHeaderCell.reuseIdentifier.getter()
{
  return 0xD000000000000011;
}

char *AccountHeaderCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_allocWithZone((Class)type metadata accessor for AccountView(0));
  uint64_t v7 = v3;
  id v8 = objc_msgSend(v6, sel_init);
  *(void *)&v7[OBJC_IVAR___HRAccountHeaderCell_accountView] = v8;
  uint64_t v9 = qword_1EA2DD710;
  id v10 = v8;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1EA2E1C88;
  id v12 = (objc_class *)type metadata accessor for PaddedView();
  uint64_t v13 = (char *)objc_allocWithZone(v12);
  *(void *)&v13[OBJC_IVAR____TtC15HealthRecordsUI10PaddedView_contentView] = v10;
  *(void *)&v13[OBJC_IVAR____TtC15HealthRecordsUI10PaddedView_bottomPadding] = v11;
  v30.receiver = v13;
  v30.super_class = v12;
  id v14 = v10;
  id v15 = objc_msgSendSuper2(&v30, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, sel_addSubview_, v14);

  *(void *)&v7[OBJC_IVAR___HRAccountHeaderCell_paddedView] = v15;
  if (a3)
  {
    uint64_t v16 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = 0;
  }
  v29.receiver = v7;
  v29.super_class = (Class)type metadata accessor for AccountHeaderCell();
  id v17 = objc_msgSendSuper2(&v29, sel_initWithStyle_reuseIdentifier_, a1, v16);

  id v18 = (char *)v17;
  objc_msgSend(v18, sel_setSelectionStyle_, 0);
  id v19 = self;
  id v20 = objc_msgSend(v19, sel_clearColor);
  objc_msgSend(v18, sel_setBackgroundColor_, v20);

  id v21 = *(void **)&v18[OBJC_IVAR___HRAccountHeaderCell_paddedView];
  id v22 = objc_msgSend(v21, sel_layer);
  objc_msgSend(v22, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);

  id v23 = objc_msgSend(v21, sel_layer);
  sub_1C254CDB0();
  objc_msgSend(v23, sel_setCornerRadius_);

  id v24 = objc_msgSend(v21, sel_layer);
  objc_msgSend(v24, sel_setMaskedCorners_, 3);

  id v25 = objc_msgSend(v19, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v21, sel_setBackgroundColor_, v25);

  id v26 = objc_msgSend(v18, sel_contentView);
  objc_msgSend(v26, sel_addSubview_, v21);

  objc_msgSend(v18, sel_setInsetsLayoutMarginsFromSafeArea_, 0);
  id v27 = *(void **)&v18[OBJC_IVAR___HRAccountHeaderCell_accountView];
  objc_msgSend(v27, sel_setInsetsLayoutMarginsFromSafeArea_, 0);
  objc_msgSend(v27, sel_setDirectionalLayoutMargins_, xmmword_1EA2E1C78, *(double *)&qword_1EA2E1C88, *(double *)&qword_1EA2E1C90);

  return v18;
}

uint64_t type metadata accessor for AccountHeaderCell()
{
  return self;
}

void sub_1C2375318(void *a1)
{
  sub_1C2378474(0, &qword_1EA2DF190, (void (*)(uint64_t))type metadata accessor for AccountViewData);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v27 - v4;
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AccountViewData(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v29 = v6;
    uint64_t v30 = v1;
    id v14 = a1;
    id v15 = objc_msgSend(v14, sel_identifier);
    sub_1C254CB20();

    id v16 = objc_msgSend(v14, sel_title);
    uint64_t v17 = sub_1C254F470();
    uint64_t v27 = v18;
    uint64_t v28 = v17;

    id v19 = objc_msgSend(v14, sel_subtitle);
    if (v19)
    {
      id v20 = v19;
      uint64_t v21 = sub_1C254F470();
      uint64_t v23 = v22;
    }
    else
    {
      uint64_t v21 = 0;
      uint64_t v23 = 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v9, v29);
    id v24 = &v13[*(int *)(v10 + 20)];
    uint64_t v25 = v27;
    *(void *)id v24 = v28;
    *((void *)v24 + 1) = v25;
    id v26 = (uint64_t *)&v13[*(int *)(v10 + 24)];
    *id v26 = v21;
    v26[1] = v23;
    sub_1C2256F88((uint64_t)v13, (uint64_t)v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
    sub_1C22550DC((uint64_t)v5);

    sub_1C23784C8((uint64_t)v5, &qword_1EA2DF190, (void (*)(uint64_t))type metadata accessor for AccountViewData);
    sub_1C2256718((uint64_t)v13);
  }
}

id AccountHeaderCell.__deallocating_deinit()
{
  return sub_1C2378374(type metadata accessor for AccountHeaderCell);
}

unint64_t sub_1C2375704()
{
  return 0xD000000000000010;
}

id AccountLoginCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR___HRAccountLoginCell_accountStatusView;
  id v7 = objc_allocWithZone((Class)type metadata accessor for AccountStatusSummaryTileFeedItemView());
  uint64_t v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_init);

  if (a3)
  {
    uint64_t v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  v13.receiver = v8;
  v13.super_class = (Class)type metadata accessor for AccountLoginCell();
  id v10 = objc_msgSendSuper2(&v13, sel_initWithStyle_reuseIdentifier_, a1, v9);

  id v11 = v10;
  sub_1C23758F0();

  return v11;
}

id sub_1C237581C(void *a1)
{
  uint64_t v3 = OBJC_IVAR___HRAccountLoginCell_accountStatusView;
  id v4 = objc_allocWithZone((Class)type metadata accessor for AccountStatusSummaryTileFeedItemView());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = objc_msgSend(v4, sel_init);

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for AccountLoginCell();
  id v6 = objc_msgSendSuper2(&v10, sel_initWithCoder_, a1);
  id v7 = v6;
  if (v6)
  {
    id v8 = v6;
    sub_1C23758F0();
  }
  return v7;
}

id sub_1C23758F0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR___HRAccountLoginCell_accountStatusView];
  id v2 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v2, sel_setCornerCurve_, *MEMORY[0x1E4F39EA8]);

  id v3 = objc_msgSend(v1, sel_layer);
  sub_1C254CDB0();
  objc_msgSend(v3, sel_setCornerRadius_);

  id v4 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v4, sel_addSubview_, v1);

  id v5 = objc_msgSend(v0, sel_contentView);
  id v6 = self;
  id v7 = objc_msgSend(v6, sel_clearColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v7);

  id v8 = objc_msgSend(v6, sel_clearColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v8);

  objc_msgSend(v0, sel_setSelectionStyle_, 0);
  if (objc_msgSend(v0, sel_isHighlighted))
  {
    if (qword_1EA2DD720 != -1) {
      swift_once();
    }
    id v9 = (id)qword_1EA2E2540;
  }
  else
  {
    id v9 = objc_msgSend(v6, sel_secondarySystemGroupedBackgroundColor);
  }
  objc_super v10 = v9;
  objc_msgSend(v1, sel_setBackgroundColor_, v9);

  objc_msgSend(v0, sel_setInsetsLayoutMarginsFromSafeArea_, 0);
  objc_msgSend(v1, sel_setInsetsLayoutMarginsFromSafeArea_, 0);
  if (qword_1EA2DD710 != -1) {
    swift_once();
  }
  long long v11 = xmmword_1EA2E1C78;
  double v12 = *(double *)&qword_1EA2E1C88;
  double v13 = *(double *)&qword_1EA2E1C90;
  return objc_msgSend(v1, sel_setDirectionalLayoutMargins_, v11, v12, v13);
}

id sub_1C2375B68(uint64_t (*a1)(void), void *a2)
{
  v18.receiver = v2;
  v18.super_class = (Class)a1();
  objc_msgSendSuper2(&v18, sel_layoutSubviews);
  id v4 = *(void **)&v2[*a2];
  id v5 = objc_msgSend(v2, sel_contentView);
  objc_msgSend(v5, sel_bounds);
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;

  if (qword_1EA2DD708 != -1) {
    swift_once();
  }
  long long v14 = xmmword_1EA2E1C58;
  uint64_t v15 = qword_1EA2E1C70;
  if (objc_msgSend(v2, sel_effectiveUserInterfaceLayoutDirection) == (id)1) {
    double v16 = *(double *)&v15;
  }
  else {
    double v16 = *((double *)&v14 + 1);
  }
  return objc_msgSend(v4, sel_setFrame_, UIEdgeInsetsInsetRect(v7, v9, v11, v13, *(double *)&v14, v16));
}

double sub_1C2375D14(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  uint64_t v8 = qword_1EA2DD708;
  double v9 = a1;
  if (v8 != -1) {
    swift_once();
  }
  double v10 = *((double *)&xmmword_1EA2E1C58 + 1);
  double v11 = *(double *)&qword_1EA2E1C70;
  objc_msgSend(*(id *)&v9[*a5], sel_sizeThatFits_, a2 - *((double *)&xmmword_1EA2E1C58 + 1) - *(double *)&qword_1EA2E1C70, a3 - *(double *)&xmmword_1EA2E1C58 - *(double *)&qword_1EA2E1C68);
  double v13 = v12;

  return v11 + v10 + v13;
}

void sub_1C2375DE4(void *a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for AccountLoginCell();
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, a1);
  if (!a1
    || (id v3 = objc_msgSend(v1, sel_traitCollection),
        unsigned int v4 = objc_msgSend(a1, sel_hasDifferentColorAppearanceComparedToTraitCollection_, v3),
        v3,
        v4))
  {
    id v5 = *(void **)&v1[OBJC_IVAR___HRAccountLoginCell_accountStatusView];
    if (objc_msgSend(v1, sel_isHighlighted))
    {
      if (qword_1EA2DD720 != -1) {
        swift_once();
      }
      id v6 = (id)qword_1EA2E2540;
    }
    else
    {
      id v6 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
    }
    double v7 = v6;
    objc_msgSend(v5, sel_setBackgroundColor_, v6);
  }
}

void sub_1C2375F98(void *a1, uint64_t a2, uint64_t (*a3)(void), void *a4)
{
  v7.receiver = a1;
  v7.super_class = (Class)a3();
  id v5 = (char *)v7.receiver;
  objc_msgSendSuper2(&v7, sel_layoutMarginsDidChange);
  objc_msgSend(v5, sel_setInsetsLayoutMarginsFromSafeArea_, 0, v7.receiver, v7.super_class);
  id v6 = *(void **)&v5[*a4];
  objc_msgSend(v6, sel_setInsetsLayoutMarginsFromSafeArea_, 0);
  if (qword_1EA2DD710 != -1) {
    swift_once();
  }
  objc_msgSend(v6, sel_setDirectionalLayoutMargins_, xmmword_1EA2E1C78, *(double *)&qword_1EA2E1C88, *(double *)&qword_1EA2E1C90);
}

id AccountLoginCell.__deallocating_deinit()
{
  return sub_1C2378374(type metadata accessor for AccountLoginCell);
}

void AccountLoginCell.apply(_:)(void *a1)
{
  sub_1C2378474(0, &qword_1EA2E1CB0, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v5 - v3;
  if (a1)
  {
    AccountStatusSummaryTileFeedItemViewData.init(_:)(a1, (uint64_t)v4);
    sub_1C24A73C0((uint64_t)v4);
    sub_1C23784C8((uint64_t)v4, &qword_1EA2E1CB0, (void (*)(uint64_t))type metadata accessor for AccountStatusSummaryTileFeedItemViewData);
  }
}

unint64_t static AccountTimelineButtonCell.reuseIdentifier.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_1C2376440()
{
  return sub_1C223A124(&OBJC_IVAR___HRAccountTimelineButtonCell_buttonText);
}

id sub_1C2376464(uint64_t a1, uint64_t a2)
{
  return sub_1C2376668(a1, a2, &OBJC_IVAR___HRAccountTimelineButtonCell_buttonText, (uint64_t (*)(uint64_t))sub_1C2376B9C);
}

void (*sub_1C2376484(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HRAccountTimelineButtonCell_buttonText;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C23764F0;
}

void sub_1C23764F0(void **a1, char a2)
{
}

id sub_1C2376514(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a1 + *a3;
  swift_beginAccess();
  if (*(void *)(v3 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

uint64_t sub_1C237659C()
{
  return sub_1C223A124(&OBJC_IVAR___HRAccountTimelineButtonCell_explanationText);
}

void sub_1C23765C0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (a3)
  {
    uint64_t v6 = sub_1C254F470();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  id v9 = a1;
  a4(v6, v8);
}

id sub_1C2376648(uint64_t a1, uint64_t a2)
{
  return sub_1C2376668(a1, a2, &OBJC_IVAR___HRAccountTimelineButtonCell_explanationText, (uint64_t (*)(uint64_t))sub_1C2376CFC);
}

id sub_1C2376668(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v8 = (void *)(v4 + *a3);
  swift_beginAccess();
  *uint64_t v8 = a1;
  v8[1] = a2;
  uint64_t v9 = swift_bridgeObjectRelease();
  double v10 = (void *)a4(v9);
  if (v8[1])
  {
    swift_bridgeObjectRetain();
    double v11 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    double v11 = 0;
  }
  objc_msgSend(v10, sel_setText_, v11);

  return sub_1C2377B7C();
}

void (*sub_1C2376730(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HRAccountTimelineButtonCell_explanationText;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C237679C;
}

void sub_1C237679C(void **a1, char a2)
{
}

void sub_1C23767B4(void **a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = *a1;
  uint64_t v6 = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v7 = v5[3] + v5[4];
    uint64_t v8 = (void *)a3(v6);
    if (*(void *)(v7 + 8))
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
    }
    objc_msgSend(v8, sel_setText_, v9);

    sub_1C2377B7C();
  }
  free(v5);
}

uint64_t sub_1C23768C4()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___HRAccountTimelineButtonCell_roundBottomCorners);
  swift_beginAccess();
  return *v1;
}

void sub_1C2376960(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___HRAccountTimelineButtonCell_roundBottomCorners);
  swift_beginAccess();
  *uint64_t v3 = a1;
  id v4 = sub_1C2376E80();
  if (a1)
  {
    sub_1C254CDB0();
    id v5 = (id)*MEMORY[0x1E4F39EA8];
    sub_1C254FE70();

    id v6 = sub_1C2376E80();
    id v4 = objc_msgSend(v6, sel_layer);

    objc_msgSend(v4, sel_setMaskedCorners_, 12);
  }
  else
  {
    sub_1C254FE80();
  }
}

void (*sub_1C2376A48(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___HRAccountTimelineButtonCell_roundBottomCorners;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1C2376AB4;
}

void sub_1C2376AB4(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    int v4 = *(unsigned __int8 *)(v3[3] + v3[4]);
    id v5 = sub_1C2376E80();
    if (v4 == 1)
    {
      sub_1C254CDB0();
      id v6 = (id)*MEMORY[0x1E4F39EA8];
      sub_1C254FE70();

      id v7 = sub_1C2376E80();
      id v5 = objc_msgSend(v7, sel_layer);

      objc_msgSend(v5, sel_setMaskedCorners_, 12);
    }
    else
    {
      sub_1C254FE80();
    }
  }
  free(v3);
}

id sub_1C2376B9C()
{
  return sub_1C2376D1C(&OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___buttonLabel, (uint64_t (*)(void))sub_1C2376BBC);
}

id sub_1C2376BBC()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_labelColor);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v2, sel_setFont_, 0);
  objc_msgSend(v2, sel_setNumberOfLines_, 0);
  objc_msgSend(v2, sel_setTextColor_, v1);

  id v3 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v2, sel_setFont_, v3);

  id v4 = objc_msgSend(v0, sel_systemBlueColor);
  objc_msgSend(v2, sel_setTextColor_, v4);

  objc_msgSend(v2, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v2;
}

id sub_1C2376CFC()
{
  return sub_1C2376D1C(&OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___explanationLabel, (uint64_t (*)(void))sub_1C2376D7C);
}

id sub_1C2376D1C(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1C2376D7C()
{
  id v0 = objc_msgSend(self, sel_labelColor);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  objc_msgSend(v1, sel_setFont_, 0);
  objc_msgSend(v1, sel_setNumberOfLines_, 0);
  objc_msgSend(v1, sel_setTextColor_, v0);

  id v2 = objc_msgSend(self, sel_preferredFontForTextStyle_, *MEMORY[0x1E4FB2950]);
  objc_msgSend(v1, sel_setFont_, v2);

  objc_msgSend(v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  return v1;
}

id sub_1C2376E80()
{
  return sub_1C2376EA8(&OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___containerView, (SEL *)&selRef_secondarySystemGroupedBackgroundColor);
}

id sub_1C2376E94()
{
  return sub_1C2376EA8(&OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___separatorView, (SEL *)&selRef_opaqueSeparatorColor);
}

id sub_1C2376EA8(uint64_t *a1, SEL *a2)
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
    id v8 = [self *a2];
    objc_msgSend(v7, sel_setBackgroundColor_, v8);

    objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v9 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v7;
    id v5 = v7;

    id v4 = 0;
  }
  id v10 = v4;
  return v5;
}

id _s15HealthRecordsUI17AccountHeaderCellC5style15reuseIdentifierACSo011UITableViewF5StyleV_SSSgtcfC_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  if (a3)
  {
    id v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStyle_reuseIdentifier_, a1, v6);

  return v7;
}

id AccountTimelineButtonCell.init(style:reuseIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = &v3[OBJC_IVAR___HRAccountTimelineButtonCell_buttonText];
  *id v5 = 0;
  v5[1] = 0;
  id v6 = &v3[OBJC_IVAR___HRAccountTimelineButtonCell_explanationText];
  *id v6 = 0;
  v6[1] = 0;
  v3[OBJC_IVAR___HRAccountTimelineButtonCell_roundBottomCorners] = 0;
  *(void *)&v3[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___buttonLabel] = 0;
  *(void *)&v3[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___explanationLabel] = 0;
  *(void *)&v3[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___containerView] = 0;
  *(void *)&v3[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___separatorView] = 0;
  *(void *)&v3[OBJC_IVAR___HRAccountTimelineButtonCell_customConstraints] = MEMORY[0x1E4FBC860];
  if (a3)
  {
    id v7 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = 0;
  }
  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for AccountTimelineButtonCell();
  id v8 = objc_msgSendSuper2(&v11, sel_initWithStyle_reuseIdentifier_, a1, v7);

  id v9 = v8;
  sub_1C2377194();

  return v9;
}

uint64_t sub_1C2377110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (a4)
  {
    a4 = sub_1C254F470();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v8 = 0;
  }
  return a5(a3, a4, v8);
}

void sub_1C2377194()
{
  id v1 = v0;
  objc_msgSend(v0, sel_setSelectionStyle_, 0);
  id v2 = objc_msgSend(v0, sel_contentView);
  id v58 = self;
  id v3 = objc_msgSend(v58, sel_systemGroupedBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v3);

  id v4 = sub_1C2376E80();
  id v5 = sub_1C2376B9C();
  objc_msgSend(v4, sel_addSubview_, v5);

  id v6 = sub_1C2376E80();
  id v7 = sub_1C2376CFC();
  objc_msgSend(v6, sel_addSubview_, v7);

  id v8 = objc_msgSend(v1, sel_contentView);
  id v9 = sub_1C2376E94();
  objc_msgSend(v8, sel_addSubview_, v9);

  id v10 = objc_msgSend(v1, sel_contentView);
  id v11 = sub_1C2376E80();
  objc_msgSend(v10, sel_addSubview_, v11);

  sub_1C2377B7C();
  id v59 = self;
  sub_1C21ACA3C();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C2565090;
  id v13 = sub_1C2376E94();
  id v14 = objc_msgSend(v13, sel_topAnchor);

  id v15 = objc_msgSend(v1, sel_contentView);
  id v16 = objc_msgSend(v15, sel_topAnchor);

  id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v16);
  *(void *)(v12 + 32) = v17;
  id v18 = sub_1C2376E94();
  id v19 = objc_msgSend(v18, sel_leadingAnchor);

  id v20 = objc_msgSend(v1, sel_contentView);
  id v21 = objc_msgSend(v20, sel_leadingAnchor);

  if (qword_1EA2DD708 != -1) {
    swift_once();
  }
  double v22 = *((double *)&xmmword_1EA2E1C58 + 1);
  if (qword_1EA2DD710 != -1) {
    swift_once();
  }
  id v23 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, v22 + *((double *)&xmmword_1EA2E1C78 + 1));

  *(void *)(v12 + 40) = v23;
  id v24 = objc_msgSend(v1, sel_contentView);
  id v25 = objc_msgSend(v24, sel_trailingAnchor);

  id v26 = sub_1C2376E94();
  id v27 = objc_msgSend(v26, sel_trailingAnchor);

  id v28 = objc_msgSend(v25, sel_constraintEqualToAnchor_constant_, v27, *(double *)&qword_1EA2E1C70 + *(double *)&qword_1EA2E1C90);
  *(void *)(v12 + 48) = v28;
  id v29 = sub_1C2376E94();
  id v30 = objc_msgSend(v29, sel_heightAnchor);

  id v31 = objc_msgSend(v1, sel_traitCollection);
  objc_msgSend(v31, sel_displayPixel);
  double v33 = v32;

  id v34 = objc_msgSend(v30, sel_constraintEqualToConstant_, v33);
  *(void *)(v12 + 56) = v34;
  id v35 = sub_1C2376E80();
  id v36 = objc_msgSend(v35, sel_topAnchor);

  id v37 = sub_1C2376E94();
  id v38 = objc_msgSend(v37, sel_bottomAnchor);

  id v39 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v38);
  *(void *)(v12 + 64) = v39;
  id v40 = sub_1C2376E80();
  id v41 = objc_msgSend(v40, sel_leadingAnchor);

  id v42 = objc_msgSend(v1, sel_contentView);
  id v43 = objc_msgSend(v42, sel_leadingAnchor);

  id v44 = objc_msgSend(v41, sel_constraintEqualToAnchor_constant_, v43, *((double *)&xmmword_1EA2E1C58 + 1));
  *(void *)(v12 + 72) = v44;
  id v45 = objc_msgSend(v1, sel_contentView);
  id v46 = objc_msgSend(v45, sel_trailingAnchor);

  id v47 = sub_1C2376E80();
  id v48 = objc_msgSend(v47, sel_trailingAnchor);

  id v49 = objc_msgSend(v46, sel_constraintEqualToAnchor_constant_, v48, *(double *)&qword_1EA2E1C70);
  *(void *)(v12 + 80) = v49;
  id v50 = sub_1C2376E80();
  id v51 = objc_msgSend(v50, sel_bottomAnchor);

  id v52 = objc_msgSend(v1, sel_contentView);
  id v53 = objc_msgSend(v52, sel_bottomAnchor);

  id v54 = objc_msgSend(v51, sel_constraintEqualToAnchor_, v53);
  *(void *)(v12 + 88) = v54;
  sub_1C254F730();
  sub_1C21F34D4();
  uint64_t v55 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v59, sel_activateConstraints_, v55);

  id v56 = sub_1C2376E80();
  if (objc_msgSend(v1, sel_isHighlighted))
  {
    if (qword_1EA2DD720 != -1) {
      swift_once();
    }
    id v57 = (id)qword_1EA2E2540;
  }
  else
  {
    id v57 = objc_msgSend(v58, sel_secondarySystemGroupedBackgroundColor);
  }
  id v60 = v57;
  objc_msgSend(v56, sel_setBackgroundColor_);
}

void sub_1C23778EC(void *a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for AccountTimelineButtonCell();
  objc_msgSendSuper2(&v8, sel_traitCollectionDidChange_, a1);
  if (!a1
    || (id v3 = objc_msgSend(v1, sel_traitCollection),
        unsigned int v4 = objc_msgSend(a1, sel_hasDifferentColorAppearanceComparedToTraitCollection_, v3),
        v3,
        v4))
  {
    id v5 = sub_1C2376E80();
    if (objc_msgSend(v1, sel_isHighlighted))
    {
      if (qword_1EA2DD720 != -1) {
        swift_once();
      }
      id v6 = (id)qword_1EA2E2540;
    }
    else
    {
      id v6 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
    }
    id v7 = v6;
    objc_msgSend(v5, sel_setBackgroundColor_, v6);
  }
}

id sub_1C2377B7C()
{
  id v1 = self;
  uint64_t v2 = OBJC_IVAR___HRAccountTimelineButtonCell_customConstraints;
  sub_1C21F34D4();
  swift_bridgeObjectRetain();
  id v3 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_deactivateConstraints_, v3);

  unsigned int v4 = &v0[OBJC_IVAR___HRAccountTimelineButtonCell_explanationText];
  swift_beginAccess();
  unint64_t v5 = *((void *)v4 + 1);
  if (v5 && ((v5 & 0x2000000000000000) != 0 ? (uint64_t v6 = HIBYTE(v5) & 0xF) : (uint64_t v6 = *(void *)v4 & 0xFFFFFFFFFFFFLL), v6))
  {
    id v7 = &v0[OBJC_IVAR___HRAccountTimelineButtonCell_buttonText];
    swift_beginAccess();
    unint64_t v8 = *((void *)v7 + 1);
    if (v8
      && ((v8 & 0x2000000000000000) != 0 ? (uint64_t v9 = HIBYTE(v8) & 0xF) : (uint64_t v9 = *(void *)v7 & 0xFFFFFFFFFFFFLL), v9))
    {
      uint64_t v10 = sub_1C2377FA8();
    }
    else
    {
      uint64_t v10 = sub_1C2377D10();
    }
  }
  else
  {
    uint64_t v10 = sub_1C2377CF8();
  }
  *(void *)&v0[v2] = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v11 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v11);

  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_1C2377CF8()
{
  return sub_1C2377D28((uint64_t (*)(void))sub_1C2376B9C);
}

uint64_t sub_1C2377D10()
{
  return sub_1C2377D28((uint64_t (*)(void))sub_1C2376CFC);
}

uint64_t sub_1C2377D28(uint64_t (*a1)(void))
{
  sub_1C21ACA3C();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C255DBA0;
  id v3 = (void *)a1();
  id v4 = objc_msgSend(v3, sel_topAnchor);

  id v5 = sub_1C2376E80();
  id v6 = objc_msgSend(v5, sel_topAnchor);

  if (qword_1EA2DD710 != -1) {
    swift_once();
  }
  id v7 = objc_msgSend(v4, sel_constraintEqualToAnchor_constant_, v6, *(double *)&xmmword_1EA2E1C78);

  *(void *)(v2 + 32) = v7;
  unint64_t v8 = (void *)a1();
  id v9 = objc_msgSend(v8, sel_leadingAnchor);

  id v10 = sub_1C2376E80();
  id v11 = objc_msgSend(v10, sel_leadingAnchor);

  id v12 = objc_msgSend(v9, sel_constraintEqualToAnchor_constant_, v11, *((double *)&xmmword_1EA2E1C78 + 1));
  *(void *)(v2 + 40) = v12;
  id v13 = sub_1C2376E80();
  id v14 = objc_msgSend(v13, sel_trailingAnchor);

  id v15 = (void *)a1();
  id v16 = objc_msgSend(v15, sel_trailingAnchor);

  id v17 = objc_msgSend(v14, sel_constraintEqualToAnchor_constant_, v16, *(double *)&qword_1EA2E1C90);
  *(void *)(v2 + 48) = v17;
  id v18 = sub_1C2376E80();
  id v19 = objc_msgSend(v18, sel_bottomAnchor);

  id v20 = (void *)a1();
  id v21 = objc_msgSend(v20, sel_bottomAnchor);

  id v22 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v21, *(double *)&qword_1EA2E1C88);
  *(void *)(v2 + 56) = v22;
  sub_1C254F730();
  return v2;
}

uint64_t sub_1C2377FA8()
{
  sub_1C21ACA3C();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255EBD0;
  id v1 = sub_1C2376CFC();
  id v2 = objc_msgSend(v1, sel_topAnchor);

  id v3 = sub_1C2376E80();
  id v4 = objc_msgSend(v3, sel_topAnchor);

  if (qword_1EA2DD710 != -1) {
    swift_once();
  }
  id v5 = objc_msgSend(v2, sel_constraintEqualToAnchor_constant_, v4, *(double *)&xmmword_1EA2E1C78);

  *(void *)(v0 + 32) = v5;
  id v6 = sub_1C2376CFC();
  id v7 = objc_msgSend(v6, sel_leadingAnchor);

  id v8 = sub_1C2376E80();
  id v9 = objc_msgSend(v8, sel_leadingAnchor);

  id v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_constant_, v9, *((double *)&xmmword_1EA2E1C78 + 1));
  *(void *)(v0 + 40) = v10;
  id v11 = sub_1C2376E80();
  id v12 = objc_msgSend(v11, sel_trailingAnchor);

  id v13 = sub_1C2376CFC();
  id v14 = objc_msgSend(v13, sel_trailingAnchor);

  id v15 = objc_msgSend(v12, sel_constraintEqualToAnchor_constant_, v14, *(double *)&qword_1EA2E1C90);
  *(void *)(v0 + 48) = v15;
  id v16 = sub_1C2376B9C();
  id v17 = objc_msgSend(v16, sel_topAnchor);

  id v18 = sub_1C2376CFC();
  id v19 = objc_msgSend(v18, sel_bottomAnchor);

  id v20 = objc_msgSend(v17, sel_constraintEqualToAnchor_constant_, v19, 8.0);
  *(void *)(v0 + 56) = v20;
  id v21 = sub_1C2376B9C();
  id v22 = objc_msgSend(v21, sel_leadingAnchor);

  id v23 = sub_1C2376CFC();
  id v24 = objc_msgSend(v23, sel_leadingAnchor);

  id v25 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v24);
  *(void *)(v0 + 64) = v25;
  id v26 = sub_1C2376B9C();
  id v27 = objc_msgSend(v26, sel_trailingAnchor);

  id v28 = sub_1C2376CFC();
  id v29 = objc_msgSend(v28, sel_trailingAnchor);

  id v30 = objc_msgSend(v27, sel_constraintEqualToAnchor_, v29);
  *(void *)(v0 + 72) = v30;
  id v31 = sub_1C2376E80();
  id v32 = objc_msgSend(v31, sel_bottomAnchor);

  id v33 = sub_1C2376B9C();
  id v34 = objc_msgSend(v33, sel_bottomAnchor);

  id v35 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v34, *(double *)&qword_1EA2E1C88);
  *(void *)(v0 + 80) = v35;
  sub_1C254F730();
  return v0;
}

id AccountTimelineButtonCell.__deallocating_deinit()
{
  return sub_1C2378374(type metadata accessor for AccountTimelineButtonCell);
}

id sub_1C2378374(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for AccountLoginCell()
{
  return self;
}

void sub_1C2378474(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C23784C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C2378474(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C2378524(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for AccountLoginCell();
  objc_msgSendSuper2(&v6, sel_setHighlighted_animated_, a1 & 1, 0);
  objc_super v3 = *(void **)&v1[OBJC_IVAR___HRAccountLoginCell_accountStatusView];
  if (objc_msgSend(v1, sel_isHighlighted))
  {
    if (qword_1EA2DD720 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EA2E2540;
  }
  else
  {
    id v4 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
  }
  uint64_t v5 = v4;
  objc_msgSend(v3, sel_setBackgroundColor_, v4);
}

uint64_t type metadata accessor for AccountTimelineButtonCell()
{
  return self;
}

void sub_1C237862C()
{
  id v1 = &v0[OBJC_IVAR___HRAccountTimelineButtonCell_buttonText];
  *id v1 = 0;
  v1[1] = 0;
  id v2 = &v0[OBJC_IVAR___HRAccountTimelineButtonCell_explanationText];
  *id v2 = 0;
  v2[1] = 0;
  v0[OBJC_IVAR___HRAccountTimelineButtonCell_roundBottomCorners] = 0;
  *(void *)&v0[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___buttonLabel] = 0;
  *(void *)&v0[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___explanationLabel] = 0;
  *(void *)&v0[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___containerView] = 0;
  *(void *)&v0[OBJC_IVAR___HRAccountTimelineButtonCell____lazy_storage___separatorView] = 0;
  *(void *)&v0[OBJC_IVAR___HRAccountTimelineButtonCell_customConstraints] = MEMORY[0x1E4FBC860];

  sub_1C25505F0();
  __break(1u);
}

void sub_1C23786FC(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for AccountTimelineButtonCell();
  objc_msgSendSuper2(&v6, sel_setHighlighted_animated_, a1 & 1, 0);
  id v3 = sub_1C2376E80();
  if (objc_msgSend(v1, sel_isHighlighted))
  {
    if (qword_1EA2DD720 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EA2E2540;
  }
  else
  {
    id v4 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
  }
  uint64_t v5 = v4;
  objc_msgSend(v3, sel_setBackgroundColor_, v4);
}

uint64_t sub_1C23787E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR___HRAccountTimelineButtonCell_buttonText, a2);
}

uint64_t sub_1C23787EC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C2376464);
}

uint64_t sub_1C2378804@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return keypath_get_5Tm(a1, &OBJC_IVAR___HRAccountTimelineButtonCell_explanationText, a2);
}

uint64_t sub_1C2378810(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C2376648);
}

uint64_t keypath_setTm_0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t sub_1C2378870@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = (unsigned char *)(*a1 + OBJC_IVAR___HRAccountTimelineButtonCell_roundBottomCorners);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

void sub_1C23788C4(char *a1)
{
}

uint64_t method lookup function for AccountHeaderCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountHeaderCell);
}

uint64_t dispatch thunk of AccountHeaderCell.apply(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t method lookup function for AccountLoginCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountLoginCell);
}

uint64_t dispatch thunk of static AccountLoginCell.reuseIdentifier.getter()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for AccountTimelineButtonCell(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AccountTimelineButtonCell);
}

uint64_t dispatch thunk of AccountTimelineButtonCell.buttonText.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.buttonText.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.buttonText.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.explanationText.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.explanationText.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.explanationText.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.roundBottomCorners.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.roundBottomCorners.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of AccountTimelineButtonCell.roundBottomCorners.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t sub_1C2378B50(uint64_t a1)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v18 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v8 = MEMORY[0x1E4FBC840] + 8;
  if (v4) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v11 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v11 < v18)
    {
      unint64_t v12 = *(void *)(v17 + 8 * v11);
      ++v6;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v6 = v11 + 1;
      if (v11 + 1 >= v18) {
        goto LABEL_30;
      }
      unint64_t v12 = *(void *)(v17 + 8 * v6);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v6 = v11 + 2;
      if (v11 + 2 >= v18) {
        goto LABEL_30;
      }
      unint64_t v12 = *(void *)(v17 + 8 * v6);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v6 = v11 + 3;
      if (v11 + 3 >= v18) {
        goto LABEL_30;
      }
      unint64_t v12 = *(void *)(v17 + 8 * v6);
      if (v12)
      {
LABEL_22:
        unint64_t v4 = (v12 - 1) & v12;
        for (unint64_t i = __clz(__rbit64(v12)) + (v6 << 6); ; unint64_t i = v9 | (v6 << 6))
        {
          sub_1C21A9A38(*(void *)(a1 + 56) + 32 * i, (uint64_t)v21);
          sub_1C2206B9C(v21, v20);
          sub_1C21A9A38((uint64_t)v20, (uint64_t)v19);
          sub_1C237F924(0, &qword_1EA2E1ED0, v8, MEMORY[0x1E4FBB320]);
          if (swift_dynamicCast())
          {
            uint64_t v14 = *(void *)(v22 + 16);
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_1C226D8AC(0, v7[2] + 1, 1, v7);
              uint64_t v7 = (void *)result;
            }
            unint64_t v16 = v7[2];
            unint64_t v15 = v7[3];
            if (v16 >= v15 >> 1)
            {
              uint64_t result = (uint64_t)sub_1C226D8AC((void *)(v15 > 1), v16 + 1, 1, v7);
              uint64_t v7 = (void *)result;
            }
            v7[2] = v16 + 1;
            v7[v16 + 4] = v14;
            if (!v4) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
            if (!v4) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v9 = __clz(__rbit64(v4));
          v4 &= v4 - 1;
        }
      }
      int64_t v13 = v11 + 4;
      if (v13 < v18)
      {
        unint64_t v12 = *(void *)(v17 + 8 * v13);
        if (v12)
        {
          int64_t v6 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v6 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_32;
          }
          if (v6 >= v18) {
            break;
          }
          unint64_t v12 = *(void *)(v17 + 8 * v6);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_30:
    swift_release();
    return (uint64_t)v7;
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

id sub_1C2378DF8(void *a1, void *a2)
{
  uint64_t v5 = (uint64_t *)&v2[OBJC_IVAR___HRInternalStateProvider_healthExperienceStore];
  uint64_t v6 = sub_1C254CE00();
  uint64_t v7 = v2;
  uint64_t v8 = sub_1C254CDF0();
  uint64_t v9 = MEMORY[0x1E4F66F20];
  v5[3] = v6;
  v5[4] = v9;
  *uint64_t v5 = v8;
  *(void *)&v7[OBJC_IVAR___HRInternalStateProvider_recordCounts] = MEMORY[0x1E4FBC868];
  *(void *)&v7[OBJC_IVAR___HRInternalStateProvider_sub] = 0;
  uint64_t v10 = OBJC_IVAR___HRInternalStateProvider_loadState;
  _s9LoadStateCMa();
  uint64_t v11 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v11 + 112) = 0;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  *(_WORD *)(v11 + 120) = 1;
  *(void *)(v11 + 128) = v12;
  *(void *)&v7[v10] = v11;
  int64_t v13 = &v7[OBJC_IVAR___HRInternalStateProvider_changeHandler];
  *(void *)int64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  uint64_t v14 = OBJC_IVAR___HRInternalStateProvider_isObserving;
  char v24 = 0;
  sub_1C237F924(0, &qword_1EA2E1F38, MEMORY[0x1E4FBB390], MEMORY[0x1E4F674D8]);
  swift_allocObject();
  *(void *)&v7[v14] = sub_1C254D090();
  id v15 = objc_msgSend(a2, sel_healthStore);
  id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67710]), sel_initWithHealthStore_, v15);

  *(void *)&v7[OBJC_IVAR___HRInternalStateProvider_accountStore] = v16;
  *(void *)&v7[OBJC_IVAR___HRInternalStateProvider_conceptStore] = a1;
  *(void *)&v7[OBJC_IVAR___HRInternalStateProvider_healthRecordsStore] = a2;
  id v17 = a1;
  id v18 = a2;
  id v19 = objc_msgSend(v18, sel_healthStore);
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67730]), sel_initWithHealthStore_, v19);

  *(void *)&v7[OBJC_IVAR___HRInternalStateProvider_ingestionStore] = v20;
  v23.receiver = v7;
  v23.super_class = (Class)type metadata accessor for InternalStateProvider();
  id v21 = objc_msgSendSuper2(&v23, sel_init);
  sub_1C237C60C();

  return v21;
}

id InternalStateProvider.__allocating_init(healthStore:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AE08]), sel_initWithHealthStore_, a1);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0A0]), sel_initWithHealthStore_, a1);
  id v6 = objc_allocWithZone((Class)type metadata accessor for InternalStateProvider());
  id v7 = sub_1C2378DF8(v4, v5);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v7;
}

id InternalStateProvider.init(healthStore:)(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AE08]), sel_initWithHealthStore_, a1);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0A0]), sel_initWithHealthStore_, a1);
  id v4 = objc_allocWithZone((Class)type metadata accessor for InternalStateProvider());
  id v5 = sub_1C2378DF8(v2, v3);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t type metadata accessor for InternalStateProvider()
{
  return self;
}

id InternalStateProvider.__deallocating_deinit()
{
  swift_retain();
  sub_1C254D080();
  swift_release();
  if (*(void *)&v0[OBJC_IVAR___HRInternalStateProvider_sub])
  {
    swift_retain();
    sub_1C254EA00();
    swift_release();
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalStateProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C23794AC()
{
  *(void *)(v1 + 56) = v0;
  return MEMORY[0x1F4188298](sub_1C237953C, 0, 0);
}

uint64_t sub_1C237953C()
{
  uint64_t v1 = *(void **)(v0[7] + OBJC_IVAR___HRInternalStateProvider_accountStore);
  v0[5] = 0;
  id v2 = objc_msgSend(v1, sel_allAccountsWithError_, v0 + 5);
  uint64_t v3 = (void *)v0[5];
  if (v2)
  {
    id v4 = v2;
    uint64_t v5 = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E1530);
    unint64_t v6 = sub_1C254F710();
    v0[8] = v6;
    id v7 = v3;

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1C2550620();
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_4;
      }
    }
    else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      uint64_t v8 = (void *)v0[7];
      uint64_t v9 = swift_allocObject();
      v0[9] = v9;
      *(void *)(v9 + 16) = v8;
      id v10 = v8;
      uint64_t v11 = (void *)swift_task_alloc();
      v0[10] = v11;
      uint64_t v12 = type metadata accessor for InternalStateSection();
      *uint64_t v11 = v0;
      v11[1] = sub_1C23799E4;
      return MEMORY[0x1F411DF28](&unk_1EA2E1EC0, v9, v6, v5, v12);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for InternalStateItem();
    char v24 = (void *)swift_allocObject();
    v24[2] = 0;
    v24[3] = 0xE000000000000000;
    v24[4] = 0xD000000000000013;
    void v24[5] = 0x80000001C257FA80;
    sub_1C237F924(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C255CEB0;
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1C255CEB0;
    *(void *)(v26 + 32) = v24;
    uint64_t v31 = v26;
    sub_1C254F730();
    type metadata accessor for InternalStateSection();
    uint64_t v27 = swift_allocObject();
    strcpy((char *)(v27 + 16), "Account Status");
    *(unsigned char *)(v27 + 31) = -18;
    *(void *)(v27 + 32) = v31;
    *(void *)(v25 + 32) = v27;
    sub_1C254F730();
    uint64_t v22 = v25;
  }
  else
  {
    id v13 = v3;
    uint64_t v14 = (void *)sub_1C254C820();

    swift_willThrow();
    swift_getErrorValue();
    uint64_t v15 = sub_1C2550940();
    uint64_t v17 = v16;
    type metadata accessor for InternalStateItem();
    id v18 = (void *)swift_allocObject();
    v18[2] = 0xD000000000000016;
    v18[3] = 0x80000001C257FA60;
    _OWORD v18[4] = v15;
    v18[5] = v17;
    sub_1C237F924(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1C255CEB0;
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C255CEB0;
    *(void *)(v20 + 32) = v18;
    uint64_t v30 = v20;
    sub_1C254F730();
    type metadata accessor for InternalStateSection();
    uint64_t v21 = swift_allocObject();
    strcpy((char *)(v21 + 16), "Account Status");
    *(unsigned char *)(v21 + 31) = -18;
    *(void *)(v21 + 32) = v30;
    *(void *)(v19 + 32) = v21;
    sub_1C254F730();
    uint64_t v22 = v19;
  }
  id v28 = (uint64_t (*)(uint64_t))v0[1];
  return v28(v22);
}

uint64_t sub_1C23799E4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_1C2379B4C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  v3[16] = a1;
  v3[17] = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C237EDF0(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  v3[18] = swift_task_alloc();
  uint64_t v6 = sub_1C254CAD0();
  v3[19] = v6;
  v3[20] = *(void *)(v6 - 8);
  v3[21] = swift_task_alloc();
  sub_1C237EDF0(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], v5);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  uint64_t v7 = sub_1C254CB40();
  v3[26] = v7;
  v3[27] = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = *a2;
  v3[28] = v8;
  v3[29] = v9;
  return MEMORY[0x1F4188298](sub_1C2379D44, 0, 0);
}

uint64_t sub_1C2379D44()
{
  uint64_t v1 = *(void **)(v0 + 232);
  id v2 = objc_msgSend(v1, sel_identifier);
  sub_1C254CB20();

  id v3 = objc_msgSend(v1, sel_provenance);
  id v4 = objc_msgSend(v3, sel_title);

  uint64_t v5 = sub_1C254F470();
  uint64_t v7 = v6;

  sub_1C254F5A0();
  sub_1C237F6C0((unint64_t *)&qword_1EA2DE1E0, MEMORY[0x1E4F27990]);
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  *(void *)(v0 + 240) = v5;
  *(void *)(v0 + 248) = v7;
  id v8 = objc_msgSend(v1, sel_lastFetchDate);
  uint64_t v9 = *(void *)(v0 + 200);
  if (v8)
  {
    id v10 = v8;
    uint64_t v12 = *(void **)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 152);
    sub_1C254CA80();

    uint64_t v14 = (void (*)(uint64_t, uint64_t, uint64_t))v12[4];
    v14(v9, v11, v13);
    id v58 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v12[7];
    v58(v9, 0, 1, v13);
    uint64_t v15 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v12[6];
    if (v15(v9, 1, v13) != 1)
    {
      uint64_t v16 = *(void **)(v0 + 232);
      sub_1C237F4F0(*(void *)(v0 + 200), (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
      id v56 = sub_1C237E358();
      id v17 = objc_msgSend(v16, sel_lastFetchDate);
      uint64_t v18 = *(void *)(v0 + 192);
      if (v17)
      {
        uint64_t v19 = v17;
        uint64_t v20 = *(void *)(v0 + 168);
        uint64_t v21 = *(void *)(v0 + 152);
        sub_1C254CA80();

        v14(v18, v20, v21);
        v58(v18, 0, 1, v21);
        if (v15(v18, 1, v21) != 1)
        {
          uint64_t v22 = *(void *)(v0 + 192);
          uint64_t v24 = *(void *)(v0 + 152);
          uint64_t v23 = *(void *)(v0 + 160);
          uint64_t v25 = (void *)sub_1C254CA50();
          (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
          id v26 = objc_msgSend(v56, sel_stringFromDate_, v25);

          uint64_t v27 = sub_1C254F470();
          unint64_t v29 = v28;

          goto LABEL_8;
        }
      }
      else
      {
        v58(*(void *)(v0 + 192), 1, 1, *(void *)(v0 + 152));
      }
      __break(1u);
      goto LABEL_20;
    }
  }
  else
  {
    id v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 160) + 56);
    v58(*(void *)(v0 + 200), 1, 1, *(void *)(v0 + 152));
  }
  sub_1C237F4F0(*(void *)(v0 + 200), (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  unint64_t v29 = 0xE500000000000000;
  uint64_t v27 = 0x726576656ELL;
LABEL_8:
  *(void *)(v0 + 256) = v27;
  *(void *)(v0 + 264) = v29;
  id v30 = objc_msgSend(*(id *)(v0 + 232), sel_lastFullFetchDate);
  uint64_t v31 = *(void *)(v0 + 184);
  if (v30)
  {
    uint64_t v32 = v30;
    uint64_t v34 = *(void *)(v0 + 160);
    uint64_t v33 = *(void *)(v0 + 168);
    uint64_t v35 = *(void *)(v0 + 152);
    sub_1C254CA80();

    id v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32);
    v36(v31, v33, v35);
    v58(v31, 0, 1, v35);
    id v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
    if (v37(v31, 1, v35) != 1)
    {
      id v38 = *(void **)(v0 + 232);
      sub_1C237F4F0(*(void *)(v0 + 184), (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
      id v57 = sub_1C237E358();
      id v39 = objc_msgSend(v38, sel_lastFullFetchDate);
      uint64_t v18 = *(void *)(v0 + 176);
      if (v39)
      {
        id v40 = v39;
        uint64_t v41 = *(void *)(v0 + 168);
        uint64_t v42 = *(void *)(v0 + 152);
        sub_1C254CA80();

        v36(v18, v41, v42);
        v58(v18, 0, 1, v42);
        uint64_t v43 = v37(v18, 1, v42);
        if (v43 != 1)
        {
          uint64_t v44 = *(void *)(v0 + 176);
          uint64_t v46 = *(void *)(v0 + 152);
          uint64_t v45 = *(void *)(v0 + 160);
          id v47 = (void *)sub_1C254CA50();
          (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
          id v48 = objc_msgSend(v57, sel_stringFromDate_, v47);

          uint64_t v49 = sub_1C254F470();
          unint64_t v51 = v50;

          goto LABEL_15;
        }
LABEL_21:
        __break(1u);
        return MEMORY[0x1F41881E8](v43);
      }
LABEL_20:
      uint64_t v43 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v58)(v18, 1, 1, *(void *)(v0 + 152));
      goto LABEL_21;
    }
  }
  else
  {
    v58(*(void *)(v0 + 184), 1, 1, *(void *)(v0 + 152));
  }
  sub_1C237F4F0(*(void *)(v0 + 184), (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  unint64_t v51 = 0xE500000000000000;
  uint64_t v49 = 0x726576656ELL;
LABEL_15:
  *(void *)(v0 + 272) = v49;
  *(void *)(v0 + 280) = v51;
  id v52 = *(void **)(*(void *)(v0 + 136) + OBJC_IVAR___HRInternalStateProvider_healthRecordsStore);
  uint64_t v53 = sub_1C254CB00();
  *(void *)(v0 + 288) = v53;
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_1C237A420;
  uint64_t v54 = swift_continuation_init();
  *(void *)(v0 + 80) = MEMORY[0x1E4F143A8];
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_1C237ADA8;
  *(void *)(v0 + 104) = &block_descriptor_1;
  *(void *)(v0 + 112) = v54;
  objc_msgSend(v52, sel_fetchFHIRJSONDocumentWithAccountIdentifier_completion_, v53, v0 + 80);
  uint64_t v43 = v0 + 16;
  return MEMORY[0x1F41881E8](v43);
}

uint64_t sub_1C237A420()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 296) = v1;
  if (v1) {
    id v2 = sub_1C237A990;
  }
  else {
    id v2 = sub_1C237A530;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C237A530()
{
  uint64_t v1 = *(void *)(v0 + 120);

  id v2 = (void *)sub_1C2378B50(v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = v2[2];
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v2 + 4;
    while (1)
    {
      uint64_t v6 = *v5++;
      BOOL v7 = __OFADD__(v4, v6);
      v4 += v6;
      if (v7) {
        break;
      }
      if (!--v3) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_8;
  }
  uint64_t v4 = 0;
LABEL_7:
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v0 + 272);
  uint64_t v8 = *(void *)(v0 + 280);
  uint64_t v10 = *(void *)(v0 + 256);
  uint64_t v11 = *(void *)(v0 + 264);
  uint64_t v12 = *(void **)(v0 + 232);
  uint64_t v38 = *(void *)(v0 + 144);
  sub_1C237F924(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  id v2 = (void *)swift_allocObject();
  *((_OWORD *)v2 + 1) = xmmword_1C255DBA0;
  id v13 = objc_msgSend(v12, sel_displayableStatus);
  uint64_t v14 = sub_1C254F470();
  uint64_t v16 = v15;

  type metadata accessor for InternalStateItem();
  id v17 = (void *)swift_allocObject();
  v17[2] = 0x6574617453;
  v17[3] = 0xE500000000000000;
  void v17[4] = v14;
  v17[5] = v16;
  v2[4] = v17;
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = 0x746546207473614CLL;
  v18[3] = 0xEA00000000006863;
  _OWORD v18[4] = v10;
  v18[5] = v11;
  v2[5] = v18;
  uint64_t v19 = (void *)swift_allocObject();
  long long v19[2] = 0x6C7546207473614CLL;
  v19[3] = 0xEF6863746546206CLL;
  void v19[4] = v9;
  v19[5] = v8;
  v2[6] = v19;
  uint64_t v20 = sub_1C254CBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v38, 1, 1, v20);
  sub_1C2269E20();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1C255CD90;
  uint64_t v22 = MEMORY[0x1E4FBB5C8];
  *(void *)(v21 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v21 + 64) = v22;
  *(void *)(v21 + 32) = v4;
  if (qword_1EBB6EF40 != -1) {
    goto LABEL_12;
  }
LABEL_8:
  uint64_t v36 = *(void *)(v0 + 240);
  uint64_t v37 = *(void *)(v0 + 248);
  uint64_t v23 = *(void *)(v0 + 216);
  uint64_t v33 = *(void *)(v0 + 208);
  uint64_t v34 = *(void *)(v0 + 224);
  uint64_t v24 = *(void *)(v0 + 144);
  uint64_t v35 = *(void **)(v0 + 128);
  id v25 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v26 = sub_1C254F4A0();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1C237F4F0(v24, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
  unint64_t v29 = (void *)swift_allocObject();
  v29[2] = 0xD000000000000014;
  v29[3] = 0x80000001C257FAD0;
  void v29[4] = v26;
  v29[5] = v28;
  v2[7] = v29;
  sub_1C254F730();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v34, v33);
  type metadata accessor for InternalStateSection();
  id v30 = (void *)swift_allocObject();
  v30[2] = v36;
  void v30[3] = v37;
  unsigned char v30[4] = v2;
  void *v35 = v30;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_1C237A990()
{
  uint64_t v1 = (void *)v0[36];
  id v2 = (void *)v0[37];
  swift_willThrow();

  uint64_t v4 = v0[34];
  uint64_t v3 = v0[35];
  uint64_t v6 = v0[32];
  uint64_t v5 = v0[33];
  BOOL v7 = (void *)v0[29];
  uint64_t v8 = v0[18];
  sub_1C237F924(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255DBA0;
  id v10 = objc_msgSend(v7, sel_displayableStatus);
  uint64_t v11 = sub_1C254F470();
  uint64_t v13 = v12;

  type metadata accessor for InternalStateItem();
  uint64_t v14 = (void *)swift_allocObject();
  long long v14[2] = 0x6574617453;
  v14[3] = 0xE500000000000000;
  v14[4] = v11;
  v14[5] = v13;
  *(void *)(v9 + 32) = v14;
  uint64_t v15 = (void *)swift_allocObject();
  id v15[2] = 0x746546207473614CLL;
  v15[3] = 0xEA00000000006863;
  void v15[4] = v6;
  void v15[5] = v5;
  *(void *)(v9 + 40) = v15;
  uint64_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = 0x6C7546207473614CLL;
  uint64_t v16[3] = 0xEF6863746546206CLL;
  v16[4] = v4;
  v16[5] = v3;
  *(void *)(v9 + 48) = v16;
  uint64_t v17 = sub_1C254CBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
  sub_1C2269E20();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C255CD90;
  uint64_t v19 = MEMORY[0x1E4FBB5C8];
  *(void *)(v18 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v18 + 64) = v19;
  *(void *)(v18 + 32) = 0;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  uint64_t v33 = v0[30];
  uint64_t v34 = v0[31];
  uint64_t v20 = v0[27];
  uint64_t v30 = v0[26];
  uint64_t v31 = v0[28];
  uint64_t v21 = v0[18];
  uint64_t v32 = (void *)v0[16];
  id v22 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v23 = sub_1C254F4A0();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1C237F4F0(v21, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
  uint64_t v26 = (void *)swift_allocObject();
  void v26[2] = 0xD000000000000014;
  v26[3] = 0x80000001C257FAD0;
  unsigned char v26[4] = v23;
  void v26[5] = v25;
  *(void *)(v9 + 56) = v26;
  sub_1C254F730();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v31, v30);
  type metadata accessor for InternalStateSection();
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = v33;
  v27[3] = v34;
  unsigned char v27[4] = v9;
  *uint64_t v32 = v27;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_1C237ADA8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    **(void **)(*(void *)(v3 + 64) + 40) = sub_1C254F2D0();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1C237AE90()
{
  v1[6] = v0;
  sub_1C254F4E0();
  v1[7] = swift_task_alloc();
  sub_1C254C430();
  v1[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C237AF4C, 0, 0);
}

uint64_t sub_1C237AF4C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  *(void *)(swift_task_alloc() + 16) = v1;
  swift_retain();
  sub_1C254D080();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___HRInternalStateProvider_loadState);
  *(void *)(v0 + 72) = v2;
  return MEMORY[0x1F4188298](sub_1C237B014, v2, 0);
}

uint64_t sub_1C237B014()
{
  uint64_t v1 = *(void *)(v0 + 72);
  if ((*(unsigned char *)(v1 + 120) & 1) != 0 || *(unsigned char *)(v1 + 121) != 1)
  {
    sub_1C237F6C0(&qword_1EA2E1D20, (void (*)(uint64_t))_s9LoadStateCMa);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1C237B564;
    return MEMORY[0x1F41880D8]();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1C237B170, 0, 0);
  }
}

uint64_t sub_1C237B170()
{
  sub_1C254C470();
  swift_allocObject();
  v0[10] = sub_1C254C460();
  sub_1C254C420();
  sub_1C254C440();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C237B254;
  v1[5] = v0[6];
  return MEMORY[0x1F4188298](sub_1C237BA50, 0, 0);
}

uint64_t sub_1C237B254(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C237B354, 0, 0);
}

uint64_t sub_1C237B354()
{
  v0[4] = v0[12];
  sub_1C237EDF0(0, &qword_1EA2E1D30, (uint64_t (*)(uint64_t))type metadata accessor for InternalStateSection, MEMORY[0x1E4FBB320]);
  sub_1C237C53C();
  uint64_t v1 = sub_1C254C450();
  unint64_t v3 = v2;
  swift_bridgeObjectRelease();
  sub_1C254F4C0();
  uint64_t v4 = sub_1C254F490();
  if (v5)
  {
    unint64_t v6 = v4;
    unint64_t v7 = v5;
    sub_1C2205E6C(v1, v3);
    swift_release();
  }
  else
  {
    unint64_t v6 = 0xD000000000000023;
    sub_1C2205E6C(v1, v3);
    swift_release();
    unint64_t v7 = 0x80000001C257F930;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(unint64_t, unint64_t))v0[1];
  return v8(v6, v7);
}

uint64_t sub_1C237B564()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C237B674, v1, 0);
}

uint64_t sub_1C237B674()
{
  return MEMORY[0x1F4188298](sub_1C237B170, 0, 0);
}

uint64_t sub_1C237B820(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C237B8C8;
  return sub_1C237AE90();
}

uint64_t sub_1C237B8C8()
{
  uint64_t v1 = *(void (***)(void, void))(*v0 + 24);
  unint64_t v2 = *(void **)(*v0 + 16);
  uint64_t v6 = *v0;
  swift_task_dealloc();

  uint64_t v3 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  ((void (**)(void, void *))v1)[2](v1, v3);

  _Block_release(v1);
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_1C237BA30()
{
  *(void *)(v1 + 40) = v0;
  return MEMORY[0x1F4188298](sub_1C237BA50, 0, 0);
}

uint64_t sub_1C237BA50()
{
  uint64_t v1 = v0[5];
  sub_1C237F924(0, (unint64_t *)&qword_1EBB6F4E0, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  v0[6] = v2;
  uint64_t v3 = swift_allocObject();
  v0[7] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_1C255CEB0;
  uint64_t v4 = swift_allocObject();
  v0[8] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_1C255CD70;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR___HRInternalStateProvider_loadState);
  v0[9] = v5;
  return MEMORY[0x1F4188298](sub_1C237BB34, v5, 0);
}

uint64_t sub_1C237BB34()
{
  uint64_t v1 = *(void *)(v0 + 72);
  *(void *)(v0 + 80) = *(void *)(v1 + 112);
  *(unsigned char *)(v0 + 112) = *(unsigned char *)(v1 + 120);
  return MEMORY[0x1F4188298](sub_1C237BB64, 0, 0);
}

uint64_t sub_1C237BB64()
{
  if (*(unsigned char *)(v0 + 112))
  {
    unint64_t v1 = 0xEE0064656E696D72;
    unint64_t v2 = 0x6574654420746F4ELL;
  }
  else
  {
    unint64_t v1 = 0x80000001C2576440;
    unint64_t v2 = 0xD000000000000013;
    switch(*(void *)(v0 + 80))
    {
      case 0:
        unint64_t v1 = 0xED00006574617453;
        unint64_t v2 = 0x206E776F6E6B6E55;
        break;
      case 1:
        unint64_t v1 = 0xED0000676E697473;
        unint64_t v2 = 0x65676E4920746F4ELL;
        break;
      case 2:
        break;
      case 3:
        unint64_t v1 = 0xE900000000000067;
        unint64_t v2 = 0x6E69747365676E49;
        break;
      default:
        unint64_t v2 = 0x206E776F6E6B6E55;
        unint64_t v1 = 0xEE002E6574617453;
        break;
    }
  }
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 40);
  type metadata accessor for InternalStateItem();
  uint64_t v5 = (void *)swift_allocObject();
  long long v5[2] = 0x6F69747365676E49;
  v5[3] = 0xEF6574617453206ELL;
  v5[4] = v2;
  v5[5] = v1;
  *(void *)(v3 + 32) = v5;
  id v6 = objc_msgSend(*(id *)(v4 + OBJC_IVAR___HRInternalStateProvider_conceptStore), sel_currentConceptIndexerState);
  if (v6)
  {
    if (v6 == (id)1)
    {
      unint64_t v7 = 0xE400000000000000;
      uint64_t v8 = 1701602377;
    }
    else if (v6 == (id)2)
    {
      unint64_t v7 = 0xE800000000000000;
      uint64_t v8 = 0x676E697865646E49;
    }
    else
    {
      uint64_t v8 = 0x206E776F6E6B6E55;
      unint64_t v7 = 0xEE002E6574617453;
    }
  }
  else
  {
    unint64_t v7 = 0xE700000000000000;
    uint64_t v8 = 0x6C616974696E49;
  }
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v9 = *(void *)(v0 + 64);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0x7453207865646E49;
  v11[3] = 0xEB00000000657461;
  void v11[4] = v8;
  long long v11[5] = v7;
  *(void *)(v9 + 40) = v11;
  sub_1C254F730();
  *(void *)(v0 + 88) = type metadata accessor for InternalStateSection();
  uint64_t v12 = swift_allocObject();
  strcpy((char *)(v12 + 16), "System States");
  *(_WORD *)(v12 + 30) = -4864;
  *(void *)(v12 + 32) = v9;
  *(void *)(v10 + 32) = v12;
  sub_1C254F730();
  *(void *)(v0 + 16) = v10;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v13;
  void *v13 = v0;
  v13[1] = sub_1C237BEA0;
  v13[7] = *(void *)(v0 + 40);
  return MEMORY[0x1F4188298](sub_1C237953C, 0, 0);
}

uint64_t sub_1C237BEA0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 104) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C237BFA0, 0, 0);
}

uint64_t sub_1C237BFA0()
{
  uint64_t v33 = v0;
  uint64_t v1 = v0 + 2;
  unint64_t v2 = (void *)v0[5];
  sub_1C2272620(v0[13]);
  id v3 = v2;
  uint64_t v4 = sub_1C2269AF4(0xD000000000000012, 0x80000001C257FB50);

  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C255CEB0;
  *(void *)(v5 + 32) = v4;
  v32[0] = v5;
  sub_1C254F730();
  uint64_t v6 = v32[0];
  unint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0xD000000000000034;
  v7[3] = 0x80000001C257FB10;
  void v7[4] = v6;
  _s15HealthRecordsUI19DisplayItemProviderC19supportedCategoriesShyAA0D8CategoryVGvgZ_0();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C228FD90(v8);
  swift_bridgeObjectRelease();
  v32[0] = (uint64_t)v9;
  sub_1C2456EE8(v32);
  uint64_t v10 = (void *)v0[5];
  swift_bridgeObjectRelease();
  uint64_t v11 = v32[0];
  id v12 = v10;
  uint64_t v13 = sub_1C237D960(v11, (uint64_t)v12);

  swift_release();
  uint64_t v14 = (void *)swift_allocObject();
  long long v14[2] = 0xD00000000000001BLL;
  v14[3] = 0x80000001C257FB70;
  v14[4] = v13;
  _s15HealthRecordsUI19DisplayItemProviderC19supportedCategoriesShyAA0D8CategoryVGvgZ_0();
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C228FD90(v15);
  swift_bridgeObjectRelease();
  v32[0] = (uint64_t)v16;
  sub_1C2456EE8(v32);
  uint64_t v17 = (void *)v0[5];
  swift_bridgeObjectRelease();
  uint64_t v18 = v32[0];
  uint64_t v19 = v17;
  uint64_t v20 = sub_1C237DE3C(v18, v19);

  swift_release();
  uint64_t v21 = swift_allocObject();
  strcpy((char *)(v21 + 16), "Record Counts");
  *(_WORD *)(v21 + 30) = -4864;
  *(void *)(v21 + 32) = v20;
  unint64_t v22 = v0[2];
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1C2550620();
    swift_bridgeObjectRelease();
    uint64_t v24 = v31 + 3;
    if (!__OFADD__(v31, 3))
    {
LABEL_3:
      sub_1C25041B0(v24, 1);
      sub_1C254F730();
      uint64_t v25 = swift_retain();
      MEMORY[0x1C8757C00](v25);
      if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v24 = v23 + 3;
    if (!__OFADD__(v23, 3)) {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_14:
  sub_1C254F760();
LABEL_4:
  sub_1C254F790();
  sub_1C254F730();
  uint64_t v26 = swift_retain();
  MEMORY[0x1C8757C00](v26);
  if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  uint64_t v27 = swift_retain();
  MEMORY[0x1C8757C00](v27);
  if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C254F760();
  }
  sub_1C254F790();
  sub_1C254F730();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v28 = v0[2];
  unint64_t v29 = (uint64_t (*)(uint64_t))v0[1];
  return v29(v28);
}

void sub_1C237C3BC(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C254F1D0();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = MEMORY[0x1F4188790](v4).n128_u64[0];
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) == 0)
  {
    *a1 = 1;
    objc_msgSend(*(id *)(a2 + OBJC_IVAR___HRInternalStateProvider_ingestionStore), sel_addIngestionStateListener_, a2, v6);
    uint64_t v9 = *(void **)(a2 + OBJC_IVAR___HRInternalStateProvider_conceptStore);
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E4FBCB48], v4);
    uint64_t v10 = (void *)sub_1C254FCC0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    objc_msgSend(v9, sel_registerAsConceptObserver_onQueue_, a2, v10);
  }
}

void sub_1C237C52C(unsigned char *a1)
{
  sub_1C237C3BC(a1, *(void *)(v1 + 16));
}

void sub_1C237C534(uint64_t a1)
{
  sub_1C22A6F30(a1, v1);
}

unint64_t sub_1C237C53C()
{
  unint64_t result = qword_1EA2E1D38;
  if (!qword_1EA2E1D38)
  {
    sub_1C237EDF0(255, &qword_1EA2E1D30, (uint64_t (*)(uint64_t))type metadata accessor for InternalStateSection, MEMORY[0x1E4FBB320]);
    sub_1C237F6C0((unint64_t *)&unk_1EA2E1D40, (void (*)(uint64_t))type metadata accessor for InternalStateSection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1D38);
  }
  return result;
}

uint64_t sub_1C237C60C()
{
  sub_1C237EDF0(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v41 = (char *)&v31 - v2;
  uint64_t v42 = sub_1C254FC50();
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v38 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C237EE54();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v35 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C237EF50();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v39 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1C254FC60();
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v32 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254FC00();
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = sub_1C254F200();
  MEMORY[0x1F4188790](v10 - 8);
  if (qword_1EBB6EF30 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_1EBB6FB90;
  id v12 = objc_msgSend(*(id *)&v0[OBJC_IVAR___HRInternalStateProvider_healthRecordsStore], sel_healthStore);
  uint64_t v34 = v0;
  id v13 = v12;
  id v14 = objc_msgSend(v12, sel_profileIdentifier);

  uint64_t v45 = *(void *)(v11 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v15);
  *(&v31 - 2) = v11;
  *(&v31 - 1) = (uint64_t)v14;
  sub_1C254CEE0();
  type metadata accessor for CountProviderCollection();
  sub_1C237F6C0((unint64_t *)&qword_1EBB6F240, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();
  swift_release();

  uint64_t v16 = v46;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  sub_1C254F1E0();
  uint64_t v46 = (void *)MEMORY[0x1E4FBC860];
  sub_1C237F6C0((unint64_t *)&qword_1EBB6FF88, MEMORY[0x1E4FBCC10]);
  uint64_t v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C237EDF0(0, &qword_1EBB6FF50, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C237F708((unint64_t *)&qword_1EBB6FF58, &qword_1EBB6FF50, v17);
  sub_1C2550200();
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v32, *MEMORY[0x1E4FBCC58], v33);
  uint64_t v18 = (void *)sub_1C254FCB0();
  uint64_t v46 = *(void **)(v16[3] + 32);
  sub_1C237EEE8();
  sub_1C237F6C0((unint64_t *)&qword_1EA2E1A50, (void (*)(uint64_t))sub_1C237EEE8);
  sub_1C237F024();
  uint64_t v19 = v35;
  sub_1C254ECB0();
  uint64_t v20 = v38;
  sub_1C254FC40();
  uint64_t v46 = v18;
  uint64_t v21 = sub_1C254FC20();
  uint64_t v22 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v41, 1, 1, v21);
  sub_1C237F6C0((unint64_t *)&unk_1EA2E1E80, (void (*)(uint64_t))sub_1C237EE54);
  sub_1C22611AC();
  uint64_t v23 = v39;
  uint64_t v24 = v37;
  sub_1C254EC80();
  sub_1C237F4F0(v22, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28]);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v42);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v24);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v34;
  *(void *)(v25 + 16) = v34;
  sub_1C237F6C0((unint64_t *)&unk_1EA2E1E98, (void (*)(uint64_t))sub_1C237EF50);
  uint64_t v27 = v26;
  uint64_t v28 = v44;
  uint64_t v29 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v28);
  *(void *)&v27[OBJC_IVAR___HRInternalStateProvider_sub] = v29;

  swift_release();
  return swift_release();
}

uint64_t sub_1C237CE30(void *a1, char *a2)
{
  sub_1C237EDF0(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v12 - v5;
  *(void *)&a2[OBJC_IVAR___HRInternalStateProvider_recordCounts] = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void (**)(char *))&a2[OBJC_IVAR___HRInternalStateProvider_changeHandler];
  if (v7)
  {
    swift_retain();
    v7(a2);
    sub_1C221794C((uint64_t)v7);
  }
  uint64_t v8 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  void v9[4] = a2;
  uint64_t v10 = a2;
  sub_1C24D0A0C((uint64_t)v6, (uint64_t)&unk_1EA2E1EB0, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_1C237CFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return MEMORY[0x1F4188298](sub_1C237CFD0, 0, 0);
}

uint64_t sub_1C237CFD0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + OBJC_IVAR___HRInternalStateProvider_loadState);
  *(void *)(v0 + 48) = v1;
  return MEMORY[0x1F4188298](sub_1C237CFFC, v1, 0);
}

uint64_t sub_1C237CFFC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  *(unsigned char *)(v1 + 121) = 1;
  if ((*(unsigned char *)(v1 + 120) & 1) == 0)
  {
    uint64_t v2 = *(void *)(v0 + 48) + 128;
    swift_beginAccess();
    uint64_t v3 = *(void *)v2;
    uint64_t v4 = *(void *)(*(void *)v2 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = v3 + 40;
      do
      {
        uint64_t v6 = *(void (**)(uint64_t))(v5 - 8);
        uint64_t v7 = swift_retain();
        v6(v7);
        swift_release();
        v5 += 16;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
    *(void *)uint64_t v2 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

id InternalStateProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void InternalStateProvider.init()()
{
}

uint64_t InternalStateProvider.ingestionStateDidUpdate(clinicalIngestionStore:state:)(uint64_t a1, uint64_t a2)
{
  return sub_1C237E640(a2);
}

uint64_t sub_1C237D190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1C237D1B0, 0, 0);
}

uint64_t sub_1C237D1B0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR___HRInternalStateProvider_loadState);
  *(void *)(v0 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1C237D1DC, v1, 0);
}

uint64_t sub_1C237D1DC()
{
  sub_1C22A6DB0(*(void *)(v0 + 24));
  return MEMORY[0x1F4188298](sub_1C237D244, 0, 0);
}

uint64_t sub_1C237D244()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void (**)(uint64_t))(v1 + OBJC_IVAR___HRInternalStateProvider_changeHandler);
  if (v2)
  {
    swift_retain();
    v2(v1);
    sub_1C221794C((uint64_t)v2);
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C237D354(uint64_t result)
{
  uint64_t v1 = *(void (**)(uint64_t))(result + OBJC_IVAR___HRInternalStateProvider_changeHandler);
  if (v1)
  {
    uint64_t v2 = result;
    swift_retain();
    v1(v2);
    return sub_1C221794C((uint64_t)v1);
  }
  return result;
}

uint64_t sub_1C237D434(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1C2223E3C;
  return v6();
}

uint64_t sub_1C237D500(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1C2223E3C;
  return v7();
}

uint64_t sub_1C237D5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254F840();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C254F830();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C237F4F0(a1, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C254F7D0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1C237D78C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C237D868;
  return v6(a1);
}

uint64_t sub_1C237D868()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C237D960(uint64_t a1, uint64_t a2)
{
  sub_1C237EDF0(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v36 - v6;
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v38 = v7;
    id v47 = v2;
    uint64_t v54 = MEMORY[0x1E4FBC860];
    sub_1C2550490();
    uint64_t v39 = a2 + OBJC_IVAR___HRInternalStateProvider_healthExperienceStore;
    uint64_t v10 = (void **)(a1 + 96);
    long long v36 = xmmword_1C255CD90;
    do
    {
      uint64_t v45 = v8;
      char v17 = *((unsigned char *)v10 - 64);
      uint64_t v19 = (uint64_t)*(v10 - 5);
      uint64_t v18 = (uint64_t)*(v10 - 4);
      id v41 = *(v10 - 7);
      uint64_t v42 = v18;
      uint64_t v20 = (uint64_t)*(v10 - 3);
      uint64_t v21 = (uint64_t)*(v10 - 2);
      uint64_t v22 = *v10;
      sub_1C21F4424(v39, (uint64_t)v51);
      uint64_t v23 = v52;
      id v40 = (id)v53;
      __swift_project_boxed_opaque_existential_1Tm(v51, v52);
      LOBYTE(v49) = v17;
      uint64_t v46 = v19;
      swift_bridgeObjectRetain_n();
      uint64_t v43 = v20;
      swift_bridgeObjectRetain_n();
      uint64_t v44 = v21;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v24 = v22;
      id v25 = v41;
      id v41 = v24;
      id v26 = v25;
      uint64_t v27 = v47;
      uint64_t v28 = sub_1C225FC7C((unsigned __int8 *)&v49, v23, (uint64_t)v40);
      if (v27)
      {
        uint64_t v49 = 0;
        unint64_t v50 = 0xE000000000000000;
        sub_1C25503A0();
        sub_1C254F5A0();
        id v48 = v27;
        sub_1C21FFE74(0, (unint64_t *)&qword_1EBB70060);
        sub_1C25504F0();
        sub_1C254F5A0();

        id v47 = 0;
        uint64_t v11 = v49;
        unint64_t v12 = v50;
        uint64_t v13 = v45;
      }
      else
      {
        uint64_t v29 = v28;
        id v40 = v26;
        id v47 = 0;
        uint64_t v30 = sub_1C254CBD0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v38, 1, 1, v30);
        sub_1C2269E20();
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = v36;
        *(void *)(v31 + 56) = MEMORY[0x1E4FBB550];
        *(void *)(v31 + 64) = MEMORY[0x1E4FBB5C8];
        *(void *)(v31 + 32) = v29;
        if (qword_1EBB6EF40 != -1) {
          swift_once();
        }
        id v32 = (id)qword_1EBB6FBC8;
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_1C254C730();
        unint64_t v12 = v33;
        uint64_t v13 = v45;
        if (*(void *)(v31 + 16))
        {
          uint64_t v34 = (uint64_t)v38;
          uint64_t v11 = sub_1C254F4A0();
          unint64_t v37 = v35;
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v12 = v37;
        }
        else
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          uint64_t v34 = (uint64_t)v38;
        }
        sub_1C237F4F0(v34, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
        id v26 = v40;
      }
      type metadata accessor for InternalStateItem();
      id v14 = (void *)swift_allocObject();
      uint64_t v15 = v43;
      long long v14[2] = v42;
      v14[3] = v15;
      v14[4] = v11;
      v14[5] = v12;
      id v16 = v41;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      v10 += 9;
      uint64_t v8 = v13 - 1;
    }
    while (v8);
    return v54;
  }
  return result;
}

uint64_t sub_1C237DE3C(uint64_t a1, char *a2)
{
  sub_1C237EDF0(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v30 = v2;
    uint64_t v40 = MEMORY[0x1E4FBC860];
    sub_1C2550490();
    uint64_t v10 = a1 + 32;
    uint64_t v11 = OBJC_IVAR___HRInternalStateProvider_recordCounts;
    unint64_t v35 = v37;
    long long v32 = xmmword_1C255CD90;
    uint64_t v31 = v7;
    uint64_t v33 = OBJC_IVAR___HRInternalStateProvider_recordCounts;
    while (1)
    {
      uint64_t v38 = *(void *)(v10 + 64);
      long long v15 = *(_OWORD *)(v10 + 48);
      v37[0] = *(_OWORD *)(v10 + 32);
      v37[1] = v15;
      long long v16 = *(_OWORD *)(v10 + 16);
      v36[0] = *(_OWORD *)v10;
      v36[1] = v16;
      long long v39 = *v35;
      uint64_t v17 = *(void *)&a2[v11];
      uint64_t v18 = *(void *)(v17 + 16);
      sub_1C2201A54((uint64_t)v36);
      sub_1C2201A54((uint64_t)v36);
      uint64_t v19 = a2;
      sub_1C21F10AC((uint64_t)&v39);
      if (v18)
      {
        swift_bridgeObjectRetain();
        sub_1C24578FC(v36);
        if (v21)
        {
          uint64_t v34 = v19;
          uint64_t v22 = *(void *)(*(void *)(v17 + 56) + 8 * v20);
          swift_bridgeObjectRelease();
          uint64_t v23 = sub_1C254CBD0();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 1, 1, v23);
          sub_1C2269E20();
          uint64_t v24 = swift_allocObject();
          *(_OWORD *)(v24 + 16) = v32;
          *(void *)(v24 + 56) = MEMORY[0x1E4FBB550];
          *(void *)(v24 + 64) = MEMORY[0x1E4FBB5C8];
          *(void *)(v24 + 32) = v22;
          if (qword_1EBB6EF40 != -1) {
            swift_once();
          }
          id v25 = (id)qword_1EBB6FBC8;
          swift_bridgeObjectRetain();
          uint64_t v12 = sub_1C254C730();
          unint64_t v13 = v26;
          if (*(void *)(v24 + 16))
          {
            uint64_t v12 = sub_1C254F4A0();
            uint64_t v27 = a2;
            unint64_t v29 = v28;
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v13 = v29;
            a2 = v27;
            uint64_t v7 = v31;
          }
          else
          {
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
          }
          sub_1C237F4F0((uint64_t)v7, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78]);
          uint64_t v11 = v33;
          uint64_t v19 = v34;
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v12 = 0x206E776F6E6B6E55;
      unint64_t v13 = 0xED0000746E756F43;
LABEL_5:
      type metadata accessor for InternalStateItem();
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = v39;
      *(void *)(v14 + 32) = v12;
      *(void *)(v14 + 40) = v13;
      sub_1C2201ABC((uint64_t)v36);

      sub_1C2201ABC((uint64_t)v36);
      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      v10 += 72;
      if (!--v8) {
        return v40;
      }
    }
  }
  return result;
}

uint64_t sub_1C237E200(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = (uint64_t *)(v2 + OBJC_IVAR___HRInternalStateProvider_changeHandler);
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR___HRInternalStateProvider_changeHandler);
  *uint64_t v4 = a1;
  v4[1] = a2;
  sub_1C223E0BC(a1);
  uint64_t v6 = sub_1C221794C(v5);
  uint64_t v7 = (void (*)(uint64_t))*v4;
  if (*v4)
  {
    MEMORY[0x1F4188790](v6);
    sub_1C223E0BC((uint64_t)v7);
    swift_retain();
    sub_1C254D080();
    swift_release();
    v7(v3);
    return sub_1C221794C((uint64_t)v7);
  }
  else
  {
    MEMORY[0x1F4188790](v6);
    swift_retain();
    sub_1C254D080();
    return swift_release();
  }
}

id sub_1C237E358()
{
  uint64_t v0 = sub_1C254CBE0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C254CCC0();
  uint64_t v4 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C254CBD0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  sub_1C254CB50();
  uint64_t v12 = (void *)sub_1C254CB80();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  objc_msgSend(v11, sel_setLocale_, v12);

  unint64_t v13 = (void *)sub_1C254F430();
  objc_msgSend(v11, sel_setDateFormat_, v13);

  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F27B20], v0);
  sub_1C254CBF0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v14 = (void *)sub_1C254CC30();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v17);
  objc_msgSend(v11, sel_setCalendar_, v14);

  return v11;
}

uint64_t sub_1C237E640(uint64_t a1)
{
  sub_1C237EDF0(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v15 - v4;
  uint64_t v6 = sub_1C254F840();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  void v8[4] = v1;
  void v8[5] = a1;
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  id v9 = v1;
  if (a1 == 1)
  {
    sub_1C237F4F0((uint64_t)v5, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  else
  {
    sub_1C254F830();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
    if (v8[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v10 = sub_1C254F7D0();
      uint64_t v11 = v12;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v11 = 0;
    }
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &unk_1EA2E1F28;
  *(void *)(v13 + 24) = v8;
  if (v11 | v10)
  {
    v15[0] = 0;
    v15[1] = 0;
    id v15[2] = v10;
    v15[3] = v11;
  }
  swift_task_create();
  return swift_release();
}

uint64_t _s15HealthRecordsUI21InternalStateProviderC12conceptStore_21indexManagerDidChangeySo09HKConceptH0C_So0m5IndexjE0VtF_0()
{
  uint64_t v1 = sub_1C254F1C0();
  uint64_t v14 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C254F200();
  uint64_t v4 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FF90);
  uint64_t v7 = (void *)sub_1C254FC70();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v0;
  aBlock[4] = sub_1C237F6B0;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C224E544;
  void aBlock[3] = &block_descriptor_56;
  id v9 = _Block_copy(aBlock);
  id v10 = v0;
  swift_release();
  sub_1C254F1E0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C237F6C0((unint64_t *)&qword_1EBB6FF10, MEMORY[0x1E4FBCB00]);
  uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C237EDF0(0, (unint64_t *)&qword_1EBB6FF30, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C237F708((unint64_t *)&qword_1EBB6FF40, (unint64_t *)&qword_1EBB6FF30, v11);
  sub_1C2550200();
  MEMORY[0x1C87581B0](0, v6, v3, v9);
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v13);
}

uint64_t method lookup function for InternalStateProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for InternalStateProvider);
}

uint64_t dispatch thunk of InternalStateProvider.fetchJSON()()
{
  uint64_t v2 = *(int **)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C237ECEC;
  return v5();
}

uint64_t sub_1C237ECEC(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

void sub_1C237EDF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C237EE54()
{
  if (!qword_1EA2E1E68)
  {
    sub_1C237EEE8();
    sub_1C237F6C0((unint64_t *)&qword_1EA2E1A50, (void (*)(uint64_t))sub_1C237EEE8);
    unint64_t v0 = sub_1C254E920();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E1E68);
    }
  }
}

void sub_1C237EEE8()
{
  if (!qword_1EBB6F400)
  {
    sub_1C23602D8();
    unint64_t v0 = sub_1C254EA90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F400);
    }
  }
}

void sub_1C237EF50()
{
  if (!qword_1EA2E1E70)
  {
    sub_1C237EE54();
    sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
    sub_1C237F6C0((unint64_t *)&unk_1EA2E1E80, (void (*)(uint64_t))sub_1C237EE54);
    sub_1C22611AC();
    unint64_t v0 = sub_1C254E960();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E1E70);
    }
  }
}

void sub_1C237F01C(void *a1@<X8>)
{
  sub_1C253EA24(*(void **)(v1 + 24), a1);
}

unint64_t sub_1C237F024()
{
  unint64_t result = qword_1EA2E1E90;
  if (!qword_1EA2E1E90)
  {
    sub_1C23602D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1E90);
  }
  return result;
}

uint64_t sub_1C237F08C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C237F0C4(void *a1)
{
  return sub_1C237CE30(a1, *(char **)(v1 + 16));
}

uint64_t sub_1C237F0CC()
{
  return objectdestroy_23Tm_0(40);
}

uint64_t sub_1C237F0D4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C2223E3C;
  v3[5] = v2;
  return MEMORY[0x1F4188298](sub_1C237CFD0, 0, 0);
}

uint64_t sub_1C237F180(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C222399C;
  return sub_1C2379B4C(a1, a2, v6);
}

uint64_t sub_1C237F230()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C237F270()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1C2223E3C;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1EA2E1ED8 + dword_1EA2E1ED8);
  return v5(v2, v3);
}

uint64_t sub_1C237F320()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1C2223E3C;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EA2E1EE8 + dword_1EA2E1EE8);
  return v6(v2, v3, v4);
}

uint64_t objectdestroy_36Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C237F424(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C2223E3C;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EA2E1EF8 + dword_1EA2E1EF8);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1C237F4F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C237EDF0(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C237F560()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C237F598(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C2223E3C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA2E1F08 + dword_1EA2E1F08);
  return v6(a1, v4);
}

id sub_1C237F650(unsigned char *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  objc_msgSend(*(id *)(v3 + OBJC_IVAR___HRInternalStateProvider_ingestionStore), sel_removeIngestionStateListener_, v3);
  id result = objc_msgSend(*(id *)(v3 + OBJC_IVAR___HRInternalStateProvider_conceptStore), sel_unregisterAsConceptObserver_, v3);
  *a1 = 0;
  return result;
}

uint64_t sub_1C237F6B0()
{
  return sub_1C237D354(*(void *)(v0 + 16));
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

uint64_t sub_1C237F6C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C237F708(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C237EDF0(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C237F76C()
{
  return objectdestroy_23Tm_0(48);
}

uint64_t objectdestroy_23Tm_0(uint64_t a1)
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v1, a1, 7);
}

uint64_t sub_1C237F7C0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[2] = v2;
  v4[3] = v3;
  v4[1] = sub_1C222399C;
  return MEMORY[0x1F4188298](sub_1C237D1B0, 0, 0);
}

uint64_t sub_1C237F86C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C2223E3C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA2E5200 + dword_1EA2E5200);
  return v6(a1, v4);
}

void sub_1C237F924(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C237F980()
{
  uint64_t v1 = *v0;
  sub_1C25509C0();
  id v2 = v1;
  sub_1C254FF80();

  return sub_1C2550A10();
}

void sub_1C237F9D0()
{
  id v1 = *v0;
  sub_1C254FF80();
}

uint64_t sub_1C237FA28()
{
  id v1 = *v0;
  sub_1C25509C0();
  id v2 = v1;
  sub_1C254FF80();

  return sub_1C2550A10();
}

uint64_t sub_1C237FA74()
{
  return sub_1C254FF70() & 1;
}

uint64_t sub_1C237FAC8()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  sub_1C25503A0();
  id v5 = objc_msgSend(*(id *)(v0 + 16), sel_UUID);
  sub_1C254CB20();

  uint64_t v6 = sub_1C254CAF0();
  unint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRelease();
  uint64_t v10 = v6;
  unint64_t v11 = v8;
  sub_1C254F5A0();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C237FCE4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 56);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicalRecordTimelineChartValueItem()
{
  return self;
}

uint64_t sub_1C237FDA0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C237FDD4()
{
  return sub_1C237FAC8();
}

uint64_t sub_1C237FDF8()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_1C25509C0();
  id v6 = objc_msgSend(*(id *)(v5 + 16), sel_UUID);
  sub_1C254CB20();

  sub_1C2382E34((unint64_t *)&qword_1EBB6F4E8, 255, MEMORY[0x1E4F27990]);
  sub_1C254F380();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1C254F570();
  return sub_1C2550A10();
}

uint64_t sub_1C237FF54()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*(id *)(*(void *)v0 + 16), sel_UUID, v3);
  sub_1C254CB20();

  sub_1C2382E34((unint64_t *)&qword_1EBB6F4E8, 255, MEMORY[0x1E4F27990]);
  sub_1C254F380();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  swift_bridgeObjectRetain();
  sub_1C254F570();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C23800B4()
{
  uint64_t v1 = sub_1C254CB40();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C25509C0();
  id v5 = objc_msgSend(*(id *)(*(void *)v0 + 16), sel_UUID);
  sub_1C254CB20();

  sub_1C2382E34((unint64_t *)&qword_1EBB6F4E8, 255, MEMORY[0x1E4F27990]);
  sub_1C254F380();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRetain();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  return sub_1C2550A10();
}

uint64_t sub_1C238022C()
{
  return sub_1C254FF70() & 1;
}

id sub_1C2380288()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v1 = objc_msgSend(self, sel_labelColor);
  objc_msgSend(v0, sel_setTextColor_, v1);

  id v2 = objc_msgSend(self, sel__preferredFontForTextStyle_variant_, *MEMORY[0x1E4FB2950], 1024);
  objc_msgSend(v0, sel_setFont_, v2);

  objc_msgSend(v0, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v0, sel_setNumberOfLines_, 0);
  return v0;
}

id sub_1C2380374(SEL *a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  id v5 = [self *a1];
  objc_msgSend(v4, sel_setTextColor_, v5);

  id v6 = objc_msgSend(self, sel__preferredFontForTextStyle_weight_, *MEMORY[0x1E4FB2950], *MEMORY[0x1E4FB09D8]);
  objc_msgSend(v4, sel_setFont_, v6);

  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v4, sel_setNumberOfLines_, a2);
  return v4;
}

id sub_1C2380474(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_titleLabel;
  uint64_t v10 = v4;
  *(void *)&v4[v9] = sub_1C2380288();
  uint64_t v11 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_subtitleLabel;
  *(void *)&v10[v11] = sub_1C2380374((SEL *)&selRef_secondaryLabelColor, 0);
  uint64_t v12 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueTitleLabel;
  *(void *)&v10[v12] = sub_1C2380374((SEL *)&selRef_secondaryLabelColor, 0);
  uint64_t v13 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueLabel;
  *(void *)&v10[v13] = sub_1C2380374((SEL *)&selRef_labelColor, 2);
  uint64_t v14 = &v10[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_item];
  *((void *)v14 + 4) = 0;
  *(_OWORD *)uint64_t v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  long long v15 = &v10[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_sectionContext];
  uint64_t v16 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);

  v19.receiver = v10;
  v19.super_class = (Class)type metadata accessor for MedicalRecordTimelineChartValueItemCell();
  id v17 = objc_msgSendSuper2(&v19, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C23807AC();

  return v17;
}

id sub_1C23805F8(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_titleLabel;
  id v4 = v1;
  *(void *)&v1[v3] = sub_1C2380288();
  uint64_t v5 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_subtitleLabel;
  *(void *)&v4[v5] = sub_1C2380374((SEL *)&selRef_secondaryLabelColor, 0);
  uint64_t v6 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueTitleLabel;
  *(void *)&v4[v6] = sub_1C2380374((SEL *)&selRef_secondaryLabelColor, 0);
  uint64_t v7 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueLabel;
  *(void *)&v4[v7] = sub_1C2380374((SEL *)&selRef_labelColor, 2);
  uint64_t v8 = &v4[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_item];
  *((void *)v8 + 4) = 0;
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  uint64_t v9 = &v4[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_sectionContext];
  uint64_t v10 = sub_1C254D370();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);

  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for MedicalRecordTimelineChartValueItemCell();
  id v11 = objc_msgSendSuper2(&v13, sel_initWithCoder_, a1);

  return v11;
}

uint64_t sub_1C23807AC()
{
  id v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C238302C(0, &qword_1EA2DE9F0, MEMORY[0x1E4FB0E38], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  long long v39 = (char *)&v36 - v3;
  uint64_t v4 = sub_1C254E600();
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v41 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1C254E5A0();
  uint64_t v6 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C238302C(0, &qword_1EA2DF3E0, MEMORY[0x1E4FB0F28], v1);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)&v36 - v10;
  uint64_t v12 = sub_1C254E710();
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)&double v14 = MEMORY[0x1F4188790](v12).n128_u64[0];
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(v0, sel_contentView, v14);
  objc_msgSend(v17, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_titleLabel]);

  id v18 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v18, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_subtitleLabel]);

  id v19 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v19, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueTitleLabel]);

  id v20 = objc_msgSend(v0, sel_contentView);
  objc_msgSend(v20, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueLabel]);

  sub_1C254CDB0();
  id v21 = (id)*MEMORY[0x1E4F39EA8];
  sub_1C254FE70();

  sub_1C2380DF4();
  uint64_t v22 = self;
  id v23 = objc_msgSend(v22, sel_secondarySystemGroupedBackgroundColor);
  objc_msgSend(v0, sel_setBackgroundColor_, v23);

  id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_init);
  objc_msgSend(v0, sel_setSelectedBackgroundView_, v24);

  id v25 = objc_msgSend(v0, sel_selectedBackgroundView);
  if (v25)
  {
    unint64_t v26 = v25;
    id v27 = objc_msgSend(v22, sel_tertiarySystemGroupedBackgroundColor);
    objc_msgSend(v26, sel_setBackgroundColor_, v27);
  }
  sub_1C254E6D0();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v16, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  MEMORY[0x1C8758250](v11);
  sub_1C238302C(0, &qword_1EA2DE9D8, MEMORY[0x1E4FB0E68], MEMORY[0x1E4FBBE00]);
  sub_1C254E620();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C255CD90;
  uint64_t v28 = *MEMORY[0x1E4FB0E18];
  unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 104);
  uint64_t v36 = v12;
  uint64_t v30 = v8;
  uint64_t v31 = v8;
  uint64_t v32 = v37;
  v29(v31, v28, v37);
  uint64_t v33 = sub_1C254E5B0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v39, 1, 1, v33);
  uint64_t v34 = v38;
  sub_1C254E5F0();
  sub_1C254E5C0();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v41);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v30, v32);
  sub_1C254FD80();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v36);
}

void sub_1C2380DF4()
{
  sub_1C21ACA3C();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C25648A0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_titleLabel];
  id v3 = objc_msgSend(v2, sel_leadingAnchor);
  id v4 = objc_msgSend(v0, sel_contentView);
  id v5 = objc_msgSend(v4, (SEL)&selRef_minusOrderedSet_ + 2);

  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_constant_, v5, 14.0);
  *(void *)(v1 + 32) = v6;
  id v7 = objc_msgSend(v2, sel_trailingAnchor);
  id v8 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v9 = objc_msgSend(v8, (SEL)&selRef_titleWidthConstraint + 4);

  id v10 = objc_msgSend(v7, (SEL)&selRef_chartDataCacheController + 7, v9, -16.0);
  *(void *)(v1 + 40) = v10;
  id v11 = objc_msgSend(v2, sel_topAnchor);
  id v12 = objc_msgSend(v0, (SEL)&selRef_categoriesBySourceAlphaOrdered);
  id v13 = objc_msgSend(v12, (SEL)&selRef_unsupportedSearchResults + 3);

  id v14 = objc_msgSend(v11, (SEL)&selRef_chartDataCacheController + 7, v13, 8.0);
  *(void *)(v1 + 48) = v14;
  uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_subtitleLabel];
  id v16 = objc_msgSend(v15, (SEL)&selRef_minusOrderedSet_ + 2);
  id v17 = objc_msgSend(v2, (SEL)&selRef_minusOrderedSet_ + 2);
  id v18 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v17);

  *(void *)(v1 + 56) = v18;
  id v19 = objc_msgSend(v15, sel_trailingAnchor);
  id v20 = objc_msgSend(v2, sel_trailingAnchor);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_, v20);

  *(void *)(v1 + 64) = v21;
  id v22 = objc_msgSend(v15, (SEL)&selRef_unsupportedSearchResults + 3);
  id v23 = objc_msgSend(v2, sel_bottomAnchor);
  id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  *(void *)(v1 + 72) = v24;
  id v25 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueTitleLabel];
  id v26 = objc_msgSend(v25, (SEL)&selRef_minusOrderedSet_ + 2);
  id v27 = objc_msgSend(v2, (SEL)&selRef_minusOrderedSet_ + 2);
  id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

  *(void *)(v1 + 80) = v28;
  id v29 = objc_msgSend(v25, sel_trailingAnchor);
  id v30 = objc_msgSend(v2, sel_trailingAnchor);
  id v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v30);

  *(void *)(v1 + 88) = v31;
  id v32 = objc_msgSend(v25, sel_topAnchor);
  id v33 = objc_msgSend(v15, sel_bottomAnchor);
  id v34 = objc_msgSend(v32, sel_constraintEqualToAnchor_constant_, v33, 7.0);

  *(void *)(v1 + 96) = v34;
  unint64_t v35 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueLabel];
  id v36 = objc_msgSend(v35, (SEL)&selRef_minusOrderedSet_ + 2);
  id v37 = objc_msgSend(v2, (SEL)&selRef_minusOrderedSet_ + 2);
  id v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v37);

  *(void *)(v1 + 104) = v38;
  id v39 = objc_msgSend(v35, sel_trailingAnchor);
  id v40 = objc_msgSend(v2, sel_trailingAnchor);
  id v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v40);

  *(void *)(v1 + 112) = v41;
  id v42 = objc_msgSend(v35, sel_topAnchor);
  id v43 = objc_msgSend(v25, sel_bottomAnchor);
  id v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

  *(void *)(v1 + 120) = v44;
  id v45 = objc_msgSend(v35, sel_bottomAnchor);
  id v46 = objc_msgSend(v0, sel_contentView);
  id v47 = objc_msgSend(v46, sel_bottomAnchor);

  id v48 = objc_msgSend(v45, sel_constraintEqualToAnchor_constant_, v47, -8.0);
  *(void *)(v1 + 128) = v48;
  sub_1C254F730();
  uint64_t v49 = self;
  sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE020);
  id v50 = (id)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v49, sel_activateConstraints_, v50);
}

void sub_1C2381454()
{
  uint64_t v1 = sub_1C254E560();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  id v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_item];
  swift_beginAccess();
  sub_1C2382EBC(v5, (uint64_t)v27, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
  if (!v27[3])
  {
    sub_1C2382F3C((uint64_t)v27, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
LABEL_6:
    sub_1C254E510();
    id v10 = v0;
    id v11 = sub_1C254E550();
    os_log_type_t v12 = sub_1C254FA20();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v25 = v1;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v24 = v2;
      id v14 = (uint8_t *)v13;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v26 = v15;
      *(_DWORD *)id v14 = 136446210;
      id v23 = v14 + 4;
      sub_1C2382EBC(v5, (uint64_t)v27, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
      sub_1C238302C(0, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8, MEMORY[0x1E4FBB718]);
      uint64_t v16 = sub_1C254F510();
      v27[0] = sub_1C21AD354(v16, v17, &v26);
      sub_1C2550120();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v11, v12, "Incorrect view model for MedicalRecordTimelineChartValueItem: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v15, -1, -1);
      MEMORY[0x1C875A0B0](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v25);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    return;
  }
  sub_1C22270A8();
  type metadata accessor for MedicalRecordTimelineChartValueItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v6 = v26;
  id v7 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_titleLabel];
  swift_bridgeObjectRetain();
  id v8 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setText_, v8);

  id v9 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_subtitleLabel];
  if (*(void *)(v6 + 56))
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_subtitleLabel], sel_setAttributedText_);
  }
  else
  {
    swift_bridgeObjectRetain();
    id v18 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setText_, v18);
  }
  id v19 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueTitleLabel];
  swift_bridgeObjectRetain();
  id v20 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setText_, v20);

  id v21 = *(void **)&v0[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueLabel];
  if (*(void *)(v6 + 88))
  {
    swift_bridgeObjectRetain();
    id v22 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v22 = 0;
  }
  objc_msgSend(v21, sel_setText_, v22);
  swift_release();
}

uint64_t sub_1C23818B8(uint64_t a1)
{
  uint64_t v18 = sub_1C254CD90();
  uint64_t v16 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  id v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F66300];
  sub_1C238302C(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v15 - v7;
  uint64_t v9 = sub_1C254D370();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  os_log_type_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v1;
  uint64_t v13 = v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_sectionContext;
  swift_beginAccess();
  uint64_t v19 = a1;
  sub_1C2382FAC(a1, v13, &qword_1EA2DF2E0, v5);
  swift_endAccess();
  sub_1C2382EBC(v13, (uint64_t)v8, &qword_1EA2DF2E0, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C2382F3C((uint64_t)v8, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_1C254D360();
    sub_1C2381E8C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v18);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return sub_1C2382F3C(v19, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
}

void (*sub_1C2381BA0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_1C254CD90();
  v3[4] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[5] = v5;
  v3[6] = malloc(*(void *)(v5 + 64));
  sub_1C238302C(0, &qword_1EA2DF2E0, MEMORY[0x1E4F66300], MEMORY[0x1E4FBB718]);
  v3[7] = malloc(*(void *)(*(void *)(v6 - 8) + 64));
  uint64_t v7 = sub_1C254D370();
  v3[8] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[9] = v8;
  uint64_t v9 = malloc(*(void *)(v8 + 64));
  uint64_t v10 = OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_sectionContext;
  v3[10] = v9;
  v3[11] = v10;
  swift_beginAccess();
  return sub_1C2381D14;
}

void sub_1C2381D14(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = *(void *)(v3 + 64);
    uint64_t v5 = *(void *)(v3 + 72);
    uint64_t v6 = *(void *)(v3 + 56);
    sub_1C2382EBC(*(void *)(v3 + 24) + *(void *)(v3 + 88), v6, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
    {
      sub_1C2382F3C(*(void *)(v3 + 56), &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
    }
    else
    {
      uint64_t v8 = *(void *)(v3 + 72);
      uint64_t v7 = *(void *)(v3 + 80);
      uint64_t v9 = *(void *)(v3 + 64);
      uint64_t v11 = *(void *)(v3 + 40);
      uint64_t v10 = *(void *)(v3 + 48);
      uint64_t v12 = *(void *)(v3 + 32);
      (*(void (**)(uint64_t, void, uint64_t))(v8 + 32))(v7, *(void *)(v3 + 56), v9);
      sub_1C254D360();
      sub_1C2381E8C();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    }
  }
  id v14 = *(void **)(v3 + 48);
  uint64_t v13 = *(void **)(v3 + 56);
  free(*(void **)(v3 + 80));
  free(v13);
  free(v14);
  free((void *)v3);
}

void sub_1C2381E8C()
{
  uint64_t v1 = v0;
  sub_1C25503A0();
  sub_1C254F470();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  sub_1C254CD80();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  sub_1C254CD70();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sub_1C254F430();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v2);

  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_titleLabel];
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  uint64_t v4 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityIdentifier_, v4);

  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_subtitleLabel];
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  uint64_t v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setAccessibilityIdentifier_, v6);

  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueTitleLabel];
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  uint64_t v8 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setAccessibilityIdentifier_, v8);

  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_valueLabel];
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setAccessibilityIdentifier_, v10);
}

id sub_1C238216C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordTimelineChartValueItemCell();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C238225C()
{
  return type metadata accessor for MedicalRecordTimelineChartValueItemCell();
}

uint64_t type metadata accessor for MedicalRecordTimelineChartValueItemCell()
{
  uint64_t result = qword_1EA2E1F68;
  if (!qword_1EA2E1F68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C23822B0()
{
  sub_1C238302C(319, &qword_1EA2DF2E0, MEMORY[0x1E4F66300], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t destroy for MedicalRecordTimelineChartValueViewData(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void *initializeWithCopy for MedicalRecordTimelineChartValueViewData(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  uint64_t v6 = *(void **)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  a1[8] = *(void *)(a2 + 64);
  a1[9] = v8;
  a1[10] = *(void *)(a2 + 80);
  id v9 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MedicalRecordTimelineChartValueViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 40);
  uint64_t v8 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v8;
  id v9 = v8;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for MedicalRecordTimelineChartValueViewData(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicalRecordTimelineChartValueViewData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicalRecordTimelineChartValueViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicalRecordTimelineChartValueViewData()
{
  return &type metadata for MedicalRecordTimelineChartValueViewData;
}

unint64_t sub_1C23826EC()
{
  unint64_t result = qword_1EA2E1F78;
  if (!qword_1EA2E1F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1F78);
  }
  return result;
}

uint64_t sub_1C2382740@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_item;
  swift_beginAccess();
  return sub_1C2382EBC(v3, a1, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
}

uint64_t sub_1C23827B0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_item;
  swift_beginAccess();
  sub_1C2382FAC(a1, v3, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
  swift_endAccess();
  sub_1C2381454();
  return sub_1C2382F3C(a1, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
}

void (*sub_1C2382854(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C23828B4;
}

void sub_1C23828B4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1C2381454();
  }
}

void sub_1C23828E8(uint64_t a1, void *a2)
{
}

uint64_t sub_1C2382910@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_sectionContext;
  swift_beginAccess();
  return sub_1C2382EBC(v3, a1, &qword_1EA2DF2E0, MEMORY[0x1E4F66300]);
}

void (*sub_1C2382984(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C2381BA0(v2);
  return sub_1C2231658;
}

uint64_t sub_1C23829DC(uint64_t a1, uint64_t a2)
{
  return sub_1C2382E34(&qword_1EA2E1F80, a2, (void (*)(uint64_t))type metadata accessor for MedicalRecordTimelineChartValueItem);
}

void sub_1C2382A24(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC15HealthRecordsUI39MedicalRecordTimelineChartValueItemCell_item;
  swift_beginAccess();
  sub_1C2382EBC(v3, (uint64_t)aBlock, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
  if (v21)
  {
    sub_1C22270A8();
    type metadata accessor for MedicalRecordTimelineChartValueItem();
    uint64_t v4 = swift_dynamicCast();
    if (v4)
    {
      uint64_t v5 = v24;
      if (qword_1EBB6EF30 != -1) {
        uint64_t v4 = swift_once();
      }
      uint64_t v24 = *(void *)(qword_1EBB6FB90 + OBJC_IVAR___HRProfileManager_lock);
      MEMORY[0x1F4188790](v4);
      sub_1C254CEE0();
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70038);
      sub_1C2382E34((unint64_t *)&qword_1EBB6F240, 255, MEMORY[0x1E4F66F68]);
      swift_retain();
      sub_1C254E1D0();
      swift_release();
      id v6 = (void *)aBlock[0];
      if (qword_1EBB6D858 != -1) {
        swift_once();
      }
      id v7 = *(id *)(v5 + 16);
      sub_1C2452E50(v7, a1, v6);

      uint64_t v8 = *(void **)(v5 + 16);
      HKMedicalRecord.categoryKind.getter(aBlock);
      char v9 = aBlock[0];
      id v10 = objc_msgSend(v8, sel_primaryConcept);
      id v11 = objc_msgSend(v10, sel_groupByConcept);

      if (qword_1EBB6D840 != -1) {
        swift_once();
      }
      uint64_t v12 = (char *)qword_1EBB6E968;
      id v13 = objc_msgSend(v11, sel_identifier);
      if (v13)
      {
        id v14 = v13;
        uint64_t v15 = *(void **)&v12[OBJC_IVAR___CHRAnalyticsManager_conceptStore];
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v12;
        *(_OWORD *)(v16 + 24) = xmmword_1C2563DA0;
        *(void *)(v16 + 40) = 0;
        *(unsigned char *)(v16 + 48) = v9;
        id v22 = sub_1C22003F0;
        uint64_t v23 = v16;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1C23CC220;
        id v21 = &block_descriptor_40;
        uint64_t v17 = _Block_copy(aBlock);
        id v18 = v14;
        uint64_t v19 = v12;
        swift_release();
        objc_msgSend(v15, sel_fetchConceptForIdentifier_loadRelationships_completionHandler_, v18, 0, v17);
        _Block_release(v17);
        swift_release();
      }
      else
      {
        LOBYTE(aBlock[0]) = v9;
        sub_1C23CD65C(3, 17, 0, (char *)aBlock, 0);
        swift_release();
      }
    }
  }
  else
  {
    sub_1C2382F3C((uint64_t)aBlock, (unint64_t *)&qword_1EA2E5330, (uint64_t (*)(uint64_t))sub_1C22270A8);
  }
}

uint64_t sub_1C2382E34(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2382E7C()
{
  return MEMORY[0x1F4186498](v0, 49, 7);
}

uint64_t block_destroy_helper_35()
{
  return swift_release();
}

uint64_t sub_1C2382EBC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C238302C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C2382F3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C238302C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2382FAC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C238302C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a2, a1, v6);
  return a2;
}

void sub_1C238302C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t static OnboardingSuggestedActionType.== infix(_:_:)(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  if ((char)*a1 < 0)
  {
    if ((v2 & 0x80) == 0) {
      return 0;
    }
  }
  else if ((v2 & 0x80) != 0)
  {
    return 0;
  }
  return (((*a1 & 1) == 0) ^ v2) & 1;
}

uint64_t sub_1C23830CC()
{
  if (*v0) {
    return 1935827308;
  }
  else {
    return 0x6C6172656E6567;
  }
}

uint64_t sub_1C2383100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2386474(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2383128(uint64_t a1)
{
  unint64_t v2 = sub_1C2383794();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2383164(uint64_t a1)
{
  unint64_t v2 = sub_1C2383794();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C23831A0()
{
  return 0x69446E4965646968;
}

uint64_t sub_1C23831C8(uint64_t a1)
{
  unint64_t v2 = sub_1C2383740();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2383204(uint64_t a1)
{
  unint64_t v2 = sub_1C2383740();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C2383240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x69446E4965646968 && a2 == 0xEE007265766F6373)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C2550870();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C23832FC(uint64_t a1)
{
  unint64_t v2 = sub_1C23836EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2383338(uint64_t a1)
{
  unint64_t v2 = sub_1C23836EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t OnboardingSuggestedActionType.encode(to:)(void *a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C2383D3C(0, &qword_1EBB6E408, (uint64_t (*)(void))sub_1C23836EC, (uint64_t)&type metadata for OnboardingSuggestedActionType.LabsCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v25 = v4;
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v24 = (char *)&v22 - v5;
  sub_1C2383D3C(0, &qword_1EBB6E410, (uint64_t (*)(void))sub_1C2383740, (uint64_t)&type metadata for OnboardingSuggestedActionType.GeneralCodingKeys, v3);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  uint64_t v27 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v22 - v8;
  sub_1C2383D3C(0, &qword_1EBB6E400, (uint64_t (*)(void))sub_1C2383794, (uint64_t)&type metadata for OnboardingSuggestedActionType.CodingKeys, v3);
  uint64_t v11 = v10;
  uint64_t v28 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v12 = *v1;
  uint64_t v13 = a1[3];
  id v14 = a1;
  uint64_t v16 = (char *)&v22 - v15;
  __swift_project_boxed_opaque_existential_1Tm(v14, v13);
  sub_1C2383794();
  sub_1C2550A70();
  if (v12 < 0)
  {
    uint64_t v18 = v23;
    char v30 = 1;
    sub_1C23836EC();
    uint64_t v19 = v24;
    sub_1C2550770();
    uint64_t v20 = v25;
    sub_1C25507B0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v20);
  }
  else
  {
    char v29 = 0;
    sub_1C2383740();
    sub_1C2550770();
    uint64_t v17 = v26;
    sub_1C25507B0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v16, v11);
}

unint64_t sub_1C23836EC()
{
  unint64_t result = qword_1EBB6E330;
  if (!qword_1EBB6E330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6E330);
  }
  return result;
}

unint64_t sub_1C2383740()
{
  unint64_t result = qword_1EBB6E348;
  if (!qword_1EBB6E348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6E348);
  }
  return result;
}

unint64_t sub_1C2383794()
{
  unint64_t result = qword_1EBB6E318;
  if (!qword_1EBB6E318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6E318);
  }
  return result;
}

uint64_t OnboardingSuggestedActionType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v35 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C2383D3C(0, &qword_1EA2E1F88, (uint64_t (*)(void))sub_1C23836EC, (uint64_t)&type metadata for OnboardingSuggestedActionType.LabsCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v40 = v4;
  uint64_t v37 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v39 = (char *)&v34 - v5;
  sub_1C2383D3C(0, &qword_1EA2E1F90, (uint64_t (*)(void))sub_1C2383740, (uint64_t)&type metadata for OnboardingSuggestedActionType.GeneralCodingKeys, v3);
  uint64_t v7 = v6;
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v34 - v8;
  sub_1C2383D3C(0, &qword_1EA2E1F98, (uint64_t (*)(void))sub_1C2383794, (uint64_t)&type metadata for OnboardingSuggestedActionType.CodingKeys, v3);
  uint64_t v11 = v10;
  uint64_t v38 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v34 - v12;
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C2383794();
  id v14 = v41;
  sub_1C2550A50();
  if (v14) {
    goto LABEL_7;
  }
  uint64_t v15 = v7;
  uint64_t v16 = v39;
  uint64_t v17 = v40;
  id v41 = a1;
  uint64_t v18 = sub_1C2550750();
  if (*(void *)(v18 + 16) != 1)
  {
    uint64_t v23 = sub_1C2550420();
    swift_allocError();
    uint64_t v24 = v13;
    uint64_t v26 = v25;
    sub_1C22D95F8();
    *uint64_t v26 = &type metadata for OnboardingSuggestedActionType;
    sub_1C25506E0();
    sub_1C2550400();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v26, *MEMORY[0x1E4FBBA70], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v11);
    a1 = v41;
LABEL_7:
    uint64_t v29 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1Tm(v29);
  }
  if (*(unsigned char *)(v18 + 32))
  {
    char v43 = 1;
    sub_1C23836EC();
    uint64_t v19 = v16;
    sub_1C25506D0();
    uint64_t v20 = v17;
    char v21 = sub_1C2550720();
    uint64_t v22 = v38;
    char v31 = v21;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v20);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v11);
    char v32 = v31 & 1 | 0x80;
  }
  else
  {
    char v42 = 0;
    sub_1C2383740();
    sub_1C25506D0();
    char v27 = sub_1C2550720();
    uint64_t v28 = v38;
    char v33 = v27;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v11);
    char v32 = v33 & 1;
  }
  unsigned char *v35 = v32;
  uint64_t v29 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1Tm(v29);
}

void sub_1C2383D3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C2383DA4@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return OnboardingSuggestedActionType.init(from:)(a1, a2);
}

uint64_t sub_1C2383DBC(void *a1)
{
  return OnboardingSuggestedActionType.encode(to:)(a1);
}

uint64_t sub_1C2383DD4(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  if ((char)*a1 < 0)
  {
    if ((v2 & 0x80) == 0) {
      return 0;
    }
  }
  else if ((v2 & 0x80) != 0)
  {
    return 0;
  }
  return (((*a1 & 1) == 0) ^ v2) & 1;
}

uint64_t OnboardingSuggestedActionType.suggestedActionTitle.getter()
{
  if (*v0 < 0)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
  }
  else if (qword_1EBB6EF40 != -1)
  {
    swift_once();
  }
  id v1 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t OnboardingSuggestedActionType.suggestedActionBody.getter()
{
  if (*v0 < 0)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
  }
  else if (qword_1EBB6EF40 != -1)
  {
    swift_once();
  }
  id v1 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v2;
}

UIImage_optional __swiftcall OnboardingSuggestedActionType.image(for:)(UITraitCollection a1)
{
  if (*v1 < 0)
  {
    if (qword_1EBB6EFD0 != -1) {
      swift_once();
    }
    uint64_t v5 = (void *)qword_1EBB70020;
    uint64_t v4 = a1.super.isa;
    id v3 = v5;
  }
  else
  {
    if (qword_1EBB6EFD0 != -1) {
      swift_once();
    }
    id v3 = (id)qword_1EBB70020;
    uint64_t v4 = a1.super.isa;
  }
  uint64_t v6 = (void *)sub_1C254F430();
  uint64_t v7 = (objc_class *)objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v6, v3, v4);

  uint64_t v9 = v7;
  result.value.super.isa = v9;
  result.is_nil = v8;
  return result;
}

uint64_t OnboardingSuggestedActionType.imageRepresentation.getter()
{
  if (*v0 < 0)
  {
    id v3 = objc_msgSend(self, sel_systemFontOfSize_, 51.0);
    uint64_t v4 = self;
    id v5 = objc_msgSend(v4, sel_configurationWithFont_, v3);

    id v6 = objc_msgSend(v4, sel_hk_prefersMultiColorConfiguration);
    id v7 = objc_msgSend(v5, sel_configurationByApplyingConfiguration_, v6);

    return MEMORY[0x1F411D950](0x6562757474736574, 0xEA0000000000322ELL, v7);
  }
  else
  {
    if (qword_1EBB6EFD0 != -1) {
      swift_once();
    }
    id v1 = (id)qword_1EBB70020;
    return sub_1C254D160();
  }
}

uint64_t OnboardingSuggestedActionType.linkTitle.getter()
{
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v1;
}

uint64_t OnboardingSuggestedActionType.actionTitle.getter()
{
  if (*v0 < 0)
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
  }
  else if (qword_1EBB6EF40 != -1)
  {
    swift_once();
  }
  id v1 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t OnboardingSuggestedActionType.viewingIdentifier.getter()
{
  type metadata accessor for OnboardingViewIdentifier();
  return swift_storeEnumTagMultiPayload();
}

uint64_t OnboardingSuggestedActionType.featureAutomationIdentifier.getter()
{
  if (*v0 < 0) {
    return 0x62614C7055746553;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t PromotionTileViewActionHandlerShim.__allocating_init(context:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return PromotionTileViewActionHandlerShim.init(context:)(a1);
}

uint64_t PromotionTileViewActionHandlerShim.init(context:)(uint64_t a1)
{
  uint64_t v2 = sub_1C254DE00();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  uint64_t v6 = sub_1C254E010();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return v6;
}

id PromotionTileViewActionHandlerShim.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PromotionTileViewActionHandlerShim();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C23847A0()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PromotionTileViewActionHandlerShim
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 8))();
}

uint64_t sub_1C23847F0()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PromotionTileViewActionHandlerShim
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 16))();
}

uint64_t sub_1C2384844(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = (uint64_t *)(*a2 + qword_1EBB6E3E0);
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = v5[2];
  *uint64_t v5 = *a1;
  v5[1] = v3;
  long long v5[2] = v4;
  sub_1C23858A4(v2, v3, v4);
  return sub_1C23858B8(v6, v7, v8);
}

uint64_t sub_1C23848B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1C254DE00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)(v1 + qword_1EBB6E3E0);
  uint64_t v9 = *(void *)(v1 + qword_1EBB6E3E0);
  uint64_t v10 = *(void *)(v1 + qword_1EBB6E3E0 + 8);
  uint64_t v11 = *(void *)(v1 + qword_1EBB6E3E0 + 16);
  uint64_t v12 = v9;
  uint64_t v13 = v10;
  uint64_t v14 = v11;
  if (v11 == 2)
  {
    uint64_t v20 = *(void *)(v1 + qword_1EBB6E3E0);
    uint64_t v15 = v5;
    sub_1C254E000();
    sub_1C23857FC();
    sub_1C2385850();
    sub_1C254DDF0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v15);
    uint64_t v12 = v21;
    uint64_t v13 = v22;
    uint64_t v14 = v23;
    uint64_t v16 = *v8;
    uint64_t v17 = v8[1];
    uint64_t v18 = v8[2];
    *uint64_t v8 = v21;
    v8[1] = v13;
    v8[2] = v14;
    sub_1C23858A4(v12, v13, v14);
    sub_1C23858B8(v16, v17, v18);
    uint64_t v9 = v20;
  }
  *a1 = v12;
  a1[1] = v13;
  a1[2] = v14;
  return sub_1C23858DC(v9, v10, v11);
}

uint64_t sub_1C2384A44(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = v1 + qword_1EBB6E3E0;
  uint64_t v5 = *(void *)(v1 + qword_1EBB6E3E0);
  uint64_t v4 = *(void *)(v1 + qword_1EBB6E3E0 + 8);
  uint64_t v6 = *(void *)(v1 + qword_1EBB6E3E0 + 16);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)a1;
  *(void *)(v3 + 16) = v2;
  return sub_1C23858B8(v5, v4, v6);
}

uint64_t (*sub_1C2384A70(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[3] = v1;
  sub_1C23848B8(a1);
  return sub_1C2384AB8;
}

uint64_t sub_1C2384AB8(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = (uint64_t *)(a1[3] + qword_1EBB6E3E0);
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = v5[2];
  *uint64_t v5 = *a1;
  v5[1] = v3;
  long long v5[2] = v4;
  if (a2)
  {
    sub_1C23858A4(v2, v3, v4);
    sub_1C23858B8(v6, v7, v8);
    return sub_1C23858C8(v2, v3, v4);
  }
  else
  {
    return sub_1C23858B8(v6, v7, v8);
  }
}

void sub_1C2384B78()
{
  uint64_t v1 = sub_1C254DE00();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *(id *)(v0 + qword_1EBB6E3E8);
  uint64_t v6 = (void *)sub_1C254F430();
  id v7 = objc_msgSend(self, sel_presenterForPrivacySplashWithIdentifier_, v6);

  if (v7)
  {

    sub_1C254E000();
    uint64_t v8 = (void *)sub_1C254DDE0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    objc_msgSend(v7, sel_setPresentingViewController_, v8);

    objc_msgSend(v7, sel_present);
    if (qword_1EBB6D840 != -1) {
      swift_once();
    }
    sub_1C23CEB5C(0, 0, 1);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C2384D34(uint64_t a1)
{
  uint64_t v44 = a1;
  uint64_t v2 = sub_1C254D320();
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v40 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C254DE00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v41 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v37 - v8;
  if (qword_1EBB6EF30 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1EBB6FB90;
  sub_1C254E000();
  sub_1C254DDD0();
  id v39 = *(void (**)(char *, uint64_t))(v5 + 8);
  v39(v9, v4);
  uint64_t v38 = v4;
  __swift_project_boxed_opaque_existential_1Tm(&aBlock, (uint64_t)v48);
  uint64_t v11 = (void *)sub_1C254DDB0();
  uint64_t v51 = *(void *)(v10 + OBJC_IVAR___HRProfileManager_lock);
  MEMORY[0x1F4188790](v11);
  *(&v37 - 2) = v12;
  *(&v37 - 1) = v10;
  sub_1C254CEE0();
  sub_1C21A8A28();
  sub_1C2385A00((unint64_t *)&qword_1EBB6F240, MEMORY[0x1E4F66F68]);
  swift_retain();
  sub_1C254E1D0();

  swift_release();
  uint64_t v13 = v52;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&aBlock);
  sub_1C254E000();
  sub_1C254DDD0();
  uint64_t v15 = v38;
  uint64_t v14 = v39;
  v39(v9, v38);
  __swift_project_boxed_opaque_existential_1Tm(&aBlock, (uint64_t)v48);
  uint64_t v16 = v40;
  sub_1C254DDC0();
  uint64_t v17 = Presentation.funnelContext()();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v43);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&aBlock);
  id v18 = *(id *)(v1 + qword_1EBB6E3E8);
  uint64_t v19 = v41;
  sub_1C254E000();
  uint64_t v20 = (void *)sub_1C254DDE0();
  v14(v19, v15);
  sub_1C23848B8(&aBlock);
  uint64_t v21 = (uint64_t)v47;
  if (v47 == (void (*)(uint64_t, void *))1)
  {
    id v22 = objc_allocWithZone((Class)WDClinicalOnboardingOAuthNavigationViewController);
  }
  else
  {
    uint64_t v23 = aBlock;
    uint64_t v24 = v46;
    swift_bridgeObjectRetain();
    sub_1C23858C8(v23, v24, v21);
    id v22 = objc_allocWithZone((Class)WDClinicalOnboardingOAuthNavigationViewController);
    if (v21)
    {
      uint64_t v25 = v18;
      swift_bridgeObjectRetain();
      id v26 = v13;
      char v27 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
  }
  uint64_t v25 = v18;
  id v28 = v13;
  char v27 = 0;
LABEL_8:
  id v29 = objc_msgSend(v22, sel_initWithContext_onboardingOptions_sourceIdentifier_profile_existingAccount_, v17, 0, v27, v13, 0);

  id v30 = objc_msgSend(v13, sel_onboardingManager);
  id v31 = objc_msgSend(v30, sel_getPendingOnboardingGatewayAndClear);

  objc_msgSend(v29, sel_setGatewayProxyToTry_, v31);
  id v32 = objc_msgSend(v13, sel_onboardingManager);
  char v33 = (void *)swift_allocObject();
  v33[2] = v20;
  v33[3] = v29;
  v33[4] = 0;
  void v33[5] = 0;
  uint64_t v49 = sub_1C238593C;
  id v50 = v33;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v46 = 1107296256;
  id v47 = sub_1C22F3AD0;
  id v48 = &block_descriptor_41;
  uint64_t v34 = _Block_copy(&aBlock);
  id v35 = v20;
  id v36 = v29;
  swift_release();
  objc_msgSend(v32, sel_registerInflightOnboardingViewController_completion_, v36, v34);
  _Block_release(v34);

  swift_bridgeObjectRelease();
  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  sub_1C23CCB04(v44, v17, 0);
}

void sub_1C2385320()
{
}

uint64_t sub_1C2385328()
{
  if (qword_1EBB6D840 != -1) {
    swift_once();
  }
  return sub_1C23CEB5C(0, 0, 0);
}

uint64_t OnboardingPromotionTileActionHandler.__allocating_init(context:)(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254DE00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v22 - v9;
  id v11 = objc_allocWithZone(v2);
  uint64_t v12 = qword_1EBB6E3E8;
  uint64_t v13 = qword_1EBB6D858;
  uint64_t v14 = (char *)v11;
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)qword_1EBB6ED30;
  *(void *)&v14[v12] = qword_1EBB6ED30;
  uint64_t v16 = &v14[qword_1EBB6E3E0];
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = 0;
  *((void *)v16 + 2) = 2;
  id v17 = v15;

  id v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v10, (uint64_t)a1, v4);
  v18(v7, (uint64_t)v10, v4);
  uint64_t v19 = sub_1C254E010();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v10, v4);
  v20(a1, v4);
  return v19;
}

uint64_t OnboardingPromotionTileActionHandler.init(context:)(char *a1)
{
  uint64_t v3 = sub_1C254DE00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = qword_1EBB6E3E8;
  uint64_t v11 = qword_1EBB6D858;
  uint64_t v12 = v1;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_1EBB6ED30;
  *(void *)&v12[v10] = qword_1EBB6ED30;
  uint64_t v14 = &v12[qword_1EBB6E3E0];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  *((void *)v14 + 2) = 2;
  id v15 = v13;

  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v16(v9, (uint64_t)a1, v3);
  v16(v6, (uint64_t)v9, v3);
  uint64_t v17 = sub_1C254E010();
  id v18 = *(void (**)(char *, uint64_t))(v4 + 8);
  v18(v9, v3);
  v18(a1, v3);
  return v17;
}

uint64_t sub_1C2385710()
{
  uint64_t v1 = *(void *)(v0 + qword_1EBB6E3E0);
  uint64_t v2 = *(void *)(v0 + qword_1EBB6E3E0 + 8);
  uint64_t v3 = *(void *)(v0 + qword_1EBB6E3E0 + 16);
  return sub_1C23858B8(v1, v2, v3);
}

id OnboardingPromotionTileActionHandler.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OnboardingPromotionTileActionHandler();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2385790(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + qword_1EBB6E3E0);
  uint64_t v3 = *(void *)(a1 + qword_1EBB6E3E0 + 8);
  uint64_t v4 = *(void *)(a1 + qword_1EBB6E3E0 + 16);
  return sub_1C23858B8(v2, v3, v4);
}

uint64_t type metadata accessor for PromotionTileViewActionHandlerShim()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1C23857FC()
{
  unint64_t result = qword_1EBB6D9C0;
  if (!qword_1EBB6D9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6D9C0);
  }
  return result;
}

unint64_t sub_1C2385850()
{
  unint64_t result = qword_1EA2E1FA0;
  if (!qword_1EA2E1FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1FA0);
  }
  return result;
}

uint64_t sub_1C23858A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C23858B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 2) {
    return sub_1C23858C8(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1C23858C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C23858DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 2) {
    return sub_1C23858A4(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1C23858EC()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C238593C(void *a1)
{
  sub_1C245032C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t block_destroy_helper_36()
{
  return swift_release();
}

uint64_t type metadata accessor for OnboardingPromotionTileActionHandler()
{
  uint64_t result = qword_1EBB6DE10;
  if (!qword_1EBB6DE10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C238599C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C23859B8()
{
  return sub_1C2385A00(&qword_1EBB6E3F0, MEMORY[0x1E4F66380]);
}

uint64_t sub_1C2385A00(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1C2385A48@<D0>(uint64_t a1@<X8>)
{
  sub_1C23848B8((uint64_t *)&v4);
  uint64_t v2 = v5;
  double result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(void *)(a1 + 16) = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for OnboardingSuggestedActionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7F) {
    goto LABEL_17;
  }
  if (a2 + 129 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 129) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 129;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 129;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 129;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0x7E | (*a1 >> 7)) ^ 0x7F;
  if (v6 >= 0x7E) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for OnboardingSuggestedActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 129 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 129) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7E)
  {
    unsigned int v6 = ((a2 - 127) >> 8) + 1;
    *double result = a2 - 127;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2385C04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
        break;
    }
  }
  return result;
}

uint64_t sub_1C2385C2C(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

unsigned char *sub_1C2385C38(unsigned char *result)
{
  *result &= ~0x80u;
  return result;
}

unsigned char *sub_1C2385C48(unsigned char *result, char a2)
{
  *double result = *result & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for OnboardingSuggestedActionType()
{
  return &type metadata for OnboardingSuggestedActionType;
}

uint64_t sub_1C2385C6C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for PromotionTileViewActionHandlerShim(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PromotionTileViewActionHandlerShim);
}

uint64_t dispatch thunk of PromotionTileViewActionHandlerShim.didTap()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PromotionTileViewActionHandlerShim
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 8))();
}

uint64_t dispatch thunk of PromotionTileViewActionHandlerShim.didTapLink()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for PromotionTileViewActionHandlerShim
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 16))();
}

uint64_t sub_1C2385D68()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for OnboardingPromotionTileActionHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OnboardingPromotionTileActionHandler);
}

uint64_t dispatch thunk of OnboardingPromotionTileActionHandler.userData.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for OnboardingPromotionTileActionHandler
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 40))();
}

uint64_t dispatch thunk of OnboardingPromotionTileActionHandler.userData.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for OnboardingPromotionTileActionHandler
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 48))();
}

uint64_t dispatch thunk of OnboardingPromotionTileActionHandler.userData.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for OnboardingPromotionTileActionHandler
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 56))();
}

uint64_t dispatch thunk of OnboardingPromotionTileActionHandler.didTapActionButton(step:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for OnboardingPromotionTileActionHandler
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 64))();
}

uint64_t dispatch thunk of OnboardingPromotionTileActionHandler.viewDidMoveToSuperview()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for OnboardingPromotionTileActionHandler
                              + (*MEMORY[0x1E4FBC8C8] & *v0)
                              + 72))();
}

uint64_t sub_1C2385F68()
{
  return type metadata accessor for OnboardingPromotionTileActionHandler();
}

unsigned char *storeEnumTagSinglePayload for OnboardingSuggestedActionType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C238603CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingSuggestedActionType.CodingKeys()
{
  return &type metadata for OnboardingSuggestedActionType.CodingKeys;
}

ValueMetadata *type metadata accessor for OnboardingSuggestedActionType.GeneralCodingKeys()
{
  return &type metadata for OnboardingSuggestedActionType.GeneralCodingKeys;
}

unsigned char *_s15HealthRecordsUI29OnboardingSuggestedActionTypeO17GeneralCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2386124);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingSuggestedActionType.LabsCodingKeys()
{
  return &type metadata for OnboardingSuggestedActionType.LabsCodingKeys;
}

unint64_t sub_1C2386160()
{
  unint64_t result = qword_1EA2E1FA8;
  if (!qword_1EA2E1FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1FA8);
  }
  return result;
}

unint64_t sub_1C23861B8()
{
  unint64_t result = qword_1EA2E1FB0;
  if (!qword_1EA2E1FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1FB0);
  }
  return result;
}

unint64_t sub_1C2386210()
{
  unint64_t result = qword_1EA2E1FB8;
  if (!qword_1EA2E1FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1FB8);
  }
  return result;
}

unint64_t sub_1C2386268()
{
  unint64_t result = qword_1EBB6E328;
  if (!qword_1EBB6E328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6E328);
  }
  return result;
}

unint64_t sub_1C23862C0()
{
  unint64_t result = qword_1EBB6E320;
  if (!qword_1EBB6E320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6E320);
  }
  return result;
}

unint64_t sub_1C2386318()
{
  unint64_t result = qword_1EBB6E358[0];
  if (!qword_1EBB6E358[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBB6E358);
  }
  return result;
}

unint64_t sub_1C2386370()
{
  unint64_t result = qword_1EBB6E350;
  if (!qword_1EBB6E350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6E350);
  }
  return result;
}

unint64_t sub_1C23863C8()
{
  unint64_t result = qword_1EBB6E340;
  if (!qword_1EBB6E340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6E340);
  }
  return result;
}

unint64_t sub_1C2386420()
{
  unint64_t result = qword_1EBB6E338;
  if (!qword_1EBB6E338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6E338);
  }
  return result;
}

uint64_t sub_1C2386474(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6172656E6567 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1935827308 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id sub_1C2386588()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignedClinicalDataGroupContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SignedClinicalDataGroupContext()
{
  return self;
}

id BloodPressureCurrentValueViewDataSource.__allocating_init(dateCache:healthStore:selectedRangeFormatter:)(void *a1, void *a2, void *a3)
{
  id v7 = objc_msgSend(objc_allocWithZone(v3), sel_initWithDateCache_healthStore_selectedRangeFormatter_, a1, a2, a3);

  return v7;
}

id BloodPressureCurrentValueViewDataSource.init(dateCache:healthStore:selectedRangeFormatter:)(void *a1, void *a2, void *a3)
{
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for BloodPressureCurrentValueViewDataSource();
  id v7 = objc_msgSendSuper2(&v9, sel_initWithDateCache_healthStore_selectedRangeFormatter_, a1, a2, a3);

  return v7;
}

uint64_t type metadata accessor for BloodPressureCurrentValueViewDataSource()
{
  return self;
}

id BloodPressureCurrentValueViewDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id BloodPressureCurrentValueViewDataSource.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureCurrentValueViewDataSource();
  return objc_msgSendSuper2(&v2, sel_init);
}

id BloodPressureCurrentValueViewDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BloodPressureCurrentValueViewDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C2386860(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C2386A40(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EA2DD690 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EA2E0B90;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C2386C20(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EA2DD690 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EA2E0B90;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C2386E00(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C2386FE0(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C23871C0(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C23873A0(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C2387584(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C2387764(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C2387948(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C2387B28(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C2387D08(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C2387EE8(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C23880C8(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C23882A8(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C2388488(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C2388668(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v5, 0xE000000000000000);

  char v6 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v6);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

id sub_1C2388848(void *a1, void *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v67 = a3;
  uint64_t v68 = a7;
  uint64_t v66 = a4;
  uint64_t v69 = a9;
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  id v15 = (char *)&v64 - v14;
  uint64_t v16 = sub_1C254CAD0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v64 - v21;
  if (!a1)
  {
    if (!a2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    id v54 = a2;
    uint64_t v55 = a5();
    id v52 = sub_1C23898E0(v55, v56, a2, v68, a8);
    id v53 = v52;

    if (!v52) {
      return v52;
    }
    goto LABEL_14;
  }
  if (!a2)
  {
    id v33 = a1;
    uint64_t v57 = v67();
    id v52 = sub_1C23898E0(v57, v58, a1, v68, a8);
    id v53 = v52;
    goto LABEL_11;
  }
  uint64_t v65 = a8;
  id v23 = a2;
  id v24 = a1;
  id v25 = v23;
  id v26 = v24;
  id v27 = objc_msgSend(v25, sel_dateForUTC);
  sub_1C254CA80();

  id v28 = objc_msgSend(v26, sel_dateForUTC);
  sub_1C254CA80();

  sub_1C254CA30();
  double v30 = v29;
  id v31 = *(void (**)(char *, uint64_t))(v17 + 8);
  v31(v20, v16);
  uint64_t v32 = ((uint64_t (*)(char *, uint64_t))v31)(v22, v16);
  if (v30 > COERCE_DOUBLE(1))
  {
    id v33 = v25;
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_1C254CBD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v15, 1, 1, v34);
    if (qword_1EA2DD660 != -1) {
      swift_once();
    }
    id v35 = (void *)qword_1EA2E0B00;
    uint64_t v68 = *(void *)algn_1EA2E0B08;
    sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C255CDA0;
    uint64_t v67 = v35;
    swift_bridgeObjectRetain();
    id v37 = objc_msgSend(v26, sel_displayString);
    uint64_t v38 = sub_1C254F470();
    id v39 = v26;
    uint64_t v41 = v40;

    uint64_t v42 = MEMORY[0x1E4FBB1A0];
    *(void *)(v36 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v43 = sub_1C220D950();
    *(void *)(v36 + 64) = v43;
    *(void *)(v36 + 32) = v38;
    *(void *)(v36 + 40) = v41;
    id v44 = objc_msgSend(v33, sel_displayString);
    uint64_t v45 = sub_1C254F470();
    uint64_t v47 = v46;

    *(void *)(v36 + 96) = v42;
    *(void *)(v36 + 104) = v43;
    *(void *)(v36 + 72) = v45;
    *(void *)(v36 + 80) = v47;
    id v48 = v67;
    sub_1C254C730();
    uint64_t v49 = sub_1C254F4A0();
    unint64_t v51 = v50;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C2269E88((uint64_t)v15);
    id v52 = sub_1C2386860(v49, v51);

    id v53 = v52;
LABEL_11:

    if (!v52) {
      return v52;
    }
    goto LABEL_14;
  }
  uint64_t v59 = ((uint64_t (*)(uint64_t))v67)(v32);
  uint64_t v61 = v60;
  id v62 = v26;
  id v52 = sub_1C23898E0(v59, v61, a1, v68, v65);

  id v53 = v52;
  if (v52) {
LABEL_14:
  }

  return v52;
}

id sub_1C2388D90(void *a1, void *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(id), uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v68 = a7;
  uint64_t v69 = a8;
  uint64_t v70 = a4;
  unint64_t v71 = a3;
  uint64_t v72 = a9;
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  id v15 = (char *)&v66 - v14;
  uint64_t v16 = sub_1C254CAD0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v66 - v21;
  if (!a1)
  {
    if (!a2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    id v55 = a2;
    uint64_t v56 = a5();
    id v53 = sub_1C23898E0(v56, v57, a2, v72, a10);
    id v54 = v53;

    if (!v53) {
      return v53;
    }
    goto LABEL_14;
  }
  if (!a2)
  {
    id v58 = a1;
    uint64_t v59 = v71();
    id v53 = sub_1C23898E0(v59, v60, a1, v72, a10);
    id v54 = v53;

    if (!v53) {
      return v53;
    }
    goto LABEL_14;
  }
  uint64_t v67 = v15;
  id v23 = a2;
  id v24 = a1;
  id v25 = v23;
  id v26 = v24;
  id v27 = objc_msgSend(v25, sel_dateForUTC);
  sub_1C254CA80();

  id v28 = objc_msgSend(v26, sel_dateForUTC);
  sub_1C254CA80();

  sub_1C254CA30();
  double v30 = v29;
  id v31 = *(void (**)(char *, uint64_t))(v17 + 8);
  v31(v20, v16);
  uint64_t v32 = ((uint64_t (*)(char *, uint64_t))v31)(v22, v16);
  if (v30 <= COERCE_DOUBLE(1))
  {
    uint64_t v61 = ((uint64_t (*)(uint64_t))v71)(v32);
    uint64_t v63 = v62;
    id v64 = v26;
    id v53 = sub_1C23898E0(v61, v63, a1, v72, a10);

    id v54 = v53;
    if (!v53) {
      return v53;
    }
LABEL_14:

    return v53;
  }
  id v33 = v25;
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_1C254CBD0();
  uint64_t v35 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v67, 1, 1, v34);
  if (qword_1EA2DD660 != -1) {
    swift_once();
  }
  uint64_t v36 = (void *)qword_1EA2E0B00;
  uint64_t v72 = *(void *)algn_1EA2E0B08;
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1C255CDA0;
  unint64_t v71 = v36;
  swift_bridgeObjectRetain();
  id v38 = objc_msgSend(v26, sel_displayString);
  uint64_t v39 = sub_1C254F470();
  uint64_t v40 = v26;
  uint64_t v42 = v41;

  uint64_t v43 = MEMORY[0x1E4FBB1A0];
  *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v44 = sub_1C220D950();
  *(void *)(v37 + 64) = v44;
  *(void *)(v37 + 32) = v39;
  *(void *)(v37 + 40) = v42;
  id v45 = objc_msgSend(v33, sel_displayString);
  uint64_t v46 = sub_1C254F470();
  uint64_t v48 = v47;

  *(void *)(v37 + 96) = v43;
  *(void *)(v37 + 104) = v44;
  *(void *)(v37 + 72) = v46;
  *(void *)(v37 + 80) = v48;
  uint64_t v49 = v71;
  sub_1C254C730();
  uint64_t v50 = sub_1C254F4A0();
  unint64_t v52 = v51;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88(v35);
  id v53 = sub_1C2389A44(v50, v52, v73, v68);

  id v54 = v53;
  if (v53) {
    goto LABEL_14;
  }
  return v53;
}

id sub_1C23892E4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v56 = a3;
  id v59 = a1;
  id v60 = a2;
  uint64_t v3 = sub_1C254CAD0();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v53 - v7;
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  id v58 = (char *)&v53 - v10;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C254C730();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();

  id v15 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C254C730();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();

  id v19 = v59;
  if (v59)
  {
    uint64_t v57 = v16;
    id v20 = v59;
    swift_bridgeObjectRelease();
    if (v60)
    {
      id v21 = v60;
      id v22 = objc_msgSend(v21, sel_dateForUTC);
      sub_1C254CA80();

      id v23 = objc_msgSend(v20, sel_dateForUTC);
      sub_1C254CA80();

      sub_1C254CA30();
      double v25 = v24;
      uint64_t v26 = v55;
      id v27 = *(void (**)(char *, uint64_t))(v54 + 8);
      v27(v6, v55);
      v27(v8, v26);
      if (v25 <= COERCE_DOUBLE(1))
      {
        id v32 = objc_msgSend(v20, sel_displayString);
        uint64_t v29 = sub_1C254F470();
        uint64_t v31 = v39;
      }
      else
      {
        swift_bridgeObjectRelease();
        id v28 = objc_msgSend(v20, sel_displayString);
        uint64_t v29 = sub_1C254F470();
        uint64_t v31 = v30;

        id v32 = objc_msgSend(v21, sel_displayString);
        uint64_t v57 = sub_1C254F470();
        uint64_t v18 = v33;
      }
    }
    else
    {
      id v32 = objc_msgSend(v20, sel_displayString);
      uint64_t v29 = sub_1C254F470();
      uint64_t v31 = v38;
    }
    uint64_t v34 = (uint64_t)v58;
  }
  else
  {
    uint64_t v29 = v12;
    swift_bridgeObjectRelease();
    uint64_t v34 = (uint64_t)v58;
    if (!v60)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    id v35 = v60;
    id v36 = objc_msgSend(v35, sel_displayString);
    uint64_t v57 = sub_1C254F470();
    uint64_t v18 = v37;

    uint64_t v31 = v14;
  }
  uint64_t v40 = v19;
  uint64_t v41 = sub_1C254CBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v34, 1, 1, v41);
  if (qword_1EA2DD660 != -1) {
    swift_once();
  }
  uint64_t v42 = (void *)qword_1EA2E0B00;
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1C255CDA0;
  uint64_t v44 = MEMORY[0x1E4FBB1A0];
  *(void *)(v43 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v45 = sub_1C220D950();
  *(void *)(v43 + 32) = v29;
  *(void *)(v43 + 40) = v31;
  *(void *)(v43 + 96) = v44;
  *(void *)(v43 + 104) = v45;
  uint64_t v46 = v57;
  *(void *)(v43 + 64) = v45;
  *(void *)(v43 + 72) = v46;
  *(void *)(v43 + 80) = v18;
  id v47 = v42;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v48 = sub_1C254F4A0();
  unint64_t v50 = v49;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88(v34);
  id v51 = sub_1C2388488(v48, v50);

  return v51;
}

id sub_1C23898E0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  if (!a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (a1 == a4 && a2 == a5)
  {

    swift_bridgeObjectRelease_n();
    return 0;
  }
  char v6 = sub_1C2550870();
  id v7 = a3;
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_13:
    swift_bridgeObjectRelease();

    return 0;
  }
  id v8 = objc_msgSend(v7, sel_displayString);
  uint64_t v9 = sub_1C254F470();
  unint64_t v11 = v10;

  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v12)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  id v13 = sub_1C2389B80(v9, v11);

  id v14 = v13;
  swift_bridgeObjectRelease_n();

  if (v13) {
  return v13;
  }
}

id sub_1C2389A44(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(id))
{
  if (!a2) {
    return 0;
  }
  uint64_t v4 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  a4(objc_msgSend(v6, sel_setDisplayItemType_, 15));
  id v7 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setTitle_, v7);

  id v8 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSubtitle_, v8);

  objc_msgSend(v6, sel_setSeparatorStyle_, 0);
  objc_msgSend(v6, sel_setSeparatorHidden_, 0);
  objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  return v6;
}

id sub_1C2389B80(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v3, sel_setDisplayItemType_, 15);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setTitle_, v4);

  uint64_t v5 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setSubtitle_, v5);

  objc_msgSend(v3, sel_setSeparatorStyle_, 0);
  objc_msgSend(v3, sel_setSeparatorHidden_, 0);
  objc_msgSend(v3, sel_setExtraTopPadding_, 0);

  return v3;
}

void sub_1C2389CC0(void *a1)
{
  id v1 = a1;
  objc_msgSend(v1, sel_displayScale);
  if (v2 > COERCE_DOUBLE(1)) {
    objc_msgSend(v1, sel_displayScale);
  }
}

double UITraitCollection.displayPixel.getter()
{
  objc_msgSend(v0, sel_displayScale);
  double v2 = v1;
  double result = 1.0;
  if (v2 > COERCE_DOUBLE(1))
  {
    objc_msgSend(v0, sel_displayScale, 1.0);
    return 1.0 / v4;
  }
  return result;
}

void sub_1C2389D88(uint64_t a1, void (*a2)(uint64_t *, void *), uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v27 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    unint64_t v24 = 0;
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    unint64_t v8 = sub_1C2550520() | 0x8000000000000000;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
    uint64_t v6 = ~v9;
    unint64_t v24 = a4 + 64;
    uint64_t v10 = -v9;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v7 = v11 & *(void *)(a4 + 64);
    unint64_t v8 = a4;
  }
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  int64_t v23 = (unint64_t)(v6 + 64) >> 6;
  if ((v8 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (sub_1C25505B0())
  {
    sub_1C21AB51C(0, &qword_1EBB6EF58);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = (id)v26[0];
    swift_unknownObjectRelease();
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = (id)v26[0];
    swift_unknownObjectRelease();
    int64_t v15 = v12;
    uint64_t v16 = v7;
    while (v13)
    {
      v26[0] = v13;
      v26[1] = v14;
      a2(&v27, v26);

      if (v5) {
        break;
      }
      int64_t v12 = v15;
      unint64_t v7 = v16;
      if ((v8 & 0x8000000000000000) != 0) {
        goto LABEL_8;
      }
LABEL_11:
      if (v7)
      {
        uint64_t v16 = (v7 - 1) & v7;
        unint64_t v17 = __clz(__rbit64(v7)) | (v12 << 6);
        int64_t v15 = v12;
      }
      else
      {
        int64_t v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
          return;
        }
        if (v15 >= v23) {
          break;
        }
        unint64_t v18 = *(void *)(v24 + 8 * v15);
        if (!v18)
        {
          int64_t v19 = v12 + 2;
          if (v12 + 2 >= v23) {
            break;
          }
          unint64_t v18 = *(void *)(v24 + 8 * v19);
          if (v18) {
            goto LABEL_22;
          }
          int64_t v19 = v12 + 3;
          if (v12 + 3 >= v23) {
            break;
          }
          unint64_t v18 = *(void *)(v24 + 8 * v19);
          if (v18) {
            goto LABEL_22;
          }
          int64_t v19 = v12 + 4;
          if (v12 + 4 >= v23) {
            break;
          }
          unint64_t v18 = *(void *)(v24 + 8 * v19);
          if (v18)
          {
LABEL_22:
            int64_t v15 = v19;
          }
          else
          {
            int64_t v15 = v12 + 5;
            if (v12 + 5 >= v23) {
              break;
            }
            unint64_t v18 = *(void *)(v24 + 8 * v15);
            if (!v18)
            {
              int64_t v22 = v12 + 6;
              while (v23 != v22)
              {
                unint64_t v18 = *(void *)(v24 + 8 * v22++);
                if (v18)
                {
                  int64_t v15 = v22 - 1;
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        uint64_t v16 = (v18 - 1) & v18;
        unint64_t v17 = __clz(__rbit64(v18)) + (v15 << 6);
      }
      uint64_t v20 = 8 * v17;
      id v21 = *(void **)(*(void *)(v8 + 56) + v20);
      id v13 = *(id *)(*(void *)(v8 + 48) + v20);
      id v14 = v21;
    }
  }
  sub_1C21ABD08();
}

unint64_t sub_1C238A0CC(unint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a3 + 16))
  {
    uint64_t v5 = (void *)result;
    uint64_t v7 = *a2;
    uint64_t v6 = (void *)a2[1];
    double result = sub_1C2457874(a4);
    if (v8)
    {
      unint64_t v9 = *(void *)(*(void *)(a3 + 56) + 8 * result);
      swift_bridgeObjectRetain();
      char v10 = sub_1C2268104(v7, v9);
      double result = swift_bridgeObjectRelease();
      if (v10)
      {
        double result = (unint64_t)objc_msgSend(v6, sel_integerValue);
        if (__OFADD__(*v5, result)) {
          __break(1u);
        }
        else {
          *v5 += result;
        }
      }
    }
  }
  return result;
}

uint64_t Dictionary<>.totalCount.getter(uint64_t a1)
{
  sub_1C238ECD8(0, (unint64_t *)&qword_1EA2DF958, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)&v26 - v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v27 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  uint64_t v16 = 0;
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v15 << 6))
  {
    uint64_t v22 = *(void *)(a1 + 48);
    uint64_t v23 = type metadata accessor for BrowseCategory();
    sub_1C238EA2C(v22 + *(void *)(*(void *)(v23 - 8) + 72) * i, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    *(void *)&v8[*(int *)(v3 + 48)] = *(void *)(*(void *)(a1 + 56) + 8 * i);
    uint64_t result = sub_1C238E700((uint64_t)v8, (uint64_t)v5);
    uint64_t v24 = *(void *)&v5[*(int *)(v3 + 48)];
    BOOL v25 = __OFADD__(v16, v24);
    v16 += v24;
    if (v25)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    uint64_t result = sub_1C238E790((uint64_t)v5);
    if (v12) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v27 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v27 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v13) {
          goto LABEL_26;
        }
        unint64_t v20 = *(void *)(v27 + 8 * v15);
        if (!v20)
        {
          int64_t v15 = v19 + 3;
          if (v19 + 3 >= v13) {
            goto LABEL_26;
          }
          unint64_t v20 = *(void *)(v27 + 8 * v15);
          if (!v20)
          {
            int64_t v15 = v19 + 4;
            if (v19 + 4 >= v13) {
              goto LABEL_26;
            }
            unint64_t v20 = *(void *)(v27 + 8 * v15);
            if (!v20) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 5;
  if (v21 >= v13)
  {
LABEL_26:
    swift_release();
    return v16;
  }
  unint64_t v20 = *(void *)(v27 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v27 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

BOOL Dictionary<>.hasData.getter(uint64_t a1)
{
  return Dictionary<>.totalCount.getter(a1) > 0;
}

BOOL Dictionary<>.hasData(for:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (unint64_t v3 = sub_1C2457874(a1), (v4 & 1) != 0)) {
    return *(void *)(*(void *)(a2 + 56) + 8 * v3) > 0;
  }
  else {
    return 0;
  }
}

uint64_t CategoryCount.category.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C238EA2C(v1, a1, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
}

uint64_t CategoryCount.count.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for CategoryCount() + 20));
}

BOOL CategoryCount.isEmpty.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for CategoryCount() + 20)) == 0;
}

uint64_t CategoryCount.hash(into:)()
{
  return sub_1C25509D0();
}

uint64_t sub_1C238A56C()
{
  if (*v0) {
    return 0x746E756F63;
  }
  else {
    return 0x79726F6765746163;
  }
}

uint64_t sub_1C238A5A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C238F668(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C238A5CC(uint64_t a1)
{
  unint64_t v2 = sub_1C238E864();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C238A608(uint64_t a1)
{
  unint64_t v2 = sub_1C238E864();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CategoryCount.encode(to:)(void *a1)
{
  sub_1C238E8B8(0, &qword_1EA2E1FD0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C238E864();
  sub_1C2550A70();
  v9[15] = 0;
  type metadata accessor for BrowseCategory();
  sub_1C238E91C(&qword_1EA2E1FE0, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  sub_1C25507D0();
  if (!v1)
  {
    type metadata accessor for CategoryCount();
    v9[14] = 1;
    sub_1C25507C0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CategoryCount.hashValue.getter()
{
  return sub_1C2550A10();
}

uint64_t CategoryCount.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v4);
  uint64_t v20 = (uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C238E8B8(0, &qword_1EA2E1FE8, MEMORY[0x1E4FBBDC0]);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x1F4188790](v6);
  char v8 = (char *)&v17 - v7;
  uint64_t v9 = type metadata accessor for CategoryCount();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C238E864();
  sub_1C2550A50();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v18;
  char v22 = 0;
  sub_1C238E91C(&qword_1EA2E1FF0, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  uint64_t v14 = v19;
  sub_1C2550740();
  sub_1C238E964(v20, v12, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  char v21 = 1;
  uint64_t v15 = sub_1C2550730();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v14);
  *(void *)(v12 + *(int *)(v9 + 20)) = v15;
  sub_1C238EA2C(v12, v17, (uint64_t (*)(void))type metadata accessor for CategoryCount);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_1C238E9CC(v12, (uint64_t (*)(void))type metadata accessor for CategoryCount);
}

uint64_t sub_1C238ABB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CategoryCount.init(from:)(a1, a2);
}

uint64_t sub_1C238ABC8(void *a1)
{
  return CategoryCount.encode(to:)(a1);
}

uint64_t sub_1C238ABE0()
{
  return sub_1C2550A10();
}

uint64_t sub_1C238AC58()
{
  return sub_1C25509D0();
}

uint64_t sub_1C238ACB8()
{
  return sub_1C2550A10();
}

void *SortCategoryCounts(_:)()
{
  sub_1C238ECD8(0, (unint64_t *)&qword_1EA2DF958, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v23 - v5;
  uint64_t v24 = type metadata accessor for CategoryCount();
  uint64_t v7 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_1C2290570(v10);
  swift_bridgeObjectRelease();
  uint64_t v26 = v11;
  sub_1C238B060(&v26);
  uint64_t v12 = v26;
  int64_t v13 = v26[2];
  if (v13)
  {
    uint64_t v26 = (void *)MEMORY[0x1E4FBC860];
    sub_1C2274F38(0, v13, 0);
    uint64_t v14 = *(unsigned __int8 *)(v1 + 80);
    v23[1] = v12;
    uint64_t v15 = (uint64_t)v12 + ((v14 + 32) & ~v14);
    uint64_t v16 = *(void *)(v1 + 72);
    uint64_t v17 = v26;
    do
    {
      sub_1C238EA94(v15, (uint64_t)v6);
      uint64_t v18 = *(int *)(v25 + 48);
      sub_1C238EA2C((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      uint64_t v19 = *(void *)&v6[v18];
      sub_1C238E964((uint64_t)v3, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      *(void *)&v9[*(int *)(v24 + 20)] = v19;
      sub_1C238E790((uint64_t)v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C2274F38(0, v17[2] + 1, 1);
        uint64_t v17 = v26;
      }
      unint64_t v21 = v17[2];
      unint64_t v20 = v17[3];
      if (v21 >= v20 >> 1)
      {
        sub_1C2274F38(v20 > 1, v21 + 1, 1);
        uint64_t v17 = v26;
      }
      v17[2] = v21 + 1;
      sub_1C238E964((uint64_t)v9, (uint64_t)v17+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v21, (uint64_t (*)(void))type metadata accessor for CategoryCount);
      v15 += v16;
      --v13;
    }
    while (v13);
    swift_release();
  }
  else
  {
    swift_release();
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v17;
}

void sub_1C238B060(void **a1)
{
  sub_1C238ECD8(0, (unint64_t *)&qword_1EA2DF958, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = (void *)sub_1C23F3800(v4);
  }
  uint64_t v5 = v4[2];
  v6[0] = (char *)v4 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v6[1] = v5;
  sub_1C238B134(v6);
  *a1 = v4;
}

void sub_1C238B134(void *a1)
{
  uint64_t v3 = type metadata accessor for BrowseCategory();
  MEMORY[0x1F4188790](v3);
  v291 = (unsigned __int8 *)&v257 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v292 = (unsigned __int8 *)&v257 - v6;
  sub_1C238ECD8(0, (unint64_t *)&qword_1EA2DF958, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  uint64_t v8 = v7;
  uint64_t v276 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v263 = (uint64_t)&v257 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v296 = (uint64_t)&v257 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v302 = (uint64_t)&v257 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v304 = (uint64_t)&v257 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v257 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v303 = (uint64_t)&v257 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v272 = (uint64_t)&v257 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v271 = (uint64_t)&v257 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v273 = (uint64_t)&v257 - v26;
  uint64_t v27 = a1[1];
  uint64_t v28 = sub_1C2550800();
  if (v28 >= v27)
  {
    if (v27 < 0)
    {
LABEL_227:
      __break(1u);
      goto LABEL_228;
    }
    if (v27) {
      sub_1C238D1E8(0, v27, 1, a1);
    }
    return;
  }
  if (v27 >= 0) {
    uint64_t v29 = v27;
  }
  else {
    uint64_t v29 = v27 + 1;
  }
  if (v27 < -1) {
    goto LABEL_244;
  }
  uint64_t v285 = v3;
  uint64_t v259 = v28;
  uint64_t v287 = v1;
  if (v27 < 2)
  {
    uint64_t v34 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v33 = MEMORY[0x1E4FBC860]
        + ((*(unsigned __int8 *)(v276 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v276 + 80));
    uint64_t v258 = MEMORY[0x1E4FBC860];
    if (v27 != 1)
    {
      unint64_t v194 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      goto LABEL_187;
    }
  }
  else
  {
    uint64_t v30 = v29 >> 1;
    uint64_t v31 = sub_1C254F780();
    *(void *)(v31 + 16) = v30;
    unint64_t v32 = (*(unsigned __int8 *)(v276 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v276 + 80);
    uint64_t v258 = v31;
    unint64_t v33 = v31 + v32;
  }
  uint64_t v35 = 0;
  uint64_t v34 = (char *)MEMORY[0x1E4FBC860];
  v282 = "alignWithAccountTitle";
  unint64_t v274 = 0x80000001C257BB20;
  v269 = "RPRETATION";
  unint64_t v266 = 0x80000001C2580300;
  v268 = "CLINICAL_DATA_SHARING_TITLE";
  unint64_t v265 = 0x80000001C257B340;
  v267 = "S_SHOW_ALL_CATEGORIES_BUTTON";
  unint64_t v264 = 0x80000001C2580330;
  v277 = a1;
  uint64_t v286 = v8;
  v275 = v18;
  unint64_t v260 = v33;
LABEL_13:
  v261 = v34;
  uint64_t v36 = v35;
  uint64_t v37 = v35 + 1;
  uint64_t v290 = v35;
  if (v35 + 1 >= v27)
  {
    uint64_t v55 = v35 + 1;
  }
  else
  {
    *(void *)&long long v293 = *a1;
    uint64_t v38 = v293;
    uint64_t v39 = *(void *)(v276 + 72);
    *(void *)&long long v300 = v39;
    uint64_t v40 = v273;
    sub_1C238EA94(v293 + v39 * v37, v273);
    uint64_t v299 = v27;
    uint64_t v41 = v271;
    sub_1C238EA94(v38 + v39 * v36, v271);
    uint64_t v42 = *(int *)(v8 + 48);
    uint64_t v43 = v40;
    uint64_t v44 = v40;
    uint64_t v45 = v272;
    sub_1C238EA2C(v44, v272, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    *(void *)(v45 + v42) = *(void *)(v43 + v42);
    *(void *)&long long v301 = BrowseCategory.localizedTitle.getter();
    uint64_t v46 = v8;
    unint64_t v48 = v47;
    sub_1C238E9CC(v45, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    uint64_t v49 = *(int *)(v46 + 48);
    sub_1C238EA2C(v41, v45, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    *(void *)(v45 + v49) = *(void *)(v41 + v49);
    uint64_t v50 = BrowseCategory.localizedTitle.getter();
    uint64_t v52 = v51;
    uint64_t v36 = v290;
    sub_1C238E9CC(v45, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    uint64_t v306 = v301;
    unint64_t v307 = v48;
    v311 = (void *)v50;
    uint64_t v312 = v52;
    unint64_t v297 = sub_1C2218914();
    uint64_t v298 = sub_1C2550190();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v53 = v41;
    uint64_t v27 = v299;
    sub_1C238E790(v53);
    sub_1C238E790(v273);
    uint64_t v54 = v300;
    uint64_t v55 = v36 + 2;
    if (v36 + 2 >= v27)
    {
      uint64_t v8 = v286;
    }
    else
    {
      uint64_t v295 = v300 * v37;
      uint64_t v56 = v293;
      *(void *)&long long v294 = v300 * v55;
      while (1)
      {
        uint64_t v278 = v55;
        LODWORD(v301) = v298 == -1;
        uint64_t v57 = v273;
        sub_1C238EA94(v56 + v294, v273);
        uint64_t v58 = v271;
        sub_1C238EA94(v56 + v295, v271);
        uint64_t v59 = v286;
        uint64_t v60 = *(int *)(v286 + 48);
        uint64_t v61 = v272;
        sub_1C238EA2C(v57, v272, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
        *(void *)(v61 + v60) = *(void *)(v57 + v60);
        uint64_t v62 = BrowseCategory.localizedTitle.getter();
        unint64_t v64 = v63;
        sub_1C238E9CC(v61, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
        uint64_t v65 = *(int *)(v59 + 48);
        sub_1C238EA2C(v58, v61, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
        *(void *)(v61 + v65) = *(void *)(v58 + v65);
        uint64_t v66 = BrowseCategory.localizedTitle.getter();
        uint64_t v68 = v67;
        sub_1C238E9CC(v61, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
        uint64_t v306 = v62;
        unint64_t v307 = v64;
        v311 = (void *)v66;
        uint64_t v312 = v68;
        uint64_t v69 = sub_1C2550190();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C238E790(v58);
        sub_1C238E790(v57);
        if (v301 == (v69 != -1)) {
          break;
        }
        uint64_t v55 = v278 + 1;
        uint64_t v27 = v299;
        uint64_t v54 = v300;
        v56 += v300;
        if (v299 == v278 + 1)
        {
          uint64_t v55 = v299;
          uint64_t v8 = v286;
          uint64_t v18 = v275;
          uint64_t v36 = v290;
          goto LABEL_22;
        }
      }
      uint64_t v8 = v286;
      uint64_t v18 = v275;
      uint64_t v55 = v278;
      uint64_t v36 = v290;
      uint64_t v27 = v299;
      uint64_t v54 = v300;
    }
LABEL_22:
    a1 = v277;
    if (v298 == -1)
    {
      if (v55 < v36) {
        goto LABEL_230;
      }
      if (v36 < v55)
      {
        uint64_t v70 = 0;
        uint64_t v71 = v36;
        uint64_t v72 = v54 * (v55 - 1);
        uint64_t v73 = v55 * v54;
        uint64_t v74 = v71;
        uint64_t v75 = v71 * v54;
        do
        {
          if (v74 != v55 + v70 - 1)
          {
            uint64_t v77 = v55;
            uint64_t v78 = v293;
            if (!(void)v293) {
              goto LABEL_235;
            }
            unint64_t v79 = v293 + v75;
            *(void *)&long long v301 = v293 + v72;
            sub_1C238E700(v293 + v75, v263);
            if (v75 < v72 || v79 >= v78 + v73)
            {
              uint64_t v76 = v301;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v76 = v301;
              if (v75 != v72) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_1C238E700(v263, v76);
            uint64_t v55 = v77;
            uint64_t v54 = v300;
          }
          ++v74;
          --v70;
          v72 -= v54;
          v73 -= v54;
          v75 += v54;
        }
        while (v74 < v55 + v70);
        a1 = v277;
        uint64_t v8 = v286;
        uint64_t v18 = v275;
        uint64_t v36 = v290;
        uint64_t v27 = v299;
      }
    }
  }
  if (v55 >= v27) {
    goto LABEL_136;
  }
  if (__OFSUB__(v55, v36)) {
    goto LABEL_226;
  }
  if (v55 - v36 >= v259) {
    goto LABEL_136;
  }
  if (__OFADD__(v36, v259))
  {
LABEL_228:
    __break(1u);
LABEL_229:
    __break(1u);
LABEL_230:
    __break(1u);
LABEL_231:
    __break(1u);
LABEL_232:
    __break(1u);
LABEL_233:
    __break(1u);
LABEL_234:
    __break(1u);
LABEL_235:
    __break(1u);
LABEL_236:
    __break(1u);
LABEL_237:
    v252 = (void *)swift_allocError();
    swift_willThrow();
    id v305 = v252;
    id v253 = v252;
    sub_1C2206F9C();
    if (swift_dynamicCast())
    {
LABEL_241:
      uint64_t v306 = 0;
      unint64_t v307 = 0xE000000000000000;
      sub_1C25503A0();
      sub_1C254F5A0();
      sub_1C25504F0();
      sub_1C254F5A0();
      sub_1C25505F0();
      __break(1u);
      goto LABEL_242;
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v254 = &v315;
LABEL_243:

    swift_unexpectedError();
    __break(1u);
LABEL_244:
    sub_1C25505E0();
    __break(1u);
    JUMPOUT(0x1C238D1A0);
  }
  if (v36 + v259 >= v27) {
    uint64_t v80 = v27;
  }
  else {
    uint64_t v80 = v36 + v259;
  }
  if (v80 < v36) {
    goto LABEL_229;
  }
  if (v55 == v80) {
    goto LABEL_136;
  }
  uint64_t v295 = *(void *)(v276 + 72);
  uint64_t v262 = v80;
LABEL_48:
  uint64_t v278 = v55;
  uint64_t v81 = v55;
  while (2)
  {
    uint64_t v82 = v295;
    uint64_t v83 = v81 - 1;
    uint64_t v84 = *a1;
    uint64_t v298 = v295 * v81;
    uint64_t v85 = v303;
    sub_1C238EA94(v84 + v295 * v81, v303);
    uint64_t v299 = v83;
    unint64_t v297 = v82 * v83;
    sub_1C238EA94(v84 + v82 * v83, (uint64_t)v18);
    uint64_t v86 = *(int *)(v8 + 48);
    uint64_t v87 = v304;
    sub_1C238EA2C(v85, v304, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    *(void *)(v87 + v86) = *(void *)(v85 + v86);
    sub_1C238EA2C(v87, (uint64_t)v292, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1C238ECD8(0, (unint64_t *)&qword_1EA2E3980, MEMORY[0x1E4F27990]);
        uint64_t v122 = v292;
        uint64_t v123 = &v292[*(int *)(v121 + 48)];
        uint64_t v125 = *(void *)v123;
        uint64_t v124 = *((void *)v123 + 1);
        *(void *)&long long v300 = v125;
        *(void *)&long long v301 = v124;
        uint64_t v126 = sub_1C254CB40();
        (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v126 - 8) + 8))(v122, v126);
        break;
      case 2u:
      case 6u:
      case 7u:
        if (qword_1EBB6EF40 == -1) {
          goto LABEL_57;
        }
        goto LABEL_132;
      case 3u:
        if (qword_1EBB6EF40 == -1) {
          goto LABEL_57;
        }
        goto LABEL_132;
      case 4u:
        if (qword_1EBB6EF40 == -1) {
          goto LABEL_57;
        }
        goto LABEL_132;
      case 5u:
        if (qword_1EBB6EF40 == -1) {
          goto LABEL_57;
        }
LABEL_132:
        swift_once();
LABEL_57:
        id v88 = (id)qword_1EBB6FBC8;
        swift_bridgeObjectRetain();
        goto LABEL_77;
      case 8u:
        if (qword_1EBB6EF38 != -1) {
          swift_once();
        }
        id v88 = (id)qword_1EBB6FBB0;
        swift_bridgeObjectRetain();
LABEL_77:
        *(void *)&long long v300 = sub_1C254C730();
        *(void *)&long long v301 = v127;
        swift_bridgeObjectRelease();

        break;
      default:
        uint64_t v89 = *v292;
        uint64_t v90 = self;
        id v91 = objc_msgSend(v90, sel_supportedRecordCategoriesByCategoryType);
        if (v91)
        {
          uint64_t v92 = v91;
          sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
          sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FFC0);
          sub_1C21A9630();
          unint64_t v93 = sub_1C254F2D0();

          uint64_t v94 = v287;
          sub_1C21AA128(v93);
          id v96 = v95;
          uint64_t v287 = v94;
          swift_bridgeObjectRelease();
          uint64_t v97 = v96[2];
          v280 = v90;
          LODWORD(v279) = v89;
          if (v97)
          {
            sub_1C21A95CC();
            uint64_t v98 = (void *)sub_1C2550680();
            uint64_t v99 = v96[2];
            v311 = v98;
            swift_bridgeObjectRetain();
            uint64_t v289 = v99;
            if (v99)
            {
              uint64_t v100 = 0;
              unint64_t v101 = 0;
              v288 = v96;
              while (v101 < v96[2])
              {
                uint64_t v102 = &v96[v100];
                long long v103 = *(_OWORD *)&v96[v100 + 12];
                long long v300 = *(_OWORD *)&v96[v100 + 10];
                long long v301 = v103;
                char v104 = v96[v100 + 5];
                uint64_t v105 = LOBYTE(v96[v100 + 4]);
                uint64_t v106 = v96[v100 + 8];
                uint64_t v107 = v102[9];
                uint64_t v109 = (void *)v102[6];
                uint64_t v108 = v102[7];
                *(void *)&long long v293 = v109;
                *(void *)&long long v294 = v106;
                swift_bridgeObjectRetain();
                uint64_t v284 = v300;
                swift_bridgeObjectRetain();
                uint64_t v283 = *((void *)&v300 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v110 = *((id *)&v301 + 1);
                if (!v109) {
                  goto LABEL_118;
                }
                id v281 = v110;
                char v314 = v105;
                unint64_t v111 = sub_1C21A93C4(v105);
                uint64_t v113 = v98[2];
                BOOL v114 = (v112 & 1) == 0;
                BOOL v209 = __OFADD__(v113, v114);
                uint64_t v115 = v113 + v114;
                if (v209) {
                  goto LABEL_202;
                }
                char v116 = v112;
                if (v98[3] < v115)
                {
                  sub_1C2279214(v115, 1);
                  unint64_t v111 = sub_1C21A93C4(v105);
                  if ((v116 & 1) != (v117 & 1))
                  {
LABEL_239:
                    sub_1C2550910();
                    __break(1u);
LABEL_240:
                    v255 = (void *)swift_allocError();
                    swift_willThrow();
                    id v305 = v255;
                    id v256 = v255;
                    sub_1C2206F9C();
                    if (swift_dynamicCast()) {
                      goto LABEL_241;
                    }
LABEL_242:
                    swift_bridgeObjectRelease();

                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    v254 = (uint64_t *)&v311;
                    goto LABEL_243;
                  }
                }
                if (v116) {
                  goto LABEL_237;
                }
                uint64_t v98 = v311;
                v311[(v111 >> 6) + 8] |= 1 << v111;
                *(unsigned char *)(v98[6] + v111) = v105;
                uint64_t v118 = v98[7] + 72 * v111;
                *(unsigned char *)uint64_t v118 = v104;
                *(void *)(v118 + 8) = v293;
                *(void *)(v118 + 16) = v108;
                *(void *)(v118 + 24) = v294;
                *(void *)(v118 + 32) = v107;
                *(_OWORD *)(v118 + 40) = v300;
                *(_OWORD *)(v118 + 56) = v301;
                uint64_t v119 = v98[2];
                BOOL v209 = __OFADD__(v119, 1);
                uint64_t v120 = v119 + 1;
                if (v209) {
                  goto LABEL_203;
                }
                ++v101;
                v98[2] = v120;
                v100 += 10;
                id v96 = v288;
                if (v289 == v101) {
                  goto LABEL_118;
                }
              }
              __break(1u);
              goto LABEL_201;
            }
          }
          else
          {
            swift_bridgeObjectRetain();
            uint64_t v98 = (void *)MEMORY[0x1E4FBC868];
          }
LABEL_118:
          swift_bridgeObjectRelease_n();
          a1 = v277;
          uint64_t v90 = v280;
          uint64_t v89 = v279;
          if (!v98[2]) {
            goto LABEL_121;
          }
        }
        else
        {
          uint64_t v98 = (void *)MEMORY[0x1E4FBC868];
          if (!*(void *)(MEMORY[0x1E4FBC868] + 16)) {
            goto LABEL_121;
          }
        }
        uint64_t v174 = sub_1C21A93C4(v89);
        if (v175)
        {
          uint64_t v176 = (void *)(v98[7] + 72 * v174);
          uint64_t v177 = (void *)v176[1];
          *(void *)&long long v300 = v176[4];
          uint64_t v178 = v176[5];
          char v179 = (void *)v176[8];
          swift_bridgeObjectRetain();
          *(void *)&long long v301 = v178;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v180 = v179;
          id v181 = v177;
          swift_bridgeObjectRelease();
          goto LABEL_123;
        }
LABEL_121:
        swift_bridgeObjectRelease();
        id v182 = objc_msgSend(v90, sel_unknownRecordCategory);
        if (!v182) {
          goto LABEL_234;
        }
        sub_1C21AA50C(v182, (uint64_t)&v306);
        id v181 = (id)v307;
        *(void *)&long long v300 = v308;
        *(void *)&long long v301 = v309;
        id v180 = v310;
LABEL_123:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v8 = v286;
        uint64_t v18 = v275;
        break;
    }
    sub_1C238E9CC(v304, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    uint64_t v128 = *(int *)(v8 + 48);
    uint64_t v129 = v302;
    sub_1C238EA2C((uint64_t)v18, v302, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    *(void *)(v129 + v128) = *(void *)&v18[v128];
    sub_1C238EA2C(v129, (uint64_t)v291, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1C238ECD8(0, (unint64_t *)&qword_1EA2E3980, MEMORY[0x1E4F27990]);
        uint64_t v161 = v291;
        uint64_t v162 = (uint64_t *)&v291[*(int *)(v160 + 48)];
        uint64_t v163 = *v162;
        uint64_t v164 = v162[1];
        uint64_t v165 = sub_1C254CB40();
        (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v165 - 8) + 8))(v161, v165);
        goto LABEL_107;
      case 2u:
      case 6u:
        if (qword_1EBB6EF40 == -1) {
          goto LABEL_102;
        }
        goto LABEL_134;
      case 3u:
        if (qword_1EBB6EF40 == -1) {
          goto LABEL_102;
        }
        goto LABEL_134;
      case 4u:
        if (qword_1EBB6EF40 == -1) {
          goto LABEL_102;
        }
        goto LABEL_134;
      case 5u:
        if (qword_1EBB6EF40 == -1) {
          goto LABEL_102;
        }
        goto LABEL_134;
      case 7u:
        if (qword_1EBB6EF40 == -1) {
          goto LABEL_102;
        }
LABEL_134:
        swift_once();
LABEL_102:
        id v166 = (id)qword_1EBB6FBC8;
        swift_bridgeObjectRetain();
        goto LABEL_106;
      case 8u:
        if (qword_1EBB6EF38 != -1) {
          swift_once();
        }
        id v166 = (id)qword_1EBB6FBB0;
        swift_bridgeObjectRetain();
LABEL_106:
        uint64_t v163 = sub_1C254C730();
        uint64_t v164 = v167;
        swift_bridgeObjectRelease();

        goto LABEL_107;
      default:
        uint64_t v130 = *v291;
        uint64_t v131 = self;
        id v132 = objc_msgSend(v131, sel_supportedRecordCategoriesByCategoryType);
        if (v132)
        {
          char v133 = v132;
          sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
          sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6FFC0);
          sub_1C21A9630();
          unint64_t v134 = sub_1C254F2D0();

          uint64_t v135 = v287;
          sub_1C21AA128(v134);
          uint64_t v137 = v136;
          uint64_t v287 = v135;
          swift_bridgeObjectRelease();
          uint64_t v138 = *(void *)(v137 + 16);
          v270 = v131;
          unsigned int v313 = v130;
          if (v138)
          {
            sub_1C21A95CC();
            uint64_t v139 = (void *)sub_1C2550680();
            uint64_t v140 = *(void *)(v137 + 16);
            v311 = v139;
            swift_bridgeObjectRetain();
            uint64_t v284 = v140;
            if (v140)
            {
              uint64_t v141 = 0;
              unint64_t v142 = 0;
              uint64_t v283 = v137;
              while (v142 < *(void *)(v137 + 16))
              {
                long long v294 = *(_OWORD *)(v137 + v141 + 96);
                long long v293 = *(_OWORD *)(v137 + v141 + 80);
                char v143 = *(unsigned char *)(v137 + v141 + 40);
                uint64_t v144 = *(unsigned __int8 *)(v137 + v141 + 32);
                uint64_t v146 = *(void *)(v137 + v141 + 64);
                uint64_t v145 = *(void *)(v137 + v141 + 72);
                uint64_t v148 = *(void **)(v137 + v141 + 48);
                uint64_t v147 = *(void *)(v137 + v141 + 56);
                v288 = v148;
                uint64_t v289 = v146;
                swift_bridgeObjectRetain();
                id v281 = (id)v293;
                swift_bridgeObjectRetain();
                v280 = (void *)*((void *)&v293 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v149 = *((id *)&v294 + 1);
                if (!v148) {
                  goto LABEL_124;
                }
                id v279 = v149;
                char v314 = v144;
                unint64_t v150 = sub_1C21A93C4(v144);
                uint64_t v152 = v139[2];
                BOOL v153 = (v151 & 1) == 0;
                BOOL v209 = __OFADD__(v152, v153);
                uint64_t v154 = v152 + v153;
                if (v209) {
                  goto LABEL_204;
                }
                char v155 = v151;
                if (v139[3] < v154)
                {
                  sub_1C2279214(v154, 1);
                  unint64_t v150 = sub_1C21A93C4(v144);
                  if ((v155 & 1) != (v156 & 1)) {
                    goto LABEL_239;
                  }
                }
                if (v155) {
                  goto LABEL_240;
                }
                uint64_t v139 = v311;
                v311[(v150 >> 6) + 8] |= 1 << v150;
                *(unsigned char *)(v139[6] + v150) = v144;
                uint64_t v157 = v139[7] + 72 * v150;
                *(unsigned char *)uint64_t v157 = v143;
                *(void *)(v157 + 8) = v288;
                *(void *)(v157 + 16) = v147;
                *(void *)(v157 + 24) = v289;
                *(void *)(v157 + 32) = v145;
                *(_OWORD *)(v157 + 40) = v293;
                *(_OWORD *)(v157 + 56) = v294;
                uint64_t v158 = v139[2];
                BOOL v209 = __OFADD__(v158, 1);
                uint64_t v159 = v158 + 1;
                if (v209) {
                  goto LABEL_205;
                }
                ++v142;
                v139[2] = v159;
                v141 += 80;
                uint64_t v137 = v283;
                if (v284 == v142) {
                  goto LABEL_124;
                }
              }
LABEL_201:
              __break(1u);
LABEL_202:
              __break(1u);
LABEL_203:
              __break(1u);
LABEL_204:
              __break(1u);
LABEL_205:
              __break(1u);
LABEL_206:
              __break(1u);
LABEL_207:
              __break(1u);
LABEL_208:
              __break(1u);
LABEL_209:
              __break(1u);
LABEL_210:
              __break(1u);
LABEL_211:
              __break(1u);
LABEL_212:
              __break(1u);
LABEL_213:
              __break(1u);
LABEL_214:
              __break(1u);
LABEL_215:
              __break(1u);
LABEL_216:
              __break(1u);
LABEL_217:
              __break(1u);
LABEL_218:
              __break(1u);
LABEL_219:
              __break(1u);
LABEL_220:
              __break(1u);
              goto LABEL_221;
            }
          }
          else
          {
            swift_bridgeObjectRetain();
            uint64_t v139 = (void *)MEMORY[0x1E4FBC868];
          }
LABEL_124:
          swift_bridgeObjectRelease_n();
          uint64_t v131 = v270;
          uint64_t v130 = v313;
          if (!v139[2]) {
            goto LABEL_127;
          }
        }
        else
        {
          uint64_t v139 = (void *)MEMORY[0x1E4FBC868];
          if (!*(void *)(MEMORY[0x1E4FBC868] + 16)) {
            goto LABEL_127;
          }
        }
        uint64_t v183 = sub_1C21A93C4(v130);
        if (v184)
        {
          uint64_t v185 = (void *)(v139[7] + 72 * v183);
          uint64_t v186 = (void *)v185[1];
          uint64_t v163 = v185[4];
          uint64_t v164 = v185[5];
          int v187 = (void *)v185[8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v188 = v187;
          id v189 = v186;
          swift_bridgeObjectRelease();
          goto LABEL_129;
        }
LABEL_127:
        swift_bridgeObjectRelease();
        id v190 = objc_msgSend(v131, sel_unknownRecordCategory);
        if (!v190) {
          goto LABEL_233;
        }
        sub_1C21AA50C(v190, (uint64_t)&v306);
        id v189 = (id)v307;
        uint64_t v163 = v308;
        uint64_t v164 = v309;
        id v188 = v310;
LABEL_129:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        a1 = v277;
        uint64_t v8 = v286;
        uint64_t v18 = v275;
LABEL_107:
        sub_1C238E9CC(v302, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
        uint64_t v306 = v300;
        unint64_t v307 = v301;
        v311 = (void *)v163;
        uint64_t v312 = v164;
        sub_1C2218914();
        uint64_t v168 = sub_1C2550190();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C238E790((uint64_t)v18);
        sub_1C238E790(v303);
        if (v168 == -1)
        {
          uint64_t v169 = *a1;
          uint64_t v36 = v290;
          if (!*a1) {
            goto LABEL_231;
          }
          uint64_t v170 = v298;
          unint64_t v171 = v169 + v298;
          int64_t v172 = v297;
          uint64_t v173 = v169 + v297;
          sub_1C238E700(v169 + v298, v296);
          if (v170 < v172 || v171 >= v173 + v295) {
            swift_arrayInitWithTakeFrontToBack();
          }
          sub_1C238E700(v296, v173);
          uint64_t v81 = v299;
          if (v299 == v36) {
            goto LABEL_47;
          }
          continue;
        }
        uint64_t v36 = v290;
LABEL_47:
        uint64_t v55 = v278 + 1;
        if (v278 + 1 != v262) {
          goto LABEL_48;
        }
        uint64_t v55 = v262;
LABEL_136:
        unint64_t v33 = v260;
        uint64_t v34 = v261;
        if (v55 < v36) {
          goto LABEL_225;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v278 = v55;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v34 = sub_1C23F277C(0, *((void *)v34 + 2) + 1, 1, v34);
        }
        unint64_t v193 = *((void *)v34 + 2);
        unint64_t v192 = *((void *)v34 + 3);
        unint64_t v194 = v193 + 1;
        if (v193 >= v192 >> 1) {
          uint64_t v34 = sub_1C23F277C((char *)(v192 > 1), v193 + 1, 1, v34);
        }
        *((void *)v34 + 2) = v194;
        uint64_t v195 = v34 + 32;
        uint64_t v196 = &v34[16 * v193 + 32];
        uint64_t v197 = v278;
        *(void *)uint64_t v196 = v36;
        *((void *)v196 + 1) = v197;
        if (v193)
        {
          while (2)
          {
            unint64_t v198 = v194 - 1;
            if (v194 >= 4)
            {
              v203 = &v195[16 * v194];
              uint64_t v204 = *((void *)v203 - 8);
              uint64_t v205 = *((void *)v203 - 7);
              BOOL v209 = __OFSUB__(v205, v204);
              uint64_t v206 = v205 - v204;
              if (v209) {
                goto LABEL_210;
              }
              uint64_t v208 = *((void *)v203 - 6);
              uint64_t v207 = *((void *)v203 - 5);
              BOOL v209 = __OFSUB__(v207, v208);
              uint64_t v201 = v207 - v208;
              char v202 = v209;
              if (v209) {
                goto LABEL_211;
              }
              unint64_t v210 = v194 - 2;
              uint64_t v211 = &v195[16 * v194 - 32];
              uint64_t v213 = *(void *)v211;
              uint64_t v212 = *((void *)v211 + 1);
              BOOL v209 = __OFSUB__(v212, v213);
              uint64_t v214 = v212 - v213;
              if (v209) {
                goto LABEL_213;
              }
              BOOL v209 = __OFADD__(v201, v214);
              uint64_t v215 = v201 + v214;
              if (v209) {
                goto LABEL_216;
              }
              if (v215 >= v206)
              {
                v233 = &v195[16 * v198];
                uint64_t v235 = *(void *)v233;
                uint64_t v234 = *((void *)v233 + 1);
                BOOL v209 = __OFSUB__(v234, v235);
                uint64_t v236 = v234 - v235;
                if (v209) {
                  goto LABEL_220;
                }
                BOOL v226 = v201 < v236;
              }
              else
              {
LABEL_155:
                if (v202) {
                  goto LABEL_212;
                }
                unint64_t v210 = v194 - 2;
                v216 = &v195[16 * v194 - 32];
                uint64_t v218 = *(void *)v216;
                uint64_t v217 = *((void *)v216 + 1);
                BOOL v219 = __OFSUB__(v217, v218);
                uint64_t v220 = v217 - v218;
                char v221 = v219;
                if (v219) {
                  goto LABEL_215;
                }
                v222 = &v195[16 * v198];
                uint64_t v224 = *(void *)v222;
                uint64_t v223 = *((void *)v222 + 1);
                BOOL v209 = __OFSUB__(v223, v224);
                uint64_t v225 = v223 - v224;
                if (v209) {
                  goto LABEL_218;
                }
                if (__OFADD__(v220, v225)) {
                  goto LABEL_219;
                }
                if (v220 + v225 < v201) {
                  goto LABEL_167;
                }
                BOOL v226 = v201 < v225;
              }
              if (v226) {
                unint64_t v198 = v210;
              }
            }
            else
            {
              if (v194 == 3)
              {
                uint64_t v200 = *((void *)v34 + 4);
                uint64_t v199 = *((void *)v34 + 5);
                BOOL v209 = __OFSUB__(v199, v200);
                uint64_t v201 = v199 - v200;
                char v202 = v209;
                goto LABEL_155;
              }
              uint64_t v227 = *((void *)v34 + 4);
              uint64_t v228 = *((void *)v34 + 5);
              BOOL v209 = __OFSUB__(v228, v227);
              uint64_t v220 = v228 - v227;
              char v221 = v209;
LABEL_167:
              if (v221) {
                goto LABEL_214;
              }
              v229 = &v195[16 * v198];
              uint64_t v231 = *(void *)v229;
              uint64_t v230 = *((void *)v229 + 1);
              BOOL v209 = __OFSUB__(v230, v231);
              uint64_t v232 = v230 - v231;
              if (v209) {
                goto LABEL_217;
              }
              if (v232 < v220) {
                goto LABEL_184;
              }
            }
            unint64_t v237 = v198 - 1;
            if (v198 - 1 >= v194) {
              goto LABEL_206;
            }
            uint64_t v238 = *a1;
            if (!*a1) {
              goto LABEL_232;
            }
            v239 = &v195[16 * v237];
            uint64_t v240 = *(void *)v239;
            id v241 = &v195[16 * v198];
            uint64_t v242 = *((void *)v241 + 1);
            uint64_t v243 = v287;
            sub_1C238D568(v238 + *(void *)(v276 + 72) * *(void *)v239, v238 + *(void *)(v276 + 72) * *(void *)v241, v238 + *(void *)(v276 + 72) * v242, v33);
            uint64_t v287 = v243;
            if (v243) {
              goto LABEL_198;
            }
            if (v242 < v240) {
              goto LABEL_207;
            }
            if (v198 > *((void *)v34 + 2)) {
              goto LABEL_208;
            }
            *(void *)v239 = v240;
            *(void *)&v195[16 * v237 + 8] = v242;
            unint64_t v244 = *((void *)v34 + 2);
            if (v198 >= v244) {
              goto LABEL_209;
            }
            unint64_t v194 = v244 - 1;
            memmove(&v195[16 * v198], v241 + 16, 16 * (v244 - 1 - v198));
            *((void *)v34 + 2) = v244 - 1;
            a1 = v277;
            uint64_t v8 = v286;
            if (v244 <= 2) {
              goto LABEL_184;
            }
            continue;
          }
        }
        unint64_t v194 = 1;
LABEL_184:
        uint64_t v27 = a1[1];
        uint64_t v35 = v278;
        uint64_t v18 = v275;
        if (v278 < v27) {
          goto LABEL_13;
        }
LABEL_187:
        if (v194 >= 2)
        {
          uint64_t v245 = *a1;
          while (1)
          {
            unint64_t v246 = v194 - 2;
            if (v194 < 2) {
              break;
            }
            if (!v245) {
              goto LABEL_236;
            }
            uint64_t v247 = *(void *)&v34[16 * v246 + 32];
            uint64_t v248 = *(void *)&v34[16 * v194 + 24];
            uint64_t v249 = v287;
            sub_1C238D568(v245 + *(void *)(v276 + 72) * v247, v245 + *(void *)(v276 + 72) * *(void *)&v34[16 * v194 + 16], v245 + *(void *)(v276 + 72) * v248, v33);
            uint64_t v287 = v249;
            if (v249) {
              goto LABEL_198;
            }
            if (v248 < v247) {
              goto LABEL_222;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v34 = sub_1C23F321C((uint64_t)v34);
            }
            if (v246 >= *((void *)v34 + 2)) {
              goto LABEL_223;
            }
            v250 = &v34[16 * v246 + 32];
            *(void *)v250 = v247;
            *((void *)v250 + 1) = v248;
            unint64_t v251 = *((void *)v34 + 2);
            if (v194 > v251) {
              goto LABEL_224;
            }
            memmove(&v34[16 * v194 + 16], &v34[16 * v194 + 32], 16 * (v251 - v194));
            *((void *)v34 + 2) = v251 - 1;
            unint64_t v194 = v251 - 1;
            if (v251 <= 2) {
              goto LABEL_198;
            }
          }
LABEL_221:
          __break(1u);
LABEL_222:
          __break(1u);
LABEL_223:
          __break(1u);
LABEL_224:
          __break(1u);
LABEL_225:
          __break(1u);
LABEL_226:
          __break(1u);
          goto LABEL_227;
        }
LABEL_198:
        swift_bridgeObjectRelease();
        *(void *)(v258 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
    }
  }
}

void sub_1C238D1E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v40 = a1;
  sub_1C238ECD8(0, (unint64_t *)&qword_1EA2DF958, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  uint64_t v49 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v50 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v44 = (uint64_t)&v38 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v43 = (uint64_t)&v38 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v42 = (char *)&v38 - v15;
  uint64_t v48 = a3;
  uint64_t v39 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v14 + 72);
    uint64_t v17 = v16 * (v48 - 1);
    uint64_t v45 = v16;
    uint64_t v18 = v16 * v48;
    uint64_t v41 = a4;
    uint64_t v19 = (uint64_t)v42;
LABEL_5:
    uint64_t v20 = 0;
    uint64_t v21 = v40;
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    while (1)
    {
      uint64_t v22 = *a4;
      uint64_t v52 = v18 + v20;
      sub_1C238EA94(v18 + v20 + v22, v19);
      uint64_t v51 = v17 + v20;
      uint64_t v23 = v17 + v20 + v22;
      uint64_t v24 = v43;
      sub_1C238EA94(v23, v43);
      uint64_t v25 = v49;
      uint64_t v26 = *(int *)(v49 + 48);
      uint64_t v27 = v44;
      sub_1C238EA2C(v19, v44, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      *(void *)(v27 + v26) = *(void *)(v19 + v26);
      uint64_t v57 = BrowseCategory.localizedTitle.getter();
      uint64_t v29 = v28;
      sub_1C238E9CC(v27, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      uint64_t v30 = *(int *)(v25 + 48);
      sub_1C238EA2C(v24, v27, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      *(void *)(v27 + v30) = *(void *)(v24 + v30);
      uint64_t v31 = BrowseCategory.localizedTitle.getter();
      uint64_t v33 = v32;
      sub_1C238E9CC(v27, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      uint64_t v55 = v57;
      uint64_t v56 = v29;
      uint64_t v53 = v31;
      uint64_t v54 = v33;
      uint64_t v18 = v46;
      sub_1C2218914();
      uint64_t v34 = sub_1C2550190();
      a4 = v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v35 = v24;
      uint64_t v17 = v47;
      sub_1C238E790(v35);
      sub_1C238E790(v19);
      if (v34 != -1)
      {
LABEL_4:
        v17 += v45;
        v18 += v45;
        if (++v48 == v39) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v36 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v37 = v36 + v17 + v20;
      sub_1C238E700(v36 + v18 + v20, v50);
      swift_arrayInitWithTakeFrontToBack();
      sub_1C238E700(v50, v37);
      v20 -= v45;
      if (v48 == ++v21) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C238D568(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  sub_1C238ECD8(0, (unint64_t *)&qword_1EA2DF958, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  uint64_t v73 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v69 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v71 = (uint64_t)&v63 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v70 = (uint64_t)&v63 - v13;
  uint64_t v15 = *(void *)(v14 + 72);
  if (!v15)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_61;
  }
  int64_t v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_62;
  }
  uint64_t v17 = (uint64_t)(a2 - a1) / v15;
  unint64_t v80 = a1;
  unint64_t v79 = a4;
  uint64_t v18 = v16 / v15;
  if (v17 >= v16 / v15)
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      uint64_t v20 = v18 * v15;
      if (a4 < a2 || a2 + v20 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v42 = a4 + v20;
      unint64_t v78 = a4 + v20;
      unint64_t v80 = a2;
      if (v20 >= 1 && a1 < a2)
      {
        uint64_t v44 = -v15;
        unint64_t v65 = a1;
        unint64_t v66 = a4;
        uint64_t v64 = -v15;
        do
        {
          unint64_t v72 = a3;
          unint64_t v67 = a2;
          unint64_t v68 = a3 + v44;
          uint64_t v45 = v70;
          sub_1C238EA94(v42 + v44, v70);
          unint64_t v46 = a2 + v44;
          uint64_t v47 = v71;
          sub_1C238EA94(a2 + v44, v71);
          uint64_t v48 = v73;
          uint64_t v49 = *(int *)(v73 + 48);
          uint64_t v50 = v69;
          sub_1C238EA2C(v45, v69, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
          *(void *)(v50 + v49) = *(void *)(v45 + v49);
          uint64_t v51 = BrowseCategory.localizedTitle.getter();
          uint64_t v53 = v52;
          sub_1C238E9CC(v50, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
          uint64_t v54 = *(int *)(v48 + 48);
          sub_1C238EA2C(v47, v50, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
          *(void *)(v50 + v54) = *(void *)(v47 + v54);
          uint64_t v55 = BrowseCategory.localizedTitle.getter();
          uint64_t v57 = v56;
          sub_1C238E9CC(v50, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
          uint64_t v76 = v51;
          uint64_t v77 = v53;
          uint64_t v74 = v55;
          uint64_t v75 = v57;
          sub_1C2218914();
          uint64_t v58 = sub_1C2550190();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C238E790(v47);
          sub_1C238E790(v45);
          if (v58 == -1)
          {
            uint64_t v44 = v64;
            a3 = v68;
            if (v72 < v67 || v68 >= v67)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v61 = v65;
              unint64_t v60 = v66;
            }
            else
            {
              unint64_t v61 = v65;
              unint64_t v60 = v66;
              if (v72 != v67) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v80 += v44;
          }
          else
          {
            unint64_t v46 = v67;
            a3 = v68;
            unint64_t v59 = v78;
            v78 += v64;
            uint64_t v44 = v64;
            if (v72 < v59 || v68 >= v59)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v61 = v65;
              unint64_t v60 = v66;
            }
            else
            {
              unint64_t v61 = v65;
              unint64_t v60 = v66;
              if (v72 != v59) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
          }
          unint64_t v42 = v78;
          if (v78 <= v60) {
            break;
          }
          a2 = v46;
        }
        while (v46 > v61);
      }
      goto LABEL_59;
    }
  }
  else if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = v17 * v15;
    if (a4 < a1 || a1 + v19 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v68 = a4 + v19;
    unint64_t v78 = a4 + v19;
    if (v19 >= 1 && a2 < a3)
    {
      unint64_t v72 = a3;
      unint64_t v67 = v15;
      do
      {
        uint64_t v22 = v70;
        sub_1C238EA94(a2, v70);
        uint64_t v23 = a4;
        unint64_t v24 = a2;
        uint64_t v25 = v71;
        sub_1C238EA94(v23, v71);
        uint64_t v26 = v73;
        uint64_t v27 = *(int *)(v73 + 48);
        uint64_t v28 = v69;
        sub_1C238EA2C(v22, v69, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
        *(void *)(v28 + v27) = *(void *)(v22 + v27);
        uint64_t v29 = BrowseCategory.localizedTitle.getter();
        uint64_t v31 = v30;
        sub_1C238E9CC(v28, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
        uint64_t v32 = *(int *)(v26 + 48);
        sub_1C238EA2C(v25, v28, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
        *(void *)(v28 + v32) = *(void *)(v25 + v32);
        uint64_t v33 = BrowseCategory.localizedTitle.getter();
        uint64_t v35 = v34;
        sub_1C238E9CC(v28, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
        uint64_t v76 = v29;
        uint64_t v77 = v31;
        uint64_t v74 = v33;
        uint64_t v75 = v35;
        sub_1C2218914();
        uint64_t v36 = sub_1C2550190();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C238E790(v25);
        sub_1C238E790(v22);
        unint64_t v37 = v80;
        if (v36 == -1)
        {
          unint64_t v38 = v67;
          unint64_t v41 = v24 + v67;
          if (v80 < v24 || v80 >= v41)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v40 = v72;
          }
          else
          {
            unint64_t v40 = v72;
            if (v80 == v24) {
              unint64_t v37 = v24;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v38 = v67;
          unint64_t v39 = v79 + v67;
          if (v80 < v79 || v80 >= v39)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v40 = v72;
          }
          else
          {
            unint64_t v40 = v72;
            if (v80 != v79) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v79 = v39;
          unint64_t v41 = v24;
        }
        unint64_t v80 = v37 + v38;
        a4 = v79;
        if (v79 >= v68) {
          break;
        }
        a2 = v41;
      }
      while (v41 < v40);
    }
LABEL_59:
    sub_1C23F2FD4(&v80, &v79, (uint64_t *)&v78);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

void sub_1C238DC30(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = type metadata accessor for BrowseCategory();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2285704();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v55 = a1;
  uint64_t v56 = v8;
  uint64_t v54 = v3;
  uint64_t v17 = *(int *)(v12 + 48);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v52[1] = v7;
  unint64_t v53 = v18;
  uint64_t v19 = a1 + v18;
  uint64_t v58 = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  sub_1C238EA2C(v19, (uint64_t)v15, (uint64_t (*)(void))sub_1C2285704);
  sub_1C238E964((uint64_t)v15, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
  uint64_t v57 = v17;
  uint64_t v20 = *(void *)&v15[v17];
  uint64_t v21 = (void *)*a3;
  unint64_t v23 = sub_1C2457874((uint64_t)v10);
  uint64_t v24 = v21[2];
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25)) {
    goto LABEL_24;
  }
  char v27 = v22;
  if (v21[3] >= v26)
  {
    if (a2)
    {
      if (v22) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1C24AF2A0();
      if (v27) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v32 = (void *)*a3;
    *(void *)(*a3 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    uint64_t v33 = v32[6];
    uint64_t v56 = *(void *)(v56 + 72);
    sub_1C238E964((uint64_t)v10, v33 + v56 * v23, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    *(void *)(v32[7] + 8 * v23) = v20;
    uint64_t v34 = v32[2];
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (v35)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v32[2] = v36;
    uint64_t v37 = v16 - 1;
    if (v16 == 1)
    {
LABEL_23:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v38 = v55 + v58 + v53;
    while (1)
    {
      sub_1C238EA2C(v38, (uint64_t)v15, (uint64_t (*)(void))sub_1C2285704);
      sub_1C238E964((uint64_t)v15, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      uint64_t v39 = *(void *)&v15[v57];
      unint64_t v40 = (void *)*a3;
      unint64_t v42 = sub_1C2457874((uint64_t)v10);
      uint64_t v43 = v40[2];
      BOOL v44 = (v41 & 1) == 0;
      uint64_t v45 = v43 + v44;
      if (__OFADD__(v43, v44)) {
        break;
      }
      char v46 = v41;
      if (v40[3] < v45)
      {
        sub_1C227C31C(v45, 1);
        unint64_t v47 = sub_1C2457874((uint64_t)v10);
        if ((v46 & 1) != (v48 & 1)) {
          goto LABEL_26;
        }
        unint64_t v42 = v47;
      }
      if (v46) {
        goto LABEL_10;
      }
      uint64_t v49 = (void *)*a3;
      *(void *)(*a3 + 8 * (v42 >> 6) + 64) |= 1 << v42;
      sub_1C238E964((uint64_t)v10, v49[6] + v56 * v42, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      *(void *)(v49[7] + 8 * v42) = v39;
      uint64_t v50 = v49[2];
      BOOL v35 = __OFADD__(v50, 1);
      uint64_t v51 = v50 + 1;
      if (v35) {
        goto LABEL_25;
      }
      v49[2] = v51;
      v38 += v58;
      if (!--v37) {
        goto LABEL_23;
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_1C227C31C(v26, a2 & 1);
  unint64_t v28 = sub_1C2457874((uint64_t)v10);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v23 = v28;
    if ((v27 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v30 = (void *)swift_allocError();
    swift_willThrow();
    id v61 = v30;
    id v31 = v30;
    sub_1C2206F9C();
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1C238E9CC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1C2550910();
  __break(1u);
LABEL_27:
  uint64_t v59 = 0;
  unint64_t v60 = 0xE000000000000000;
  sub_1C25503A0();
  sub_1C254F5A0();
  sub_1C25504F0();
  sub_1C254F5A0();
  sub_1C25505F0();
  __break(1u);
}

BOOL _s15HealthRecordsUI13CategoryCountV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = BrowseCategory.rawValue.getter();
  uint64_t v6 = v5;
  if (v4 == BrowseCategory.rawValue.getter() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = sub_1C2550870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v8 & 1) == 0) {
      return result;
    }
  }
  uint64_t v10 = type metadata accessor for CategoryCount();
  return *(void *)(a1 + *(int *)(v10 + 20)) == *(void *)(a2 + *(int *)(v10 + 20));
}

uint64_t sub_1C238E238(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v6 = type metadata accessor for BrowseCategory();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v37 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v40 = (uint64_t)&v34 - v9;
  sub_1C2285704();
  uint64_t v38 = *(void *)(v10 - 8);
  uint64_t v39 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v45 = (uint64_t)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (!v12) {
    return v13;
  }
  uint64_t v46 = MEMORY[0x1E4FBC860];
  sub_1C2274D78(0, v12, 0);
  uint64_t result = sub_1C246B420(a1);
  uint64_t v15 = result;
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  uint64_t v35 = a1;
  uint64_t v36 = a1 + 56;
  uint64_t v20 = (uint64_t)v37;
  uint64_t v21 = v45;
  while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(v36 + (((unint64_t)v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(a1 + 36) != v17) {
      goto LABEL_16;
    }
    uint64_t v22 = *(void *)(a1 + 48);
    uint64_t v23 = v40;
    sub_1C238EA2C(v22 + *(void *)(v41 + 72) * v15, v40, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    uint64_t v24 = sub_1C238E964(v23, v20, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    MEMORY[0x1F4188790](v24);
    unint64_t v25 = v42;
    *(&v34 - 2) = v43;
    *(&v34 - 1) = v20;
    uint64_t v26 = v4;
    sub_1C2389D88(0, (void (*)(uint64_t *, void *))sub_1C238F754, (uint64_t)(&v34 - 4), v25);
    uint64_t v28 = v27;
    uint64_t v44 = v26;
    uint64_t v29 = *(int *)(v39 + 48);
    sub_1C238EA2C(v20, v21, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    *(void *)(v21 + v29) = v28;
    sub_1C238E9CC(v20, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    uint64_t v13 = v46;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C2274D78(0, *(void *)(v13 + 16) + 1, 1);
      uint64_t v13 = v46;
    }
    unint64_t v31 = *(void *)(v13 + 16);
    unint64_t v30 = *(void *)(v13 + 24);
    if (v31 >= v30 >> 1)
    {
      sub_1C2274D78(v30 > 1, v31 + 1, 1);
      uint64_t v13 = v46;
    }
    *(void *)(v13 + 16) = v31 + 1;
    sub_1C238E964(v45, v13+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v31, (uint64_t (*)(void))sub_1C2285704);
    a1 = v35;
    uint64_t result = sub_1C24861A0(v15, v17, v19 & 1, v35);
    uint64_t v15 = result;
    uint64_t v17 = v32;
    char v19 = v33 & 1;
    --v12;
    uint64_t v4 = v44;
    if (!v12)
    {
      sub_1C220012C(result, v32, v33 & 1);
      return v13;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t _sSD15HealthRecordsUIAA14BrowseCategoryORszSiRs_rlE_019queryDescriptionsByE0SDyACSiGSDySo17HKQueryDescriptorCSo8NSNumberCG_SDyACSayAGGGtcfC_0(unint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C2490CAC(a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C238E238(v4, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (*(void *)(v5 + 16))
  {
    sub_1C220823C();
    uint64_t v6 = sub_1C2550680();
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC868];
  }
  uint64_t v9 = v6;
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_1C238DC30(v7, 1, &v9);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1C238E700(uint64_t a1, uint64_t a2)
{
  sub_1C238ECD8(0, (unint64_t *)&qword_1EA2DF958, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C238E790(uint64_t a1)
{
  sub_1C238ECD8(0, (unint64_t *)&qword_1EA2DF958, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for CategoryCount()
{
  uint64_t result = qword_1EBB6D988;
  if (!qword_1EBB6D988) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C238E864()
{
  unint64_t result = qword_1EA2E1FD8;
  if (!qword_1EA2E1FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E1FD8);
  }
  return result;
}

void sub_1C238E8B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C238E864();
    unint64_t v7 = a3(a1, &type metadata for CategoryCount.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C238E91C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C238E964(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C238E9CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C238EA2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C238EA94(uint64_t a1, uint64_t a2)
{
  sub_1C238ECD8(0, (unint64_t *)&qword_1EA2DF958, (void (*)(uint64_t))type metadata accessor for BrowseCategory);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C238EB24()
{
  return sub_1C238E91C(&qword_1EA2E1FF8, (void (*)(uint64_t))type metadata accessor for CategoryCount);
}

uint64_t *initializeBufferWithCopyOfBuffer for CategoryCount(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for BrowseCategory();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_1C254CB40();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      sub_1C238ECD8(0, (unint64_t *)&qword_1EA2E3980, MEMORY[0x1E4F27990]);
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v11 = (uint64_t *)((char *)a1 + v10);
      int64_t v12 = (uint64_t *)((char *)a2 + v10);
      uint64_t v13 = v12[1];
      *uint64_t v11 = *v12;
      v11[1] = v13;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

void sub_1C238ECD8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t destroy for CategoryCount(uint64_t a1)
{
  type metadata accessor for BrowseCategory();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_1C254CB40();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    sub_1C238ECD8(0, (unint64_t *)&qword_1EA2E3980, MEMORY[0x1E4F27990]);
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for CategoryCount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BrowseCategory();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1C254CB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    sub_1C238ECD8(0, (unint64_t *)&qword_1EA2E3980, MEMORY[0x1E4F27990]);
    uint64_t v9 = *(int *)(v8 + 48);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithCopy for CategoryCount(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C238E9CC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    uint64_t v6 = type metadata accessor for BrowseCategory();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1C254CB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      sub_1C238ECD8(0, (unint64_t *)&qword_1EA2E3980, MEMORY[0x1E4F27990]);
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = *((void *)v11 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *initializeWithTake for CategoryCount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for BrowseCategory();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1C254CB40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    sub_1C238ECD8(0, (unint64_t *)&qword_1EA2E3980, MEMORY[0x1E4F27990]);
    *(_OWORD *)&a1[*(int *)(v8 + 48)] = *(_OWORD *)&a2[*(int *)(v8 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithTake for CategoryCount(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C238E9CC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BrowseCategory);
    uint64_t v6 = type metadata accessor for BrowseCategory();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1C254CB40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      sub_1C238ECD8(0, (unint64_t *)&qword_1EA2E3980, MEMORY[0x1E4F27990]);
      *(_OWORD *)&a1[*(int *)(v8 + 48)] = *(_OWORD *)&a2[*(int *)(v8 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t getEnumTagSinglePayload for CategoryCount(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C238F2D4);
}

uint64_t sub_1C238F2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseCategory();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CategoryCount(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C238F354);
}

uint64_t sub_1C238F354(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BrowseCategory();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1C238F3C4()
{
  uint64_t result = type metadata accessor for BrowseCategory();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CategoryCount.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C238F528);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CategoryCount.CodingKeys()
{
  return &type metadata for CategoryCount.CodingKeys;
}

unint64_t sub_1C238F564()
{
  unint64_t result = qword_1EA2E2000;
  if (!qword_1EA2E2000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2000);
  }
  return result;
}

unint64_t sub_1C238F5BC()
{
  unint64_t result = qword_1EA2E2008;
  if (!qword_1EA2E2008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2008);
  }
  return result;
}

unint64_t sub_1C238F614()
{
  unint64_t result = qword_1EA2E2010;
  if (!qword_1EA2E2010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2010);
  }
  return result;
}

uint64_t sub_1C238F668(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79726F6765746163 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C238F754(unint64_t a1, uint64_t *a2)
{
  return sub_1C238A0CC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void UserDomainConceptFeedItemViewData.init(displayName:secondaryText:icon:tintColor:valueInRange:valueDisplay:unitDisplay:sortHint:editing:pinned:expanded:showNoValue:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15, char a16, char a17, char a18)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v25 = a5;
  id v26 = a6;
  id v27 = a7;
  if (a12)
  {
    a11 = sub_1C254F530();
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v30 = v25;
  id v31 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();

  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(void *)(a9 + 72) = a11;
  *(void *)(a9 + 80) = v29;
  *(void *)(a9 + 88) = a13;
  *(unsigned char *)(a9 + 96) = a14 & 1;
  *(unsigned char *)(a9 + 97) = a15 & 1;
  *(unsigned char *)(a9 + 98) = a16 & 1;
  *(unsigned char *)(a9 + 99) = a17 & 1;
  *(unsigned char *)(a9 + 100) = a18 & 1;
}

uint64_t UserDomainConceptFeedItemViewData.valueUnitDisplayString.getter()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[10];
  if (v0[8])
  {
    uint64_t v3 = v0[7];
    if (v2)
    {
      uint64_t v5 = v0[7];
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      return v5;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
  }
  else if (v2)
  {
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    return v0[9];
  }
  return v3;
}

uint64_t UserDomainConceptFeedItemViewData.displayName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserDomainConceptFeedItemViewData.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.displayName.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.secondaryText.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserDomainConceptFeedItemViewData.secondaryText.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.secondaryText.modify())()
{
  return nullsub_1;
}

void *UserDomainConceptFeedItemViewData.icon.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void UserDomainConceptFeedItemViewData.icon.setter(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
}

uint64_t (*UserDomainConceptFeedItemViewData.icon.modify())()
{
  return nullsub_1;
}

void *UserDomainConceptFeedItemViewData.tintColor.getter()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

void UserDomainConceptFeedItemViewData.tintColor.setter(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
}

uint64_t (*UserDomainConceptFeedItemViewData.tintColor.modify())()
{
  return nullsub_1;
}

void *UserDomainConceptFeedItemViewData.valueInRange.getter()
{
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

void UserDomainConceptFeedItemViewData.valueInRange.setter(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
}

uint64_t (*UserDomainConceptFeedItemViewData.valueInRange.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.valueDisplay.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserDomainConceptFeedItemViewData.valueDisplay.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.valueDisplay.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.unitDisplay.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserDomainConceptFeedItemViewData.unitDisplay.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.unitDisplay.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.sortHint.getter()
{
  return *(void *)(v0 + 88);
}

uint64_t UserDomainConceptFeedItemViewData.sortHint.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 88) = result;
  *(unsigned char *)(v2 + 96) = a2 & 1;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.sortHint.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.editing.getter()
{
  return *(unsigned __int8 *)(v0 + 97);
}

uint64_t UserDomainConceptFeedItemViewData.editing.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 97) = result;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.editing.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.pinned.getter()
{
  return *(unsigned __int8 *)(v0 + 98);
}

uint64_t UserDomainConceptFeedItemViewData.pinned.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 98) = result;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.pinned.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.expanded.getter()
{
  return *(unsigned __int8 *)(v0 + 99);
}

uint64_t UserDomainConceptFeedItemViewData.expanded.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 99) = result;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.expanded.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.showNoValue.getter()
{
  return *(unsigned __int8 *)(v0 + 100);
}

uint64_t UserDomainConceptFeedItemViewData.showNoValue.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 100) = result;
  return result;
}

uint64_t (*UserDomainConceptFeedItemViewData.showNoValue.modify())()
{
  return nullsub_1;
}

uint64_t UserDomainConceptFeedItemViewData.style.getter@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = (void *)v1[4];
  if (v5) {
    id v6 = (id)v1[4];
  }
  else {
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_init);
  }
  *a1 = v6;
  a1[1] = v4;
  a1[2] = v3;
  uint64_t v7 = *MEMORY[0x1E4F664C8];
  uint64_t v8 = sub_1C254DBA0();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(a1, v7, v8);
  id v9 = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C238FF78@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = (void *)v1[4];
  if (v5) {
    id v6 = (id)v1[4];
  }
  else {
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_init);
  }
  *a1 = v6;
  a1[1] = v4;
  a1[2] = v3;
  uint64_t v7 = *MEMORY[0x1E4F664C8];
  uint64_t v8 = sub_1C254DBA0();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(a1, v7, v8);
  id v9 = v5;
  return swift_bridgeObjectRetain();
}

void *sub_1C239003C()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void *sub_1C2390064()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

uint64_t sub_1C239008C()
{
  return *(unsigned __int8 *)(v0 + 97);
}

uint64_t sub_1C2390094()
{
  return *(unsigned __int8 *)(v0 + 98);
}

uint64_t sub_1C239009C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C23900CC()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C23900FC()
{
  return *(unsigned __int8 *)(v0 + 100);
}

uint64_t _s15HealthRecordsUI33UserDomainConceptFeedItemViewDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void **)(a1 + 32);
  id v6 = *(void **)(a1 + 40);
  uint64_t v5 = *(void **)(a1 + 48);
  uint64_t v41 = *(void *)(a1 + 56);
  uint64_t v45 = *(void *)(a1 + 64);
  uint64_t v39 = *(void *)(a1 + 72);
  uint64_t v43 = *(void *)(a1 + 80);
  uint64_t v27 = *(void *)(a1 + 88);
  char v37 = *(unsigned char *)(a1 + 96);
  int v35 = *(unsigned __int8 *)(a1 + 97);
  int v33 = *(unsigned __int8 *)(a1 + 98);
  int v31 = *(unsigned __int8 *)(a1 + 99);
  int v29 = *(unsigned __int8 *)(a1 + 100);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v10 = *(void **)(a2 + 32);
  id v9 = *(void **)(a2 + 40);
  uint64_t v11 = *(void **)(a2 + 48);
  uint64_t v40 = *(void *)(a2 + 56);
  uint64_t v44 = *(void *)(a2 + 64);
  uint64_t v38 = *(void *)(a2 + 72);
  uint64_t v42 = *(void *)(a2 + 80);
  uint64_t v26 = *(void *)(a2 + 88);
  int v36 = *(unsigned __int8 *)(a2 + 96);
  int v34 = *(unsigned __int8 *)(a2 + 97);
  int v32 = *(unsigned __int8 *)(a2 + 98);
  int v30 = *(unsigned __int8 *)(a2 + 99);
  int v28 = *(unsigned __int8 *)(a2 + 100);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_1C2550870(), result = 0, (v12 & 1) != 0))
  {
    if (v3)
    {
      if (!v7) {
        return 0;
      }
      if (v2 != v8 || v3 != v7)
      {
        char v14 = sub_1C2550870();
        uint64_t result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v7)
    {
      return 0;
    }
    if (v4)
    {
      if (!v10) {
        return 0;
      }
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6EEB8);
      id v15 = v10;
      id v16 = v4;
      char v17 = sub_1C254FF70();

      if ((v17 & 1) == 0) {
        return 0;
      }
    }
    else if (v10)
    {
      return 0;
    }
    if (v6)
    {
      if (!v9) {
        return 0;
      }
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
      id v18 = v9;
      id v19 = v6;
      char v20 = sub_1C254FF70();

      if ((v20 & 1) == 0) {
        return 0;
      }
    }
    else if (v9)
    {
      return 0;
    }
    if (v5)
    {
      if (!v11) {
        return 0;
      }
      sub_1C21AB51C(0, &qword_1EA2E2018);
      id v21 = v11;
      id v22 = v5;
      char v23 = sub_1C254FF70();

      if ((v23 & 1) == 0) {
        return 0;
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v45)
    {
      if (!v44) {
        return 0;
      }
      if (v41 != v40 || v45 != v44)
      {
        char v24 = sub_1C2550870();
        uint64_t result = 0;
        if ((v24 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v44)
    {
      return 0;
    }
    if (v43)
    {
      if (!v42) {
        return 0;
      }
      if (v39 != v38 || v43 != v42)
      {
        char v25 = sub_1C2550870();
        uint64_t result = 0;
        if ((v25 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v42)
    {
      return 0;
    }
    if (v37)
    {
      uint64_t result = 0;
      if (!v36) {
        return result;
      }
LABEL_47:
      if (((v35 ^ v34) & 1) == 0 && ((v33 ^ v32) & 1) == 0 && ((v31 ^ v30) & 1) == 0) {
        return v29 ^ v28 ^ 1u;
      }
      return result;
    }
    if ((v36 & 1) == 0)
    {
      uint64_t result = 0;
      if (v27 != v26) {
        return result;
      }
      goto LABEL_47;
    }
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of ConceptTitleViewContentProviding.displayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ConceptTitleViewContentProviding.secondaryText.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConceptTitleViewContentProviding.icon.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ConceptTitleViewContentProviding.tintColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ConceptTitleViewContentProviding.editing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ConceptTitleViewContentProviding.pinned.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t destroy for UserDomainConceptFeedItemViewData(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UserDomainConceptFeedItemViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void **)(a2 + 32);
  id v6 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  uint64_t v8 = *(void **)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v7;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 97) = *(_DWORD *)(a2 + 97);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v5;
  id v12 = v6;
  id v13 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserDomainConceptFeedItemViewData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 40);
  uint64_t v8 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v8;
  id v9 = v8;

  uint64_t v10 = *(void **)(a1 + 48);
  id v11 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v11;
  id v12 = v11;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 88) = v13;
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  *(unsigned char *)(a1 + 99) = *(unsigned char *)(a2 + 99);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  return a1;
}

__n128 __swift_memcpy101_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 93) = *(void *)((char *)a2 + 93);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for UserDomainConceptFeedItemViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  long long v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  long long v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(unsigned char *)(a1 + 98) = *(unsigned char *)(a2 + 98);
  *(unsigned char *)(a1 + 99) = *(unsigned char *)(a2 + 99);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserDomainConceptFeedItemViewData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 101)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserDomainConceptFeedItemViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 100) = 0;
    *(_DWORD *)(result + 96) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 101) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 101) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserDomainConceptFeedItemViewData()
{
  return &type metadata for UserDomainConceptFeedItemViewData;
}

id static Optional<A>.+ infix(_:_:)(void *a1, void *a2)
{
  id v2 = a2;
  if (a1)
  {
    if (a2)
    {
      sub_1C21ACA3C();
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_1C255CD70;
      *(void *)(v4 + 32) = a1;
      *(void *)(v4 + 40) = v2;
      sub_1C254F730();
      sub_1C22EEE20();
      id v5 = v2;
      id v6 = a1;
      id v7 = v5;
      id v8 = v6;
      id v9 = (void *)sub_1C254F700();
      swift_bridgeObjectRelease();
      id v2 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v9);
    }
    else
    {
      id v11 = a1;
      return a1;
    }
  }
  else if (a2)
  {
    id v10 = a2;
  }
  return v2;
}

id static NSPredicate.! prefix(_:)(uint64_t a1)
{
  id v1 = objc_msgSend(self, sel_notPredicateWithSubpredicate_, a1);
  return v1;
}

id static NSPredicate.+ infix(_:_:)(void *a1, void *a2)
{
  sub_1C21ACA3C();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C255CD70;
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  sub_1C254F730();
  sub_1C22EEE20();
  id v5 = a1;
  id v6 = a2;
  id v7 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v7);

  return v8;
}

uint64_t *sub_1C2390ADC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v37 = sub_1C254CCC0();
    int v36 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v37 - 8) + 16);
    v36(a1, a2, v37);
    uint64_t v7 = a3[5];
    id v8 = (char *)a1 + v7;
    id v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C254CAD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = a3[7];
    uint64_t v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    char v14 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
    uint64_t v15 = a3[8];
    uint64_t v16 = a3[9];
    char v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)a1 + v15) = (uint64_t)v17;
    int v35 = (char *)a1 + v16;
    id v18 = (char *)a2 + v16;
    uint64_t v19 = sub_1C254CBD0();
    char v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    id v21 = v13;
    id v22 = v14;
    id v23 = v17;
    v20(v35, v18, v19);
    uint64_t v24 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    char v25 = *(void **)((char *)a2 + v24);
    *(uint64_t *)((char *)a1 + v24) = (uint64_t)v25;
    uint64_t v26 = a3[12];
    uint64_t v27 = (char *)a1 + v26;
    int v28 = (char *)a2 + v26;
    id v29 = v25;
    v36((uint64_t *)v27, (uint64_t *)v28, v37);
    uint64_t v30 = a3[13];
    int v31 = *(void **)((char *)a2 + v30);
    *(uint64_t *)((char *)a1 + v30) = (uint64_t)v31;
    id v32 = v31;
  }
  return a1;
}

void sub_1C2390CD8(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1C254CCC0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_1C254CAD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  uint64_t v8 = a1 + a2[9];
  uint64_t v9 = sub_1C254CBD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  v5(a1 + a2[12], v4);
  uint64_t v10 = *(void **)(a1 + a2[13]);
}

uint64_t sub_1C2390E28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v35 = sub_1C254CCC0();
  int v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16);
  v34(a1, a2, v35);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C254CAD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = *(void **)(a2 + v10);
  *(void *)(a1 + v10) = v12;
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v16;
  uint64_t v33 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_1C254CBD0();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  id v20 = v12;
  id v21 = v13;
  id v22 = v16;
  v19(v33, v17, v18);
  uint64_t v23 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v24 = *(void **)(a2 + v23);
  *(void *)(a1 + v23) = v24;
  uint64_t v25 = a3[12];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  id v28 = v24;
  v34(v26, v27, v35);
  uint64_t v29 = a3[13];
  uint64_t v30 = *(void **)(a2 + v29);
  *(void *)(a1 + v29) = v30;
  id v31 = v30;
  return a1;
}

uint64_t sub_1C2390FD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CCC0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C254CAD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = *(void **)(a2 + v12);
  uint64_t v14 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = v13;
  id v15 = v13;

  uint64_t v16 = a3[7];
  uint64_t v17 = *(void **)(a2 + v16);
  uint64_t v18 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = v17;
  id v19 = v17;

  uint64_t v20 = a3[8];
  id v21 = *(void **)(a2 + v20);
  id v22 = *(void **)(a1 + v20);
  *(void *)(a1 + v20) = v21;
  id v23 = v21;

  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_1C254CBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v28 = a3[11];
  uint64_t v29 = *(void **)(a2 + v28);
  uint64_t v30 = *(void **)(a1 + v28);
  *(void *)(a1 + v28) = v29;
  id v31 = v29;

  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v32 = a3[13];
  uint64_t v33 = *(void **)(a1 + v32);
  int v34 = *(void **)(a2 + v32);
  *(void *)(a1 + v32) = v34;
  id v35 = v34;

  return a1;
}

uint64_t sub_1C2391188(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CCC0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C254CAD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1C254CBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  v7(a1 + a3[12], a2 + a3[12], v6);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1C23912F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CCC0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C254CAD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  uint64_t v14 = a3[7];
  uint64_t v15 = *(void **)(a1 + v14);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);

  uint64_t v16 = a3[8];
  uint64_t v17 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);

  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_1C254CBD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  uint64_t v22 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  id v23 = *(void **)(a1 + v22);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);

  v7(a1 + a3[12], a2 + a3[12], v6);
  uint64_t v24 = a3[13];
  uint64_t v25 = *(void **)(a1 + v24);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);

  return a1;
}

uint64_t sub_1C2391490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C23914A4);
}

uint64_t sub_1C23914A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C254CCC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1C254CAD0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[6]);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = sub_1C254CBD0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[9];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_1C2391624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2391638);
}

uint64_t sub_1C2391638(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1C254CCC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_1C254CAD0();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6]) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = sub_1C254CBD0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[9];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t _s13ConfigurationVMa()
{
  uint64_t result = qword_1EA2E2038;
  if (!qword_1EA2E2038) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2391804()
{
  uint64_t result = sub_1C254CCC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C254CAD0();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_1C254CBD0();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void *sub_1C239193C(void *(*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5) {
    return 0;
  }
  v7[0] = a3;
  v7[1] = a4;
  uint64_t result = a1(&v8, v7);
  if (!v5) {
    return (void *)v8;
  }
  return result;
}

uint64_t sub_1C239199C(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v4 = sub_1C254CAD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C239233C(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1C21EA654(v1, (uint64_t)&v12 - v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  a1(&v12, v7);
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v12;
}

uint64_t sub_1C2391B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  id v52 = a4;
  id v53 = a8;
  uint64_t v56 = a7;
  id v50 = a3;
  id v51 = a5;
  uint64_t v65 = a10;
  uint64_t v66 = a1;
  uint64_t v15 = sub_1C254CD20();
  uint64_t v58 = *(void *)(v15 - 8);
  uint64_t v59 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v57 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1C254CCC0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v18;
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v21(a9, a1, v17);
  uint64_t v22 = (int *)_s13ConfigurationVMa();
  uint64_t v23 = a9 + v22[5];
  uint64_t v24 = sub_1C254CAD0();
  uint64_t v61 = *(void *)(v24 - 8);
  uint64_t v62 = v24;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v61 + 16);
  uint64_t v64 = a2;
  v25(v23, a2);
  *(void *)(a9 + v22[6]) = a3;
  id v27 = v51;
  id v26 = v52;
  *(void *)(a9 + v22[7]) = v52;
  *(void *)(a9 + v22[8]) = v27;
  uint64_t v28 = a9 + v22[9];
  uint64_t v29 = sub_1C254CBD0();
  uint64_t v54 = *(void *)(v29 - 8);
  uint64_t v55 = a6;
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v54 + 16);
  uint64_t v60 = v29;
  v30(v28, a6);
  *(void *)(a9 + v22[10]) = v56;
  id v31 = v53;
  *(void *)(a9 + v22[11]) = v53;
  uint64_t v56 = v20;
  uint64_t v32 = v20;
  uint64_t v33 = (void (*)(uint64_t, char *, uint64_t))v21;
  v21((uint64_t)v32, v66, v17);
  uint64_t v34 = qword_1EA2DD718;
  id v35 = v50;
  id v52 = v26;
  id v51 = v27;
  id v53 = v31;
  if (v34 != -1) {
    swift_once();
  }
  uint64_t v36 = v59;
  uint64_t v37 = __swift_project_value_buffer(v59, (uint64_t)qword_1EA2E2020);
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v37, v36);
  uint64_t v38 = v56;
  sub_1C254CCA0();
  v33(a9 + v22[12], v38, v17);
  uint64_t v39 = v55;
  uint64_t v40 = (void *)sub_1C254CB80();
  objc_msgSend(v35, sel_setLocale_, v40);

  uint64_t v41 = (void *)sub_1C254CB80();
  id v42 = v52;
  objc_msgSend(v52, sel_setLocale_, v41);

  uint64_t v43 = (void *)sub_1C254CB80();
  id v44 = v51;
  objc_msgSend(v51, sel_setLocale_, v43);

  uint64_t v45 = (void *)sub_1C254CB80();
  id v46 = v53;
  objc_msgSend(v53, sel_setLocale_, v45);

  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v39, v60);
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v64, v62);
  unint64_t v47 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
  v47(v66, v17);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v47)(v38, v17);
  *(void *)(a9 + v22[13]) = v65;
  return result;
}

uint64_t sub_1C2391FCC(uint64_t a1)
{
  sub_1C239233C(0, &qword_1EA2E41A0, MEMORY[0x1E4F27D68]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v22[-v4];
  sub_1C239233C(0, &qword_1EA2E33C0, MEMORY[0x1E4F27CA0]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v22[-v7];
  uint64_t v9 = sub_1C254C6F0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v22[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C239233C(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = &v22[-v14];
  uint64_t v16 = sub_1C254CCC0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  uint64_t v17 = sub_1C254CD20();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 1, 1, v17);
  sub_1C254C6D0();
  sub_1C254CC50();
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v23 = v1;
  uint64_t v18 = sub_1C239199C((void (*)(uint64_t *__return_ptr, char *))sub_1C2392428);
  uint64_t v20 = v19;
  sub_1C22178C0((uint64_t)v15);
  if (!v20)
  {
    uint64_t v24 = a1;
    return sub_1C2550810();
  }
  return v18;
}

void sub_1C239233C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2392390(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + *(int *)(_s13ConfigurationVMa() + 28));
  unint64_t v4 = (void *)sub_1C254CA50();
  id v5 = objc_msgSend(v3, sel_stringFromDate_, v4);

  uint64_t v6 = sub_1C254F470();
  uint64_t v8 = v7;

  *a2 = v6;
  a2[1] = v8;
}

void sub_1C2392428(uint64_t *a1@<X8>)
{
  sub_1C2392390(*(void *)(v1 + 16), a1);
}

uint64_t sub_1C2392448()
{
  sub_1C239233C(0, &qword_1EA2E41A0, MEMORY[0x1E4F27D68]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v7 - v1;
  uint64_t v3 = sub_1C254CD20();
  __swift_allocate_value_buffer(v3, qword_1EA2E2020);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EA2E2020);
  sub_1C254CD00();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1C23925DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t sub_1C23925E4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = _s13ConfigurationVMa();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C23926B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v65 = *(void *)(a3 + 16);
  uint64_t v3 = *(void *)(v65 - 8);
  uint64_t v69 = *(void *)(v3 + 64);
  uint64_t v4 = sub_1C254CCC0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v67 = v5;
  uint64_t v68 = v4;
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6;
  uint64_t v64 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v64 - 8);
  uint64_t v9 = v8;
  int v10 = *(_DWORD *)(v8 + 80);
  uint64_t v11 = sub_1C254CBD0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  unint64_t v14 = v6 | (unint64_t)v10 | v13 | 7;
  uint64_t v15 = *(void *)(v5 + 64);
  uint64_t v16 = *(void *)(v8 + 64);
  uint64_t v17 = *(void *)(v12 + 64);
  unint64_t v18 = v14 | *(_DWORD *)(v3 + 80);
  BOOL v19 = v18 == 7 && ((v10 | v6 | *(_DWORD *)(v12 + 80) | *(_DWORD *)(v3 + 80)) & 0x100000) == 0;
  if (v19
    && (uint64_t v20 = v14 + v69,
        uint64_t v21 = v15 + v10,
        uint64_t v22 = v16 + 7,
        ((v14 + v69) & ~v14)
      + ((v15
        + 7
        + ((v7
          + 8
          + ((((v17
              + 7
              + ((v13
                + 8
                + ((((((v16 + 7 + (v21 & ~(unint64_t)v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13)) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8)
      + 8 <= 0x18))
  {
    unint64_t v23 = ~v14;
    unint64_t v24 = ~(unint64_t)v10;
    uint64_t v60 = ~v13;
    uint64_t v63 = ~v7;
    uint64_t v25 = a1;
    uint64_t v61 = v17 + 7;
    uint64_t v62 = v11;
    uint64_t v58 = v13 + 8;
    uint64_t v59 = *(void *)(v11 - 8);
    uint64_t v26 = v65;
    uint64_t v70 = v15 + 7;
    uint64_t v66 = v7 + 8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 16))(a1, a2, v26);
    unint64_t v27 = ((unint64_t)a1 + v20) & v23;
    unint64_t v28 = ((unint64_t)a2 + v20) & v23;
    unint64_t v72 = *(void (**)(unint64_t, unint64_t, uint64_t))(v67 + 16);
    v72(v27, v28, v68);
    unint64_t v29 = (v21 + v27) & v24;
    unint64_t v30 = (v21 + v28) & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v29, v30, v64);
    id v31 = (void *)((v22 + v29) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v32 = (void **)((v22 + v30) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v33 = *v32;
    *id v31 = *v32;
    uint64_t v34 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
    id v35 = (void **)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v36 = *v35;
    *uint64_t v34 = *v35;
    uint64_t v37 = (void *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v38 = (void **)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v39 = *v38;
    *uint64_t v37 = *v38;
    unint64_t v40 = ((unint64_t)v37 + v58) & v60;
    unint64_t v41 = ((unint64_t)v38 + v58) & v60;
    id v42 = *(void (**)(unint64_t, unint64_t, uint64_t))(v59 + 16);
    id v43 = v33;
    id v44 = v36;
    id v45 = v39;
    v42(v40, v41, v62);
    id v46 = (void *)((v61 + v40) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v47 = (void *)((v61 + v41) & 0xFFFFFFFFFFFFFFF8);
    void *v46 = *v47;
    char v48 = (void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v49 = (void **)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
    id v50 = *v49;
    *char v48 = *v49;
    unint64_t v51 = ((unint64_t)v48 + v66) & v63;
    unint64_t v52 = ((unint64_t)v49 + v66) & v63;
    id v53 = v50;
    v72(v51, v52, v68);
    uint64_t v54 = *(void **)((v70 + v52) & 0xFFFFFFFFFFFFFFF8);
    *(void *)((v70 + v51) & 0xFFFFFFFFFFFFFFF8) = v54;
    id v55 = v54;
  }
  else
  {
    uint64_t v56 = *a2;
    *a1 = *a2;
    uint64_t v25 = (uint64_t *)(v56 + ((v18 + 16) & ~v18));
    swift_retain();
  }
  return v25;
}

void sub_1C2392AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v22 = *(void *)(v3 + 56);
  uint64_t v4 = sub_1C254CCC0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v23 = v4;
  uint64_t v24 = v6;
  uint64_t v7 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = sub_1C254CBD0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v22 + a1 + (v6 | v9 | v12 | 7)) & ~(v6 | v9 | v12 | 7);
  unint64_t v14 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v14(v13, v4);
  uint64_t v15 = *(void *)(v5 + 64);
  uint64_t v16 = (v15 + v9 + v13) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v7);
  uint64_t v17 = (id *)((*(void *)(v8 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8);

  unint64_t v18 = (id *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  BOOL v19 = (id *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);

  (*(void (**)(unint64_t, uint64_t))(v11 + 8))(((unint64_t)v19 + v12 + 8) & ~v12, v10);
  uint64_t v20 = (id *)((((*(void *)(v11 + 64) + (((unint64_t)v19 + v12 + 8) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);

  v14(((unint64_t)v20 + v24 + 8) & ~v24, v23);
  uint64_t v21 = *(void **)((v15 + (((unint64_t)v20 + v24 + 8) & ~v24) + 7) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1C2392D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v4)();
  uint64_t v50 = *(void *)(v4 + 48);
  uint64_t v6 = sub_1C254CCC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v52 = v6;
  uint64_t v53 = v8;
  uint64_t v9 = sub_1C254CAD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = sub_1C254CBD0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v8 | v11 | v14 | 7;
  uint64_t v16 = (v15 + v50 + a1) & ~v15;
  uint64_t v17 = (v15 + v50 + a2) & ~v15;
  uint64_t v49 = v12;
  unint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v51(v16, v17, v6);
  uint64_t v18 = *(void *)(v7 + 64);
  uint64_t v19 = (v18 + v11 + v16) & ~v11;
  uint64_t v20 = (v18 + v11 + v17) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v19, v20, v9);
  uint64_t v21 = *(void *)(v10 + 64) + 7;
  uint64_t v22 = (void *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void **)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = *v23;
  void *v22 = *v23;
  uint64_t v25 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (void **)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = *v26;
  *uint64_t v25 = *v26;
  unint64_t v28 = (void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (void **)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v30 = *v29;
  *unint64_t v28 = *v29;
  uint64_t v31 = ((unint64_t)v28 + v14 + 8) & ~v14;
  uint64_t v32 = ((unint64_t)v29 + v14 + 8) & ~v14;
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  id v34 = v24;
  id v35 = v27;
  id v36 = v30;
  v33(v31, v32, v49);
  uint64_t v37 = *(void *)(v13 + 64) + 7;
  unint64_t v38 = v37 + v31;
  uint64_t v39 = (void *)((v37 + v32) & 0xFFFFFFFFFFFFFFF8);
  v38 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v38 = *v39;
  unint64_t v40 = (void *)((v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v41 = (void **)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v42 = *v41;
  *unint64_t v40 = *v41;
  uint64_t v43 = ((unint64_t)v40 + v53 + 8) & ~v53;
  uint64_t v44 = ((unint64_t)v41 + v53 + 8) & ~v53;
  id v45 = v42;
  v51(v43, v44, v52);
  id v46 = *(void **)((v18 + 7 + v44) & 0xFFFFFFFFFFFFFFF8);
  *(void *)((v18 + 7 + v43) & 0xFFFFFFFFFFFFFFF8) = v46;
  id v47 = v46;
  return a1;
}

uint64_t sub_1C2392FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v4)();
  uint64_t v52 = *(void *)(v4 + 40);
  uint64_t v6 = sub_1C254CCC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v54 = v6;
  uint64_t v55 = v8;
  uint64_t v9 = sub_1C254CAD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = sub_1C254CBD0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v8 | v11 | v14 | 7;
  uint64_t v16 = (v15 + v52 + a1) & ~v15;
  uint64_t v17 = (v15 + v52 + a2) & ~v15;
  uint64_t v51 = v12;
  uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v53(v16, v17, v6);
  uint64_t v18 = *(void *)(v7 + 64);
  uint64_t v19 = (v18 + v11 + v16) & ~v11;
  uint64_t v20 = (v18 + v11 + v17) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v19, v20, v9);
  uint64_t v21 = *(void *)(v10 + 64) + 7;
  uint64_t v22 = (void **)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void **)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = *v23;
  uint64_t v25 = *v22;
  void *v22 = *v23;
  id v26 = v24;

  unint64_t v27 = (void **)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v28 = (void **)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = *v28;
  unint64_t v30 = *v27;
  *unint64_t v27 = *v28;
  id v31 = v29;

  uint64_t v32 = (void **)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (void **)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v34 = *v33;
  id v35 = *v32;
  *uint64_t v32 = *v33;
  id v36 = v34;

  uint64_t v37 = ((unint64_t)v33 + v14 + 8) & ~v14;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 24))(((unint64_t)v32 + v14 + 8) & ~v14, v37, v51);
  uint64_t v38 = *(void *)(v13 + 64) + 7;
  uint64_t v39 = (void *)((v38 + (((unint64_t)v32 + v14 + 8) & ~v14)) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v40 = (void *)((v38 + v37) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v39 = *v40;
  unint64_t v41 = (void **)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v42 = (void **)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v43 = *v42;
  uint64_t v44 = *v41;
  *unint64_t v41 = *v42;
  id v45 = v43;

  v53(((unint64_t)v41 + v55 + 8) & ~v55, ((unint64_t)v42 + v55 + 8) & ~v55, v54);
  id v46 = (void **)((v18 + 7 + (((unint64_t)v41 + v55 + 8) & ~v55)) & 0xFFFFFFFFFFFFFFF8);
  id v47 = *(void **)((v18 + 7 + (((unint64_t)v42 + v55 + 8) & ~v55)) & 0xFFFFFFFFFFFFFFF8);
  char v48 = *v46;
  void *v46 = v47;
  id v49 = v47;

  return a1;
}

uint64_t sub_1C2393298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v4)();
  uint64_t v39 = *(void *)(v4 + 32);
  uint64_t v6 = sub_1C254CCC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v41 = v6;
  uint64_t v42 = v8;
  uint64_t v9 = sub_1C254CAD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = sub_1C254CBD0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v8 | v11 | v14 | 7;
  uint64_t v16 = (v15 + v39 + a1) & ~v15;
  uint64_t v17 = (v15 + v39 + a2) & ~v15;
  uint64_t v38 = v12;
  unint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v40(v16, v17, v6);
  uint64_t v18 = *(void *)(v7 + 64);
  uint64_t v19 = (v18 + v11 + v16) & ~v11;
  uint64_t v20 = (v18 + v11 + v17) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v19, v20, v9);
  uint64_t v21 = *(void *)(v10 + 64) + 7;
  uint64_t v22 = (void *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  void *v22 = *v23;
  uint64_t v24 = (void *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v24 = *v25;
  id v26 = (void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = (void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  *id v26 = *v27;
  uint64_t v28 = ((unint64_t)v26 + v14 + 8) & ~v14;
  uint64_t v29 = ((unint64_t)v27 + v14 + 8) & ~v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v28, v29, v38);
  uint64_t v30 = *(void *)(v13 + 64) + 7;
  unint64_t v31 = v30 + v28;
  uint64_t v32 = (void *)((v30 + v29) & 0xFFFFFFFFFFFFFFF8);
  v31 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v31 = *v32;
  uint64_t v33 = (void *)((v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v34 = (void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v33 = *v34;
  uint64_t v35 = ((unint64_t)v33 + v42 + 8) & ~v42;
  uint64_t v36 = ((unint64_t)v34 + v42 + 8) & ~v42;
  v40(v35, v36, v41);
  *(void *)((v18 + 7 + v35) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v18 + 7 + v36) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C2393538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v4)();
  uint64_t v42 = *(void *)(v4 + 24);
  uint64_t v6 = sub_1C254CCC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v44 = v6;
  uint64_t v45 = v8;
  uint64_t v9 = sub_1C254CAD0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = sub_1C254CBD0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v8 | v11 | v14 | 7;
  uint64_t v16 = (v15 + v42 + a1) & ~v15;
  uint64_t v17 = (v15 + v42 + a2) & ~v15;
  uint64_t v41 = v12;
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v43(v16, v17, v6);
  uint64_t v18 = *(void *)(v7 + 64);
  uint64_t v19 = (v18 + v11 + v16) & ~v11;
  uint64_t v20 = (v18 + v11 + v17) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v19, v20, v9);
  uint64_t v21 = *(void *)(v10 + 64) + 7;
  uint64_t v22 = (void **)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v23 = (void **)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = *v22;
  void *v22 = *v23;

  uint64_t v25 = (void **)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  id v26 = (void **)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = *v25;
  *uint64_t v25 = *v26;

  uint64_t v28 = (void **)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void **)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = *v28;
  *uint64_t v28 = *v29;

  uint64_t v31 = ((unint64_t)v29 + v14 + 8) & ~v14;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 40))(((unint64_t)v28 + v14 + 8) & ~v14, v31, v41);
  uint64_t v32 = *(void *)(v13 + 64) + 7;
  uint64_t v33 = (void *)((v32 + (((unint64_t)v28 + v14 + 8) & ~v14)) & 0xFFFFFFFFFFFFFFF8);
  id v34 = (void *)((v32 + v31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v33 = *v34;
  uint64_t v35 = (void **)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v36 = (void **)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v37 = *v35;
  void *v35 = *v36;

  v43(((unint64_t)v35 + v45 + 8) & ~v45, ((unint64_t)v36 + v45 + 8) & ~v45, v44);
  uint64_t v38 = (void **)((v18 + 7 + (((unint64_t)v35 + v45 + 8) & ~v45)) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v39 = *v38;
  *uint64_t v38 = *(void **)((v18 + 7 + (((unint64_t)v36 + v45 + 8) & ~v45)) & 0xFFFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_1C2393800(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v45 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v45 - 8);
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  uint64_t v44 = sub_1C254CCC0();
  uint64_t v6 = *(void *)(v44 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v42 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v42 - 8);
  uint64_t v47 = v8;
  unsigned int v43 = *(_DWORD *)(v8 + 84);
  if (v43 <= v7) {
    unsigned int v9 = v7;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v10 = *(void *)(sub_1C254CBD0() - 8);
  uint64_t v11 = v10;
  if (v9 <= *(_DWORD *)(v10 + 84)) {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v12 = v9;
  }
  uint64_t v13 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = *(void *)(v6 + 64);
  uint64_t v17 = *(void *)(v8 + 64);
  uint64_t v18 = *(void *)(v10 + 64);
  if (v12 <= v7) {
    unsigned int v19 = v7;
  }
  else {
    unsigned int v19 = v12;
  }
  if (v19 <= 0x7FFFFFFF) {
    unsigned int v20 = 0x7FFFFFFF;
  }
  else {
    unsigned int v20 = v19;
  }
  if (v20 <= v5) {
    unsigned int v21 = v5;
  }
  else {
    unsigned int v21 = v20;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v22 = v13 | v14 | v15 | 7;
  uint64_t v23 = v22 + *(void *)(v4 + 64);
  uint64_t v24 = v16 + v14;
  uint64_t v25 = v17 + 7;
  uint64_t v26 = v15 + 8;
  unint64_t v27 = a1;
  if (v21 < a2)
  {
    unint64_t v28 = (v23 & ~v22)
        + ((v16
          + ((v13
            + ((((v18
                + ((v26
                  + ((((((v25 + (v24 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v15)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 8) & ~v13)
          + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    if ((v28 & 0xFFFFFFF8) != 0) {
      unsigned int v29 = 2;
    }
    else {
      unsigned int v29 = a2 - v21 + 1;
    }
    if (v29 >= 0x10000) {
      unsigned int v30 = 4;
    }
    else {
      unsigned int v30 = 2;
    }
    if (v29 < 0x100) {
      unsigned int v30 = 1;
    }
    if (v29 >= 2) {
      uint64_t v31 = v30;
    }
    else {
      uint64_t v31 = 0;
    }
    switch(v31)
    {
      case 1:
        int v32 = *((unsigned __int8 *)a1 + v28);
        if (!*((unsigned char *)a1 + v28)) {
          break;
        }
        goto LABEL_34;
      case 2:
        int v32 = *(unsigned __int16 *)((char *)a1 + v28);
        if (*(_WORD *)((char *)a1 + v28)) {
          goto LABEL_34;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C2393C14);
      case 4:
        int v32 = *(_DWORD *)((char *)a1 + v28);
        if (!v32) {
          break;
        }
LABEL_34:
        int v34 = v32 - 1;
        if ((v28 & 0xFFFFFFF8) != 0)
        {
          int v34 = 0;
          int v35 = *a1;
        }
        else
        {
          int v35 = 0;
        }
        return v21 + (v35 | v34) + 1;
      default:
        break;
    }
  }
  if (v5 >= v20)
  {
    uint64_t v38 = v45;
    uint64_t v36 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v4 + 48);
    uint64_t v37 = v5;
    goto LABEL_41;
  }
  unint64_t v27 = (_DWORD *)(((unint64_t)a1 + v23) & ~v22);
  if (v7 == v20)
  {
    uint64_t v36 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v37 = v7;
    uint64_t v38 = v44;
LABEL_41:
    return v36(v27, v37, v38);
  }
  unint64_t v27 = (_DWORD *)(((unint64_t)v27 + v24) & ~v14);
  if (v43 == v20)
  {
    uint64_t v36 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v47 + 48);
    uint64_t v37 = v43;
    uint64_t v38 = v42;
    goto LABEL_41;
  }
  uint64_t v39 = (uint64_t *)(((unint64_t)v27 + v25) & 0xFFFFFFFFFFFFFFF8);
  if ((v19 & 0x80000000) != 0)
  {
    uint64_t v41 = *(uint64_t (**)(unint64_t))(v11 + 48);
    return v41((v26 + (((((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v15);
  }
  else
  {
    uint64_t v40 = *v39;
    if ((unint64_t)*v39 >= 0xFFFFFFFF) {
      LODWORD(v40) = -1;
    }
    return (v40 + 1);
  }
}

void sub_1C2393C28(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v51 = *(void *)(a4 + 16);
  uint64_t v5 = *(void *)(v51 - 8);
  uint64_t v50 = v5;
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v49 = sub_1C254CCC0();
  uint64_t v7 = *(void *)(v49 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v47 = sub_1C254CAD0();
  uint64_t v9 = *(void *)(v47 - 8);
  unsigned int v48 = *(_DWORD *)(v9 + 84);
  if (v48 <= v8) {
    unsigned int v10 = v8;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v11 = *(void *)(sub_1C254CBD0() - 8);
  uint64_t v12 = v11;
  if (v10 <= *(_DWORD *)(v11 + 84)) {
    unsigned int v13 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v13 = v10;
  }
  uint64_t v14 = *(void *)(v5 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = *(void *)(v7 + 64);
  uint64_t v19 = *(void *)(v9 + 64);
  uint64_t v20 = *(void *)(v11 + 64);
  if (v13 <= v8) {
    unsigned int v21 = v8;
  }
  else {
    unsigned int v21 = v13;
  }
  if (v21 <= 0x7FFFFFFF) {
    unsigned int v22 = 0x7FFFFFFF;
  }
  else {
    unsigned int v22 = v21;
  }
  if (v22 <= v6) {
    unsigned int v23 = v6;
  }
  else {
    unsigned int v23 = v22;
  }
  uint64_t v24 = v15 | v16 | v17 | 7;
  uint64_t v25 = v24 + v14;
  uint64_t v26 = (v24 + v14) & ~v24;
  uint64_t v27 = v18 + v16;
  uint64_t v28 = v19 + 7;
  size_t v29 = ((v18
        + ((v15
          + ((((v20
              + ((v17
                + 8
                + ((((((v19 + 7 + ((v18 + v16) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v17)
              + 7) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 8) & ~v15)
        + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  size_t v30 = v29 + v26;
  if (v23 >= a3)
  {
    int v33 = 0;
  }
  else
  {
    if (v30) {
      unsigned int v31 = 2;
    }
    else {
      unsigned int v31 = a3 - v23 + 1;
    }
    if (v31 >= 0x10000) {
      int v32 = 4;
    }
    else {
      int v32 = 2;
    }
    if (v31 < 0x100) {
      int v32 = 1;
    }
    if (v31 >= 2) {
      int v33 = v32;
    }
    else {
      int v33 = 0;
    }
  }
  if (a2 > v23)
  {
    if (v30) {
      int v34 = 1;
    }
    else {
      int v34 = a2 - v23;
    }
    if (v30)
    {
      unsigned int v35 = ~v23 + a2;
      bzero(a1, v29 + v26);
      *a1 = v35;
    }
    switch(v33)
    {
      case 1:
        *((unsigned char *)a1 + v30) = v34;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v30) = v34;
        return;
      case 3:
        goto LABEL_67;
      case 4:
        *(unsigned int *)((char *)a1 + v30) = v34;
        return;
      default:
        return;
    }
  }
  uint64_t v36 = ~v24;
  switch(v33)
  {
    case 1:
      *((unsigned char *)a1 + v30) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 2:
      *(_WORD *)((char *)a1 + v30) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 3:
LABEL_67:
      __break(1u);
      JUMPOUT(0x1C23940C0);
    case 4:
      *(unsigned int *)((char *)a1 + v30) = 0;
      goto LABEL_43;
    default:
LABEL_43:
      if (!a2) {
        return;
      }
LABEL_44:
      if (v6 >= v22)
      {
        uint64_t v39 = v51;
        uint64_t v40 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v50 + 56);
        uint64_t v41 = a1;
        uint64_t v42 = a2;
        uint64_t v43 = v6;
LABEL_49:
        v40(v41, v42, v43, v39);
        return;
      }
      uint64_t v37 = (_DWORD *)(((unint64_t)a1 + v25) & v36);
      if (v22 < a2)
      {
        if (v29)
        {
          unsigned int v38 = ~v22 + a2;
          bzero(v37, v29);
          *uint64_t v37 = v38;
        }
        return;
      }
      if (v8 == v22)
      {
        uint64_t v40 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        uint64_t v41 = (_DWORD *)(((unint64_t)a1 + v25) & v36);
        uint64_t v42 = a2;
        uint64_t v43 = v8;
        uint64_t v39 = v49;
        goto LABEL_49;
      }
      uint64_t v41 = (_DWORD *)(((unint64_t)v37 + v27) & ~v16);
      if (v48 == v22)
      {
        uint64_t v40 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v9 + 56);
        uint64_t v42 = a2;
        uint64_t v43 = v48;
        uint64_t v39 = v47;
        goto LABEL_49;
      }
      uint64_t v44 = (void *)(((unint64_t)v41 + v28) & 0xFFFFFFFFFFFFFFF8);
      if ((v21 & 0x80000000) != 0)
      {
        id v46 = *(void (**)(unint64_t, void))(v12 + 56);
        v46((v17 + 8 + (((((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v17, a2);
      }
      else
      {
        if ((a2 & 0x80000000) != 0) {
          uint64_t v45 = a2 ^ 0x80000000;
        }
        else {
          uint64_t v45 = a2 - 1;
        }
        void *v44 = v45;
      }
      return;
  }
}

uint64_t _s7PDFDataVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C2394100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  unsigned int v10 = (char *)&v19 - v9;
  uint64_t v11 = sub_1C254CBD0();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a4, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C255CDA0;
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 64) = sub_1C220D950();
  *(void *)(v13 + 32) = a1;
  *(void *)(v13 + 40) = a2;
  id v14 = objc_allocWithZone(NSNumber);
  swift_bridgeObjectRetain();
  id v15 = objc_msgSend(v14, sel_initWithInteger_, a3);
  *(void *)(v13 + 96) = sub_1C2371CF0();
  *(void *)(v13 + 104) = sub_1C23959C0();
  *(void *)(v13 + 72) = v15;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v16 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v17 = sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v10);
  return v17;
}

uint64_t sub_1C23943B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = a3 + *(int *)(_s13ConfigurationVMa() + 36);
  uint64_t v10 = sub_1C254CBD0();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C255CDA0;
  uint64_t v13 = sub_1C2391FCC(a1);
  uint64_t v15 = v14;
  uint64_t v16 = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v17 = sub_1C220D950();
  *(void *)(v12 + 64) = v17;
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 40) = v15;
  uint64_t v18 = sub_1C2391FCC(a2);
  *(void *)(v12 + 96) = v16;
  *(void *)(v12 + 104) = v17;
  *(void *)(v12 + 72) = v18;
  *(void *)(v12 + 80) = v19;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v20 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v21 = sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v8);
  return v21;
}

uint64_t sub_1C2394658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = sub_1C254CBD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C255CDA0;
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v14 = sub_1C220D950();
  *(void *)(v12 + 32) = a1;
  *(void *)(v12 + 40) = a2;
  *(void *)(v12 + 96) = v13;
  *(void *)(v12 + 104) = v14;
  *(void *)(v12 + 64) = v14;
  *(void *)(v12 + 72) = a3;
  *(void *)(v12 + 80) = a4;
  uint64_t v15 = qword_1EBB6EF40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  id v16 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v17 = sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v10);
  return v17;
}

uint64_t sub_1C23948A8(uint64_t a1, uint64_t a2)
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = sub_1C254CBD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C255CD90;
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 64) = sub_1C220D950();
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  uint64_t v9 = qword_1EBB6EF40;
  swift_bridgeObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v11 = sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v6);
  return v11;
}

uint64_t sub_1C2394AE0(uint64_t a1, uint64_t a2)
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = sub_1C254CBD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C255CD90;
  *(void *)(v8 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v8 + 64) = sub_1C220D950();
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  uint64_t v9 = qword_1EBB6EF40;
  swift_bridgeObjectRetain();
  if (v9 != -1) {
    swift_once();
  }
  id v10 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v11 = sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v6);
  return v11;
}

uint64_t sub_1C2394D18()
{
  sub_1C2201F2C();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C255F7E0;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();

  *(void *)(v0 + 32) = v2;
  *(void *)(v0 + 40) = v4;
  id v5 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C254C730();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();

  *(void *)(v0 + 48) = v6;
  *(void *)(v0 + 56) = v8;
  id v9 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C254C730();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();

  *(void *)(v0 + 64) = v10;
  *(void *)(v0 + 72) = v12;
  id v13 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C254C730();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();

  *(void *)(v0 + 80) = v14;
  *(void *)(v0 + 88) = v16;
  return v0;
}

uint64_t sub_1C2394F58()
{
  sub_1C2201F2C();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C2561290;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();

  *(void *)(v0 + 32) = v2;
  *(void *)(v0 + 40) = v4;
  id v5 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C254C730();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();

  *(void *)(v0 + 48) = v6;
  *(void *)(v0 + 56) = v8;
  id v9 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C254C730();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();

  *(void *)(v0 + 64) = v10;
  *(void *)(v0 + 72) = v12;
  id v13 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C254C730();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();

  *(void *)(v0 + 80) = v14;
  *(void *)(v0 + 88) = v16;
  id v17 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C254C730();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();

  *(void *)(v0 + 96) = v18;
  *(void *)(v0 + 104) = v20;
  return v0;
}

uint64_t sub_1C2395200(uint64_t a1, uint64_t a2)
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = sub_1C254CBD0();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CD90;
  id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1);
  *(void *)(v9 + 56) = sub_1C2371CF0();
  *(void *)(v9 + 64) = sub_1C23959C0();
  *(void *)(v9 + 32) = v10;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v12 = sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v6);
  return v12;
}

uint64_t sub_1C2395488(uint64_t a1, uint64_t a2)
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = sub_1C254CBD0();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C255CD90;
  id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1);
  *(void *)(v9 + 56) = sub_1C2371CF0();
  *(void *)(v9 + 64) = sub_1C23959C0();
  *(void *)(v9 + 32) = v10;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v12 = sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v6);
  return v12;
}

uint64_t sub_1C2395710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2342C2C(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = sub_1C254CBD0();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a3, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  sub_1C2342C2C(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C255CDA0;
  id v12 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1);
  unint64_t v13 = sub_1C2371CF0();
  *(void *)(v11 + 56) = v13;
  unint64_t v14 = sub_1C23959C0();
  *(void *)(v11 + 64) = v14;
  *(void *)(v11 + 32) = v12;
  id v15 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a2);
  *(void *)(v11 + 96) = v13;
  *(void *)(v11 + 104) = v14;
  *(void *)(v11 + 72) = v15;
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v16 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  uint64_t v17 = sub_1C254F4A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2269E88((uint64_t)v8);
  return v17;
}

unint64_t sub_1C23959C0()
{
  unint64_t result = qword_1EA2E20C8;
  if (!qword_1EA2E20C8)
  {
    sub_1C2371CF0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E20C8);
  }
  return result;
}

id MedicalRecordChartDataSource.__allocating_init(chartDefining:dataTransformer:unit:preferredColors:collapseIntoRangePoints:type:)(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6)
{
  id v13 = objc_allocWithZone(v6);
  id v14 = sub_1C2398E4C(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();

  return v14;
}

unint64_t MedicalRecordChartDataSourceType.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

uint64_t *sub_1C2395AB8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  BOOL v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2) {
    uint64_t v2 = 0;
  }
  *(void *)a2 = v2;
  *(unsigned char *)(a2 + 8) = v3;
  return result;
}

uint64_t MedicalRecordChartDataSource.type.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_type);
}

uint64_t MedicalRecordChartDataSource.chartDefining.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2398F9C(v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartDefining, a1);
}

uint64_t MedicalRecordChartDataSource.dataTransformer.getter()
{
  return swift_unknownObjectRetain();
}

void sub_1C2395B08(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  BOOL v3 = (void **)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *BOOL v3 = v2;
  id v5 = v2;
}

id sub_1C2395B6C()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void *sub_1C2395BC4()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void *sub_1C2395C14()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void *sub_1C2395C64()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

uint64_t sub_1C2395DBC()
{
  sub_1C2398F9C(v0 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartDefining, (uint64_t)v4);
  uint64_t v1 = v5;
  if (v5)
  {
    uint64_t v2 = v6;
    __swift_project_boxed_opaque_existential_1Tm(v4, v5);
    uint64_t v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  else
  {
    sub_1C239986C((uint64_t)v4, (uint64_t (*)(void))sub_1C2399000);
  }
  return v1;
}

id MedicalRecordChartDataSource.init(chartDefining:dataTransformer:unit:preferredColors:collapseIntoRangePoints:type:)(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6)
{
  id v8 = sub_1C2398E4C(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();

  return v8;
}

id MedicalRecordChartDataSource.__allocating_init(concept:dataTransformer:unit:preferredColors:collapseIntoRangePoints:type:)(void *a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6)
{
  id v13 = objc_allocWithZone(v6);
  id v14 = sub_1C2399264(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();

  return v14;
}

id MedicalRecordChartDataSource.init(concept:dataTransformer:unit:preferredColors:collapseIntoRangePoints:type:)(void *a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6)
{
  id v9 = sub_1C2399264(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();

  return v9;
}

id sub_1C239605C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C254C520();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C254CAD0();
  v36[0] = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)v36 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v36 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v36 - v19;
  id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67B00]), sel_init);
  unint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  id v21 = (id)HKGraphSeriesDataBlockPathMinimumX();
  sub_1C254CA80();

  unint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v22 = v36[0];
  uint64_t v45 = a3;
  id v23 = (id)HKGraphSeriesDataBlockPathMaximumX();
  sub_1C254CA80();

  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  unsigned int v38 = v20;
  v24(v14, v20, v9);
  v24(v11, v17, v9);
  uint64_t v25 = (void *)v36[1];
  sub_1C254C4F0();
  unint64_t v26 = sub_1C23972FC(a2);
  uint64_t v42 = v8;
  uint64_t v27 = sub_1C228A418(sub_1C2399930, (uint64_t)v41, v26);
  if (v27 < 0 || (v27 & 0x4000000000000000) != 0)
  {
    unint64_t v35 = swift_bridgeObjectRetain();
    uint64_t v28 = (uint64_t)sub_1C228FFAC(v35);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  unint64_t v43 = v28;
  sub_1C2397CF0((uint64_t *)&v43);
  swift_bridgeObjectRelease();
  unint64_t v29 = v43;
  id v30 = v25;
  sub_1C23990B0(v29, (uint64_t)v30, a2);
  swift_release();

  sub_1C23993D8();
  unsigned int v31 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  id v32 = v37;
  objc_msgSend(v37, sel_setChartPoints_, v31);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v40);
  int v33 = *(void (**)(char *, uint64_t))(v22 + 8);
  v33(v17, v9);
  v33(v38, v9);
  return v32;
}

uint64_t sub_1C23964AC(uint64_t a1)
{
  unint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets);
  if (!v2) {
    return 0;
  }
  MEMORY[0x1F4188790](a1);
  void v7[2] = v3;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1C228A418(sub_1C2399430, (uint64_t)v7, v2);
  if (v4 >> 62) {
    uint64_t v5 = sub_1C2550620();
  }
  else {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C2396580(id *a1)
{
  return sub_1C239659C(a1) & 1;
}

uint64_t sub_1C239659C(id *a1)
{
  uint64_t v2 = sub_1C254CAD0();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = MEMORY[0x1F4188790](v2).n128_u64[0];
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(*a1, sel_date, v4);
  sub_1C254CA80();

  char v8 = sub_1C254C510();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v8 & 1;
}

id sub_1C23966A4(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (a1)
  {
    uint64_t v6 = a1;
  }
  else
  {
    id v7 = (id *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors);
    swift_beginAccess();
    if (*v7)
    {
      id v8 = *v7;
    }
    else
    {
      sub_1C21AB51C(0, (unint64_t *)&unk_1EA2E3390);
      id v9 = objc_msgSend(self, sel_systemRedColor);
      id v8 = HKUIMetricColors.init(keyColor:)(v9);
    }
    uint64_t v6 = v8;
  }
  uint64_t v10 = *(void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_dataTransformer);
  id v11 = a1;
  id v12 = objc_msgSend(v10, sel_graphSeriesWith_, v6);
  objc_msgSend(v12, sel_setDataSource_, v3);
  uint64_t v13 = (void **)(v3 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange);
  swift_beginAccess();
  id v14 = *v13;
  if (*v13)
  {
    id v15 = *v13;
  }
  else
  {
    sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
    uint64_t v16 = (void *)sub_1C254FF30();
    uint64_t v17 = (void *)sub_1C254FF30();
    id v15 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v16, v17);

    id v14 = 0;
  }
  id v18 = v14;
  sub_1C2204D24(MEMORY[0x1E4FBC860]);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70030);
  sub_1C21AB51C(0, (unint64_t *)&unk_1EA2E33F0);
  sub_1C21A9630();
  uint64_t v19 = (void *)sub_1C254F2C0();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(self, sel_ruleWithDefaultAxisBounds_axisBoundsOverrides_, v15, v19);

  objc_msgSend(v12, sel_setAxisScalingRule_, v20);
  objc_msgSend(v12, sel_setYAxis_, a2);

  return v12;
}

id sub_1C2396920(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = (void *)(*(uint64_t (**)(void, uint64_t))((*MEMORY[0x1E4FBC8C8] & *v1) + 0x158))(0, a1);
  double v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_dataTransformer);
  sub_1C2398F9C((uint64_t)v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartDefining, (uint64_t)v14);
  uint64_t v5 = v15;
  if (v15)
  {
    uint64_t v6 = v16;
    __swift_project_boxed_opaque_existential_1Tm(v14, v15);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  }
  else
  {
    sub_1C239986C((uint64_t)v14, (uint64_t (*)(void))sub_1C2399000);
  }
  id v7 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  id v8 = (id *)((char *)v2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit);
  swift_beginAccess();
  id v9 = objc_msgSend(*v8, sel_unitString);
  if (!v9)
  {
    sub_1C254F470();
    id v9 = (id)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  id v10 = objc_msgSend(v4, sel_chartDisplayTypeWith_displayName_unitName_, v3, v7, v9);

  id v11 = (void *)((char *)v2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange);
  swift_beginAccess();
  if (*v11)
  {
    id v12 = objc_msgSend(v10, sel_copyWithDefaultAxisRangeOverride_);

    id v10 = v12;
  }

  return v10;
}

void sub_1C2396B7C(unint64_t a1)
{
  uint64_t v82 = sub_1C254CAD0();
  uint64_t v3 = *(void *)(v82 - 8);
  MEMORY[0x1F4188790](v82);
  unint64_t v80 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v79 = (char *)&v70 - v6;
  MEMORY[0x1F4188790](v7);
  unint64_t v78 = (char *)&v70 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v77 = (char *)&v70 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v84 = (char *)&v70 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v83 = (char *)&v70 - v14;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (!v15) {
      return;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return;
    }
  }
  uint64_t v16 = self;
  id v17 = objc_msgSend(v16, sel_distantFuture);
  sub_1C254CA80();

  id v18 = objc_msgSend(v16, sel_distantPast);
  sub_1C254CA80();

  if (v15 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v70 = v1;
    uint64_t v19 = (id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit);
    unint64_t v73 = a1 & 0xC000000000000001;
    swift_bridgeObjectRetain();
    uint64_t v74 = v19;
    swift_beginAccess();
    uint64_t v20 = 0;
    unint64_t v72 = (void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v81 = v3 + 8;
    uint64_t v71 = (void (**)(char *, char *, uint64_t))(v3 + 32);
    double v21 = 1.79769313e308;
    double v22 = -1.79769313e308;
    unint64_t v76 = a1;
    uint64_t v75 = v15;
    id v23 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v24 = v71;
    do
    {
      if (v73) {
        id v25 = (id)MEMORY[0x1C87588E0](v20, a1);
      }
      else {
        id v25 = *(id *)(a1 + 8 * v20 + 32);
      }
      unint64_t v26 = v25;
      uint64_t v86 = v20 + 1;
      id v27 = objc_msgSend(v25, sel_date);
      uint64_t v28 = v78;
      sub_1C254CA80();

      sub_1C2399450();
      uint64_t v29 = v82;
      id v30 = v83;
      char v31 = sub_1C254F3B0();
      id v32 = *v72;
      uint64_t v85 = *v72;
      if (v31) {
        int v33 = v28;
      }
      else {
        int v33 = v30;
      }
      int v34 = v77;
      v32(v77, v33, v29);
      unint64_t v35 = *v23;
      (*v23)(v28, v29);
      v35(v30, v29);
      uint64_t v36 = *v24;
      (*v24)(v30, v34, v29);
      id v37 = v36;
      id v38 = objc_msgSend(v26, sel_date);
      uint64_t v39 = v80;
      sub_1C254CA80();

      uint64_t v40 = v84;
      if (sub_1C254F3C0()) {
        uint64_t v41 = v39;
      }
      else {
        uint64_t v41 = v40;
      }
      uint64_t v42 = v79;
      v85(v79, v41, v29);
      unint64_t v43 = v39;
      uint64_t v44 = v35;
      v35(v43, v29);
      v35(v40, v29);
      v37(v40, v42, v29);
      uint64_t v45 = v74;
      objc_msgSend(v26, sel_minValueIncludingReferenceRangeForUnit_, *v74);
      if (v46 < v21) {
        double v21 = v46;
      }
      id v47 = *v45;
      objc_msgSend(v26, sel_maxValueIncludingReferenceRangeForUnit_, v47);
      double v49 = v48;

      uint64_t v20 = v86;
      if (v22 <= v49) {
        double v22 = v49;
      }
      a1 = v76;
    }
    while (v75 != v20);
    swift_bridgeObjectRelease();
    uint64_t v50 = v70;
    *(void *)(v70 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v51 = (void *)(v50 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_cachedBucketedSets);
    swift_beginAccess();
    *uint64_t v51 = MEMORY[0x1E4FBC868];
    swift_bridgeObjectRelease();
    uint64_t v52 = (void *)sub_1C254CA50();
    uint64_t v53 = (void *)sub_1C254CA50();
    id v54 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v52, v53);

    uint64_t v55 = (void **)(v50 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange);
    swift_beginAccess();
    uint64_t v56 = *v55;
    *uint64_t v55 = v54;

    id v57 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v21);
    id v58 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v22);
    objc_msgSend(v58, sel_floatValue);
    float v60 = v59;
    objc_msgSend(v57, sel_floatValue);
    if ((float)(v60 - v61) >= COERCE_FLOAT(1))
    {
      id v67 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v57, v58);
      uint64_t v68 = (void **)(v50 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange);
      swift_beginAccess();
      uint64_t v66 = *v68;
      *uint64_t v68 = v67;
    }
    else
    {
      id v62 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v21 * 0.8);
      id v63 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v22 * 1.2);
      id v64 = objc_msgSend(self, sel_valueRangeWithMinValue_maxValue_, v62, v63);

      uint64_t v65 = (void **)(v50 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange);
      swift_beginAccess();
      uint64_t v66 = *v65;
      *uint64_t v65 = v64;
    }

    uint64_t v69 = v82;
    v44(v84, v82);
    v44(v83, v69);
  }
}

uint64_t sub_1C23972FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254CAD0();
  uint64_t v76 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v83 = (char *)&v75 - v8;
  MEMORY[0x1F4188790](v9);
  id v88 = (char *)&v75 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v77 = (char *)&v75 - v12;
  uint64_t v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_cachedBucketedSets);
  swift_beginAccess();
  uint64_t v14 = *v13;
  if (*(void *)(*v13 + 16))
  {
    uint64_t v15 = sub_1C2457790(a1);
    if (v16)
    {
      id v17 = *(void **)(*(void *)(v14 + 56) + 8 * v15);
      swift_bridgeObjectRetain();
      return (uint64_t)v17;
    }
  }
  unint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets);
  id v17 = (void *)MEMORY[0x1E4FBC860];
  if (!v18) {
    return (uint64_t)v17;
  }
  BOOL v19 = *(unsigned char *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_collapseIntoRangePoints) == 1;
  uint64_t v87 = a1;
  uint64_t v84 = v4;
  unint64_t v85 = v18;
  uint64_t v75 = v13;
  unint64_t v20 = v18 >> 62;
  if (v19)
  {
    if (v20) {
      goto LABEL_50;
    }
    uint64_t v21 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v21)
    {
LABEL_51:
      swift_bridgeObjectRelease();
      uint64_t v69 = swift_bridgeObjectRetain();
      id v17 = sub_1C22906F4(v69);
      swift_bridgeObjectRelease();
      uint64_t v70 = v75;
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v89 = *v70;
      *uint64_t v70 = 0x8000000000000000;
      sub_1C2365FF8((uint64_t)v17, v87, isUniquelyReferenced_nonNull_native);
      *uint64_t v70 = v89;
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_bridgeObjectRelease();
      return (uint64_t)v17;
    }
LABEL_9:
    if (v21 < 1)
    {
      __break(1u);
      goto LABEL_57;
    }
    uint64_t v22 = 0;
    unint64_t v82 = v18 & 0xC000000000000001;
    id v23 = v77;
    unint64_t v80 = (void (**)(char *, char *, uint64_t))(v76 + 16);
    uint64_t v24 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v81 = v21;
    uint64_t v86 = (void (**)(char *, uint64_t))(v76 + 8);
    while (1)
    {
      if (v82) {
        id v29 = (id)MEMORY[0x1C87588E0](v22, v18);
      }
      else {
        id v29 = *(id *)(v18 + 8 * v22 + 32);
      }
      id v30 = v29;
      uint64_t v31 = v87;
      id v32 = objc_msgSend(v29, sel_date, v75);
      int v33 = v88;
      sub_1C254CA80();

      HKTimeScope.bucketingDate(for:)((uint64_t)v33, v31, v23);
      int v34 = *v86;
      (*v86)(v33, v4);
      if (v24[2] && (unint64_t v35 = sub_1C24579E8((uint64_t)v23), (v36 & 1) != 0))
      {
        id v27 = v34;
        id v37 = *(id *)(v24[7] + 8 * v35);
        id v38 = objc_msgSend(v30, sel_quantities);
        if (!v38)
        {
          sub_1C21AB51C(0, (unint64_t *)&qword_1EA2E21B0);
          sub_1C254F710();
          id v38 = (id)sub_1C254F700();
          unint64_t v18 = v85;
          swift_bridgeObjectRelease();
        }
        objc_msgSend(v37, sel_addChartableCodedQuantities_, v38);

        id v30 = v38;
        uint64_t v28 = v81;
      }
      else
      {
        uint64_t v39 = (uint64_t)v83;
        unint64_t v79 = *v80;
        v79(v83, v23, v4);
        uint64_t v40 = (void *)sub_1C254CA50();
        id v41 = objc_msgSend(v30, sel_chartableCodedQuantitySetByChangingDate_, v40);

        if (v41)
        {
          unint64_t v78 = v34;
          uint64_t v4 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v90 = v24;
          unint64_t v18 = sub_1C24579E8(v39);
          uint64_t v43 = v24[2];
          BOOL v44 = (v42 & 1) == 0;
          uint64_t v45 = v43 + v44;
          if (__OFADD__(v43, v44))
          {
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            swift_bridgeObjectRetain_n();
            uint64_t v21 = sub_1C2550620();
            swift_bridgeObjectRelease();
            if (!v21) {
              goto LABEL_51;
            }
            goto LABEL_9;
          }
          char v46 = v42;
          if (v24[3] >= v45)
          {
            if ((v4 & 1) == 0) {
              sub_1C24AF8CC();
            }
          }
          else
          {
            sub_1C227D154(v45, v4);
            unint64_t v47 = sub_1C24579E8(v39);
            if ((v46 & 1) != (v48 & 1)) {
              goto LABEL_58;
            }
            unint64_t v18 = v47;
          }
          uint64_t v4 = v84;
          uint64_t v24 = v90;
          if (v46)
          {
            uint64_t v25 = v90[7];

            *(void *)(v25 + 8 * v18) = v41;
          }
          else
          {
            v90[(v18 >> 6) + 8] |= 1 << v18;
            v79((char *)(v24[6] + *(void *)(v76 + 72) * v18), (char *)v39, v4);
            *(void *)(v24[7] + 8 * v18) = v41;
            uint64_t v54 = v24[2];
            BOOL v55 = __OFADD__(v54, 1);
            uint64_t v56 = v54 + 1;
            if (v55) {
              goto LABEL_49;
            }
            v24[2] = v56;
          }
          swift_bridgeObjectRelease();
          uint64_t v26 = v39;
          id v27 = v78;
          v78((char *)v26, v4);
          unint64_t v18 = v85;
          id v23 = v77;
        }
        else
        {
          swift_bridgeObjectRetain();
          unint64_t v49 = sub_1C24579E8(v39);
          char v51 = v50;
          swift_bridgeObjectRelease();
          if (v51)
          {
            id v27 = v34;
            int v52 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v90 = v24;
            if (!v52)
            {
              sub_1C24AF8CC();
              uint64_t v24 = v90;
            }
            v34((char *)(v24[6] + *(void *)(v76 + 72) * v49), v4);
            uint64_t v24 = v90;
            uint64_t v53 = *(void **)(v90[7] + 8 * v49);
            sub_1C24AC83C(v49, (uint64_t)v90);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v53 = 0;
            id v27 = v34;
          }
          v27(v83, v4);

          id v30 = v53;
        }
        uint64_t v28 = v81;
      }
      ++v22;

      v27(v23, v4);
      if (v28 == v22) {
        goto LABEL_51;
      }
    }
  }
  if (!v20)
  {
    uint64_t v57 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v57) {
      goto LABEL_41;
    }
LABEL_53:
    swift_bridgeObjectRelease();
LABEL_54:
    unint64_t v72 = v75;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char v73 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v89 = *v72;
    *unint64_t v72 = 0x8000000000000000;
    sub_1C2365FF8((uint64_t)v17, a1, v73);
    *unint64_t v72 = v89;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return (uint64_t)v17;
  }
  swift_bridgeObjectRetain();
  uint64_t v57 = sub_1C2550620();
  if (!v57) {
    goto LABEL_53;
  }
LABEL_41:
  uint64_t v90 = v17;
  sub_1C2550490();
  if ((v57 & 0x8000000000000000) == 0)
  {
    uint64_t v58 = 0;
    unint64_t v59 = v18 & 0xC000000000000001;
    float v60 = (void (**)(char *, uint64_t))(v76 + 8);
    do
    {
      if (v59) {
        id v61 = (id)MEMORY[0x1C87588E0](v58, v18);
      }
      else {
        id v61 = *(id *)(v18 + 8 * v58 + 32);
      }
      id v62 = v61;
      ++v58;
      id v63 = objc_msgSend(v61, sel_date, v75);
      sub_1C254CA80();

      id v64 = v88;
      HKTimeScope.bucketingDate(for:)((uint64_t)v6, v87, v88);
      uint64_t v65 = *v60;
      uint64_t v66 = v84;
      (*v60)(v6, v84);
      id v67 = (void *)sub_1C254CA50();
      v65(v64, v66);
      id v68 = objc_msgSend(v62, sel_chartableCodedQuantitySetByChangingDate_, v67);

      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      unint64_t v18 = v85;
    }
    while (v57 != v58);
    id v17 = v90;
    swift_bridgeObjectRelease();
    a1 = v87;
    goto LABEL_54;
  }
LABEL_57:
  __break(1u);
LABEL_58:
  uint64_t result = sub_1C2550910();
  __break(1u);
  return result;
}

id MedicalRecordChartDataSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MedicalRecordChartDataSource.init()()
{
}

id MedicalRecordChartDataSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordChartDataSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2397CF0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C23F5310();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C2397D6C(v6);
  return sub_1C2550470();
}

void sub_1C2397D6C(uint64_t *a1)
{
  uint64_t v136 = sub_1C254CAD0();
  uint64_t v2 = *(void *)(v136 - 8);
  MEMORY[0x1F4188790](v136);
  uint64_t v135 = (char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v134 = (char *)&v121 - v5;
  uint64_t v6 = a1[1];
  uint64_t v7 = sub_1C2550800();
  if (v7 >= v6)
  {
    if (v6 < 0) {
      goto LABEL_134;
    }
    if (v6) {
      sub_1C2398704(0, v6, 1, a1);
    }
    return;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_142;
  }
  uint64_t v126 = v7;
  if (v6 < 2)
  {
    uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v139 = MEMORY[0x1E4FBC860];
    uint64_t v131 = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      unint64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_100:
      uint64_t v112 = v132;
      if (v14 >= 2)
      {
        uint64_t v113 = *a1;
        do
        {
          unint64_t v114 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_129;
          }
          if (!v113) {
            goto LABEL_141;
          }
          uint64_t v115 = v11;
          char v116 = v11 + 32;
          uint64_t v117 = *(void *)&v11[16 * v114 + 32];
          uint64_t v118 = *(void *)&v11[16 * v14 + 24];
          sub_1C239893C(v113 + 8 * v117, (id *)(v113 + 8 * *(void *)&v116[16 * v14 - 16]), (id *)(v113 + 8 * v118), v131);
          if (v112) {
            break;
          }
          if (v118 < v117) {
            goto LABEL_130;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v115 = sub_1C23F321C((uint64_t)v115);
          }
          if (v114 >= *((void *)v115 + 2)) {
            goto LABEL_131;
          }
          uint64_t v119 = &v115[16 * v114 + 32];
          *(void *)uint64_t v119 = v117;
          *((void *)v119 + 1) = v118;
          unint64_t v120 = *((void *)v115 + 2);
          if (v14 > v120) {
            goto LABEL_132;
          }
          uint64_t v11 = v115;
          memmove(&v115[16 * v14 + 16], &v115[16 * v14 + 32], 16 * (v120 - v14));
          *((void *)v115 + 2) = v120 - 1;
          unint64_t v14 = v120 - 1;
        }
        while (v120 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C254F730();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1C21AB51C(0, &qword_1EA2DF928);
    uint64_t v10 = sub_1C254F780();
    *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    uint64_t v131 = (void **)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v139 = v10;
  }
  uint64_t v12 = 0;
  uint64_t v13 = *a1;
  char v133 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v124 = v13 + 16;
  uint64_t v122 = a1;
  uint64_t v123 = v13 - 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v129 = v6;
  uint64_t v137 = v13;
  while (1)
  {
    uint64_t v15 = v12;
    uint64_t v16 = v12 + 1;
    uint64_t v128 = v12;
    if (v12 + 1 < v6)
    {
      id v17 = *(void **)(v13 + 8 * v12);
      id v18 = *(id *)(v13 + 8 * v16);
      id v19 = v17;
      id v20 = objc_msgSend(v18, sel_date);
      uint64_t v21 = v134;
      sub_1C254CA80();

      id v22 = objc_msgSend(v19, sel_date);
      id v23 = v135;
      sub_1C254CA80();

      LODWORD(v138) = sub_1C254CA70();
      uint64_t v24 = *v133;
      uint64_t v25 = v23;
      uint64_t v26 = v136;
      (*v133)(v25, v136);
      v24(v21, v26);

      uint64_t v6 = v129;
      uint64_t v16 = v15 + 2;
      if (v15 + 2 < v6)
      {
        uint64_t v125 = v11;
        id v27 = (id *)(v124 + 8 * v15);
        while (1)
        {
          uint64_t v28 = *(v27 - 1);
          id v29 = *v27;
          id v30 = v28;
          id v31 = objc_msgSend(v29, sel_date);
          id v32 = v134;
          sub_1C254CA80();

          id v33 = objc_msgSend(v30, sel_date);
          int v34 = v135;
          sub_1C254CA80();

          LODWORD(v33) = sub_1C254CA70();
          unint64_t v35 = v34;
          uint64_t v36 = v136;
          v24(v35, v136);
          v24(v32, v36);

          if ((v138 ^ v33)) {
            break;
          }
          ++v27;
          uint64_t v6 = v129;
          if (v129 == ++v16)
          {
            uint64_t v16 = v129;
            uint64_t v11 = v125;
            goto LABEL_22;
          }
        }
        uint64_t v11 = v125;
        uint64_t v6 = v129;
LABEL_22:
        uint64_t v15 = v128;
      }
      uint64_t v13 = v137;
      if (v138)
      {
        if (v16 < v15) {
          goto LABEL_135;
        }
        if (v15 < v16)
        {
          id v37 = (uint64_t *)(v123 + 8 * v16);
          uint64_t v38 = v16;
          uint64_t v39 = v15;
          uint64_t v40 = (uint64_t *)(v137 + 8 * v15);
          do
          {
            if (v39 != --v38)
            {
              if (!v13) {
                goto LABEL_140;
              }
              uint64_t v41 = *v40;
              *uint64_t v40 = *v37;
              *id v37 = v41;
            }
            ++v39;
            --v37;
            ++v40;
          }
          while (v39 < v38);
        }
      }
    }
    if (v16 >= v6) {
      goto LABEL_50;
    }
    if (__OFSUB__(v16, v15)) {
      goto LABEL_133;
    }
    if (v16 - v15 >= v126) {
      goto LABEL_50;
    }
    if (__OFADD__(v15, v126)) {
      goto LABEL_136;
    }
    uint64_t v42 = v15 + v126 >= v6 ? v6 : v15 + v126;
    if (v42 < v15) {
      break;
    }
    if (v16 != v42)
    {
      uint64_t v125 = v11;
      uint64_t v43 = v123 + 8 * v16;
      uint64_t v127 = v42;
      do
      {
        BOOL v44 = *(void **)(v13 + 8 * v16);
        uint64_t v45 = v15;
        uint64_t v130 = v43;
        while (1)
        {
          uint64_t v46 = v16;
          unint64_t v47 = *(void **)v43;
          id v48 = v44;
          id v138 = v48;
          id v49 = v47;
          id v50 = objc_msgSend(v48, sel_date);
          char v51 = v134;
          sub_1C254CA80();

          id v52 = objc_msgSend(v49, sel_date);
          uint64_t v53 = v135;
          sub_1C254CA80();

          LOBYTE(v52) = sub_1C254CA70();
          uint64_t v54 = *v133;
          BOOL v55 = v53;
          uint64_t v56 = v136;
          (*v133)(v55, v136);
          v54(v51, v56);

          if ((v52 & 1) == 0) {
            break;
          }
          uint64_t v13 = v137;
          if (!v137) {
            goto LABEL_138;
          }
          uint64_t v16 = v46;
          uint64_t v57 = *(void **)v43;
          BOOL v44 = *(void **)(v43 + 8);
          *(void *)uint64_t v43 = v44;
          *(void *)(v43 + 8) = v57;
          v43 -= 8;
          if (v46 == ++v45) {
            goto LABEL_43;
          }
        }
        uint64_t v13 = v137;
        uint64_t v16 = v46;
LABEL_43:
        ++v16;
        uint64_t v43 = v130 + 8;
        uint64_t v15 = v128;
      }
      while (v16 != v127);
      uint64_t v16 = v127;
      uint64_t v11 = v125;
    }
LABEL_50:
    if (v16 < v15) {
      goto LABEL_128;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v138 = (id)v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v11 = sub_1C23F277C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v60 = *((void *)v11 + 2);
    unint64_t v59 = *((void *)v11 + 3);
    unint64_t v14 = v60 + 1;
    uint64_t v13 = v137;
    if (v60 >= v59 >> 1)
    {
      unint64_t v111 = sub_1C23F277C((char *)(v59 > 1), v60 + 1, 1, v11);
      uint64_t v13 = v137;
      uint64_t v11 = v111;
    }
    *((void *)v11 + 2) = v14;
    id v61 = v11 + 32;
    id v62 = &v11[16 * v60 + 32];
    id v63 = v138;
    *(void *)id v62 = v15;
    *((void *)v62 + 1) = v63;
    if (v60)
    {
      while (1)
      {
        unint64_t v64 = v14 - 1;
        if (v14 >= 4)
        {
          uint64_t v69 = &v61[16 * v14];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_117;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_118;
          }
          unint64_t v76 = v14 - 2;
          uint64_t v77 = &v61[16 * v14 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_120;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_123;
          }
          if (v81 >= v72)
          {
            uint64_t v99 = &v61[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_127;
            }
            BOOL v92 = v67 < v102;
            goto LABEL_87;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v93 = *((void *)v11 + 4);
            uint64_t v94 = *((void *)v11 + 5);
            BOOL v75 = __OFSUB__(v94, v93);
            uint64_t v86 = v94 - v93;
            char v87 = v75;
            goto LABEL_81;
          }
          uint64_t v66 = *((void *)v11 + 4);
          uint64_t v65 = *((void *)v11 + 5);
          BOOL v75 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          char v68 = v75;
        }
        if (v68) {
          goto LABEL_119;
        }
        unint64_t v76 = v14 - 2;
        unint64_t v82 = &v61[16 * v14 - 32];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v85 = __OFSUB__(v83, v84);
        uint64_t v86 = v83 - v84;
        char v87 = v85;
        if (v85) {
          goto LABEL_122;
        }
        id v88 = &v61[16 * v64];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_125;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_126;
        }
        if (v86 + v91 >= v67)
        {
          BOOL v92 = v67 < v91;
LABEL_87:
          if (v92) {
            unint64_t v64 = v76;
          }
          goto LABEL_89;
        }
LABEL_81:
        if (v87) {
          goto LABEL_121;
        }
        uint64_t v95 = &v61[16 * v64];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v75 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_124;
        }
        if (v98 < v86) {
          goto LABEL_14;
        }
LABEL_89:
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v14)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
          goto LABEL_137;
        }
        if (!v13) {
          goto LABEL_139;
        }
        char v104 = v11;
        uint64_t v105 = &v61[16 * v103];
        uint64_t v106 = *(void *)v105;
        uint64_t v107 = &v61[16 * v64];
        uint64_t v108 = *((void *)v107 + 1);
        uint64_t v109 = v132;
        sub_1C239893C(v13 + 8 * *(void *)v105, (id *)(v13 + 8 * *(void *)v107), (id *)(v13 + 8 * v108), v131);
        uint64_t v132 = v109;
        if (v109) {
          goto LABEL_111;
        }
        if (v108 < v106) {
          goto LABEL_114;
        }
        if (v64 > *((void *)v104 + 2)) {
          goto LABEL_115;
        }
        *(void *)uint64_t v105 = v106;
        *(void *)&v61[16 * v103 + 8] = v108;
        unint64_t v110 = *((void *)v104 + 2);
        if (v64 >= v110) {
          goto LABEL_116;
        }
        uint64_t v11 = v104;
        unint64_t v14 = v110 - 1;
        memmove(&v61[16 * v64], v107 + 16, 16 * (v110 - 1 - v64));
        *((void *)v104 + 2) = v110 - 1;
        uint64_t v13 = v137;
        if (v110 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_14:
    uint64_t v6 = v129;
    uint64_t v12 = (uint64_t)v138;
    if ((uint64_t)v138 >= v129)
    {
      a1 = v122;
      goto LABEL_100;
    }
  }
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  sub_1C25505E0();
  __break(1u);
}

void sub_1C2398704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v30 = a1;
  uint64_t v35 = sub_1C254CAD0();
  MEMORY[0x1F4188790](v35);
  int v34 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v33 = (char *)&v28 - v10;
  uint64_t v29 = a2;
  if (a3 != a2)
  {
    uint64_t v11 = *a4;
    uint64_t v32 = v9 + 8;
    uint64_t v36 = v11;
    uint64_t v12 = v11 + 8 * a3 - 8;
    uint64_t v13 = (void (**)(char *, uint64_t))(v9 + 8);
LABEL_5:
    unint64_t v14 = *(void **)(v36 + 8 * a3);
    uint64_t v15 = v30;
    uint64_t v31 = v12;
    while (1)
    {
      uint64_t v16 = *(void **)v12;
      id v17 = v14;
      id v37 = v17;
      id v18 = v16;
      id v19 = objc_msgSend(v17, sel_date);
      id v20 = v33;
      sub_1C254CA80();

      id v21 = objc_msgSend(v18, sel_date);
      id v22 = v34;
      sub_1C254CA80();

      LOBYTE(v21) = sub_1C254CA70();
      uint64_t v23 = a3;
      uint64_t v24 = *v13;
      uint64_t v25 = v22;
      uint64_t v26 = v35;
      (*v13)(v25, v35);
      v24(v20, v26);
      a3 = v23;

      if ((v21 & 1) == 0)
      {
LABEL_4:
        a3 = v23 + 1;
        uint64_t v12 = v31 + 8;
        if (v23 + 1 == v29) {
          return;
        }
        goto LABEL_5;
      }
      if (!v36) {
        break;
      }
      id v27 = *(void **)v12;
      unint64_t v14 = *(void **)(v12 + 8);
      *(void *)uint64_t v12 = v14;
      *(void *)(v12 + 8) = v27;
      v12 -= 8;
      if (v23 == ++v15) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C239893C(uint64_t a1, id *a2, id *a3, void **a4)
{
  uint64_t v57 = sub_1C254CAD0();
  uint64_t v8 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v56 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v54 = a3;
  BOOL v55 = (char *)&v48 - v12;
  uint64_t v13 = (uint64_t)a2 - a1;
  uint64_t v14 = v13 / 8;
  uint64_t v15 = a2;
  uint64_t v16 = (char *)a3 - (char *)a2;
  uint64_t v17 = v16 / 8;
  id v61 = v11;
  unint64_t v60 = a4;
  uint64_t v58 = v11;
  if (v13 / 8 >= v16 / 8)
  {
    if (v16 < -7) {
      goto LABEL_41;
    }
    if (a4 != v15 || &v15[v17] <= a4)
    {
      memmove(a4, v15, 8 * v17);
      uint64_t v11 = v58;
    }
    uint64_t v31 = &a4[v17];
    unint64_t v59 = v31;
    id v61 = v15;
    if (v16 < 8 || v11 >= v15) {
      goto LABEL_40;
    }
    id v49 = (void (**)(char *, uint64_t))(v8 + 8);
    id v50 = a4;
    uint64_t v32 = v54 - 1;
    id v33 = v15;
    while (1)
    {
      uint64_t v54 = v15;
      id v52 = v31;
      uint64_t v53 = v32 + 1;
      uint64_t v35 = v31 - 1;
      uint64_t v36 = *--v33;
      id v37 = *(v31 - 1);
      id v51 = v37;
      id v38 = v36;
      id v39 = objc_msgSend(v37, sel_date);
      uint64_t v40 = v55;
      sub_1C254CA80();

      id v41 = objc_msgSend(v38, sel_date);
      uint64_t v42 = v56;
      sub_1C254CA80();

      LOBYTE(v41) = sub_1C254CA70();
      uint64_t v43 = *v49;
      BOOL v44 = v42;
      uint64_t v45 = v57;
      (*v49)(v44, v57);
      v43(v40, v45);

      if (v41) {
        break;
      }
      unint64_t v59 = v35;
      if (v53 < v52 || v32 >= v52)
      {
        *uint64_t v32 = *v35;
        id v33 = v54;
        uint64_t v31 = v35;
        goto LABEL_28;
      }
      unint64_t v46 = (unint64_t)v50;
      int v34 = v58;
      id v33 = v54;
      if (v53 != v52) {
        *uint64_t v32 = *v35;
      }
      uint64_t v31 = v35;
      if ((unint64_t)v35 <= v46) {
        goto LABEL_40;
      }
LABEL_29:
      --v32;
      uint64_t v15 = v33;
      if (v33 <= v34) {
        goto LABEL_40;
      }
    }
    uint64_t v31 = v52;
    if (v53 != v54 || v32 >= v54) {
      *uint64_t v32 = *v33;
    }
    id v61 = v33;
LABEL_28:
    int v34 = v58;
    if (v31 <= v50) {
      goto LABEL_40;
    }
    goto LABEL_29;
  }
  if (v13 >= -7)
  {
    if (a4 != v11 || &v11[v14] <= a4)
    {
      memmove(a4, v58, 8 * v14);
      uint64_t v11 = v58;
    }
    uint64_t v53 = &a4[v14];
    unint64_t v59 = v53;
    if (v13 >= 8 && v15 < v54)
    {
      id v52 = (void **)(v8 + 8);
      id v18 = v55;
      do
      {
        uint64_t v58 = v11;
        id v19 = *a4;
        id v20 = *v15;
        id v21 = v19;
        id v22 = a4;
        id v23 = objc_msgSend(v20, sel_date);
        sub_1C254CA80();

        id v24 = objc_msgSend(v21, sel_date);
        uint64_t v25 = v56;
        sub_1C254CA80();

        LOBYTE(v24) = sub_1C254CA70();
        uint64_t v26 = (void (*)(char *, uint64_t))*v52;
        id v27 = v25;
        uint64_t v28 = v57;
        ((void (*)(char *, uint64_t))*v52)(v27, v57);
        v26(v18, v28);

        if (v24)
        {
          a4 = v22;
          unint64_t v29 = (unint64_t)(v15 + 1);
          uint64_t v30 = v58;
          if (v58 < v15 || (unint64_t)v58 >= v29 || v58 != v15) {
            *uint64_t v58 = *v15;
          }
        }
        else
        {
          uint64_t v30 = v58;
          if (v58 != v22) {
            *uint64_t v58 = *v22;
          }
          a4 = v22 + 1;
          unint64_t v60 = v22 + 1;
          unint64_t v29 = (unint64_t)v15;
        }
        uint64_t v11 = v30 + 1;
        id v61 = v11;
        if (a4 >= v53) {
          break;
        }
        uint64_t v15 = (id *)v29;
      }
      while (v29 < (unint64_t)v54);
    }
LABEL_40:
    sub_1C23F2978(&v61, &v60, &v59);
    return 1;
  }
LABEL_41:
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

id sub_1C2398E4C(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6)
{
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_cachedBucketedSets] = MEMORY[0x1E4FBC868];
  uint64_t v12 = (void **)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors];
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_type] = a6;
  sub_1C2398F9C(a1, (uint64_t)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartDefining]);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_dataTransformer] = a2;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit] = a3;
  swift_beginAccess();
  uint64_t v13 = *v12;
  *uint64_t v12 = a4;
  uint64_t v14 = v6;
  swift_unknownObjectRetain();
  id v15 = a3;
  id v16 = a4;

  v14[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_collapseIntoRangePoints] = a5;
  v19.receiver = v14;
  v19.super_class = (Class)type metadata accessor for MedicalRecordChartDataSource();
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  sub_1C239986C(a1, (uint64_t (*)(void))sub_1C2399000);
  return v17;
}

uint64_t sub_1C2398F9C(uint64_t a1, uint64_t a2)
{
  sub_1C2399000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C2399000()
{
  if (!qword_1EA2E20E0)
  {
    sub_1C2399058();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E20E0);
    }
  }
}

unint64_t sub_1C2399058()
{
  unint64_t result = qword_1EA2DFA98;
  if (!qword_1EA2DFA98)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DFA98);
  }
  return result;
}

uint64_t sub_1C23990B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  unint64_t v6 = a1;
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v7) {
      break;
    }
    uint64_t v18 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2550490();
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }
    id v15 = v4;
    unint64_t v16 = v6 & 0xC000000000000001;
    uint64_t v9 = (void *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit);
    uint64_t v10 = *(void **)(a2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_dataTransformer);
    a2 = *(void *)(a2 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_type);
    swift_beginAccess();
    uint64_t v11 = 0;
    unint64_t v12 = v6;
    while (v7 != v11)
    {
      if (v16) {
        id v13 = (id)MEMORY[0x1C87588E0](v11, v6);
      }
      else {
        id v13 = *(id *)(v6 + 8 * v11 + 32);
      }
      uint64_t v14 = v13;
      ++v11;
      id v4 = objc_msgSend(v10, sel_chartPointFor_in_with_dataSourceType_, v13, *v9, a3, a2, v15);

      sub_1C2550460();
      sub_1C25504A0();
      sub_1C25504B0();
      sub_1C2550470();
      unint64_t v6 = v12;
      if (v7 == v11) {
        return v18;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1C2399264(void *a1, uint64_t a2, void *a3, void *a4, char a5, uint64_t a6)
{
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableCodedQuantitySets] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_cachedBucketedSets] = MEMORY[0x1E4FBC868];
  unint64_t v12 = (void **)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors];
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange] = 0;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_type] = a6;
  if (a1)
  {
    *((void *)&v21 + 1) = sub_1C21AB51C(0, (unint64_t *)&qword_1EA2DE378);
    id v22 = &protocol witness table for HKConcept;
    *(void *)&long long v20 = a1;
  }
  else
  {
    id v22 = 0;
    long long v20 = 0u;
    long long v21 = 0u;
  }
  sub_1C23998CC((uint64_t)&v20, (uint64_t)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartDefining]);
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_dataTransformer] = a2;
  *(void *)&v6[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit] = a3;
  swift_beginAccess();
  id v13 = *v12;
  *unint64_t v12 = a4;
  uint64_t v14 = v6;
  id v15 = a1;
  swift_unknownObjectRetain();
  id v16 = a3;
  id v17 = a4;

  v14[OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_collapseIntoRangePoints] = a5 & 1;
  v19.receiver = v14;
  v19.super_class = (Class)type metadata accessor for MedicalRecordChartDataSource();
  return objc_msgSendSuper2(&v19, sel_init);
}

unint64_t sub_1C23993D8()
{
  unint64_t result = qword_1EA2E32D0;
  if (!qword_1EA2E32D0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2E32D0);
  }
  return result;
}

uint64_t sub_1C2399430(id *a1)
{
  return sub_1C239659C(a1) & 1;
}

unint64_t sub_1C2399450()
{
  unint64_t result = qword_1EA2E0860;
  if (!qword_1EA2E0860)
  {
    sub_1C254CAD0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E0860);
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordChartDataSource()
{
  return self;
}

unint64_t sub_1C23994D0()
{
  unint64_t result = qword_1EA2E2198;
  if (!qword_1EA2E2198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2198);
  }
  return result;
}

id sub_1C2399524@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_unit);
  swift_beginAccess();
  id v4 = *v3;
  *a2 = *v3;
  return v4;
}

id sub_1C239958C@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_preferredColors, a2);
}

void sub_1C2399598(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

id sub_1C23995B8@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableXRange, a2);
}

void sub_1C23995C4(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

id sub_1C23995E4@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC15HealthRecordsUI28MedicalRecordChartDataSource_chartableYRange, a2);
}

void sub_1C23995F0(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

ValueMetadata *type metadata accessor for MedicalRecordChartDataSourceType()
{
  return &type metadata for MedicalRecordChartDataSourceType;
}

uint64_t method lookup function for MedicalRecordChartDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordChartDataSource);
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.unit.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.preferredColors.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.chartableXRange.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.chartableYRange.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.displayName.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.__allocating_init(chartDefining:dataTransformer:unit:preferredColors:collapseIntoRangePoints:type:)()
{
  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.__allocating_init(concept:dataTransformer:unit:preferredColors:collapseIntoRangePoints:type:)()
{
  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.numberOfDataPoints(in:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x150))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.graphSeries(withMainColor:verticalAxis:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x158))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.chartDisplayType(verticalAxis:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x160))();
}

uint64_t dispatch thunk of MedicalRecordChartDataSource.take(chartableCodedQuantitySets:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x168))();
}

uint64_t sub_1C239986C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C23998CC(uint64_t a1, uint64_t a2)
{
  sub_1C2399000();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2399930(id *a1)
{
  return sub_1C2399430(a1) & 1;
}

ValueMetadata *type metadata accessor for PDF()
{
  return &type metadata for PDF;
}

uint64_t sub_1C239995C(unint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  id v23 = a2;
  uint64_t v24 = a3;
  sub_1C239AB60(0, &qword_1EA2DE7A8);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v22 - v7;
  sub_1C239AB08(0, &qword_1EA2E21B8, &qword_1EA2DE7A8);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  unint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  id v15 = (uint64_t *)((char *)&v22 - v14);
  id v16 = (void *)MEMORY[0x1C87594F0](v13);
  sub_1C220F68C(a1, v15);
  sub_1C239ABA8((uint64_t)v15, (uint64_t)v12, &qword_1EA2E21B8, &qword_1EA2DE7A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
  {
    uint64_t v17 = 0;
  }
  else
  {
    uint64_t v18 = sub_1C239AC74((uint64_t)v12, (uint64_t)v8, &qword_1EA2DE7A8);
    uint64_t v19 = (uint64_t)v23;
    uint64_t v20 = v24;
    if (v23(v18)) {
      uint64_t v17 = 0;
    }
    else {
      uint64_t v17 = sub_1C2399BA4((uint64_t)v8, v19, v20);
    }
    sub_1C2399E48((uint64_t)v8, &qword_1EA2DE7A8);
  }
  sub_1C239AC18((uint64_t)v15, &qword_1EA2E21B8, &qword_1EA2DE7A8);
  return v17;
}

uint64_t sub_1C2399BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C239AB60(0, &qword_1EA2DE7A8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v10 = (char *)aBlock - v9;
  id v11 = objc_msgSend(self, sel_currentTraitCollection);
  uint64_t v12 = sub_1C254FCD0();

  long long v22 = xmmword_1C2566BA0;
  sub_1C239A7A4(a1, (uint64_t)v10);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v14 = (v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  sub_1C239AC74((uint64_t)v10, v15 + v13, &qword_1EA2DE7A8);
  id v16 = (void *)(v15 + v14);
  *id v16 = a2;
  v16[1] = a3;
  *(void *)(v15 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8)) = &v22;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1C239AA44;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1C225FF10;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C23CC224;
  void aBlock[3] = &block_descriptor_42;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend((id)v12, sel_performAsCurrentTraitCollection_, v18);

  _Block_release(v18);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v12)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = v22;
    swift_release();
    return v20;
  }
  return result;
}

uint64_t sub_1C2399E48(uint64_t a1, unint64_t *a2)
{
  sub_1C239AB60(0, a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2399EA4(uint64_t a1)
{
  return sub_1C254E630();
}

uint64_t sub_1C2399EE4(uint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t *a4)
{
  uint64_t v97 = a4;
  sub_1C239AB60(0, (unint64_t *)&qword_1EA2E21C0);
  uint64_t v101 = *(void *)(v6 - 8);
  uint64_t v102 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v96 = (uint64_t)&v88 - v7;
  sub_1C239AB60(0, &qword_1EA2E21C8);
  unint64_t v103 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t, void))(v8 - 8);
  uint64_t v104 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v99 = (uint64_t)&v88 - v9;
  sub_1C239AB08(0, &qword_1EA2E21D0, (unint64_t *)&qword_1EA2E21C0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v98 = (uint64_t)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v100 = (char *)&v88 - v13;
  sub_1C239AB60(0, &qword_1EA2E0F30);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (uint64_t *)((char *)&v88 - v17);
  sub_1C239AB08(0, &qword_1EA2E21D8, &qword_1EA2E21C8);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  long long v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v105 = (uint64_t)&v88 - v23;
  sub_1C239AB08(0, &qword_1EA2E21E0, &qword_1EA2E0F30);
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  id v27 = (char *)&v88 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  uint64_t v30 = (uint64_t *)((char *)&v88 - v29);
  uint64_t v31 = (void *)MEMORY[0x1C87594F0](v28);
  sub_1C231BD34(a1, v30);
  uint64_t v106 = a2;
  if (a2()) {
    return sub_1C239AC18((uint64_t)v30, &qword_1EA2E21E0, &qword_1EA2E0F30);
  }
  sub_1C239ABA8((uint64_t)v30, (uint64_t)v27, &qword_1EA2E21E0, &qword_1EA2E0F30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v27, 1, v15) == 1)
  {
    uint64_t v32 = v105;
    uint64_t v33 = v103[7](v105, 1, 1, v104);
  }
  else
  {
    uint64_t v34 = sub_1C239AC74((uint64_t)v27, (uint64_t)v18, &qword_1EA2E0F30);
    uint64_t v35 = (void *)MEMORY[0x1C87594F0](v34);
    uint64_t v32 = v105;
    sub_1C249DF00(v18, v105);
    uint64_t v33 = sub_1C2399E48((uint64_t)v18, &qword_1EA2E0F30);
  }
  uint64_t v36 = v106;
  if (((uint64_t (*)(uint64_t))v106)(v33))
  {
LABEL_17:
    sub_1C239AC18(v32, &qword_1EA2E21D8, &qword_1EA2E21C8);
    return sub_1C239AC18((uint64_t)v30, &qword_1EA2E21E0, &qword_1EA2E0F30);
  }
  sub_1C239ABA8(v32, (uint64_t)v22, &qword_1EA2E21D8, &qword_1EA2E21C8);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v103[6])(v22, 1, v104) != 1)
  {
    uint64_t v42 = (uint64_t)v22;
    uint64_t v43 = v99;
    uint64_t v44 = sub_1C239AC74(v42, v99, &qword_1EA2E21C8);
    uint64_t v45 = (uint64_t (**)(uint64_t, uint64_t, uint64_t, void))MEMORY[0x1C87594F0](v44);
    unint64_t v46 = *(void *)(v43 + 112);
    double v47 = *(double *)(v43 + 160);
    double v48 = sub_1C22B4360(v47);
    uint64_t v49 = sub_1C2233068(v46, *(uint64_t (**)(uint64_t))(v43 + 200), v48, *(void *)(v43 + 208), *(uint64_t (**)(uint64_t))(v43 + 168), *(void *)(v43 + 176), *(uint64_t (**)(unint64_t, uint64_t))(v43 + 232), *(void *)(v43 + 240), *(double (**)(void))(v43 + 264), *(void *)(v43 + 272), 40);
    if (v49)
    {
      uint64_t v50 = v49;
      id v94 = *(id *)v43;
      id v51 = v94;
      uint64_t v52 = *(void *)(v43 + 8);
      uint64_t v53 = *(void *)(v43 + 16);
      uint64_t v54 = *(void **)(v43 + 24);
      uint64_t v55 = *(void *)(v43 + 32);
      uint64_t v56 = *(void *)(v43 + 40);
      id v95 = *(id *)(v43 + 48);
      id v57 = v95;
      uint64_t v89 = *(void *)(v43 + 56);
      uint64_t v88 = *(void *)(v43 + 64);
      char v58 = *(unsigned char *)(v43 + 72);
      unint64_t v103 = v45;
      unint64_t v59 = *(void **)(v43 + 80);
      uint64_t v91 = *(void *)(v43 + 88);
      uint64_t v90 = *(void *)(v43 + 96);
      char v60 = *(unsigned char *)(v43 + 104);
      BOOL v92 = *(void **)(v43 + 120);
      uint64_t v61 = *(void *)(v43 + 128);
      uint64_t v62 = *(void *)(v43 + 136);
      uint64_t v93 = *(void **)(v43 + 144);
      uint64_t v63 = *(void *)(v43 + 152);
      LOBYTE(v108[0]) = v58;
      uint64_t v64 = v43 + *(int *)(v104 + 28);
      uint64_t v65 = v102;
      uint64_t v37 = (uint64_t)v100;
      uint64_t v66 = (uint64_t)&v100[*(int *)(v102 + 28)];
      char v107 = v60;
      sub_1C22177F8(v64, v66);
      *(void *)uint64_t v37 = v51;
      *(void *)(v37 + 8) = v52;
      *(void *)(v37 + 16) = v53;
      *(void *)(v37 + 24) = v54;
      *(void *)(v37 + 32) = v55;
      *(void *)(v37 + 40) = v56;
      uint64_t v67 = v89;
      *(void *)(v37 + 48) = v57;
      *(void *)(v37 + 56) = v67;
      *(void *)(v37 + 64) = v88;
      *(unsigned char *)(v37 + 72) = v108[0];
      uint64_t v68 = v91;
      *(void *)(v37 + 80) = v59;
      *(void *)(v37 + 88) = v68;
      *(void *)(v37 + 96) = v90;
      *(unsigned char *)(v37 + 104) = v107;
      uint64_t v69 = v92;
      *(void *)(v37 + 112) = v50;
      *(void *)(v37 + 120) = v69;
      *(void *)(v37 + 128) = v61;
      *(void *)(v37 + 136) = v62;
      uint64_t v70 = v93;
      *(void *)(v37 + 144) = v93;
      *(void *)(v37 + 152) = v63;
      *(double *)(v37 + 160) = v47;
      uint64_t v71 = v65;
      uint64_t v32 = v105;
      uint64_t v36 = v106;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v101 + 56))(v37, 0, 1, v71);
      id v72 = v59;
      uint64_t v45 = v103;
      id v73 = v69;
      uint64_t v74 = v99;
      id v75 = v70;
      id v76 = v94;
      id v77 = v54;
      id v78 = v95;
    }
    else
    {
      uint64_t v74 = v43;
      uint64_t v37 = (uint64_t)v100;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56))(v100, 1, 1, v102);
    }
    uint64_t v87 = sub_1C2399E48(v74, &qword_1EA2E21C8);
    if ((((uint64_t (*)(uint64_t))v36)(v87) & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
  uint64_t v37 = (uint64_t)v100;
  uint64_t v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56))(v100, 1, 1, v102);
  if (((uint64_t (*)(uint64_t))v36)(v38))
  {
LABEL_16:
    sub_1C239AC18(v37, &qword_1EA2E21D0, (unint64_t *)&qword_1EA2E21C0);
    goto LABEL_17;
  }
LABEL_8:
  uint64_t v39 = v98;
  sub_1C239ABA8(v37, v98, &qword_1EA2E21D0, (unint64_t *)&qword_1EA2E21C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v39, 1, v102) == 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = 0xF000000000000000;
  }
  else
  {
    uint64_t v79 = v96;
    uint64_t v80 = sub_1C239AC74(v39, v96, (unint64_t *)&qword_1EA2E21C0);
    uint64_t v81 = (void *)MEMORY[0x1C87594F0](v80);
    sub_1C24A2FFC(v79, v108);
    uint64_t v40 = v108[0];
    uint64_t v41 = v108[1];
    uint64_t v82 = v79;
    uint64_t v37 = (uint64_t)v100;
    sub_1C2399E48(v82, (unint64_t *)&qword_1EA2E21C0);
  }
  uint64_t v83 = v97;
  sub_1C239AC18(v37, &qword_1EA2E21D0, (unint64_t *)&qword_1EA2E21C0);
  sub_1C239AC18(v32, &qword_1EA2E21D8, &qword_1EA2E21C8);
  sub_1C239AC18((uint64_t)v30, &qword_1EA2E21E0, &qword_1EA2E0F30);
  uint64_t v84 = *v83;
  unint64_t v85 = v83[1];
  *uint64_t v83 = v40;
  v83[1] = v41;
  return sub_1C22071AC(v84, v85);
}

uint64_t sub_1C239A7A4(uint64_t a1, uint64_t a2)
{
  sub_1C239AB60(0, &qword_1EA2DE7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C239A818()
{
  sub_1C239AB60(0, &qword_1EA2DE7A8);
  uint64_t v2 = v1 - 8;
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(*(void *)(v1 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v7 = v0 + v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v7 + *(int *)(v2 + 36);
  uint64_t v9 = sub_1C254CCC0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  uint64_t v11 = (int *)_s13ConfigurationVMa();
  uint64_t v12 = v8 + v11[5];
  uint64_t v13 = sub_1C254CAD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);

  uint64_t v14 = v8 + v11[9];
  uint64_t v15 = sub_1C254CBD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);

  v10(v8 + v11[12], v9);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C239AA44()
{
  sub_1C239AB60(0, &qword_1EA2DE7A8);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(uint64_t (**)(void))(v0 + v4);
  uint64_t v6 = *(void *)(v0 + v4 + 8);
  uint64_t v7 = *(uint64_t **)(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C2399EE4((uint64_t *)(v0 + v3), v5, v6, v7);
}

uint64_t sub_1C239AAF0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t block_destroy_helper_37()
{
  return swift_release();
}

void sub_1C239AB08(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C239AB60(255, a3);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C239AB60(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = _s7PDFDataVMa();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1C239ABA8(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_1C239AB08(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C239AC18(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1C239AB08(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C239AC74(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1C239AB60(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t min<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1C239AD10(a1, a2, a3, a4, MEMORY[0x1E4FBC080], a5);
}

uint64_t max<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1C239AD10(a1, a2, a3, a4, MEMORY[0x1E4FBC078], a5);
}

uint64_t sub_1C239AD10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(char *, char *, uint64_t, uint64_t)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v33 = a6;
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v30 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = sub_1C2550100();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __n128 v16 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v20 = (char *)&v30 + *(int *)(v19 + 56) - v17;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(v14 - 8) + 16);
  v21((char *)&v30 - v17, a1, v14, v16);
  ((void (*)(char *, uint64_t, uint64_t))v21)(v20, a2, v14);
  long long v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v14) = v22(v18, 1, a3);
  int v23 = v22(v20, 1, a3);
  if (v14 != 1)
  {
    uint64_t v26 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
    if (v23 == 1)
    {
      uint64_t v25 = v33;
      v26(v33, v18, a3);
    }
    else
    {
      v26((uint64_t)v13, v18, a3);
      id v27 = v30;
      v26((uint64_t)v30, v20, a3);
      uint64_t v25 = v33;
      v32(v13, v27, a3, v31);
      uint64_t v28 = *(void (**)(char *, uint64_t))(v9 + 8);
      v28(v27, a3);
      v28(v13, a3);
    }
    goto LABEL_8;
  }
  if (v23 != 1)
  {
    uint64_t v25 = v33;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v33, v20, a3);
LABEL_8:
    uint64_t v24 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v25, v24, 1, a3);
  }
  uint64_t v24 = 1;
  uint64_t v25 = v33;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v25, v24, 1, a3);
}

id sub_1C239B000()
{
  id v1 = objc_msgSend(*v0, sel_sampleType);
  return v1;
}

id sub_1C239B038()
{
  id v1 = objc_msgSend(*v0, sel_predicate);
  return v1;
}

uint64_t CategoryRecordQueryDescription.category.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C21A9698(v1 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_category, a1);
}

id CategoryRecordQueryDescription.queryDescriptor.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
}

id sub_1C239B094()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor), sel_sampleType);
  return v1;
}

id sub_1C239B0D4()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor), sel_predicate);
  return v1;
}

void sub_1C239B118()
{
  BrowseCategory.rawValue.getter();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
  sub_1C254FF80();
}

uint64_t CategoryRecordQueryDescription.deinit()
{
  sub_1C2268C64(v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_category);

  return v0;
}

uint64_t CategoryRecordQueryDescription.__deallocating_deinit()
{
  sub_1C2268C64(v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_category);

  return swift_deallocClassInstance();
}

uint64_t sub_1C239B260()
{
  return sub_1C2550A10();
}

uint64_t sub_1C239B2E0()
{
  return sub_1C2550A10();
}

void sub_1C239B368()
{
  uint64_t v1 = *v0;
  BrowseCategory.rawValue.getter();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  id v2 = *(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
  sub_1C254FF80();
}

uint64_t sub_1C239B404()
{
  sub_1C25509C0();
  uint64_t v1 = *v0;
  BrowseCategory.rawValue.getter();
  sub_1C254F570();
  swift_bridgeObjectRelease();
  id v2 = *(id *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor);
  sub_1C254FF80();

  return sub_1C2550A10();
}

id sub_1C239B494()
{
  id v1 = objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor), sel_sampleType);
  return v1;
}

id sub_1C239B4D8()
{
  id v1 = objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI30CategoryRecordQueryDescription_queryDescriptor), sel_predicate);
  return v1;
}

uint64_t sub_1C239B51C()
{
  return _s15HealthRecordsUI30CategoryRecordQueryDescriptionC2eeoiySbAC_ACtFZ_0();
}

uint64_t _s15HealthRecordsUI30CategoryRecordQueryDescriptionC2eeoiySbAC_ACtFZ_0()
{
  unint64_t v0 = BrowseCategory.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == BrowseCategory.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v5 = sub_1C2550870();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0) {
      return 0;
    }
  }
  sub_1C224B3D4();
  return sub_1C254FF70() & 1;
}

unint64_t sub_1C239B5FC()
{
  unint64_t result = qword_1EBB6F880;
  if (!qword_1EBB6F880)
  {
    type metadata accessor for CategoryRecordQueryDescription();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB6F880);
  }
  return result;
}

uint64_t type metadata accessor for CategoryRecordQueryDescription()
{
  uint64_t result = qword_1EBB6F888;
  if (!qword_1EBB6F888) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t dispatch thunk of QueryDescriptor.sampleType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of QueryDescriptor.predicate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C239B6C8()
{
  return type metadata accessor for CategoryRecordQueryDescription();
}

uint64_t sub_1C239B6D0()
{
  uint64_t result = type metadata accessor for BrowseCategory();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CategoryRecordQueryDescription(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CategoryRecordQueryDescription);
}

uint64_t dispatch thunk of CategoryRecordQueryDescription.sampleType.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of CategoryRecordQueryDescription.predicate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of CategoryRecordQueryDescription.hash(into:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of CategoryRecordQueryDescription.hashValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t Result<>.init(success:failureOrNil:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  if (a2)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    *a4 = a2;
  }
  else
  {
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1, a3);
  }
  sub_1C2206F9C();
  sub_1C2550A30();
  return swift_storeEnumTagMultiPayload();
}

uint64_t Result<>.init(successOrNil:failureOrNil:fallbackFailure:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v10 = sub_1C2550100();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = *(void *)(a4 - 8);
  __n128 v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
    *(void *)a5 = a2;
    sub_1C2206F9C();
    sub_1C2550A30();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 32))(v13, a1, v10, v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      *(void *)a5 = a3;
    }
    else
    {

      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v20(v18, v13, a4);
      v20(a5, v18, a4);
    }
    sub_1C2206F9C();
    sub_1C2550A30();
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t static ResultError.== infix(_:_:)()
{
  return 1;
}

uint64_t ResultError.hash(into:)()
{
  return sub_1C25509D0();
}

uint64_t ResultError.hashValue.getter()
{
  return sub_1C2550A10();
}

unint64_t sub_1C239BC4C()
{
  unint64_t result = qword_1EA2E21E8;
  if (!qword_1EA2E21E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E21E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ResultError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C239BD3CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResultError()
{
  return &type metadata for ResultError;
}

uint64_t sub_1C239BD74()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_1C254D9B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v40 - v7;
  uint64_t v9 = v0[8];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = v9 + 32;
    uint64_t v46 = type metadata accessor for RecordCell();
    id v45 = (id)v0[6];
    uint64_t v44 = (void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v43 = v3 + 32;
    uint64_t v42 = v3 + 8;
    v40[1] = v9;
    swift_bridgeObjectRetain();
    unint64_t v12 = MEMORY[0x1E4FBC860];
    char v13 = 1;
    long long v41 = xmmword_1C255CD90;
    uint64_t v61 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v50 = v0;
    uint64_t v49 = v2;
    uint64_t v48 = v3;
    double v47 = v5;
    do
    {
      unint64_t v60 = v12;
      sub_1C21F4424(v11, (uint64_t)v70);
      sub_1C239CA24(v70, v13 & 1, (uint64_t)&v62);
      uint64_t v58 = *((void *)&v62 + 1);
      uint64_t v59 = v62;
      uint64_t v56 = v64;
      uint64_t v57 = v63;
      uint64_t v55 = v65;
      uint64_t v54 = v66;
      uint64_t v53 = v67;
      uint64_t v52 = v68;
      int v51 = v69;
      sub_1C21F4424((uint64_t)v70, (uint64_t)&v62);
      uint64_t v14 = v8;
      uint64_t v15 = type metadata accessor for RecordItem();
      __n128 v16 = (void *)swift_allocObject();
      sub_1C239D4A8(&qword_1EA2E21F0, 255, (void (*)(uint64_t))type metadata accessor for RecordCell);
      id v17 = v45;
      v16[8] = sub_1C254D330();
      v16[9] = v18;
      sub_1C21F44EC(&v62, (uint64_t)(v16 + 2));
      v16[7] = v17;
      sub_1C22E62A4(0, &qword_1EA2DF5D0, (unint64_t *)&qword_1EA2DED90, MEMORY[0x1E4F66028], MEMORY[0x1E4FBBE00]);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = v41;
      *(void *)(v19 + 56) = v15;
      *(void *)(v19 + 64) = sub_1C239D4A8(&qword_1EA2E2208, 255, (void (*)(uint64_t))type metadata accessor for RecordItem);
      *(void *)(v19 + 32) = v16;
      uint64_t v21 = v71;
      uint64_t v20 = v72;
      __swift_project_boxed_opaque_existential_1Tm(v70, v71);
      long long v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 56);
      swift_retain();
      uint64_t v23 = v21;
      uint64_t v8 = v14;
      *(void *)&long long v62 = v22(v23, v20);
      *((void *)&v62 + 1) = v24;
      swift_bridgeObjectRetain();
      sub_1C254F5A0();
      swift_bridgeObjectRelease();
      sub_1C254D990();
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v61 = sub_1C226D9DC(0, v61[2] + 1, 1, v61);
      }
      unint64_t v12 = v60;
      unint64_t v26 = v61[2];
      unint64_t v25 = v61[3];
      unint64_t v1 = v50;
      uint64_t v27 = v49;
      uint64_t v28 = v48;
      uint64_t v29 = v47;
      if (v26 >= v25 >> 1) {
        uint64_t v61 = sub_1C226D9DC((void *)(v25 > 1), v26 + 1, 1, v61);
      }
      uint64_t v30 = v61;
      v61[2] = v26 + 1;
      uint64_t v31 = &v30[9 * v26];
      uint64_t v32 = v58;
      v31[4] = v59;
      v31[5] = v32;
      uint64_t v33 = v56;
      v31[6] = v57;
      v31[7] = v33;
      uint64_t v34 = v54;
      v31[8] = v55;
      v31[9] = v34;
      uint64_t v35 = v52;
      v31[10] = v53;
      v31[11] = v35;
      *((unsigned char *)v31 + 96) = v51;
      (*v44)(v29, v8, v27);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v12 = sub_1C226D014(0, *(void *)(v12 + 16) + 1, 1, v12);
      }
      unint64_t v37 = *(void *)(v12 + 16);
      unint64_t v36 = *(void *)(v12 + 24);
      if (v37 >= v36 >> 1) {
        unint64_t v12 = sub_1C226D014(v36 > 1, v37 + 1, 1, v12);
      }
      *(void *)(v12 + 16) = v37 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v12+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v37, v29, v27);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v27);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v70);
      char v13 = 0;
      v11 += 40;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_1C228B104((uint64_t)v61);
    swift_bridgeObjectRelease();
    v1[7] = v38;
    swift_bridgeObjectRelease();
    sub_1C254D560();
    sub_1C254DA10();
    swift_release();
  }
  else
  {
    v0[7] = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return sub_1C244073C(*(void *)(v1[8] + 16) == 0);
}

void *RecordDataSource.__allocating_init(recordPublisher:profile:)(uint64_t a1, void *a2)
{
  return RecordDataSource.init(recordPublisher:profile:)(a1, a2);
}

void *RecordDataSource.init(recordPublisher:profile:)(uint64_t a1, void *a2)
{
  uint64_t v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC28];
  sub_1C239C830(0, (unint64_t *)&qword_1EBB6F4A0, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v19 - v6;
  sub_1C22E611C();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  v2[7] = MEMORY[0x1E4FBC860];
  v2[8] = v13;
  v2[9] = 0;
  v2[5] = a1;
  v2[6] = a2;
  sub_1C239C830(0, (unint64_t *)&unk_1EA2E0140, MEMORY[0x1E4F66468], MEMORY[0x1E4FBBE00]);
  sub_1C254D9B0();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C255CD90;
  swift_retain();
  id v19 = a2;
  sub_1C254D990();
  uint64_t v15 = ConceptsDataSource.init(arrangedSections:isHidden:)(v14, 0);
  uint64_t v22 = v15[5];
  sub_1C22023A4();
  swift_retain();
  swift_retain();
  id v21 = (id)sub_1C254FC70();
  uint64_t v16 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v7, 1, 1, v16);
  sub_1C22E6210();
  sub_1C239D4A8(&qword_1EA2E08E0, 255, (void (*)(uint64_t))sub_1C22E6210);
  sub_1C239D4A8((unint64_t *)&qword_1EBB6F4B0, 255, (void (*)(uint64_t))sub_1C22023A4);
  sub_1C254EC70();
  sub_1C239D438((uint64_t)v7, (unint64_t *)&qword_1EBB6F4A0, v20);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1C239D4A8(&qword_1EA2E08E8, 255, (void (*)(uint64_t))sub_1C22E611C);
  uint64_t v17 = sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v15[9] = v17;
  swift_release();
  swift_retain();
  sub_1C244073C(1);
  swift_release_n();
  swift_release();

  return v15;
}

void sub_1C239C830(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C239C894()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C239C8CC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(void *)(result + 64) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1C239BD74();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C239C948(uint64_t *a1)
{
  return sub_1C239C8CC(a1);
}

uint64_t sub_1C239C950()
{
  uint64_t v0 = sub_1C254DB50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DA90();
  uint64_t v4 = sub_1C254DB40();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1C239CA24@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v37 = a2;
  sub_1C239C830(0, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v36 - v6;
  uint64_t v8 = sub_1C254CAD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  v36[0] = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C254C730();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();

  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v15, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1C239D438((uint64_t)v7, (unint64_t *)&qword_1EBB6F550, MEMORY[0x1E4F27928]);
    uint64_t v17 = v12;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = v36[0];
    (*(void (**)(void, char *, uint64_t))(v9 + 32))(v36[0], v7, v8);
    id v19 = objc_msgSend(*(id *)(v36[1] + 48), sel_utcDateFormatter);
    id v20 = objc_msgSend(v19, sel_monthDayYearFormatter);

    id v21 = (void *)sub_1C254CA50();
    id v22 = objc_msgSend(v20, sel_stringFromDate_, v21);

    uint64_t v17 = sub_1C254F470();
    uint64_t v14 = v23;

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v18, v8);
  }
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v24);
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 48))(v24, v25);
  uint64_t v28 = v27;
  uint64_t v29 = a1[3];
  uint64_t v30 = a1[4];
  __swift_project_boxed_opaque_existential_1Tm(a1, v29);
  uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 56))(v29, v30);
  uint64_t v39 = v31;
  swift_bridgeObjectRetain();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  uint64_t v32 = v38;
  uint64_t v33 = v39;
  swift_beginAccess();
  uint64_t v34 = off_1EA2E3C70;
  *(void *)a3 = qword_1EA2E3C68;
  *(void *)(a3 + 8) = v34;
  *(void *)(a3 + 16) = v17;
  *(void *)(a3 + 24) = v14;
  *(void *)(a3 + 32) = v26;
  *(void *)(a3 + 40) = v28;
  *(void *)(a3 + 48) = v32;
  *(void *)(a3 + 56) = v33;
  *(unsigned char *)(a3 + 64) = v37 & 1;
  return swift_bridgeObjectRetain();
}

void RecordDataSource.__allocating_init(arrangedSections:isHidden:)()
{
}

void RecordDataSource.init(arrangedSections:isHidden:)()
{
}

uint64_t sub_1C239CE90()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t RecordDataSource.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t RecordDataSource.__deallocating_deinit()
{
  RecordDataSource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C239CF5C()
{
  return sub_1C254E160();
}

Swift::Void __swiftcall RecordDataSource.registerCells(for:)(UICollectionView *a1)
{
}

uint64_t sub_1C239D080()
{
  return sub_1C254FAF0();
}

uint64_t RecordDataSource.supplementaryItem(ofKind:at:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1C254E890();
  MEMORY[0x1F4188790](v3 - 8);
  if (*(void *)(*(void *)(v1 + 56) + 16))
  {
    unint64_t v4 = sub_1C254CD80();
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v5 = *(void *)(v1 + 56);
      if (v4 < *(void *)(v5 + 16)) {
        return sub_1C21F4424(v5 + 40 * v4 + 32, (uint64_t)a1);
      }
    }
    __break(1u);
    goto LABEL_9;
  }
  if (qword_1EBB6EF40 != -1) {
LABEL_9:
  }
    swift_once();
  id v7 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  sub_1C254E820();
  uint64_t v8 = sub_1C254D2A0();
  swift_allocObject();
  uint64_t v9 = sub_1C254D280();
  a1[3] = v8;
  uint64_t result = sub_1C239D4A8((unint64_t *)&qword_1EBB6E7D8, 255, MEMORY[0x1E4F66208]);
  a1[4] = result;
  *a1 = v9;
  return result;
}

uint64_t sub_1C239D350(uint64_t a1, uint64_t a2)
{
  return sub_1C239D4A8(&qword_1EA2E2200, a2, (void (*)(uint64_t))type metadata accessor for RecordDataSource);
}

uint64_t type metadata accessor for RecordDataSource()
{
  return self;
}

uint64_t sub_1C239D3BC@<X0>(uint64_t *a1@<X8>)
{
  return RecordDataSource.supplementaryItem(ofKind:at:)(a1);
}

uint64_t method lookup function for RecordDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RecordDataSource);
}

uint64_t dispatch thunk of RecordDataSource.__allocating_init(recordPublisher:profile:)()
{
  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t dispatch thunk of RecordDataSource.layout(for:environment:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t sub_1C239D438(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C239C830(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C239D4A8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id OnboardingTileViewController.__allocating_init(with:sourceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI28OnboardingTileViewController_profile] = a1;
  uint64_t v8 = &v7[OBJC_IVAR____TtC15HealthRecordsUI28OnboardingTileViewController_sourceIdentifier];
  *(void *)uint64_t v8 = a2;
  *((void *)v8 + 1) = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_initWithStyle_, 1);
}

id OnboardingTileViewController.init(with:sourceIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI28OnboardingTileViewController_profile] = a1;
  uint64_t v4 = &v3[OBJC_IVAR____TtC15HealthRecordsUI28OnboardingTileViewController_sourceIdentifier];
  *(void *)uint64_t v4 = a2;
  *((void *)v4 + 1) = a3;
  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for OnboardingTileViewController();
  return objc_msgSendSuper2(&v6, sel_initWithStyle_, 1);
}

uint64_t type metadata accessor for OnboardingTileViewController()
{
  return self;
}

void sub_1C239D638()
{
  uint64_t v1 = v0;
  uint64_t v2 = (objc_class *)type metadata accessor for OnboardingTileViewController();
  v33.receiver = v0;
  v33.super_class = v2;
  objc_msgSendSuper2(&v33, sel_viewDidLoad);
  if (qword_1EBB6EF38 != -1) {
    swift_once();
  }
  id v3 = (id)qword_1EBB6FBB0;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v4 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v4, 0xE000000000000000);

  id v5 = objc_msgSend(v0, sel_navigationItem);
  id v6 = objc_msgSend(v0, sel_navigationController);
  if (!v6) {
    goto LABEL_13;
  }
  id v7 = v6;
  id v8 = objc_msgSend(v6, sel_viewControllers);

  sub_1C21AB51C(0, &qword_1EA2DE3F0);
  unint64_t v9 = sub_1C254F710();

  if (!(v9 >> 62))
  {
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C2550620();
  swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v9 & 0xC000000000000001) != 0)
  {
    id v10 = (id)MEMORY[0x1C87588E0](0, v9);
  }
  else
  {
    if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    id v10 = *(id *)(v9 + 32);
  }
  id v11 = v10;
  swift_bridgeObjectRelease();
  id v12 = v1;
  id v13 = v11;
  char v14 = sub_1C254FF70();

  if (v14)
  {
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 0, v12, sel_closeButtonTapped);
    goto LABEL_14;
  }
LABEL_13:
  id v15 = 0;
LABEL_14:
  v32[3] = v2;
  v32[0] = v1;
  id v17 = v1;
  id v18 = _sSo15UIBarButtonItemC15HealthRecordsUIE014makeTapToRadarC06target6actionABSgypSg_10ObjectiveC8SelectorVSgtFZ_0((uint64_t)v32, (uint64_t)sel_tapToRadar_);
  sub_1C224E3A4((uint64_t)v32);
  v32[0] = MEMORY[0x1E4FBC860];
  if (v15)
  {
    id v19 = v15;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v32[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }
  if (v18)
  {
    id v20 = v18;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v32[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
  }

  sub_1C21AB51C(0, &qword_1EA2DE448);
  id v21 = (void *)sub_1C254F700();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setRightBarButtonItems_, v21);

  id v22 = objc_msgSend(v17, sel_tableView);
  if (!v22) {
    goto LABEL_29;
  }
  uint64_t v23 = v22;
  objc_msgSend(v22, sel__setSectionContentInset_, 32.0, 16.0, 0.0, 16.0);

  id v24 = objc_msgSend(v17, sel_tableView);
  if (!v24)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v25 = v24;
  objc_msgSend(v24, sel__setSectionCornerRadius_, 10.0);

  id v26 = objc_msgSend(v17, sel_tableView);
  if (!v26)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v27 = v26;
  type metadata accessor for OnboardingTableViewCell(0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v29 = (void *)sub_1C254F430();
  objc_msgSend(v27, sel_registerClass_forCellReuseIdentifier_, ObjCClassFromMetadata, v29);

  id v30 = objc_msgSend(v17, sel_tableView);
  if (v30)
  {
    uint64_t v31 = v30;
    objc_msgSend(v30, sel_reloadData);

    return;
  }
LABEL_32:
  __break(1u);
}

id OnboardingTileViewController.__allocating_init(usingInsetStyling:)(char a1)
{
  id v3 = objc_allocWithZone(v1);
  return objc_msgSend(v3, sel_initWithUsingInsetStyling_, a1 & 1);
}

void OnboardingTileViewController.init(usingInsetStyling:)()
{
}

id OnboardingTileViewController.__allocating_init(style:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return objc_msgSend(v3, sel_initWithStyle_, a1);
}

void OnboardingTileViewController.init(style:)()
{
}

id OnboardingTileViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    id v6 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  id v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void OnboardingTileViewController.init(nibName:bundle:)()
{
}

id OnboardingTileViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OnboardingTileViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C239E240()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28OnboardingTileViewController_profile);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28OnboardingTileViewController_sourceIdentifier);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI28OnboardingTileViewController_sourceIdentifier + 8);
  uint64_t v4 = (objc_class *)type metadata accessor for OnboardingTableViewCell(0);
  id v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[qword_1EA2E4D78] = v1;
  id v6 = &v5[qword_1EA2E4D80];
  *(void *)id v6 = v3;
  *((void *)v6 + 1) = v2;
  swift_bridgeObjectRetain();
  id v7 = v1;
  id v8 = (void *)sub_1C254F430();
  v12.receiver = v5;
  v12.super_class = v4;
  id v9 = objc_msgSendSuper2(&v12, sel_initWithStyle_reuseIdentifier_, 0, v8);

  id v10 = v9;
  sub_1C251B5C0();

  return v10;
}

uint64_t method lookup function for OnboardingTileViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for OnboardingTileViewController);
}

uint64_t dispatch thunk of OnboardingTileViewController.__allocating_init(with:sourceIdentifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t PluginFeedItem.updateHideInDiscover(using:)(void *a1)
{
  uint64_t v1 = sub_1C239E38C(a1);
  return MEMORY[0x1F41200E0](v1);
}

uint64_t sub_1C239E38C(void *a1)
{
  sub_1C239E57C();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C254CF90();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C254CF70();
  sub_1C254CFB0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C239E5D4((uint64_t)v4);
    return 2;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    if (sub_1C254CF40())
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return 0;
    }
    else
    {
      uint64_t v9 = sub_1C254CF50();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  return v9;
}

void sub_1C239E57C()
{
  if (!qword_1EBB6F558)
  {
    sub_1C254CF90();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F558);
    }
  }
}

uint64_t sub_1C239E5D4(uint64_t a1)
{
  sub_1C239E57C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for SignedClinicalDataQRCodeView(id *a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

void *initializeWithCopy for SignedClinicalDataQRCodeView(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  id v7 = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SignedClinicalDataQRCodeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SignedClinicalDataQRCodeView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SignedClinicalDataQRCodeView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SignedClinicalDataQRCodeView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignedClinicalDataQRCodeView()
{
  return &type metadata for SignedClinicalDataQRCodeView;
}

uint64_t sub_1C239E8B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C239E8D0()
{
  return sub_1C254ED00();
}

uint64_t sub_1C239E984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v36 = a3;
  sub_1C23A13B8(0, &qword_1EA2E2338, MEMORY[0x1E4F3D748]);
  uint64_t v34 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v35 = (char *)&KeyPath - v5;
  sub_1C23A0EA8(0, &qword_1EA2E2268, (uint64_t (*)(uint64_t))sub_1C23A0ABC, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  objc_super v33 = (char *)&KeyPath - v7;
  uint64_t v8 = sub_1C254ED20();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  sub_1C23A0ADC();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v15 = (char *)&KeyPath - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39[0] = *(_OWORD *)(a1 + 8);
  sub_1C23A0EA8(0, &qword_1EA2E2260, (uint64_t (*)(uint64_t))sub_1C23A0088, MEMORY[0x1E4F3ECC8]);
  sub_1C254F0E0();
  if (*(void *)&v37[0])
  {
    *(void *)&v39[0] = *(void *)&v37[0];
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v32, v8);
    unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v17 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    sub_1C2253F68();
    uint64_t v18 = MEMORY[0x1E4FBB718];
    sub_1C23A0EA8(0, &qword_1EA2E2280, (uint64_t (*)(uint64_t))sub_1C23A0C10, MEMORY[0x1E4FBB718]);
    sub_1C23A0DCC(&qword_1EA2E22B8, (void (*)(uint64_t))sub_1C2253F68);
    sub_1C23A0DCC(&qword_1EA2E22C0, (void (*)(uint64_t))sub_1C23A00BC);
    sub_1C23A12AC();
    sub_1C254F140();
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v35, v15, v12);
    swift_storeEnumTagMultiPayload();
    sub_1C23A0E14();
    sub_1C23A123C();
    sub_1C23A0DCC(&qword_1EA2E2330, (void (*)(uint64_t))sub_1C23A0E14);
    uint64_t v19 = (uint64_t)v33;
    sub_1C254EED0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_1C23A0ABC(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
    return sub_1C23A00FC(v19, v36, (uint64_t)&qword_1EA2E2268, (uint64_t)sub_1C23A0ABC, v18, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C23A0EA8);
  }
  id v22 = v35;
  v39[0] = *(_OWORD *)(a1 + 24);
  *(void *)&v39[1] = *(void *)(a1 + 40);
  sub_1C23A0280(0, &qword_1EA2E2258, MEMORY[0x1E4F3ECC8]);
  sub_1C254F0E0();
  uint64_t v23 = v36;
  if (*((void *)&v37[0] + 1))
  {
    if (objc_msgSend(self, sel_isAppleInternalInstall))
    {
      uint64_t v24 = sub_1C254EE10();
      sub_1C239F3CC((uint64_t)v37);
      swift_bridgeObjectRelease();
      *(_OWORD *)((char *)&v39[4] + 7) = v37[4];
      *(_OWORD *)((char *)&v39[5] + 7) = v37[5];
      *(_OWORD *)((char *)&v39[6] + 7) = v38[0];
      v39[7] = *(_OWORD *)((char *)v38 + 9);
      *(_OWORD *)((char *)v39 + 7) = v37[0];
      *(_OWORD *)((char *)&v39[1] + 7) = v37[1];
      *(_OWORD *)((char *)&v39[2] + 7) = v37[2];
      *(_OWORD *)((char *)&v39[3] + 7) = v37[3];
      long long v25 = v39[6];
      *(_OWORD *)(v22 + 129) = *(_OWORD *)((char *)v38 + 9);
      long long v26 = v39[5];
      *(_OWORD *)(v22 + 81) = v39[4];
      *(_OWORD *)(v22 + 97) = v26;
      long long v27 = v39[2];
      *(_OWORD *)(v22 + 65) = v39[3];
      *(_OWORD *)(v22 + 49) = v27;
      long long v28 = v39[0];
      *(_OWORD *)(v22 + 33) = v39[1];
      *(_OWORD *)(v22 + 17) = v28;
      char v40 = 1;
      *(void *)id v22 = v24;
      *((void *)v22 + 1) = 0;
      unsigned char v22[16] = 1;
      *(_OWORD *)(v22 + 113) = v25;
      swift_storeEnumTagMultiPayload();
      sub_1C23A0E14();
      sub_1C23A123C();
      sub_1C23A0DCC(&qword_1EA2E2330, (void (*)(uint64_t))sub_1C23A0E14);
      sub_1C254EED0();
      sub_1C23A0ABC(0);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v23, 0, 1, v29);
    }
    swift_bridgeObjectRelease();
  }
  sub_1C23A0ABC(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v23, 1, 1, v30);
}

uint64_t sub_1C239F0A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C254F0B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C254ED10();
  CIImage.createUIImage(dimension:)(v6 + -60.0);
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = sub_1C254EE90();
    id v10 = v8;
    sub_1C254F0A0();
    (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F3EBF8], v2);
    uint64_t v11 = sub_1C254F0C0();
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    char v12 = sub_1C254EF20();
    sub_1C254ECE0();
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    char v21 = sub_1C254EF20();
    sub_1C254ECE0();
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    uint64_t v29 = v28;

    char v39 = 1;
    char v37 = 1;
    char v34 = 0;
    v31[8] = 0;
    long long v40 = (unint64_t)v9;
    char v41 = 1;
    *(_DWORD *)uint64_t v42 = *(_DWORD *)v38;
    *(_DWORD *)&v42[3] = *(_DWORD *)&v38[3];
    uint64_t v43 = v11;
    uint64_t v44 = 0;
    __int16 v45 = 257;
    __int16 v47 = v36;
    int v46 = *(_DWORD *)&v35[7];
    char v48 = v12;
    *(_DWORD *)&v49[3] = *(_DWORD *)&v35[3];
    *(_DWORD *)uint64_t v49 = *(_DWORD *)v35;
    uint64_t v50 = v14;
    uint64_t v51 = v16;
    uint64_t v52 = v18;
    uint64_t v53 = v20;
    char v54 = 0;
    *(_DWORD *)&v55[3] = *(_DWORD *)&v33[3];
    *(_DWORD *)uint64_t v55 = *(_DWORD *)v33;
    char v56 = v21;
    *(_DWORD *)uint64_t v57 = *(_DWORD *)v32;
    *(_DWORD *)&v57[3] = *(_DWORD *)&v32[3];
    uint64_t v58 = v23;
    uint64_t v59 = v25;
    uint64_t v60 = v27;
    uint64_t v61 = v29;
    char v62 = 0;
    nullsub_1(&v40);
  }
  else
  {
    sub_1C23A1538(&v40);
  }
  sub_1C23A00FC((uint64_t)&v40, (uint64_t)v63, (uint64_t)&qword_1EA2E2280, (uint64_t)sub_1C23A0C10, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C23A0EA8);
  return sub_1C23A00FC((uint64_t)v63, a1, (uint64_t)&qword_1EA2E2280, (uint64_t)sub_1C23A0C10, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C23A0EA8);
}

uint64_t sub_1C239F3CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C254EE60();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C254EE50();
  sub_1C254EE40();
  sub_1C254EE30();
  sub_1C254EE40();
  sub_1C254EE80();
  uint64_t v3 = sub_1C254F000();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  char v11 = sub_1C254EF20();
  sub_1C254ECE0();
  *(_DWORD *)(a1 + 9) = *(_DWORD *)v21;
  *(_DWORD *)(a1 + 12) = *(_DWORD *)&v21[3];
  *(_DWORD *)(a1 + 33) = *(_DWORD *)v20;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)&v20[3];
  *(_DWORD *)(a1 + 60) = *(_DWORD *)&v19[3];
  *(_DWORD *)(a1 + 57) = *(_DWORD *)v19;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)&v18[3];
  *(_DWORD *)(a1 + 65) = *(_DWORD *)v18;
  *(_DWORD *)(a1 + 108) = *(_DWORD *)&v17[3];
  *(_DWORD *)(a1 + 105) = *(_DWORD *)v17;
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = KeyPath;
  *(unsigned char *)(a1 + 56) = 1;
  *(unsigned char *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v15;
  *(unsigned char *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 120) = 1;
  sub_1C22C6CAC(v3, v5, v9);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C22C6C58(v3, v5, v9);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C239F5DC(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBB718];
  sub_1C23A0EA8(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v14 - v4;
  uint64_t v6 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_1C254F820();
  uint64_t v7 = *(void **)a1;
  long long v18 = *(_OWORD *)(a1 + 8);
  sub_1C23A01A4((uint64_t)&v18, (uint64_t)v20, (uint64_t (*)(void))sub_1C23A0088);
  sub_1C23A00FC((uint64_t)&v18 + 8, (uint64_t)v19, (uint64_t)&unk_1EA2E2220, (uint64_t)sub_1C23A0170, v2, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C23A0EA8);
  long long v14 = *(_OWORD *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 40);
  sub_1C23A00FC((uint64_t)&v14, (uint64_t)v17, (uint64_t)&qword_1EA2DE090, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C23A1020);
  sub_1C23A01A4((uint64_t)&v15, (uint64_t)v16, (uint64_t (*)(void))sub_1C23A020C);
  id v8 = v7;
  sub_1C23A0374((uint64_t)v20);
  sub_1C23A03A0((uint64_t)v19);
  sub_1C21F10AC((uint64_t)v17);
  sub_1C23A03A0((uint64_t)v16);
  uint64_t v9 = sub_1C254F810();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = MEMORY[0x1E4FBCFD8];
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = v11;
  long long v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v10 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v10 + 48) = v12;
  *(_OWORD *)(v10 + 64) = *(_OWORD *)(a1 + 32);
  sub_1C24D0A0C((uint64_t)v5, (uint64_t)&unk_1EA2E2248, v10);
  return swift_release();
}

uint64_t sub_1C239F840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  v4[19] = a4;
  uint64_t v6 = sub_1C254E560();
  v4[20] = v6;
  v4[21] = *(void *)(v6 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = sub_1C254F820();
  v4[24] = sub_1C254F810();
  uint64_t v8 = a4[1];
  uint64_t v7 = a4[2];
  uint64_t v9 = *a4;
  uint64_t v10 = (void *)swift_task_alloc();
  v4[25] = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_1C239F964;
  return sub_1C23A04E0(v9, v8, v7);
}

uint64_t sub_1C239F964()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_1C254F7D0();
  if (v0) {
    uint64_t v4 = sub_1C239FB28;
  }
  else {
    uint64_t v4 = sub_1C239FAC0;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_1C239FAC0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C239FB28()
{
  uint64_t v28 = v0;
  uint64_t v1 = *(void **)(v0 + 208);
  swift_release();
  sub_1C254E510();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C254E550();
  os_log_type_t v5 = sub_1C254FA20();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 208);
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v25 = *(void *)(v0 + 160);
    uint64_t v26 = *(void *)(v0 + 176);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v27 = v9;
    *(void *)(v0 + 136) = v6;
    id v10 = v6;
    sub_1C2206F9C();
    uint64_t v11 = sub_1C254F4F0();
    *(void *)(v0 + 144) = sub_1C21AD354(v11, v12, &v27);
    sub_1C2550120();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C21A1000, v4, v5, "Failed to generate QR code CIImages with error: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v9, -1, -1);
    MEMORY[0x1C875A0B0](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v26, v25);
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 208);
    uint64_t v15 = *(void *)(v0 + 168);
    uint64_t v14 = *(void *)(v0 + 176);
    uint64_t v16 = *(void *)(v0 + 160);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  uint64_t v17 = *(void **)(v0 + 208);
  uint64_t v18 = *(void *)(v0 + 152);
  swift_getErrorValue();
  uint64_t v19 = sub_1C2550940();
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v18 + 40);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v18 + 24);
  *(void *)(v0 + 80) = v22;
  sub_1C23A00FC(v0 + 64, v0 + 88, (uint64_t)&qword_1EA2DE090, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C23A1020);
  sub_1C23A01A4(v0 + 80, v0 + 128, (uint64_t (*)(void))sub_1C23A020C);
  *(_OWORD *)(v0 + 40) = *(_OWORD *)(v0 + 64);
  *(void *)(v0 + 56) = *(void *)(v0 + 80);
  *(void *)(v0 + 104) = v19;
  *(void *)(v0 + 112) = v21;
  sub_1C21F10AC(v0 + 88);
  sub_1C23A03A0(v0 + 128);
  sub_1C23A0280(0, &qword_1EA2E2258, MEMORY[0x1E4F3ECC8]);
  sub_1C254F0F0();

  sub_1C21F10D8(v0 + 88);
  sub_1C23A0A88(v0 + 128);
  swift_task_dealloc();
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_1C239FE80@<X0>(uint64_t (**a1)()@<X8>)
{
  id v3 = *(void **)v1;
  long long v9 = *(_OWORD *)(v1 + 8);
  sub_1C23A01A4((uint64_t)&v9, (uint64_t)v11, (uint64_t (*)(void))sub_1C23A0088);
  sub_1C23A00FC((uint64_t)&v9 + 8, (uint64_t)v10, (uint64_t)&unk_1EA2E2220, (uint64_t)sub_1C23A0170, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C23A0EA8);
  long long v12 = *(_OWORD *)(v1 + 24);
  uint64_t v13 = *(void *)(v1 + 40);
  sub_1C23A00FC((uint64_t)&v12, (uint64_t)v15, (uint64_t)&qword_1EA2DE090, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1C23A1020);
  sub_1C23A01A4((uint64_t)&v13, (uint64_t)v14, (uint64_t (*)(void))sub_1C23A020C);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(v4 + 40) = *(_OWORD *)(v1 + 24);
  *(void *)(v4 + 56) = *(void *)(v1 + 40);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(v1 + 24);
  *(void *)(v5 + 56) = *(void *)(v1 + 40);
  *a1 = sub_1C23A0308;
  a1[1] = (uint64_t (*)())v4;
  a1[2] = sub_1C23A036C;
  a1[3] = (uint64_t (*)())v5;
  a1[4] = 0;
  a1[5] = 0;
  id v6 = v3;
  sub_1C23A0374((uint64_t)v11);
  sub_1C23A03A0((uint64_t)v10);
  sub_1C21F10AC((uint64_t)v15);
  sub_1C23A03A0((uint64_t)v14);
  id v7 = v6;
  sub_1C23A0374((uint64_t)v11);
  sub_1C23A03A0((uint64_t)v10);
  sub_1C21F10AC((uint64_t)v15);
  return sub_1C23A03A0((uint64_t)v14);
}

void sub_1C23A0088(uint64_t a1)
{
}

unint64_t sub_1C23A00BC()
{
  unint64_t result = qword_1EA2DE530;
  if (!qword_1EA2DE530)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA2DE530);
  }
  return result;
}

uint64_t sub_1C23A00FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

void sub_1C23A0170(uint64_t a1)
{
}

uint64_t sub_1C23A01A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C23A020C()
{
  if (!qword_1EA2E2230)
  {
    sub_1C23A0280(255, &qword_1EA2E2238, MEMORY[0x1E4F3C5A0]);
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2230);
    }
  }
}

void sub_1C23A0280(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C23A1020(255, (unint64_t *)&qword_1EA2DE090, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C23A0308()
{
  return sub_1C239E8D0();
}

uint64_t objectdestroyTm_6()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C23A036C()
{
  return sub_1C239F5DC(v0 + 16);
}

uint64_t sub_1C23A0374(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C23A03A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C23A03CC()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1C23A042C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1C222399C;
  return sub_1C239F840(a1, v4, v5, v1 + 4);
}

uint64_t sub_1C23A04E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  sub_1C254F820();
  v3[12] = sub_1C254F810();
  uint64_t v5 = sub_1C254F7D0();
  v3[13] = v5;
  v3[14] = v4;
  return MEMORY[0x1F4188298](sub_1C23A057C, v5, v4);
}

uint64_t sub_1C23A057C()
{
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 80);
  sub_1C23A0EA8(0, &qword_1EA2E2260, (uint64_t (*)(uint64_t))sub_1C23A0088, MEMORY[0x1E4F3ECC8]);
  *(void *)(v0 + 120) = v1;
  sub_1C254F0E0();
  uint64_t v2 = *(void *)(v0 + 48);
  swift_bridgeObjectRelease();
  if (v2
    || (id v5 = objc_msgSend(*(id *)(v0 + 72), sel_QRRepresentation),
        (*(void *)(v0 + 128) = v5) == 0))
  {
    swift_release();
    id v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    *(void *)(v0 + 136) = type metadata accessor for SignedClinicalDataQRCodeGenerator();
    return MEMORY[0x1F4188298](sub_1C23A06A8, 0, 0);
  }
}

uint64_t sub_1C23A06A8()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[9].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[8], v0[8], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9].i64[1] = (uint64_t)v2;
  sub_1C2253F68();
  *uint64_t v2 = v0;
  v2[1] = sub_1C23A07AC;
  return MEMORY[0x1F4188160](&v0[3].u64[1], 0, 0, 0xD000000000000018, 0x80000001C2577C90, sub_1C2253F60, v1, v3);
}

uint64_t sub_1C23A07AC()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C23A09B4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C23A08C8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C23A08C8()
{
  v0[21] = v0[7];
  return MEMORY[0x1F4188298](sub_1C23A08E8, v0[13], v0[14]);
}

uint64_t sub_1C23A08E8()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = (void *)v0[16];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[10];
  swift_release();
  v0[4] = v4;
  v0[5] = v3;
  v0[8] = v1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C254F0F0();

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1C23A09B4()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return MEMORY[0x1F4188298](sub_1C23A0A18, v1, v2);
}

uint64_t sub_1C23A0A18()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C23A0A88(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C23A0AB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C239E984(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_1C23A0ABC(uint64_t a1)
{
}

void sub_1C23A0ADC()
{
  if (!qword_1EA2E2278)
  {
    sub_1C2253F68();
    sub_1C23A00BC();
    sub_1C23A0EA8(255, &qword_1EA2E2280, (uint64_t (*)(uint64_t))sub_1C23A0C10, MEMORY[0x1E4FBB718]);
    sub_1C23A0DCC(&qword_1EA2E22B8, (void (*)(uint64_t))sub_1C2253F68);
    sub_1C23A0DCC(&qword_1EA2E22C0, (void (*)(uint64_t))sub_1C23A00BC);
    unint64_t v0 = sub_1C254F160();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2278);
    }
  }
}

void sub_1C23A0C10(uint64_t a1)
{
}

void sub_1C23A0C38()
{
  if (!qword_1EA2E2290)
  {
    sub_1C23A0CD4(255);
    sub_1C23A15F8(&qword_1EA2E22A8, sub_1C23A0CD4, (void (*)(void))sub_1C23A0D5C);
    unint64_t v0 = sub_1C254F130();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2290);
    }
  }
}

void sub_1C23A0CD4(uint64_t a1)
{
}

void sub_1C23A0CFC()
{
  if (!qword_1EA2E22A0)
  {
    unint64_t v0 = sub_1C254ED80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E22A0);
    }
  }
}

unint64_t sub_1C23A0D5C()
{
  unint64_t result = qword_1EA2E22B0;
  if (!qword_1EA2E22B0)
  {
    sub_1C23A0CFC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E22B0);
  }
  return result;
}

uint64_t sub_1C23A0DCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C23A0E14()
{
  if (!qword_1EA2E22C8)
  {
    sub_1C23A0EA8(255, &qword_1EA2E22D0, (uint64_t (*)(uint64_t))sub_1C23A0F0C, MEMORY[0x1E4F3F108]);
    sub_1C23A106C();
    unint64_t v0 = sub_1C254F120();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E22C8);
    }
  }
}

void sub_1C23A0EA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C23A0F0C()
{
  if (!qword_1EA2E22D8)
  {
    sub_1C23A16A0(255, &qword_1EA2E22E0, (void (*)(uint64_t))sub_1C23A0F9C);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA2E22D8);
    }
  }
}

void sub_1C23A0F9C()
{
  if (!qword_1EA2E22E8)
  {
    sub_1C23A1020(255, &qword_1EA2E22F0, MEMORY[0x1E4F3C870], MEMORY[0x1E4F3DF18]);
    unint64_t v0 = sub_1C254ED80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E22E8);
    }
  }
}

void sub_1C23A1020(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C23A106C()
{
  unint64_t result = qword_1EA2E22F8;
  if (!qword_1EA2E22F8)
  {
    sub_1C23A0EA8(255, &qword_1EA2E22D0, (uint64_t (*)(uint64_t))sub_1C23A0F0C, MEMORY[0x1E4F3F108]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E22F8);
  }
  return result;
}

unint64_t sub_1C23A10F4()
{
  unint64_t result = qword_1EA2E2300;
  if (!qword_1EA2E2300)
  {
    sub_1C23A0EA8(255, &qword_1EA2E2268, (uint64_t (*)(uint64_t))sub_1C23A0ABC, MEMORY[0x1E4FBB718]);
    sub_1C23A1194();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2300);
  }
  return result;
}

unint64_t sub_1C23A1194()
{
  unint64_t result = qword_1EA2E2308;
  if (!qword_1EA2E2308)
  {
    sub_1C23A0ABC(255);
    sub_1C23A123C();
    sub_1C23A0DCC(&qword_1EA2E2330, (void (*)(uint64_t))sub_1C23A0E14);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2308);
  }
  return result;
}

unint64_t sub_1C23A123C()
{
  unint64_t result = qword_1EA2E2310;
  if (!qword_1EA2E2310)
  {
    sub_1C23A0ADC();
    sub_1C23A12AC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2310);
  }
  return result;
}

unint64_t sub_1C23A12AC()
{
  unint64_t result = qword_1EA2E2318;
  if (!qword_1EA2E2318)
  {
    sub_1C23A0EA8(255, &qword_1EA2E2280, (uint64_t (*)(uint64_t))sub_1C23A0C10, MEMORY[0x1E4FBB718]);
    sub_1C23A15F8(&qword_1EA2E2320, sub_1C23A0C10, (void (*)(void))sub_1C23A1384);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2318);
  }
  return result;
}

uint64_t sub_1C23A1384()
{
  return sub_1C23A0DCC(&qword_1EA2E2328, (void (*)(uint64_t))sub_1C23A0C38);
}

void sub_1C23A13B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C23A0ADC();
    uint64_t v7 = v6;
    sub_1C23A0E14();
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C23A1428()
{
  uint64_t v1 = sub_1C254ED20();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C23A14B8@<X0>(uint64_t a1@<X8>)
{
  sub_1C254ED20();
  return sub_1C239F0A4(a1);
}

double sub_1C23A1538(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 121) = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1C23A1554@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C254EDD0();
  *a1 = result;
  return result;
}

uint64_t sub_1C23A1580()
{
  return sub_1C254EDE0();
}

uint64_t sub_1C23A15A8()
{
  return sub_1C23A15F8(&qword_1EA2E2340, sub_1C23A1678, (void (*)(void))sub_1C23A182C);
}

uint64_t sub_1C23A15F8(unint64_t *a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C23A1678(uint64_t a1)
{
}

void sub_1C23A16A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C254ED80();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C23A1704()
{
  if (!qword_1EA2E2350)
  {
    sub_1C23A1798();
    sub_1C23A0DCC(&qword_1EA2E2360, (void (*)(uint64_t))sub_1C23A1798);
    unint64_t v0 = sub_1C254ED40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2350);
    }
  }
}

void sub_1C23A1798()
{
  if (!qword_1EA2E2358)
  {
    sub_1C23A0EA8(255, &qword_1EA2E2268, (uint64_t (*)(uint64_t))sub_1C23A0ABC, MEMORY[0x1E4FBB718]);
    sub_1C23A10F4();
    unint64_t v0 = sub_1C254ECF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2358);
    }
  }
}

uint64_t sub_1C23A182C()
{
  return sub_1C23A0DCC(&qword_1EA2E2368, (void (*)(uint64_t))sub_1C23A1704);
}

id sub_1C23A1860(void *a1)
{
  return sub_1C23A1880(a1, &OBJC_IVAR____TtC15HealthRecordsUI29DiagnosticTestResultFormatter_store, sub_1C23F638C);
}

id sub_1C23A1880(void *a1, void *a2, uint64_t (*a3)(id))
{
  uint64_t v5 = *(void **)(v3 + *a2);
  id v6 = a1;
  id v7 = v5;
  uint64_t v8 = a3(v6);
  unint64_t v10 = v9;

  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    id v12 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v12, sel_setDisplayItemType_, 15);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v13 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v14 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setTitle_, v14, 0xE000000000000000);

    uint64_t v15 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setSubtitle_, v15);

    objc_msgSend(v12, sel_setSeparatorStyle_, 0);
    objc_msgSend(v12, sel_setSeparatorHidden_, 0);
    objc_msgSend(v12, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

id VaccinationRecordFormatter.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store);
}

uint64_t VaccinationRecordFormatter.context.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context);
}

id VaccinationRecordFormatter.__allocating_init(store:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store] = a1;
  *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id VaccinationRecordFormatter.init(store:context:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store] = a1;
  *(void *)&v2[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for VaccinationRecordFormatter();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for VaccinationRecordFormatter()
{
  return self;
}

unint64_t sub_1C23A1B84(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context);
  if (v2 == 1)
  {
    return sub_1C23A1E78(a1);
  }
  else if (v2)
  {
    unint64_t result = sub_1C25508E0();
    __break(1u);
  }
  else
  {
    return sub_1C23A1C08(a1);
  }
  return result;
}

uint64_t sub_1C23A1C08(void *a1)
{
  sub_1C23A28FC(0, (unint64_t *)&qword_1EA2DF0E8, (uint64_t (*)(uint64_t))sub_1C224F494, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2566F60;
  *(void *)(inited + 32) = sub_1C23A2960(a1);
  *(void *)(inited + 40) = sub_1C23A2BB8(a1);
  *(void *)(inited + 48) = sub_1C23A2E04(a1);
  unsigned int v3 = objc_msgSend(a1, sel_notGiven);
  id v4 = 0;
  if (v3) {
    id v4 = sub_1C253F7A8(a1);
  }
  *(void *)(inited + 56) = v4;
  *(void *)(inited + 64) = sub_1C23A1880(a1, &OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store, sub_1C23F638C);
  *(void *)(inited + 72) = sub_1C23A3050(a1);
  unint64_t v5 = sub_1C224F52C();
  id v6 = a1;
  uint64_t v7 = sub_1C23F65DC(v6);

  uint64_t v8 = Array<A>.newlineJoined.getter(v7);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  *(void *)(inited + 80) = sub_1C2387944(v8, v10, v5);
  id v11 = v6;
  uint64_t v12 = sub_1C23F65E8(v11);

  uint64_t v13 = Array<A>.newlineJoined.getter(v12);
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  *(void *)(inited + 88) = sub_1C23882A8(v13, v15);
  *(void *)(inited + 96) = sub_1C23A323C(v11);
  *(void *)(inited + 104) = sub_1C23A3440(v11);
  *(void *)(inited + 112) = sub_1C243F974(v11);
  *(void *)(inited + 120) = sub_1C23A3644(v11);
  *(void *)(inited + 128) = sub_1C23A3A6C(v11);
  sub_1C254F730();
  uint64_t v20 = MEMORY[0x1E4FBC860];
  for (uint64_t i = 32; i != 136; i += 8)
  {
    uint64_t v17 = *(void **)(inited + i);
    if (v17)
    {
      id v18 = v17;
      MEMORY[0x1C8757C00]();
      if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }
  }
  swift_bridgeObjectRelease();
  return v20;
}

unint64_t sub_1C23A1E78(void *a1)
{
  unint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t v46 = MEMORY[0x1E4FBC860];
  id v3 = sub_1C23A2BB8(a1);
  if (v3)
  {
    id v4 = v3;
    sub_1C224F52C();
    id v5 = v4;
    id v6 = a1;
    uint64_t v7 = sub_1C23F65E8(v6);

    uint64_t v8 = Array<A>.newlineJoined.getter(v7);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    id v11 = sub_1C23882A8(v8, v10);
    unint64_t v45 = v2;
    id v12 = v5;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();
    if (v11)
    {
      id v13 = v11;
      MEMORY[0x1C8757C00]();
      if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();
    }

    sub_1C22723E8(v45);
    unint64_t v2 = v46;
  }
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v37 > 1) {
      goto LABEL_15;
    }
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_15;
  }
  id v14 = sub_1C23A2E04(a1);
  if (v14)
  {
    id v15 = v14;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    unint64_t v2 = v46;
  }
LABEL_15:
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v38 > 1) {
      goto LABEL_22;
    }
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_22;
  }
  if (objc_msgSend(a1, sel_notGiven, v45))
  {
    id v16 = sub_1C253F7A8(a1);
    if (v16)
    {
      id v17 = v16;
      MEMORY[0x1C8757C00]();
      if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C254F760();
      }
      sub_1C254F790();
      sub_1C254F730();

      unint64_t v2 = v46;
    }
  }
LABEL_22:
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v39 > 1) {
      goto LABEL_28;
    }
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_28;
  }
  id v18 = sub_1C23A1880(a1, &OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store, sub_1C23F638C);
  if (v18)
  {
    id v19 = v18;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    unint64_t v2 = v46;
  }
LABEL_28:
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v40 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v40 > 1) {
      goto LABEL_34;
    }
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_34;
  }
  id v20 = sub_1C23A3050(a1);
  if (v20)
  {
    id v21 = v20;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    unint64_t v2 = v46;
  }
LABEL_34:
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v41 > 1) {
      goto LABEL_40;
    }
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_40;
  }
  unint64_t v22 = sub_1C224F52C();
  id v23 = a1;
  uint64_t v24 = sub_1C23F65DC(v23);

  uint64_t v25 = Array<A>.newlineJoined.getter(v24);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = (void *)sub_1C2387944(v25, v27, v22);
  if (v28)
  {
    id v29 = v28;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    unint64_t v2 = v46;
  }
LABEL_40:
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v42 > 1) {
      goto LABEL_46;
    }
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_46;
  }
  id v30 = sub_1C23A323C(a1);
  if (v30)
  {
    id v31 = v30;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    unint64_t v2 = v46;
  }
LABEL_46:
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v43 > 1) {
      goto LABEL_52;
    }
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    goto LABEL_52;
  }
  id v32 = sub_1C23A3440(a1);
  if (v32)
  {
    id v33 = v32;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    unint64_t v2 = v46;
  }
LABEL_52:
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1C2550620();
    swift_bridgeObjectRelease();
    if (v44 > 1) {
      return v2;
    }
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
  {
    return v2;
  }
  char v34 = (void *)sub_1C243F974(a1);
  if (v34)
  {
    id v35 = v34;
    MEMORY[0x1C8757C00]();
    if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C254F760();
    }
    sub_1C254F790();
    sub_1C254F730();

    return v46;
  }
  return v2;
}

id VaccinationRecordFormatter.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void VaccinationRecordFormatter.init()()
{
}

id VaccinationRecordFormatter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VaccinationRecordFormatter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1C23A2714()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store);
}

uint64_t sub_1C23A2728()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context);
}

id sub_1C23A273C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = (objc_class *)type metadata accessor for VaccinationRecordFormatter();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_store] = a1;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context] = a2;
  v9.receiver = v7;
  v9.super_class = v6;
  id result = objc_msgSendSuper2(&v9, sel_init);
  *a3 = result;
  return result;
}

unint64_t sub_1C23A27B0(void *a1)
{
  uint64_t v2 = *(void *)(*v1 + OBJC_IVAR____TtC15HealthRecordsUI26VaccinationRecordFormatter_context);
  if (v2 == 1) {
    return sub_1C23A1E78(a1);
  }
  if (!v2) {
    return sub_1C23A1C08(a1);
  }
  unint64_t result = sub_1C25508E0();
  __break(1u);
  return result;
}

unint64_t sub_1C23A2820(uint64_t a1)
{
  unint64_t result = sub_1C23A2848();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C23A2848()
{
  unint64_t result = qword_1EA2E2380;
  if (!qword_1EA2E2380)
  {
    type metadata accessor for VaccinationRecordFormatter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2380);
  }
  return result;
}

uint64_t method lookup function for VaccinationRecordFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for VaccinationRecordFormatter);
}

uint64_t dispatch thunk of VaccinationRecordFormatter.__allocating_init(store:context:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of VaccinationRecordFormatter.displayItems(from:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

void sub_1C23A28FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_1C23A2960(void *a1)
{
  if (objc_msgSend(a1, sel_notGiven))
  {
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
  }
  else if (qword_1EBB6EF40 != -1)
  {
    swift_once();
  }
  id v2 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C254C730();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();

  sub_1C224F52C();
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(a1, sel_administrationDate, 0xE000000000000000);
  id v7 = objc_msgSend(a1, sel_meaningfulDateTitle);
  uint64_t v8 = sub_1C254F470();
  uint64_t v10 = v9;

  id v11 = sub_1C23898E0(v3, v5, v6, v8, v10);
  swift_bridgeObjectRelease();
  return v11;
}

id sub_1C23A2BB8(void *a1)
{
  if (!objc_msgSend(a1, sel_notGiven)) {
    return 0;
  }
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init, 0xE000000000000000);
  objc_msgSend(v6, sel_setDisplayItemType_, 15);
  id v7 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v8 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

  uint64_t v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSubtitle_, v9);

  objc_msgSend(v6, sel_setSeparatorStyle_, 0);
  objc_msgSend(v6, sel_setSeparatorHidden_, 0);
  objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  return v6;
}

id sub_1C23A2E04(void *a1)
{
  if (!objc_msgSend(a1, sel_patientReported)) {
    return 0;
  }
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v1 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C254C730();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init, 0xE000000000000000);
  objc_msgSend(v6, sel_setDisplayItemType_, 15);
  id v7 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v8 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

  uint64_t v9 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setSubtitle_, v9);

  objc_msgSend(v6, sel_setSeparatorStyle_, 0);
  objc_msgSend(v6, sel_setSeparatorHidden_, 0);
  objc_msgSend(v6, sel_setExtraTopPadding_, 0);

  return v6;
}

id sub_1C23A3050(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1C23F65D0(v1);
  unint64_t v4 = v3;

  uint64_t v5 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    id v6 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
    objc_msgSend(v6, sel_setDisplayItemType_, 15);
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v7 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    swift_bridgeObjectRelease();

    uint64_t v8 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setTitle_, v8, 0xE000000000000000);

    uint64_t v9 = (void *)sub_1C254F430();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setSubtitle_, v9);

    objc_msgSend(v6, sel_setSeparatorStyle_, 0);
    objc_msgSend(v6, sel_setSeparatorHidden_, 0);
    objc_msgSend(v6, sel_setExtraTopPadding_, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

id sub_1C23A323C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_reaction);
  if (v1)
  {
    uint64_t v2 = sub_1C254F470();
    unint64_t v4 = v3;

    uint64_t v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5)
    {
      id v1 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v1, sel_setDisplayItemType_, 15);
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v6 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      id v7 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v7, 0xE000000000000000);

      uint64_t v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setSubtitle_, v8);

      objc_msgSend(v1, sel_setSeparatorStyle_, 0);
      objc_msgSend(v1, sel_setSeparatorHidden_, 0);
      objc_msgSend(v1, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v1;
}

id sub_1C23A3440(void *a1)
{
  id v1 = objc_msgSend(a1, sel_performer);
  if (v1)
  {
    uint64_t v2 = sub_1C254F470();
    unint64_t v4 = v3;

    uint64_t v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5)
    {
      id v1 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v1, sel_setDisplayItemType_, 15);
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v6 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      id v7 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v7, 0xE000000000000000);

      uint64_t v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setSubtitle_, v8);

      objc_msgSend(v1, sel_setSeparatorStyle_, 0);
      objc_msgSend(v1, sel_setSeparatorHidden_, 0);
      objc_msgSend(v1, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v1;
}

id sub_1C23A3644(void *a1)
{
  sub_1C23A28FC(0, (unint64_t *)&qword_1EA2E2D90, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v27 - v3;
  id v5 = objc_msgSend(a1, sel_doseNumber);
  if (!v5) {
    return 0;
  }
  id v6 = v5;
  uint64_t v7 = sub_1C254F470();
  unint64_t v9 = v8;

  id v10 = objc_msgSend(a1, sel_doseQuantity);
  if (v10)
  {
    id v11 = v10;
    uint64_t v12 = sub_1C254F470();
    uint64_t v14 = v13;

    uint64_t v15 = sub_1C254CBD0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
    sub_1C23A28FC(0, (unint64_t *)&qword_1EBB6F520, (uint64_t (*)(uint64_t))sub_1C220D8F8, MEMORY[0x1E4FBBE00]);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C255CDA0;
    uint64_t v17 = MEMORY[0x1E4FBB1A0];
    *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v18 = sub_1C220D950();
    *(void *)(v16 + 32) = v7;
    *(void *)(v16 + 40) = v9;
    *(void *)(v16 + 96) = v17;
    *(void *)(v16 + 104) = v18;
    *(void *)(v16 + 64) = v18;
    *(void *)(v16 + 72) = v12;
    *(void *)(v16 + 80) = v14;
    if (qword_1EBB6EF40 != -1) {
      swift_once();
    }
    id v19 = (id)qword_1EBB6FBC8;
    swift_bridgeObjectRetain();
    sub_1C254C730();
    uint64_t v7 = sub_1C254F4A0();
    unint64_t v9 = v20;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C2269E88((uint64_t)v4);
  }
  uint64_t v21 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v21 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (!v21)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v22 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
  objc_msgSend(v22, sel_setDisplayItemType_, 15);
  if (qword_1EBB6EF40 != -1) {
    swift_once();
  }
  id v23 = (id)qword_1EBB6FBC8;
  swift_bridgeObjectRetain();
  sub_1C254C730();
  swift_bridgeObjectRelease();

  uint64_t v24 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setTitle_, v24);

  uint64_t v25 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setSubtitle_, v25);

  objc_msgSend(v22, sel_setSeparatorStyle_, 0);
  objc_msgSend(v22, sel_setSeparatorHidden_, 0);
  objc_msgSend(v22, sel_setExtraTopPadding_, 0);

  return v22;
}

id sub_1C23A3A6C(void *a1)
{
  id v1 = objc_msgSend(a1, sel_lotNumber);
  if (v1)
  {
    uint64_t v2 = sub_1C254F470();
    unint64_t v4 = v3;

    uint64_t v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v5 = v2 & 0xFFFFFFFFFFFFLL;
    }
    if (v5)
    {
      id v1 = objc_msgSend(objc_allocWithZone((Class)WDMedicalRecordDisplayItem), sel_init);
      objc_msgSend(v1, sel_setDisplayItemType_, 15);
      if (qword_1EBB6EF40 != -1) {
        swift_once();
      }
      id v6 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      uint64_t v7 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setTitle_, v7, 0xE000000000000000);

      unint64_t v8 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setSubtitle_, v8);

      objc_msgSend(v1, sel_setSeparatorStyle_, 0);
      objc_msgSend(v1, sel_setSeparatorHidden_, 0);
      objc_msgSend(v1, sel_setExtraTopPadding_, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v1;
}

uint64_t sub_1C23A3C70(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C2550250();
    sub_1C254EA10();
    sub_1C23A5C14(&qword_1EA2E2388, MEMORY[0x1E4F1AB18]);
    uint64_t result = sub_1C254F940();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v9) {
      return sub_1C21ABD08();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_1C21ABD08();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_1C21ABD08();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_1C21ABD08();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_1C21ABD08();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_1C21ABD08();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_1C21ABD08();
    }
    while (1)
    {
      sub_1C254EA00();
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_1C25502D0())
      {
        sub_1C254EA10();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      return sub_1C21ABD08();
    }
  }
  __break(1u);
  return result;
}

uint64_t UDCListDataSource.init(listManager:healthStore:collectionView:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C254CB40();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + qword_1EBB6E7C0) = MEMORY[0x1E4FBC870];
  swift_unknownObjectWeakInit();
  *(void *)(v4 + qword_1EBB6E7D0) = 0;
  *(void *)(v4 + qword_1EBB6E7B8) = a1;
  *(void *)(v4 + qword_1EBB6E7B0) = a2;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  swift_retain();
  id v12 = a2;
  sub_1C25503A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v16, "MutableArray<");
  HIWORD(v16[1]) = -4864;
  sub_1C254CB30();
  sub_1C254CAF0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  uint64_t v13 = sub_1C254D9F0();
  swift_retain();
  sub_1C23A4634();
  swift_release();
  swift_release();

  return v13;
}

uint64_t sub_1C23A4144()
{
  return sub_1C254FAE0();
}

uint64_t UDCListDataSource.deinit()
{
  swift_beginAccess();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1C23A3C70(v0);
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1C254DA50();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();

  return v1;
}

void UDCListDataSource.__allocating_init(arrangedSections:identifier:)()
{
}

uint64_t sub_1C23A4284()
{
  sub_1C23A5428();
  return swift_retain();
}

uint64_t sub_1C23A42AC(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + qword_1EBB6E7B8);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_release();
}

uint64_t sub_1C23A4300()
{
  uint64_t v1 = v0 + qword_1EBB6E7C8;
  swift_beginAccess();
  return MEMORY[0x1C875A200](v1);
}

void sub_1C23A434C(void *a1)
{
  sub_1C23A5470();
}

void (*sub_1C23A4384(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = qword_1EBB6E7C8;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  v3[3] = MEMORY[0x1C875A200](v5);
  return sub_1C23A4408;
}

void sub_1C23A4408(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }
  free(v3);
}

id sub_1C23A4484()
{
  uint64_t v0 = (void *)sub_1C23A54C4();
  return v0;
}

void sub_1C23A44AC(void *a1)
{
  uint64_t v3 = (void **)(v1 + qword_1EBB6E7B0);
  swift_beginAccess();
  id v4 = *v3;
  *uint64_t v3 = a1;
}

uint64_t (*sub_1C23A4500())()
{
  return j__swift_endAccess;
}

id sub_1C23A455C()
{
  uint64_t v1 = qword_1EBB6E7D0;
  uint64_t v2 = *(void **)(v0 + qword_1EBB6E7D0);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1EBB6E7D0);
  }
  else
  {
    id v4 = sub_1C23A4F30(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C23A45C0(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + qword_1EBB6E7D0);
  *(void *)(v1 + qword_1EBB6E7D0) = a1;
}

void (*sub_1C23A45D4(id *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = sub_1C23A455C();
  return sub_1C23A461C;
}

void sub_1C23A461C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  id v3 = *(void **)(v1 + qword_1EBB6E7D0);
  *(void *)(v1 + qword_1EBB6E7D0) = v2;
}

uint64_t sub_1C23A4634()
{
  uint64_t v23 = *v0;
  sub_1C23A5C5C();
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v23 + class metadata base offset for UDCListDataSource;
  uint64_t v22 = *(void *)(v23 + class metadata base offset for UDCListDataSource);
  sub_1C254F7A0();
  swift_getTupleTypeMetadata2();
  uint64_t v5 = sub_1C254E9E0();
  uint64_t v6 = sub_1C21AB51C(255, (unint64_t *)&qword_1EBB6FF90);
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v8 = sub_1C22611AC();
  uint64_t v25 = v5;
  uint64_t v26 = v6;
  uint64_t v27 = WitnessTable;
  unint64_t v28 = v8;
  uint64_t v9 = sub_1C254E9B0();
  uint64_t v21 = *(void *)(v9 - 8);
  __n128 v10 = MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v21 - v11;
  uint64_t v25 = (*(uint64_t (**)(__n128))(v4 + 192))(v10);
  id v24 = (id)sub_1C254FC70();
  uint64_t v13 = sub_1C254FC20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v3, 1, 1, v13);
  sub_1C254EC70();
  sub_1C2258214((uint64_t)v3);

  swift_release();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v17 = v22;
  uint64_t v16 = v23;
  id v15[2] = v22;
  uint64_t v18 = *(void *)(class metadata base offset for UDCListDataSource + v16 + 8);
  v15[3] = v18;
  void v15[4] = v14;
  uint64_t v19 = (void *)swift_allocObject();
  long long v19[2] = v17;
  v19[3] = v18;
  void v19[4] = sub_1C23A5D24;
  v19[5] = v15;
  swift_getWitnessTable();
  sub_1C254ECC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v9);
  swift_beginAccess();
  sub_1C254E9F0();
  swift_endAccess();
  return swift_release();
}

uint64_t (*sub_1C23A49CC())()
{
  return nullsub_1;
}

uint64_t sub_1C23A49E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1C254E890();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = sub_1C254D9B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C254DA00();
  unint64_t v9 = sub_1C254CD80();
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v9 >= *(void *)(v8 + 16))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v9, v4);
  swift_bridgeObjectRelease();
  sub_1C254D9A0();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v11)
  {
    if (qword_1EBB6EF40 == -1)
    {
LABEL_5:
      id v12 = (id)qword_1EBB6FBC8;
      swift_bridgeObjectRetain();
      sub_1C254C730();
      swift_bridgeObjectRelease();

      goto LABEL_6;
    }
LABEL_9:
    swift_once();
    goto LABEL_5;
  }
LABEL_6:
  uint64_t v13 = sub_1C254CD80();
  (*(void (**)(uint64_t))(class metadata base offset for UDCListDataSource + *v1 + 208))(v13);
  uint64_t v14 = sub_1C254CD80();
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(class metadata base offset for UDCListDataSource + *v1 + 216))(v14);
  sub_1C223E0BC(v15);
  sub_1C254E820();
  uint64_t v16 = sub_1C254D2A0();
  swift_allocObject();
  uint64_t v17 = sub_1C254D280();
  a1[3] = v16;
  a1[4] = sub_1C23A5C14((unint64_t *)&qword_1EBB6E7D8, MEMORY[0x1E4F66208]);
  uint64_t result = sub_1C221794C(v15);
  *a1 = v17;
  return result;
}

uint64_t sub_1C23A4D74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254DB50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254DA90();
  sub_1C254DAF0();
  sub_1C22DD8FC();
  uint64_t v9 = *(int *)(v8 + 48);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(a1, v7, v4);
  uint64_t v10 = v2 + qword_1EBB6E7C8;
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1C875A200](v10);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(void *)(a1 + v9) = v11;
  uint64_t v12 = *MEMORY[0x1E4F66498];
  uint64_t v13 = sub_1C254DA70();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 104))(a1, v12, v13);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
}

id sub_1C23A4F30(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + qword_1EBB6E7B0);
  swift_beginAccess();
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B688]), sel_initWithHealthStore_, *v1);
}

uint64_t UDCListDataSource.__allocating_init(listManager:healthStore:collectionView:)(uint64_t a1, void *a2, void *a3)
{
  return UDCListDataSource.init(listManager:healthStore:collectionView:)(a1, a2, a3);
}

void *sub_1C23A4FE8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t))(class metadata base offset for UDCListDataSource + *result + 200))(a1, a2);
    sub_1C254DA10();
    swift_bridgeObjectRelease();
    sub_1C254DA20();
    return (void *)swift_release();
  }
  return result;
}

void sub_1C23A50AC()
{
}

void sub_1C23A5128()
{
}

void sub_1C23A51A4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectWeakDestroy();

  uint64_t v1 = *(void **)(v0 + qword_1EBB6E7D0);
}

uint64_t UDCListDataSource.__deallocating_deinit()
{
  UDCListDataSource.deinit();
  return swift_deallocClassInstance();
}

void UDCListDataSource.init(arrangedSections:identifier:)()
{
}

uint64_t sub_1C23A527C()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + **v0 + 224))();
}

uint64_t sub_1C23A52DC()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + **v0 + 232))();
}

uint64_t sub_1C23A533C()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + **v0 + 240))();
}

uint64_t sub_1C23A539C()
{
  return sub_1C254DEF0();
}

void sub_1C23A53F8()
{
}

uint64_t sub_1C23A5428()
{
  uint64_t v1 = v0 + qword_1EBB6E7B8;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1C23A5470()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1C23A54C4()
{
  uint64_t v1 = v0 + qword_1EBB6E7B0;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1C23A550C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C23A5528@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_1C23A5428();
  return swift_retain();
}

uint64_t sub_1C23A5564()
{
  uint64_t v0 = swift_retain();
  return sub_1C23A42AC(v0);
}

uint64_t sub_1C23A5590()
{
  return 16;
}

__n128 sub_1C23A559C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C23A55A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C23A4300();
  *a1 = result;
  return result;
}

uint64_t sub_1C23A55D4()
{
  return sub_1C23A5470();
}

uint64_t sub_1C23A55FC()
{
  return 16;
}

__n128 sub_1C23A5608(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

id sub_1C23A5614@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1C23A54C4();
  *a1 = v2;
  return v2;
}

void sub_1C23A5650(id *a1)
{
}

uint64_t sub_1C23A567C()
{
  return 16;
}

__n128 sub_1C23A5688(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

id sub_1C23A5694@<X0>(void *a1@<X8>)
{
  id result = sub_1C23A455C();
  *a1 = result;
  return result;
}

void sub_1C23A56C0(id *a1)
{
}

uint64_t sub_1C23A56EC()
{
  return 16;
}

__n128 sub_1C23A56F8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C23A5704()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for UDCListDataSource()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for UDCListDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for UDCListDataSource);
}

uint64_t dispatch thunk of UDCListDataSource.listManager.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 80))();
}

uint64_t dispatch thunk of UDCListDataSource.collectionView.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 104))();
}

uint64_t dispatch thunk of UDCListDataSource.collectionView.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 112))();
}

uint64_t dispatch thunk of UDCListDataSource.collectionView.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 120))();
}

uint64_t dispatch thunk of UDCListDataSource.healthStore.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 128))();
}

uint64_t dispatch thunk of UDCListDataSource.healthStore.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 136))();
}

uint64_t dispatch thunk of UDCListDataSource.healthStore.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 144))();
}

uint64_t dispatch thunk of UDCListDataSource.conceptStore.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 152))();
}

uint64_t dispatch thunk of UDCListDataSource.conceptStore.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 160))();
}

uint64_t dispatch thunk of UDCListDataSource.conceptStore.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 168))();
}

uint64_t dispatch thunk of UDCListDataSource.__allocating_init(listManager:healthStore:collectionView:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + v0 + 176))();
}

uint64_t dispatch thunk of UDCListDataSource.makePublisher()()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 192))();
}

uint64_t dispatch thunk of UDCListDataSource.sectionsForItems(listItems:nonListItems:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 200))();
}

uint64_t dispatch thunk of UDCListDataSource.buttonText(for:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 208))();
}

uint64_t dispatch thunk of UDCListDataSource.buttonTappedCallback(for:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 216))();
}

uint64_t dispatch thunk of UDCListDataSource.layoutType(for:with:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 224))();
}

uint64_t dispatch thunk of UDCListDataSource.registerCells(for:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 232))();
}

uint64_t dispatch thunk of UDCListDataSource.supplementaryItem(ofKind:at:)()
{
  return (*(uint64_t (**)(void))(class metadata base offset for UDCListDataSource + *v0 + 240))();
}

uint64_t sub_1C23A5C14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C23A5C5C()
{
  if (!qword_1EBB6F4A0)
  {
    sub_1C254FC20();
    unint64_t v0 = sub_1C2550100();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB6F4A0);
    }
  }
}

uint64_t sub_1C23A5CB4()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C23A5CEC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void *sub_1C23A5D24(uint64_t a1, uint64_t a2)
{
  return sub_1C23A4FE8(a1, a2);
}

uint64_t sub_1C23A5D30()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C23A5D68(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 32))(*a1, a1[1]);
}

void sub_1C23A5D98(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_notificationSyncStore);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = v2;
  id v5 = v2;
}

id sub_1C23A5DFC()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_notificationSyncStore);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void sub_1C23A5E54(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_notificationSyncStore);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
}

uint64_t (*sub_1C23A5EA8())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C23A5F04()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_shouldDismissNotificationsUrgently);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1C23A5F4C(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_shouldDismissNotificationsUrgently);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1C23A5F98())()
{
  return j_j__swift_endAccess;
}

void NotificationPolicy.__allocating_init(healthStore:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  uint64_t v4 = self;
  id v5 = v3;
  id v6 = objc_msgSend(v4, sel_sharedBehavior);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_features);

    if (v8)
    {
      uint64_t v9 = OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_shouldDismissNotificationsUrgently;
      unsigned __int8 v10 = objc_msgSend(v8, sel_urgentNotificationDismiss);

      v5[v9] = v10;
      *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_cancellables] = MEMORY[0x1E4FBC870];
      *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_healthStore] = a1;
      sub_1C254F470();
      id v11 = objc_allocWithZone(MEMORY[0x1E4F2B288]);
      id v12 = a1;
      uint64_t v13 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(v11, sel_initWithClientIdentifier_healthStore_, v13, v12);

      *(void *)&v5[OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_notificationSyncStore] = v14;
      v15.receiver = v5;
      v15.super_class = v1;
      objc_msgSendSuper2(&v15, sel_init);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t NotificationPolicy.init(healthStore:)(void *a1)
{
  sub_1C23A8FD8(a1);
  uint64_t v3 = v2;

  return v3;
}

uint64_t sub_1C23A61AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (qword_1EA2DD968 != -1) {
    swift_once();
  }
  if (sub_1C252E624()) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = 27;
  }
  return a3(v4);
}

uint64_t sub_1C23A630C(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t a4)
{
  return sub_1C23A948C(a2, a3, a4);
}

uint64_t sub_1C23A63D4(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  swift_getObjectType();
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E540();
  unsigned __int8 v10 = sub_1C254E550();
  os_log_type_t v11 = sub_1C254FA40();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = a1;
    uint64_t v13 = v12;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v24 = v19;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v20 = v6;
    uint64_t v14 = sub_1C2550AA0();
    uint64_t v16 = sub_1C21AD354(v14, v15, &v24);
    uint64_t v22 = a3;
    uint64_t v23 = v16;
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v23 = sub_1C21AD354(0xD000000000000046, 0x80000001C2580F70, &v24);
    sub_1C2550120();
    _os_log_impl(&dword_1C21A1000, v10, v11, "%s %s running", (uint8_t *)v13, 0x16u);
    uint64_t v17 = v19;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v17, -1, -1);
    MEMORY[0x1C875A0B0](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  sub_1C23A8858();
  return a2();
}

uint64_t sub_1C23A6654(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  sub_1C23AA5F4(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v58 = (char *)&v50 - v9;
  uint64_t v10 = sub_1C254C900();
  uint64_t v59 = *(void *)(v10 - 8);
  uint64_t v60 = (char *)v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v57 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C254E560();
  uint64_t v61 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v50 - v16;
  sub_1C254E540();
  uint64_t v18 = sub_1C254E550();
  os_log_type_t v19 = sub_1C254FA40();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v55 = v12;
  uint64_t v56 = v4;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v51 = a2;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v63 = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v24 = sub_1C2550AA0();
    uint64_t v52 = a3;
    uint64_t v62 = sub_1C21AD354(v24, v25, &v63);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v62 = sub_1C21AD354(0xD000000000000036, 0x80000001C2580F30, &v63);
    uint64_t v12 = v55;
    a3 = v52;
    sub_1C2550120();
    _os_log_impl(&dword_1C21A1000, v18, v19, "%s %s running", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v23, -1, -1);
    uint64_t v26 = v22;
    a2 = v51;
    MEMORY[0x1C875A0B0](v26, -1, -1);
  }

  uint64_t v53 = *(void (**)(char *, uint64_t))(v61 + 8);
  v53(v17, v12);
  uint64_t v28 = v59;
  uint64_t v27 = v60;
  id v29 = objc_msgSend(a1, sel_notification);
  uint64_t v30 = (uint64_t)v58;
  sub_1C254FA80();

  if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v28 + 48))(v30, 1, v27) == 1)
  {
    sub_1C23AA3CC(v30, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  }
  else
  {
    (*(void (**)(char *, uint64_t, char *))(v28 + 32))(v57, v30, v27);
    id v31 = objc_msgSend(a1, sel_actionIdentifier);
    uint64_t v32 = sub_1C254F470();
    uint64_t v34 = v33;

    if (v32 == sub_1C254F470() && v34 == v35)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v36 = sub_1C2550870();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v36 & 1) == 0)
      {
        uint64_t v49 = v57;
        sub_1C23A8858();
        (*(void (**)(char *, char *))(v59 + 8))(v49, v60);
        goto LABEL_14;
      }
    }
    (*(void (**)(char *, char *))(v59 + 8))(v57, v60);
  }
  sub_1C254E540();
  uint64_t v37 = sub_1C254E550();
  os_log_type_t v38 = sub_1C254FA20();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v63 = v40;
    *(_DWORD *)uint64_t v39 = 136315394;
    uint64_t v60 = v14;
    uint64_t v41 = sub_1C2550AA0();
    uint64_t v62 = sub_1C21AD354(v41, v42, &v63);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2080;
    uint64_t v62 = sub_1C21AD354(0xD000000000000036, 0x80000001C2580F30, &v63);
    sub_1C2550120();
    _os_log_impl(&dword_1C21A1000, v37, v38, "%s %s No content request URL found", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v40, -1, -1);
    MEMORY[0x1C875A0B0](v39, -1, -1);

    uint64_t v43 = v60;
    uint64_t v44 = v55;
  }
  else
  {

    uint64_t v43 = v14;
    uint64_t v44 = v12;
  }
  v53(v43, v44);
LABEL_14:
  uint64_t v45 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v46 = (void *)swift_allocObject();
  void v46[2] = v45;
  v46[3] = a1;
  v46[4] = a2;
  v46[5] = a3;
  swift_retain();
  id v47 = a1;
  swift_retain();
  sub_1C23A6DC4(v47, (void (*)(uint64_t))sub_1C23AA5B0, (uint64_t)v46);
  swift_release();
  return swift_release();
}

void sub_1C23A6D4C(uint64_t a1, void *a2, char *a3, void *a4)
{
  uint64_t v7 = a1 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C875A200](v7);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    sub_1C23A7BE4(a2, a3, a4);
  }
}

void sub_1C23A6DC4(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v70 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_1C254D070();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C23AA5F4(0, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v65 = (char *)&v61 - v10;
  uint64_t v67 = sub_1C254CB40();
  uint64_t v69 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v62 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v66 = (char *)&v61 - v13;
  uint64_t v14 = sub_1C254E560();
  uint64_t v75 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v73 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v61 - v17;
  sub_1C254E540();
  os_log_type_t v19 = sub_1C254E550();
  os_log_type_t v20 = sub_1C254FA40();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v64 = v5;
  uint64_t v63 = v6;
  uint64_t v74 = v14;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v61 = v8;
    uint64_t v24 = v23;
    v78[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v25 = sub_1C2550AA0();
    *(void *)&long long v79 = sub_1C21AD354(v25, v26, v78);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    *(void *)&long long v79 = sub_1C21AD354(0xD00000000000003BLL, 0x80000001C2580EF0, v78);
    sub_1C2550120();
    _os_log_impl(&dword_1C21A1000, v19, v20, "%s %s running", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    uint64_t v27 = v24;
    uint64_t v8 = v61;
    MEMORY[0x1C875A0B0](v27, -1, -1);
    MEMORY[0x1C875A0B0](v22, -1, -1);

    uint64_t v68 = *(void (**)(char *, uint64_t))(v75 + 8);
    v68(v18, v74);
  }
  else
  {

    uint64_t v68 = *(void (**)(char *, uint64_t))(v75 + 8);
    v68(v18, v14);
  }
  uint64_t v28 = v72;
  id v29 = v70;
  sub_1C254CEA0();
  id v30 = *(id *)&v28[OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_healthStore];
  uint64_t v31 = sub_1C254CE80();
  sub_1C254CE90();
  id v32 = objc_msgSend(v29, sel_notification);
  uint64_t v33 = (char *)objc_msgSend(v32, sel_request);

  uint64_t v72 = v33;
  id v34 = objc_msgSend(v33, sel_content);
  id v35 = objc_msgSend(v34, sel_userInfo);

  uint64_t v36 = sub_1C254F2D0();
  uint64_t v76 = sub_1C254F470();
  uint64_t v77 = v37;
  sub_1C2550330();
  if (*(void *)(v36 + 16) && (unint64_t v38 = sub_1C2457670((uint64_t)v78), (v39 & 1) != 0))
  {
    sub_1C21A9A38(*(void *)(v36 + 56) + 32 * v38, (uint64_t)&v79);
  }
  else
  {
    long long v79 = 0u;
    long long v80 = 0u;
  }
  uint64_t v40 = v69;
  sub_1C2298B34((uint64_t)v78);
  uint64_t v70 = (void *)v31;
  if (*((void *)&v80 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v41 = (uint64_t)v65;
      sub_1C254CAE0();
      swift_bridgeObjectRelease();
      uint64_t v42 = v67;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v41, 1, v67) != 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v57 = v66;
        (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v66, v41, v42);
        uint64_t v58 = v42;
        id v59 = objc_msgSend(v72, sel_identifier);
        sub_1C254F470();

        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v62, v57, v58);
        sub_1C254D060();
        v78[0] = sub_1C254CE70();
        uint64_t v60 = (void *)swift_allocObject();
        v60[2] = a2;
        v60[3] = a3;
        v60[4] = ObjectType;
        sub_1C23AA46C();
        sub_1C23AA4D8();
        swift_retain();
        sub_1C254EC10();
        swift_release();
        swift_release();
        swift_beginAccess();
        sub_1C254E9F0();
        swift_endAccess();
        swift_release();

        swift_release();
        (*(void (**)(char *, uint64_t))(v63 + 8))(v8, v64);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v66, v67);
        return;
      }
      sub_1C23AA3CC(v41, (unint64_t *)&qword_1EA2DEFF0, MEMORY[0x1E4F27990]);
    }
  }
  else
  {
    sub_1C23AA70C((uint64_t)&v79, (uint64_t (*)(void))sub_1C224E400);
  }
  uint64_t v43 = v73;
  sub_1C254E540();
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_1C254E550();
  os_log_type_t v45 = sub_1C254FA20();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v69 = a3;
    uint64_t v48 = v47;
    v78[0] = v47;
    *(_DWORD *)uint64_t v46 = 136446466;
    uint64_t v67 = (uint64_t)a2;
    uint64_t v49 = sub_1C2550AA0();
    *(void *)&long long v79 = sub_1C21AD354(v49, v50, v78);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1C254F2E0();
    unint64_t v53 = v52;
    swift_bridgeObjectRelease();
    *(void *)&long long v79 = sub_1C21AD354(v51, v53, v78);
    a2 = (void (*)(uint64_t))v67;
    sub_1C2550120();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v44, v45, "%{public}s Could not set notification acknowledgement: Missing identifier in user info: %s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v48, -1, -1);
    MEMORY[0x1C875A0B0](v46, -1, -1);

    char v54 = v73;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    char v54 = v43;
  }
  uint64_t v55 = ((uint64_t (*)(char *, uint64_t))v68)(v54, v74);
  uint64_t v56 = v72;
  a2(v55);
  swift_release();
}

uint64_t sub_1C23A77FC(void **a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6 = sub_1C254E560();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = *a1;
  if (v13)
  {
    id v14 = v13;
    sub_1C254E540();
    id v15 = v13;
    id v16 = v13;
    uint64_t v17 = sub_1C254E550();
    os_log_type_t v18 = sub_1C254FA20();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v35 = a3;
      uint64_t v21 = v20;
      uint64_t v38 = v20;
      *(_DWORD *)uint64_t v19 = 136446466;
      uint64_t v36 = a2;
      uint64_t v22 = sub_1C2550AA0();
      uint64_t v37 = sub_1C21AD354(v22, v23, &v38);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      uint64_t v37 = (uint64_t)v13;
      id v24 = v13;
      sub_1C2206F9C();
      uint64_t v25 = sub_1C254F510();
      uint64_t v37 = sub_1C21AD354(v25, v26, &v38);
      a2 = v36;
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v17, v18, "%{public}s Could not set notification acknowledgement: %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v21, -1, -1);
      MEMORY[0x1C875A0B0](v19, -1, -1);
    }
    else
    {
    }
    uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {
    sub_1C254E540();
    uint64_t v27 = sub_1C254E550();
    os_log_type_t v28 = sub_1C254FA40();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v35 = a3;
      id v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v38 = v30;
      uint64_t v36 = a2;
      *(_DWORD *)id v29 = 136446210;
      uint64_t v31 = sub_1C2550AA0();
      uint64_t v37 = sub_1C21AD354(v31, v32, &v38);
      a2 = v36;
      sub_1C2550120();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C21A1000, v27, v28, "%{public}s Successfully set notification acknowledgement", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v30, -1, -1);
      MEMORY[0x1C875A0B0](v29, -1, -1);
    }

    uint64_t v33 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return a2(v33);
}

uint64_t sub_1C23A7BE4(void *a1, char *a2, id a3)
{
  id v64 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = sub_1C254CAD0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v58 - v11;
  uint64_t v13 = sub_1C254E560();
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v67 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v58 - v16;
  sub_1C254E540();
  os_log_type_t v18 = sub_1C254E550();
  os_log_type_t v19 = sub_1C254FA40();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v65 = v7;
  uint64_t v66 = v6;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    id v62 = a3;
    uint64_t v63 = v12;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    aBlock[0] = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v24 = sub_1C2550AA0();
    uint64_t v73 = sub_1C21AD354(v24, v25, aBlock);
    uint64_t v61 = a2;
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v73 = sub_1C21AD354(0xD00000000000003ALL, 0x80000001C2580E80, aBlock);
    a2 = v61;
    sub_1C2550120();
    _os_log_impl(&dword_1C21A1000, v18, v19, "%s %s running", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v23, -1, -1);
    uint64_t v26 = v22;
    a3 = v62;
    uint64_t v12 = v63;
    MEMORY[0x1C875A0B0](v26, -1, -1);
  }

  uint64_t v27 = *(void (**)(char *, uint64_t))(v69 + 8);
  v27(v17, v70);
  uint64_t v28 = v68;
  id v29 = (unsigned char *)(v68 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_shouldDismissNotificationsUrgently);
  uint64_t v30 = swift_beginAccess();
  if (*v29 != 1) {
    return ((uint64_t (*)(uint64_t))a2)(v30);
  }
  uint64_t v63 = (char *)v27;
  id v31 = objc_msgSend(v64, sel_notification);
  id v32 = objc_msgSend(v31, sel_request);

  id v33 = objc_msgSend(v32, sel_identifier);
  id v34 = (void *)sub_1C254F470();
  unint64_t v36 = v35;

  sub_1C254CAC0();
  sub_1C254F880();
  sub_1C254CA40();
  id v37 = objc_allocWithZone(MEMORY[0x1E4F2B268]);
  swift_bridgeObjectRetain();
  id v64 = v34;
  uint64_t v38 = (void *)sub_1C254F430();
  swift_bridgeObjectRelease();
  char v39 = (void *)sub_1C254CA50();
  id v62 = objc_msgSend(v37, sel_initWithAction_categoryIdentifier_expirationDate_, 1, v38, v39);

  uint64_t v40 = v67;
  sub_1C254E540();
  swift_bridgeObjectRetain_n();
  uint64_t v41 = sub_1C254E550();
  os_log_type_t v42 = sub_1C254FA40();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    aBlock[0] = v59;
    *(_DWORD *)uint64_t v43 = 136446466;
    uint64_t v61 = v9;
    uint64_t v44 = sub_1C2550AA0();
    uint64_t v72 = sub_1C21AD354(v44, v45, aBlock);
    uint64_t v60 = ObjectType;
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_1C21AD354((uint64_t)v64, v36, aBlock);
    uint64_t ObjectType = v60;
    uint64_t v9 = v61;
    sub_1C2550120();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C21A1000, v41, v42, "%{public}s Sending dismiss instruction for %s", (uint8_t *)v43, 0x16u);
    uint64_t v46 = v59;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v46, -1, -1);
    uint64_t v47 = v43;
    uint64_t v28 = v68;
    MEMORY[0x1C875A0B0](v47, -1, -1);

    uint64_t v48 = v67;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v48 = v40;
  }
  ((void (*)(char *, uint64_t))v63)(v48, v70);
  unint64_t v50 = (void **)(v28 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_notificationSyncStore);
  swift_beginAccess();
  uint64_t v51 = *v50;
  unint64_t v52 = (void *)swift_allocObject();
  void v52[2] = v64;
  v52[3] = v36;
  v52[4] = a2;
  v52[5] = a3;
  v52[6] = ObjectType;
  aBlock[4] = (uint64_t)sub_1C23AA3BC;
  aBlock[5] = (uint64_t)v52;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C22AE944;
  void aBlock[3] = (uint64_t)&block_descriptor_16_0;
  unint64_t v53 = _Block_copy(aBlock);
  id v54 = v51;
  swift_retain();
  swift_release();
  uint64_t v55 = v62;
  objc_msgSend(v54, sel_sendNotificationInstruction_completion_, v62, v53);
  _Block_release(v53);

  uint64_t v56 = v66;
  uint64_t v57 = *(void (**)(char *, uint64_t))(v65 + 8);
  v57(v9, v66);
  return ((uint64_t (*)(char *, uint64_t))v57)(v12, v56);
}

uint64_t sub_1C23A832C(int a1, void *a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(void), uint64_t a6)
{
  LODWORD(v47) = a1;
  uint64_t v11 = sub_1C254E560();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v50 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v41 - v15;
  sub_1C254E540();
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1C254E550();
  os_log_type_t v18 = sub_1C254FA40();
  LODWORD(v46) = v18;
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v49 = v12;
  uint64_t v45 = a3;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v44 = a2;
    uint64_t v21 = v20;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v52 = v43;
    *(_DWORD *)uint64_t v21 = 136446722;
    uint64_t v48 = a5;
    uint64_t v22 = sub_1C2550AA0();
    unint64_t v42 = a4;
    uint64_t v51 = sub_1C21AD354(v22, v23, &v52);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    a4 = v42;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_1C21AD354(a3, a4, &v52);
    a5 = v48;
    uint64_t v12 = v49;
    sub_1C2550120();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 22) = 1024;
    LODWORD(v51) = v47 & 1;
    sub_1C2550120();
    _os_log_impl(&dword_1C21A1000, v17, (os_log_type_t)v46, "%{public}s Sent dismiss instruction for %s successfully: %{BOOL}d", (uint8_t *)v21, 0x1Cu);
    uint64_t v24 = v43;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v24, -1, -1);
    uint64_t v25 = v21;
    a2 = v44;
    MEMORY[0x1C875A0B0](v25, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
  uint64_t v27 = v26(v16, v11);
  if (a2)
  {
    id v28 = a2;
    sub_1C254E540();
    swift_bridgeObjectRetain();
    id v29 = a2;
    swift_bridgeObjectRetain();
    id v30 = a2;
    id v31 = sub_1C254E550();
    os_log_type_t v32 = sub_1C254FA20();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v52 = v46;
      *(_DWORD *)uint64_t v33 = 136446722;
      uint64_t v48 = a5;
      uint64_t v34 = sub_1C2550AA0();
      uint64_t v51 = sub_1C21AD354(v34, v35, &v52);
      uint64_t v47 = a6;
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_1C21AD354(v45, a4, &v52);
      sub_1C2550120();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 22) = 2082;
      uint64_t v51 = (uint64_t)a2;
      id v36 = a2;
      sub_1C2206F9C();
      uint64_t v37 = sub_1C254F510();
      uint64_t v51 = sub_1C21AD354(v37, v38, &v52);
      a5 = v48;
      sub_1C2550120();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C21A1000, v31, v32, "%{public}s Unable to send dismiss instruction for %s. %{public}s", (uint8_t *)v33, 0x20u);
      uint64_t v39 = v46;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v39, -1, -1);
      MEMORY[0x1C875A0B0](v33, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v27 = v26(v50, v11);
  }
  return a5(v27);
}

void sub_1C23A8858()
{
  uint64_t ObjectType = swift_getObjectType();
  id v1 = objc_msgSend(self, sel_defaultWorkspace);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = (void *)sub_1C254C870();
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = ObjectType;
    void v6[4] = sub_1C23AA36C;
    v6[5] = v4;
    v6[0] = MEMORY[0x1E4F143A8];
    v6[1] = 1107296256;
    uint64_t v6[2] = sub_1C2541078;
    v6[3] = &block_descriptor_43;
    uint64_t v5 = _Block_copy(v6);
    swift_release();
    objc_msgSend(v2, sel_openURL_configuration_completionHandler_, v3, 0, v5);
    _Block_release(v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_1C23A897C(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1C254E560();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v7 = a2;
    sub_1C254E540();
    id v8 = a2;
    id v9 = a2;
    uint64_t v10 = sub_1C254E550();
    os_log_type_t v11 = sub_1C254FA20();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      BOOL v19 = (void *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v22 = v20;
      *(_DWORD *)uint64_t v12 = 136315394;
      uint64_t v13 = sub_1C2550AA0();
      uint64_t v21 = sub_1C21AD354(v13, v14, &v22);
      sub_1C2550120();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2112;
      id v15 = a2;
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v21 = v16;
      sub_1C2550120();
      uint64_t v17 = v19;
      *BOOL v19 = v16;

      _os_log_impl(&dword_1C21A1000, v10, v11, "%s Unable to open URL for ViewHealthRecords: %@", (uint8_t *)v12, 0x16u);
      sub_1C23AA5F4(0, (unint64_t *)&qword_1EBB6F230, (void (*)(uint64_t))sub_1C224B3D4);
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v17, -1, -1);
      uint64_t v18 = v20;
      swift_arrayDestroy();
      MEMORY[0x1C875A0B0](v18, -1, -1);
      MEMORY[0x1C875A0B0](v12, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1C23A8C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  long long v5[2] = a4;
  v5[3] = a5;
  v5[4] = sub_1C254F820();
  v5[5] = sub_1C254F810();
  type metadata accessor for HealthRecordsViewRouter();
  uint64_t v6 = (void *)swift_task_alloc();
  v5[6] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1C23A8D0C;
  return sub_1C24C5E98(0xD000000000000022, 0x80000001C2581050);
}

uint64_t sub_1C23A8D0C()
{
  swift_task_dealloc();
  uint64_t v1 = sub_1C254F7D0();
  return MEMORY[0x1F4188298](sub_1C23A8E48, v1, v0);
}

uint64_t sub_1C23A8E48()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 16);
  uint64_t v2 = swift_release();
  v1(v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

id NotificationPolicy.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void NotificationPolicy.init()()
{
}

id NotificationPolicy.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NotificationPolicy();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C23A8FD8(void *a1)
{
  uint64_t v3 = self;
  uint64_t v4 = v1;
  id v5 = objc_msgSend(v3, sel_sharedBehavior);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = objc_msgSend(v5, sel_features);

    if (v7)
    {
      uint64_t v8 = OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_shouldDismissNotificationsUrgently;
      unsigned __int8 v9 = objc_msgSend(v7, sel_urgentNotificationDismiss);

      v4[v8] = v9;
      *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_cancellables] = MEMORY[0x1E4FBC870];
      *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_healthStore] = a1;
      sub_1C254F470();
      id v10 = objc_allocWithZone(MEMORY[0x1E4F2B288]);
      id v11 = a1;
      uint64_t v12 = (void *)sub_1C254F430();
      swift_bridgeObjectRelease();
      id v13 = objc_msgSend(v10, sel_initWithClientIdentifier_healthStore_, v12, v11);

      *(void *)&v4[OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_notificationSyncStore] = v13;
      v14.receiver = v4;
      v14.super_class = (Class)type metadata accessor for NotificationPolicy();
      objc_msgSendSuper2(&v14, sel_init);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1C23A914C(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  sub_1C23AA5F4(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v26 - v5;
  uint64_t v7 = sub_1C254E560();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E540();
  id v11 = sub_1C254E550();
  os_log_type_t v12 = sub_1C254FA40();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v28 = a1;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v27 = v6;
    uint64_t v16 = v15;
    uint64_t v31 = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v29 = a2;
    uint64_t v17 = sub_1C2550AA0();
    uint64_t v30 = sub_1C21AD354(v17, v18, &v31);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v30 = sub_1C21AD354(0xD000000000000040, 0x80000001C2581000, &v31);
    a2 = v29;
    sub_1C2550120();
    _os_log_impl(&dword_1C21A1000, v11, v12, "%s %s running", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    uint64_t v19 = v16;
    uint64_t v6 = v27;
    MEMORY[0x1C875A0B0](v19, -1, -1);
    uint64_t v20 = v14;
    a1 = v28;
    MEMORY[0x1C875A0B0](v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v21 = sub_1C254F840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 1, 1, v21);
  sub_1C254F820();
  swift_retain();
  uint64_t v22 = sub_1C254F810();
  unint64_t v23 = (void *)swift_allocObject();
  uint64_t v24 = MEMORY[0x1E4FBCFD8];
  void v23[2] = v22;
  v23[3] = v24;
  unsigned char v23[4] = a1;
  void v23[5] = a2;
  sub_1C24D0A0C((uint64_t)v6, (uint64_t)&unk_1EA2E24A8, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_1C23A948C(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v105 = a2;
  uint64_t v106 = a3;
  uint64_t ObjectType = swift_getObjectType();
  sub_1C23AA5F4(0, (unint64_t *)&qword_1EBB6F490, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v98 = (char *)&v94 - v8;
  uint64_t v104 = type metadata accessor for HealthRecordsURLParsingResult();
  MEMORY[0x1F4188790](v104);
  uint64_t v97 = (uint64_t)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  os_log_type_t v12 = (char *)&v94 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v109 = (uint64_t)&v94 - v14;
  sub_1C23AA5F4(0, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v94 - v16;
  uint64_t v18 = sub_1C254C900();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v111 = v18;
  uint64_t v112 = v19;
  MEMORY[0x1F4188790](v18);
  unint64_t v110 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1C254E560();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v108 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v100 = (char *)&v94 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v94 - v27;
  sub_1C254E540();
  id v29 = a1;
  uint64_t v30 = sub_1C254E550();
  os_log_type_t v31 = sub_1C254FA40();
  int v103 = v31;
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v33 = &selRef_writtenDate;
  uint64_t v101 = ObjectType;
  if (v32)
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v102 = v12;
    uint64_t v35 = v34;
    uint64_t v95 = swift_slowAlloc();
    v114[0] = v95;
    *(_DWORD *)uint64_t v35 = 136446978;
    uint64_t v96 = v4;
    uint64_t v36 = sub_1C2550AA0();
    uint64_t v107 = v21;
    uint64_t v113 = sub_1C21AD354(v36, v37, v114);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2082;
    uint64_t v113 = sub_1C21AD354(0xD00000000000003BLL, 0x80000001C2580FC0, v114);
    sub_1C2550120();
    *(_WORD *)(v35 + 22) = 2080;
    id v38 = objc_msgSend(v29, sel_notification);
    id v39 = objc_msgSend(v38, sel_request);
    uint64_t v99 = v22;
    id v40 = v39;

    id v41 = objc_msgSend(v40, sel_identifier);
    uint64_t v42 = sub_1C254F470();
    unint64_t v44 = v43;

    uint64_t v113 = sub_1C21AD354(v42, v44, v114);
    sub_1C2550120();

    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 32) = 2082;
    id v45 = objc_msgSend(v29, sel_actionIdentifier);
    uint64_t v46 = sub_1C254F470();
    unint64_t v48 = v47;

    uint64_t v22 = v99;
    uint64_t v113 = sub_1C21AD354(v46, v48, v114);
    uint64_t v33 = &selRef_writtenDate;
    uint64_t v21 = v107;
    sub_1C2550120();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C21A1000, v30, (os_log_type_t)v103, "%{public}s %{public}s notification: %s action: %{public}s", (uint8_t *)v35, 0x2Au);
    uint64_t v49 = v95;
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v49, -1, -1);
    uint64_t v50 = v35;
    os_log_type_t v12 = v102;
    MEMORY[0x1C875A0B0](v50, -1, -1);
  }
  else
  {
  }
  uint64_t v51 = *(void (**)(char *, uint64_t))(v22 + 8);
  v51(v28, v21);
  uint64_t v52 = v111;
  id v53 = [v29 v33[138]];
  sub_1C254FA80();

  uint64_t v54 = v112;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v17, 1, v52) != 1)
  {
    id v64 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
    uint64_t v65 = (uint64_t)v110;
    v64(v110, v17, v52);
    type metadata accessor for HealthRecordsURLHandler();
    swift_initStackObject();
    uint64_t v66 = v109;
    sub_1C2351660(v65, v109);
    sub_1C22491F0(v66, (uint64_t)v12);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 13)
      {
        sub_1C23A6654(v29, (uint64_t)v105, v106);
        uint64_t v82 = v112;
        uint64_t v68 = (uint64_t)v110;
LABEL_25:
        swift_release();
        sub_1C23AA70C(v109, (uint64_t (*)(void))type metadata accessor for HealthRecordsURLParsingResult);
        (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v68, v52);
        return sub_1C23AA70C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for HealthRecordsURLParsingResult);
      }
      uint64_t v68 = (uint64_t)v110;
      if (EnumCaseMultiPayload == 2)
      {
        sub_1C22491F0((uint64_t)v12, v97);
        swift_bridgeObjectRelease();
        sub_1C23A914C((uint64_t)v105, v106);
LABEL_24:
        uint64_t v82 = v112;
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v68 = (uint64_t)v110;
      if (URL.isCategoryRoomURL.getter())
      {
        sub_1C23A63D4(v68, v105, v106);
        goto LABEL_24;
      }
    }
    uint64_t v102 = v12;
    uint64_t v83 = v100;
    sub_1C254E540();
    uint64_t v84 = sub_1C254E550();
    os_log_type_t v85 = sub_1C254FA40();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v86 = swift_slowAlloc();
      uint64_t v87 = swift_slowAlloc();
      v114[0] = v87;
      *(_DWORD *)uint64_t v86 = 136315394;
      uint64_t v107 = v21;
      uint64_t v88 = sub_1C2550AA0();
      uint64_t v113 = sub_1C21AD354(v88, v89, v114);
      uint64_t v99 = v22;
      sub_1C2550120();
      uint64_t v52 = v111;
      swift_bridgeObjectRelease();
      *(_WORD *)(v86 + 12) = 2080;
      uint64_t v113 = sub_1C21AD354(0xD00000000000003BLL, 0x80000001C2580FC0, v114);
      sub_1C2550120();
      _os_log_impl(&dword_1C21A1000, v84, v85, "%s %s default response: open URL", (uint8_t *)v86, 0x16u);
      swift_arrayDestroy();
      uint64_t v90 = v87;
      uint64_t v68 = (uint64_t)v110;
      MEMORY[0x1C875A0B0](v90, -1, -1);
      MEMORY[0x1C875A0B0](v86, -1, -1);

      uint64_t v91 = v100;
      uint64_t v92 = v107;
    }
    else
    {

      uint64_t v91 = v83;
      uint64_t v92 = v21;
    }
    v51(v91, v92);
    uint64_t v93 = (void (*)(void))v105;
    os_log_type_t v12 = v102;
    sub_1C23A8858();
    v93();
    goto LABEL_24;
  }
  sub_1C23AA3CC((uint64_t)v17, (unint64_t *)&qword_1EA2DF038, MEMORY[0x1E4F276F0]);
  uint64_t v55 = v108;
  sub_1C254E540();
  uint64_t v56 = sub_1C254E550();
  os_log_type_t v57 = sub_1C254FA40();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = swift_slowAlloc();
    uint64_t v59 = swift_slowAlloc();
    v114[0] = v59;
    *(_DWORD *)uint64_t v58 = 136315394;
    uint64_t v107 = v21;
    uint64_t v60 = sub_1C2550AA0();
    uint64_t v113 = sub_1C21AD354(v60, v61, v114);
    sub_1C2550120();
    swift_bridgeObjectRelease();
    *(_WORD *)(v58 + 12) = 2080;
    uint64_t v113 = sub_1C21AD354(0xD00000000000003BLL, 0x80000001C2580FC0, v114);
    sub_1C2550120();
    _os_log_impl(&dword_1C21A1000, v56, v57, "%s %s No content request URL found", (uint8_t *)v58, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C875A0B0](v59, -1, -1);
    MEMORY[0x1C875A0B0](v58, -1, -1);

    uint64_t v63 = v107;
    id v62 = v108;
  }
  else
  {

    id v62 = v55;
    uint64_t v63 = v21;
  }
  v51(v62, v63);
  id v69 = objc_msgSend(v29, sel_actionIdentifier);
  uint64_t v70 = sub_1C254F470();
  uint64_t v72 = v71;

  if (v70 == sub_1C254F470() && v72 == v73) {
    return swift_bridgeObjectRelease_n();
  }
  char v75 = sub_1C2550870();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v75 & 1) == 0)
  {
    uint64_t v76 = sub_1C254F840();
    uint64_t v77 = (uint64_t)v98;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v98, 1, 1, v76);
    sub_1C254F820();
    uint64_t v78 = v106;
    swift_retain();
    uint64_t v79 = sub_1C254F810();
    long long v80 = (void *)swift_allocObject();
    uint64_t v81 = MEMORY[0x1E4FBCFD8];
    v80[2] = v79;
    v80[3] = v81;
    v80[4] = v105;
    v80[5] = v78;
    sub_1C24D0A0C(v77, (uint64_t)&unk_1EA2E24A0, (uint64_t)v80);
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for NotificationPolicy()
{
  return self;
}

id sub_1C23AA084@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_notificationSyncStore);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1C23AA0EC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_shouldDismissNotificationsUrgently);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1C23AA140(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC15HealthRecordsUI18NotificationPolicy_shouldDismissNotificationsUrgently);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t method lookup function for NotificationPolicy(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NotificationPolicy);
}

uint64_t dispatch thunk of NotificationPolicy.notificationSyncStore.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of NotificationPolicy.notificationSyncStore.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of NotificationPolicy.notificationSyncStore.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of NotificationPolicy.shouldDismissNotificationsUrgently.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of NotificationPolicy.shouldDismissNotificationsUrgently.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of NotificationPolicy.shouldDismissNotificationsUrgently.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of NotificationPolicy.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of NotificationPolicy.userNotificationCenter(_:willPresent:withCompletionHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of NotificationPolicy.userNotificationCenter(_:didReceive:withCompletionHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t sub_1C23AA35C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C23AA36C(uint64_t a1, void *a2)
{
}

uint64_t block_destroy_helper_38()
{
  return swift_release();
}

uint64_t sub_1C23AA37C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C23AA3BC(int a1, void *a2)
{
  return sub_1C23A832C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(uint64_t (**)(void))(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1C23AA3CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C23AA5F4(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C23AA428()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C23AA460(void **a1)
{
  return sub_1C23A77FC(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C23AA46C()
{
  if (!qword_1EA2E2488)
  {
    sub_1C2206F9C();
    unint64_t v0 = sub_1C254E9E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E2488);
    }
  }
}

unint64_t sub_1C23AA4D8()
{
  unint64_t result = qword_1EA2E2490;
  if (!qword_1EA2E2490)
  {
    sub_1C23AA46C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA2E2490);
  }
  return result;
}

uint64_t sub_1C23AA530()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C23AA568()
{
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1C23AA5B0()
{
  sub_1C23A6D4C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(char **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1C23AA5BC()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C23AA5F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2550100();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C23AA64C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C2223E3C;
  return sub_1C23A8C40(a1, v4, v5, v7, v6);
}

uint64_t sub_1C23AA70C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C23AA770(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C222399C;
  return sub_1C23A8C40(a1, v4, v5, v7, v6);
}

id MedicalRecordChartPoint.__allocating_init(chartableSet:unit:blockCoordinateInfo:)(void *a1, void *a2, void *a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_chartableSet] = a1;
  uint64_t v8 = v7;
  id v9 = a1;
  id v10 = objc_msgSend(v9, sel_quantities);
  sub_1C226ACEC();
  unint64_t v11 = sub_1C254F710();

  id v12 = a2;
  uint64_t v13 = sub_1C23AC014(v11, (uint64_t)v12);
  swift_bridgeObjectRelease();

  uint64_t v18 = v13;
  swift_bridgeObjectRetain();
  sub_1C23AB6A4(&v18);
  swift_bridgeObjectRelease();
  *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues] = v18;
  *(void *)&v8[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_blockCoordinateInfo] = a3;
  id v14 = a3;

  v17.receiver = v8;
  v17.super_class = v3;
  id v15 = objc_msgSendSuper2(&v17, sel_init);

  return v15;
}

id MedicalRecordChartPoint.chartableSet.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_chartableSet);
}

id MedicalRecordChartPoint.blockCoordinateInfo.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_blockCoordinateInfo);
}

uint64_t MedicalRecordChartPoint.sortedYValues.getter()
{
  return swift_bridgeObjectRetain();
}

id MedicalRecordChartPoint.init(chartableSet:unit:blockCoordinateInfo:)(void *a1, void *a2, void *a3)
{
  id v6 = sub_1C23AC188(a1, a2, a3);

  return v6;
}

void *sub_1C23AA9F8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_blockCoordinateInfo);
  id v2 = v1;
  return v1;
}

void sub_1C23AAA38(uint64_t *a1@<X8>)
{
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_chartableSet), sel_date));
  a1[3] = sub_1C254CAD0();
  __swift_allocate_boxed_opaque_existential_1(a1);
  sub_1C254CA80();
}

double sub_1C23AAD9C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C254E560();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C254E4F0();
  uint64_t v8 = sub_1C254E550();
  os_log_type_t v9 = sub_1C254FA20();
  if (os_log_type_enabled(v8, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v10 = 0;
    MEMORY[0x1C875A0B0](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues);
  if (*(void *)(v11 + 16))
  {
    double result = *(double *)(v11 + 32);
    *(void *)(a1 + 24) = MEMORY[0x1E4FBB3D0];
    *(double *)a1 = result;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C23AB068()
{
  return sub_1C228B270(*(void *)(v0 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues));
}

double sub_1C23AB0EC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues);
  if (*(void *)(v2 + 16))
  {
    double result = *(double *)(v2 + 32);
    *(void *)(a1 + 24) = MEMORY[0x1E4FBB3D0];
    *(double *)a1 = result;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

double sub_1C23AB188@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    double result = *(double *)(v2 + 8 * v3 + 24);
    *(void *)(a1 + 24) = MEMORY[0x1E4FBB3D0];
    *(double *)a1 = result;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C23AB360()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C254CAD0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  sub_1C25503A0();
  sub_1C254F5A0();
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_chartableSet), sel_date));
  sub_1C254CA80();

  sub_1C23AC2A8();
  sub_1C2550810();
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1C254F5A0();
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues);
  if (*(void *)(v7 + 16)) {
    sub_1C254F870();
  }
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  if (*(void *)(v7 + 16)) {
    sub_1C254F870();
  }
  sub_1C254F5A0();
  swift_bridgeObjectRelease();
  sub_1C254F5A0();
  return v9[0];
}

id MedicalRecordChartPoint.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MedicalRecordChartPoint.init()()
{
}

id MedicalRecordChartPoint.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalRecordChartPoint();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C23AB6A4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C23F36E8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C23AB710(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1C23AB710(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C2550800();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v80 = 0;
      uint64_t v81 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v83 = *(double *)(v81 + 8 * i);
        uint64_t v84 = v80;
        do
        {
          uint64_t v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85) {
            break;
          }
          if (!v81) {
            goto LABEL_140;
          }
          *(void *)(v85 + 8) = *(void *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v97 = result;
  uint64_t v98 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (double *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_102:
      uint64_t v96 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          uint64_t v88 = v11;
          unint64_t v89 = v11 + 32;
          uint64_t v90 = *(void *)&v11[16 * v87 + 32];
          uint64_t v91 = *(void *)&v11[16 * v12 + 24];
          sub_1C23ABDA4((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(void *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v88 = sub_1C23F321C((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          uint64_t v92 = &v88[16 * v87 + 32];
          *(void *)uint64_t v92 = v90;
          *((void *)v92 + 1) = v91;
          unint64_t v93 = *((void *)v88 + 2);
          if (v12 > v93) {
            goto LABEL_134;
          }
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          uint64_t v11 = v88;
          *((void *)v88 + 2) = v93 - 1;
          unint64_t v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(void *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v96 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C254F780();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v98;
    uint64_t v96 = v7;
    __dst = (double *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v94 = v2;
  uint64_t v95 = *v2 - 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v99 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      double v14 = *(double *)(v10 + 8 * v9);
      double v15 = *(double *)(v10 + 8 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        double v16 = v14;
        while (1)
        {
          double v17 = v16;
          double v16 = *(double *)(v10 + 8 * v9);
          if (v14 < v15 == v16 >= v17) {
            break;
          }
          if (v3 == ++v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          uint64_t v18 = (uint64_t *)(v95 + 8 * v9);
          uint64_t v19 = v9;
          uint64_t v20 = v13;
          uint64_t v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_143;
              }
              uint64_t v22 = *v21;
              uint64_t *v21 = *v18;
              *uint64_t v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v97) {
      goto LABEL_46;
    }
    uint64_t v23 = v13 + v97;
    if (__OFADD__(v13, v97)) {
      goto LABEL_138;
    }
    if (v23 >= v3) {
      uint64_t v23 = v3;
    }
    if (v23 < v13) {
      break;
    }
    if (v9 != v23)
    {
      uint64_t v24 = (double *)(v95 + 8 * v9);
      do
      {
        double v25 = *(double *)(v10 + 8 * v9);
        uint64_t v26 = v13;
        uint64_t v27 = v24;
        do
        {
          double v28 = *v27;
          if (v25 >= *v27) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          *uint64_t v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      uint64_t v9 = v23;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C23F277C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v30 = *((void *)v11 + 2);
    unint64_t v29 = *((void *)v11 + 3);
    unint64_t v12 = v30 + 1;
    uint64_t v10 = v99;
    if (v30 >= v29 >> 1)
    {
      uint64_t v79 = sub_1C23F277C((char *)(v29 > 1), v30 + 1, 1, v11);
      uint64_t v10 = v99;
      uint64_t v11 = v79;
    }
    *((void *)v11 + 2) = v12;
    os_log_type_t v31 = v11 + 32;
    BOOL v32 = &v11[16 * v30 + 32];
    *(void *)BOOL v32 = v13;
    *((void *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        unint64_t v33 = v12 - 1;
        if (v12 >= 4)
        {
          id v38 = &v31[16 * v12];
          uint64_t v39 = *((void *)v38 - 8);
          uint64_t v40 = *((void *)v38 - 7);
          BOOL v44 = __OFSUB__(v40, v39);
          uint64_t v41 = v40 - v39;
          if (v44) {
            goto LABEL_119;
          }
          uint64_t v43 = *((void *)v38 - 6);
          uint64_t v42 = *((void *)v38 - 5);
          BOOL v44 = __OFSUB__(v42, v43);
          uint64_t v36 = v42 - v43;
          char v37 = v44;
          if (v44) {
            goto LABEL_120;
          }
          unint64_t v45 = v12 - 2;
          uint64_t v46 = &v31[16 * v12 - 32];
          uint64_t v48 = *(void *)v46;
          uint64_t v47 = *((void *)v46 + 1);
          BOOL v44 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          if (v44) {
            goto LABEL_122;
          }
          BOOL v44 = __OFADD__(v36, v49);
          uint64_t v50 = v36 + v49;
          if (v44) {
            goto LABEL_125;
          }
          if (v50 >= v41)
          {
            uint64_t v68 = &v31[16 * v33];
            uint64_t v70 = *(void *)v68;
            uint64_t v69 = *((void *)v68 + 1);
            BOOL v44 = __OFSUB__(v69, v70);
            uint64_t v71 = v69 - v70;
            if (v44) {
              goto LABEL_129;
            }
            BOOL v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v62 = *((void *)v11 + 4);
            uint64_t v63 = *((void *)v11 + 5);
            BOOL v44 = __OFSUB__(v63, v62);
            uint64_t v55 = v63 - v62;
            char v56 = v44;
            goto LABEL_77;
          }
          uint64_t v35 = *((void *)v11 + 4);
          uint64_t v34 = *((void *)v11 + 5);
          BOOL v44 = __OFSUB__(v34, v35);
          uint64_t v36 = v34 - v35;
          char v37 = v44;
        }
        if (v37) {
          goto LABEL_121;
        }
        unint64_t v45 = v12 - 2;
        uint64_t v51 = &v31[16 * v12 - 32];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v54 = __OFSUB__(v52, v53);
        uint64_t v55 = v52 - v53;
        char v56 = v54;
        if (v54) {
          goto LABEL_124;
        }
        os_log_type_t v57 = &v31[16 * v33];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v44 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v44) {
          goto LABEL_127;
        }
        if (__OFADD__(v55, v60)) {
          goto LABEL_128;
        }
        if (v55 + v60 >= v36)
        {
          BOOL v61 = v36 < v60;
LABEL_83:
          if (v61) {
            unint64_t v33 = v45;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v56) {
          goto LABEL_123;
        }
        id v64 = &v31[16 * v33];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v44 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v44) {
          goto LABEL_126;
        }
        if (v67 < v55) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        uint64_t v73 = &v31[16 * v72];
        uint64_t v74 = *(void *)v73;
        char v75 = v31;
        uint64_t v76 = &v31[16 * v33];
        uint64_t v77 = *((void *)v76 + 1);
        sub_1C23ABDA4((double *)(v10 + 8 * *(void *)v73), (double *)(v10 + 8 * *(void *)v76), v10 + 8 * v77, __dst);
        if (v1) {
          goto LABEL_113;
        }
        if (v77 < v74) {
          goto LABEL_116;
        }
        if (v33 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v73 = v74;
        *(void *)&v75[16 * v72 + 8] = v77;
        unint64_t v78 = *((void *)v11 + 2);
        if (v33 >= v78) {
          goto LABEL_118;
        }
        unint64_t v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        os_log_type_t v31 = v75;
        *((void *)v11 + 2) = v78 - 1;
        uint64_t v10 = v99;
        if (v78 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v98;
    if (v9 >= v98)
    {
      uint64_t v8 = v96;
      uint64_t v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_1C25505E0();
  __break(1u);
  return result;
}

uint64_t sub_1C23ABDA4(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v24 = __src;
  uint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      double v16 = &v4[v13];
      uint64_t v22 = v16;
      uint64_t v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        double v17 = (double *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 1;
          uint64_t v19 = v6 - 1;
          double v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            uint64_t v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *double v17 = *(v16 - 1);
            }
            --v16;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *double v17 = v20;
            }
            uint64_t v24 = --v6;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    double v14 = &v4[v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4) {
            *uint64_t v7 = *v4;
          }
          uint64_t v23 = ++v4;
          double v15 = v6;
        }
        else
        {
          double v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *uint64_t v7 = *v6;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v24 = v7;
    }
LABEL_42:
    sub_1C23F297C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1C25506A0();
  __break(1u);
  return result;
}

uint64_t sub_1C23AC014(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    if (!v6) {
      return v7;
    }
    uint64_t v16 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2274B68(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      break;
    }
    unint64_t v15 = v3;
    uint64_t v9 = 0;
    uint64_t v7 = v16;
    while (v6 != v9)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1C87588E0](v9, a1);
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      objc_msgSend(v10, sel_doubleValueForUnit_, a2, v15);
      uint64_t v13 = v12;

      unint64_t v3 = *(void *)(v16 + 16);
      unint64_t v14 = *(void *)(v16 + 24);
      if (v3 >= v14 >> 1) {
        sub_1C2274B68(v14 > 1, v3 + 1, 1);
      }
      ++v9;
      *(void *)(v16 + 16) = v3 + 1;
      *(void *)(v16 + 8 * v3 + 32) = v13;
      if (v6 == v9) {
        return v7;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2550620();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_1C23AC188(void *a1, void *a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_chartableSet] = a1;
  uint64_t v7 = v3;
  id v8 = objc_msgSend(a1, sel_quantities);
  sub_1C226ACEC();
  unint64_t v9 = sub_1C254F710();

  id v10 = a2;
  uint64_t v11 = sub_1C23AC014(v9, (uint64_t)v10);
  swift_bridgeObjectRelease();

  uint64_t v15 = v11;
  swift_bridgeObjectRetain();
  sub_1C23AB6A4(&v15);
  swift_bridgeObjectRelease();
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_sortedYValues] = v15;
  *(void *)&v7[OBJC_IVAR____TtC15HealthRecordsUI23MedicalRecordChartPoint_blockCoordinateInfo] = a3;
  id v12 = a3;

  v14.receiver = v7;
  v14.super_class = (Class)type metadata accessor for MedicalRecordChartPoint();
  return objc_msgSendSuper2(&v14, sel_init);
}

unint64_t sub_1C23AC2A8()
{
  unint64_t result = qword_1EA2E24D0;
  if (!qword_1EA2E24D0)
  {
    sub_1C254CAD0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E24D0);
  }
  return result;
}

uint64_t type metadata accessor for MedicalRecordChartPoint()
{
  return self;
}

uint64_t method lookup function for MedicalRecordChartPoint(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalRecordChartPoint);
}

uint64_t dispatch thunk of MedicalRecordChartPoint.__allocating_init(chartableSet:unit:blockCoordinateInfo:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.userInfo()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.xValueAsGenericType()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.maxXValueAsGenericType()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.minXValueAsGenericType()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.yValue()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.yValue(forKey:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.allYValues()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.minYValue()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MedicalRecordChartPoint.maxYValue()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

void *BrowseIcon.tintColor.getter()
{
  if ((*(void *)(v0 + 32) & 0x8000000000000000) != 0) {
    return 0;
  }
  uint64_t v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

BOOL BrowseIcon.ignoreInvertColors.getter()
{
  return *(void *)(v0 + 32) >= 0;
}

void BrowseIcon.hash(into:)()
{
  id v2 = *(void **)v0;
  uint64_t v1 = *(void **)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 32);
  if (v3 < 0)
  {
    uint64_t v6 = *(void *)(v0 + 16);
    uint64_t v7 = *(void *)(v0 + 24);
    id v8 = *(void **)(v0 + 40);
    sub_1C25509D0();
    sub_1C25509D0();
    sub_1C25509D0();
    if ((v3 & 1) == 0)
    {
      sub_1C2550A00();
      sub_1C2550A00();
      sub_1C2550A00();
    }
    id v9 = v8;
    sub_1C254FF80();
    sub_1C2224A9C(v2, (uint64_t)v1, v6, v7, v3);
  }
  else
  {
    sub_1C25509D0();
    id v4 = v1;
    id v11 = v2;
    sub_1C254FF80();
    sub_1C25509E0();
    if (v1)
    {
      id v10 = v4;
      sub_1C254FF80();

      uint64_t v5 = v10;
    }
    else
    {
      uint64_t v5 = v11;
    }
  }
}

uint64_t BrowseIcon.hashValue.getter()
{
  return sub_1C2550A10();
}

uint64_t sub_1C23AC79C()
{
  return sub_1C2550A10();
}

uint64_t sub_1C23AC7F4()
{
  return sub_1C2550A10();
}

uint64_t _s15HealthRecordsUI10BrowseIconO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void **)(a1 + 40);
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  id v10 = *(void **)(a2 + 40);
  uint64_t v40 = *(void **)a1;
  uint64_t v41 = *(void *)(a1 + 32);
  if (v41 < 0)
  {
    if (v11 < 0)
    {
      LOBYTE(v45[0]) = v40 & 1;
      *(void *)&v45[1] = v2;
      *(void *)&v45[2] = v3;
      uint64_t v29 = v3;
      *(void *)&void v45[3] = v4;
      char v46 = v41 & 1;
      uint64_t v47 = v5;
      unint64_t v30 = v7;
      LOBYTE(v42[0]) = v7 & 1;
      os_log_type_t v31 = v6;
      *(void *)&v42[1] = v6;
      *(void *)&v42[2] = v8;
      *(void *)&v42[3] = v9;
      char v43 = v11 & 1;
      BOOL v44 = v10;
      BOOL v32 = v30;
      uint64_t v35 = v30;
      uint64_t v33 = v8;
      sub_1C2207BC8(v30, v31, v8, v9, v11, v10);
      sub_1C2207BC8(v40, v2, v29, v4, v41, v5);
      sub_1C2207BC8(v32, v31, v33, v9, v11, v10);
      sub_1C2207BC8(v40, v2, v29, v4, v41, v5);
      char v27 = _s15HealthRecordsUI11AccountIconV2eeoiySbAC_ACtFZ_0(v45, v42);
      sub_1C2224A9C(v40, (uint64_t)v2, v29, v4, v41);
      sub_1C2224A9C(v35, (uint64_t)v31, v33, v9, v11);
      sub_1C2224A9C(v35, (uint64_t)v31, v33, v9, v11);
      sub_1C2224A9C(v40, (uint64_t)v2, v29, v4, v41);
      return v27 & 1;
    }
    goto LABEL_9;
  }
  if (v11 < 0)
  {
LABEL_9:
    uint64_t v38 = *(void *)(a2 + 16);
    sub_1C2207BC8(v7, v6, v8, v9, v11, v10);
    sub_1C2207BC8(v40, v2, v3, v4, v41, v5);
    sub_1C2224A9C(v40, (uint64_t)v2, v3, v4, v41);
    uint64_t v22 = v7;
    uint64_t v23 = (uint64_t)v6;
    uint64_t v24 = v38;
    uint64_t v25 = v9;
    uint64_t v26 = v11;
LABEL_11:
    sub_1C2224A9C(v22, v23, v24, v25, v26);
    goto LABEL_12;
  }
  uint64_t v12 = *(void *)(a2 + 16);
  sub_1C21AB51C(0, (unint64_t *)&qword_1EBB6F510);
  uint64_t v37 = v11;
  sub_1C2207BC8(v7, v6, v12, v9, v11, v10);
  uint64_t v13 = v3;
  sub_1C2207BC8(v40, v2, v3, v4, v41, v5);
  id v36 = v6;
  uint64_t v39 = v9;
  id v14 = v40;
  uint64_t v15 = v2;
  id v16 = v7;
  id v17 = v15;
  char v18 = sub_1C254FF70();

  if ((v18 & 1) == 0)
  {

    sub_1C2224A9C(v40, (uint64_t)v15, v13, v4, v41);
    uint64_t v22 = v7;
    uint64_t v23 = (uint64_t)v6;
    uint64_t v24 = v12;
    uint64_t v25 = v39;
    uint64_t v26 = v37;
    goto LABEL_11;
  }
  if (v15)
  {
    if (v6)
    {
      sub_1C21AB51C(0, (unint64_t *)&qword_1EBB70010);
      id v19 = v17;
      id v20 = v36;
      char v21 = sub_1C254FF70();

      sub_1C2224A9C(v40, (uint64_t)v15, v13, v4, v41);
      sub_1C2224A9C(v7, (uint64_t)v6, v12, v39, v37);

      if (v21) {
        goto LABEL_16;
      }
      goto LABEL_12;
    }
    sub_1C2224A9C(v40, (uint64_t)v15, v13, v4, v41);
    sub_1C2224A9C(v7, 0, v12, v39, v37);
    uint64_t v34 = v17;
  }
  else
  {
    sub_1C2224A9C(v40, 0, v13, v4, v41);
    sub_1C2224A9C(v7, (uint64_t)v6, v12, v39, v37);
    uint64_t v34 = v36;
    if (!v6)
    {
LABEL_16:
      char v27 = 1;
      return v27 & 1;
    }
  }

LABEL_12:
  char v27 = 0;
  return v27 & 1;
}

unint64_t sub_1C23ACCB8()
{
  unint64_t result = qword_1EA2E24D8;
  if (!qword_1EA2E24D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E24D8);
  }
  return result;
}

uint64_t destroy for BrowseIcon(uint64_t a1)
{
  return sub_1C2224A9C(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32));
}

void *initializeWithCopy for BrowseIcon(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void **)(a2 + 40);
  sub_1C2207BC8(*(void **)a2, v4, v5, v6, v7, v8);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  return a1;
}

uint64_t assignWithCopy for BrowseIcon(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void **)(a2 + 40);
  sub_1C2207BC8(*(void **)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  sub_1C2224A9C(v9, v10, v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for BrowseIcon(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  long long v8 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = a2[2];
  sub_1C2224A9C(v3, v5, v4, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for BrowseIcon(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 32) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for BrowseIcon(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 40) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = 2 * -a2;
      *(void *)(a1 + 40) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1C23ACF04(uint64_t a1)
{
  return *(void *)(a1 + 32) >> 63;
}

uint64_t sub_1C23ACF10(uint64_t result)
{
  *(void *)(result + 32) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1C23ACF20(uint64_t result, uint64_t a2)
{
  *(void *)(result + 32) = *(void *)(result + 32) & 1 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for BrowseIcon()
{
  return &type metadata for BrowseIcon;
}

uint64_t LabTipFeedItemData.concept.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C23ACFAC();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

void sub_1C23ACFAC()
{
  if (!qword_1EA2E24E0)
  {
    sub_1C23AD004();
    unint64_t v0 = sub_1C254F2A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA2E24E0);
    }
  }
}

unint64_t sub_1C23AD004()
{
  unint64_t result = qword_1EBB6EFF0;
  if (!qword_1EBB6EFF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB6EFF0);
  }
  return result;
}

uint64_t LabTipFeedItemData.ontologyPreferredName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for LabTipFeedItemData() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for LabTipFeedItemData()
{
  uint64_t result = qword_1EA2E2510;
  if (!qword_1EA2E2510) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LabTipFeedItemData.ontologyPreferredName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for LabTipFeedItemData() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*LabTipFeedItemData.ontologyPreferredName.modify())(void)
{
  return nullsub_1;
}

uint64_t LabTipFeedItemData.relevanceInMonths.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for LabTipFeedItemData() + 24));
}

uint64_t LabTipFeedItemData.relevanceInMonths.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for LabTipFeedItemData();
  *(void *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*LabTipFeedItemData.relevanceInMonths.modify())(void)
{
  return nullsub_1;
}

uint64_t LabTipFeedItemData.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LabTipFeedItemData() + 28);
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t LabTipFeedItemData.uuid.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for LabTipFeedItemData() + 28);
  uint64_t v4 = sub_1C254CB40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*LabTipFeedItemData.uuid.modify())(void)
{
  return nullsub_1;
}

uint64_t LabTipFeedItemData.init(concept:ontologyPreferredName:relevanceInMonths:uuid:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  sub_1C23AD004();
  sub_1C254F2B0();
  uint64_t v10 = (int *)type metadata accessor for LabTipFeedItemData();
  uint64_t v11 = (void *)(a5 + v10[5]);
  *uint64_t v11 = a1;
  v11[1] = a2;
  *(void *)(a5 + v10[6]) = a3;
  uint64_t v12 = a5 + v10[7];
  uint64_t v13 = sub_1C254CB40();
  id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);
  return v14(v12, a4, v13);
}

unint64_t sub_1C23AD400()
{
  unint64_t result = 0x747065636E6F63;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 1684632949;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C23AD494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C23AEA40(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C23AD4BC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1C23AD4C8(uint64_t a1)
{
  unint64_t v2 = sub_1C23ADDD4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C23AD504(uint64_t a1)
{
  unint64_t v2 = sub_1C23ADDD4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t LabTipFeedItemData.encode(to:)(void *a1)
{
  sub_1C23ADE28(0, &qword_1EA2E24E8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C23ADDD4();
  sub_1C2550A70();
  v9[15] = 0;
  sub_1C23ACFAC();
  sub_1C23AEBDC(&qword_1EA2E24F8, (void (*)(uint64_t))sub_1C23ACFAC);
  sub_1C25507D0();
  if (!v1)
  {
    type metadata accessor for LabTipFeedItemData();
    v9[14] = 1;
    sub_1C25507A0();
    v9[13] = 2;
    sub_1C25507C0();
    v9[12] = 3;
    sub_1C254CB40();
    sub_1C23AEBDC(&qword_1EA2DE8E8, MEMORY[0x1E4F27990]);
    sub_1C25507D0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t LabTipFeedItemData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = sub_1C254CB40();
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C23ACFAC();
  uint64_t v29 = v6;
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  double v28 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C23ADE28(0, &qword_1EA2E2500, MEMORY[0x1E4FBBDC0]);
  uint64_t v30 = v8;
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = type metadata accessor for LabTipFeedItemData();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1Tm(a1, a1[3]);
  sub_1C23ADDD4();
  sub_1C2550A50();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  uint64_t v22 = v5;
  uint64_t v14 = v27;
  char v34 = 0;
  sub_1C23AEBDC(&qword_1EA2E2508, (void (*)(uint64_t))sub_1C23ACFAC);
  sub_1C2550740();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v13, v28, v29);
  char v33 = 1;
  uint64_t v15 = sub_1C2550710();
  id v16 = (uint64_t *)&v13[*(int *)(v11 + 20)];
  *id v16 = v15;
  v16[1] = v17;
  char v32 = 2;
  uint64_t v18 = sub_1C2550730();
  double v28 = (char *)v11;
  *(void *)&v13[*(int *)(v11 + 24)] = v18;
  char v31 = 3;
  sub_1C23AEBDC(&qword_1EA2DE8D8, MEMORY[0x1E4F27990]);
  uint64_t v19 = v25;
  sub_1C2550740();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v30);
  (*(void (**)(void, char *, uint64_t))(v23 + 32))(*((int *)v28 + 7), v22, v19);
  sub_1C23ADE8C(0, v24);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_1C23ADEF0(0);
}

uint64_t sub_1C23ADCA0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LabTipFeedItemData.init(from:)(a1, a2);
}

uint64_t sub_1C23ADCB8(void *a1)
{
  return LabTipFeedItemData.encode(to:)(a1);
}

uint64_t _s15HealthRecordsUI18LabTipFeedItemDataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1C23AD004();
  sub_1C23AEBDC(&qword_1EA2E2538, (void (*)(uint64_t))sub_1C23AD004);
  if ((sub_1C254F290() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for LabTipFeedItemData();
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (sub_1C2550870() & 1) == 0 || *(void *)(a1 + *(int *)(v4 + 24)) != *(void *)(a2 + *(int *)(v4 + 24))) {
    return 0;
  }
  return sub_1C254CB10();
}

unint64_t sub_1C23ADDD4()
{
  unint64_t result = qword_1EA2E24F0;
  if (!qword_1EA2E24F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E24F0);
  }
  return result;
}

void sub_1C23ADE28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C23ADDD4();
    unint64_t v7 = a3(a1, &type metadata for LabTipFeedItemData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C23ADE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LabTipFeedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C23ADEF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LabTipFeedItemData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for LabTipFeedItemData(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1C23ACFAC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    uint64_t v14 = *(uint64_t *)((char *)a2 + v9);
    *uint64_t v10 = v12;
    v10[1] = v13;
    *(uint64_t *)((char *)a1 + v9) = v14;
    uint64_t v15 = a3[7];
    id v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_1C254CB40();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
  }
  return a1;
}

uint64_t destroy for LabTipFeedItemData(uint64_t a1, uint64_t a2)
{
  sub_1C23ACFAC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_1C254CB40();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t initializeWithCopy for LabTipFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1C23ACFAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = *(void *)(a2 + v8);
  *uint64_t v9 = v11;
  v9[1] = v12;
  *(void *)(a1 + v8) = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1C254CB40();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  v18(v15, v16, v17);
  return a1;
}

uint64_t assignWithCopy for LabTipFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1C23ACFAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for LabTipFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1C23ACFAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for LabTipFeedItemData(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1C23ACFAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_1C254CB40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for LabTipFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C23AE4E0);
}

uint64_t sub_1C23AE4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C23ACFAC();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1C254CB40();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for LabTipFeedItemData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C23AE624);
}

void sub_1C23AE624(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1C23ACFAC();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1C254CB40();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    v12(v14, a2, a2, v13);
  }
}

void sub_1C23AE754()
{
  sub_1C23ACFAC();
  if (v0 <= 0x3F)
  {
    sub_1C254CB40();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for LabTipFeedItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C23AE900);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LabTipFeedItemData.CodingKeys()
{
  return &type metadata for LabTipFeedItemData.CodingKeys;
}

unint64_t sub_1C23AE93C()
{
  unint64_t result = qword_1EA2E2520;
  if (!qword_1EA2E2520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2520);
  }
  return result;
}

unint64_t sub_1C23AE994()
{
  unint64_t result = qword_1EA2E2528;
  if (!qword_1EA2E2528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2528);
  }
  return result;
}

unint64_t sub_1C23AE9EC()
{
  unint64_t result = qword_1EA2E2530;
  if (!qword_1EA2E2530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA2E2530);
  }
  return result;
}

uint64_t sub_1C23AEA40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x747065636E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C2581150 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C2581170 || (sub_1C2550870() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C2550870();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1C23AEBDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id static UIColor.dynamicColor(default:dark:)(void *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  id v5 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  void v11[4] = sub_1C23B0A00;
  long long v11[5] = v4;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1C23B0A44;
  v11[3] = &block_descriptor_44;
  char v6 = _Block_copy(v11);
  id v7 = a2;
  id v8 = a1;
  id v9 = objc_msgSend(v5, sel_initWithDynamicProvider_, v6);
  _Block_release(v6);
  swift_release();
  return v9;
}

uint64_t sub_1C23AED1C()
{
  sub_1C23B0AF0();
  uint64_t result = sub_1C254FEE0();
  qword_1EA2E2540 = result;
  return result;
}

id static UIColor.hrui_tableViewCellHighlightColor.getter()
{
  return sub_1C21A4D60(&qword_1EA2DD720, (void **)&qword_1EA2E2540);
}

id sub_1C23AED74(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EA2DD720, (void **)&qword_1EA2E2540);
}

id sub_1C23AED98()
{
  if (qword_1EBB6D8B0 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_1EBB6EEB0;
  qword_1EA2E2548 = qword_1EBB6EEB0;
  return v0;
}

id static UIColor.hrui_clinicalDocuments.getter()
{
  return sub_1C21A4D60(&qword_1EA2DD728, (void **)&qword_1EA2E2548);
}

id sub_1C23AEE20(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EA2DD728, (void **)&qword_1EA2E2548);
}

uint64_t sub_1C23AEE44(uint64_t a1)
{
  return sub_1C23B0180(a1, (uint64_t)&unk_1F1D97DF0, (uint64_t)sub_1C23B0AB8, (uint64_t)&block_descriptor_104, &qword_1EBB6EEB0);
}

id UIColor.init(decimalRed:green:blue:alpha:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return objc_msgSend(v8, sel_initWithRed_green_blue_alpha_, (double)a1 / 255.0, (double)a2 / 255.0, (double)a3 / 255.0, a4);
}

id static UIColor.dynamicColor(default:defaultHighConstrast:dark:darkHighConstrast:)(void *a1, void *a2, void *a3, void *a4)
{
  id v8 = (void *)swift_allocObject();
  v8[2] = a4;
  v8[3] = a3;
  void v8[4] = a2;
  void v8[5] = a1;
  id v9 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  void v17[4] = sub_1C23B0AB8;
  v17[5] = v8;
  v17[0] = MEMORY[0x1E4F143A8];
  v17[1] = 1107296256;
  v17[2] = sub_1C23B0A44;
  v17[3] = &block_descriptor_6_3;
  unint64_t v10 = _Block_copy(v17);
  id v11 = a4;
  id v12 = a3;
  id v13 = a2;
  id v14 = a1;
  id v15 = objc_msgSend(v9, sel_initWithDynamicProvider_, v10);
  _Block_release(v10);
  swift_release();
  return v15;
}

id static UIColor.hrui_healthRecords.getter()
{
  return sub_1C21A4D60(&qword_1EBB6D8B0, (void **)&qword_1EBB6EEB0);
}

id sub_1C23AF034(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EBB6D8B0, (void **)&qword_1EBB6EEB0);
}

uint64_t sub_1C23AF058()
{
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_systemBlueColor);
  id v2 = objc_msgSend(v0, sel_systemDarkBlueColor);
  id v3 = objc_msgSend(v0, sel_systemBlueColor);
  id v4 = objc_msgSend(v0, sel_systemBlueColor);
  id v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v14[4] = sub_1C23B0AB8;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  long long v14[2] = sub_1C23B0A44;
  void v14[3] = &block_descriptor_97;
  id v7 = _Block_copy(v14);
  id v8 = v4;
  id v9 = v3;
  id v10 = v2;
  id v11 = v1;
  id v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  uint64_t result = swift_release();
  qword_1EBB6F4B8 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_clinicalNotes.getter()
{
  return sub_1C21A4D60(&qword_1EBB6F4C8, (void **)&qword_1EBB6F4B8);
}

id sub_1C23AF218(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EBB6F4C8, (void **)&qword_1EBB6F4B8);
}

uint64_t sub_1C23AF23C()
{
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_systemPinkColor);
  id v2 = objc_msgSend(v0, sel_systemDarkPinkColor);
  id v3 = objc_msgSend(v0, sel_systemPinkColor);
  id v4 = objc_msgSend(v0, sel_systemPinkColor);
  id v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v14[4] = sub_1C23B0AB8;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  long long v14[2] = sub_1C23B0A44;
  void v14[3] = &block_descriptor_90;
  id v7 = _Block_copy(v14);
  id v8 = v4;
  id v9 = v3;
  id v10 = v2;
  id v11 = v1;
  id v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  uint64_t result = swift_release();
  qword_1EBB70008 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_clinicalVitals.getter()
{
  return sub_1C21A4D60(qword_1EBB6EFB0, (void **)&qword_1EBB70008);
}

id sub_1C23AF3FC(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, qword_1EBB6EFB0, (void **)&qword_1EBB70008);
}

uint64_t sub_1C23AF420()
{
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_systemCyanColor);
  id v2 = objc_msgSend(v0, sel_systemCyanColor);
  id v3 = objc_msgSend(v0, sel_systemCyanColor);
  id v4 = objc_msgSend(v0, sel_systemCyanColor);
  id v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v14[4] = sub_1C23B0AB8;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  long long v14[2] = sub_1C23B0A44;
  void v14[3] = &block_descriptor_83;
  id v7 = _Block_copy(v14);
  id v8 = v4;
  id v9 = v3;
  id v10 = v2;
  id v11 = v1;
  id v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  uint64_t result = swift_release();
  qword_1EBB6FFF8 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_medications.getter()
{
  return sub_1C21A4D60(&qword_1EBB6EF98, (void **)&qword_1EBB6FFF8);
}

id sub_1C23AF5DC(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EBB6EF98, (void **)&qword_1EBB6FFF8);
}

uint64_t sub_1C23AF600()
{
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_systemGreenColor);
  id v2 = objc_msgSend(v0, sel_systemDarkGreenColor);
  id v3 = objc_msgSend(v0, sel_systemGreenColor);
  id v4 = objc_msgSend(v0, sel_systemGreenColor);
  id v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v14[4] = sub_1C23B0AB8;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  long long v14[2] = sub_1C23B0A44;
  void v14[3] = &block_descriptor_76;
  id v7 = _Block_copy(v14);
  id v8 = v4;
  id v9 = v3;
  id v10 = v2;
  id v11 = v1;
  id v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  uint64_t result = swift_release();
  qword_1EBB70000 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_immunizations.getter()
{
  return sub_1C21A4D60(qword_1EBB6EFA0, (void **)&qword_1EBB70000);
}

id sub_1C23AF7C0(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, qword_1EBB6EFA0, (void **)&qword_1EBB70000);
}

uint64_t sub_1C23AF7E4()
{
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_systemBlueColor);
  id v2 = objc_msgSend(v0, sel_systemDarkBlueColor);
  id v3 = objc_msgSend(v0, sel_systemBlueColor);
  id v4 = objc_msgSend(v0, sel_systemBlueColor);
  id v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v14[4] = sub_1C23B0AB8;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  long long v14[2] = sub_1C23B0A44;
  void v14[3] = &block_descriptor_69;
  id v7 = _Block_copy(v14);
  id v8 = v4;
  id v9 = v3;
  id v10 = v2;
  id v11 = v1;
  id v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  uint64_t result = swift_release();
  qword_1EBB6FFD0 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_insurance.getter()
{
  return sub_1C21A4D60(&qword_1EBB6EF68, (void **)&qword_1EBB6FFD0);
}

id sub_1C23AF9A4(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EBB6EF68, (void **)&qword_1EBB6FFD0);
}

uint64_t sub_1C23AF9C8()
{
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_systemCyanColor);
  id v2 = objc_msgSend(v0, sel_systemCyanColor);
  id v3 = objc_msgSend(v0, sel_systemCyanColor);
  id v4 = objc_msgSend(v0, sel_systemCyanColor);
  id v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v14[4] = sub_1C23B0AB8;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  long long v14[2] = sub_1C23B0A44;
  void v14[3] = &block_descriptor_62;
  id v7 = _Block_copy(v14);
  id v8 = v4;
  id v9 = v3;
  id v10 = v2;
  id v11 = v1;
  id v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  uint64_t result = swift_release();
  qword_1EBB6FFC8 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_allergies.getter()
{
  return sub_1C21A4D60(&qword_1EBB6EF60, (void **)&qword_1EBB6FFC8);
}

id sub_1C23AFB84(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EBB6EF60, (void **)&qword_1EBB6FFC8);
}

uint64_t sub_1C23AFBA8()
{
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_systemBlueColor);
  id v2 = objc_msgSend(v0, sel_systemDarkBlueColor);
  id v3 = objc_msgSend(v0, sel_systemBlueColor);
  id v4 = objc_msgSend(v0, sel_systemBlueColor);
  id v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v14[4] = sub_1C23B0AB8;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  long long v14[2] = sub_1C23B0A44;
  void v14[3] = &block_descriptor_55_1;
  id v7 = _Block_copy(v14);
  id v8 = v4;
  id v9 = v3;
  id v10 = v2;
  id v11 = v1;
  id v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  uint64_t result = swift_release();
  qword_1EBB6FFE0 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_labResults.getter()
{
  return sub_1C21A4D60(qword_1EBB6EF78, (void **)&qword_1EBB6FFE0);
}

id sub_1C23AFD68(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, qword_1EBB6EF78, (void **)&qword_1EBB6FFE0);
}

uint64_t sub_1C23AFD8C()
{
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_systemIndigoColor);
  id v2 = objc_msgSend(v0, sel_systemIndigoColor);
  id v3 = objc_msgSend(v0, sel_systemIndigoColor);
  id v4 = objc_msgSend(v0, sel_systemIndigoColor);
  id v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v14[4] = sub_1C23B0AB8;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  long long v14[2] = sub_1C23B0A44;
  void v14[3] = &block_descriptor_48;
  id v7 = _Block_copy(v14);
  id v8 = v4;
  id v9 = v3;
  id v10 = v2;
  id v11 = v1;
  id v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  uint64_t result = swift_release();
  qword_1EBB6FFD8 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_conditions.getter()
{
  return sub_1C21A4D60(&qword_1EBB6EF70, (void **)&qword_1EBB6FFD8);
}

id sub_1C23AFF48(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EBB6EF70, (void **)&qword_1EBB6FFD8);
}

uint64_t sub_1C23AFF6C()
{
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_systemPurpleColor);
  id v2 = objc_msgSend(v0, sel_systemDarkPurpleColor);
  id v3 = objc_msgSend(v0, sel_systemPurpleColor);
  id v4 = objc_msgSend(v0, sel_systemPurpleColor);
  id v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v14[4] = sub_1C23B0AB8;
  v14[5] = v5;
  v14[0] = MEMORY[0x1E4F143A8];
  v14[1] = 1107296256;
  long long v14[2] = sub_1C23B0A44;
  void v14[3] = &block_descriptor_41_1;
  id v7 = _Block_copy(v14);
  id v8 = v4;
  id v9 = v3;
  id v10 = v2;
  id v11 = v1;
  id v12 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);

  uint64_t result = swift_release();
  qword_1EBB6FFE8 = (uint64_t)v12;
  return result;
}

id static UIColor.hrui_procedures.getter()
{
  return sub_1C21A4D60(&qword_1EBB6EF88, (void **)&qword_1EBB6FFE8);
}

id sub_1C23B012C(uint64_t a1, uint64_t a2)
{
  return sub_1C23B0928(a1, a2, &qword_1EBB6EF88, (void **)&qword_1EBB6FFE8);
}

uint64_t sub_1C23B0150(uint64_t a1)
{
  return sub_1C23B0180(a1, (uint64_t)&unk_1F1D97AD0, (uint64_t)sub_1C23B0AB8, (uint64_t)&block_descriptor_34_0, &qword_1EBB6FFF0);
}

uint64_t sub_1C23B0180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = self;
  id v9 = objc_msgSend(v8, sel_systemGrayColor);
  id v10 = objc_msgSend(v8, sel_systemDarkGrayColor);
  id v11 = objc_msgSend(v8, sel_systemGrayColor);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.658823529, 0.658823529, 0.678431373, 1.0);
  id v13 = (void *)swift_allocObject();
  v13[2] = v12;
  v13[3] = v11;
  void v13[4] = v10;
  v13[5] = v9;
  id v14 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  v22[4] = a3;
  v22[5] = v13;
  v22[0] = MEMORY[0x1E4F143A8];
  v22[1] = 1107296256;
  v22[2] = sub_1C23B0A44;
  v22[3] = a4;
  id v15 = _Block_copy(v22);
  id v16 = v12;
  id v17 = v11;
  id v18 = v10;
  id v19 = v9;
  id v20 = objc_msgSend(v14, sel_initWithDynamicProvider_, v15);
  _Block_release(v15);

  uint64_t result = swift_release();
  *a5 = v20;
  return result;
}